{"sha":"c41e484b5bac40662af6b3184c49beb6dd3b8d27","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM0MWU0ODRiNWJhYzQwNjYyYWY2YjMxODRjNDliZWI2ZGQzYjhkMjc=","commit":{"author":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-26T18:44:29Z"},"committer":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-26T18:44:29Z"},"message":"[SYNCOPE-289] Reverted to non-parameterized tests, introduced new profile (jaxrs) for CXF tests, added environment variable for content type (jaxrs.content.type)\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1438941 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d7737c99aff94333637253d4631ef66dca7ab96c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d7737c99aff94333637253d4631ef66dca7ab96c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c41e484b5bac40662af6b3184c49beb6dd3b8d27","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c41e484b5bac40662af6b3184c49beb6dd3b8d27","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c41e484b5bac40662af6b3184c49beb6dd3b8d27","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c41e484b5bac40662af6b3184c49beb6dd3b8d27/comments","author":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"committer":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"parents":[{"sha":"f0c0b3812e902d2f2a9ebf79f3b9b55a2a0752a9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f0c0b3812e902d2f2a9ebf79f3b9b55a2a0752a9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f0c0b3812e902d2f2a9ebf79f3b9b55a2a0752a9"}],"stats":{"total":228,"additions":106,"deletions":122},"files":[{"sha":"5389e29be731ecbecd6e2c211b34ed8b775c957e","filename":"core/pom.xml","status":"modified","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -1267,6 +1267,44 @@ under the License.\n       </build>\n     </profile>\n \n+    <profile>\n+      <id>jaxrs</id>\n+      <properties>\n+        <waitForCheck>true</waitForCheck>\n+        <javaagent />\n+      </properties>\n+      <build>\n+        <defaultGoal>clean verify</defaultGoal>\n+\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-failsafe-plugin</artifactId>\n+            <inherited>true</inherited>\n+            <configuration>\n+              <excludes>\n+                <exclude>**/*TestITCase.java</exclude>\n+              </excludes>\n+              <includes>\n+                <include>**/*TestITCaseJAXRS.java</include>\n+              </includes>\n+              <systemPropertyVariables>\n+                <jaxrsContentType>${jaxrs.content.type}</jaxrsContentType>\n+              </systemPropertyVariables>\n+            </configuration>\n+            <executions>\n+              <execution>\n+                <id>verify</id>\n+                <goals>\n+                  <goal>verify</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>        \n+      </build>\n+    </profile>\n+\n   </profiles>\n   \n </project>"},{"sha":"eb1f334310cb968d578a74e15f6f77ae734a1ecc","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":35,"deletions":35,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -69,18 +69,17 @@\n import org.apache.syncope.common.validation.SyncopeClientErrorHandler;\n import org.junit.Before;\n import org.junit.runner.RunWith;\n-import org.junit.runners.Parameterized;\n import org.junit.runners.Parameterized.Parameters;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.converter.HttpMessageConverter;\n import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;\n import org.springframework.test.context.ContextConfiguration;\n-import org.springframework.test.context.TestContextManager;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n import org.springframework.web.client.RestTemplate;\n \n-@RunWith(Parameterized.class)\n+@RunWith(SpringJUnit4ClassRunner.class)\n @ContextConfiguration(locations = {\"classpath:restClientContext.xml\", \"classpath:testJDBCContext.xml\"})\n public abstract class AbstractTest {\n \n@@ -94,8 +93,9 @@ public abstract class AbstractTest {\n     protected static final String ADMIN_UID = \"admin\";\n \n     protected static final String ADMIN_PWD = \"password\";\n-\n-    protected boolean activatedCXF;\n+    \n+    private static final String DEFAULT_CONTENT_TYPE = \"application/json\";\n+    private static final String ENV_KEY_CONTENT_TYPE = \"jaxrsContentType\";\n \n     @Autowired\n     private RestTemplate restTemplate;\n@@ -106,16 +106,16 @@ public abstract class AbstractTest {\n     @Autowired\n     private PreemptiveAuthHttpRequestFactory httpClientFactory;\n \n-    protected String contentType;\n-\n-    private TestContextManager testContextManager;\n-\n     @Autowired\n     protected JAXRSClientFactoryBean restClientFactory;\n \n     @Autowired\n     protected DataSource testDataSource;\n \n+    private boolean enabledCXF;\n+\n+    private String contentType;\n+    \n     protected UserService userService;\n \n     protected RoleService roleService;\n@@ -143,24 +143,10 @@ public abstract class AbstractTest {\n     protected UserRequestService userRequestService;\n \n     protected PolicyService policyService;\n-\n-    public AbstractTest(final String contentType) {\n-        this.contentType = contentType;\n-    }\n-\n-    private void setupContext() throws Exception {\n-        this.testContextManager = new TestContextManager(getClass());\n-        this.testContextManager.prepareTestInstance(this);\n-    }\n-\n-    protected void activateCXF() {\n-        activatedCXF = true;\n-    }\n-\n+ \n     @Before\n     public void setup() throws Exception {\n-        setupContext();\n-        if (!activatedCXF) {\n+        if (!enabledCXF) {\n             resetRestTemplate();\n         } else {\n             setupCXFServices();\n@@ -206,8 +192,6 @@ protected void resetRestTemplate() {\n \n     // BEGIN CXF Initialization\n     public void setupCXFServices() throws Exception {\n-        setupContext();\n-        restClientFactory.setUsername(ADMIN_UID);\n         userService = createServiceInstance(UserService.class);\n         roleService = createServiceInstance(RoleService.class);\n         resourceService = createServiceInstance(ResourceService.class);\n@@ -224,24 +208,20 @@ public void setupCXFServices() throws Exception {\n         userRequestService = createServiceInstance(UserRequestService.class);\n     }\n \n-    public void setupConentType(Client restClient) {\n-        restClient.type(contentType).accept(contentType);\n-    }\n-\n     protected <T> T createServiceInstance(Class<T> serviceClass) {\n         return createServiceInstance(serviceClass, ADMIN_UID);\n     }\n \n     protected <T> T createServiceInstance(Class<T> serviceClass, String username) {\n-        return createServiceInstance(serviceClass, username, null);\n+        return createServiceInstance(serviceClass, username, ADMIN_PWD);\n     }\n \n     protected <T> T createServiceInstance(Class<T> serviceClass, String username, String password) {\n         restClientFactory.setUsername(username);\n         restClientFactory.setPassword(password);\n         restClientFactory.setServiceClass(serviceClass);\n         T serviceProxy = restClientFactory.create(serviceClass);\n-        setupConentType(WebClient.client(serviceProxy));\n+        setupContentType(WebClient.client(serviceProxy));\n         return serviceProxy;\n     }\n \n@@ -251,12 +231,24 @@ public WebClient createWebClient(String path) {\n         wc.path(path);\n         return wc;\n     }\n+\n+    public void setupContentType(Client restClient) {\n+        if (contentType == null) {\n+            String envContentType = System.getProperty(ENV_KEY_CONTENT_TYPE);\n+            if ((envContentType != null) && (!envContentType.isEmpty())) {\n+                contentType = envContentType;\n+            } else {\n+                contentType = DEFAULT_CONTENT_TYPE;\n+            }\n+        }\n+        restClient.type(contentType).accept(contentType);\n+    }\n     // END CXF Initialization\n \n     public <T> T getObject(final Response response, final Class<T> type, final Object serviceProxy) {\n         assertNotNull(response);\n         assertNotNull(response.getLocation());\n-        if (!activatedCXF) {\n+        if (!enabledCXF) {\n             return getObjectSpring(response, type);\n         } else {\n             return getObjectCXF(response, type, serviceProxy);\n@@ -267,14 +259,22 @@ private <T> T getObjectSpring(final Response response, final Class<T> type) {\n         return restTemplate.getForEntity(response.getLocation(), type).getBody();\n     }\n \n+    public void setEnabledCXF(boolean enabledCXF) {\n+        this.enabledCXF = enabledCXF;\n+    }\n+\n+    public void setContentType(String contentType) {\n+        this.contentType = contentType;\n+    }\n+\n     private static <T> T getObjectCXF(final Response response, final Class<T> type, final Object serviceProxy) {\n         String location = response.getLocation().toString();\n         WebClient webClient = WebClient.fromClient(WebClient.client(serviceProxy));\n         webClient.to(location, false);\n \n         return webClient.get(type);\n     }\n-\n+    \n     protected static String getUUIDString() {\n         return UUID.randomUUID().toString().substring(0, 8);\n     }"},{"sha":"53f62ca41d0232d965ad10f80127fc65b1b4c98e","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -53,11 +53,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class AuthenticationTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public AuthenticationTestITCase(final String contentType) {\n-        super(contentType);\n-     }\n-\n     @Test\n     public void testAdminEntitlements() {\n         // 1. as anonymous, read all available entitlements"},{"sha":"b304a32f90ecb8edfcdb019dfa8b2b3003578c2a","filename":"core/src/test/java/org/apache/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -36,11 +36,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class ConfigurationTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public ConfigurationTestITCase(String contentType) {\n-        super(contentType);\n-     }\n-\n     @Test\n     public void create() {\n         ConfigurationTO configurationTO = new ConfigurationTO();"},{"sha":"de32fab557c2234f936a57fa2c67e650f38bba01","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -57,11 +57,6 @@ public class ConnInstanceTestITCase extends AbstractTest {\n \n     private static String bundlesDirectory;\n \n-    // Enable running test more than once with parameters\n-    public ConnInstanceTestITCase(final String contentType) {\n-        super(contentType);\n-    }\n-\n     @BeforeClass\n     public static void init()\n             throws IOException {"},{"sha":"8db5016373ee84ea2fe74642f543985d948e897d","filename":"core/src/test/java/org/apache/syncope/core/rest/DerivedSchemaTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FDerivedSchemaTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -39,11 +39,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class DerivedSchemaTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public DerivedSchemaTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void list() {\n         @SuppressWarnings(\"unchecked\")"},{"sha":"bf5c254897d32ba98a3c0062b6755a7318e71448","filename":"core/src/test/java/org/apache/syncope/core/rest/LoggerTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FLoggerTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -39,11 +39,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class LoggerTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public LoggerTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void listLogs() {\n         List<LoggerTO> loggers = loggerService.list(LoggerType.NORMAL);"},{"sha":"beacbfe9c7d56187f198479c63648454fcc0dee5","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -43,11 +43,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class NotificationTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public NotificationTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void read() {\n         NotificationTO notificationTO = notificationService.read(100L);"},{"sha":"4d220cbc3fc092645727ad5dd594269f5604c942","filename":"core/src/test/java/org/apache/syncope/core/rest/PolicyTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FPolicyTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -42,11 +42,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class PolicyTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public PolicyTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void listByType() {\n         List<SyncPolicyTO> policyTOs = policyService.list(PolicyType.SYNC);"},{"sha":"f283db563d53ed21a40291127919695a4e34b33a","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -53,11 +53,6 @@ ReportTO createReport(ReportTO report) {\n         return reportService.read(reportId);\n     }\n \n-    // Enable running test more than once with parameters\n-    public ReportTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void getReportletClasses() {\n         Set<String> reportletClasses = reportService.getReportletConfClasses();"},{"sha":"6d76cd09900269b00569d139bf5b76cfb6d3c730","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -51,11 +51,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class ResourceTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public ResourceTestITCase(final String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void getPropagationActionsClasses() {\n         Set<PropagationActionClassTO> actions = resourceService.getPropagationActionsClasses();"},{"sha":"3e7c057d64b0bf4d10b5ddfcc8ab4b2cd300c75a","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -47,11 +47,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class RoleTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public RoleTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     private RoleTO buildBasicRoleTO(final String name) {\n         RoleTO roleTO = new RoleTO();\n         roleTO.setName(name + getUUIDString());"},{"sha":"bae8af8d10c336558a652fdfef57b952095f641d","filename":"core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -50,11 +50,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class SchemaTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public SchemaTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void create() {\n         SchemaTO schemaTO = buildSchemaTO(\"testAttribute\", SchemaType.String);"},{"sha":"f818e161f928ccf579a9795b754e21fd16a34fc2","filename":"core/src/test/java/org/apache/syncope/core/rest/SearchTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -41,11 +41,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class SearchTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public SearchTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void searchUser() {\n         // LIKE"},{"sha":"967edf21ca516b435e1da42fa0584d5b093be99c","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -66,11 +66,6 @@ public class TaskTestITCase extends AbstractTest {\n \n     private static final Long SYNC_TASK_ID = 4L;\n \n-    // Enable running test more than once with parameters\n-    public TaskTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void getJobClasses() {\n         Set<String> jobClasses = taskService.getJobClasses();"},{"sha":"aaad70d011a08bd7725af0023960d63bf089ab9a","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -46,11 +46,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class UserRequestTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public UserRequestTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void create() {\n         // 1. set create request not allowed"},{"sha":"b66dfbd7ed51c95e88dad3bd33b52939d9efdb90","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -32,7 +32,9 @@\n import java.util.Date;\n import java.util.List;\n import java.util.Map;\n+\n import javax.ws.rs.core.Response;\n+\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n import org.apache.syncope.common.mod.UserMod;\n@@ -75,11 +77,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class UserTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public UserTestITCase(final String contentType) {\n-        super(contentType);\n-    }\n-\n     private ConnObjectTO readUserConnObj(final String resourceName, final String userId) {\n         return resourceService.getConnector(resourceName, AttributableType.USER, userId);\n     }\n@@ -122,7 +119,6 @@ public void selfRead() {\n         assertEquals(\"user1\", userTO.getUsername());\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n     @Test\n     public void createUserWithNoPropagation() {\n         // get task list\n@@ -407,7 +403,6 @@ public void createWithException() {\n         userService.create(newUserTO);\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n     @Test\n     public void create() {\n         // get task list"},{"sha":"6f40602d51f215c97663d0af20869b24da554864","filename":"core/src/test/java/org/apache/syncope/core/rest/VirtualSchemaTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirtualSchemaTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -37,11 +37,6 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class VirtualSchemaTestITCase extends AbstractTest {\n \n-    // Enable running test more than once with parameters\n-    public VirtualSchemaTestITCase(String contentType) {\n-        super(contentType);\n-    }\n-\n     @Test\n     public void list() {\n         @SuppressWarnings(\"unchecked\")"},{"sha":"26bc5eb0cd2db5114ce38928a8167e19767b09ee","filename":"core/src/test/java/org/apache/syncope/core/rest/WorkflowTestITCase.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -34,11 +34,6 @@ public class WorkflowTestITCase extends AbstractTest {\n \r\n     public static final String USER_TYPE = \"user\";\r\n \r\n-    // Enable running test more than once with parameters\r\n-    public WorkflowTestITCase(String contentType) {\r\n-        super(contentType);\r\n-    }\r\n-\r\n     @Test //TODO TestCase needs to be extended\r\n     public void testGetUserDefinition() {\r\n         WorkflowDefinitionTO definition = workflowService.getDefinition(USER_TYPE);\r"},{"sha":"019093f9409bcbaab94a3b8424bf7b24806372a7","filename":"core/src/test/java/org/apache/syncope/core/rest/jaxrs/ConfigurationTestITCaseJAXRS.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fjaxrs%2FConfigurationTestITCaseJAXRS.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c41e484b5bac40662af6b3184c49beb6dd3b8d27/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fjaxrs%2FConfigurationTestITCaseJAXRS.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fjaxrs%2FConfigurationTestITCaseJAXRS.java?ref=c41e484b5bac40662af6b3184c49beb6dd3b8d27","patch":"@@ -0,0 +1,31 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.core.rest.jaxrs;\r\n+\r\n+import org.apache.syncope.core.rest.ConfigurationTestITCase;\r\n+import org.junit.FixMethodOrder;\r\n+import org.junit.runners.MethodSorters;\r\n+\r\n+@FixMethodOrder(MethodSorters.JVM)\r\n+public class ConfigurationTestITCaseJAXRS extends ConfigurationTestITCase {\r\n+    \r\n+    public ConfigurationTestITCaseJAXRS() {\r\n+       setEnabledCXF(true);\r\n+    }\r\n+}\r"}]}