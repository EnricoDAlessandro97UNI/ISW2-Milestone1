{"sha":"915f3c325d3dde66f8c8a891b3b0a04a165f7e54","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkxNWYzYzMyNWQzZGRlNjZmOGM4YTg5MWIzYjBhMDRhMTY1ZjdlNTQ=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-02-19T15:32:09Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-02-19T15:32:26Z"},"message":"[SYNCOPE-768] this fix extends search to null attributes as well + improve plain schema validation by preventing usage of TO classes field names","tree":{"sha":"18b5c346009fedebe22f406b22f3825ce14f8b77","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/18b5c346009fedebe22f406b22f3825ce14f8b77"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/915f3c325d3dde66f8c8a891b3b0a04a165f7e54","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/915f3c325d3dde66f8c8a891b3b0a04a165f7e54","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/915f3c325d3dde66f8c8a891b3b0a04a165f7e54","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"d2feda5e663e89edbb44e7f86bea33b4a2f72b08","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d2feda5e663e89edbb44e7f86bea33b4a2f72b08","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d2feda5e663e89edbb44e7f86bea33b4a2f72b08"}],"stats":{"total":192,"additions":118,"deletions":74},"files":[{"sha":"17123b5098bab1edd5ccd6935fe9d9f0db90f1d5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/EntityTOUtils.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -18,11 +18,29 @@\n  */\n package org.apache.syncope.common.lib;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n import org.apache.commons.collections4.Transformer;\n+import org.apache.syncope.common.lib.search.SearchableFields;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n \n public final class EntityTOUtils {\n \n+    public static final List<String> ANY_FIELDS;\n+\n+    static {\n+        List<String> anyFields = new ArrayList<>();\n+        anyFields.addAll(SearchableFields.get(UserTO.class));\n+        anyFields.addAll(SearchableFields.get(GroupTO.class));\n+        anyFields.addAll(SearchableFields.get(AnyObjectTO.class));\n+\n+        ANY_FIELDS = Collections.unmodifiableList(anyFields);\n+    }\n+\n     public static <KEY, E extends EntityTO<KEY>> Transformer<E, KEY> keyTransformer() {\n         return new Transformer<E, KEY>() {\n "},{"sha":"2e281cf3a03d7383ad191980c423aca894a214d4","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/search/SearchCondVisitor.java","status":"modified","additions":2,"deletions":14,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondVisitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondVisitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsearch%2FSearchCondVisitor.java?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -25,11 +25,8 @@\n import org.apache.cxf.jaxrs.ext.search.SearchCondition;\n import org.apache.cxf.jaxrs.ext.search.SearchUtils;\n import org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor;\n-import org.apache.syncope.common.lib.search.SearchableFields;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.search.SpecialAttr;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.api.dao.search.MembershipCond;\n import org.apache.syncope.core.persistence.api.dao.search.ResourceCond;\n@@ -46,15 +43,6 @@\n  */\n public class SearchCondVisitor extends AbstractSearchConditionVisitor<SearchBean, SearchCond> {\n \n-    private static final List<String> ANY_FIELDS;\n-\n-    static {\n-        ANY_FIELDS = new ArrayList<>();\n-        ANY_FIELDS.addAll(SearchableFields.get(UserTO.class));\n-        ANY_FIELDS.addAll(SearchableFields.get(GroupTO.class));\n-        ANY_FIELDS.addAll(SearchableFields.get(AnyObjectTO.class));\n-    }\n-\n     private String realm;\n \n     private SearchCond searchCond;\n@@ -68,7 +56,7 @@ public void setRealm(final String realm) {\n     }\n \n     private AttributeCond createAttributeCond(final String schema) {\n-        AttributeCond attributeCond = ANY_FIELDS.contains(schema)\n+        AttributeCond attributeCond = EntityTOUtils.ANY_FIELDS.contains(schema)\n                 ? new AnyCond()\n                 : new AttributeCond();\n         attributeCond.setSchema(schema);"},{"sha":"b0b116229e7c443b98f35bf20cc1e781ade7b7ef","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -260,10 +260,18 @@ private StringBuilder buildSelect(final OrderBySupport orderBySupport) {\n         return select;\n     }\n \n-    private StringBuilder buildWhere(final OrderBySupport orderBySupport) {\n+    private StringBuilder buildWhere(final OrderBySupport orderBySupport, final AnyTypeKind typeKind) {\n+        SearchSupport svs = new SearchSupport(typeKind);\n         final StringBuilder where = new StringBuilder(\" u\");\n         for (SearchSupport.SearchView searchView : orderBySupport.views) {\n-            where.append(',').append(searchView.name).append(' ').append(searchView.alias);\n+            where.append(',');\n+            if (searchView.name.equals(svs.attr().name)) {\n+                where.append(\" (SELECT * FROM \").append(searchView.name).append(\" UNION \").\n+                        append(\"SELECT * FROM \").append(svs.nullAttr().name).append(')');\n+            } else {\n+                where.append(searchView.name);\n+            }\n+            where.append(' ').append(searchView.alias);\n         }\n         where.append(\" WHERE \");\n         for (SearchSupport.SearchView searchView : orderBySupport.views) {\n@@ -366,10 +374,10 @@ private <T extends Any<?>> List<T> doSearch(final Set<String> adminRealms,\n         OrderBySupport orderBySupport = parseOrderBy(typeKind, svs, orderBy);\n         if (queryString.charAt(0) == '(') {\n             queryString.insert(0, buildSelect(orderBySupport));\n-            queryString.append(buildWhere(orderBySupport));\n+            queryString.append(buildWhere(orderBySupport, typeKind));\n         } else {\n             queryString.insert(0, buildSelect(orderBySupport).append('('));\n-            queryString.append(')').append(buildWhere(orderBySupport));\n+            queryString.append(')').append(buildWhere(orderBySupport, typeKind));\n         }\n         queryString.\n                 append(getAdminRealmsFilter(adminRealms, svs)).append(')')."},{"sha":"4bbb240349aba3f658877e573ffd775213b4c398","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PlainSchemaValidator.java","status":"modified","additions":22,"deletions":14,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPlainSchemaValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPlainSchemaValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPlainSchemaValidator.java?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -20,6 +20,7 @@\n \n import javax.validation.ConstraintValidatorContext;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n@@ -28,30 +29,37 @@ public class PlainSchemaValidator extends AbstractValidator<PlainSchemaCheck, Pl\n \n     @Override\n     public boolean isValid(final PlainSchema schema, final ConstraintValidatorContext context) {\n-        boolean isValid = schema.getType() != AttrSchemaType.Enum\n-                || StringUtils.isNotBlank(schema.getEnumerationValues());\n+        boolean isValid = schema.getKey() != null && !EntityTOUtils.ANY_FIELDS.contains(schema.getKey());\n         if (!isValid) {\n-            context.disableDefaultConstraintViolation();\n             context.buildConstraintViolationWithTemplate(\n-                    getTemplate(EntityViolationType.InvalidSchemaEnum, \"Enumeration values missing\")).\n-                    addPropertyNode(\"enumerationValues\").addConstraintViolation();\n+                    getTemplate(EntityViolationType.InvalidName, \"Invalid PlainSchema name\")).\n+                    addPropertyNode(\"name\").addConstraintViolation();\n         } else {\n-            isValid = schema.getType() != AttrSchemaType.Encrypted\n-                    || (schema.getSecretKey() != null && schema.getCipherAlgorithm() != null);\n+            isValid = schema.getType() != AttrSchemaType.Enum\n+                    || StringUtils.isNotBlank(schema.getEnumerationValues());\n             if (!isValid) {\n                 context.disableDefaultConstraintViolation();\n                 context.buildConstraintViolationWithTemplate(\n-                        getTemplate(EntityViolationType.InvalidSchemaEncrypted,\n-                                \"SecretKey or CipherAlgorithm missing\")).\n-                        addPropertyNode(\"secretKey\").addPropertyNode(\"cipherAlgorithm\").addConstraintViolation();\n+                        getTemplate(EntityViolationType.InvalidSchemaEnum, \"Enumeration values missing\")).\n+                        addPropertyNode(\"enumerationValues\").addConstraintViolation();\n             } else {\n-                isValid = !schema.isMultivalue() || !schema.isUniqueConstraint();\n+                isValid = schema.getType() != AttrSchemaType.Encrypted\n+                        || (schema.getSecretKey() != null && schema.getCipherAlgorithm() != null);\n                 if (!isValid) {\n                     context.disableDefaultConstraintViolation();\n                     context.buildConstraintViolationWithTemplate(\n-                            getTemplate(EntityViolationType.InvalidSchemaMultivalueUnique,\n-                                    \"Cannot contemporary be multivalue and have unique constraint\")).\n-                            addPropertyNode(\"multiValue\").addConstraintViolation();\n+                            getTemplate(EntityViolationType.InvalidSchemaEncrypted,\n+                                    \"SecretKey or CipherAlgorithm missing\")).\n+                            addPropertyNode(\"secretKey\").addPropertyNode(\"cipherAlgorithm\").addConstraintViolation();\n+                } else {\n+                    isValid = !schema.isMultivalue() || !schema.isUniqueConstraint();\n+                    if (!isValid) {\n+                        context.disableDefaultConstraintViolation();\n+                        context.buildConstraintViolationWithTemplate(\n+                                getTemplate(EntityViolationType.InvalidSchemaMultivalueUnique,\n+                                        \"Cannot contemporary be multivalue and have unique constraint\")).\n+                                addPropertyNode(\"multiValue\").addConstraintViolation();\n+                    }\n                 }\n             }\n         }"},{"sha":"84ad5ebbbea3adb33d607c6403cbfab3e11b7f8b","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -316,7 +316,7 @@ under the License.\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n   <PlainSchema name=\"surname\" type=\"String\" anyTypeClass_name=\"minimal user\"\n                mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-  <PlainSchema name=\"type\" type=\"String\" anyTypeClass_name=\"other\"\n+  <PlainSchema name=\"ctype\" type=\"String\" anyTypeClass_name=\"other\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n   <PlainSchema name=\"email\" type=\"String\" anyTypeClass_name=\"minimal user\"\n                mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n@@ -396,7 +396,7 @@ under the License.\n   <APlainAttr id=\"4\" owner_id=\"2\" schema_name=\"location\"/>\n   <APlainAttrValue id=\"4\" attribute_id=\"4\" stringValue=\"2nd floor\"/>\n \n-  <UPlainAttr id=\"99\" owner_id=\"1\" schema_name=\"type\"/>\n+  <UPlainAttr id=\"99\" owner_id=\"1\" schema_name=\"ctype\"/>\n   <UPlainAttrValue id=\"9\" attribute_id=\"99\" stringValue=\"G\"/>\n   <UPlainAttr id=\"100\" owner_id=\"1\" schema_name=\"fullname\"/>\n   <UPlainAttrUniqueValue id=\"10\" attribute_id=\"100\" schema_name=\"fullname\" stringValue=\"Gioacchino Rossini\"/>\n@@ -456,7 +456,7 @@ under the License.\n   <UPlainAttrValue id=\"35\" attribute_id=\"124\" stringValue=\"verdi@syncope.org\"/>\n   <UPlainAttr id=\"125\" owner_id=\"3\" schema_name=\"email\"/>\n   <UPlainAttrValue id=\"36\" attribute_id=\"125\" stringValue=\"vivaldi@syncope.org\"/>\n-  <UPlainAttr id=\"126\" owner_id=\"3\" schema_name=\"type\"/>\n+  <UPlainAttr id=\"126\" owner_id=\"3\" schema_name=\"ctype\"/>\n   <UPlainAttrValue id=\"37\" attribute_id=\"126\" stringValue=\"F\"/>\n    \n   <GPlainAttr id=\"600\" owner_id=\"1\" schema_name=\"icon\"/>\n@@ -729,7 +729,7 @@ under the License.\n                extAttrName=\"fullname\" intAttrName=\"surname\" intMappingType=\"UserPlainSchema\" mandatoryCondition=\"true\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n   <MappingItem id=\"336\" mapping_id=\"15\"\n-               extAttrName=\"type\" intAttrName=\"type\" intMappingType=\"UserPlainSchema\" mandatoryCondition=\"true\"\n+               extAttrName=\"type\" intAttrName=\"ctype\" intMappingType=\"UserPlainSchema\" mandatoryCondition=\"true\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n   <MappingItem id=\"337\" mapping_id=\"15\"\n                extAttrName=\"name\" intAttrName=\"firstname\" intMappingType=\"UserPlainSchema\" mandatoryCondition=\"false\"\n@@ -759,7 +759,7 @@ under the License.\n                extAttrName=\"__PASSWORD__\" intMappingType=\"Password\" mandatoryCondition=\"true\"\n                connObjectKey=\"0\" password=\"1\" purpose=\"BOTH\"/>\n   <MappingItem id=\"108\" extAttrName=\"type\" mapping_id=\"1\"\n-               intAttrName=\"type\" intMappingType=\"UserPlainSchema\" mandatoryCondition=\"true\"\n+               intAttrName=\"ctype\" intMappingType=\"UserPlainSchema\" mandatoryCondition=\"true\"\n                connObjectKey=\"0\" password=\"0\" purpose=\"BOTH\"/>\n   <MappingItem id=\"109\" extAttrName=\"surname\" mapping_id=\"1\"\n                intAttrName=\"surname\" intMappingType=\"UserPlainSchema\" mandatoryCondition=\"type == 'F'\"\n@@ -984,7 +984,7 @@ under the License.\n         destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n         syncMode=\"INCREMENTAL\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\"/>\n   <AnyTemplateSyncTask id=\"41\" syncTask_id=\"4\" anyType_name=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"readonly\":false,\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"leftType\":null,\"leftKey\":0,\"rightType\":\"GROUP\",\"rightKey\":8,\"groupName\":null}],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"type\",\"readonly\":false,\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"readonly\":false,\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"leftType\":null,\"leftKey\":0,\"rightType\":\"GROUP\",\"rightKey\":8,\"groupName\":null}],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"readonly\":false,\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n   <AnyTemplateSyncTask id=\"42\" syncTask_id=\"4\" anyType_name=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"SchedTask\" type=\"SCHEDULED\" id=\"5\" name=\"SampleJob Task\"  active=\"1\"\n@@ -997,7 +997,7 @@ under the License.\n         destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" syncMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\"/>\n   <AnyTemplateSyncTask id=\"71\" syncTask_id=\"7\" anyType_name=\"USER\"\n-                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"type\",\"readonly\":false,\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;surname&apos;\"]}]}'/>\n+                       template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"ctype\",\"readonly\":false,\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;surname&apos;\"]}]}'/>\n   <AnyTemplateSyncTask id=\"72\" syncTask_id=\"7\" anyType_name=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"NotificationTask\" type=\"NOTIFICATION\" id=\"8\" sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" "},{"sha":"9e54279b6c69b4262de204cb8283674cba0a6d57","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":18,"deletions":20,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -102,35 +102,33 @@ public void component(final OddEvenItem<?> object, final IVisit<Component> visit\n     }\n \n     protected Component findSuccessNotification(final Page page, final String searchPath, final String key) {\n-        Component result =\n-                page.visitChildren(NotificationPanel.class, new IVisitor<NotificationPanel, Component>() {\n+        Component result = page.visitChildren(NotificationPanel.class, new IVisitor<NotificationPanel, Component>() {\n \n-                    @Override\n-                    public void component(final NotificationPanel object, final IVisit<Component> visit) {\n+            @Override\n+            public void component(final NotificationPanel object, final IVisit<Component> visit) {\n \n-                        if (object.getDefaultModelObjectAsString().equals(Constants.OPERATION_SUCCEEDED)) {\n-                            wicketTester.clickLink(object.getPageRelativePath());\n-                            visit.stop(object);\n-                        }\n-                    }\n-                });\n+                if (object.getDefaultModelObjectAsString().equals(Constants.OPERATION_SUCCEEDED)) {\n+                    wicketTester.clickLink(object.getPageRelativePath());\n+                    visit.stop(object);\n+                }\n+            }\n+        });\n         return result;\n     }\n \n     protected Component findErrorNotification(final Page page, final String searchPath, final String key) {\n-        Component result =\n-                page.visitChildren(NotificationPanel.class, new IVisitor<NotificationPanel, Component>() {\n+        Component result = page.visitChildren(NotificationPanel.class, new IVisitor<NotificationPanel, Component>() {\n \n-                    @Override\n-                    public void component(final NotificationPanel object, final IVisit<Component> visit) {\n+            @Override\n+            public void component(final NotificationPanel object, final IVisit<Component> visit) {\n \n-                        if (!object.getDefaultModelObjectAsString().equals(Constants.OPERATION_SUCCEEDED)) {\n-                            wicketTester.clickLink(object.getPageRelativePath());\n-                            visit.stop(object);\n-                        }\n+                if (!object.getDefaultModelObjectAsString().equals(Constants.OPERATION_SUCCEEDED)) {\n+                    wicketTester.clickLink(object.getPageRelativePath());\n+                    visit.stop(object);\n+                }\n \n-                    }\n-                });\n+            }\n+        });\n         return result;\n     }\n }"},{"sha":"2175ad2fb8db7535fca7cbd2448001130caff69c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SchemasITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -86,10 +86,10 @@ public void createPlainSchema() {\n     public void updatePlainSchema() {\n         browsingToPlainSchemas();\n \n-        Component result = findComponentByProp(KEY, PLAIN_DATATABLE_PATH, \"firstname\");\n+        Component result = findComponentByProp(KEY, PLAIN_DATATABLE_PATH, \"ctype\");\n \n         wicketTester.assertLabel(\n-                result.getPageRelativePath() + \":cells:1:cell\", \"firstname\");\n+                result.getPageRelativePath() + \":cells:1:cell\", \"ctype\");\n \n         wicketTester.clickLink(\n                 result.getPageRelativePath() + \":cells:7:cell:panelEdit:editLink\");"},{"sha":"6b4fb588a7b493cc0508f7b65247a5c4d7f712b7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PlainSchemaITCase.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPlainSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPlainSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPlainSchemaITCase.java?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -86,7 +86,13 @@ public void createWithNotPermittedName() {\n             fail(\"This should not be reacheable\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.InvalidPlainSchema, e.getType());\n-            assertTrue(e.getElements().iterator().next().contains(EntityViolationType.InvalidName.name()));\n+            boolean entityViolationTypeCheck = false;\n+            for (String element : e.getElements()) {\n+                if (!entityViolationTypeCheck) {\n+                    entityViolationTypeCheck = element.contains(EntityViolationType.InvalidName.name());\n+                }\n+            }\n+            assertTrue(entityViolationTypeCheck);\n         }\n     }\n "},{"sha":"6f15786669d90cadf699cd11751b794a742091d3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -24,6 +24,7 @@\n import static org.junit.Assert.assertTrue;\n \n import java.util.Collection;\n+import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IterableUtils;\n@@ -395,4 +396,21 @@ public void orderBy() {\n             assertNotNull(user);\n         }\n     }\n+\n+    @Test\n+    public void issueSYNCOPE768() {\n+        final List<UserTO> usersWithType = userService.search(\n+                new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"ctype\").notNullValue().query()).build()).\n+                getResult();\n+\n+        assertFalse(usersWithType.isEmpty());\n+        \n+        final PagedResult<UserTO> matchedUsers = userService.search(\n+                new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").notNullValue().query()).\n+                orderBy(SyncopeClient.getOrderByClauseBuilder().asc(\"ctype\").build()).build());\n+\n+        assertTrue(matchedUsers.getResult().size() > usersWithType.size());\n+    }\n }"},{"sha":"b039776a8384aa475355516dac030177408f5dc5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SyncTaskITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSyncTaskITCase.java?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -157,7 +157,7 @@ public void sync() throws Exception {\n         inUserTO.setUsername(userName);\n         inUserTO.getPlainAttrs().add(attrTO(\"firstname\", \"nome9\"));\n         inUserTO.getPlainAttrs().add(attrTO(\"surname\", \"cognome\"));\n-        inUserTO.getPlainAttrs().add(attrTO(\"type\", \"a type\"));\n+        inUserTO.getPlainAttrs().add(attrTO(\"ctype\", \"a type\"));\n         inUserTO.getPlainAttrs().add(attrTO(\"fullname\", \"nome cognome\"));\n         inUserTO.getPlainAttrs().add(attrTO(\"userId\", \"puccini@syncope.apache.org\"));\n         inUserTO.getPlainAttrs().add(attrTO(\"email\", \"puccini@syncope.apache.org\"));\n@@ -196,7 +196,7 @@ public void sync() throws Exception {\n             // check for user template\n             userTO = readUser(\"test7\");\n             assertNotNull(userTO);\n-            assertEquals(\"TYPE_OTHER\", userTO.getPlainAttrMap().get(\"type\").getValues().get(0));\n+            assertEquals(\"TYPE_OTHER\", userTO.getPlainAttrMap().get(\"ctype\").getValues().get(0));\n             assertEquals(3, userTO.getResources().size());\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_TESTDB));\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_WS2));\n@@ -215,7 +215,7 @@ public boolean evaluate(final AttrTO attributeTO) {\n \n             userTO = readUser(\"test8\");\n             assertNotNull(userTO);\n-            assertEquals(\"TYPE_8\", userTO.getPlainAttrMap().get(\"type\").getValues().get(0));\n+            assertEquals(\"TYPE_8\", userTO.getPlainAttrMap().get(\"ctype\").getValues().get(0));\n \n             // Check for ignored user - SYNCOPE-663\n             try {\n@@ -513,7 +513,7 @@ public void issueSYNCOPE68() {\n \n         userTO.getPlainAttrs().add(attrTO(\"firstname\", \"testuser2\"));\n         userTO.getPlainAttrs().add(attrTO(\"surname\", \"testuser2\"));\n-        userTO.getPlainAttrs().add(attrTO(\"type\", \"a type\"));\n+        userTO.getPlainAttrs().add(attrTO(\"ctype\", \"a type\"));\n         userTO.getPlainAttrs().add(attrTO(\"fullname\", \"a type\"));\n         userTO.getPlainAttrs().add(attrTO(\"userId\", \"testuser2@syncope.apache.org\"));\n         userTO.getPlainAttrs().add(attrTO(\"email\", \"testuser2@syncope.apache.org\"));"},{"sha":"1cccb74b5795db09ef7eef75af1111725f172b26","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/915f3c325d3dde66f8c8a891b3b0a04a165f7e54/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=915f3c325d3dde66f8c8a891b3b0a04a165f7e54","patch":"@@ -131,7 +131,7 @@ public static UserTO getSampleTO(final String email) {\n         userTO.getPlainAttrs().add(attrTO(\"fullname\", email));\n         userTO.getPlainAttrs().add(attrTO(\"firstname\", email));\n         userTO.getPlainAttrs().add(attrTO(\"surname\", \"surname\"));\n-        userTO.getPlainAttrs().add(attrTO(\"type\", \"a type\"));\n+        userTO.getPlainAttrs().add(attrTO(\"ctype\", \"a type\"));\n         userTO.getPlainAttrs().add(attrTO(\"userId\", email));\n         userTO.getPlainAttrs().add(attrTO(\"email\", email));\n         userTO.getPlainAttrs().add(attrTO(\"loginDate\", DATE_FORMAT.format(new Date())));\n@@ -235,7 +235,7 @@ public void enforceMandatoryCondition() {\n \n         AttrTO type = null;\n         for (AttrTO attr : userTO.getPlainAttrs()) {\n-            if (\"type\".equals(attr.getSchema())) {\n+            if (\"ctype\".equals(attr.getSchema())) {\n                 type = attr;\n             }\n         }\n@@ -440,7 +440,7 @@ public void create() {\n     public void createWithRequiredValueMissing() {\n         UserTO userTO = getUniqueSampleTO(\"a.b@c.it\");\n \n-        AttrTO type = userTO.getPlainAttrMap().get(\"type\");\n+        AttrTO type = userTO.getPlainAttrMap().get(\"ctype\");\n         userTO.getPlainAttrs().remove(type);\n \n         userTO.getMemberships().add(new MembershipTO.Builder().group(8L).build());\n@@ -453,7 +453,7 @@ public void createWithRequiredValueMissing() {\n             assertEquals(ClientExceptionType.RequiredValuesMissing, e.getType());\n         }\n \n-        userTO.getPlainAttrs().add(attrTO(\"type\", \"F\"));\n+        userTO.getPlainAttrs().add(attrTO(\"ctype\", \"F\"));\n \n         AttrTO surname = userTO.getPlainAttrMap().get(\"surname\");\n         userTO.getPlainAttrs().remove(surname);\n@@ -594,14 +594,14 @@ public void updateWithoutPassword() {\n         UserPatch userPatch = new UserPatch();\n         userPatch.setKey(userTO.getKey());\n         userPatch.getPlainAttrs().add(new AttrPatch.Builder().operation(PatchOperation.DELETE).\n-                attrTO(new AttrTO.Builder().schema(\"type\").build()).\n+                attrTO(new AttrTO.Builder().schema(\"ctype\").build()).\n                 build());\n \n         userTO = updateUser(userPatch).getAny();\n \n         assertNotNull(userTO);\n         assertNotNull(userTO.getDerAttrMap());\n-        assertFalse(userTO.getPlainAttrMap().containsKey(\"type\"));\n+        assertFalse(userTO.getPlainAttrMap().containsKey(\"ctype\"));\n     }\n \n     @Test(expected = SyncopeClientException.class)\n@@ -1551,11 +1551,11 @@ public void issueSYNCOPE265() {\n             UserPatch userPatch = new UserPatch();\n             userPatch.setKey(key);\n \n-            userPatch.getPlainAttrs().add(attrAddReplacePatch(\"type\", \"a type\"));\n+            userPatch.getPlainAttrs().add(attrAddReplacePatch(\"ctype\", \"a type\"));\n \n             UserTO userTO = updateUser(userPatch).getAny();\n \n-            assertEquals(\"a type\", userTO.getPlainAttrMap().get(\"type\").getValues().get(0));\n+            assertEquals(\"a type\", userTO.getPlainAttrMap().get(\"ctype\").getValues().get(0));\n         }\n     }\n "}]}