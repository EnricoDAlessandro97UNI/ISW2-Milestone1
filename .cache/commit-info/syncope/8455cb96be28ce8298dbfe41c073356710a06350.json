{"sha":"8455cb96be28ce8298dbfe41c073356710a06350","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg0NTVjYjk2YmUyOGNlODI5OGRiZmU0MWMwNzMzNTY3MTBhMDYzNTA=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-04-08T16:29:45Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-04-08T16:29:45Z"},"message":"[SYNCOPE-745] Provides notification and email template management. Still missing tests and tasks per notification.","tree":{"sha":"9dba49787d9416b4251e56467a4cc54ef9849054","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9dba49787d9416b4251e56467a4cc54ef9849054"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8455cb96be28ce8298dbfe41c073356710a06350","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8455cb96be28ce8298dbfe41c073356710a06350","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8455cb96be28ce8298dbfe41c073356710a06350","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8455cb96be28ce8298dbfe41c073356710a06350/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"91befa207e491a1afc147376fe5d4175a85b3764","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/91befa207e491a1afc147376fe5d4175a85b3764","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/91befa207e491a1afc147376fe5d4175a85b3764"}],"stats":{"total":4526,"additions":4219,"deletions":307},"files":[{"sha":"c5787ed657c59948524d5a7ddc3a0bffa11800b6","filename":"client/console/src/main/java/org/apache/syncope/client/console/approvals/ApprovalDetails.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fapprovals%2FApprovalDetails.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -40,8 +40,8 @@ public ApprovalDetails(final PageReference pageRef, final WorkflowFormTO formTO)\n         final UserTO userTO = new UserRestClient().read(formTO.getUserKey());\n         final List<String> anyTypeClasses = new AnyTypeRestClient().read(AnyTypeKind.USER.name()).getClasses();\n \n-        final AjaxWizard<AnyHandler<UserTO>> wizard\n-                = new UserWizardBuilder(\"wizard\", userTO, anyTypeClasses, pageRef).build(AjaxWizard.Mode.READONLY);\n+        final AjaxWizard<AnyHandler<UserTO>> wizard = new UserWizardBuilder(userTO, anyTypeClasses, pageRef).\n+                build(AjaxWizard.Mode.READONLY);\n \n         add(wizard);\n     }"},{"sha":"96d4ba692df3eaf1caf81fbc7870766aa31e1ca8","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -105,6 +105,8 @@ public final class Constants {\n \n     public static final String PREF_NOTIFICATION_PAGINATOR_ROWS = \"notification.paginator.rows\";\n \n+    public static final String PREF_MAIL_TEMPLATE_PAGINATOR_ROWS = \"mail.template.paginator.rows\";\n+\n     public static final String PREF_PROPAGATION_TASKS_PAGINATOR_ROWS = \"proagationtasks.paginator.rows\";\n \n     public static final String PREF_TASK_EXECS_PAGINATOR_ROWS = \"task.execs.paginator.rows\";"},{"sha":"38d2dd98f92cadc05b92624387571fb12c1c4b17","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/EventSelectionPanel.java","status":"added","additions":240,"deletions":0,"changes":240,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FEventSelectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FEventSelectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FEventSelectionPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,240 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.notifications;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.to.EventCategoryTO;\n+import org.apache.syncope.common.lib.types.AuditElements;\n+import org.apache.syncope.common.lib.types.AuditLoggerName;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Check;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.form.CheckGroupSelector;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class EventSelectionPanel extends Panel {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(EventSelectionPanel.class);\n+\n+    private static final long serialVersionUID = 752233163798301002L;\n+\n+    private final Set<String> selected = new HashSet<String>();\n+\n+    public EventSelectionPanel(\n+            final String id, final EventCategoryTO eventCategoryTO, final IModel<List<String>> model) {\n+        super(id);\n+        setOutputMarkupId(true);\n+\n+        final List<String> events = getEvents(eventCategoryTO);\n+\n+        // needed to avoid model reset: model have to be managed into SelectedEventsPanel\n+        selected.addAll(model.getObject());\n+\n+        final CheckGroup<String> successGroup = new CheckGroup<String>(\n+                \"successGroup\",\n+                selected);\n+\n+        successGroup.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+\n+            private static final long serialVersionUID = -151291731388673682L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+\n+                final Set<String> toBeRemoved = new HashSet<String>();\n+                final Set<String> toBeAdded = new HashSet<String>();\n+\n+                for (String event : getEvents(eventCategoryTO)) {\n+                    final String eventString = AuditLoggerName.buildEvent(\n+                            eventCategoryTO.getType(),\n+                            eventCategoryTO.getCategory(),\n+                            eventCategoryTO.getSubcategory(),\n+                            event,\n+                            AuditElements.Result.SUCCESS);\n+\n+                    if (successGroup.getModelObject().contains(eventString)) {\n+                        toBeAdded.add(eventString);\n+                    } else {\n+                        toBeRemoved.add(eventString);\n+                    }\n+                }\n+\n+                send(EventSelectionPanel.this.getPage(), Broadcast.BREADTH,\n+                        new SelectedEventsPanel.EventSelectionChanged(target, toBeAdded, toBeRemoved));\n+            }\n+        });\n+\n+        successGroup.setVisible(!events.isEmpty());\n+        add(successGroup);\n+\n+        add(new Label(\"successLabel\", new ResourceModel(\"Success\", \"Success\"))).setVisible(!events.isEmpty());\n+\n+        final CheckGroupSelector successSelector = new CheckGroupSelector(\"successSelector\", successGroup);\n+        successSelector.setVisible(!events.isEmpty());\n+        add(successSelector);\n+\n+        final ListView<String> categoryView = new ListView<String>(\"categoryView\", events) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<String> item) {\n+                final String subcategory = item.getModelObject();\n+\n+                item.add(new Label(\"subcategory\", new ResourceModel(subcategory, subcategory)));\n+            }\n+        };\n+        add(categoryView);\n+\n+        final ListView<String> successView = new ListView<String>(\"successView\", events) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<String> item) {\n+                final String event = item.getModelObject();\n+\n+                final Check<String> successCheck = new Check<String>(\"successCheck\",\n+                        new Model<String>(AuditLoggerName.buildEvent(\n+                                eventCategoryTO.getType(),\n+                                eventCategoryTO.getCategory(),\n+                                eventCategoryTO.getSubcategory(),\n+                                event,\n+                                AuditElements.Result.SUCCESS)),\n+                        successGroup);\n+                item.add(successCheck);\n+            }\n+        };\n+        successGroup.add(successView);\n+\n+        final CheckGroup<String> failureGroup = new CheckGroup<String>(\"failureGroup\", selected);\n+\n+        failureGroup.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+\n+            private static final long serialVersionUID = -151291731388673682L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+\n+                final Set<String> toBeRemoved = new HashSet<String>();\n+                final Set<String> toBeAdded = new HashSet<String>();\n+\n+                for (String event : getEvents(eventCategoryTO)) {\n+                    final String eventString = AuditLoggerName.buildEvent(\n+                            eventCategoryTO.getType(),\n+                            eventCategoryTO.getCategory(),\n+                            eventCategoryTO.getSubcategory(),\n+                            event,\n+                            AuditElements.Result.FAILURE);\n+\n+                    if (failureGroup.getModelObject().contains(eventString)) {\n+                        toBeAdded.add(eventString);\n+                    } else {\n+                        toBeRemoved.add(eventString);\n+                    }\n+                }\n+\n+                send(EventSelectionPanel.this.getPage(), Broadcast.BREADTH,\n+                        new SelectedEventsPanel.EventSelectionChanged(target, toBeAdded, toBeRemoved));\n+            }\n+        });\n+\n+        failureGroup.setVisible(!events.isEmpty());\n+        add(failureGroup);\n+\n+        add(new Label(\"failureLabel\", new ResourceModel(\"Failure\", \"Failure\"))).setVisible(!events.isEmpty());\n+\n+        final CheckGroupSelector failureSelector = new CheckGroupSelector(\"failureSelector\", failureGroup);\n+        failureSelector.setVisible(!events.isEmpty());\n+        add(failureSelector);\n+\n+        final ListView<String> failureView = new ListView<String>(\"failureView\", events) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<String> item) {\n+                final String event = item.getModelObject();\n+\n+                final Check<String> failureCheck = new Check<String>(\"failureCheck\",\n+                        new Model<String>(AuditLoggerName.buildEvent(\n+                                eventCategoryTO.getType(),\n+                                eventCategoryTO.getCategory(),\n+                                eventCategoryTO.getSubcategory(),\n+                                event,\n+                                AuditElements.Result.FAILURE)),\n+                        failureGroup);\n+                item.add(failureCheck);\n+            }\n+        };\n+        failureGroup.add(failureView);\n+    }\n+\n+    private List<String> getEvents(final EventCategoryTO eventCategoryTO) {\n+        final List<String> res;\n+\n+        res = eventCategoryTO.getEvents();\n+\n+        if (res.isEmpty()) {\n+            if ((AuditElements.EventCategoryType.PROPAGATION == eventCategoryTO.getType()\n+                    || AuditElements.EventCategoryType.PULL == eventCategoryTO.getType()\n+                    || AuditElements.EventCategoryType.PUSH == eventCategoryTO.getType())\n+                    && StringUtils.isEmpty(eventCategoryTO.getCategory())) {\n+                res.add(eventCategoryTO.getType().toString());\n+            } else if (AuditElements.EventCategoryType.TASK == eventCategoryTO.getType()\n+                    && StringUtils.isNotEmpty(eventCategoryTO.getCategory())) {\n+                res.add(eventCategoryTO.getCategory());\n+            }\n+        } else {\n+            Collections.sort(res);\n+        }\n+\n+        return res;\n+    }\n+\n+    /**\n+     * To be extended in order to add actions on events.\n+     *\n+     * @param event event.\n+     */\n+    protected abstract void onEventAction(final IEvent<?> event);\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        onEventAction(event);\n+    }\n+}"},{"sha":"d1715f1106fcdfeb97592425c613ad456de4c8a0","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/LoggerCategoryPanel.java","status":"added","additions":509,"deletions":0,"changes":509,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FLoggerCategoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FLoggerCategoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FLoggerCategoryPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,509 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.notifications;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.notifications.SelectedEventsPanel.EventSelectionChanged;\n+import org.apache.syncope.client.console.notifications.SelectedEventsPanel.InspectSelectedEvent;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.EventCategoryTO;\n+import org.apache.syncope.common.lib.types.AuditElements;\n+import org.apache.syncope.common.lib.types.AuditElements.EventCategoryType;\n+import org.apache.syncope.common.lib.types.AuditLoggerName;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class LoggerCategoryPanel extends Panel {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(LoggerCategoryPanel.class);\n+\n+    private static final long serialVersionUID = 6429053774964787734L;\n+\n+    private final List<EventCategoryTO> eventCategoryTOs;\n+\n+    private final EventCategoryTO eventCategoryTO = new EventCategoryTO();\n+\n+    private final WebMarkupContainer categoryContainer;\n+\n+    private final WebMarkupContainer eventsContainer;\n+\n+    private final SelectedEventsPanel selectedEventsPanel;\n+\n+    private final AjaxDropDownChoicePanel<EventCategoryType> type;\n+\n+    private final AjaxDropDownChoicePanel<String> category;\n+\n+    private final AjaxDropDownChoicePanel<String> subcategory;\n+\n+    private final AjaxTextFieldPanel custom;\n+\n+    private final ActionLinksPanel actionPanel;\n+\n+    private final IModel<List<String>> model;\n+\n+    public LoggerCategoryPanel(\n+            final String id,\n+            final List<EventCategoryTO> eventCategoryTOs,\n+            final IModel<List<String>> model,\n+            final PageReference pageReference,\n+            final String pageId) {\n+        super(id);\n+\n+        this.model = model;\n+        selectedEventsPanel = new SelectedEventsPanel(\"selectedEventsPanel\", model);\n+        add(selectedEventsPanel);\n+\n+        this.eventCategoryTOs = eventCategoryTOs;\n+\n+        categoryContainer = new WebMarkupContainer(\"categoryContainer\");\n+        categoryContainer.setOutputMarkupId(true);\n+        add(categoryContainer);\n+\n+        eventsContainer = new WebMarkupContainer(\"eventsContainer\");\n+        eventsContainer.setOutputMarkupId(true);\n+        add(eventsContainer);\n+\n+        authorizeList();\n+        authorizeChanges();\n+\n+        type = new AjaxDropDownChoicePanel<EventCategoryType>(\n+                \"type\",\n+                \"type\",\n+                new PropertyModel<EventCategoryType>(eventCategoryTO, \"type\"),\n+                false);\n+        type.setChoices(Arrays.asList(EventCategoryType.values()));\n+        type.setStyleSheet(\"ui-widget-content ui-corner-all\");\n+        type.setChoiceRenderer(new IChoiceRenderer<EventCategoryType>() {\n+\n+            private static final long serialVersionUID = 2317134950949778735L;\n+\n+            @Override\n+            public String getDisplayValue(final EventCategoryType eventCategoryType) {\n+                return eventCategoryType.name();\n+            }\n+\n+            @Override\n+            public String getIdValue(final EventCategoryType eventCategoryType, final int i) {\n+                return eventCategoryType.name();\n+            }\n+\n+            @Override\n+            public EventCategoryType getObject(\n+                    final String id, final IModel<? extends List<? extends EventCategoryType>> choices) {\n+                return IterableUtils.find(choices.getObject(), new Predicate<EventCategoryType>() {\n+\n+                    @Override\n+                    public boolean evaluate(final EventCategoryType object) {\n+                        return object.name().equals(id);\n+                    }\n+                });\n+            }\n+        });\n+        categoryContainer.add(type);\n+\n+        type.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                send(LoggerCategoryPanel.this, Broadcast.EXACT, new ChangeCategoryEvent(target, type));\n+            }\n+        });\n+\n+        category = new AjaxDropDownChoicePanel<String>(\n+                \"category\",\n+                \"category\",\n+                new PropertyModel<String>(eventCategoryTO, \"category\"),\n+                false);\n+        category.setChoices(filter(eventCategoryTOs, type.getModelObject()));\n+//        category.setStyleSheet(\"ui-widget-content ui-corner-all\");\n+        categoryContainer.add(category);\n+\n+        category.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306811L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                send(LoggerCategoryPanel.this, Broadcast.EXACT, new ChangeCategoryEvent(target, category));\n+            }\n+        });\n+\n+        subcategory = new AjaxDropDownChoicePanel<String>(\n+                \"subcategory\",\n+                \"subcategory\",\n+                new PropertyModel<String>(eventCategoryTO, \"subcategory\"),\n+                false);\n+        subcategory.setChoices(filter(eventCategoryTOs, type.getModelObject(), category.getModelObject()));\n+//        subcategory.setStyleSheet(\"ui-widget-content ui-corner-all\");\n+        categoryContainer.add(subcategory);\n+\n+        subcategory.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306812L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                send(LoggerCategoryPanel.this, Broadcast.EXACT, new ChangeCategoryEvent(target, subcategory));\n+            }\n+        });\n+\n+        categoryContainer.add(new Label(\"customLabel\", new ResourceModel(\"custom\", \"custom\")).setVisible(false));\n+\n+        custom = new AjaxTextFieldPanel(\"custom\", \"custom\", new Model<String>(null));\n+//        custom.setStyleSheet(\"ui-widget-content ui-corner-all short_fixedsize\");\n+        custom.setVisible(false);\n+        custom.setEnabled(false);\n+\n+        categoryContainer.add(custom.hideLabel());\n+\n+        actionPanel = ActionLinksPanel.<EventCategoryTO>builder().\n+                add(new ActionLink<EventCategoryTO>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelObject) {\n+\n+                        if (StringUtils.isNotBlank(custom.getModelObject())) {\n+                            final Map.Entry<EventCategoryTO, AuditElements.Result> parsed = AuditLoggerName.\n+                                    parseEventCategory(\n+                                            custom.getModelObject());\n+\n+                            final String eventString = AuditLoggerName.buildEvent(\n+                                    parsed.getKey().getType(),\n+                                    null,\n+                                    null,\n+                                    parsed.getKey().getEvents().isEmpty()\n+                                            ? StringUtils.EMPTY : parsed.getKey().getEvents().iterator().next(),\n+                                    parsed.getValue());\n+\n+                            custom.setModelObject(StringUtils.EMPTY);\n+                            send(LoggerCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                                    target,\n+                                    Collections.<String>singleton(eventString),\n+                                    Collections.<String>emptySet()));\n+                            target.add(categoryContainer);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.CREATE, StandardEntitlement.NOTIFICATION_UPDATE, true).\n+                add(new ActionLink<EventCategoryTO>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelObject) {\n+                        if (StringUtils.isNotBlank(custom.getModelObject())) {\n+                            final Map.Entry<EventCategoryTO, AuditElements.Result> parsed = AuditLoggerName.\n+                                    parseEventCategory(\n+                                            custom.getModelObject());\n+\n+                            final String eventString = AuditLoggerName.buildEvent(\n+                                    parsed.getKey().getType(),\n+                                    null,\n+                                    null,\n+                                    parsed.getKey().getEvents().isEmpty()\n+                                            ? StringUtils.EMPTY : parsed.getKey().getEvents().iterator().next(),\n+                                    parsed.getValue());\n+\n+                            custom.setModelObject(StringUtils.EMPTY);\n+                            send(LoggerCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                                    target,\n+                                    Collections.<String>singleton(eventString),\n+                                    Collections.<String>emptySet()));\n+                            target.add(categoryContainer);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.CREATE, pageId, true).\n+                add(new ActionLink<EventCategoryTO>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435521L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final EventCategoryTO modelObject) {\n+                        if (StringUtils.isNotBlank(custom.getModelObject())) {\n+                            final Map.Entry<EventCategoryTO, AuditElements.Result> parsed = AuditLoggerName.\n+                                    parseEventCategory(\n+                                            custom.getModelObject());\n+\n+                            final String eventString = AuditLoggerName.buildEvent(\n+                                    parsed.getKey().getType(),\n+                                    null,\n+                                    null,\n+                                    parsed.getKey().getEvents().isEmpty()\n+                                            ? StringUtils.EMPTY : parsed.getKey().getEvents().iterator().next(),\n+                                    parsed.getValue());\n+\n+                            custom.setModelObject(StringUtils.EMPTY);\n+                            send(LoggerCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                                    target,\n+                                    Collections.<String>emptySet(),\n+                                    Collections.<String>singleton(eventString)));\n+                            target.add(categoryContainer);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.DELETE, pageId, true).build(\"customActions\");\n+\n+        //, new Model(), pageReference);\n+        categoryContainer.add(actionPanel);\n+\n+        actionPanel.setVisible(false);\n+        actionPanel.setEnabled(false);\n+\n+        eventsContainer.add(new EventSelectionPanel(\"eventsPanel\", eventCategoryTO, model) {\n+\n+            private static final long serialVersionUID = 3513194801190026082L;\n+\n+            @Override\n+            protected void onEventAction(final IEvent<?> event) {\n+                LoggerCategoryPanel.this.onEventAction(event);\n+            }\n+        });\n+    }\n+\n+    private List<String> filter(\n+            final List<EventCategoryTO> eventCategoryTOs, final EventCategoryType type) {\n+        final Set<String> res = new HashSet<String>();\n+\n+        for (EventCategoryTO eventCategory : eventCategoryTOs) {\n+            if (type == eventCategory.getType() && StringUtils.isNotEmpty(eventCategory.getCategory())) {\n+                res.add(eventCategory.getCategory());\n+            }\n+        }\n+\n+        final List<String> filtered = new ArrayList<String>(res);\n+        Collections.sort(filtered);\n+        return filtered;\n+    }\n+\n+    private List<String> filter(\n+            final List<EventCategoryTO> eventCategoryTOs, final EventCategoryType type, final String category) {\n+        final Set<String> res = new HashSet<String>();\n+\n+        for (EventCategoryTO eventCategory : eventCategoryTOs) {\n+            if (type == eventCategory.getType() && StringUtils.equals(category, eventCategory.getCategory())\n+                    && StringUtils.isNotEmpty(eventCategory.getSubcategory())) {\n+                res.add(eventCategory.getSubcategory());\n+            }\n+        }\n+\n+        final List<String> filtered = new ArrayList<String>(res);\n+        Collections.sort(filtered);\n+        return filtered;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof ChangeCategoryEvent) {\n+            // update objects ....\n+            eventCategoryTO.getEvents().clear();\n+\n+            final ChangeCategoryEvent change = (ChangeCategoryEvent) event.getPayload();\n+\n+            final Panel changedPanel = change.getChangedPanel();\n+            if (\"type\".equals(changedPanel.getId())) {\n+                eventCategoryTO.setType(type.getModelObject());\n+                eventCategoryTO.setCategory(null);\n+                eventCategoryTO.setSubcategory(null);\n+\n+                if (type.getModelObject() == EventCategoryType.CUSTOM) {\n+                    category.setChoices(Collections.<String>emptyList());\n+                    subcategory.setChoices(Collections.<String>emptyList());\n+                    category.setEnabled(false);\n+                    subcategory.setEnabled(false);\n+                    custom.setVisible(true);\n+                    custom.setEnabled(true);\n+                    actionPanel.setVisible(true);\n+                    actionPanel.setEnabled(true);\n+\n+                } else {\n+                    category.setChoices(filter(eventCategoryTOs, type.getModelObject()));\n+                    subcategory.setChoices(Collections.<String>emptyList());\n+                    category.setEnabled(true);\n+                    subcategory.setEnabled(true);\n+                    custom.setVisible(false);\n+                    custom.setEnabled(false);\n+                    actionPanel.setVisible(false);\n+                    actionPanel.setEnabled(false);\n+                }\n+                change.getTarget().add(categoryContainer);\n+            } else if (\"category\".equals(changedPanel.getId())) {\n+                subcategory.setChoices(filter(eventCategoryTOs, type.getModelObject(), category.getModelObject()));\n+                eventCategoryTO.setCategory(category.getModelObject());\n+                eventCategoryTO.setSubcategory(null);\n+                change.getTarget().add(categoryContainer);\n+            } else {\n+                eventCategoryTO.setSubcategory(subcategory.getModelObject());\n+            }\n+\n+            updateEventsContainer(change.getTarget());\n+        } else if (event.getPayload() instanceof InspectSelectedEvent) {\n+            // update objects ....\n+            eventCategoryTO.getEvents().clear();\n+\n+            final InspectSelectedEvent inspectSelectedEvent = (InspectSelectedEvent) event.getPayload();\n+\n+            final Map.Entry<EventCategoryTO, AuditElements.Result> categoryEvent = AuditLoggerName.parseEventCategory(\n+                    inspectSelectedEvent.getEvent());\n+\n+            eventCategoryTO.setType(categoryEvent.getKey().getType());\n+            category.setChoices(filter(eventCategoryTOs, type.getModelObject()));\n+\n+            eventCategoryTO.setCategory(categoryEvent.getKey().getCategory());\n+            subcategory.setChoices(filter(eventCategoryTOs, type.getModelObject(), category.getModelObject()));\n+\n+            eventCategoryTO.setSubcategory(categoryEvent.getKey().getSubcategory());\n+\n+            if (categoryEvent.getKey().getType() == EventCategoryType.CUSTOM) {\n+                custom.setModelObject(AuditLoggerName.buildEvent(\n+                        categoryEvent.getKey().getType(),\n+                        categoryEvent.getKey().getCategory(),\n+                        categoryEvent.getKey().getSubcategory(),\n+                        categoryEvent.getKey().getEvents().isEmpty()\n+                                ? StringUtils.EMPTY : categoryEvent.getKey().getEvents().iterator().next(),\n+                        categoryEvent.getValue()));\n+\n+                category.setEnabled(false);\n+                subcategory.setEnabled(false);\n+                custom.setVisible(true);\n+                custom.setEnabled(true);\n+                actionPanel.setVisible(true);\n+                actionPanel.setEnabled(true);\n+            } else {\n+                category.setEnabled(true);\n+                subcategory.setEnabled(true);\n+                custom.setVisible(false);\n+                custom.setEnabled(false);\n+                actionPanel.setVisible(false);\n+                actionPanel.setEnabled(false);\n+            }\n+\n+            inspectSelectedEvent.getTarget().add(categoryContainer);\n+            updateEventsContainer(inspectSelectedEvent.getTarget());\n+        }\n+    }\n+\n+    private void setEvents() {\n+        final Iterator<EventCategoryTO> itor = eventCategoryTOs.iterator();\n+        while (itor.hasNext() && eventCategoryTO.getEvents().isEmpty()) {\n+            final EventCategoryTO eventCategory = itor.next();\n+            if (eventCategory.getType() == eventCategoryTO.getType()\n+                    && StringUtils.equals(eventCategory.getCategory(), eventCategoryTO.getCategory())\n+                    && StringUtils.equals(eventCategory.getSubcategory(), eventCategoryTO.getSubcategory())) {\n+                eventCategoryTO.getEvents().addAll(eventCategory.getEvents());\n+\n+            }\n+        }\n+    }\n+\n+    private class ChangeCategoryEvent {\n+\n+        private final AjaxRequestTarget target;\n+\n+        private final Panel changedPanel;\n+\n+        ChangeCategoryEvent(final AjaxRequestTarget target, final Panel changedPanel) {\n+            this.target = target;\n+            this.changedPanel = changedPanel;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+\n+        public Panel getChangedPanel() {\n+            return changedPanel;\n+        }\n+    }\n+\n+    /**\n+     * To be extended in order to add actions on events.\n+     *\n+     * @param event event.\n+     */\n+    protected void onEventAction(final IEvent<?> event) {\n+        // nothing by default\n+    }\n+\n+    private void authorizeList() {\n+        for (String role : getListRoles()) {\n+            MetaDataRoleAuthorizationStrategy.authorize(selectedEventsPanel, RENDER, role);\n+        }\n+    }\n+\n+    private void authorizeChanges() {\n+        for (String role : getChangeRoles()) {\n+            MetaDataRoleAuthorizationStrategy.authorize(categoryContainer, RENDER, role);\n+            MetaDataRoleAuthorizationStrategy.authorize(eventsContainer, RENDER, role);\n+        }\n+    }\n+\n+    private void updateEventsContainer(final AjaxRequestTarget target) {\n+        setEvents();\n+\n+        eventsContainer.addOrReplace(new EventSelectionPanel(\"eventsPanel\", eventCategoryTO, model) {\n+\n+            private static final long serialVersionUID = 3513194801190026082L;\n+\n+            @Override\n+            public void onEventAction(final IEvent<?> event) {\n+                LoggerCategoryPanel.this.onEventAction(event);\n+            }\n+        });\n+        target.add(eventsContainer);\n+    }\n+\n+    protected abstract String[] getListRoles();\n+\n+    protected abstract String[] getChangeRoles();\n+}"},{"sha":"96034465dd374280e5bba0417fd3fa875fbab194","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateContentModal.java","status":"added","additions":117,"deletions":0,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.notifications;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.rest.NotificationRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.types.MailTemplateFormat;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnLoadHeaderItem;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.TextArea;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class MailTemplateContentModal extends AbstractModalPanel<Serializable> {\n+\n+    private static final long serialVersionUID = 2053048734388383021L;\n+\n+    private final MailTemplateContentTO content;\n+\n+    public MailTemplateContentModal(\n+            final BaseModal<Serializable> modal,\n+            final MailTemplateContentTO content,\n+            final PageReference pageRef) {\n+        super(modal, pageRef);\n+        this.content = content;\n+\n+        TextArea<String> templateDefArea = new TextArea<>(\"template\", new PropertyModel<String>(content, \"content\"));\n+        templateDefArea.setMarkupId(\"template\").setOutputMarkupPlaceholderTag(true);\n+        add(templateDefArea);\n+    }\n+\n+    @Override\n+    public void renderHead(final IHeaderResponse response) {\n+        super.renderHead(response);\n+        response.render(OnLoadHeaderItem.forScript(\n+                \"CodeMirror.fromTextArea(document.getElementById('template'), {\"\n+                + \"  lineNumbers: true, \"\n+                + \"  autoRefresh: true\"\n+                + \"}).on('change', updateTextArea);\"));\n+    }\n+\n+    @Override\n+    public MailTemplateContentTO getItem() {\n+        return this.content;\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        try {\n+            new NotificationRestClient().updateTemplateFormat(\n+                    content.getKey(), content.getContent(), content.getFormat());\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n+            modal.show(false);\n+            modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While updating template for {}\", content.getKey(), e);\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+        }\n+        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+    }\n+\n+    public static class MailTemplateContentTO extends AbstractBaseBean {\n+\n+        private static final long serialVersionUID = -1756961687134322845L;\n+\n+        private final String key;\n+\n+        private String content;\n+\n+        private final MailTemplateFormat format;\n+\n+        public MailTemplateContentTO(final String key, final MailTemplateFormat format) {\n+            this.key = key;\n+            this.format = format;\n+        }\n+\n+        public String getKey() {\n+            return key;\n+        }\n+\n+        public String getContent() {\n+            return content;\n+        }\n+\n+        public void setContent(final String content) {\n+            this.content = content;\n+        }\n+\n+        public MailTemplateFormat getFormat() {\n+            return format;\n+        }\n+    }\n+}"},{"sha":"1e6cbe2ecb1422c2325eef81b32cfb38bbaf85e4","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel.java","status":"added","additions":222,"deletions":0,"changes":222,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,222 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.notifications;\n+\n+import static org.apache.wicket.Component.ENABLE;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.notifications.MailTemplateDirectoryPanel.MailTemplateProvider;\n+import org.apache.syncope.client.console.panels.DirectoryPanel;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.rest.NotificationRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.MailTemplateTO;\n+import org.apache.syncope.common.lib.types.MailTemplateFormat;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class MailTemplateDirectoryPanel\n+        extends DirectoryPanel<MailTemplateTO, MailTemplateTO, MailTemplateProvider, NotificationRestClient> {\n+\n+    private static final long serialVersionUID = -3789392431954221446L;\n+\n+    public MailTemplateDirectoryPanel(final String id, final PageReference pageReference) {\n+        super(id, pageReference, true);\n+        disableCheckBoxes();\n+\n+        modal.size(Modal.Size.Small);\n+        modal.addSumbitButton();\n+        setFooterVisibility(true);\n+\n+        utilityModal.size(Modal.Size.Large);\n+        utilityModal.addSumbitButton();\n+\n+        addNewItemPanelBuilder(new AbstractModalPanelBuilder<MailTemplateTO>(new MailTemplateTO(), pageRef) {\n+\n+            private static final long serialVersionUID = 1995192603527154740L;\n+\n+            @Override\n+            public ModalPanel<MailTemplateTO> build(final String id, final int index, final AjaxWizard.Mode mode) {\n+                return new MailTemplateModal(modal, new MailTemplateTO(), pageReference);\n+            }\n+        }, true);\n+        restClient = new NotificationRestClient();\n+\n+        initResultTable();\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.MAIL_TEMPLATE_CREATE);\n+    }\n+\n+    @Override\n+    protected List<IColumn<MailTemplateTO, String>> getColumns() {\n+\n+        final List<IColumn<MailTemplateTO, String>> columns = new ArrayList<IColumn<MailTemplateTO, String>>();\n+        columns.add(new PropertyColumn<MailTemplateTO, String>(\n+                new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n+\n+        columns.add(new ActionColumn<MailTemplateTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel<MailTemplateTO> getActions(\n+                    final String componentId, final IModel<MailTemplateTO> model) {\n+\n+                final ActionLinksPanel.Builder<MailTemplateTO> panel = ActionLinksPanel.builder();\n+\n+                panel.add(new ActionLink<MailTemplateTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770645L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n+                        MailTemplateContentModal.MailTemplateContentTO content\n+                                = new MailTemplateContentModal.MailTemplateContentTO(\n+                                        model.getObject().getKey(), MailTemplateFormat.HTML);\n+                        content.setContent(\n+                                restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.HTML));\n+\n+                        utilityModal.header(new ResourceModel(\"mail.template.html\", \"HTML Content\"));\n+                        utilityModal.setContent(new MailTemplateContentModal(utilityModal, content, pageRef));\n+                        utilityModal.show(true);\n+                        target.add(utilityModal);\n+                    }\n+                }, ActionLink.ActionType.HTML_EDIT, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n+\n+                panel.add(new ActionLink<MailTemplateTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770645L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n+                        MailTemplateContentModal.MailTemplateContentTO content\n+                                = new MailTemplateContentModal.MailTemplateContentTO(\n+                                        model.getObject().getKey(), MailTemplateFormat.TEXT);\n+                        content.setContent(\n+                                restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.TEXT));\n+                        \n+                        utilityModal.setFormModel(content);\n+                        utilityModal.header(new ResourceModel(\"mail.template.text\", \"TEXT Content\"));\n+                        utilityModal.setContent(new MailTemplateContentModal(utilityModal, content, pageRef));\n+                        utilityModal.show(true);\n+                        target.add(utilityModal);\n+                    }\n+                }, ActionLink.ActionType.TEXT_EDIT, StandardEntitlement.MAIL_TEMPLATE_UPDATE);\n+\n+                panel.add(new ActionLink<MailTemplateTO>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n+                        try {\n+                            restClient.deleteTemplate(model.getObject().getKey());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (SyncopeClientException e) {\n+                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                    }\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.MAIL_TEMPLATE_DELETE);\n+\n+                return panel.build(componentId);\n+            }\n+        });\n+        return columns;\n+    }\n+\n+    @Override\n+    protected MailTemplateProvider dataProvider() {\n+        return new MailTemplateProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_MAIL_TEMPLATE_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n+\n+    public class MailTemplateProvider extends DirectoryDataProvider<MailTemplateTO> {\n+\n+        private static final long serialVersionUID = -276043813563988590L;\n+\n+        private final SortableDataProviderComparator<MailTemplateTO> comparator;\n+\n+        public MailTemplateProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            setSort(\"key\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<MailTemplateTO>(this);\n+        }\n+\n+        @Override\n+        public Iterator<MailTemplateTO> iterator(final long first, final long count) {\n+            final List<MailTemplateTO> list = restClient.getAllAvailableTemplates();\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return restClient.getAllAvailableTemplates().size();\n+        }\n+\n+        @Override\n+        public IModel<MailTemplateTO> model(final MailTemplateTO mailTemplateTO) {\n+            return new AbstractReadOnlyModel<MailTemplateTO>() {\n+\n+                private static final long serialVersionUID = 774694801558497248L;\n+\n+                @Override\n+                public MailTemplateTO getObject() {\n+                    return mailTemplateTO;\n+                }\n+            };\n+        }\n+    }\n+}"},{"sha":"69ec7aa6d4c524af83608ff24d1b8518d2ad4a33","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateModal.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateModal.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.notifications;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.rest.NotificationRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.MailTemplateTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class MailTemplateModal extends AbstractModalPanel<MailTemplateTO> {\n+\n+    private static final long serialVersionUID = 2053048734388383021L;\n+\n+    private final MailTemplateTO mailTemplateTO;\n+\n+    public MailTemplateModal(\n+            final BaseModal<MailTemplateTO> modal,\n+            final MailTemplateTO mailTemplateTO,\n+            final PageReference pageRef) {\n+        super(modal, pageRef);\n+        this.mailTemplateTO = mailTemplateTO;\n+\n+        final AjaxTextFieldPanel key\n+                = new AjaxTextFieldPanel(\"key\", \"key\", new PropertyModel<String>(mailTemplateTO, \"key\"), false);\n+        key.setOutputMarkupPlaceholderTag(true);\n+        add(key.setRenderBodyOnly(true));\n+    }\n+\n+    @Override\n+    public MailTemplateTO getItem() {\n+        return this.mailTemplateTO;\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        try {\n+            new NotificationRestClient().createTemplate(mailTemplateTO);\n+            info(getString(Constants.OPERATION_SUCCEEDED));\n+            modal.show(false);\n+            modal.close(target);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While creating template for {}\", mailTemplateTO.getKey(), e);\n+            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+        }\n+        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+    }\n+}"},{"sha":"3bb90ebd3b27826148ae8a38cfee36d2751aabe4","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationDirectoryPanel.java","status":"added","additions":208,"deletions":0,"changes":208,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,208 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.notifications;\n+\n+import static org.apache.wicket.Component.ENABLE;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.notifications.NotificationDirectoryPanel.NotificationProvider;\n+import org.apache.syncope.client.console.panels.DirectoryPanel;\n+import org.apache.syncope.client.console.rest.NotificationRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.NotificationTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class NotificationDirectoryPanel\n+        extends DirectoryPanel<NotificationTO, NotificationHandler, NotificationProvider, NotificationRestClient> {\n+\n+    private static final long serialVersionUID = -3789392431954221446L;\n+\n+    public NotificationDirectoryPanel(final String id, final PageReference pageReference) {\n+        super(id, pageReference, true);\n+        disableCheckBoxes();\n+\n+        modal.size(Modal.Size.Large);\n+        altDefaultModal.size(Modal.Size.Large);\n+\n+        addNewItemPanelBuilder(new NotificationWizardBuilder(new NotificationTO(), pageReference), true);\n+\n+        restClient = new NotificationRestClient();\n+\n+        initResultTable();\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.NOTIFICATION_CREATE);\n+    }\n+\n+    @Override\n+    protected List<IColumn<NotificationTO, String>> getColumns() {\n+\n+        final List<IColumn<NotificationTO, String>> columns = new ArrayList<IColumn<NotificationTO, String>>();\n+        columns.add(new PropertyColumn<NotificationTO, String>(\n+                new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n+        columns.add(new CollectionPropertyColumn<NotificationTO>(\n+                new StringResourceModel(\"events\", this, null), \"events\", \"events\"));\n+        columns.add(new PropertyColumn<NotificationTO, String>(\n+                new StringResourceModel(\"subject\", this, null), \"subject\", \"subject\"));\n+        columns.add(new PropertyColumn<NotificationTO, String>(\n+                new StringResourceModel(\"template\", this, null), \"template\", \"template\"));\n+        columns.add(new PropertyColumn<NotificationTO, String>(\n+                new StringResourceModel(\"traceLevel\", this, null), \"traceLevel\", \"traceLevel\"));\n+        columns.add(new PropertyColumn<NotificationTO, String>(\n+                new StringResourceModel(\"active\", this, null), \"active\", \"active\"));\n+\n+        columns.add(new ActionColumn<NotificationTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel<NotificationTO> getActions(\n+                    final String componentId, final IModel<NotificationTO> model) {\n+\n+                final ActionLinksPanel.Builder<NotificationTO> panel = ActionLinksPanel.builder();\n+\n+                panel.add(new ActionLink<NotificationTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770645L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n+                        target.add(utilityModal.setContent(new NotificationTasks(\n+                                utilityModal, pageRef, model.getObject())));\n+                        utilityModal.header(new ResourceModel(\"notification.executions\", \"Tasks\"));\n+                        utilityModal.show(true);\n+                        target.add(utilityModal);\n+                    }\n+                }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_LIST);\n+\n+                panel.add(new ActionLink<NotificationTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770645L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n+                        send(NotificationDirectoryPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<>(\n+                                        new NotificationHandler(restClient.read(model.getObject().getKey())), target));\n+                    }\n+                }, ActionLink.ActionType.EDIT, StandardEntitlement.NOTIFICATION_UPDATE);\n+\n+                panel.add(new ActionLink<NotificationTO>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final NotificationTO ignore) {\n+                        try {\n+                            restClient.delete(model.getObject().getKey());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (SyncopeClientException e) {\n+                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                            error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                    }\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.NOTIFICATION_DELETE);\n+\n+                return panel.build(componentId);\n+            }\n+        });\n+        return columns;\n+    }\n+\n+    @Override\n+    protected NotificationProvider dataProvider() {\n+        return new NotificationProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_NOTIFICATION_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n+\n+    public class NotificationProvider extends DirectoryDataProvider<NotificationTO> {\n+\n+        private static final long serialVersionUID = -276043813563988590L;\n+\n+        private final SortableDataProviderComparator<NotificationTO> comparator;\n+\n+        public NotificationProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            setSort(\"key\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<NotificationTO>(this);\n+        }\n+\n+        @Override\n+        public Iterator<NotificationTO> iterator(final long first, final long count) {\n+            final List<NotificationTO> list = restClient.getAllNotifications();\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return restClient.getAllNotifications().size();\n+        }\n+\n+        @Override\n+        public IModel<NotificationTO> model(final NotificationTO notification) {\n+            return new AbstractReadOnlyModel<NotificationTO>() {\n+\n+                private static final long serialVersionUID = 774694801558497248L;\n+\n+                @Override\n+                public NotificationTO getObject() {\n+                    return notification;\n+                }\n+            };\n+        }\n+    }\n+\n+}"},{"sha":"274eb1398a693dc19649255f0edfd07badb16a75","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationHandler.java","status":"added","additions":131,"deletions":0,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationHandler.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.notifications;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.panels.search.SearchUtils;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.to.NotificationTO;\n+\n+public class NotificationHandler implements Serializable {\n+\n+    private static final long serialVersionUID = 8058288034211558376L;\n+\n+    private final NotificationTO notificationTO;\n+\n+    private List<Pair<String, List<SearchClause>>> aboutClauses;\n+\n+    private List<SearchClause> recipientClauses;\n+\n+    public NotificationHandler(final NotificationTO notificationTO) {\n+        this.notificationTO = notificationTO;\n+    }\n+\n+    public final Long getKey() {\n+        return this.notificationTO.getKey();\n+    }\n+\n+    public List<Pair<String, List<SearchClause>>> getAboutClauses() {\n+        if (this.aboutClauses == null) {\n+            this.aboutClauses = new ArrayList<>();\n+            for (Map.Entry<String, String> entry : this.notificationTO.getAbouts().entrySet()) {\n+                this.aboutClauses.add(Pair.of(entry.getKey(), SearchUtils.getSearchClauses(entry.getValue())));\n+            }\n+        }\n+\n+        return this.aboutClauses;\n+    }\n+\n+    public void setAboutClauses(final List<Pair<String, List<SearchClause>>> dynClauses) {\n+        this.aboutClauses = dynClauses;\n+    }\n+\n+    public List<SearchClause> getRecipientClauses() {\n+        if (this.recipientClauses == null) {\n+            this.recipientClauses = SearchUtils.getSearchClauses(this.notificationTO.getRecipientsFIQL());\n+        }\n+        return this.recipientClauses;\n+    }\n+\n+    public void setRecipientClauses(final List<SearchClause> dynClauses) {\n+        this.recipientClauses = dynClauses;\n+    }\n+\n+    public Map<String, String> getAboutFIQLs() {\n+        if (CollectionUtils.isEmpty(this.aboutClauses)) {\n+            return this.notificationTO.getAbouts();\n+        } else {\n+\n+            final Map<String, String> res = new HashMap<>();\n+            for (Pair<String, List<SearchClause>> pair : this.aboutClauses) {\n+                AbstractFiqlSearchConditionBuilder builder;\n+                switch (pair.getLeft()) {\n+                    case \"USER\":\n+                        builder = SyncopeClient.getUserSearchConditionBuilder();\n+                        break;\n+                    case \"GROUP\":\n+                        builder = SyncopeClient.getGroupSearchConditionBuilder();\n+                        break;\n+                    default:\n+                        builder = SyncopeClient.getAnyObjectSearchConditionBuilder(pair.getLeft());\n+                        break;\n+\n+                }\n+                res.put(pair.getLeft(), getFIQLString(pair.getRight(), builder));\n+            }\n+            return res;\n+        }\n+    }\n+\n+    private String getRecipientsFIQL() {\n+        if (CollectionUtils.isEmpty(this.recipientClauses)) {\n+            return StringUtils.EMPTY;\n+        } else {\n+            return getFIQLString(this.recipientClauses, SyncopeClient.getUserSearchConditionBuilder());\n+        }\n+    }\n+\n+    private String getFIQLString(final List<SearchClause> clauses, final AbstractFiqlSearchConditionBuilder bld) {\n+        return SearchUtils.buildFIQL(clauses, bld);\n+    }\n+\n+    public NotificationTO fillAboutConditions() {\n+        this.notificationTO.getAbouts().clear();\n+        this.notificationTO.getAbouts().putAll(this.getAboutFIQLs());\n+        return this.notificationTO;\n+    }\n+\n+    public NotificationTO fillRecipientConditions() {\n+        this.notificationTO.setRecipientsFIQL(this.getRecipientsFIQL());\n+        return this.notificationTO;\n+    }\n+\n+    public NotificationTO getInnerObject() {\n+        return this.notificationTO;\n+    }\n+}"},{"sha":"ead48bbb566326c4bf150bb3f8630e3d3ddcc680","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationTasks.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.notifications;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.tasks.NotificationTaskDirectoryPanel;\n+import org.apache.syncope.client.console.tasks.TaskExecutionDetails;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.NotificationTO;\n+import org.apache.syncope.common.lib.to.NotificationTaskTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class NotificationTasks extends Panel implements ModalPanel<Serializable> {\n+\n+    private static final long serialVersionUID = 1066124171682570083L;\n+\n+    public NotificationTasks(\n+            final BaseModal<?> baseModal, final PageReference pageReference, final NotificationTO notificationTO) {\n+        super(BaseModal.CONTENT_ID);\n+\n+        final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n+        add(mlp);\n+\n+        mlp.setFirstLevel(new NotificationTaskDirectoryPanel(null, mlp, pageReference) {\n+\n+            private static final long serialVersionUID = -2195387360323687302L;\n+\n+            @Override\n+            protected void viewTask(final NotificationTaskTO taskTO, final AjaxRequestTarget target) {\n+                mlp.next(\"task.view\", new TaskExecutionDetails<>(null, taskTO, pageReference), target);\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public NotificationTO getItem() {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+}"},{"sha":"037773d97cc6437e1f3a16ed44f06bb27bff8f40","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"added","additions":435,"deletions":0,"changes":435,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,435 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.notifications;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.search.AbstractSearchPanel;\n+import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n+import org.apache.syncope.client.console.panels.search.GroupSearchPanel;\n+import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.LoggerRestClient;\n+import org.apache.syncope.client.console.rest.NotificationRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.syncope.common.lib.to.MailTemplateTO;\n+import org.apache.syncope.common.lib.to.NotificationTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.IntMappingType;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.TraceLevel;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.validation.validator.EmailAddressValidator;\n+\n+public class NotificationWizardBuilder extends AjaxWizardBuilder<NotificationHandler> {\n+\n+    private static final long serialVersionUID = -1975312550059578553L;\n+\n+    private final NotificationRestClient restClient = new NotificationRestClient();\n+\n+    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    private final LoggerRestClient loggerRestClient = new LoggerRestClient();\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param notificationTO notification.\n+     * @param pageRef Caller page reference.\n+     */\n+    public NotificationWizardBuilder(final NotificationTO notificationTO, final PageReference pageRef) {\n+        super(new NotificationHandler(notificationTO), pageRef);\n+    }\n+\n+    @Override\n+    protected Serializable onApplyInternal(final NotificationHandler modelObject) {\n+        modelObject.fillRecipientConditions();\n+        modelObject.fillAboutConditions();\n+\n+        final boolean createFlag\n+                = modelObject.getInnerObject().getKey() == null || modelObject.getInnerObject().getKey() <= 0;\n+\n+        if (createFlag) {\n+            restClient.create(modelObject.getInnerObject());\n+        } else {\n+            restClient.update(modelObject.getInnerObject());\n+        }\n+\n+        return null;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final NotificationHandler modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new NotificationWizardBuilder.Details(modelObject));\n+        wizardModel.add(new NotificationWizardBuilder.Events(modelObject));\n+        wizardModel.add(new NotificationWizardBuilder.Abouts(modelObject));\n+        wizardModel.add(new NotificationWizardBuilder.Recipients(modelObject));\n+        return wizardModel;\n+    }\n+\n+    public class Details extends WizardStep {\n+\n+        private static final long serialVersionUID = -7709805590497687958L;\n+\n+        public Details(final NotificationHandler modelObject) {\n+            final NotificationTO notificationTO = modelObject.getInnerObject();\n+            final boolean createFlag = notificationTO.getKey() == null || notificationTO.getKey() <= 0;\n+\n+            final AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\"sender\", getString(\"sender\"),\n+                    new PropertyModel<String>(notificationTO, \"sender\"));\n+            sender.addRequiredLabel();\n+            sender.addValidator(EmailAddressValidator.getInstance());\n+            add(sender);\n+\n+            final AjaxTextFieldPanel subject = new AjaxTextFieldPanel(\"subject\", getString(\"subject\"),\n+                    new PropertyModel<String>(notificationTO, \"subject\"));\n+            subject.addRequiredLabel();\n+            add(subject);\n+\n+            final AjaxDropDownChoicePanel<IntMappingType> recipientAttrType\n+                    = new AjaxDropDownChoicePanel<IntMappingType>(\n+                            \"recipientAttrType\",\n+                            new ResourceModel(\"recipientAttrType\", \"recipientAttrType\").getObject(),\n+                            new PropertyModel<IntMappingType>(notificationTO, \"recipientAttrType\"));\n+            recipientAttrType.setChoices(\n+                    new ArrayList<IntMappingType>(IntMappingType.getAttributeTypes(AnyTypeKind.USER,\n+                            EnumSet.of(IntMappingType.UserKey, IntMappingType.Password))));\n+            recipientAttrType.addRequiredLabel();\n+            add(recipientAttrType);\n+\n+            final AjaxDropDownChoicePanel<String> recipientAttrName = new AjaxDropDownChoicePanel<String>(\n+                    \"recipientAttrName\", new ResourceModel(\"recipientAttrName\", \"recipientAttrName\").getObject(),\n+                    new PropertyModel<String>(notificationTO, \"recipientAttrName\"));\n+            recipientAttrName.setChoices(getSchemaNames(recipientAttrType.getModelObject()));\n+            recipientAttrName.addRequiredLabel();\n+            add(recipientAttrName);\n+\n+            recipientAttrType.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    recipientAttrName.setChoices(getSchemaNames(recipientAttrType.getModelObject()));\n+                    target.add(recipientAttrName);\n+                }\n+            });\n+\n+            final AjaxDropDownChoicePanel<String> template = new AjaxDropDownChoicePanel<String>(\n+                    \"template\", getString(\"template\"),\n+                    new PropertyModel<String>(notificationTO, \"template\"));\n+\n+            template.setChoices(CollectionUtils.collect(\n+                    restClient.getAllAvailableTemplates(), new Transformer<MailTemplateTO, String>() {\n+\n+                @Override\n+                public String transform(final MailTemplateTO input) {\n+                    return input.getKey();\n+                }\n+            }, new ArrayList<String>()));\n+\n+            template.addRequiredLabel();\n+            add(template);\n+\n+            final AjaxDropDownChoicePanel<TraceLevel> traceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n+                    \"traceLevel\", getString(\"traceLevel\"),\n+                    new PropertyModel<TraceLevel>(notificationTO, \"traceLevel\"));\n+            traceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n+            traceLevel.addRequiredLabel();\n+            add(traceLevel);\n+\n+            final AjaxCheckBoxPanel isActive = new AjaxCheckBoxPanel(\"isActive\",\n+                    getString(\"isActive\"), new PropertyModel<Boolean>(notificationTO, \"active\"));\n+\n+            if (createFlag) {\n+                isActive.getField().setDefaultModelObject(Boolean.TRUE);\n+            }\n+            add(isActive);\n+        }\n+\n+    }\n+\n+    public class Events extends WizardStep {\n+\n+        private static final long serialVersionUID = -7709805590497687958L;\n+\n+        public Events(final NotificationHandler modelObject) {\n+            final NotificationTO notificationTO = modelObject.getInnerObject();\n+            add(new LoggerCategoryPanel(\n+                    \"eventSelection\",\n+                    loggerRestClient.listEvents(),\n+                    new PropertyModel<List<String>>(notificationTO, \"events\"),\n+                    pageRef,\n+                    \"Notification\") {\n+\n+                private static final long serialVersionUID = 6429053774964787735L;\n+\n+                @Override\n+                protected String[] getListRoles() {\n+                    return new String[] {};\n+                }\n+\n+                @Override\n+                protected String[] getChangeRoles() {\n+                    return new String[] {};\n+                }\n+            });\n+        }\n+\n+    }\n+\n+    public class About extends Panel {\n+\n+        private static final long serialVersionUID = -9149543787708482882L;\n+\n+        public About(final String id, final IModel<Pair<String, List<SearchClause>>> model) {\n+            super(id, model);\n+            setOutputMarkupId(true);\n+\n+            final List<String> anyTypeTOs = CollectionUtils.collect(\n+                    new AnyTypeRestClient().list(),\n+                    EntityTOUtils.<String, AnyTypeTO>keyTransformer(),\n+                    new ArrayList<String>());\n+\n+            final AjaxDropDownChoicePanel<String> type\n+                    = new AjaxDropDownChoicePanel<String>(\"about\", \"about\", new Model<String>() {\n+\n+                        private static final long serialVersionUID = -2350296434572623272L;\n+\n+                        @Override\n+                        public String getObject() {\n+                            return model.getObject().getLeft();\n+                        }\n+\n+                        @Override\n+                        public void setObject(final String object) {\n+                            model.setObject(Pair.of(object, model.getObject().getRight()));\n+                        }\n+\n+                    });\n+            type.setChoices(anyTypeTOs);\n+            type.addRequiredLabel();\n+            add(type);\n+\n+            final ListModel<SearchClause> clauseModel = new ListModel<SearchClause>() {\n+\n+                private static final long serialVersionUID = 3769540249683319782L;\n+\n+                @Override\n+                public List<SearchClause> getObject() {\n+                    return model.getObject().getRight();\n+                }\n+\n+                @Override\n+                public void setObject(final List<SearchClause> object) {\n+                    model.getObject().setValue(object);\n+                }\n+\n+            };\n+\n+            final WebMarkupContainer searchContainer = new WebMarkupContainer(\"search\");\n+            add(searchContainer.setOutputMarkupId(true));\n+\n+            searchContainer.add(getClauseBuilder(model.getObject().getLeft(), clauseModel).build(\"clauses\"));\n+\n+            type.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    clauseModel.getObject().clear();\n+                    searchContainer.addOrReplace(getClauseBuilder(type.getModelObject(), clauseModel).build(\"clauses\").\n+                            setRenderBodyOnly(true));\n+                    target.add(searchContainer);\n+                }\n+            });\n+        }\n+\n+        private AbstractSearchPanel.Builder<?> getClauseBuilder(\n+                final String type, final ListModel<SearchClause> clauseModel) {\n+            AbstractSearchPanel.Builder<?> clause;\n+\n+            switch (type) {\n+                case \"USER\":\n+                    clause = new UserSearchPanel.Builder(clauseModel);\n+                    break;\n+                case \"GROUP\":\n+                    clause = new GroupSearchPanel.Builder(clauseModel);\n+                    break;\n+                default:\n+                    clause = new AnyObjectSearchPanel.Builder(type, clauseModel);\n+                    break;\n+            }\n+            return clause;\n+        }\n+\n+    }\n+\n+    public class Abouts extends WizardStep {\n+\n+        private static final long serialVersionUID = -7709805590497687958L;\n+\n+        public Abouts(final NotificationHandler modelObject) {\n+            final WebMarkupContainer aboutContainer = new WebMarkupContainer(\"about\");\n+            aboutContainer.setOutputMarkupId(true);\n+            add(aboutContainer);\n+\n+            final IModel<List<Pair<String, List<SearchClause>>>> model\n+                    = new PropertyModel<List<Pair<String, List<SearchClause>>>>(modelObject, \"aboutClauses\");\n+\n+            aboutContainer.add(new MultiPanel<Pair<String, List<SearchClause>>>(\"abouts\", \"abouts\", model, false) {\n+\n+                private static final long serialVersionUID = -2481579077338205547L;\n+\n+                @Override\n+                protected Pair<String, List<SearchClause>> newModelObject() {\n+                    return Pair.<String, List<SearchClause>>of(AnyTypeKind.USER.name(), new ArrayList<SearchClause>());\n+                }\n+\n+                @Override\n+                protected About getItemPanel(final ListItem<Pair<String, List<SearchClause>>> item) {\n+\n+                    return new About(\"panel\", new Model<Pair<String, List<SearchClause>>>() {\n+\n+                        private static final long serialVersionUID = 6799404673615637845L;\n+\n+                        @Override\n+                        public Pair<String, List<SearchClause>> getObject() {\n+                            return item.getModelObject();\n+                        }\n+\n+                        @Override\n+                        public void setObject(final Pair<String, List<SearchClause>> object) {\n+                            item.setModelObject(object);\n+                        }\n+\n+                        @Override\n+                        public void detach() {\n+                            // no detach\n+                        }\n+                    });\n+                }\n+            }.hideLabel());\n+        }\n+    }\n+\n+    public class Recipients extends WizardStep {\n+\n+        private static final long serialVersionUID = -7709805590497687958L;\n+\n+        public Recipients(final NotificationHandler modelObject) {\n+            final NotificationTO notificationTO = modelObject.getInnerObject();\n+            final boolean createFlag = notificationTO.getKey() == null || notificationTO.getKey() <= 0;\n+\n+            final AjaxTextFieldPanel staticRecipientsFieldPanel\n+                    = new AjaxTextFieldPanel(\"panel\", \"staticRecipients\", new Model<String>());\n+            staticRecipientsFieldPanel.addValidator(EmailAddressValidator.getInstance());\n+\n+            final MultiFieldPanel<String> staticRecipients = new MultiFieldPanel.Builder<String>(\n+                    new PropertyModel<List<String>>(notificationTO, \"staticRecipients\")).\n+                    build(\"staticRecipients\", \"staticRecipients\", staticRecipientsFieldPanel);\n+\n+            add(staticRecipients.hideLabel());\n+\n+            final AnyObjectSearchPanel recipients = new UserSearchPanel.Builder(\n+                    new PropertyModel<List<SearchClause>>(modelObject, \"recipientClauses\")).\n+                    required(false).build(\"recipients\");\n+            add(recipients);\n+\n+            final AjaxCheckBoxPanel selfAsRecipient = new AjaxCheckBoxPanel(\"selfAsRecipient\",\n+                    getString(\"selfAsRecipient\"), new PropertyModel<Boolean>(notificationTO, \"selfAsRecipient\"));\n+            add(selfAsRecipient);\n+\n+            if (createFlag) {\n+                selfAsRecipient.getField().setDefaultModelObject(Boolean.FALSE);\n+            }\n+        }\n+\n+    }\n+\n+    private List<String> getSchemaNames(final IntMappingType type) {\n+        final List<String> result;\n+\n+        if (type == null) {\n+            result = Collections.<String>emptyList();\n+        } else {\n+            switch (type) {\n+                case UserPlainSchema:\n+                    result = CollectionUtils.collect(\n+                            schemaRestClient.<PlainSchemaTO>getSchemas(SchemaType.PLAIN, AnyTypeKind.USER.name()),\n+                            EntityTOUtils.<String, PlainSchemaTO>keyTransformer(), new ArrayList<String>());\n+                    break;\n+\n+                case UserDerivedSchema:\n+                    result = CollectionUtils.collect(\n+                            schemaRestClient.<DerSchemaTO>getSchemas(SchemaType.DERIVED, AnyTypeKind.USER.name()),\n+                            EntityTOUtils.<String, DerSchemaTO>keyTransformer(), new ArrayList<String>());\n+                    break;\n+\n+                case UserVirtualSchema:\n+                    result = CollectionUtils.collect(\n+                            schemaRestClient.<VirSchemaTO>getSchemas(SchemaType.VIRTUAL, AnyTypeKind.USER.name()),\n+                            EntityTOUtils.<String, VirSchemaTO>keyTransformer(), new ArrayList<String>());\n+                    break;\n+\n+                case Username:\n+                    result = Collections.singletonList(\"Username\");\n+                    break;\n+\n+                default:\n+                    result = Collections.<String>emptyList();\n+            }\n+        }\n+\n+        return result;\n+    }\n+}"},{"sha":"cf396f67c1f3e73b5830b29ced3d8f3916ee1299","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/SelectedEventsPanel.java","status":"added","additions":172,"deletions":0,"changes":172,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FSelectedEventsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FSelectedEventsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FSelectedEventsPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,172 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.notifications;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.markup.html.form.ListMultipleChoice;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class SelectedEventsPanel extends Panel {\n+\n+    private static final long serialVersionUID = -4832450230348213500L;\n+\n+    private final WebMarkupContainer selectionContainer;\n+\n+    private ListMultipleChoice<String> selectedEvents;\n+\n+    private final IModel<List<String>> model;\n+\n+    public SelectedEventsPanel(final String id, final IModel<List<String>> model) {\n+        super(id);\n+\n+        this.model = model;\n+\n+        selectionContainer = new WebMarkupContainer(\"selectionContainer\");\n+        selectionContainer.setOutputMarkupId(true);\n+        add(selectionContainer);\n+\n+        selectedEvents = new ListMultipleChoice<String>(\"selectedEvents\", new ListModel<String>(), model) {\n+\n+            private static final long serialVersionUID = 1226677544225737338L;\n+\n+            @Override\n+            protected void onComponentTag(final ComponentTag tag) {\n+                super.onComponentTag(tag);\n+                tag.remove(\"size\");\n+                tag.remove(\"multiple\");\n+                tag.put(\"size\", 5);\n+            }\n+        };\n+\n+        selectedEvents.setMaxRows(5);\n+        selectedEvents.setChoiceRenderer(new IChoiceRenderer<String>() {\n+\n+            private static final long serialVersionUID = -4288397951948436434L;\n+\n+            @Override\n+            public Object getDisplayValue(final String object) {\n+                return object;\n+            }\n+\n+            @Override\n+            public String getIdValue(final String object, final int index) {\n+                return object;\n+            }\n+\n+            @Override\n+            public String getObject(final String id, final IModel<? extends List<? extends String>> choices) {\n+                return id;\n+            }\n+        });\n+\n+        selectedEvents.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -151291731388673682L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                send(SelectedEventsPanel.this.getPage(),\n+                        Broadcast.BREADTH,\n+                        new InspectSelectedEvent(target, selectedEvents.getModelValue()));\n+            }\n+        });\n+\n+        selectionContainer.add(selectedEvents);\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof EventSelectionChanged) {\n+            final EventSelectionChanged eventSelectionChanged = (EventSelectionChanged) event.getPayload();\n+\n+            for (String toBeRemoved : eventSelectionChanged.getToBeRemoved()) {\n+                model.getObject().remove(toBeRemoved);\n+            }\n+\n+            for (String toBeAdded : eventSelectionChanged.getToBeAdded()) {\n+                if (!model.getObject().contains(toBeAdded)) {\n+                    model.getObject().add(toBeAdded);\n+                }\n+            }\n+\n+            eventSelectionChanged.getTarget().add(selectionContainer);\n+        }\n+    }\n+\n+    public static class InspectSelectedEvent {\n+\n+        private final AjaxRequestTarget target;\n+\n+        private final String event;\n+\n+        public InspectSelectedEvent(final AjaxRequestTarget target, final String event) {\n+            this.target = target;\n+            this.event = event;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+\n+        public String getEvent() {\n+            return event;\n+        }\n+    }\n+\n+    public static class EventSelectionChanged {\n+\n+        private final AjaxRequestTarget target;\n+\n+        private final Set<String> toBeRemoved;\n+\n+        private final Set<String> toBeAdded;\n+\n+        public EventSelectionChanged(\n+                final AjaxRequestTarget target,\n+                final Set<String> toBeAdded,\n+                final Set<String> toBeRemoved) {\n+            this.target = target;\n+            this.toBeAdded = toBeAdded;\n+            this.toBeRemoved = toBeRemoved;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+\n+        public Set<String> getToBeRemoved() {\n+            return toBeRemoved;\n+        }\n+\n+        public Set<String> getToBeAdded() {\n+            return toBeAdded;\n+        }\n+    }\n+}"},{"sha":"c09657c957340f226b7fa03c30c7793160561db0","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Notifications.java","status":"modified","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -18,7 +18,17 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.util.ArrayList;\n+import java.util.List;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.notifications.MailTemplateDirectoryPanel;\n+import org.apache.syncope.client.console.notifications.NotificationDirectoryPanel;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n public class Notifications extends BasePage {\n@@ -29,5 +39,36 @@ public Notifications(final PageParameters parameters) {\n         super(parameters);\n \n         body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n+\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.setOutputMarkupId(true);\n+        content.setMarkupId(\"notifications\");\n+        content.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList()));\n+        body.add(content);\n+    }\n+\n+    private List<ITab> buildTabList() {\n+        final List<ITab> tabs = new ArrayList<>();\n+\n+        tabs.add(new AbstractTab(new ResourceModel(\"notifications\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new NotificationDirectoryPanel(panelId, getPageReference());\n+            }\n+        });\n+\n+        tabs.add(new AbstractTab(new ResourceModel(\"notification.templates\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new MailTemplateDirectoryPanel(panelId, getPageReference());\n+            }\n+        });\n+        return tabs;\n     }\n }"},{"sha":"3758258b39a97de7f9332af3ce232e31cf026f50","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Roles.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.panels.RoleDirectoryPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.role.RoleHandler;\n import org.apache.syncope.client.console.wizards.role.RoleWizardBuilder;\n@@ -46,8 +45,7 @@ public Roles(final PageParameters parameters) {\n             private static final long serialVersionUID = -5960765294082359003L;\n \n         }.disableCheckBoxes().addNewItemPanelBuilder(\n-                new RoleWizardBuilder(BaseModal.CONTENT_ID, new RoleTO(), getPageReference()), true).\n-                build(\"rolesPanel\");\n+                new RoleWizardBuilder(new RoleTO(), getPageReference()), true).build(\"rolesPanel\");\n \n         content.add(rolesPanel);\n     }"},{"sha":"f6aeaa525ce741334cc4552fda2b12c52c4e9ea5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -25,7 +25,6 @@\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wizards.any.AnyObjectWizardBuilder;\n import org.apache.syncope.client.console.wizards.any.GroupWizardBuilder;\n@@ -200,7 +199,7 @@ private Panel getDirectoryPanel(final String id) {\n                         anyTypeTO.getKey(),\n                         pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n                         setFiql(fiql).addNewItemPanelBuilder(new UserWizardBuilder(\n-                        BaseModal.CONTENT_ID, userTO, anyTypeTO.getClasses(), pageRef)).build(id);\n+                        userTO, anyTypeTO.getClasses(), pageRef)).build(id);\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER, StandardEntitlement.USER_LIST);\n                 break;\n             case GROUP:\n@@ -212,7 +211,7 @@ private Panel getDirectoryPanel(final String id) {\n                         anyTypeTO.getKey(),\n                         pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n                         setFiql(fiql).addNewItemPanelBuilder(new GroupWizardBuilder(\n-                        BaseModal.CONTENT_ID, groupTO, anyTypeTO.getClasses(), pageRef)).build(id);\n+                        groupTO, anyTypeTO.getClasses(), pageRef)).build(id);\n                 // list of group is available to all authenticated users\n                 break;\n             case ANY_OBJECT:\n@@ -226,7 +225,7 @@ private Panel getDirectoryPanel(final String id) {\n                         anyTypeTO.getKey(),\n                         pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n                         setFiql(fiql).addNewItemPanelBuilder(new AnyObjectWizardBuilder(\n-                        BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).build(id);\n+                        anyObjectTO, anyTypeTO.getClasses(), pageRef)).build(id);\n                 MetaDataRoleAuthorizationStrategy.authorize(\n                         panel, WebPage.RENDER, AnyEntitlement.LIST.getFor(anyTypeTO.getKey()));\n                 break;"},{"sha":"fdfbc655da38418162f090aeb71e88e7b3b4a287","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -33,7 +33,6 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n@@ -60,13 +59,12 @@ public AnyTypeClassesPanel(final String id, final PageReference pageRef) {\n         super(id, pageRef);\n         disableCheckBoxes();\n \n-        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AnyTypeClassTO>(\n-                BaseModal.CONTENT_ID, new AnyTypeClassTO(), pageRef) {\n+        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AnyTypeClassTO>(new AnyTypeClassTO(), pageRef) {\n \n             private static final long serialVersionUID = -6388405037134399367L;\n \n             @Override\n-            public ModalPanel<AnyTypeClassTO> build(final int index, final AjaxWizard.Mode mode) {\n+            public ModalPanel<AnyTypeClassTO> build(final String id, final int index, final AjaxWizard.Mode mode) {\n                 final AnyTypeClassTO modelObject = newModelObject();\n                 return new AnyTypeClassModalPanel(modal, modelObject, pageRef) {\n "},{"sha":"6b3c04235084c0170949e1b96725ed791a54ef8e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -34,7 +34,6 @@\n import org.apache.syncope.client.console.panels.AnyTypesPanel.AnyTypeProvider;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n@@ -61,13 +60,12 @@ public AnyTypesPanel(final String id, final PageReference pageRef) {\n         super(id, pageRef);\n         disableCheckBoxes();\n \n-        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AnyTypeTO>(\n-                BaseModal.CONTENT_ID, new AnyTypeTO(), pageRef) {\n+        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AnyTypeTO>(new AnyTypeTO(), pageRef) {\n \n             private static final long serialVersionUID = -6388405037134399367L;\n \n             @Override\n-            public ModalPanel<AnyTypeTO> build(final int index, final AjaxWizard.Mode mode) {\n+            public ModalPanel<AnyTypeTO> build(final String id, final int index, final AjaxWizard.Mode mode) {\n                 final AnyTypeTO modelObject = newModelObject();\n                 return new AnyTypeModalPanel(modal, modelObject, pageRef) {\n "},{"sha":"87eeee315af21e789a0b06dd7850ce52b009b5e0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateModalPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateModalPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -35,8 +35,8 @@ public ParametersCreateModalPanel(\n             final PageReference pageRef) {\n         super(modal, pageRef);\n         this.attrTO = attrTO;\n-        add(new ParametersCreateWizardPanel(\"parametersCreateWizardPanel\",\n-                new ParametersCreateWizardPanel.ParametersForm(), pageRef).build(AjaxWizard.Mode.CREATE));\n+        add(new ParametersCreateWizardPanel(new ParametersCreateWizardPanel.ParametersForm(), pageRef).\n+                build(\"parametersCreateWizardPanel\", AjaxWizard.Mode.CREATE));\n     }\n \n     @Override"},{"sha":"eace16baa95d962ab81dc7abffaed74802dde7c9","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -37,8 +37,8 @@ public class ParametersCreateWizardPanel extends AjaxWizardBuilder<ParametersCre\n \n     private static final Logger LOG = LoggerFactory.getLogger(ParametersCreateWizardPanel.class);\n \n-    public ParametersCreateWizardPanel(final String id, final ParametersForm defaultItem, final PageReference pageRef) {\n-        super(id, defaultItem, pageRef);\n+    public ParametersCreateWizardPanel(final ParametersForm defaultItem, final PageReference pageRef) {\n+        super(defaultItem, pageRef);\n \n     }\n "},{"sha":"df265fda3fd2e1f331a1b96e86cfb66380b4af6c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersPanel.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -95,13 +95,12 @@ public void onClose(final AjaxRequestTarget target) {\n \n         addInnerObject(modalDetails);\n \n-        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AttrTO>(\n-                BaseModal.CONTENT_ID, new AttrTO(), pageRef) {\n+        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AttrTO>(new AttrTO(), pageRef) {\n \n             private static final long serialVersionUID = 1995192603527154740L;\n \n             @Override\n-            public ModalPanel<AttrTO> build(final int index, final AjaxWizard.Mode mode) {\n+            public ModalPanel<AttrTO> build(final String id, final int index, final AjaxWizard.Mode mode) {\n                 return new ParametersCreateModalPanel(modal, newModelObject(), pageRef);\n             }\n         }, true);"},{"sha":"314ce42427b7c2bbe846d4f30e410428b5ef050d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypesPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -34,7 +34,6 @@\n import org.apache.syncope.client.console.panels.RelationshipTypesPanel.RelationshipTypeProvider;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n@@ -61,13 +60,13 @@ public RelationshipTypesPanel(final String id, final PageReference pageRef) {\n         super(id, pageRef);\n         disableCheckBoxes();\n \n-        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<RelationshipTypeTO>(\n-                BaseModal.CONTENT_ID, new RelationshipTypeTO(), pageRef) {\n+        this.addNewItemPanelBuilder(\n+                new AbstractModalPanelBuilder<RelationshipTypeTO>(new RelationshipTypeTO(), pageRef) {\n \n             private static final long serialVersionUID = -6388405037134399367L;\n \n             @Override\n-            public ModalPanel<RelationshipTypeTO> build(final int index, final AjaxWizard.Mode mode) {\n+            public ModalPanel<RelationshipTypeTO> build(final String id, final int index, final AjaxWizard.Mode mode) {\n                 final RelationshipTypeTO modelObject = newModelObject();\n                 return new RelationshipTypeModalPanel(modal, modelObject, pageRef) {\n "},{"sha":"11c7468b35f9a840d581878fc79a920758e682a2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceModal.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -92,8 +92,8 @@ public Panel getPanel(final String panelId) {\n         //--------------------------------\n         // Resource provision panels\n         //--------------------------------\n-        final ListViewPanel.Builder<ProvisionTO> builder =\n-                new ListViewPanel.Builder<ProvisionTO>(ProvisionTO.class, pageRef) {\n+        final ListViewPanel.Builder<ProvisionTO> builder = new ListViewPanel.Builder<ProvisionTO>(ProvisionTO.class,\n+                pageRef) {\n \n             private static final long serialVersionUID = 4907732721283972943L;\n \n@@ -163,7 +163,7 @@ public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionT\n                     }\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.RESOURCE_DELETE);\n \n-        builder.addNewItemPanelBuilder(new ProvisionWizardBuilder(\"wizard\", model.getObject(), pageRef));\n+        builder.addNewItemPanelBuilder(new ProvisionWizardBuilder(model.getObject(), pageRef));\n \n         tabs.add(new AbstractTab(new ResourceModel(\"provisions\")) {\n "},{"sha":"7d61e474dedd7dc0aa20aca3e66d62d6490bf90e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -38,7 +38,6 @@\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n@@ -89,13 +88,14 @@ public SchemaTypePanel(final String id, final SchemaType schemaType, final PageR\n         this.schemaType = schemaType;\n \n         try {\n-            this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AbstractSchemaTO>(\n-                    BaseModal.CONTENT_ID, schemaType.getToClass().newInstance(), pageRef) {\n+            this.addNewItemPanelBuilder(\n+                    new AbstractModalPanelBuilder<AbstractSchemaTO>(schemaType.getToClass().newInstance(), pageRef) {\n \n                 private static final long serialVersionUID = -6388405037134399367L;\n \n                 @Override\n-                public ModalPanel<AbstractSchemaTO> build(final int index, final AjaxWizard.Mode mode) {\n+                public ModalPanel<AbstractSchemaTO> build(\n+                        final String id, final int index, final AjaxWizard.Mode mode) {\n                     final AbstractSchemaTO modelObject = newModelObject();\n                     return new SchemaModalPanel(modal, modelObject, pageRef) {\n "},{"sha":"38d81cf5c6cdb1b8ef1a339ec926b1e9629c9c79","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -35,7 +35,6 @@\n import org.apache.syncope.client.console.panels.SecurityQuestionsPanel.SecurityQuestionsProvider;\n import org.apache.syncope.client.console.rest.SecurityQuestionRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n@@ -70,13 +69,13 @@ protected WizardMgtPanel<SecurityQuestionTO> newInstance(final String id) {\n             }\n         }.disableCheckBoxes());\n \n-        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<SecurityQuestionTO>(\n-                BaseModal.CONTENT_ID, new SecurityQuestionTO(), pageRef) {\n+        this.addNewItemPanelBuilder(\n+                new AbstractModalPanelBuilder<SecurityQuestionTO>(new SecurityQuestionTO(), pageRef) {\n \n             private static final long serialVersionUID = -6388405037134399367L;\n \n             @Override\n-            public ModalPanel<SecurityQuestionTO> build(final int index, final AjaxWizard.Mode mode) {\n+            public ModalPanel<SecurityQuestionTO> build(final String id, final int index, final AjaxWizard.Mode mode) {\n                 final SecurityQuestionTO modelObject = newModelObject();\n                 return new SecurityQuestionsModalPanel(modal, modelObject, pageRef);\n             }"},{"sha":"3f9d82018696e84bc35c5ed9bde1166ad5e8c62d","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/NotificationRestClient.java","status":"modified","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -18,14 +18,23 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import java.io.InputStream;\n import java.util.List;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.to.MailTemplateTO;\n import org.apache.syncope.common.lib.to.NotificationTO;\n+import org.apache.syncope.common.lib.types.MailTemplateFormat;\n+import org.apache.syncope.common.rest.api.service.MailTemplateService;\n import org.apache.syncope.common.rest.api.service.NotificationService;\n+import org.slf4j.LoggerFactory;\n \n public class NotificationRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 6328933265096511690L;\n \n+    protected static final org.slf4j.Logger LOG = LoggerFactory.getLogger(NotificationRestClient.class);\n+\n     public List<NotificationTO> getAllNotifications() {\n         return getService(NotificationService.class).list();\n     }\n@@ -45,4 +54,34 @@ public void update(final NotificationTO notificationTO) {\n     public void delete(final Long key) {\n         getService(NotificationService.class).delete(key);\n     }\n+\n+    public List<MailTemplateTO> getAllAvailableTemplates() {\n+        return getService(MailTemplateService.class).list();\n+    }\n+\n+    public void createTemplate(final MailTemplateTO mailTemplateTO) {\n+        getService(MailTemplateService.class).create(mailTemplateTO);\n+    }\n+\n+    public void deleteTemplate(final String key) {\n+        getService(MailTemplateService.class).delete(key);\n+    }\n+\n+    public MailTemplateTO readTemplate(final String key) {\n+        return getService(MailTemplateService.class).read(key);\n+    }\n+\n+    public String readTemplateFormat(final String key, final MailTemplateFormat format) {\n+        try {\n+            return IOUtils.toString(InputStream.class.cast(\n+                    getService(MailTemplateService.class).getFormat(key, format).getEntity()));\n+        } catch (Exception e) {\n+            LOG.info(\"Error retrieving mail tenplate content\");\n+            return StringUtils.EMPTY;\n+        }\n+    }\n+\n+    public void updateTemplateFormat(final String key, final String str, final MailTemplateFormat format) {\n+        getService(MailTemplateService.class).setFormat(key, format, IOUtils.toInputStream(str));\n+    }\n }"},{"sha":"6309e74a3d88a0d2a2538e9428c39fc15a656ac5","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/NotificationTaskDirectoryPanel.java","status":"added","additions":208,"deletions":0,"changes":208,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,208 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.TaskDataProvider;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.NotificationTaskTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+/**\n+ * Tasks page.\n+ */\n+public abstract class NotificationTaskDirectoryPanel\n+        extends TaskDirectoryPanel<NotificationTaskTO> implements ModalPanel<NotificationTaskTO> {\n+\n+    private static final long serialVersionUID = 4984337552918213290L;\n+\n+    protected NotificationTaskDirectoryPanel(\n+            final BaseModal<?> baseModal,\n+            final MultilevelPanel multiLevelPanelRef,\n+            final PageReference pageRef) {\n+        super(baseModal, multiLevelPanelRef, pageRef);\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected List<IColumn<NotificationTaskTO, String>> getColumns() {\n+        final List<IColumn<NotificationTaskTO, String>> columns = new ArrayList<>();\n+\n+        columns.add(new PropertyColumn<NotificationTaskTO, String>(\n+                new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n+\n+        columns.add(new PropertyColumn<NotificationTaskTO, String>(\n+                new StringResourceModel(\"subject\", this, null), \"subject\", \"subject\"));\n+\n+        columns.add(new CollectionPropertyColumn<NotificationTaskTO>(\n+                new StringResourceModel(\"recipients\", this, null), \"recipients\", \"recipients\"));\n+\n+        columns.add(new DatePropertyColumn<NotificationTaskTO>(\n+                new StringResourceModel(\"start\", this, null), \"start\", \"start\"));\n+\n+        columns.add(new DatePropertyColumn<NotificationTaskTO>(\n+                new StringResourceModel(\"end\", this, null), \"end\", \"end\"));\n+\n+        columns.add(new PropertyColumn<NotificationTaskTO, String>(\n+                new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n+\n+        columns.add(new ActionColumn<NotificationTaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public ActionLinksPanel<NotificationTaskTO> getActions(\n+                    final String componentId, final IModel<NotificationTaskTO> model) {\n+\n+                final NotificationTaskTO taskTO = model.getObject();\n+\n+                final ActionLinksPanel<NotificationTaskTO> panel = ActionLinksPanel.<NotificationTaskTO>builder().\n+                        add(new ActionLink<NotificationTaskTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n+                                viewTask(taskTO, target);\n+                            }\n+                        }, ActionLink.ActionType.VIEW, StandardEntitlement.TASK_READ).\n+                        add(new ActionLink<NotificationTaskTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n+                                try {\n+                                    restClient.startExecution(taskTO.getKey(), new Date());\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (SyncopeClientException e) {\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n+                                    LOG.error(\"While running {}\", taskTO.getKey(), e);\n+                                }\n+                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.EXECUTE, StandardEntitlement.TASK_EXECUTE).\n+                        add(new ActionLink<NotificationTaskTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final NotificationTaskTO modelObject) {\n+                                try {\n+                                    restClient.delete(taskTO.getKey(), NotificationTaskTO.class);\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (SyncopeClientException e) {\n+                                    LOG.error(\"While deleting {}\", taskTO.getKey(), e);\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n+                                }\n+                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE).build(componentId);\n+\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<NotificationTaskTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<NotificationTaskTO> panel = ActionLinksPanel.builder();\n+\n+                return panel.add(new ActionLink<NotificationTaskTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final NotificationTaskTO ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected Collection<ActionType> getBulkActions() {\n+        final List<ActionType> bulkActions = new ArrayList<>();\n+        bulkActions.add(ActionType.DELETE);\n+        bulkActions.add(ActionType.EXECUTE);\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected NotificationTasksProvider dataProvider() {\n+        return new NotificationTasksProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS;\n+    }\n+\n+    public class NotificationTasksProvider extends TaskDataProvider<NotificationTaskTO> {\n+\n+        private static final long serialVersionUID = 4725679400450513556L;\n+\n+        public NotificationTasksProvider(final int paginatorRows) {\n+            super(paginatorRows, TaskType.PROPAGATION, restClient);\n+        }\n+\n+        @Override\n+        public Iterator<NotificationTaskTO> iterator(final long first, final long count) {\n+            final int page = ((int) first / paginatorRows);\n+\n+            final List<NotificationTaskTO> tasks = restClient.list(\n+                    NotificationTaskTO.class, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n+\n+            Collections.sort(tasks, getComparator());\n+            return tasks.iterator();\n+        }\n+    }\n+}"},{"sha":"61d1d4884ead3f0103b5c98459cce34992ff28dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -81,7 +81,7 @@ public String transform(final RealmTO realm) {\n     };\n \n     public SchedTaskWizardBuilder(final T taskTO, final PageReference pageRef) {\n-        super(\"wizard\", taskTO, pageRef);\n+        super(taskTO, pageRef);\n     }\n \n     @Override"},{"sha":"f04fa5a5b1f0289fed0724b80bf281e4b9a64281","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CollectionPanel.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import java.util.List;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class CollectionPanel extends Panel {\n+\n+    private static final long serialVersionUID = -4042497356836230377L;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public CollectionPanel(final String id, final List values) {\n+        super(id);\n+\n+        add(new ListView(\"collection\", values) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem item) {\n+                final String value = item.getModelObject() == null ? null : item.getModelObject().toString();\n+                item.add(new Label(\"item\", new ResourceModel(value, value)));\n+            }\n+        });\n+    }\n+}"},{"sha":"a5fd774da17c4591b32e4604eafc6c92e6badfe7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CollectionPropertyColumn.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPropertyColumn.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+\n+public class CollectionPropertyColumn<T> extends PropertyColumn<T, String> {\n+\n+    private static final long serialVersionUID = 8077865338230121496L;\n+\n+    public CollectionPropertyColumn(\n+            final IModel<String> displayModel,\n+            final String sortProperty,\n+            final String propertyExpression) {\n+        super(displayModel, sortProperty, propertyExpression);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void populateItem(\n+            final Item<ICellPopulator<T>> cellItem, final String componentId, final IModel<T> rowModel) {\n+\n+        final Object value = getDataModel(rowModel).getObject();\n+\n+        if (value instanceof Collection) {\n+            final List values = new ArrayList((Collection) value);\n+            Collections.sort(values);\n+            cellItem.add(new CollectionPanel(componentId, values));\n+        }\n+    }\n+}"},{"sha":"08b304e833a970fef0b7376d34f79b6a70e457c5","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AbstractMultiPanel.java","status":"added","additions":217,"deletions":0,"changes":217,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,217 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.IndicatorAjaxSubmitLink;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public abstract class AbstractMultiPanel<INNER> extends AbstractFieldPanel<List<INNER>> {\n+\n+    private static final long serialVersionUID = -6322397761456513324L;\n+\n+    private final ListView<INNER> view;\n+\n+    private final boolean eventTemplate;\n+\n+    private final WebMarkupContainer container;\n+\n+    private final Form<?> form;\n+\n+    public AbstractMultiPanel(\n+            final String id,\n+            final String name,\n+            final IModel<List<INNER>> model,\n+            final boolean eventTemplate) {\n+\n+        super(id, name, model);\n+\n+        this.eventTemplate = eventTemplate;\n+\n+        // -----------------------\n+        // Object container definition\n+        // -----------------------\n+        container = new WebMarkupContainer(\"multiValueContainer\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        form = new Form<>(\"innerForm\");\n+        container.add(form);\n+        // -----------------------\n+\n+        view = new InnerView(\"view\", name, model);\n+\n+        final List<INNER> obj = model.getObject();\n+        if (obj == null || obj.isEmpty()) {\n+            form.addOrReplace(getNoDataFragment(model, name));\n+        } else {\n+            form.addOrReplace(getDataFragment());\n+        }\n+    }\n+\n+    private Fragment getNoDataFragment(final IModel<List<INNER>> model, final String label) {\n+        final Fragment fragment = new Fragment(\"content\", \"noDataFragment\", AbstractMultiPanel.this);\n+        fragment.add(new Label(\"field-label\", new ResourceModel(label, label)));\n+        fragment.add(getPlusFragment(model, label));\n+        return fragment;\n+    }\n+\n+    private Fragment getDataFragment() {\n+        final Fragment contentFragment = new Fragment(\"content\", \"dataFragment\", AbstractMultiPanel.this);\n+        contentFragment.add(view.setOutputMarkupId(true));\n+        return contentFragment;\n+    }\n+\n+    private Fragment getPlusFragment(final IModel<List<INNER>> model, final String label) {\n+        final IndicatorAjaxSubmitLink plus = new IndicatorAjaxSubmitLink(\"add\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                //Add current component\n+                model.getObject().add(newModelObject());\n+\n+                if (model.getObject().size() == 1) {\n+                    form.addOrReplace(getDataFragment());\n+                }\n+\n+                target.add(container);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                error(getString(Constants.OPERATION_ERROR));\n+                super.onError(target, form);\n+                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+            }\n+\n+        };\n+\n+        final Fragment fragment = new Fragment(\"panelPlus\", \"fragmentPlus\", AbstractMultiPanel.this);\n+        fragment.addOrReplace(plus);\n+        fragment.setRenderBodyOnly(true);\n+\n+        return fragment;\n+    }\n+\n+    public ListView<INNER> getView() {\n+        return view;\n+    }\n+\n+    @Override\n+    public AbstractMultiPanel<INNER> setModelObject(final List<INNER> object) {\n+        view.setModelObject(object);\n+        return this;\n+    }\n+\n+    public static class MultiValueSelectorEvent {\n+\n+        private final AjaxRequestTarget target;\n+\n+        public MultiValueSelectorEvent(final AjaxRequestTarget target) {\n+            this.target = target;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n+\n+    protected abstract INNER newModelObject();\n+\n+    private final class InnerView extends ListView<INNER> {\n+\n+        private static final long serialVersionUID = -9180479401817023838L;\n+\n+        private final String label;\n+\n+        private final IModel<List<INNER>> model;\n+\n+        private InnerView(final String id, final String label, final IModel<List<INNER>> model) {\n+            super(id, model);\n+            this.label = label;\n+            this.model = model;\n+        }\n+\n+        @Override\n+        protected void populateItem(final ListItem<INNER> item) {\n+\n+            final Panel panel = getItemPanel(item);\n+\n+            item.add(panel.setRenderBodyOnly(true));\n+\n+            final IndicatorAjaxSubmitLink minus = new IndicatorAjaxSubmitLink(\"drop\") {\n+\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                    //Drop current component\n+                    model.getObject().remove(item.getModelObject());\n+                    clearInput(panel);\n+\n+                    if (model.getObject().isEmpty()) {\n+                        form.addOrReplace(getNoDataFragment(model, label));\n+                    }\n+\n+                    target.add(container);\n+\n+                    if (eventTemplate) {\n+                        send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n+                    }\n+                }\n+\n+                @Override\n+                protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                    onSubmit(target, form);\n+                }\n+            };\n+\n+            item.add(minus);\n+\n+            final Fragment fragment;\n+            if (item.getIndex() == model.getObject().size() - 1) {\n+                fragment = getPlusFragment(model, label);\n+            } else {\n+                fragment = new Fragment(\"panelPlus\", \"emptyFragment\", AbstractMultiPanel.this);\n+            }\n+\n+            item.add(fragment.setRenderBodyOnly(true));\n+        }\n+    }\n+\n+    protected abstract Panel getItemPanel(final ListItem<INNER> item);\n+\n+    protected void clearInput(final Panel panel) {\n+        // do nothing by default\n+    }\n+}"},{"sha":"c254074dd1afcfc9cc040ed19a50efd3d7fd0b9d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -46,6 +46,8 @@ public enum ActionType {\n         CLONE(\"create\"),\n         CREATE(\"create\"),\n         EDIT(\"read\"),\n+        HTML_EDIT(\"read\"),\n+        TEXT_EDIT(\"read\"),\n         RESET(\"update\"),\n         ENABLE(\"update\"),\n         NOT_FOND(\"read\"),"},{"sha":"44b070a49eaed5aff1d1bb96e74dceb1d296712a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -61,6 +61,8 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelClone\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelHtmlEdit\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelTextEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelReset\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEnable\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelNotFound\", \"emptyFragment\", this));\n@@ -306,6 +308,44 @@ public String getAjaxIndicatorMarkupId() {\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n+            case HTML_EDIT:\n+                fragment = new Fragment(\"panelHtmlEdit\", \"fragmentHtmlEdit\", this);\n+\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"htmlEditLink\") {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n+            case TEXT_EDIT:\n+                fragment = new Fragment(\"panelTextEdit\", \"fragmentTextEdit\", this);\n+\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"textEditLink\") {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n             case ENABLE:\n                 fragment = new Fragment(\"panelEnable\", \"fragmentEnable\", this);\n \n@@ -788,6 +828,14 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n                 break;\n \n+            case HTML_EDIT:\n+                super.addOrReplace(new Fragment(\"panelHtmlEdit\", \"emptyFragment\", this));\n+                break;\n+\n+            case TEXT_EDIT:\n+                super.addOrReplace(new Fragment(\"panelTestEdit\", \"emptyFragment\", this));\n+                break;\n+\n             case VIEW:\n                 super.addOrReplace(new Fragment(\"panelView\", \"emptyFragment\", this));\n                 break;"},{"sha":"16df1e7231c44bb7d404dfa9f6e5d885d3b9770f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.java","status":"modified","additions":21,"deletions":176,"changes":197,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -22,135 +22,29 @@\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.IndicatorAjaxSubmitLink;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n \n-public abstract class MultiFieldPanel<E extends Serializable> extends AbstractFieldPanel<List<E>> {\n+public abstract class MultiFieldPanel<E extends Serializable> extends AbstractMultiPanel<E> {\n \n     private static final long serialVersionUID = -6322397761456513324L;\n \n-    private final ListView<E> view;\n-\n     private final FieldPanel<? extends Serializable> panelTemplate;\n \n-    private final boolean eventTemplate;\n-\n-    private final WebMarkupContainer container;\n-\n-    private final Form<?> form;\n-\n     private MultiFieldPanel(\n             final String id,\n             final String name,\n             final IModel<List<E>> model,\n             final FieldPanel<? extends Serializable> panelTemplate,\n             final boolean eventTemplate) {\n \n-        super(id, name, model);\n-\n+        super(id, name, model, eventTemplate);\n         this.panelTemplate = panelTemplate;\n-        this.eventTemplate = eventTemplate;\n-\n-        // -----------------------\n-        // Object container definition\n-        // -----------------------\n-        container = new WebMarkupContainer(\"multiValueContainer\");\n-        container.setOutputMarkupId(true);\n-        add(container);\n-\n-        form = new Form<>(\"innerForm\");\n-        container.add(form);\n-        // -----------------------\n-\n-        view = new InnerView(\"view\", name, model);\n-\n-        final List<E> obj = model.getObject();\n-        if (obj == null || obj.isEmpty()) {\n-            form.addOrReplace(getNoDataFragment(model, name));\n-        } else {\n-            form.addOrReplace(getDataFragment(model, name));\n-        }\n-    }\n-\n-    private Fragment getNoDataFragment(final IModel<List<E>> model, final String label) {\n-        final Fragment fragment = new Fragment(\"content\", \"noDataFragment\", MultiFieldPanel.this);\n-        fragment.add(new Label(\"field-label\", new ResourceModel(label, label)));\n-        fragment.add(getPlusFragment(model, label));\n-        return fragment;\n-    }\n-\n-    private Fragment getDataFragment(final IModel<List<E>> model, final String label) {\n-        final Fragment contentFragment = new Fragment(\"content\", \"dataFragment\", MultiFieldPanel.this);\n-        contentFragment.add(view.setOutputMarkupId(true));\n-        return contentFragment;\n-    }\n-\n-    private Fragment getPlusFragment(final IModel<List<E>> model, final String label) {\n-        final IndicatorAjaxSubmitLink plus = new IndicatorAjaxSubmitLink(\"add\") {\n-\n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                //Add current component\n-                model.getObject().add(newModelObject());\n-\n-                if (model.getObject().size() == 1) {\n-                    form.addOrReplace(getDataFragment(model, label));\n-                }\n-\n-                target.add(container);\n-            }\n-\n-            @Override\n-            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                error(getString(Constants.OPERATION_ERROR));\n-                super.onError(target, form);\n-            }\n-\n-        };\n-\n-        final Fragment fragment = new Fragment(\"panelPlus\", \"fragmentPlus\", MultiFieldPanel.this);\n-        fragment.addOrReplace(plus);\n-        fragment.setRenderBodyOnly(true);\n-\n-        return fragment;\n-    }\n-\n-    public ListView<E> getView() {\n-        return view;\n-    }\n-\n-    @Override\n-    public MultiFieldPanel<E> setModelObject(final List<E> object) {\n-        view.setModelObject(object);\n-        return this;\n-    }\n-\n-    public static class MultiValueSelectorEvent {\n-\n-        private final AjaxRequestTarget target;\n-\n-        public MultiValueSelectorEvent(final AjaxRequestTarget target) {\n-            this.target = target;\n-        }\n-\n-        public AjaxRequestTarget getTarget() {\n-            return target;\n-        }\n     }\n \n-    protected abstract E newModelObject();\n-\n     public static class Builder<E extends Serializable> implements Serializable {\n \n         private static final long serialVersionUID = 1L;\n@@ -194,83 +88,34 @@ protected E newModelObject() {\n                     return Builder.this.newModelObject();\n                 }\n \n-            };\n-        }\n-    }\n-\n-    private final class InnerView extends ListView<E> {\n-\n-        private static final long serialVersionUID = -9180479401817023838L;\n-\n-        private final String label;\n-\n-        private final IModel<List<E>> model;\n-\n-        private InnerView(final String id, final String label, final IModel<List<E>> model) {\n-            super(id, model);\n-            this.label = label;\n-            this.model = model;\n-        }\n-\n-        @Override\n-        protected void populateItem(final ListItem<E> item) {\n-            final FieldPanel<? extends Serializable> fieldPanel = panelTemplate.clone();\n-            fieldPanel.setIndex(item.getIndex());\n-            fieldPanel.setNewModel(item);\n-            fieldPanel.settingsDependingComponents();\n-\n-            if (eventTemplate) {\n-                fieldPanel.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-                    private static final long serialVersionUID = -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n-                    }\n-                });\n-            }\n-\n-            item.add(fieldPanel.hideLabel().setRenderBodyOnly(true));\n-\n-            final IndicatorAjaxSubmitLink minus = new IndicatorAjaxSubmitLink(\"drop\") {\n-\n-                private static final long serialVersionUID = -7978723352517770644L;\n-\n                 @Override\n-                protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                    //Drop current component\n-                    model.getObject().remove(item.getModelObject());\n-                    fieldPanel.getField().clearInput();\n+                protected FieldPanel<? extends Serializable> getItemPanel(final ListItem<E> item) {\n+                    final FieldPanel<? extends Serializable> fieldPanel = panelTemplate.clone();\n+                    fieldPanel.setIndex(item.getIndex());\n+                    fieldPanel.setNewModel(item);\n+                    fieldPanel.settingsDependingComponents();\n+                    fieldPanel.hideLabel();\n \n-                    if (model.getObject().isEmpty()) {\n-                        form.addOrReplace(getNoDataFragment(model, label));\n-                    }\n+                    if (eventTemplate) {\n+                        fieldPanel.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n-                    target.add(container);\n+                            private static final long serialVersionUID = -1107858522700306810L;\n \n-                    if (eventTemplate) {\n-                        send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n+                            @Override\n+                            protected void onUpdate(final AjaxRequestTarget target) {\n+                                send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n+                            }\n+                        });\n                     }\n+\n+                    return fieldPanel;\n                 }\n \n                 @Override\n-                protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                    error(getString(Constants.OPERATION_ERROR));\n-                    super.onError(target, form);\n+                protected void clearInput(final Panel panel) {\n+                    FieldPanel.class.cast(panel).getField().clearInput();\n                 }\n             };\n-\n-            item.add(minus);\n-\n-            final Fragment fragment;\n-            if (item.getIndex() == model.getObject().size() - 1) {\n-                fragment = getPlusFragment(model, label);\n-            } else {\n-                fragment = new Fragment(\"panelPlus\", \"emptyFragment\", MultiFieldPanel.this);\n-            }\n-\n-            item.add(fragment.setRenderBodyOnly(true));\n         }\n     }\n }"},{"sha":"e8a2e971a88a130fffdcab54b5135fc15c615e8c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiPanel.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.wicket.model.IModel;\n+\n+public abstract class MultiPanel<INNER extends Serializable> extends AbstractMultiPanel<INNER> {\n+\n+    private static final long serialVersionUID = -6322397761456513324L;\n+\n+    public MultiPanel(\n+            final String id,\n+            final String name,\n+            final IModel<List<INNER>> model,\n+            final boolean eventTemplate) {\n+\n+        super(id, name, model, eventTemplate);\n+    }\n+}"},{"sha":"7209f26816788562a7575127d0a2d0ecf3dbb2c3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AbstractModalPanelBuilder.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -27,8 +27,6 @@\n \n     private static final long serialVersionUID = 5241745929825564456L;\n \n-    protected final String id;\n-\n     protected final PageReference pageRef;\n \n     private final T defaultItem;\n@@ -38,17 +36,23 @@\n     /**\n      * Construct.\n      *\n-     * @param id The component id\n      * @param defaultItem default item.\n      * @param pageRef Caller page reference.\n      */\n-    public AbstractModalPanelBuilder(final String id, final T defaultItem, final PageReference pageRef) {\n-        this.id = id;\n+    public AbstractModalPanelBuilder(final T defaultItem, final PageReference pageRef) {\n         this.defaultItem = defaultItem;\n         this.pageRef = pageRef;\n     }\n \n-    public abstract ModalPanel<T> build(final int index, final AjaxWizard.Mode mode);\n+    /**\n+     * Build the wizard.\n+     *\n+     * @param id component id.\n+     * @param index step index.\n+     * @param mode mode.\n+     * @return wizard.\n+     */\n+    public abstract ModalPanel<T> build(final String id, final int index, final AjaxWizard.Mode mode);\n \n     protected void onCancelInternal(final T modelObject) {\n     }"},{"sha":"3240a6b59c41cc9991ab16ae70534c4359e88c74","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardBuilder.java","status":"modified","additions":24,"deletions":5,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -29,24 +29,43 @@\n     /**\n      * Construct.\n      *\n-     * @param id The component id\n      * @param defaultItem default item.\n      * @param pageRef Caller page reference.\n      */\n-    public AjaxWizardBuilder(final String id, final T defaultItem, final PageReference pageRef) {\n-        super(id, defaultItem, pageRef);\n+    public AjaxWizardBuilder(final T defaultItem, final PageReference pageRef) {\n+        super(defaultItem, pageRef);\n     }\n \n+    /**\n+     * {@inheritDoc }\n+     */\n     @Override\n-    public AjaxWizard<T> build(final int index, final AjaxWizard.Mode mode) {\n-        final AjaxWizard<T> wizard = build(mode);\n+    public AjaxWizard<T> build(final String id, final int index, final AjaxWizard.Mode mode) {\n+        final AjaxWizard<T> wizard = build(id, mode);\n         for (int i = 1; i < index; i++) {\n             wizard.getWizardModel().next();\n         }\n         return wizard;\n     }\n \n+    /**\n+     * Build the wizard with a default wizard id.\n+     *\n+     * @param mode wizard mode.\n+     * @return wizard.\n+     */\n     public AjaxWizard<T> build(final AjaxWizard.Mode mode) {\n+        return build(WizardMgtPanel.WIZARD_ID, mode);\n+    }\n+\n+    /**\n+     * Build the wizard.\n+     *\n+     * @param id component id.\n+     * @param mode wizard mode.\n+     * @return wizard.\n+     */\n+    public AjaxWizard<T> build(final String id, final AjaxWizard.Mode mode) {\n         // ge the specified item if available\n         final T modelObject = newModelObject();\n "},{"sha":"49a11800764a87adac891d8869a753eccc484fa2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -46,6 +46,10 @@\n \n     private static final long serialVersionUID = -4152438633429194882L;\n \n+    protected static final String WIZARD_ID = \"wizard\";\n+\n+    private final String actualId;\n+\n     private final WebMarkupContainer container;\n \n     private final Fragment initialFragment;\n@@ -90,6 +94,7 @@ protected WizardMgtPanel(final String id, final boolean wizardInModal) {\n         super(id);\n         setOutputMarkupId(true);\n \n+        this.actualId = wizardInModal ? BaseModal.CONTENT_ID : WIZARD_ID;\n         this.wizardInModal = wizardInModal;\n \n         super.add(modal);\n@@ -131,6 +136,7 @@ public void onEvent(final IEvent<?> event) {\n                 newItemPanelBuilder.setItem(item);\n \n                 final ModalPanel<T> modalPanel = newItemPanelBuilder.build(\n+                        actualId,\n                         ((AjaxWizard.NewItemActionEvent<T>) newItemEvent).getIndex(),\n                         item != null ? AjaxWizard.Mode.EDIT : AjaxWizard.Mode.CREATE);\n "},{"sha":"8404b2f6a5cc6e4e8c931fc2c4fbb89131051d9d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -35,17 +35,15 @@ public class AnyObjectWizardBuilder extends AnyWizardBuilder<AnyObjectTO> implem\n     /**\n      * Construct.\n      *\n-     * @param id The component id\n      * @param anyObjectTO any object TO.\n      * @param anyTypeClasses any type classes\n      * @param pageRef Caller page reference.\n      */\n     public AnyObjectWizardBuilder(\n-            final String id,\n             final AnyObjectTO anyObjectTO,\n             final List<String> anyTypeClasses,\n             final PageReference pageRef) {\n-        super(id, anyObjectTO, anyTypeClasses, pageRef);\n+        super(anyObjectTO, anyTypeClasses, pageRef);\n     }\n \n     @Override"},{"sha":"6fae131687499268ff110403b369a881a4898766","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -46,31 +46,27 @@\n     /**\n      * Construct.\n      *\n-     * @param id The component id\n      * @param anyTO any\n      * @param anyTypeClasses any type classes\n      * @param pageRef Caller page reference.\n      */\n-    public AnyWizardBuilder(\n-            final String id, final T anyTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n-        super(id, new AnyHandler<>(anyTO), pageRef);\n+    public AnyWizardBuilder(final T anyTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n+        super(new AnyHandler<>(anyTO), pageRef);\n         this.anyTypeClasses = anyTypeClasses;\n     }\n \n     /**\n      * Construct.\n      *\n-     * @param id The component id\n      * @param handler any handler\n      * @param anyTypeClasses any type classes\n      * @param pageRef Caller page reference.\n      */\n     public AnyWizardBuilder(\n-            final String id,\n             final AnyHandler<T> handler,\n             final List<String> anyTypeClasses,\n             final PageReference pageRef) {\n-        super(id, handler, pageRef);\n+        super(handler, pageRef);\n         this.anyTypeClasses = anyTypeClasses;\n     }\n \n@@ -106,7 +102,7 @@ protected WizardModel buildModelSteps(final AnyHandler<T> modelObject, final Wiz\n         wizardModel.add(new Resources(modelObject.getInnerObject()));\n         return wizardModel;\n     }\n-    \n+\n     protected AnyWizardBuilder<T> addOptionalDetailsPanel(\n             final AnyHandler<T> modelObject, final WizardModel wizardModel) {\n         if (modelObject.getInnerObject().getKey() != null && modelObject.getInnerObject().getKey() > 0) {"},{"sha":"5966efc0cda09eac666812e08a72a0b2679d55e6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupHandler.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupHandler.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -38,9 +38,11 @@ public class GroupHandler extends AnyHandler<GroupTO> {\n \n     public GroupHandler(final GroupTO groupTO) {\n         super(groupTO);\n+        getUDynClauses();\n+        getADynClauses();\n     }\n \n-    public List<SearchClause> getUDynClauses() {\n+    public final List<SearchClause> getUDynClauses() {\n         if (this.uDynClauses == null) {\n             this.uDynClauses = SearchUtils.getSearchClauses(this.anyTO.getUDynMembershipCond());\n         }\n@@ -51,7 +53,7 @@ public void setUDynClauses(final List<SearchClause> uDynClauses) {\n         this.uDynClauses = uDynClauses;\n     }\n \n-    public Map<String, List<SearchClause>> getADynClauses() {\n+    public final Map<String, List<SearchClause>> getADynClauses() {\n         if (this.aDynClauses == null) {\n             this.aDynClauses = SearchUtils.getSearchClauses(this.anyTO.getADynMembershipConds());\n         }\n@@ -64,27 +66,24 @@ public void setADynClauses(final Map<String, List<SearchClause>> aDynClauses) {\n \n     public String getUDynMembershipCond() {\n         if (CollectionUtils.isEmpty(this.uDynClauses)) {\n-            return this.anyTO.getUDynMembershipCond();\n+            return null;\n         } else {\n             return getFIQLString(this.uDynClauses, SyncopeClient.getUserSearchConditionBuilder());\n         }\n     }\n \n     public Map<String, String> getADynMembershipConds() {\n-        if (this.aDynClauses == null || this.aDynClauses.isEmpty()) {\n-            return this.anyTO.getADynMembershipConds();\n-        } else {\n-            final Map<String, String> res = new HashMap<>();\n-\n+        final Map<String, String> res = new HashMap<>();\n+        if (this.aDynClauses != null && !this.aDynClauses.isEmpty()) {\n             for (Map.Entry<String, List<SearchClause>> entry : this.aDynClauses.entrySet()) {\n                 if (CollectionUtils.isNotEmpty(entry.getValue())) {\n                     res.put(entry.getKey(), getFIQLString(entry.getValue(),\n                             SyncopeClient.getAnyObjectSearchConditionBuilder(entry.getKey())));\n                 }\n             }\n-\n-            return res;\n         }\n+\n+        return res;\n     }\n \n     private String getFIQLString(final List<SearchClause> clauses, final AbstractFiqlSearchConditionBuilder bld) {\n@@ -93,6 +92,7 @@ private String getFIQLString(final List<SearchClause> clauses, final AbstractFiq\n \n     public GroupTO fillDynamicConditions() {\n         this.anyTO.setUDynMembershipCond(this.getUDynMembershipCond());\n+        this.anyTO.getADynMembershipConds().clear();\n         this.anyTO.getADynMembershipConds().putAll(this.getADynMembershipConds());\n         return this.anyTO;\n     }"},{"sha":"c77d190405d71687909f7d6928116c29742adf95","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -41,14 +41,12 @@ public class GroupWizardBuilder extends AnyWizardBuilder<GroupTO> {\n     /**\n      * Construct.\n      *\n-     * @param id The component id\n      * @param groupTO any\n      * @param anyTypeClasses any type classes\n      * @param pageRef Caller page reference.\n      */\n-    public GroupWizardBuilder(\n-            final String id, final GroupTO groupTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n-        super(id, new GroupHandler(groupTO), anyTypeClasses, pageRef);\n+    public GroupWizardBuilder(final GroupTO groupTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n+        super(new GroupHandler(groupTO), anyTypeClasses, pageRef);\n     }\n \n     /**"},{"sha":"c791942bee3b745579dea27693b9bfdb0c346c78","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -45,17 +45,15 @@ public class UserWizardBuilder extends AnyWizardBuilder<UserTO> {\n     /**\n      * Construct.\n      *\n-     * @param id The component id\n      * @param userTO any\n      * @param anyTypeClasses any type classes\n      * @param pageRef Caller page reference.\n      */\n     public UserWizardBuilder(\n-            final String id,\n             final UserTO userTO,\n             final List<String> anyTypeClasses,\n             final PageReference pageRef) {\n-        super(id, userTO, anyTypeClasses, pageRef);\n+        super(userTO, anyTypeClasses, pageRef);\n         statusModel = new ListModel<>(new ArrayList<StatusBean>());\n     }\n "},{"sha":"c2f765341460ca86ec24300f13fa2b8e593a7475","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -229,12 +229,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     /**\n      * Construct.\n      *\n-     * @param id The component id\n      * @param resurceTO external resource to be updated.\n      * @param pageRef Caller page reference.\n      */\n-    public ProvisionWizardBuilder(final String id, final ResourceTO resurceTO, final PageReference pageRef) {\n-        super(id, new ProvisionTO(), pageRef);\n+    public ProvisionWizardBuilder(final ResourceTO resurceTO, final PageReference pageRef) {\n+        super(new ProvisionTO(), pageRef);\n         this.resourceTO = resurceTO;\n     }\n "},{"sha":"f7034b6ff8491b958b804e76b0f8dd069b427b96","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleHandler.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleHandler.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -37,9 +37,10 @@ public class RoleHandler implements Serializable {\n \n     public RoleHandler(final RoleTO roleTO) {\n         this.roleTO = roleTO;\n+        getDynClauses();\n     }\n \n-    public List<SearchClause> getDynClauses() {\n+    public final List<SearchClause> getDynClauses() {\n         if (this.dynClauses == null) {\n             this.dynClauses = SearchUtils.getSearchClauses(this.roleTO.getDynMembershipCond());\n         }\n@@ -52,7 +53,7 @@ public void setDynClauses(final List<SearchClause> dynClauses) {\n \n     public String getDynMembershipCond() {\n         if (CollectionUtils.isEmpty(this.dynClauses)) {\n-            return this.roleTO.getDynMembershipCond();\n+            return null;\n         } else {\n             return getFIQLString(this.dynClauses, SyncopeClient.getUserSearchConditionBuilder());\n         }"},{"sha":"9c2bea1c1ee4d25b1dafcb9d347532a6c38cae51","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -55,12 +55,11 @@ public class RoleWizardBuilder extends AjaxWizardBuilder<RoleHandler> {\n     /**\n      * Construct.\n      *\n-     * @param id The component id\n      * @param roleTO role\n      * @param pageRef Caller page reference.\n      */\n-    public RoleWizardBuilder(final String id, final RoleTO roleTO, final PageReference pageRef) {\n-        super(id, new RoleHandler(roleTO), pageRef);\n+    public RoleWizardBuilder(final RoleTO roleTO, final PageReference pageRef) {\n+        super(new RoleHandler(roleTO), pageRef);\n     }\n \n     /**"},{"sha":"05183afd0121fc9aac3e9563e23d71f06b356b1a","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":37,"deletions":1,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -297,7 +297,7 @@ span.overridable div.checkbox label div div.toggle-group label {\n   padding-left: 7px;\n }\n \n-div#outer.modal-lg, div#utilityModal.modal-lg {\n+div#outer.modal-lg, div#utilityModal.modal-lg, section#notifications .modal-lg {\n   width: 1200px;\n }\n \n@@ -503,6 +503,22 @@ div.listview-actions a {\n .btn-circle i, .circular-actions a i {\n   margin: 0px;\n }\n+\n+.multipanel-btn-minus {\n+  padding: 0px 0px 0px 6px;\n+  border: 0 none !important;\n+}\n+\n+.multipanel-btn-plus {\n+  padding: 15px 0px 8px 6px;\n+  border: 0 none !important;\n+}\n+\n+.multipanel-box {\n+  padding: 5px;\n+  display: inline-table;\n+  margin: 0px;\n+}\n /**\n END - Actions\n */\n@@ -669,4 +685,24 @@ li.todoitem a {\n .form-palette {\n   display: inline-block;\n   width: 119%;\n+}\n+\n+.form-group-inline {\n+  display: inline-table;\n+  width: 100%;\n+}\n+\n+div#userFilter #title{\n+  margin: 10px 0 0 8px;\n+  font-weight: bold;\n+}\n+\n+div#userFilter  #warning{\n+  margin: 1px 0 5px 8px;\n+  color: #e00000;\n+  font-size: 9px;\n+}\n+\n+div#userFilter  #check {\n+  margin: 1px 0 5px 8px;\n }\n\\ No newline at end of file"},{"sha":"ae36ca197fb8603a5f3611a311a9d394b68cab1d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/EventSelectionPanel.html","status":"added","additions":125,"deletions":0,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FEventSelectionPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FEventSelectionPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FEventSelectionPanel.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,125 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style>\n+      .container {\n+        display: block;\n+        width: 100%;\n+      }\n+\n+      .labrut {\n+        font-size: 12px;\n+        vertical-align: middle;\n+        font-family: Verdana,Tahoma,sans-serif;\n+        display: table-cell;\n+        width: 300px;\n+        height: 20px;\n+      }\n+\n+      .divtableheaderlabrut {\n+        font-weight: bold;\n+        float: left;\n+        margin-left: 5px;\n+        display: table-cell;\n+        width: 70px;\n+      }\n+\n+      .divtableheadercell {\n+        display: inline-table;\n+        vertical-align: top;\n+        text-align: right;\n+        width: 105px;\n+        height: 20px;\n+      }\n+\n+      .divtablecheckcolumn {\n+        display: table-cell;\n+        vertical-align: top;\n+        text-align: right;\n+        width: 105px;\n+      }\n+\n+      .divtablecheck {\n+        width: 105px;\n+        height: 20px;\n+      }\n+\n+    </style>\n+  </wicket:head>\n+  <wicket:panel>\n+    <div class=\"eventSelectionWidzard\">\n+      <div class=\"container\">\n+        <div style=\"display:inline-table;\">\n+          <div class=\"labrut\">\n+            &nbsp;\n+          </div>\n+          <div style=\"display: table-cell\">\n+            <div class=\"divtableheadercell\">\n+              <div class=\"divtableheaderlabrut\">\n+                <labrut wicket:id=\"successLabel\"/>\n+              </div>\n+              <div style=\"display: table-cell\">\n+                <input type=\"checkbox\" wicket:id=\"successSelector\" style=\"margin-top: 0px;margin-bottom: 0px;\"/>\n+              </div>\n+            </div>\n+          </div>\n+          <div style=\"display: table-cell\">\n+            <div class=\"divtableheadercell\">\n+              <div class=\"divtableheaderlabrut\">\n+                <labrut wicket:id=\"failureLabel\"/>\n+              </div>\n+              <div style=\"display: table-cell\">\n+                <input type=\"checkbox\" wicket:id=\"failureSelector\" style=\"margin-top: 0px;margin-bottom: 0px;\"/>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+\n+      <div class=\"container\">\n+        <div class=\"labrut\">\n+          <div id=\"divtablerow-labrut\" wicket:id=\"categoryView\">\n+            <div class=\"labrut\">\n+              <span wicket:id=\"subcategory\">[subcategory]</span>\n+            </div>\n+          </div>\n+        </div>\n+\n+        <div id=\"divtablerow-success\" class=\"divtablecheckcolumn\">\n+          <span wicket:id=\"successGroup\">\n+            <div wicket:id=\"successView\" class=\"divtablecheck\">\n+              <div class=\"divtableheaderlabrut\">&nbsp;</div>\n+              <input type=\"checkbox\" wicket:id=\"successCheck\"/>\n+            </div>\n+          </span>\n+        </div>\n+\n+        <div id=\"divtablerow-failure\" class=\"divtablecheckcolumn\">\n+          <span wicket:id=\"failureGroup\">\n+            <div wicket:id=\"failureView\" class=\"divtablecheck\">\n+              <div class=\"divtableheaderlabrut\">&nbsp;</div>\n+              <input type=\"checkbox\" wicket:id=\"failureCheck\"/>\n+            </div>\n+          </span>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"3fb3baf63e1a70eae4bc60672fea730770f5dced","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/LoggerCategoryPanel.html","status":"added","additions":91,"deletions":0,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FLoggerCategoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FLoggerCategoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FLoggerCategoryPanel.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,91 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style>\n+\n+      .events{\n+        display: table-row;\n+        width: 990px;\n+      }\n+\n+      .selectedEvents{\n+        display: inline-block;\n+        height: 100px;\n+        margin: 10px 10px 0 10px;\n+        overflow-y: auto;\n+      }\n+\n+      .eventSelection{\n+        display: inline-table;\n+        float: right;\n+        width: 380px;\n+        min-width: 380px;\n+      }\n+\n+      .eventSelection div#eventElement{\n+        display: table-row;\n+        width:100%;\n+      }\n+      .eventSelection div#eventElement div#labrut{\n+        display: table-cell;\n+      }\n+\n+      .eventSelection div#eventElement div#value{\n+        display: table-cell;\n+        padding: 0 0 0 10px;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:panel>\n+\n+    <div class=\"events\">\n+      <div class=\"selectedEvents\">\n+        <span wicket:id=\"selectedEventsPanel\">[selected events panel]</span>\n+      </div>\n+\n+      <div class=\"eventSelection\">\n+        <div wicket:id=\"categoryContainer\">\n+          <div>\n+            <span wicket:id=\"type\">[type]</span>\n+          </div>\n+          <div>\n+            <span wicket:id=\"category\">[category]</span>\n+          </div>\n+          <div>\n+            <span wicket:id=\"subcategory\">[sub-category]</span>\n+          </div>\n+          <div>\n+            <div id=\"labrut\">\n+              <labrut wicket:id=\"customLabel\"/>\n+            </div>\n+            <div id=\"value\">\n+              <span wicket:id=\"custom\">[custom]</span>\n+              <span wicket:id=\"customActions\">[actions]</span>\n+            </div>\n+          </div>\n+        </div>\n+        <div wicket:id=\"eventsContainer\">\n+          <span wicket:id=\"eventsPanel\">[events panel]</span>\n+        </div>\n+      </div>\n+    </div>\n+\n+  </wicket:panel>\n+</html>"},{"sha":"feed01e94bc8cb7138b56bad8de038863990542b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/MailTemplateContentModal.html","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateContentModal.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,54 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:head>\n+      <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/codemirror/${codemirror.version}/lib/codemirror.css\"/>\n+\n+      <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/lib/codemirror.js\"></script>\n+      <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/display/autorefresh.js\"></script>\n+      <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/search.js\"></script>\n+      <script type=\"text/javascript\" src=\"webjars/codemirror/${codemirror.version}/addon/search/searchcursor.js\"></script>\n+      <script type=\"text/javascript\">\n+        function updateTextArea(editor) {\n+          document.getElementById(\"templateDefForm\").children[\"template\"].value = editor.getValue();\n+        }\n+      </script>\n+      <style>\n+        .w_content_3 {\n+          padding: 0;\n+          color: #333333;\n+          font-family: Verdana,Tahoma,sans-serif;\n+          font-size: 100%;\n+          border: 1px solid #BBBBBB;\n+          padding: 1%;\n+        }\n+      </style>\n+    </wicket:head>\n+    <wicket:panel>\n+      <div style=\"padding: 1%;\">\n+        <div class=\"w_content_3\" id=\"templateDefForm\">\n+          <textarea wicket:id=\"template\" id=\"template\" name=\"template\" style=\"width: 100%; height: 350px;\">\n+          </textarea>\n+        </div>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>\n\\ No newline at end of file"},{"sha":"70c7a205b7f19b8eef9f8a3acfb0fe44081450ee","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel.properties","status":"renamed","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -14,9 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-minLength=Minimum password size\n-maxLength=Maximum password size\n-historyLength=Password history length\n-digitRequired=Password must contain one or more digits\n-prefixesNotPermitted=Password prefixes not permitted\n-apply=Save\n+any.edit=Edit ${key}\n+any.new=New e-mail template\n+any.finish=Submit\n+any.cancel=Cancel","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.properties"},{"sha":"d0d15f8d56813741dcf0a9e5156a27cfd92f3f9c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel_it.properties","status":"renamed","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel_it.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -14,9 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-minLength=Lunghezza minima password\n-maxLength=Lunghezza massima password\n-historyLength=Lunghezza storico password\n-digitRequired=La password deve contenere uno o pi\\u00f9 numeri\n-prefixesNotPermitted=Prefissi password non permessi\n-apply=Salva\n+any.edit=Modifica ${key}\n+any.new=Nuovo e-mail template\n+any.finish=Invia\n+any.cancel=Annulla","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel_it.properties"},{"sha":"de37c65f6dc319086c4e4a7dbee833f60b522546","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel_pt_BR.properties","status":"renamed","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel_pt_BR.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -14,9 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-minLength=Tamanho m\\u00EDnimo de senha\n-maxLength=Tamanho m\\u00E1ximo de senha\n-historyLength=Tamanho dos hist\\u00F3rico de senha\n-digitRequired=Senha precisa contar um ou mais d\\u00EDgitos\n-prefixesNotPermitted=Prefixos de senha n\\u00E3o permitidos\n-apply=Salvar\n+any.edit=Editar ${key}\n+any.new=Novo e-mail template\n+any.finish=Enviar\n+any.cancel=Cancelar","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel_pt_BR.properties"},{"sha":"3a0676c55e023e03be20e40ae6e1d5f930c865bc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/MailTemplateModal.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateModal.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"key\"/>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>\n\\ No newline at end of file"},{"sha":"70c7a205b7f19b8eef9f8a3acfb0fe44081450ee","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationDirectoryPanel.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit ${key}\n+any.new=New e-mail template\n+any.finish=Submit\n+any.cancel=Cancel"},{"sha":"d0d15f8d56813741dcf0a9e5156a27cfd92f3f9c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationDirectoryPanel_it.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel_it.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica ${key}\n+any.new=Nuovo e-mail template\n+any.finish=Invia\n+any.cancel=Annulla"},{"sha":"de37c65f6dc319086c4e4a7dbee833f60b522546","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationDirectoryPanel_pt_BR.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel_pt_BR.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Editar ${key}\n+any.new=Novo e-mail template\n+any.finish=Enviar\n+any.cancel=Cancelar"},{"sha":"ac755e8ce7eefff83a728d3c3fd083c9792c9738","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationTasks.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,24 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <wicket:panel>\n+    <span wicket:id=\"tasks\">[TASKS]</span>\n+  </wicket:panel>\n+</html>"},{"sha":"006425da40fd245aa8ab279d9eb66523b83b36ad","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$About.html","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24About.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24About.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24About.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,31 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"about\"></span>\n+      </div>\n+      <div wicket:id=\"search\">\n+        <span wicket:id=\"clauses\"></span>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"c1cbc27d625aeb71d2b7a0653096c84273d93b96","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Abouts.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div wicket:id=\"about\" class=\"form-group\">\n+        <span wicket:id=\"abouts\">[abouts]</span>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"8a8946a76a100073c43fdba79f0ed00603d64dec","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Abouts.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+checkAbout=All\n+userFilter=User filter\n+userFilterWarning=Do not use this filter unless events are not targeted at users\n+roleFilter=Role filter\n+roleFilterWarning=Do not use this filter unless events are not targeted at roles\n+checkUserAbout=Users\n+checkRoleAbout=Roles\n+abouts=What is the notification referring to?"},{"sha":"43c055b8ffdfdb4305ce4ce9687a3c2151d92b3d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Abouts_it.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts_it.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+checkAbout=Tutto\n+userFilter=Filtro utenti\n+userFilterWarning=Non usare questo filtro se gli eventi catturati non riguardano espressamente utenti\n+roleFilter=Filtro ruoli\n+roleFilterWarning=Non usare questo filtro se gli eventi catturati non riguardano espressamente ruoli\n+checkUserAbout=Utenti\n+checkRoleAbout=Ruoli\n+abouts=A cosa si riferisce la notifica?"},{"sha":"f31449f998a11931a49e677e9b9a2d1d6e1ee63c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Abouts_pt_BR.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Abouts_pt_BR.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+checkAbout=Todos\n+userFilter=Filtro usu\\u00e1rio\n+userFilterWarning=N\\u00e3o use este filtro n\\u00e3o ser que os eventos n\\u00e3o s\\u00e3o direcionados a usu\\u00e1rios\n+roleFilter=Filtro fun\\u00e7\\u00e3o\n+roleFilterWarning=N\\u00e3o use este filtro n\\u00e3o ser que os eventos n\\u00e3o s\\u00e3o direcionados a fun\\u00e7\\u00f5es\n+checkUserAbout=Usu\\u00e1rio\n+checkRoleAbout=Fun\\u00e7\\u00e3o\n+abouts=O que diz respeito \\u00e0 notifica\\u00e7\\u00e3o?"},{"sha":"1ceee2184607f4ab152a6d7a6e069c4f3bcb27cf","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Details.html","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,46 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"sender\">[sender]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"subject\">[subject]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"recipientAttrType\">[recipientAttrType]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"recipientAttrName\">[recipientAttrName]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"template\">[template]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"traceLevel\">[traceLevel]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"isActive\">[isActive]</span>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"4021981b0456f27a735e9421740ff011f264b54c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Details.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+subject=Subject\n+sender=Sender\n+template=Template\n+traceLevel=Trace level\n+recipientAttrType=Recipients e-mail attribute type\n+recipientAttrName=Recipients e-mail attribute schema\n+isActive=Enabled"},{"sha":"6b7a1ca71bf4cad3d8323696f229674cedd0ee8d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Details_it.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_it.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+subject=Oggetto\n+sender=Mittente\n+template=Modello\n+traceLevel=Livello di tracciamento\n+recipientAttrType=Tipo attributo e-mail destinatari\n+recipientAttrName=Schema attributo e-mail destinatari\n+isActive=Abilitata"},{"sha":"d2ffaf6ccaa70db5130dca60db0660ac3e947a60","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Details_pt_BR.properties","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Details_pt_BR.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+subject=Assunto\n+sender=Remetente\n+template=Template\n+traceLevel=N\\u00edvel de Trace\n+recipientAttrType=Tipo de atributo de destinat\\u00e1rio de email.\n+recipientAttrName=Destinat\\u00e1rios de e-mail para atributos de esquema\n+isActive=Ativada"},{"sha":"c6970998d0e9ab0f8933c7a9c9dd2b4e11bdbf43","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Events.html","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,27 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <span wicket:id=\"eventSelection\"/>\n+    </wicket:panel>\n+  </body>\n+</html>\n+"},{"sha":"690ae7e211fb57fadde13e4424691c7e23b63a93","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Events.properties","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,42 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Edit notification\n+submit=Save\n+subject=Subject\n+sender=Sender\n+template=Template\n+traceLevel=Trace level\n+notification=Notification\n+about=About\n+events=Events\n+recipients=Recipients\n+selfAsRecipient=Include users matching About\n+recipientAttrType=Recipients e-mail attribute type\n+recipientAttrName=Recipients e-mail attribute schema\n+checkRecipients=Search recipients\n+checkAbout=All\n+userFilter=User filter\n+userFilterWarning=Do not use this filter unless events are not targeted at users\n+userNotifications=User notifications\n+userNotificationsWarning=Do not select this checkbox unless events are not targeted at users\n+roleFilter=Role filter\n+roleFilterWarning=Do not use this filter unless events are not targeted at roles\n+roleNotifications=Role notifications\n+roleNotificationsWarning=Do not select this checkbox unless events are not targeted at roles\n+isActive=Enabled\n+checkUserAbout=Users\n+checkRoleAbout=Roles"},{"sha":"db3bb5955b1c21e032e5723a50030f09ae2d67c0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Events_it.properties","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_it.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,42 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Gestisci notifiche\n+submit=Salva\n+subject=Oggetto\n+sender=Mittente\n+template=Modello\n+traceLevel=Livello di tracciamento\n+notification=Notifica\n+about=Soggetti\n+events=Eventi\n+recipients=Destinatari\n+selfAsRecipient=Includi i soggetti\n+recipientAttrType=Tipo attributo e-mail destinatari\n+recipientAttrName=Schema attributo e-mail destinatari\n+checkRecipients=Cerca i destinatari\n+checkAbout=Tutto\n+userFilter=Filtro utenti\n+userFilterWarning=Non usare questo filtro se gli eventi catturati non riguardano espressamente utenti\n+userNotifications=Notifiche utente\n+userNotificationsWarning=Non selezionare questa checkbox se gli eventi catturati non riguardano espressamente utenti\n+roleFilter=Filtro ruoli\n+roleFilterWarning=Non usare questo filtro se gli eventi catturati non riguardano espressamente ruoli\n+roleNotifications=Notifiche ruoli\n+roleNotificationsWarning=Non selezionare questa checkbox se gli eventi catturati non riguardano espressamente ruoli\n+isActive=Abilitata\n+checkUserAbout=Utenti\n+checkRoleAbout=Ruoli"},{"sha":"9b13d12f6ecdd4e3309fac422e407d1cb6d34771","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Events_pt_BR.properties","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Events_pt_BR.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,42 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Alterar Notifica\\u00e7\\u00e3o\n+submit=Salvar\n+subject=Assunto\n+sender=Remetente\n+template=Template\n+traceLevel=N\\u00edvel de Trace\n+notification=Notifica\\u00e7\\u00e3o\n+about=Sobre\n+events=Eventos\n+recipients=Destinat\\u00e1rios\n+selfAsRecipient=Incluir usu\\u00e1rios relacionados Sobre\n+recipientAttrType=Tipo de atributo de destinat\\u00e1rio de email.\n+recipientAttrName=Destinat\\u00e1rios de e-mail para atributos de esquema\n+checkRecipients=Buscar Destinat\\u00e1rios\n+checkAbout=Todos\n+userFilter=Filtro usu\\u00e1rio\n+userFilterWarning=N\\u00e3o use este filtro n\\u00e3o ser que os eventos n\\u00e3o s\\u00e3o direcionados a usu\\u00e1rios\n+roleFilter=Filtro fun\\u00e7\\u00e3o\n+roleFilterWarning=N\\u00e3o use este filtro n\\u00e3o ser que os eventos n\\u00e3o s\\u00e3o direcionados a fun\\u00e7\\u00f5es\n+userNotifications=Notifica\\u00e7\\u00f5es do usu\\u00e1rio\n+userNotificationsWarning=N\\u00e3o selecione esta op\\u00e7\\u00e3o a menos que os eventos n\\u00e3o s\\u00e3o direcionados a usu\\u00e1rios\n+roleNotifications=Notifica\\u00e7\\u00f5es do fun\\u00e7\\u00f5es\n+roleNotificationsWarning=N\\u00e3o selecione esta op\\u00e7\\u00e3o a menos que os eventos n\\u00e3o s\\u00e3o direcionados a fun\\u00e7\\u00f5es\n+isActive=Ativada\n+checkUserAbout=Usu\\u00e1rio\n+checkRoleAbout=Fun\\u00e7\\u00e3o"},{"sha":"b8387d6ecbca3699a82235085a5765f71dcddde5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Recipients.html","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,43 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"staticRecipients\">[staticRecipients]</span>\n+      </div>\n+      <div class=\"form-group form-group-inline\">\n+        <span wicket:id=\"recipients\">[recipients]</span>\n+      </div>\n+      <div id=\"userFilter\" class=\"form-group box\">\n+        <div id=\"title\">\n+          <span for=\"userNotifications\"><wicket:message key=\"userNotifications\"/></span>\n+        </div>\n+        <div id=\"warning\">\n+          <span for=\"userNotificationsWarning\"><wicket:message key=\"userNotificationsWarning\"/></span>\n+        </div>\n+        <div id=\"check\">\n+          <span wicket:id=\"selfAsRecipient\">[selfAsRecipient]</span>\n+        </div>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>\n+"},{"sha":"dec4920d0562fe30589f10f19564dc18256b5b8f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Recipients.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+recipients=Recipients\n+staticRecipients=Recipients\n+selfAsRecipient=Include users matching About\n+userNotifications=User notifications\n+userNotificationsWarning=Do not select this checkbox unless events are not targeted at users\n+search=Search for recipients"},{"sha":"4ee971cdd1749b925feadc5bb76b2b544ef22790","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Recipients_it.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_it.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+recipients=Destinatari\n+staticRecipients=Destinatari\n+selfAsRecipient=Includi i soggetti\n+userNotifications=Notifiche utente\n+userNotificationsWarning=Non selezionare questa checkbox se gli eventi catturati non riguardano espressamente utenti\n+search=Cerca destinatari"},{"sha":"33da973ce3456f65708bb2403720203789a7635a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/NotificationWizardBuilder$Recipients_pt_BR.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder%24Recipients_pt_BR.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+recipients=Destinat\\u00e1rios\n+staticRecipients=Destinat\\u00e1rios\n+selfAsRecipient=Incluir usu\\u00e1rios relacionados Sobre\n+userNotifications=Notifica\\u00e7\\u00f5es do usu\\u00e1rio\n+userNotificationsWarning=N\\u00e3o selecione esta op\\u00e7\\u00e3o a menos que os eventos n\\u00e3o s\\u00e3o direcionados a usu\\u00e1rios\n+search=Pesquisa para os destinat\\u00e1rios"},{"sha":"3ef03546cdb564dedcef56dda4842c5a96bf8b60","filename":"client/console/src/main/resources/org/apache/syncope/client/console/notifications/SelectedEventsPanel.html","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FSelectedEventsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FSelectedEventsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FSelectedEventsPanel.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,33 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <style>\n+      div#selectionContainer select{\n+        width: 585px;\n+        min-width: 585px;\n+      }\n+    </style>\n+  </wicket:head>\n+  <wicket:panel>\n+    <div id=\"selectionContainer\" wicket:id=\"selectionContainer\">\n+      <select wicket:id=\"selectedEvents\" ></select>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"7e23e5b0b0d4c31f054a3182af476c849fb9c4d3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Notifications.html","status":"modified","additions":7,"deletions":15,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -1,4 +1,4 @@\n-s<!--\n+<!--\n Licensed to the Apache Software Foundation (ASF) under one\n or more contributor license agreements.  See the NOTICE file\n distributed with this work for additional information\n@@ -18,26 +18,18 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n-\n     <section class=\"content-header\">\n-      <h1>\n-        &nbsp;\n-        <small>Work in progress</small>\n-      </h1>\n+      <h1>&nbsp;</h1>\n       <ol class=\"breadcrumb\">\n-        <li><a wicket:id=\"dashboardBr\"><i class=\"fa fa-dashboard\"></i> <wicket:message key=\"dashboard\"/></a></li>\n-        <li class=\"active\"><wicket:message key=\"configuration\"/></li>\n-        <li class=\"active\"><wicket:message key=\"notifications\"/></li>\n+        <li><a wicket:id=\"dashboardBr\"><i class=\"fa fa-dashboard\"></i> <wicket:message key=\"dashboard\"></wicket:message></a></li>\n+        <li class=\"active\" id=\"pageTitleInBradcrumb\"><wicket:message key=\"notifications\"></wicket:message></li>\n       </ol>\n     </section>\n \n-    <section class=\"content\">\n-      <div class=\"progress progress active\" style=\"margin:100px\">\n-        <div style=\"width: 70%\" aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"20\" role=\"progressbar\" class=\"progress-bar progress-bar-success progress-bar-striped\">\n-          <span class=\"sr-only\">20% Complete</span>\n-        </div>\n+    <section class=\"content\" wicket:id=\"content\">\n+      <div class=\"box\">\n+        <div class=\"box-body\" wicket:id=\"tabbedPanel\"/>\n       </div>\n     </section>\n-\n   </wicket:extend>\n </html>\n\\ No newline at end of file"},{"sha":"22593e0cb1482ddd2369191a67d80bf2238e9515","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Notifications.properties","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,46 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+notifications=Notifications\n+notification.templates=Templates\n+notification.executions=Executions\n+\n+subject=Subject\n+sender=Sender\n+template=Template\n+traceLevel=Trace level\n+notification=Notification\n+about=About\n+events=Events\n+recipients=Recipients\n+selfAsRecipient=Include users matching About\n+recipientAttrType=Recipients e-mail attribute type\n+recipientAttrName=Recipients e-mail attribute schema\n+checkRecipients=Search recipients\n+checkAbout=All\n+userFilter=User filter\n+userFilterWarning=Do not use this filter unless events are not targeted at users\n+userNotifications=User notifications\n+userNotificationsWarning=Do not select this checkbox unless events are not targeted at users\n+roleFilter=Role filter\n+roleFilterWarning=Do not use this filter unless events are not targeted at roles\n+roleNotifications=Role notifications\n+roleNotificationsWarning=Do not select this checkbox unless events are not targeted at roles\n+isActive=Enabled\n+checkUserAbout=Users\n+checkRoleAbout=Roles\n+\n+active=Active"},{"sha":"9d7fafa2c7a0bc5c507876165bb6fbe5ba3eaed2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Notifications_it.properties","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_it.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,46 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+notifications=Notifiche\n+notification.templates=Template\n+notification.executions=Execuzioni\n+\n+subject=Oggetto\n+sender=Mittente\n+template=Modello\n+traceLevel=Livello di tracciamento\n+notification=Notifica\n+about=Soggetti\n+events=Eventi\n+recipients=Destinatari\n+selfAsRecipient=Includi i soggetti\n+recipientAttrType=Tipo attributo e-mail destinatari\n+recipientAttrName=Schema attributo e-mail destinatari\n+checkRecipients=Cerca i destinatari\n+checkAbout=Tutto\n+userFilter=Filtro utenti\n+userFilterWarning=Non usare questo filtro se gli eventi catturati non riguardano espressamente utenti\n+userNotifications=Notifiche utente\n+userNotificationsWarning=Non selezionare questa checkbox se gli eventi catturati non riguardano espressamente utenti\n+roleFilter=Filtro ruoli\n+roleFilterWarning=Non usare questo filtro se gli eventi catturati non riguardano espressamente i ruoli\n+roleNotifications=Notifiche ruoli\n+roleNotificationsWarning=Non selezionare questa checkbox se gli eventi catturati non riguardano espressamente ruoli\n+isActive=Abilitata\n+checkUserAbout=Utenti\n+checkRoleAbout=Ruoli\n+\n+active=Attivo"},{"sha":"941d1af2ceafe5a4ebc0825d23ca9b81ecb0aaf3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Notifications_pt_BR.properties","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FNotifications_pt_BR.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,46 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+notifications=Notifica\\u00e7\\u00f5es\n+notification.templates=Template\n+notification.executions=Execu\\u00e7\\u00f5es\n+\n+subject=Assunto\n+sender=Remetente\n+template=Template\n+traceLevel=N\\u00edvel de Trace\n+notification=Notifica\\u00e7\\u00e3o\n+about=Sobre\n+events=Eventos\n+recipients=Destinat\\u00e1rios\n+selfAsRecipient=Incluir usu\\u00e1rios relacionados Sobre\n+recipientAttrType=Tipo de atributo de destinat\\u00e1rio de email.\n+recipientAttrName=Destinat\\u00e1rios de e-mail para atributos de esquema\n+checkRecipients=Buscar Destinat\\u00e1rios\n+checkAbout=Todos\n+userFilter=Filtro usu\\u00e1rio\n+userFilterWarning=N\\u00e3o use este filtro n\\u00e3o ser que os eventos n\\u00e3o s\\u00e3o direcionados a usu\\u00e1rios\n+roleFilter=Filtro fun\\u00e7\\u00e3o\n+roleFilterWarning=N\\u00e3o use este filtro n\\u00e3o ser que os eventos n\\u00e3o s\\u00e3o direcionados a fun\\u00e7\\u00f5es\n+userNotifications=Notifica\\u00e7\\u00f5es do usu\\u00e1rio\n+userNotificationsWarning=N\\u00e3o selecione esta op\\u00e7\\u00e3o a menos que os eventos n\\u00e3o s\\u00e3o direcionados a usu\\u00e1rios\n+roleNotifications=Notifica\\u00e7\\u00f5es do fun\\u00e7\\u00f5es\n+roleNotificationsWarning=N\\u00e3o selecione esta op\\u00e7\\u00e3o a menos que os eventos n\\u00e3o s\\u00e3o direcionados a fun\\u00e7\\u00f5es\n+isActive=Ativada\n+checkUserAbout=Usu\\u00e1rio\n+checkRoleAbout=Fun\\u00e7\\u00e3o\n+\n+active=Ativo"},{"sha":"e73d518cc71d83fb1d3c9a0c94239fbc58c26131","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -18,5 +18,3 @@ operation=Operation\n anyTypeKind=Object Type\n anyKey=Local Key\n connObjectKey=Remote Key\n-start=Start\n-end=End"},{"sha":"a55ca3141b8ad3fc3d1431c30c342ed88609a03c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel_it.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_it.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -18,5 +18,3 @@ operation=Operazione\n anyTypeKind=Tipo Oggetto\n anyKey=Key Locale\n connObjectKey=Key Remota\n-start=Inizio\n-end=Fine"},{"sha":"e73d518cc71d83fb1d3c9a0c94239fbc58c26131","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel_pt_BR.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_pt_BR.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -18,5 +18,3 @@ operation=Operation\n anyTypeKind=Object Type\n anyKey=Local Key\n connObjectKey=Remote Key\n-start=Start\n-end=End"},{"sha":"bad806639d11ec2846b5d811a35c519919857442","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskDirectoryPanel.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -19,6 +19,8 @@ executions=Executions\n title=Task\n \n key=Id\n+start=Start date\n+end=End date\n latestExecStatus=Last execution status\n \n task.view=Executions of task '${key}'"},{"sha":"cba15ec106cd320872bd5df9204eeae707914efd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskDirectoryPanel_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_it.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -19,6 +19,8 @@ executions=Esecuzioni\n title=Task\n \n key=Id\n+start=Data di avvio\n+end=Data di conclusione\n latestExecStatus=Stato ultima esecuzione\n \n task.view=Esecuzioni del task '${key}'"},{"sha":"f3c118a1ac456723a23db8dd28d306658c7fac34","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskDirectoryPanel_pt_BR.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_pt_BR.properties?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -19,6 +19,8 @@ executions=Esecuzioni\n title=Task\n \n key=Id\n+start=Data inicial\n+end=Data Final\n latestExecStatus=Stato ultima esecuzione\n \n task.view=Executions of task '${key}'"},{"sha":"56220a9dfed5f255f23d86c4ebd6ad0d01e6fd8c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/CollectionPanel.html","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FCollectionPanel.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,25 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div id=\"collection\" wicket:id=\"collection\">\n+      <span id=\"item\" wicket:id=\"item\"/>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"9b1fd088c1b52e6c5810882ea4c5171848be9174","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -43,6 +43,8 @@\n     <span wicket:id=\"panelCreate\">[plus]</span>\n     <span wicket:id=\"panelReset\">[plus]</span>\n     <span wicket:id=\"panelEdit\">[plus]</span>\n+    <span wicket:id=\"panelHtmlEdit\">[plus]</span>\n+    <span wicket:id=\"panelTextEdit\">[plus]</span>\n     <span wicket:id=\"panelExport\">[plus]</span>\n     <span wicket:id=\"panelPropagationTasks\">[plus]</span>\n     <span wicket:id=\"panelDelete\">[plus]</span>\n@@ -117,6 +119,14 @@\n       <a href=\"#\" wicket:id=\"editLink\" class=\"btn\"><i id=\"actionLink\" class=\"glyphicon glyphicon-pencil\" alt=\"edit icon\" title=\"Edit\"></i></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentHtmlEdit\">\n+      <a href=\"#\" wicket:id=\"htmlEditLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-file-code-o\" alt=\"html edit icon\" title=\"HTML Edit\"></i></a>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"fragmentTextEdit\">\n+      <a href=\"#\" wicket:id=\"textEditLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-file-text-o\" alt=\"text edit icon\" title=\"TEXT Edit\"></i></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentReset\">\n       <a href=\"#\" wicket:id=\"resetLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/reset.png\" alt=\"reset icon\" title=\"Reset sync token\"/></a>\n     </wicket:fragment>"},{"sha":"1282925634468e44a9b78e8846b7d78b218fe74b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/MultiPanel.html","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiPanel.html?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -0,0 +1,71 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head>\n+    <title>Multivalue conatiner</title>\n+  </head>\n+  <body>\n+    <wicket:extend>\n+      <wicket:enclosure child=\"field-label\">\n+        <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+        <span wicket:id=\"externalAction\"/>\n+      </wicket:enclosure>\n+\n+      <span wicket:id=\"multiValueContainer\">\n+        <form wicket:id=\"innerForm\">\n+          <span wicket:id=\"content\">[content]</span>\n+        </form>\n+      </span>\n+\n+      <wicket:fragment wicket:id=\"noDataFragment\">\n+        <div class=\"form-group\">\n+          <div class=\"multipanel-box box input-group\" style=\"background-color:#EEE\">\n+            <label wicket:id=\"field-label\">[LABEL]</label>\n+          </div>\n+          <span wicket:id=\"panelPlus\" class=\"input-group-addon\">[plus]</span>\n+        </div>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"dataFragment\">\n+        <span wicket:id=\"view\">\n+          <div class=\"form-group\">\n+            <div class=\"input-group\">\n+              <div class=\"multipanel-box box\">\n+                <span wicket:id=\"panel\">[form field]</span>\n+              </div>\n+              <div class=\"multipanel-btn-minus input-group-addon\">\n+                <a wicket:id=\"drop\" class=\"btn btn-danger btn-circle btn-lg\"><i class=\"glyphicon glyphicon-minus\"></i></a>\n+              </div>\n+            </div>\n+            <span wicket:id=\"panelPlus\">[plus]</span>\n+          </div>\n+        </span>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"fragmentPlus\">\n+        <div class=\"form-group pull-right input-group multipanel-btn-plus\">\n+          <a wicket:id=\"add\" class=\"btn btn-primary btn-circle btn-lg\"><i class=\"glyphicon glyphicon-plus\"></i></a>\n+        </div>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"emptyFragment\">\n+      </wicket:fragment>\n+    </wicket:extend>\n+  </body>\n+</html>"},{"sha":"70040e8e2357d40ed226f9e950b79794b18531c6","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesDirectoryPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8455cb96be28ce8298dbfe41c073356710a06350/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8455cb96be28ce8298dbfe41c073356710a06350/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java?ref=8455cb96be28ce8298dbfe41c073356710a06350","patch":"@@ -33,7 +33,6 @@\n import org.apache.syncope.client.console.panels.CamelRoutesDirectoryPanel.CamelRoutesProvider;\n import org.apache.syncope.client.console.rest.CamelRoutesRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n@@ -77,13 +76,12 @@ protected WizardMgtPanel<CamelRouteTO> newInstance(final String id) {\n         modal.size(Modal.Size.Large);\n         initResultTable();\n \n-        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<CamelRouteTO>(\n-                BaseModal.CONTENT_ID, new CamelRouteTO(), pageRef) {\n+        this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<CamelRouteTO>(new CamelRouteTO(), pageRef) {\n \n             private static final long serialVersionUID = -6388405037134399367L;\n \n             @Override\n-            public ModalPanel<CamelRouteTO> build(final int index, final AjaxWizard.Mode mode) {\n+            public ModalPanel<CamelRouteTO> build(final String id, final int index, final AjaxWizard.Mode mode) {\n                 final CamelRouteTO modelObject = newModelObject();\n                 return new CamelRoutesModalPanel(modal, modelObject, pageRef) {\n "}]}