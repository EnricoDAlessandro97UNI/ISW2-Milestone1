{"sha":"c910a7a66370164e86524b3e470626865ad4ee68","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM5MTBhN2E2NjM3MDE2NGU4NjUyNGIzZTQ3MDYyNjg2NWFkNGVlNjg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-04T14:11:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-04T14:11:19Z"},"message":"Upgrading Camel to 2.15.2 and CXF to 3.0.1-SNAPSHOT + fixing WADL generation","tree":{"sha":"bf453d1c502d2d9deda69c3d4db2bb4d11957931","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bf453d1c502d2d9deda69c3d4db2bb4d11957931"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c910a7a66370164e86524b3e470626865ad4ee68","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c910a7a66370164e86524b3e470626865ad4ee68","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c910a7a66370164e86524b3e470626865ad4ee68","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c910a7a66370164e86524b3e470626865ad4ee68/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c53e17c5465684df26f721f223eb54ea499e701b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c53e17c5465684df26f721f223eb54ea499e701b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c53e17c5465684df26f721f223eb54ea499e701b"}],"stats":{"total":192,"additions":81,"deletions":111},"files":[{"sha":"aadb0d059b5c4ba21bdb8d9fabe24a7f7f1b3d87","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractPolicyTO.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -48,6 +48,10 @@ public abstract class AbstractPolicyTO extends AbstractBaseBean {\n \n     private final List<String> usedByRealms = new ArrayList<>();\n \n+    private AbstractPolicyTO() {\n+        throw new UnsupportedOperationException(\"No-arg constructor is just to keep JAXB from complaining\");\n+    }\n+\n     protected AbstractPolicyTO(final PolicyType type) {\n         this.type = type;\n     }"},{"sha":"a7018997d8826b9eeceeb0c27fa286e5253a10bc","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AccountPolicyTO.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccountPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccountPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccountPolicyTO.java?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -39,10 +39,6 @@ public class AccountPolicyTO extends AbstractPolicyTO {\n     private final List<String> resources = new ArrayList<>();\n \n     public AccountPolicyTO() {\n-        this(false);\n-    }\n-\n-    public AccountPolicyTO(final boolean global) {\n         super(PolicyType.ACCOUNT);\n     }\n "},{"sha":"f643b8878e9782d4f4ee02c0a069fefc88278da5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ErrorTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FErrorTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FErrorTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FErrorTO.java?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -38,7 +38,7 @@ public class ErrorTO extends AbstractBaseBean {\n \n     private ClientExceptionType type;\n \n-    private final List<Object> elements = new ArrayList<>();\n+    private final List<String> elements = new ArrayList<>();\n \n     public int getStatus() {\n         return status;\n@@ -59,7 +59,7 @@ public void setType(final ClientExceptionType type) {\n     @XmlElementWrapper(name = \"elements\")\n     @XmlElement(name = \"element\")\n     @JsonProperty(\"elements\")\n-    public List<Object> getElements() {\n+    public List<String> getElements() {\n         return elements;\n     }\n "},{"sha":"a0a21ea91a2ec47bc2d15fcbded31bf0d42e65db","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PasswordPolicyTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPasswordPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPasswordPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPasswordPolicyTO.java?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -39,7 +39,7 @@ public PasswordPolicySpec getSpecification() {\n         return specification;\n     }\n \n-    public void setSpecification(PasswordPolicySpec specification) {\n+    public void setSpecification(final PasswordPolicySpec specification) {\n         this.specification = specification;\n     }\n "},{"sha":"2bbefa0272cb79cf99578da4e3d55d5276072f57","filename":"core/rest-cxf/pom.xml","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/core%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/core%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fpom.xml?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -120,6 +120,19 @@ under the License.\n       <artifactId>syncope-common-rest-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jquery</artifactId>\n+    </dependency>    \n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jquery-ui</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>highlightjs</artifactId>\n+    </dependency>\n   </dependencies>\n \n   <build>"},{"sha":"3bccdbac23d1de0b3381404341d99460c590f213","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":44,"deletions":28,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -106,20 +106,20 @@ public Response toResponse(final Exception ex) {\n             ErrorTO error = new ErrorTO();\n             error.setStatus(response.getStatus());\n             error.setType(ClientExceptionType.Unknown);\n-            error.getElements().add(getExMessage(ex));\n+            error.getElements().add(ExceptionUtils.getRootCauseMessage(ex));\n \n-            builder = JAXRSUtils.fromResponse(response).entity(error);\n+            builder = builder(response).entity(error);\n         } else if (ex instanceof AccessDeniedException) {\n             builder = Response.status(Response.Status.UNAUTHORIZED).\n                     header(HttpHeaders.WWW_AUTHENTICATE, BASIC_REALM_UNAUTHORIZED);\n         } else if (ex instanceof UnauthorizedException) {\n-            builder = builder(ClientExceptionType.Unauthorized, getExMessage(ex));\n+            builder = builder(ClientExceptionType.Unauthorized, ExceptionUtils.getRootCauseMessage(ex));\n         } else if (ex instanceof EntityExistsException || ex instanceof DuplicateException) {\n             builder = builder(ClientExceptionType.EntityExists, getJPAMessage(ex));\n         } else if (ex instanceof DataIntegrityViolationException || ex instanceof JpaSystemException) {\n             builder = builder(ClientExceptionType.DataIntegrityViolation, getJPAMessage(ex));\n         } else if (ex instanceof ConnectorException) {\n-            builder = builder(ClientExceptionType.ConnectorException, getExMessage(ex));\n+            builder = builder(ClientExceptionType.ConnectorException, ExceptionUtils.getRootCauseMessage(ex));\n         } else {\n             builder = processNotFoundExceptions(ex);\n             if (builder == null) {\n@@ -129,27 +129,29 @@ public Response toResponse(final Exception ex) {\n                 }\n                 // process JAX-RS validation errors\n                 if (builder == null && ex instanceof ValidationException) {\n-                    builder = JAXRSUtils.fromResponse(validationEM.toResponse((ValidationException) ex)).\n+                    builder = builder(validationEM.toResponse((ValidationException) ex)).\n                             header(RESTHeaders.ERROR_CODE, ClientExceptionType.RESTValidation.getHeaderValue()).\n-                            header(RESTHeaders.ERROR_INFO,\n-                                    ClientExceptionType.RESTValidation.getInfoHeaderValue(getExMessage(ex)));\n+                            header(RESTHeaders.ERROR_INFO, ClientExceptionType.RESTValidation.getInfoHeaderValue(\n+                                            ExceptionUtils.getRootCauseMessage(ex)));\n \n                     ErrorTO error = new ErrorTO();\n                     error.setStatus(ClientExceptionType.RESTValidation.getResponseStatus().getStatusCode());\n                     error.setType(ClientExceptionType.RESTValidation);\n-                    error.getElements().add(getExMessage(ex));\n+                    error.getElements().add(ExceptionUtils.getRootCauseMessage(ex));\n+\n                     builder.entity(error);\n                 }\n                 // ...or just report as InternalServerError\n                 if (builder == null) {\n                     builder = Response.status(Response.Status.INTERNAL_SERVER_ERROR).\n-                            header(RESTHeaders.ERROR_INFO,\n-                                    ClientExceptionType.Unknown.getInfoHeaderValue(getExMessage(ex)));\n+                            header(RESTHeaders.ERROR_INFO, ClientExceptionType.Unknown.getInfoHeaderValue(\n+                                            ExceptionUtils.getRootCauseMessage(ex)));\n \n                     ErrorTO error = new ErrorTO();\n                     error.setStatus(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode());\n                     error.setType(ClientExceptionType.Unknown);\n-                    error.getElements().add(getExMessage(ex));\n+                    error.getElements().add(ExceptionUtils.getRootCauseMessage(ex));\n+\n                     builder.entity(error);\n                 }\n             }\n@@ -159,7 +161,7 @@ public Response toResponse(final Exception ex) {\n     }\n \n     @Override\n-    public Exception fromResponse(final Response r) {\n+    public Exception fromResponse(final Response response) {\n         throw new UnsupportedOperationException(\n                 \"Call of fromResponse() method is not expected in RestServiceExceptionMapper\");\n     }\n@@ -208,7 +210,7 @@ private ResponseBuilder getSyncopeClientCompositeExceptionResponse(final Syncope\n \n     private ResponseBuilder processNotFoundExceptions(final Exception ex) {\n         if (ex instanceof javax.ws.rs.NotFoundException || ex instanceof NotFoundException) {\n-            return builder(ClientExceptionType.NotFound, getExMessage(ex));\n+            return builder(ClientExceptionType.NotFound, ExceptionUtils.getRootCauseMessage(ex));\n         }\n \n         return null;\n@@ -267,23 +269,22 @@ private ResponseBuilder processBadRequestExceptions(final Exception ex) {\n             if (((BadRequestException) ex).getResponse() == null) {\n                 return builder;\n             } else {\n-                return JAXRSUtils.fromResponse(((BadRequestException) ex).getResponse());\n+                return builder(((BadRequestException) ex).getResponse());\n             }\n         } else if (ex instanceof WorkflowException) {\n-            return builder(ClientExceptionType.Workflow, getExMessage(ex));\n+            return builder(ClientExceptionType.Workflow, ExceptionUtils.getRootCauseMessage(ex));\n         } else if (ex instanceof PersistenceException) {\n-            return builder(ClientExceptionType.GenericPersistence, getExMessage(ex));\n+            return builder(ClientExceptionType.GenericPersistence, ExceptionUtils.getRootCauseMessage(ex));\n         } else if (ibatisPersistenceException != null && ibatisPersistenceException.isAssignableFrom(ex.getClass())) {\n-            return builder(ClientExceptionType.Workflow,\n-                    getMessage(ex, \"Currently unavailable. Please try later.\"));\n+            return builder(ClientExceptionType.Workflow, \"Currently unavailable. Please try later.\");\n         } else if (ex instanceof JpaSystemException) {\n-            return builder(ClientExceptionType.DataIntegrityViolation, getExMessage(ex));\n+            return builder(ClientExceptionType.DataIntegrityViolation, ExceptionUtils.getRootCauseMessage(ex));\n         } else if (ex instanceof ConfigurationException) {\n-            return builder(ClientExceptionType.InvalidConnIdConf, getExMessage(ex));\n+            return builder(ClientExceptionType.InvalidConnIdConf, ExceptionUtils.getRootCauseMessage(ex));\n         } else if (ex instanceof ParsingValidationException) {\n-            return builder(ClientExceptionType.InvalidValues, getExMessage(ex));\n+            return builder(ClientExceptionType.InvalidValues, ExceptionUtils.getRootCauseMessage(ex));\n         } else if (ex instanceof MalformedPathException) {\n-            return builder(ClientExceptionType.InvalidPath, getExMessage(ex));\n+            return builder(ClientExceptionType.InvalidPath, ExceptionUtils.getRootCauseMessage(ex));\n         }\n \n         return null;\n@@ -302,12 +303,25 @@ private ResponseBuilder builder(final ClientExceptionType hType, final String ms\n         return builder.entity(error);\n     }\n \n-    private String getMessage(final Throwable ex, final String msg) {\n-        return (msg == null) ? getExMessage(ex) : msg;\n-    }\n+    /**\n+     * Overriding {@link JAXRSUtils#fromResponse(javax.ws.rs.core.Response)} in order to avoid setting\n+     * {@code Content-Type} from original {@code response}.\n+     *\n+     * @param response model to construct {@link ResponseBuilder} from\n+     * @return new {@link ResponseBuilder} instance initialized from given response\n+     */\n+    private ResponseBuilder builder(final Response response) {\n+        ResponseBuilder builder = JAXRSUtils.toResponseBuilder(response.getStatus());\n+        builder.entity(response.getEntity());\n+        for (Map.Entry<String, List<Object>> entry : response.getMetadata().entrySet()) {\n+            if (!HttpHeaders.CONTENT_TYPE.equals(entry.getKey())) {\n+                for (Object value : entry.getValue()) {\n+                    builder.header(entry.getKey(), value);\n+                }\n+            }\n+        }\n \n-    private String getExMessage(final Throwable ex) {\n-        return (ex.getCause() == null) ? ex.getMessage() : ex.getCause().getMessage();\n+        return builder;\n     }\n \n     private String getJPAMessage(final Throwable ex) {\n@@ -321,6 +335,8 @@ private String getJPAMessage(final Throwable ex) {\n             }\n         }\n \n-        return message == null ? getExMessage(ex) : message;\n+        return message == null\n+                ? (ex.getCause() == null) ? ex.getMessage() : ex.getCause().getMessage()\n+                : message;\n     }\n }"},{"sha":"a4809a7b596bef76ff25c2065a979b411f453406","filename":"core/rest-cxf/src/main/resources/wadl2html/index.xsl","status":"modified","additions":5,"deletions":71,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -46,7 +46,7 @@\n           <xsl:value-of select=\"wadl:doc/@title\"/>\n         </title>\n \n-        <link rel=\"stylesheet\" href=\"{$contextPath}/webjars/jquery-ui/${jquery-ui.version}/themes/base/minified/jquery-ui.min.css\"/>\n+        <link rel=\"stylesheet\" href=\"{$contextPath}/webjars/jquery-ui/${jquery-ui.version}/jquery-ui.min.css\"/>\n         <style>\n           body {\n           font-family: \"Verdana,Arial,sans-serif\";\n@@ -96,7 +96,7 @@\n         \n         <script src=\"{$contextPath}/webjars/jquery/${jquery.version}/jquery.min.js\">\n         </script>\n-        <script src=\"{$contextPath}/webjars/jquery-ui/${jquery-ui.version}/ui/minified/jquery-ui.min.js\">          \n+        <script src=\"{$contextPath}/webjars/jquery-ui/${jquery-ui.version}/jquery-ui.min.js\">          \n         </script>\n         <script>\n           //<![CDATA[\n@@ -113,12 +113,12 @@\n               });\n             </xsl:text>\n             \n-            <xsl:variable name=\"parentResourcePath\" select=\"translate(@path, '/{}', '___')\"/>\n+            <xsl:variable name=\"parentResourcePath\" select=\"translate(@path, '/{}:.*', '______')\"/>\n             <xsl:call-template name=\"dialog-init\">\n               <xsl:with-param name=\"resourcePath\" select=\"$parentResourcePath\"/>\n             </xsl:call-template>\n             <xsl:for-each select=\"wadl:resource\">\n-              <xsl:variable name=\"childResourcePath\" select=\"translate(@path, '/{}', '___')\"/>\n+              <xsl:variable name=\"childResourcePath\" select=\"translate(@path, '/{}:.*', '______')\"/>\n               <xsl:call-template name=\"dialog-init\">\n                 <xsl:with-param name=\"resourcePath\" select=\"concat($parentResourcePath, $childResourcePath)\"/>\n               </xsl:call-template>\n@@ -128,72 +128,6 @@\n           $( \"#tabs\" ).tabs().addClass( \"ui-tabs-vertical ui-helper-clearfix\" );\n           $( \"#tabs li\" ).removeClass( \"ui-corner-top\" ).addClass( \"ui-corner-left\" );\n           });\n- \n-          /*\n-          * hoverIntent | Copyright 2011 Brian Cherne\n-          * http://cherne.net/brian/resources/jquery.hoverIntent.html\n-          * modified by the jQuery UI team\n-          */\n-          $.event.special.hoverintent = {\n-          setup: function() {\n-          $( this ).bind( \"mouseover\", jQuery.event.special.hoverintent.handler );\n-          },\n-          teardown: function() {\n-          $( this ).unbind( \"mouseover\", jQuery.event.special.hoverintent.handler );\n-          },\n-          handler: function( event ) {\n-          var currentX, currentY, timeout,\n-          args = arguments,\n-          target = $( event.target ),\n-          previousX = event.pageX,\n-          previousY = event.pageY;\n- \n-          function track( event ) {\n-          currentX = event.pageX;\n-          currentY = event.pageY;\n-          };\n- \n-          function clear() {\n-          target\n-          .unbind( \"mousemove\", track )\n-          .unbind( \"mouseout\", clear );\n-          clearTimeout( timeout );\n-          }\n- \n-          function handler() {\n-          var prop,\n-          orig = event;\n- \n-          if ( ( Math.abs( previousX - currentX ) +\n-          Math.abs( previousY - currentY ) ) < 7 ) {\n-          clear();\n- \n-          event = $.Event( \"hoverintent\" );\n-          for ( prop in orig ) {\n-          if ( !( prop in event ) ) {\n-          event[ prop ] = orig[ prop ];\n-          }\n-          }\n-          // Prevent accessing the original event since the new event\n-          // is fired asynchronously and the old event is no longer\n-          // usable (#6028)\n-          delete event.originalEvent;\n- \n-          target.trigger( event );\n-          } else {\n-          previousX = currentX;\n-          previousY = currentY;\n-          timeout = setTimeout( handler, 100 );\n-          }\n-          }\n- \n-          timeout = setTimeout( handler, 100 );\n-          target.bind({\n-          mousemove: track,\n-          mouseout: clear\n-          });\n-          }\n-          };\n           //]]>\n         </script>\n       </head>\n@@ -314,7 +248,7 @@\n   <xsl:template name=\"methods\">\n     <xsl:param name=\"resourcePath\"/>\n \n-    <xsl:variable name=\"escapedPath\" select=\"translate($resourcePath, '/{}', '___')\"/>\n+    <xsl:variable name=\"escapedPath\" select=\"translate($resourcePath, '/{}:.*', '______')\"/>\n     <div class=\"methods\">\n       <xsl:for-each select=\"wadl:method\">\n         <button id=\"opener{$escapedPath}_{position()}\">"},{"sha":"0d867f2cfaa8108d899a73f546dfd481961ef744","filename":"fit/core-reference/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -680,7 +680,7 @@ under the License.\n             <configuration>\n               <configuration>\n                 <properties>\n-                  <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n+                  <cargo.jvmargs>-Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n                     -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=512m</cargo.jvmargs>\n                 </properties>\n               </configuration>"},{"sha":"2e526afb410a8c58e6f959d0215e020d1612f416","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/PolicyITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPolicyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPolicyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPolicyITCase.java?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -167,7 +167,7 @@ public void getCorrelationRules() {\n \n     @Test\n     public void issueSYNCOPE553() {\n-        AccountPolicyTO policy = new AccountPolicyTO(false);\n+        AccountPolicyTO policy = new AccountPolicyTO();\n         policy.setDescription(\"SYNCOPE553\");\n \n         final AccountPolicySpec accountPolicySpec = new AccountPolicySpec();"},{"sha":"edb23665166344c786358267951054d481738a26","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/RealmITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRealmITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRealmITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRealmITCase.java?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -133,7 +133,7 @@ public boolean evaluate(final RealmTO object) {\n     @Test\n     public void deletingAccountPolicy() {\n         // 1. create account policy\n-        AccountPolicyTO policy = new AccountPolicyTO(false);\n+        AccountPolicyTO policy = new AccountPolicyTO();\n         policy.setDescription(\"deletingAccountPolicy\");\n \n         final AccountPolicySpec accountPolicySpec = new AccountPolicySpec();"},{"sha":"2dc8fbf839a99bf112a872a2a66b8a16f8e7dbb3","filename":"pom.xml","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c910a7a66370164e86524b3e470626865ad4ee68/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c910a7a66370164e86524b3e470626865ad4ee68/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=c910a7a66370164e86524b3e470626865ad4ee68","patch":"@@ -326,9 +326,9 @@ under the License.\n     <connid.ldap.version>1.4.0</connid.ldap.version>\n     <connid.ad.version>1.2.3</connid.ad.version>\n \n-    <cxf.version>3.0.5-SNAPSHOT</cxf.version>\n+    <cxf.version>3.1.0-SNAPSHOT</cxf.version>\n \n-    <camel.version>2.15.1</camel.version>\t\n+    <camel.version>2.15.2</camel.version>\t\n \n     <jackson.version>2.5.3</jackson.version>\n \n@@ -371,6 +371,8 @@ under the License.\n     <log.directory>${project.build.directory}/log</log.directory>\n     <activiti-modeler.directory>${project.build.directory}/activiti-modeler</activiti-modeler.directory>\n     \n+    <jquery.version>2.1.3</jquery.version>\n+    <jquery-ui.version>1.11.4</jquery-ui.version>\n     <bootstrap.version>3.3.4</bootstrap.version>\n     <bootstrap-select.version>1.6.3</bootstrap-select.version>\n     <font-awesome.version>4.3.0</font-awesome.version>\n@@ -905,6 +907,11 @@ under the License.\n         <version>${slf4j.version}</version>\n       </dependency>\n       \n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>jquery</artifactId>\n+        <version>${jquery.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.webjars</groupId>\n         <artifactId>jquery-ui</artifactId>"}]}