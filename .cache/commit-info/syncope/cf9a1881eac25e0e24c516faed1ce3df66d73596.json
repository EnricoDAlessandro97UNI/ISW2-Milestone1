{"sha":"cf9a1881eac25e0e24c516faed1ce3df66d73596","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNmOWExODgxZWFjMjVlMGUyNGM1MTZmYWVkMWNlM2RmNjZkNzM1OTY=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2017-10-02T13:32:43Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2017-10-02T14:10:21Z"},"message":"[SYNCOPE-1213] managed maximum file size control manually, renamed maxFileSize into maxUploadFileSize","tree":{"sha":"581b337b75bae6cae627160d4013770133458190","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/581b337b75bae6cae627160d4013770133458190"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cf9a1881eac25e0e24c516faed1ce3df66d73596","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cf9a1881eac25e0e24c516faed1ce3df66d73596","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cf9a1881eac25e0e24c516faed1ce3df66d73596","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cf9a1881eac25e0e24c516faed1ce3df66d73596/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"45ad6f5595e4063a4840f476616682d49e59d164","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/45ad6f5595e4063a4840f476616682d49e59d164","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/45ad6f5595e4063a4840f476616682d49e59d164"}],"stats":{"total":153,"additions":108,"deletions":45},"files":[{"sha":"28a35c93cb49fc7e5b7eb93cc42511440c09c6d6","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -104,7 +104,7 @@ public static SyncopeConsoleApplication get() {\n \n     private String useGZIPCompression;\n \n-    private Integer maxFileSizeMB;\n+    private Integer maxUploadFileSizeMB;\n \n     private List<String> domains;\n \n@@ -155,7 +155,9 @@ protected void init() {\n         Args.notNull(rootPath, \"<rootPath>\");\n         useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n         Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n-        maxFileSizeMB = Integer.valueOf(props.getProperty(\"maxFileSizeMB\", \"4\"));\n+        maxUploadFileSizeMB = props.getProperty(\"maxUploadFileSizeMB\") == null\n+                ? null\n+                : Integer.valueOf(props.getProperty(\"maxUploadFileSizeMB\"));\n \n         String csrf = props.getProperty(\"csrf\");\n \n@@ -283,8 +285,8 @@ public String getReconciliationReportKey() {\n         return reconciliationReportKey;\n     }\n \n-    public Integer getMaxFileSizeMB() {\n-        return maxFileSizeMB;\n+    public Integer getMaxUploadFileSizeMB() {\n+        return maxUploadFileSizeMB;\n     }\n \n     public SyncopeClientFactoryBean newClientFactory() {"},{"sha":"e77fce2a658fc0fbfef2687e8c7243e5e8fc6e2b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":29,"deletions":18,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.HttpResourceStream;\n import org.apache.syncope.client.console.commons.PreviewUtils;\n+import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -77,22 +78,24 @@ public class BinaryFieldPanel extends FieldPanel<String> {\n \n     private final AjaxDownload fileDownload;\n \n-    private final transient PreviewUtils previewUtils = PreviewUtils.getInstance();\n-\n     private final AbstractBinaryPreviewer previewer;\n \n     private final IndicatingAjaxLink<Void> resetLink;\n \n+    private final Bytes maxUploadSize;\n+\n     public BinaryFieldPanel(final String id, final String name, final IModel<String> model, final String mimeType,\n             final String fileKey) {\n         super(id, name, model);\n         this.mimeType = mimeType;\n \n         previewer = PREVIEW_UTILS.getPreviewer(mimeType);\n \n+        maxUploadSize = SyncopeConsoleApplication.get().getMaxUploadFileSizeMB() == null\n+                ? null\n+                : Bytes.megabytes(SyncopeConsoleApplication.get().getMaxUploadFileSizeMB());\n         uploadForm = new StatelessForm<>(\"uploadForm\");\n         uploadForm.setMultiPart(true);\n-        uploadForm.setMaxSize(Bytes.megabytes(SyncopeConsoleApplication.get().getMaxFileSizeMB()));\n         add(uploadForm);\n \n         container = new WebMarkupContainer(\"previewContainer\") {\n@@ -177,24 +180,32 @@ public void onClick(final AjaxRequestTarget target) {\n             protected void onSubmit(final AjaxRequestTarget target) {\n                 final FileUpload uploadedFile = fileUpload.getFileUpload();\n                 if (uploadedFile != null) {\n-                    final byte[] uploadedBytes = uploadedFile.getBytes();\n-                    final String uploaded = new String(Base64.encodeBase64(uploadedBytes), StandardCharsets.UTF_8);\n-                    field.setModelObject(uploaded);\n-                    target.add(field);\n-\n-                    if (previewer == null) {\n-                        container.addOrReplace(emptyFragment);\n+                    if (maxUploadSize != null && uploadedFile.getSize() > maxUploadSize.bytes()) {\n+                        // SYNCOPE-1213 manage directly max upload file size (if set in properties file)\n+                        SyncopeConsoleSession.get().error(getString(\"tooLargeFile\")\n+                                .replace(\"${maxUploadSizeB}\", String.valueOf(maxUploadSize.bytes()))\n+                                .replace(\"${maxUploadSizeMB}\", String.valueOf(maxUploadSize.bytes() / 1000000L)));\n+                        ((BasePage) getPageReference().getPage()).getNotificationPanel().refresh(target);\n                     } else {\n-                        final Component panelPreview = previewer.preview(uploadedBytes);\n-                        changePreviewer(panelPreview);\n-                        fileUpload.setModelObject(null);\n-                        uploadForm.addOrReplace(fileUpload);\n-                    }\n+                        final byte[] uploadedBytes = uploadedFile.getBytes();\n+                        final String uploaded = new String(Base64.encodeBase64(uploadedBytes), StandardCharsets.UTF_8);\n+                        field.setModelObject(uploaded);\n+                        target.add(field);\n+\n+                        if (previewer == null) {\n+                            container.addOrReplace(emptyFragment);\n+                        } else {\n+                            final Component panelPreview = previewer.preview(uploadedBytes);\n+                            changePreviewer(panelPreview);\n+                            fileUpload.setModelObject(null);\n+                            uploadForm.addOrReplace(fileUpload);\n+                        }\n \n-                    setVisibleFileButtons(StringUtils.isNotBlank(uploaded));\n-                    downloadLink.setEnabled(StringUtils.isNotBlank(uploaded));\n+                        setVisibleFileButtons(StringUtils.isNotBlank(uploaded));\n+                        downloadLink.setEnabled(StringUtils.isNotBlank(uploaded));\n \n-                    target.add(uploadForm);\n+                        target.add(uploadForm);\n+                    }\n                 }\n             }\n         });"},{"sha":"636f685841311509d85d0c7c8a5dddd97926574c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -26,6 +26,7 @@\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.model.IModel;\n@@ -205,4 +206,10 @@ public FieldPanel<T> clone() {\n         panel.addLabel();\n         return panel;\n     }\n+\n+    protected PageReference getPageReference() {\n+        // SYNCOPE-1213\n+        // default implementation does not requier to pass page reference, override this method of want otherwise\n+        return null;\n+    }\n }"},{"sha":"49630feb7d3eddd1deb2d5124154c9fd7f032d27","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.WicketRuntimeException;\n import org.apache.wicket.core.util.lang.PropertyResolver;\n import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n@@ -218,6 +219,12 @@ public boolean evaluate() {\n         return !attrTOs.getObject().isEmpty() || !membershipTOs.getObject().isEmpty();\n     }\n \n+    public PageReference getPageReference() {\n+        // SYNCOPE-1213\n+        // default implementation does not requier to pass page reference, override this method of want otherwise\n+        return null;\n+    }\n+\n     protected static class AttrComparator implements Comparator<AttrTO>, Serializable {\n \n         private static final long serialVersionUID = -5105030477767941060L;"},{"sha":"2ac9b60107d43227b3804058a7d30801f5b99757","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -114,7 +114,16 @@ protected WizardModel buildModelSteps(final AnyWrapper<A> modelObject, final Wiz\n                     null,\n                     mode,\n                     anyTypeClasses,\n-                    formLayoutInfo.getWhichPlainAttrs()));\n+                    formLayoutInfo.getWhichPlainAttrs()) {\n+\n+                private static final long serialVersionUID = 8167894751609598306L;\n+\n+                @Override\n+                public PageReference getPageReference() {\n+                    return pageRef;\n+                }\n+\n+            });\n         }\n         if (formLayoutInfo.isDerAttrs() && mode != AjaxWizard.Mode.TEMPLATE) {\n             wizardModel.add(new DerAttrs("},{"sha":"3814de1c9b82d02b471cf2c46133fbc6afa003cc","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -50,6 +50,7 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -312,9 +313,18 @@ public String getObject(\n                 break;\n \n             case Binary:\n+                final PageReference pageReference = getPageReference();\n                 panel = new BinaryFieldPanel(\"panel\", schemaTO.getKey(), new Model<>(), schemaTO.getMimeType(),\n-                        fileKey);\n+                        fileKey) {\n \n+                    private static final long serialVersionUID = -3268213909514986831L;\n+\n+                    @Override\n+                    protected PageReference getPageReference() {\n+                        return pageReference;\n+                    }\n+\n+                };\n                 if (required) {\n                     panel.addRequiredLabel();\n                 }"},{"sha":"781a7ef37db85eeb829657cb05795b88d4d2e7a8","filename":"client/console/src/main/resources/console.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -26,7 +26,7 @@ host=localhost\n port=8080\n rootPath=/syncope/rest/\n useGZIPCompression=true\n-maxFileSizeMB=5\n+maxUploadFileSizeMB=5\n \n csrf=true\n "},{"sha":"6db49aff565b8de5c2cccbf5e94c434bd90112fe","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.properties?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+tooLargeFile=File is too large, max upload file size is ${maxUploadSizeB} bytes (${maxUploadSizeMB} MB)."},{"sha":"2196e11a075191ca0f737de417d1a5849f5a8f2d","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -82,7 +82,7 @@ public static SyncopeEnduserApplication get() {\n \n     private boolean xsrfEnabled;\n \n-    private Integer maxFileSizeMB;\n+    private Integer maxUploadFileSizeMB;\n     \n     private SyncopeClientFactoryBean clientFactory;\n \n@@ -121,7 +121,7 @@ protected void init() {\n         Args.notNull(rootPath, \"<rootPath>\");\n         String useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n         Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n-        maxFileSizeMB = Integer.valueOf(props.getProperty(\"maxFileSizeMB\", \"4\"));\n+        maxUploadFileSizeMB = Integer.valueOf(props.getProperty(\"maxUploadFileSizeMB\"));\n \n         clientFactory = new SyncopeClientFactoryBean().\n                 setAddress(scheme + \"://\" + host + \":\" + port + \"/\" + rootPath).\n@@ -269,8 +269,8 @@ public boolean isXsrfEnabled() {\n         return xsrfEnabled;\n     }\n \n-    public Integer getMaxFileSizeMB() {\n-        return maxFileSizeMB;\n+    public Integer getMaxUploadFileSizeMB() {\n+        return maxUploadFileSizeMB;\n     }\n     \n     public Map<String, CustomAttributesInfo> getCustomForm() {"},{"sha":"c16901065f4f392558bdd75a0cb975ac5298d51b","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/adapters/PlatformInfoAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FPlatformInfoAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FPlatformInfoAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FPlatformInfoAdapter.java?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -34,7 +34,7 @@ public static PlatformInfoRequest toPlatformInfoRequest(final PlatformInfo platf\n         request.setPwdResetRequiringSecurityQuestions(platformInfo.isPwdResetRequiringSecurityQuestions());\n         request.setVersion(platformInfo.getVersion());\n         request.setCaptchaEnabled(SyncopeEnduserApplication.get().isCaptchaEnabled());\n-        request.setMaxFileSizeMB(SyncopeEnduserApplication.get().getMaxFileSizeMB());\n+        request.setMaxUploadFileSizeMB(SyncopeEnduserApplication.get().getMaxUploadFileSizeMB());\n         request.setCustomForm(customForm);\n \n         return request;"},{"sha":"c4daa444a3809c6e8814935a8d5102eaaf03a567","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/model/PlatformInfoRequest.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FPlatformInfoRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FPlatformInfoRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FPlatformInfoRequest.java?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -35,7 +35,7 @@ public class PlatformInfoRequest implements Serializable {\n \n     private boolean captchaEnabled;\n \n-    private int maxFileSizeMB;\n+    private int maxUploadFileSizeMB;\n \n     private Map<String, CustomAttributesInfo> customForm;\n \n@@ -66,8 +66,8 @@ public void setVersion(final String version) {\n         this.version = version;\n     }\n \n-     public int getMaxFileSizeMB() {\n-        return maxFileSizeMB;\n+     public int getMaxUploadFileSizeMB() {\n+        return maxUploadFileSizeMB;\n     }\n     \n     public void setSelfRegAllowed(final boolean selfRegAllowed) {\n@@ -86,8 +86,8 @@ public void setCaptchaEnabled(final boolean captchaEnabled) {\n         this.captchaEnabled = captchaEnabled;\n     }\n \n-    public void setMaxFileSizeMB(final int maxFileSizeMB) {\n-        this.maxFileSizeMB = maxFileSizeMB;\n+    public void setMaxUploadFileSizeMB(final int maxUploadFileSizeMB) {\n+        this.maxUploadFileSizeMB = maxUploadFileSizeMB;\n     }\n \n     public Map<String, CustomAttributesInfo> getCustomForm() {"},{"sha":"da0aadc580a56bc79986a400f6ef45c3bf6e56f0","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/app.js","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -359,7 +359,7 @@ app.controller('ApplicationController', ['$scope', '$rootScope', '$location', 'I\n       $rootScope.pwdResetRequiringSecurityQuestions = false;\n       $rootScope.captchaEnabled = false;\n       $rootScope.validationEnabled = true;\n-      $rootScope.maxFileSizeMB = 4;\n+      $rootScope.maxUploadFileSizeMB = 5;\n       $rootScope.saml2idps = {\n         available: [],\n         selected: {}\n@@ -372,7 +372,7 @@ app.controller('ApplicationController', ['$scope', '$rootScope', '$location', 'I\n                 $rootScope.version = response.version;\n                 $rootScope.pwdResetRequiringSecurityQuestions = response.pwdResetRequiringSecurityQuestions;\n                 $rootScope.captchaEnabled = response.captchaEnabled;\n-                $rootScope.maxFileSizeMB = response.maxFileSizeMB;\n+                $rootScope.maxUploadFileSizeMB = response.maxUploadFileSizeMB;\n                 /* \n                  * USER form customization JSON\n                  */\n@@ -408,8 +408,8 @@ app.controller('ApplicationController', ['$scope', '$rootScope', '$location', 'I\n       $rootScope.getVersion = function () {\n         return $rootScope.version;\n       };\n-      $rootScope.getMaxFileSizeMB = function () {\n-        return $rootScope.maxFileSizeMB;\n+      $rootScope.getMaxUploadFileSizeMB = function () {\n+        return $rootScope.maxUploadFileSizeMB;\n       };\n       /* \n        * USER Attributes sorting strategies"},{"sha":"4c0db92e5d6afe2bb2cbf8688942f658925339a9","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/fileInput.js","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FfileInput.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FfileInput.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FfileInput.js?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -47,7 +47,7 @@ angular.module('self')\n                   initialPreview: [\n                     previewImgComposite\n                   ],\n-                  'maxFileSize': parseInt($rootScope.maxFileSizeMB) * 1000\n+                  'maxFileSize': parseInt($rootScope.maxUploadFileSizeMB) * 1000\n                 });\n               }\n             };"},{"sha":"dc9bc7e751107944804279a979f43545c6788cc2","filename":"client/enduser/src/main/resources/enduser.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -22,7 +22,7 @@ anonymousUser=${anonymousUser}\n anonymousKey=${anonymousKey}\n adminUser=${adminUser}\n useGZIPCompression=true\n-maxFileSizeMB=4\n+maxUploadFileSizeMB=5\n \n scheme=http\n host=localhost"},{"sha":"2612894a848c47cde2d135ce6dd2ed4f17616e9e","filename":"fit/console-reference/src/main/resources/console.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -26,7 +26,7 @@ host=localhost\n port=9080\n rootPath=/syncope/rest/\n useGZIPCompression=true\n-maxFileSizeMB=5\n+maxUploadFileSizeMB=5\n \n csrf=true\n "},{"sha":"24fe5f97a15feffdc91dd9dce0fa22db6422195d","filename":"fit/core-reference/src/test/resources/console.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -26,7 +26,7 @@ host=localhost\n port=9080\n rootPath=/syncope/rest/\n useGZIPCompression=true\n-maxFileSizeMB=5\n+maxUploadFileSizeMB=5\n \n csrf=false\n "},{"sha":"b7edda18d480a056ae6b8a981a10acc9305ad03a","filename":"fit/enduser-reference/src/main/resources/enduser.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser.properties?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -22,7 +22,7 @@ anonymousUser=${anonymousUser}\n anonymousKey=${anonymousKey}\n adminUser=${adminUser}\n useGZIPCompression=true\n-maxFileSizeMB=4\n+maxUploadFileSizeMB=5\n \n scheme=http\n host=localhost"},{"sha":"ed2d5cdff56cfafe197411996e9144f347f15fdc","filename":"fit/enduser-reference/src/test/resources/enduser.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf9a1881eac25e0e24c516faed1ce3df66d73596/fit%2Fenduser-reference%2Fsrc%2Ftest%2Fresources%2Fenduser.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf9a1881eac25e0e24c516faed1ce3df66d73596/fit%2Fenduser-reference%2Fsrc%2Ftest%2Fresources%2Fenduser.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fsrc%2Ftest%2Fresources%2Fenduser.properties?ref=cf9a1881eac25e0e24c516faed1ce3df66d73596","patch":"@@ -22,7 +22,7 @@ anonymousUser=${anonymousUser}\n anonymousKey=${anonymousKey}\n adminUser=${adminUser}\n useGZIPCompression=true\n-maxFileSizeMB=4\n+maxUploadFileSizeMB=5\n \n scheme=http\n host=localhost"}]}