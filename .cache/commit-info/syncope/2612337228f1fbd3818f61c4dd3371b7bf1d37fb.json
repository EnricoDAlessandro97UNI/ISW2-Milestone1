{"sha":"2612337228f1fbd3818f61c4dd3371b7bf1d37fb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI2MTIzMzcyMjhmMWZiZDM4MThmNjFjNGRkMzM3MWI3YmYxZDM3ZmI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-07-06T13:58:37Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-07-06T13:58:37Z"},"message":"[SYNCOPE-676] Various improvements including a new optional 'details' boolean parameter for list and search, defaulting to true to keep backward compatibility","tree":{"sha":"f5c07e930b30914dedf5f6450731fef8c6e51c09","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f5c07e930b30914dedf5f6450731fef8c6e51c09"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2612337228f1fbd3818f61c4dd3371b7bf1d37fb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2612337228f1fbd3818f61c4dd3371b7bf1d37fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2612337228f1fbd3818f61c4dd3371b7bf1d37fb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e1c2587634375dba6d58133a75aa0e61a2171263","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e1c2587634375dba6d58133a75aa0e61a2171263","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e1c2587634375dba6d58133a75aa0e61a2171263"}],"stats":{"total":371,"additions":189,"deletions":182},"files":[{"sha":"757d29898060e2e91e5b95107b3c821466b1bd64","filename":"common/src/main/java/org/apache/syncope/common/services/JAXRSService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FJAXRSService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FJAXRSService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FJAXRSService.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -36,4 +36,6 @@ public interface JAXRSService {\n \n     final String PARAM_ORDERBY = \"orderby\";\n \n+    final String PARAM_DETAILS = \"details\";\n+\n }"},{"sha":"9bd15881c9615b8b913fa49304c8e44f72d3ff64","filename":"common/src/main/java/org/apache/syncope/common/services/RoleService.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -138,14 +138,16 @@ PagedResult<RoleTO> list(\n      * @param page result page number\n      * @param size number of entries per page\n      * @param orderBy list of ordering clauses, separated by comma\n+     * @param details whether include all details or not, defaults to true\n      * @return paged list of existing roles matching page/size conditions\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     PagedResult<RoleTO> list(\n             @NotNull @Min(1) @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) Integer page,\n             @NotNull @Min(1) @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) Integer size,\n-            @QueryParam(PARAM_ORDERBY) String orderBy);\n+            @QueryParam(PARAM_ORDERBY) String orderBy,\n+            @QueryParam(PARAM_DETAILS) @DefaultValue(\"true\") boolean details);\n \n     /**\n      * Returns a paged list of roles matching the provided FIQL search condition.\n@@ -193,6 +195,7 @@ PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql,\n      * @param page result page number\n      * @param size number of entries per page\n      * @param orderBy list of ordering clauses, separated by comma\n+     * @param details whether include all details or not, defaults to true\n      * @return paged list of roles matching the provided FIQL search condition\n      */\n     @GET\n@@ -201,7 +204,8 @@ PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql,\n     PagedResult<RoleTO> search(@QueryParam(PARAM_FIQL) String fiql,\n             @NotNull @Min(1) @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) Integer page,\n             @NotNull @Min(1) @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) Integer size,\n-            @QueryParam(PARAM_ORDERBY) String orderBy);\n+            @QueryParam(PARAM_ORDERBY) String orderBy,\n+            @QueryParam(PARAM_DETAILS) @DefaultValue(\"true\") boolean details);\n \n     /**\n      * Creates a new role."},{"sha":"270920fb6e271ed51811e20b25515696772f769e","filename":"common/src/main/java/org/apache/syncope/common/services/UserService.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -131,14 +131,16 @@ PagedResult<UserTO> list(\n      * @param page result page number\n      * @param size number of entries per page\n      * @param orderBy list of ordering clauses, separated by comma\n+     * @param details whether include all details or not, defaults to true\n      * @return paged list of existing users matching page/size conditions\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     PagedResult<UserTO> list(\n             @NotNull @Min(1) @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) Integer page,\n             @NotNull @Min(1) @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) Integer size,\n-            @QueryParam(PARAM_ORDERBY) String orderBy);\n+            @QueryParam(PARAM_ORDERBY) String orderBy,\n+            @QueryParam(PARAM_DETAILS) @DefaultValue(\"true\") boolean details);\n \n     /**\n      * Returns a paged list of users matching the provided FIQL search condition.\n@@ -185,6 +187,7 @@ PagedResult<UserTO> search(@QueryParam(PARAM_FIQL) String fiql,\n      * @param page result page number\n      * @param size number of entries per page\n      * @param orderBy list of ordering clauses, separated by comma\n+     * @param details whether include all details or not, defaults to true\n      * @return paged list of users matching the provided FIQL search condition\n      */\n     @GET\n@@ -193,7 +196,8 @@ PagedResult<UserTO> search(@QueryParam(PARAM_FIQL) String fiql,\n     PagedResult<UserTO> search(@QueryParam(PARAM_FIQL) String fiql,\n             @NotNull @Min(1) @QueryParam(PARAM_PAGE) @DefaultValue(DEFAULT_PARAM_PAGE) Integer page,\n             @NotNull @Min(1) @QueryParam(PARAM_SIZE) @DefaultValue(DEFAULT_PARAM_SIZE) Integer size,\n-            @QueryParam(PARAM_ORDERBY) String orderBy);\n+            @QueryParam(PARAM_ORDERBY) String orderBy,\n+            @QueryParam(PARAM_DETAILS) @DefaultValue(\"true\") boolean details);\n \n     /**\n      * Creates a new user."},{"sha":"d43759d2d96fb14c26e800ce1e03ba748afe6689","filename":"console/src/main/java/org/apache/syncope/console/commons/Constants.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -46,8 +46,6 @@ public final class Constants {\n \n     public static final String PREF_USERS_DERIVED_ATTRIBUTES_VIEW = \"users.derived.attributes.view\";\n \n-    public static final String PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW = \"users.virtual.attributes.view\";\n-\n     public static final String PREF_CONF_SCHEMA_PAGINATOR_ROWS = \"conf.schema.paginator.rows\";\n \n     public static final String PREF_USER_SCHEMA_PAGINATOR_ROWS = \"user.schema.paginator.rows\";"},{"sha":"dd60881bcd8405e4f330602a84d1893228d3a3d1","filename":"console/src/main/java/org/apache/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":2,"deletions":44,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -68,10 +68,8 @@ public class DisplayAttributesModalPage extends BaseModalPage {\n \n     private final List<String> selectedDerSchemas;\n \n-    private final List<String> selectedVirSchemas;\n-\n     public DisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n-            final List<String> schemaNames, final List<String> dSchemaNames, final List<String> vSchemaNames) {\n+            final List<String> schemaNames, final List<String> dSchemaNames) {\n \n         super();\n \n@@ -105,16 +103,6 @@ protected List<String> load() {\n             }\n         };\n \n-        final IModel<List<String>> vsnames = new LoadableDetachableModel<List<String>>() {\n-\n-            private static final long serialVersionUID = 5275935387613157437L;\n-\n-            @Override\n-            protected List<String> load() {\n-                return vSchemaNames;\n-            }\n-        };\n-\n         final Form form = new Form(FORM);\n         form.setModel(new CompoundPropertyModel(this));\n \n@@ -124,8 +112,6 @@ protected List<String> load() {\n \n         selectedDerSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW);\n \n-        selectedVirSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW);\n-\n         final CheckGroup dgroup = new CheckGroup(\"dCheckGroup\", new PropertyModel(this, \"selectedDetails\"));\n         form.add(dgroup);\n \n@@ -191,39 +177,13 @@ protected void populateItem(ListItem<String> item) {\n             dsgroup.add(derSchemas);\n         }\n \n-        if (vsnames.getObject() == null || vsnames.getObject().isEmpty()) {\n-            final Fragment fragment = new Fragment(\"vschemas\", \"emptyFragment\", form);\n-            form.add(fragment);\n-\n-            selectedVirSchemas.clear();\n-        } else {\n-            final Fragment fragment = new Fragment(\"vschemas\", \"vsfragment\", form);\n-            form.add(fragment);\n-\n-            final CheckGroup vsgroup = new CheckGroup(\"vsCheckGroup\", new PropertyModel(this, \"selectedVirSchemas\"));\n-            fragment.add(vsgroup);\n-\n-            final ListView<String> virSchemas = new ListView<String>(\"virSchemas\", vsnames) {\n-\n-                private static final long serialVersionUID = 9101744072914090143L;\n-\n-                @Override\n-                protected void populateItem(ListItem<String> item) {\n-                    item.add(new Check(\"vscheck\", item.getModel()));\n-                    item.add(new Label(\"vsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n-                }\n-            };\n-            vsgroup.add(virSchemas);\n-        }\n-\n         final AjaxButton submit = new IndicatingAjaxButton(SUBMIT, new ResourceModel(SUBMIT)) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                if (selectedDetails.size() + selectedSchemas.size() + selectedVirSchemas.size() + selectedDerSchemas.\n-                        size()\n+                if (selectedDetails.size() + selectedSchemas.size() + selectedDerSchemas.size()\n                         > MAX_SELECTIONS) {\n \n                     error(getString(\"tooManySelections\"));\n@@ -237,8 +197,6 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                     prefs.put(Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW, selectedDerSchemas);\n \n-                    prefs.put(Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW, selectedVirSchemas);\n-\n                     prefMan.setList(getRequest(), getResponse(), prefs);\n \n                     ((BasePage) pageRef.getPage()).setModalResult(true);"},{"sha":"c519c527fef95f28e9ef3f04ecd25e5e946bd57c","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchResultPanel.java","status":"modified","additions":2,"deletions":11,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -69,16 +69,13 @@ public class UserSearchResultPanel extends AbstractSearchResultPanel {\n \n     private final List<String> dSchemaNames;\n \n-    private final List<String> vSchemaNames;\n-\n     public <T extends AbstractAttributableTO> UserSearchResultPanel(final String id, final boolean filtered,\n             final String fiql, final PageReference callerRef, final AbstractSubjectRestClient restClient) {\n \n         super(id, filtered, fiql, callerRef, restClient);\n \n         this.schemaNames = schemaRestClient.getSchemaNames(AttributableType.USER);\n         this.dSchemaNames = schemaRestClient.getDerSchemaNames(AttributableType.USER);\n-        this.vSchemaNames = schemaRestClient.getVirSchemaNames(AttributableType.USER);\n \n         initResultTable();\n     }\n@@ -113,12 +110,6 @@ protected List<IColumn<AbstractAttributableTO, String>> getColumns() {\n             }\n         }\n \n-        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW)) {\n-            if (vSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn(name, SchemaType.VIRTUAL));\n-            }\n-        }\n-\n         // Add defaults in case of no selection\n         if (columns.isEmpty()) {\n             for (String name : DisplayAttributesModalPage.DEFAULT_SELECTION) {\n@@ -252,8 +243,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new DisplayAttributesModalPage(page.getPageReference(), displaymodal,\n-                                        schemaNames, dSchemaNames, vSchemaNames);\n+                                return new DisplayAttributesModalPage(\n+                                        page.getPageReference(), displaymodal, schemaNames, dSchemaNames);\n                             }\n                         });\n "},{"sha":"a26a5cf6f8ed29ae352a256ca2c4532dee9b229c","filename":"console/src/main/java/org/apache/syncope/console/rest/RoleRestClient.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.console.rest;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n import javax.ws.rs.core.Response;\n@@ -53,12 +54,17 @@ public int count() {\n     }\n \n     public List<RoleTO> list() {\n-        return getService(RoleService.class).list(1, 1000).getResult();\n+        final List<RoleTO> allRoles = new ArrayList<RoleTO>();\n+        final int count = count();\n+        for (int page = 1; page <= (count / 100) + 1; page++) {\n+            allRoles.addAll(getService(RoleService.class).list(page, 100, null, false).getResult());\n+        }\n+        return allRoles;\n     }\n \n     @Override\n     public List<RoleTO> list(final int page, final int size, final SortParam<String> sort) {\n-        return getService(RoleService.class).list(page, size, toOrderBy(sort)).getResult();\n+        return getService(RoleService.class).list(page, size, toOrderBy(sort), false).getResult();\n     }\n \n     @Override\n@@ -68,7 +74,7 @@ public int searchCount(final String fiql) {\n \n     @Override\n     public List<RoleTO> search(final String fiql, final int page, final int size, final SortParam<String> sort) {\n-        return getService(RoleService.class).search(fiql, page, size, toOrderBy(sort)).getResult();\n+        return getService(RoleService.class).search(fiql, page, size, toOrderBy(sort), false).getResult();\n     }\n \n     @Override"},{"sha":"b064fd39e0066aa86bf77094bd63f782c89c6322","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -55,7 +55,7 @@ public int count() {\n \n     @Override\n     public List<UserTO> list(final int page, final int size, final SortParam<String> sort) {\n-        return getService(UserService.class).list(page, size, toOrderBy(sort)).getResult();\n+        return getService(UserService.class).list(page, size, toOrderBy(sort), false).getResult();\n     }\n \n     public UserTO create(final UserTO userTO, final boolean storePassword) {\n@@ -101,7 +101,7 @@ public int searchCount(final String fiql) {\n \n     @Override\n     public List<UserTO> search(final String fiql, final int page, final int size, final SortParam<String> sort) {\n-        return getService(UserService.class).search(fiql, page, size, toOrderBy(sort)).getResult();\n+        return getService(UserService.class).search(fiql, page, size, toOrderBy(sort), false).getResult();\n     }\n \n     @Override"},{"sha":"bb1ba9d55d9c9d8f880c7276bde40db2b0242f21","filename":"console/src/main/resources/org/apache/syncope/console/pages/DisplayAttributesModalPage.html","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -81,8 +81,6 @@\n \n         <span wicket:id=\"dschemas\">[derived schemas]</span>\n \n-        <span wicket:id=\"vschemas\">[virtual schemas]</span>\n-\n       </div>\n \n       <wicket:fragment wicket:id=\"sfragment\">"},{"sha":"59319a68e3bab31e743d2043086f4e2beb4570c5","filename":"console/src/test/java/org/apache/syncope/console/ReportTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FReportTestITCase.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -30,7 +30,7 @@ public void readReportlet() {\n         seleniumDriver.findElement(By.xpath(\"//img[@alt=\\\"Reports\\\"]\")).click();        \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//div[@id='tabs']\")));\n-        seleniumDriver.findElement(By.xpath(\"//table/tbody/tr/td[8]/div/span[13]/a\")).click();\n+        seleniumDriver.findElement(By.xpath(\"//table/tbody/tr/td[9]/div/span[13]/a\")).click();\n         \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//iframe\")));\n         seleniumDriver.switchTo().frame(0);\n@@ -72,7 +72,7 @@ public void executeReport() {\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//div[@id='tabs']\")));\n \n-        seleniumDriver.findElement(By.xpath(\"//table/tbody/tr/td[8]/div/span[6]/a\")).click();\n+        seleniumDriver.findElement(By.xpath(\"//table/tbody/tr/td[9]/div/span[6]/a\")).click();\n \n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"feedback\")));\n         assertTrue(seleniumDriver.findElement(By.tagName(\"body\")).getText().contains(\"Operation executed successfully\"));"},{"sha":"fead0a13f0efe8be213f1bd2b3ef9d45297d600a","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -202,7 +202,7 @@ private NotificationTask getNotificationTask(\n                 LOG.warn(\"{} cannot be notified: {} not found\", recipient, notification.getRecipientAttrName());\n             } else {\n                 recipientEmails.add(email);\n-                recipientTOs.add(userDataBinder.getUserTO(recipient));\n+                recipientTOs.add(userDataBinder.getUserTO(recipient, true));\n             }\n         }\n \n@@ -324,20 +324,20 @@ public List<NotificationTask> createTasks(\n                     model.put(\"input\", input);\n \n                     if (subject instanceof SyncopeUser) {\n-                        model.put(\"user\", userDataBinder.getUserTO((SyncopeUser) subject));\n+                        model.put(\"user\", userDataBinder.getUserTO((SyncopeUser) subject, true));\n                     } else if (subject instanceof SyncopeRole) {\n-                        model.put(\"role\", roleDataBinder.getRoleTO((SyncopeRole) subject));\n+                        model.put(\"role\", roleDataBinder.getRoleTO((SyncopeRole) subject, true));\n                     }\n                     NotificationTask notificationTask = getNotificationTask(notification, subject, model);\n                     notificationTask = taskDAO.save(notificationTask);\n-                    notificationList.add(notificationTask);                    \n+                    notificationList.add(notificationTask);\n                 }\n             } else {\n                 LOG.debug(\"Notification {}, userAbout {}, roleAbout {} is deactivated, \"\n                         + \"notification task will not be created\", notification.getId(),\n                         notification.getUserAbout(), notification.getRoleAbout());\n             }\n-        }        \n+        }\n         return notificationList;\n     }\n "},{"sha":"aa8b93f1e5d291381b44e2de128da044fdcdc2c9","filename":"core/src/main/java/org/apache/syncope/core/report/RoleReportlet.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -231,7 +231,7 @@ private void doExtract(final ContentHandler handler, final List<SyncopeRole> rol\n \n             // Using RoleTO for attribute values, since the conversion logic of\n             // values to String is already encapsulated there\n-            RoleTO roleTO = roleDataBinder.getRoleTO(role);\n+            RoleTO roleTO = roleDataBinder.getRoleTO(role, true);\n \n             doExtractAttributes(handler, roleTO, conf.getAttrs(), conf.getDerAttrs(), conf.getVirAttrs());\n "},{"sha":"a54ac531b75f237331ee86eb99530a2fde1601f8","filename":"core/src/main/java/org/apache/syncope/core/report/UserReportlet.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -269,7 +269,7 @@ private void doExtract(final ContentHandler handler, final List<SyncopeUser> use\n \n             // Using UserTO for attribute values, since the conversion logic of\n             // values to String is already encapsulated there\n-            UserTO userTO = userDataBinder.getUserTO(user);\n+            UserTO userTO = userDataBinder.getUserTO(user, true);\n \n             doExtractAttributes(handler, userTO, conf.getAttrs(), conf.getDerAttrs(), conf.getVirAttrs());\n \n@@ -293,7 +293,7 @@ private void doExtract(final ContentHandler handler, final List<SyncopeUser> use\n                             LOG.warn(\"Unexpected: cannot find membership for role {} for user {}\", memb.getRoleId(),\n                                     user);\n                         } else {\n-                            doExtractResources(handler, roleDataBinder.getRoleTO(actualMemb.getSyncopeRole()));\n+                            doExtractResources(handler, roleDataBinder.getRoleTO(actualMemb.getSyncopeRole(), true));\n                         }\n                     }\n "},{"sha":"a7bb91f168653d10f64ad3e1ed187a8a5d3bd10f","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/AbstractSubjectController.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractSubjectController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractSubjectController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractSubjectController.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -35,9 +35,10 @@\n \n     public abstract T delete(Long id);\n \n-    public abstract List<T> list(int page, int size, List<OrderByClause> orderBy);\n+    public abstract List<T> list(int page, int size, List<OrderByClause> orderBy, boolean includeDetails);\n \n-    public abstract List<T> search(SearchCond searchCondition, int page, int size, List<OrderByClause> orderBy);\n+    public abstract List<T> search(SearchCond searchCondition,\n+            int page, int size, List<OrderByClause> orderBy, boolean includeDetails);\n \n     public abstract int searchCount(SearchCond searchCondition);\n }"},{"sha":"c8fb25f6377f98a9d982effdea52b5858f961f16","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -111,7 +111,7 @@ public RoleTO read(final Long roleId) {\n             throw new NotFoundException(\"Role \" + roleId);\n         }\n \n-        return binder.getRoleTO(role);\n+        return binder.getRoleTO(role, true);\n     }\n \n     @PreAuthorize(\"isAuthenticated() \"\n@@ -138,7 +138,7 @@ public RoleTO readSelf(final Long roleId) {\n             throw new UnauthorizedRoleException(role.getId());\n         }\n \n-        return binder.getRoleTO(role);\n+        return binder.getRoleTO(role, true);\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_READ')\")\n@@ -153,12 +153,12 @@ public RoleTO parent(final Long roleId) {\n \n         RoleTO result = role.getParent() == null\n                 ? null\n-                : binder.getRoleTO(role.getParent());\n+                : binder.getRoleTO(role.getParent(), true);\n \n         return result;\n     }\n \n-    @PreAuthorize(\"hasRole('ROLE_READ')\")\n+    @PreAuthorize(\"hasRole('ROLE_LIST')\")\n     @Transactional(readOnly = true)\n     public List<RoleTO> children(final Long roleId) {\n         SyncopeRole role = binder.getRoleFromId(roleId);\n@@ -169,7 +169,7 @@ public List<RoleTO> children(final Long roleId) {\n         List<RoleTO> childrenTOs = new ArrayList<RoleTO>(children.size());\n         for (SyncopeRole child : children) {\n             if (allowedRoleIds.contains(child.getId())) {\n-                childrenTOs.add(binder.getRoleTO(child));\n+                childrenTOs.add(binder.getRoleTO(child, true));\n             }\n         }\n \n@@ -186,12 +186,14 @@ public int count() {\n     @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true)\n     @Override\n-    public List<RoleTO> list(final int page, final int size, final List<OrderByClause> orderBy) {\n+    public List<RoleTO> list(\n+            final int page, final int size, final List<OrderByClause> orderBy, final boolean details) {\n+\n         List<SyncopeRole> roles = roleDAO.findAll(page, size, orderBy);\n \n         List<RoleTO> roleTOs = new ArrayList<RoleTO>(roles.size());\n         for (SyncopeRole role : roles) {\n-            roleTOs.add(binder.getRoleTO(role));\n+            roleTOs.add(binder.getRoleTO(role, details));\n         }\n \n         return roleTOs;\n@@ -209,15 +211,15 @@ public int searchCount(final SearchCond searchCondition) {\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     @Override\n     public List<RoleTO> search(final SearchCond searchCondition, final int page, final int size,\n-            final List<OrderByClause> orderBy) {\n+            final List<OrderByClause> orderBy, final boolean details) {\n \n         final List<SyncopeRole> matchingRoles = searchDAO.search(\n                 EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()),\n                 searchCondition, page, size, orderBy, SubjectType.ROLE);\n \n         final List<RoleTO> result = new ArrayList<RoleTO>(matchingRoles.size());\n         for (SyncopeRole role : matchingRoles) {\n-            result.add(binder.getRoleTO(role));\n+            result.add(binder.getRoleTO(role, details));\n         }\n \n         return result;\n@@ -426,7 +428,7 @@ public RoleTO deprovision(final Long roleId, final Collection<String> resources)\n             propagationReporter.onPrimaryResourceFailure(tasks);\n         }\n \n-        final RoleTO updatedTO = binder.getRoleTO(role);\n+        final RoleTO updatedTO = binder.getRoleTO(role, true);\n         updatedTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n         return updatedTO;\n     }"},{"sha":"5cbd5de9ee2ce3cee568edfd878d3d793857bbe5","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -147,13 +147,15 @@ public int searchCount(final SearchCond searchCondition) {\n     @PreAuthorize(\"hasRole('USER_LIST')\")\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     @Override\n-    public List<UserTO> list(final int page, final int size, final List<OrderByClause> orderBy) {\n+    public List<UserTO> list(\n+            final int page, final int size, final List<OrderByClause> orderBy, final boolean details) {\n+\n         Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n \n         List<SyncopeUser> users = userDAO.findAll(adminRoleIds, page, size, orderBy);\n         List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n         for (SyncopeUser user : users) {\n-            userTOs.add(binder.getUserTO(user));\n+            userTOs.add(binder.getUserTO(user, details));\n         }\n \n         return userTOs;\n@@ -177,15 +179,15 @@ public UserTO read(final Long userId) {\n     @Transactional(readOnly = true)\n     @Override\n     public List<UserTO> search(final SearchCond searchCondition, final int page, final int size,\n-            final List<OrderByClause> orderBy) {\n+            final List<OrderByClause> orderBy, final boolean details) {\n \n         final List<SyncopeUser> matchingUsers = searchDAO.search(\n                 EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()),\n                 searchCondition, page, size, orderBy, SubjectType.USER);\n \n         final List<UserTO> result = new ArrayList<UserTO>(matchingUsers.size());\n         for (SyncopeUser user : matchingUsers) {\n-            result.add(binder.getUserTO(user));\n+            result.add(binder.getUserTO(user, details));\n         }\n \n         return result;\n@@ -600,7 +602,7 @@ public UserTO deprovision(final Long userId, final Collection<String> resources)\n             propagationReporter.onPrimaryResourceFailure(tasks);\n         }\n \n-        final UserTO updatedUserTO = binder.getUserTO(user);\n+        final UserTO updatedUserTO = binder.getUserTO(user, true);\n         updatedUserTO.getPropagationStatusTOs().addAll(propagationReporter.getStatuses());\n         return updatedUserTO;\n     }"},{"sha":"fcd5c0635c41dc6974facde0721f770c3b0c2a44","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":41,"deletions":39,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -369,9 +369,7 @@ public PropagationByResource update(final SyncopeRole role, final RoleMod roleMo\n \n     @SuppressWarnings(\"unchecked\")\n     @Transactional(readOnly = true)\n-    public RoleTO getRoleTO(final SyncopeRole role) {\n-        connObjectUtil.retrieveVirAttrValues(role, AttributableUtil.getInstance(AttributableType.ROLE));\n-\n+    public RoleTO getRoleTO(final SyncopeRole role, final boolean details) {\n         RoleTO roleTO = new RoleTO();\n \n         // set sys info\n@@ -405,53 +403,57 @@ public RoleTO getRoleTO(final SyncopeRole role) {\n             roleTO.setRoleOwner(role.getRoleOwner().getId());\n         }\n \n-        // -------------------------\n-        // Retrieve all [derived/virtual] attributes (inherited and not)\n-        // -------------------------        \n-        final List<RAttr> allAttributes = role.findLastInheritedAncestorAttributes();\n-\n-        final List<RDerAttr> allDerAttributes = role.findLastInheritedAncestorDerivedAttributes();\n-\n-        final List<RVirAttr> allVirAttributes = role.findLastInheritedAncestorVirtualAttributes();\n-        // -------------------------\n-\n-        fillTO(roleTO, allAttributes, allDerAttributes, allVirAttributes, role.getResources());\n-\n-        for (Entitlement entitlement : role.getEntitlements()) {\n-            roleTO.getEntitlements().add(entitlement.getName());\n-        }\n-\n-        for (RAttrTemplate template : role.findInheritedTemplates(RAttrTemplate.class)) {\n-            roleTO.getRAttrTemplates().add(template.getSchema().getName());\n-        }\n-        for (RDerAttrTemplate template : role.findInheritedTemplates(RDerAttrTemplate.class)) {\n-            roleTO.getRDerAttrTemplates().add(template.getSchema().getName());\n-        }\n-        for (RVirAttrTemplate template : role.findInheritedTemplates(RVirAttrTemplate.class)) {\n-            roleTO.getRVirAttrTemplates().add(template.getSchema().getName());\n-        }\n-        for (MAttrTemplate template : role.findInheritedTemplates(MAttrTemplate.class)) {\n-            roleTO.getMAttrTemplates().add(template.getSchema().getName());\n-        }\n-        for (MDerAttrTemplate template : role.findInheritedTemplates(MDerAttrTemplate.class)) {\n-            roleTO.getMDerAttrTemplates().add(template.getSchema().getName());\n-        }\n-        for (MVirAttrTemplate template : role.findInheritedTemplates(MVirAttrTemplate.class)) {\n-            roleTO.getMVirAttrTemplates().add(template.getSchema().getName());\n-        }\n-\n         roleTO.setPasswordPolicy(role.getPasswordPolicy() == null\n                 ? null\n                 : role.getPasswordPolicy().getId());\n         roleTO.setAccountPolicy(role.getAccountPolicy() == null\n                 ? null\n                 : role.getAccountPolicy().getId());\n \n+        if (details) {\n+            // -------------------------\n+            // Retrieve all [derived/virtual] attributes (inherited and not)\n+            // -------------------------        \n+            connObjectUtil.retrieveVirAttrValues(role, AttributableUtil.getInstance(AttributableType.ROLE));\n+\n+            final List<RAttr> allAttributes = role.findLastInheritedAncestorAttributes();\n+\n+            final List<RDerAttr> allDerAttributes = role.findLastInheritedAncestorDerivedAttributes();\n+\n+            final List<RVirAttr> allVirAttributes = role.findLastInheritedAncestorVirtualAttributes();\n+            // -------------------------\n+\n+            fillTO(roleTO, allAttributes, allDerAttributes, allVirAttributes, role.getResources());\n+\n+            for (Entitlement entitlement : role.getEntitlements()) {\n+                roleTO.getEntitlements().add(entitlement.getName());\n+            }\n+\n+            for (RAttrTemplate template : role.findInheritedTemplates(RAttrTemplate.class)) {\n+                roleTO.getRAttrTemplates().add(template.getSchema().getName());\n+            }\n+            for (RDerAttrTemplate template : role.findInheritedTemplates(RDerAttrTemplate.class)) {\n+                roleTO.getRDerAttrTemplates().add(template.getSchema().getName());\n+            }\n+            for (RVirAttrTemplate template : role.findInheritedTemplates(RVirAttrTemplate.class)) {\n+                roleTO.getRVirAttrTemplates().add(template.getSchema().getName());\n+            }\n+            for (MAttrTemplate template : role.findInheritedTemplates(MAttrTemplate.class)) {\n+                roleTO.getMAttrTemplates().add(template.getSchema().getName());\n+            }\n+            for (MDerAttrTemplate template : role.findInheritedTemplates(MDerAttrTemplate.class)) {\n+                roleTO.getMDerAttrTemplates().add(template.getSchema().getName());\n+            }\n+            for (MVirAttrTemplate template : role.findInheritedTemplates(MVirAttrTemplate.class)) {\n+                roleTO.getMVirAttrTemplates().add(template.getSchema().getName());\n+            }\n+        }\n+\n         return roleTO;\n     }\n \n     @Transactional(readOnly = true)\n     public RoleTO getRoleTO(final Long roleId) {\n-        return getRoleTO(getRoleFromId(roleId));\n+        return getRoleTO(getRoleFromId(roleId), true);\n     }\n }"},{"sha":"3ac56fcd2a7d175e8b95131095442ece9d92158f","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":28,"deletions":23,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -163,7 +163,7 @@ public UserTO getAuthenticatedUserTO() {\n             authUserTO.setUsername(adminUser);\n         } else {\n             SyncopeUser authUser = userDAO.find(authUsername);\n-            authUserTO = getUserTO(authUser);\n+            authUserTO = getUserTO(authUser, true);\n         }\n \n         return authUserTO;\n@@ -327,7 +327,7 @@ public PropagationByResource update(final SyncopeUser toBeUpdated, final UserMod\n                 // of the user object currently in memory (which has potentially\n                 // some modifications compared to the one stored in the DB\n                 membership = user.getMembership(membership.getSyncopeRole().getId());\n-                if (membershipToBeAddedRoleIds.contains(membership.getSyncopeRole().getId())) {\n+                if (membership != null && membershipToBeAddedRoleIds.contains(membership.getSyncopeRole().getId())) {\n                     Set<Long> attributeIds = new HashSet<Long>(membership.getAttrs().size());\n                     for (AbstractAttr attribute : membership.getAttrs()) {\n                         attributeIds.add(attribute.getId());\n@@ -413,7 +413,7 @@ public PropagationByResource update(final SyncopeUser toBeUpdated, final UserMod\n     }\n \n     @Transactional(readOnly = true)\n-    public UserTO getUserTO(final SyncopeUser user) {\n+    public UserTO getUserTO(final SyncopeUser user, final boolean details) {\n         UserTO userTO = new UserTO();\n \n         BeanUtils.copyProperties(user, userTO, IGNORE_USER_PROPERTIES);\n@@ -422,44 +422,49 @@ public UserTO getUserTO(final SyncopeUser user) {\n             userTO.setSecurityQuestion(user.getSecurityQuestion().getId());\n         }\n \n-        connObjectUtil.retrieveVirAttrValues(user, AttributableUtil.getInstance(AttributableType.USER));\n+        if (details) {\n+            connObjectUtil.retrieveVirAttrValues(user, AttributableUtil.getInstance(AttributableType.USER));\n+        }\n+\n         fillTO(userTO, user.getAttrs(), user.getDerAttrs(), user.getVirAttrs(), user.getResources());\n \n-        MembershipTO membershipTO;\n-        for (Membership membership : user.getMemberships()) {\n-            membershipTO = new MembershipTO();\n+        if (details) {\n+            for (Membership membership : user.getMemberships()) {\n+                MembershipTO membershipTO = new MembershipTO();\n \n-            // set sys info\n-            membershipTO.setCreator(membership.getCreator());\n-            membershipTO.setCreationDate(membership.getCreationDate());\n-            membershipTO.setLastModifier(membership.getLastModifier());\n-            membershipTO.setLastChangeDate(membership.getLastChangeDate());\n+                // set sys info\n+                membershipTO.setCreator(membership.getCreator());\n+                membershipTO.setCreationDate(membership.getCreationDate());\n+                membershipTO.setLastModifier(membership.getLastModifier());\n+                membershipTO.setLastChangeDate(membership.getLastChangeDate());\n \n-            membershipTO.setId(membership.getId());\n-            membershipTO.setRoleId(membership.getSyncopeRole().getId());\n-            membershipTO.setRoleName(membership.getSyncopeRole().getName());\n+                membershipTO.setId(membership.getId());\n+                membershipTO.setRoleId(membership.getSyncopeRole().getId());\n+                membershipTO.setRoleName(membership.getSyncopeRole().getName());\n \n-            // SYNCOPE-458 retrieve also membership virtual attributes\n-            connObjectUtil.retrieveVirAttrValues(membership, AttributableUtil.getInstance(AttributableType.MEMBERSHIP));\n+                // SYNCOPE-458 retrieve also membership virtual attributes\n+                connObjectUtil.retrieveVirAttrValues(membership, AttributableUtil.getInstance(\n+                        AttributableType.MEMBERSHIP));\n \n-            fillTO(membershipTO,\n-                    membership.getAttrs(), membership.getDerAttrs(), membership.getVirAttrs(),\n-                    Collections.<ExternalResource>emptyList());\n+                fillTO(membershipTO,\n+                        membership.getAttrs(), membership.getDerAttrs(), membership.getVirAttrs(),\n+                        Collections.<ExternalResource>emptyList());\n \n-            userTO.getMemberships().add(membershipTO);\n+                userTO.getMemberships().add(membershipTO);\n+            }\n         }\n \n         return userTO;\n     }\n \n     @Transactional(readOnly = true)\n     public UserTO getUserTO(final String username) {\n-        return getUserTO(getUserFromUsername(username));\n+        return getUserTO(getUserFromUsername(username), true);\n     }\n \n     @Transactional(readOnly = true)\n     public UserTO getUserTO(final Long userId) {\n-        return getUserTO(getUserFromId(userId));\n+        return getUserTO(getUserFromId(userId), true);\n     }\n \n     /**"},{"sha":"04d48ea5fcc14a8519dd5aed349dd64f955d3c05","filename":"core/src/main/java/org/apache/syncope/core/services/RoleServiceImpl.java","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -67,23 +67,25 @@ public Response delete(final Long roleId) {\n \n     @Override\n     public PagedResult<RoleTO> list() {\n-        return list(DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, null);\n+        return list(DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, null, true);\n     }\n \n     @Override\n     public PagedResult<RoleTO> list(final String orderBy) {\n-        return list(DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, orderBy);\n+        return list(DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, orderBy, true);\n     }\n \n     @Override\n     public PagedResult<RoleTO> list(final Integer page, final Integer size) {\n-        return list(page, size, null);\n+        return list(page, size, null, true);\n     }\n \n     @Override\n-    public PagedResult<RoleTO> list(final Integer page, final Integer size, final String orderBy) {\n+    public PagedResult<RoleTO> list(\n+            final Integer page, final Integer size, final String orderBy, final boolean details) {\n+\n         List<OrderByClause> orderByClauses = getOrderByClauses(orderBy);\n-        return buildPagedResult(controller.list(page, size, orderByClauses), page, size, controller.count());\n+        return buildPagedResult(controller.list(page, size, orderByClauses, details), page, size, controller.count());\n     }\n \n     @Override\n@@ -98,25 +100,27 @@ public RoleTO read(final Long roleId) {\n \n     @Override\n     public PagedResult<RoleTO> search(final String fiql) {\n-        return search(fiql, DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, null);\n+        return search(fiql, DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, null, true);\n     }\n \n     @Override\n     public PagedResult<RoleTO> search(final String fiql, final String orderBy) {\n-        return search(fiql, DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, orderBy);\n+        return search(fiql, DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, orderBy, true);\n     }\n \n     @Override\n     public PagedResult<RoleTO> search(final String fiql, final Integer page, final Integer size) {\n-        return search(fiql, page, size, null);\n+        return search(fiql, page, size, null, true);\n     }\n \n     @Override\n-    public PagedResult<RoleTO> search(final String fiql, final Integer page, final Integer size, final String orderBy) {\n+    public PagedResult<RoleTO> search(\n+            final String fiql, final Integer page, final Integer size, final String orderBy, final boolean details) {\n+\n         SearchCond cond = getSearchCond(fiql);\n         List<OrderByClause> orderByClauses = getOrderByClauses(orderBy);\n         return buildPagedResult(\n-                controller.search(cond, page, size, orderByClauses), page, size, controller.searchCount(cond));\n+                controller.search(cond, page, size, orderByClauses, details), page, size, controller.searchCount(cond));\n     }\n \n     @Override"},{"sha":"7cd2ad7b8b685b27e0b401fdfb1ee12a256c6021","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -79,23 +79,25 @@ public Response delete(final Long userId) {\n \n     @Override\n     public PagedResult<UserTO> list() {\n-        return list(DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, null);\n+        return list(DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, null, true);\n     }\n \n     @Override\n     public PagedResult<UserTO> list(final String orderBy) {\n-        return list(DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, orderBy);\n+        return list(DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, orderBy, true);\n     }\n \n     @Override\n     public PagedResult<UserTO> list(final Integer page, final Integer size) {\n-        return list(page, size, null);\n+        return list(page, size, null, true);\n     }\n \n     @Override\n-    public PagedResult<UserTO> list(final Integer page, final Integer size, final String orderBy) {\n+    public PagedResult<UserTO> list(\n+            final Integer page, final Integer size, final String orderBy, final boolean details) {\n+\n         List<OrderByClause> orderByClauses = getOrderByClauses(orderBy);\n-        return buildPagedResult(controller.list(page, size, orderByClauses), page, size, controller.count());\n+        return buildPagedResult(controller.list(page, size, orderByClauses, details), page, size, controller.count());\n     }\n \n     @Override\n@@ -105,25 +107,27 @@ public UserTO read(final Long userId) {\n \n     @Override\n     public PagedResult<UserTO> search(final String fiql) {\n-        return search(fiql, DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, null);\n+        return search(fiql, DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, null, true);\n     }\n \n     @Override\n     public PagedResult<UserTO> search(final String fiql, final String orderBy) {\n-        return search(fiql, DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, orderBy);\n+        return search(fiql, DEFAULT_PARAM_PAGE_VALUE, DEFAULT_PARAM_SIZE_VALUE, orderBy, true);\n     }\n \n     @Override\n     public PagedResult<UserTO> search(final String fiql, final Integer page, final Integer size) {\n-        return search(fiql, page, size, null);\n+        return search(fiql, page, size, null, true);\n     }\n \n     @Override\n-    public PagedResult<UserTO> search(final String fiql, final Integer page, final Integer size, final String orderBy) {\n+    public PagedResult<UserTO> search(\n+            final String fiql, final Integer page, final Integer size, final String orderBy, final boolean details) {\n+\n         SearchCond cond = getSearchCond(fiql);\n         List<OrderByClause> orderByClauses = getOrderByClauses(orderBy);\n         return buildPagedResult(\n-                controller.search(cond, page, size, orderByClauses), page, size, controller.searchCount(cond));\n+                controller.search(cond, page, size, orderByClauses, details), page, size, controller.searchCount(cond));\n     }\n \n     @Override"},{"sha":"a6586b4e505b0813504456d1b312e17df7b6ca2a","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/RolePushResultHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRolePushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRolePushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRolePushResultHandler.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -46,7 +46,7 @@ protected AttributableUtil getAttributableUtil() {\n \n     @Override\n     protected AbstractSubject deprovision(final AbstractSubject sbj) {\n-        final RoleTO before = roleDataBinder.getRoleTO(SyncopeRole.class.cast(sbj));\n+        final RoleTO before = roleDataBinder.getRoleTO(SyncopeRole.class.cast(sbj), true);\n \n         final List<String> noPropResources = new ArrayList<String>(before.getResources());\n         noPropResources.remove(profile.getSyncTask().getResource().getName());\n@@ -58,7 +58,7 @@ protected AbstractSubject deprovision(final AbstractSubject sbj) {\n \n     @Override\n     protected AbstractSubject provision(final AbstractSubject sbj, final Boolean enabled) {\n-        final RoleTO before = roleDataBinder.getRoleTO(SyncopeRole.class.cast(sbj));\n+        final RoleTO before = roleDataBinder.getRoleTO(SyncopeRole.class.cast(sbj), true);\n \n         final List<String> noPropResources = new ArrayList<String>(before.getResources());\n         noPropResources.remove(profile.getSyncTask().getResource().getName());"},{"sha":"2873c6786d29d958d4021bf6c87e12f32a9c839a","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -393,7 +393,7 @@ protected WorkflowResult<Long> doReactivate(final SyncopeUser user) throws Workf\n     @Override\n     protected void doRequestPasswordReset(final SyncopeUser user) throws WorkflowException {\n         Map<String, Object> variables = new HashMap<String, Object>(2);\n-        variables.put(USER_TO, userDataBinder.getUserTO(user));\n+        variables.put(USER_TO, userDataBinder.getUserTO(user, true));\n         variables.put(EVENT, \"requestPasswordReset\");\n \n         doExecuteTask(user, \"requestPasswordReset\", variables);\n@@ -407,7 +407,7 @@ protected void doConfirmPasswordReset(final SyncopeUser user, final String token\n         Map<String, Object> variables = new HashMap<String, Object>(4);\n         variables.put(TOKEN, token);\n         variables.put(PASSWORD, password);\n-        variables.put(USER_TO, userDataBinder.getUserTO(user));\n+        variables.put(USER_TO, userDataBinder.getUserTO(user, true));\n         variables.put(EVENT, \"confirmPasswordReset\");\n \n         doExecuteTask(user, \"confirmPasswordReset\", variables);"},{"sha":"ff308d68e65b6edb7dec1788bb8ef096c8d8a24e","filename":"core/src/main/resources/indexes.xml","status":"modified","additions":27,"deletions":1,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2612337228f1fbd3818f61c4dd3371b7bf1d37fb/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=2612337228f1fbd3818f61c4dd3371b7bf1d37fb","patch":"@@ -26,16 +26,42 @@ under the License.\n   <entry key=\"UAttrValue_longvalueIndex\">CREATE INDEX UAttrValue_longvalueIndex ON UAttrValue(longvalue)</entry>\n   <entry key=\"UAttrValue_doublevalueIndex\">CREATE INDEX UAttrValue_doublevalueIndex ON UAttrValue(doublevalue)</entry>\n   <entry key=\"UAttrValue_booleanvalueIndex\">CREATE INDEX UAttrValue_booleanvalueIndex ON UAttrValue(booleanvalue)</entry>\n+\n   <entry key=\"MAttrValue_stringvalueIndex\">CREATE INDEX MAttrValue_stringvalueIndex ON MAttrValue(stringvalue)</entry>\n   <entry key=\"MAttrValue_datevalueIndex\">CREATE INDEX MAttrValue_datevalueIndex ON MAttrValue(datevalue)</entry>\n   <entry key=\"MAttrValue_longvalueIndex\">CREATE INDEX MAttrValue_longvalueIndex ON MAttrValue(longvalue)</entry>\n   <entry key=\"MAttrValue_doublevalueIndex\">CREATE INDEX MAttrValue_doublevalueIndex ON MAttrValue(doublevalue)</entry>\n   <entry key=\"MAttrValue_booleanvalueIndex\">CREATE INDEX MAttrValue_booleanvalueIndex ON MAttrValue(booleanvalue)</entry>\n+\n   <entry key=\"RAttrValue_stringvalueIndex\">CREATE INDEX RAttrValue_stringvalueIndex ON RAttrValue(stringvalue)</entry>\n   <entry key=\"RAttrValue_datevalueIndex\">CREATE INDEX RAttrValue_datevalueIndex ON RAttrValue(datevalue)</entry>\n   <entry key=\"RAttrValue_longvalueIndex\">CREATE INDEX RAttrValue_longvalueIndex ON RAttrValue(longvalue)</entry>\n   <entry key=\"RAttrValue_doublevalueIndex\">CREATE INDEX RAttrValue_doublevalueIndex ON RAttrValue(doublevalue)</entry>\n   <entry key=\"RAttrValue_booleanvalueIndex\">CREATE INDEX RAttrValue_booleanvalueIndex ON RAttrValue(booleanvalue)</entry>\n+\n+  <entry key=\"Membership_syncopeRoleIndex\">CREATE INDEX Membership_syncopeRoleIndex ON Membership(syncopeRole_id)</entry>\n+  <entry key=\"Membership_syncopeUserIndex\">CREATE INDEX Membership_syncopeUserIndex ON Membership(syncopeUser_id)</entry>\n+\n+  <entry key=\"RAttrValue_attributeIdIndex\">CREATE INDEX RAttrValue_attribute_idIndex on RAttrValue(attribute_id)</entry>\n+  <entry key=\"UAttrValue_attributeIdIndex\">CREATE INDEX UAttrValue_attribute_idIndex on UAttrValue(attribute_id)</entry>\n+  <entry key=\"MAttrValue_attributeIdIndex\">CREATE INDEX MAttrValue_attribute_idIndex on MAttrValue(attribute_id)</entry>\n+  <entry key=\"CAttrValue_attributeIdIndex\">CREATE INDEX CAttrValue_attribute_idIndex on CAttrValue(attribute_id)</entry>\n+\n+  <entry key=\"RAttr_templateIdIndex\">CREATE INDEX RAttr_template_idIndex on RAttr(template_id)</entry>\n+  <entry key=\"MAttr_templateIdIndex\">CREATE INDEX MAttr_template_idIndex on MAttr(template_id)</entry>\n+  <entry key=\"RAttr_owner_id_index\">CREATE INDEX RAttr_owner_id_index on RAttr(owner_id)</entry>\n+  <entry key=\"UAttr_owner_id_index\">CREATE INDEX UAttr_owner_id_index on UAttr(owner_id)</entry>\n+  <entry key=\"MAttr_owner_id_index\">CREATE INDEX MAttr_owner_id_index on MAttr(owner_id)</entry>\n+\n+  <entry key=\"RDerAttr_owner_id_index\">CREATE INDEX RDerAttr_owner_id_index on RDerAttr(owner_id)</entry>\n+  <entry key=\"UDerAttr_owner_id_index\">CREATE INDEX UDerAttr_owner_id_index on UDerAttr(owner_id)</entry>\n+  <entry key=\"MDerAttr_owner_id_index\">CREATE INDEX MDerAttr_owner_id_index on MDerAttr(owner_id)</entry>\n+\n+  <entry key=\"RVirAttr_owner_id_index\">CREATE INDEX RVirAttr_owner_id_index on RVirAttr(owner_id)</entry>\n+  <entry key=\"UVirAttr_owner_id_index\">CREATE INDEX UVirAttr_owner_id_index on UVirAttr(owner_id)</entry>\n+  <entry key=\"MVirAttr_owner_id_index\">CREATE INDEX MVirAttr_owner_id_index on MVirAttr(owner_id)</entry>\n+\n   <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n+\n   <entry key=\"ACT_RU_TASK_PARENT_TASK_ID_\">CREATE INDEX ACT_RU_TASK_PARENT_TASK_ID_ ON ACT_RU_TASK(PARENT_TASK_ID_)</entry>\n-</properties>\n+</properties>\n\\ No newline at end of file"}]}