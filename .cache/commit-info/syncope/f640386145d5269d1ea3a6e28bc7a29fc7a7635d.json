{"sha":"f640386145d5269d1ea3a6e28bc7a29fc7a7635d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY2NDAzODYxNDVkNTI2OWQxZWEzYTZlMjhiYzdhMjlmYzdhNzYzNWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-26T11:50:58Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-26T11:53:58Z"},"message":"[SYNCOPE-1531] More robust handling in case value for key column is missing","tree":{"sha":"a42c11cec3fc47bd43b22627fc3a3cf1d5cd5f9c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a42c11cec3fc47bd43b22627fc3a3cf1d5cd5f9c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f640386145d5269d1ea3a6e28bc7a29fc7a7635d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f640386145d5269d1ea3a6e28bc7a29fc7a7635d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f640386145d5269d1ea3a6e28bc7a29fc7a7635d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f640386145d5269d1ea3a6e28bc7a29fc7a7635d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c33666e9e3e5e2864f35686e4e6699c0310e5902","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c33666e9e3e5e2864f35686e4e6699c0310e5902","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c33666e9e3e5e2864f35686e4e6699c0310e5902"}],"stats":{"total":22,"additions":16,"deletions":6},"files":[{"sha":"8d70ceacae5ce7122a966662d55c95eaf47cf65d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/stream/CSVStreamConnector.java","status":"modified","additions":16,"deletions":6,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f640386145d5269d1ea3a6e28bc7a29fc7a7635d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FCSVStreamConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f640386145d5269d1ea3a6e28bc7a29fc7a7635d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FCSVStreamConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FCSVStreamConnector.java?ref=f640386145d5269d1ea3a6e28bc7a29fc7a7635d","patch":"@@ -245,20 +245,30 @@ public SearchResult search(\n         SearchResult result = new SearchResult();\n \n         try {\n-            while (reader().hasNext()) {\n+            for (int record = 1; reader().hasNext(); record++) {\n                 Map<String, String> row = reader().next();\n \n-                ConnectorObjectBuilder builder = new ConnectorObjectBuilder();\n-                builder.setObjectClass(objectClass);\n-                builder.setUid(row.get(keyColumn));\n-                builder.setName(row.get(keyColumn));\n+                String keyValue = row.get(keyColumn);\n+                if (StringUtils.isBlank(keyValue)) {\n+                    keyValue = \"Record \" + record;\n+                }\n+\n+                ConnectorObjectBuilder builder = new ConnectorObjectBuilder().\n+                        setObjectClass(objectClass).\n+                        setUid(keyValue).\n+                        setName(keyValue);\n \n                 row.forEach((key, value) -> builder.addAttribute(arrayElementsSeparator == null\n                         ? AttributeBuilder.build(key, value)\n                         : AttributeBuilder.build(key,\n                                 (Object[]) StringUtils.splitByWholeSeparator(value, arrayElementsSeparator))));\n \n-                handler.handle(builder.build());\n+                ConnectorObject obj = builder.build();\n+                if (filter == null || filter.accept(obj)) {\n+                    handler.handle(obj);\n+                } else {\n+                    LOG.debug(\"Found but not passing the provided filter {}: {}\", filter, obj);\n+                }\n             }\n         } catch (IOException e) {\n             LOG.error(\"Could not read CSV from provided stream\", e);"}]}