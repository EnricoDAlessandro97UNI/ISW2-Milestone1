{"sha":"0ce8570bfdde601433765a7935d7235ed5a3d835","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBjZTg1NzBiZmRkZTYwMTQzMzc2NWE3OTM1ZDcyMzVlZDVhM2Q4MzU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-04-06T18:05:21Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-04-06T18:05:21Z"},"message":"Fixes issue 72\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246844 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d1091654c7b13b90b9e7724dcaf17a3a6cdd3e6d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d1091654c7b13b90b9e7724dcaf17a3a6cdd3e6d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0ce8570bfdde601433765a7935d7235ed5a3d835","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0ce8570bfdde601433765a7935d7235ed5a3d835","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0ce8570bfdde601433765a7935d7235ed5a3d835","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0ce8570bfdde601433765a7935d7235ed5a3d835/comments","author":null,"committer":null,"parents":[{"sha":"26e9a4e5d005c9bc114d7947c4b32cac2a494690","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/26e9a4e5d005c9bc114d7947c4b32cac2a494690","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/26e9a4e5d005c9bc114d7947c4b32cac2a494690"}],"stats":{"total":1303,"additions":707,"deletions":596},"files":[{"sha":"47711e882fa48fe24105953179cdfdb5f9bb65c0","filename":"client/src/main/java/org/syncope/client/to/ConnBundleTO.java","status":"renamed","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnBundleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnBundleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnBundleTO.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -14,11 +14,12 @@\n  */\n package org.syncope.client.to;\n \n+import org.syncope.types.ConnConfPropSchema;\n import java.util.ArrayList;\n import java.util.List;\n import org.syncope.client.AbstractBaseBean;\n \n-public class ConnectorBundleTO extends AbstractBaseBean {\n+public class ConnBundleTO extends AbstractBaseBean {\n \n     private String displayName;\n \n@@ -28,7 +29,11 @@ public class ConnectorBundleTO extends AbstractBaseBean {\n \n     private String connectorName;\n \n-    private List<String> properties;\n+    private List<ConnConfPropSchema> properties;\n+\n+    public ConnBundleTO() {\n+        properties = new ArrayList<ConnConfPropSchema>();\n+    }\n \n     public String getBundleName() {\n         return bundleName;\n@@ -54,23 +59,20 @@ public void setDisplayName(String displayName) {\n         this.displayName = displayName;\n     }\n \n-    public List<String> getProperties() {\n-        if (this.properties == null) this.properties = new ArrayList<String>();\n+    public List<ConnConfPropSchema> getProperties() {\n         return properties;\n     }\n \n-    public void setProperties(List<String> properties) {\n+    public void setProperties(List<ConnConfPropSchema> properties) {\n         this.properties = properties;\n     }\n \n-    public boolean addProperty(String property) {\n-        if (this.properties == null) this.properties = new ArrayList<String>();\n-        return this.properties.add(property);\n+    public boolean addProperty(ConnConfPropSchema property) {\n+        return properties.add(property);\n     }\n \n-    public boolean removeProperty(String property) {\n-        if (this.properties == null) return true;\n-        return this.properties.remove(property);\n+    public boolean removeProperty(ConnConfPropSchema property) {\n+        return properties.remove(property);\n     }\n \n     public String getVersion() {","previous_filename":"client/src/main/java/org/syncope/client/to/ConnectorBundleTO.java"},{"sha":"829cd3d3d85b1af6828b60a0d46882182d5e753d","filename":"client/src/main/java/org/syncope/client/to/ConnInstanceTO.java","status":"renamed","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -14,13 +14,14 @@\n  */\n package org.syncope.client.to;\n \n+import org.syncope.types.ConnConfProperty;\n import java.util.EnumSet;\n import java.util.HashSet;\n import java.util.Set;\n import org.syncope.client.AbstractBaseBean;\n import org.syncope.types.ConnectorCapability;\n \n-public class ConnectorInstanceTO extends AbstractBaseBean {\n+public class ConnInstanceTO extends AbstractBaseBean {\n \n     private Long id;\n \n@@ -30,14 +31,14 @@ public class ConnectorInstanceTO extends AbstractBaseBean {\n \n     private String connectorName;\n \n-    private Set<PropertyTO> configuration;\n+    private Set<ConnConfProperty> configuration;\n \n     private Set<ConnectorCapability> capabilities;\n \n     private String displayName;\n \n-    public ConnectorInstanceTO() {\n-        configuration = new HashSet<PropertyTO>();\n+    public ConnInstanceTO() {\n+        configuration = new HashSet<ConnConfProperty>();\n         capabilities = EnumSet.noneOf(ConnectorCapability.class);\n     }\n \n@@ -65,19 +66,19 @@ public void setVersion(String bundleversion) {\n         this.version = bundleversion;\n     }\n \n-    public Set<PropertyTO> getConfiguration() {\n+    public Set<ConnConfProperty> getConfiguration() {\n         return this.configuration;\n     }\n \n-    public boolean addConfiguration(PropertyTO property) {\n+    public boolean addConfiguration(ConnConfProperty property) {\n         return this.configuration.add(property);\n     }\n \n-    public boolean removeConfiguration(PropertyTO property) {\n+    public boolean removeConfiguration(ConnConfProperty property) {\n         return this.configuration.remove(property);\n     }\n \n-    public void setConfiguration(Set<PropertyTO> configuration) {\n+    public void setConfiguration(Set<ConnConfProperty> configuration) {\n         if (configuration == null || configuration.isEmpty()) {\n             this.configuration.clear();\n         } else {\n@@ -105,7 +106,7 @@ public Set<ConnectorCapability> getCapabilities() {\n         return capabilities;\n     }\n \n-    public void setCapabilities(Set<ConnectorCapability> capabilities) {\n+    public void setCapabilities(final Set<ConnectorCapability> capabilities) {\n         this.capabilities.clear();\n         if (capabilities != null && !capabilities.isEmpty()) {\n             this.capabilities.addAll(capabilities);","previous_filename":"client/src/main/java/org/syncope/client/to/ConnectorInstanceTO.java"},{"sha":"9154518f68f19d6a385ec5c8e737ab3a6dfe17fc","filename":"client/src/main/java/org/syncope/types/ConnConfPropSchema.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfPropSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfPropSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfPropSchema.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -0,0 +1,50 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.types;\n+\n+import org.syncope.client.AbstractBaseBean;\n+\n+public class ConnConfPropSchema extends AbstractBaseBean {\n+\n+    private String name;\n+\n+    private String type;\n+\n+    private boolean required;\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public boolean isRequired() {\n+        return required;\n+    }\n+\n+    public void setRequired(boolean required) {\n+        this.required = required;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(String type) {\n+        this.type = type;\n+    }\n+}"},{"sha":"d1247c5b65bf699d730aac6d378e52efea748edf","filename":"client/src/main/java/org/syncope/types/ConnConfProperty.java","status":"renamed","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -2,38 +2,39 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.client.to;\n+package org.syncope.types;\n \n import org.syncope.client.AbstractBaseBean;\n \n-public class PropertyTO extends AbstractBaseBean {\n+public class ConnConfProperty extends AbstractBaseBean {\n \n-    private String key;\n-    private Object value;\n+    private ConnConfPropSchema schema;\n \n-    public String getKey() {\n-        return key;\n+    private String value;\n+\n+    public ConnConfPropSchema getSchema() {\n+        return schema;\n     }\n \n-    public void setKey(String key) {\n-        this.key = key;\n+    public void setSchema(ConnConfPropSchema schema) {\n+        this.schema = schema;\n     }\n \n-    public Object getValue() {\n+    public String getValue() {\n         return value;\n     }\n \n-    public void setValue(Object value) {\n+    public void setValue(String value) {\n         this.value = value;\n     }\n }","previous_filename":"client/src/main/java/org/syncope/client/to/PropertyTO.java"},{"sha":"ebe87bc620a98061043651a52f186037f2a3d7c0","filename":"console/src/main/java/org/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":127,"deletions":188,"changes":315,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -18,10 +18,9 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Collection;\n+import java.util.EnumSet;\n import java.util.HashSet;\n import java.util.List;\n-import java.util.Set;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -37,95 +36,99 @@\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.syncope.client.to.ConnectorBundleTO;\n-import org.syncope.client.to.ConnectorInstanceTO;\n-import org.syncope.client.to.PropertyTO;\n+import org.syncope.client.to.ConnBundleTO;\n+import org.syncope.client.to.ConnInstanceTO;\n+import org.syncope.types.ConnConfProperty;\n import org.syncope.console.rest.ConnectorRestClient;\n+import org.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.types.ConnConfPropSchema;\n import org.syncope.types.ConnectorCapability;\n \n /**\n  * Modal window with Connector form.\n  */\n public class ConnectorModalPage extends BaseModalPage {\n \n+    @SpringBean\n+    private ConnectorRestClient restClient;\n+\n     private TextField connectorName;\n \n     private TextField displayName;\n \n-    private DropDownChoice bundle;\n+    private DropDownChoice<ConnBundleTO> bundle;\n \n     private TextField version;\n \n     private CheckBoxMultipleChoice capabilitiesPalette;\n \n-    private List<ConnectorBundleTO> bundlesTOs;\n-\n-    private ConnectorBundleTO selectedBundleTO = new ConnectorBundleTO();\n-\n-    private List<PropertyTO> connectorProperties = new ArrayList<PropertyTO>();\n+    private ConnBundleTO selectedBundleTO = new ConnBundleTO();\n \n     private AjaxButton submit;\n \n-    @SpringBean\n-    private ConnectorRestClient restClient;\n-\n-    //WebMarkupContainer container;\n     private WebMarkupContainer propertiesContainer;\n \n-    private List<ConnectorCapability> selections;\n+    private List<ConnectorCapability> selectedCapabilities;\n \n-    public ConnectorModalPage(final BasePage basePage,\n+    public ConnectorModalPage(final Connectors basePage,\n             final ModalWindow window,\n-            final ConnectorInstanceTO connectorTO,\n+            final ConnInstanceTO connectorTO,\n             final boolean createFlag) {\n \n-        Form connectorForm = new Form(\"ConnectorForm\");\n-\n-        connectorForm.setModel(new CompoundPropertyModel(connectorTO));\n-\n-        if (!createFlag) {\n-            setupSelections(connectorTO);\n-        }\n-\n-        IModel bundles = new LoadableDetachableModel() {\n-\n-            protected Object load() {\n-                return restClient.getAllBundles();\n-            }\n-        };\n-\n-        IModel selectedBundleProperties = new LoadableDetachableModel() {\n-\n-            protected Object load() {\n-                List<PropertyTO> list;\n+        final IModel<List<ConnBundleTO>> bundles =\n+                new LoadableDetachableModel<List<ConnBundleTO>>() {\n \n-                if (createFlag) {\n-                    connectorTO.setConnectorName(selectedBundleTO.\n-                            getConnectorName());\n-                    connectorTO.setVersion(selectedBundleTO.getVersion());\n-\n-                    list = new ArrayList<PropertyTO>();\n-                    PropertyTO propertyTO;\n-\n-                    for (String key : selectedBundleTO.getProperties()) {\n-                        propertyTO = new PropertyTO();\n-                        propertyTO.setKey(key);\n-\n-                        list.add(propertyTO);\n+                    @Override\n+                    protected List<ConnBundleTO> load() {\n+                        return restClient.getAllBundles();\n                     }\n-                } else {\n-                    selectedBundleTO.setBundleName(connectorTO.getBundleName());\n-                    list = hashSetToList(connectorTO.getConfiguration());\n-                }\n-                return list;\n-            }\n-        };\n+                };\n+\n+        selectedCapabilities = new ArrayList(createFlag\n+                ? EnumSet.noneOf(ConnectorCapability.class)\n+                : connectorTO.getCapabilities());\n+\n+        IModel<List<ConnConfProperty>> selectedBundleProperties =\n+                new LoadableDetachableModel<List<ConnConfProperty>>() {\n+\n+                    @Override\n+                    protected List<ConnConfProperty> load() {\n+                        List<ConnConfProperty> result;\n+\n+                        if (createFlag) {\n+                            connectorTO.setConnectorName(\n+                                    selectedBundleTO.getConnectorName());\n+                            connectorTO.setVersion(\n+                                    selectedBundleTO.getVersion());\n+\n+                            result = new ArrayList<ConnConfProperty>();\n+                            ConnConfProperty propertyTO;\n+\n+                            for (ConnConfPropSchema key :\n+                                    selectedBundleTO.getProperties()) {\n+\n+                                propertyTO = new ConnConfProperty();\n+                                propertyTO.setSchema(key);\n+\n+                                result.add(propertyTO);\n+                            }\n+                        } else {\n+                            selectedBundleTO.setBundleName(\n+                                    connectorTO.getBundleName());\n+                            result = new ArrayList(\n+                                    connectorTO.getConfiguration());\n+                        }\n+                        return result;\n+                    }\n+                };\n \n         connectorName = new TextField(\"connectorName\");\n         connectorName.setEnabled(false);\n@@ -138,30 +141,31 @@ protected Object load() {\n         version.setEnabled(false);\n         version.setOutputMarkupId(true);\n \n-        ChoiceRenderer renderer =\n-                new ChoiceRenderer(\"bundleName\", \"bundleName\");\n-        bundle = new DropDownChoice(\"bundle\", bundles, renderer);\n-\n-        bundle.setModel(new IModel() {\n+        bundle = new DropDownChoice<ConnBundleTO>(\"bundle\", bundles,\n+                new ChoiceRenderer<ConnBundleTO>(\"bundleName\", \"bundleName\"));\n+        bundle.setModel(new IModel<ConnBundleTO>() {\n \n-            public Object getObject() {\n+            @Override\n+            public ConnBundleTO getObject() {\n                 return selectedBundleTO;\n             }\n \n-            public void setObject(Object object) {\n-                selectedBundleTO = (ConnectorBundleTO) object;\n+            @Override\n+            public void setObject(final ConnBundleTO object) {\n+                selectedBundleTO = object;\n             }\n \n+            @Override\n             public void detach() {\n             }\n         });\n \n         bundle.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            protected void onUpdate(AjaxRequestTarget target) {\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n                 //reset all informations stored in connectorTO\n-\n-                connectorTO.setConfiguration(new HashSet<PropertyTO>());\n+                connectorTO.setConfiguration(new HashSet<ConnConfProperty>());\n \n                 target.addComponent(propertiesContainer);\n                 target.addComponent(connectorName);\n@@ -171,77 +175,90 @@ protected void onUpdate(AjaxRequestTarget target) {\n         bundle.setRequired(true);\n         bundle.setEnabled(createFlag);\n \n-        ListView propertiesView = (new ListView(\"connectorProperties\",\n-                selectedBundleProperties) {\n-\n-            PropertyTO propertyTO;\n+        ListView<ConnConfProperty> propView = new ListView<ConnConfProperty>(\n+                \"connectorProperties\", selectedBundleProperties) {\n \n             @Override\n-            protected void populateItem(ListItem item) {\n-                propertyTO = (PropertyTO) item.getDefaultModelObject();\n-\n-                item.add(new Label(\"key\", propertyTO.getKey()));\n-                item.add(\n-                        new TextField(\"value\", new PropertyModel(propertyTO,\n-                        \"value\")).setLabel(\n-                        new Model<String>(propertyTO.getKey())).setRequired(true));\n+            protected void populateItem(final ListItem<ConnConfProperty> item) {\n+                ConnConfProperty property = item.getModelObject();\n+\n+                item.add(new Label(\"connPropAttrSchema\",\n+                        property.getSchema().getName()));\n+\n+                Panel connPropAttrValue;\n+                if (property.getSchema().getType().\n+                        endsWith(\"GuardedString\")\n+                        || property.getSchema().getType().\n+                        endsWith(\"GuardedByteArray\")) {\n+\n+                    connPropAttrValue = new AjaxPasswordFieldPanel(\n+                            \"connPropAttrValue\", property.getSchema().getName(),\n+                            new PropertyModel<String>(property, \"value\"),\n+                            property.getSchema().isRequired());\n+                } else {\n+                    connPropAttrValue = new AjaxTextFieldPanel(\n+                            \"connPropAttrValue\", property.getSchema().getName(),\n+                            new PropertyModel<String>(property, \"value\"),\n+                            property.getSchema().isRequired());\n+                }\n+                item.add(connPropAttrValue);\n \n-                connectorTO.getConfiguration().add(propertyTO);\n+                connectorTO.getConfiguration().add(property);\n             }\n-        });\n+        };\n \n         propertiesContainer = new WebMarkupContainer(\"propertiesContainer\");\n         propertiesContainer.setOutputMarkupId(true);\n-        propertiesContainer.add(propertiesView);\n+        propertiesContainer.add(propView);\n \n+        Form connectorForm = new Form(\"ConnectorForm\");\n+        connectorForm.setModel(new CompoundPropertyModel(connectorTO));\n         connectorForm.add(propertiesContainer);\n \n         submit = new IndicatingAjaxButton(\"submit\", new Model(\n                 getString(\"submit\"))) {\n \n             @Override\n-            protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                ConnectorInstanceTO connector = (ConnectorInstanceTO) form.\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                ConnInstanceTO connector = (ConnInstanceTO) form.\n                         getDefaultModelObject();\n \n-                //Set the model object configuration's properties to connectorPropertiesMap reference\n+                // Set the model object configuration's properties to\n+                // connectorPropertiesMap reference\n                 connector.setBundleName(bundle.getModelValue());\n-                //Set the model object's capabilites to capabilitiesPalette's converted Set\n-                connector.setCapabilities(getResourcesSet(selections));\n+                // Set the model object's capabilites to\n+                // capabilitiesPalette's converted Set\n+                connector.setCapabilities(\n+                        new HashSet<ConnectorCapability>(selectedCapabilities));\n \n                 try {\n-\n                     if (createFlag) {\n                         restClient.createConnector(connector);\n                     } else {\n                         restClient.updateConnector(connector);\n                     }\n \n-                    Connectors callerPage = (Connectors) basePage;\n-                    callerPage.setOperationResult(true);\n+                    basePage.setOperationResult(true);\n \n                     window.close(target);\n-\n                 } catch (Exception e) {\n                     error(getString(\"error\") + \":\" + e.getMessage());\n                 }\n             }\n \n             @Override\n-            protected void onError(AjaxRequestTarget target, Form form) {\n+            protected void onError(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n                 target.addComponent(feedbackPanel);\n             }\n         };\n \n-        String allowedRoles;\n-\n-        if (createFlag) {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Connectors\",\n-                    \"create\");\n-        } else {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Connectors\",\n-                    \"update\");\n-        }\n+        String allowedRoles = createFlag\n+                ? xmlRolesReader.getAllAllowedRoles(\"Connectors\", \"create\")\n+                : xmlRolesReader.getAllAllowedRoles(\"Connectors\", \"update\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n                 allowedRoles);\n@@ -251,99 +268,21 @@ protected void onError(AjaxRequestTarget target, Form form) {\n         connectorForm.add(bundle);\n         connectorForm.add(version);\n \n-        final IModel capabilities = new LoadableDetachableModel() {\n+        final IModel<List<ConnectorCapability>> capabilities =\n+                new LoadableDetachableModel<List<ConnectorCapability>>() {\n \n-            @Override\n-            protected Object load() {\n-                return Arrays.asList(ConnectorCapability.values());\n-            }\n-        };\n+                    @Override\n+                    protected List<ConnectorCapability> load() {\n+                        return Arrays.asList(ConnectorCapability.values());\n+                    }\n+                };\n \n         capabilitiesPalette = new CheckBoxMultipleChoice(\"capabilitiesPalette\",\n-                new PropertyModel(this, \"selections\"), capabilities);\n+                new PropertyModel(this, \"selectedCapabilities\"), capabilities);\n         connectorForm.add(capabilitiesPalette);\n \n         connectorForm.add(submit);\n \n         add(connectorForm);\n     }\n-\n-    /**\n-     * Setup capabilities.\n-     * @return void\n-     */\n-    public void setupSelections(ConnectorInstanceTO connectorTO) {\n-        selections = new ArrayList<ConnectorCapability>();\n-\n-        for (ConnectorCapability capability : connectorTO.getCapabilities()) {\n-            selections.add(capability);\n-        }\n-\n-    }\n-\n-    /**\n-     * Covert a capabilities List<ConnectorCapability> to Set<ConnectorCapability>.\n-     * @return Set<ConnectorCapability>\n-     */\n-    public Set<ConnectorCapability> getResourcesSet(\n-            Collection<ConnectorCapability> capabilitiesList) {\n-\n-        Set<ConnectorCapability> capabilitiesSet =\n-                new HashSet<ConnectorCapability>();\n-\n-        for (ConnectorCapability capability : capabilitiesList) {\n-            capabilitiesSet.add(capability);\n-        }\n-\n-        return capabilitiesSet;\n-    }\n-\n-    /**\n-     * Originals : connector's  capabilities\n-     * @param connectorTO\n-     * @return List<ConnectorCapability>\n-     */\n-    public List<ConnectorCapability> getSelectedCapabilities(\n-            ConnectorInstanceTO connectorTO) {\n-\n-        List<ConnectorCapability> capabilities =\n-                new ArrayList<ConnectorCapability>();\n-\n-        for (ConnectorCapability capability : connectorTO.getCapabilities()) {\n-            capabilities.add(capability);\n-        }\n-\n-        return capabilities;\n-    }\n-\n-    /**\n-     * Destinations : available capabilities\n-     * @param connectorTO\n-     * @return List<ConnectorCapability>\n-     */\n-    public List<ConnectorCapability> getAvailableCapabilities() {\n-\n-        List<ConnectorCapability> capabilities =\n-                new ArrayList<ConnectorCapability>();\n-\n-        capabilities = Arrays.asList(ConnectorCapability.values());\n-\n-        return capabilities;\n-    }\n-\n-    /**\n-     * Convert an HashSet<PropertyTO> object to a corresponding List<PropertyTO>\n-     * object.\n-     * @param hashset\n-     * @return\n-     */\n-    public List<PropertyTO> hashSetToList(Set<PropertyTO> set) {\n-        List<PropertyTO> list = new ArrayList<PropertyTO>();\n-\n-        for (PropertyTO propertyTO : set) {\n-            list.add(propertyTO);\n-        }\n-\n-        return list;\n-    }\n }"},{"sha":"2185796fc65f1eac13607abdd551e0bc3dd6d13d","filename":"console/src/main/java/org/syncope/console/pages/Connectors.java","status":"modified","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -41,7 +41,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.syncope.client.to.ConnectorInstanceTO;\n+import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n@@ -110,16 +110,16 @@ public Connectors(PageParameters parameters) {\n         columns.add(new PropertyColumn(new Model(getString(\"bundleName\")),\n                 \"bundleName\", \"bundleName\"));\n \n-        columns.add(new AbstractColumn<ConnectorInstanceTO>(new Model<String>(\n+        columns.add(new AbstractColumn<ConnInstanceTO>(new Model<String>(\n                 getString(\"edit\"))) {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<ConnectorInstanceTO>> cellItem,\n+                    final Item<ICellPopulator<ConnInstanceTO>> cellItem,\n                     final String componentId,\n-                    final IModel<ConnectorInstanceTO> model) {\n+                    final IModel<ConnInstanceTO> model) {\n \n-                final ConnectorInstanceTO connectorTO = model.getObject();\n+                final ConnInstanceTO connectorTO = model.getObject();\n \n                 final AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n@@ -153,16 +153,16 @@ public Page createPage() {\n             }\n         });\n \n-        columns.add(new AbstractColumn<ConnectorInstanceTO>(\n+        columns.add(new AbstractColumn<ConnInstanceTO>(\n                 new Model<String>(getString(\"delete\"))) {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<ConnectorInstanceTO>> cellItem,\n+                    final Item<ICellPopulator<ConnInstanceTO>> cellItem,\n                     final String componentId,\n-                    final IModel<ConnectorInstanceTO> model) {\n+                    final IModel<ConnInstanceTO> model) {\n \n-                final ConnectorInstanceTO connectorTO = model.getObject();\n+                final ConnInstanceTO connectorTO = model.getObject();\n \n                 AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n                         \"deleteLink\") {\n@@ -230,7 +230,7 @@ public void onClick(AjaxRequestTarget target) {\n                     public Page createPage() {\n                         ConnectorModalPage form = new ConnectorModalPage(\n                                 Connectors.this, editConnectorWin,\n-                                new ConnectorInstanceTO(), true);\n+                                new ConnInstanceTO(), true);\n                         return form;\n                     }\n                 });\n@@ -274,7 +274,7 @@ protected void onUpdate(AjaxRequestTarget target) {\n      * @param ConnectorInstanceTO object to check\n      * @return true if the action is forbidden, false otherwise\n      */\n-    public boolean checkDeleteIsForbidden(ConnectorInstanceTO connectorTO) {\n+    public boolean checkDeleteIsForbidden(ConnInstanceTO connectorTO) {\n \n         boolean forbidden = false;\n         List<ResourceTO> resources = resourceRestClient.getAllResources();\n@@ -318,21 +318,21 @@ public void setOperationResult(boolean operationResult) {\n         this.operationResult = operationResult;\n     }\n \n-    class ConnectorsProvider extends SortableDataProvider<ConnectorInstanceTO> {\n+    class ConnectorsProvider extends SortableDataProvider<ConnInstanceTO> {\n \n-        private SortableDataProviderComparator<ConnectorInstanceTO> comparator;\n+        private SortableDataProviderComparator<ConnInstanceTO> comparator;\n \n         public ConnectorsProvider() {\n             //Default sorting\n             setSort(\"id\", true);\n             comparator =\n-                    new SortableDataProviderComparator<ConnectorInstanceTO>(\n+                    new SortableDataProviderComparator<ConnInstanceTO>(\n                     this);\n         }\n \n         @Override\n-        public Iterator<ConnectorInstanceTO> iterator(int first, int count) {\n-            List<ConnectorInstanceTO> list = getConnectorsListDB();\n+        public Iterator<ConnInstanceTO> iterator(int first, int count) {\n+            List<ConnInstanceTO> list = getConnectorsListDB();\n \n             Collections.sort(list, comparator);\n \n@@ -345,19 +345,19 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<ConnectorInstanceTO> model(\n-                final ConnectorInstanceTO connector) {\n+        public IModel<ConnInstanceTO> model(\n+                final ConnInstanceTO connector) {\n \n-            return new AbstractReadOnlyModel<ConnectorInstanceTO>() {\n+            return new AbstractReadOnlyModel<ConnInstanceTO>() {\n \n                 @Override\n-                public ConnectorInstanceTO getObject() {\n+                public ConnInstanceTO getObject() {\n                     return connector;\n                 }\n             };\n         }\n \n-        public List<ConnectorInstanceTO> getConnectorsListDB() {\n+        public List<ConnInstanceTO> getConnectorsListDB() {\n             return restClient.getAllConnectors();\n         }\n     }"},{"sha":"b4a7c3ad038318c9be9d9752d2aa44c75a7829d7","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -47,7 +47,7 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.string.Strings;\n-import org.syncope.client.to.ConnectorInstanceTO;\n+import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.SchemaMappingTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n@@ -77,7 +77,7 @@ public class ResourceModalPage extends BaseModalPage {\n \n     private DropDownChoice<PropagationMode> optionalPropagationMode;\n \n-    private ConnectorInstanceTO connectorTO = new ConnectorInstanceTO();\n+    private ConnInstanceTO connectorTO = new ConnInstanceTO();\n \n     private ResourceTO resource;\n \n@@ -194,7 +194,7 @@ public Object getObject() {\n \n             @Override\n             public void setObject(Object object) {\n-                ConnectorInstanceTO connector = (ConnectorInstanceTO) object;\n+                ConnInstanceTO connector = (ConnInstanceTO) object;\n                 resourceTO.setConnectorId(connector.getId());\n             }\n "},{"sha":"d5c40d4e751870c62259453cd2013b8b1611c386","filename":"console/src/main/java/org/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -17,8 +17,8 @@\n import java.util.Arrays;\n import java.util.List;\n import org.springframework.stereotype.Component;\n-import org.syncope.client.to.ConnectorBundleTO;\n-import org.syncope.client.to.ConnectorInstanceTO;\n+import org.syncope.client.to.ConnBundleTO;\n+import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n@@ -31,12 +31,12 @@ public class ConnectorRestClient extends AbstractBaseRestClient {\n      * Get all connectors.\n      * @return ConnectorInstanceTOs\n      */\n-    public List<ConnectorInstanceTO> getAllConnectors() {\n-        List<ConnectorInstanceTO> connectors = null;\n+    public List<ConnInstanceTO> getAllConnectors() {\n+        List<ConnInstanceTO> connectors = null;\n \n         connectors = Arrays.asList(restTemplate.getForObject(\n                 baseURL + \"connector/list.json\",\n-                ConnectorInstanceTO[].class));\n+                ConnInstanceTO[].class));\n \n         return connectors;\n     }\n@@ -45,13 +45,13 @@ public List<ConnectorInstanceTO> getAllConnectors() {\n      * Create new connector.\n      * @param schemaTO\n      */\n-    public void createConnector(ConnectorInstanceTO connectorTO) {\n-        ConnectorInstanceTO actual = null;\n+    public void createConnector(ConnInstanceTO connectorTO) {\n+        ConnInstanceTO actual = null;\n \n         try {\n             actual = restTemplate.postForObject(baseURL\n                     + \"connector/create.json\", connectorTO,\n-                    ConnectorInstanceTO.class);\n+                    ConnInstanceTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While creating a connector\", e);\n         }\n@@ -62,13 +62,13 @@ public void createConnector(ConnectorInstanceTO connectorTO) {\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n-    public ConnectorInstanceTO readConnector(String name) {\n-        ConnectorInstanceTO schema = null;\n+    public ConnInstanceTO readConnector(String name) {\n+        ConnInstanceTO schema = null;\n \n         try {\n             schema = restTemplate.getForObject(\n                     baseURL + \"connector/read/\" + name + \".json\",\n-                    ConnectorInstanceTO.class);\n+                    ConnInstanceTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading a connector\", e);\n         }\n@@ -80,12 +80,12 @@ public ConnectorInstanceTO readConnector(String name) {\n      * Update an already existent connector.\n      * @param schemaTO updated\n      */\n-    public void updateConnector(ConnectorInstanceTO connectorTO) {\n+    public void updateConnector(ConnInstanceTO connectorTO) {\n         try {\n             restTemplate.postForObject(\n                     baseURL + \"connector/update.json\",\n                     connectorTO,\n-                    ConnectorInstanceTO.class);\n+                    ConnInstanceTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While updating a connector\", e);\n         }\n@@ -105,13 +105,13 @@ public void deleteConnector(Long id) {\n         }\n     }\n \n-    public List<ConnectorBundleTO> getAllBundles() {\n-        List<ConnectorBundleTO> bundles = null;\n+    public List<ConnBundleTO> getAllBundles() {\n+        List<ConnBundleTO> bundles = null;\n \n         try {\n             bundles = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"connector/getBundles.json\",\n-                    ConnectorBundleTO[].class));\n+                    baseURL + \"connector/bundle/list\",\n+                    ConnBundleTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting connector bundles\", e);\n         }"},{"sha":"27ff688625f7138b7de38674fb57480adf8c9527","filename":"console/src/main/resources/logback.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -37,6 +37,11 @@\n         </encoder>\n     </appender>\n \n+    <logger name=\"org.syncope.client\" additivity=\"false\">\n+        <level value=\"OFF\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n+\n     <logger name=\"org.syncope.console\" additivity=\"false\">\n         <level value=\"INFO\"/>\n         <appender-ref ref=\"main\"/>"},{"sha":"275f245b28ab78cb45db684d2fec7e8e52e18447","filename":"console/src/main/resources/org/syncope/console/pages/ConnectorModalPage.html","status":"modified","additions":31,"deletions":28,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -31,38 +31,41 @@\n             <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n         </ul>\n         <div id=\"tabs-1\">\n-            <div id=\"dialog-form\">\n-                <fieldset>\n-                    <label for=\"displayName\"><wicket:message key=\"displayName\"/></label>\n-                    <input type=\"text\" id=\"displayName\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"displayName\" />\n-\n-                    <label for=\"bundleName\"><wicket:message key=\"bundleName\"/></label>\n-                    <select id=\"bundle\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"bundle\" />\n-\n-                    <label for=\"name\"><wicket:message key=\"name\"/></label>\n-                    <input type=\"text\" id=\"name\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"connectorName\" />\n-\n-                    <label for=\"version\"><wicket:message key=\"version\"/></label>\n-                    <input type=\"text\" id=\"version\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"version\" />\n-\n-                    <div wicket:id=\"propertiesContainer\">\n-                        <div wicket:id=\"connectorProperties\">\n-                            <span wicket:id=\"key\"/> *\n-                            <input type=\"text\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"value\" />\n-                        </div>\n-                    </div>\n-\n-\n-                </fieldset>\n-\n-            </div>\n+            <table class=\"stripedTable\" style=\"font-size:1.1em;border:none\" width=\"100%\">\n+                <tr>\n+                    <td><wicket:message key=\"displayName\"/></td>\n+                <td><input type=\"text\" id=\"displayName\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"displayName\" /></td>\n+                </tr>\n+                <tr>\n+                    <td><wicket:message key=\"bundleName\"/></td>\n+                    <td><select id=\"bundle\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"bundle\" /></td>\n+                </tr>\n+                <tr>\n+                    <td><wicket:message key=\"name\"/></td>\n+                <td><input type=\"text\" id=\"name\" class=\"text ui-widget-content ui-corner-all\" size=\"60\" wicket:id=\"connectorName\" /></td>\n+                </tr>\n+                <tr>\n+                    <td><wicket:message key=\"version\"/></td>\n+                <td><input type=\"text\" id=\"version\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"version\" /></td>\n+                </tr>\n+                <tbody wicket:id=\"propertiesContainer\">\n+                    <tr wicket:id=\"connectorProperties\">\n+                        <td wicket:id=\"connPropAttrSchema\"/>\n+                        <td wicket:id=\"connPropAttrValue\"/>\n+                    </tr>\n+                </tbody>\n+                <!-- each time this table is rendered, stripe rows' color -->\n+                <script type=\"text/javascript\">\n+                    $(function() {\n+                        $('.stripedTable tr:even').addClass(\"alt\");\n+                    });\n+                </script>\n+            </table>\n         </div>\n         <div id=\"tabs-2\">\n-\n             <span wicket:id=\"capabilitiesPalette\"/>\n-\n         </div>\n+        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n     </div>\n-    <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n </form>\n </wicket:extend>\n\\ No newline at end of file"},{"sha":"02eab0f3c26f972d4a59d113e8d3c0f1f0c45c8e","filename":"console/src/test/resources/content.xml","status":"modified","additions":35,"deletions":53,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -21,13 +21,15 @@\n     <hibernate_sequences sequence_name=\"SEQ_SyncopeRole\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_Membership\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_SchemaMapping\" sequence_next_hi_value=\"10\"/>\n-    <hibernate_sequences sequence_name=\"SEQ_ConnectorInstance\" sequence_next_hi_value=\"10\"/>\n+    <hibernate_sequences sequence_name=\"SEQ_ConnInstance\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_UAttr\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_RAttr\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_MAttr\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_UAttrValue\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_RAttrValue\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_MAttrValue\" sequence_next_hi_value=\"1000\"/>\n+    <hibernate_sequences sequence_name=\"SEQ_Task\" sequence_next_hi_value=\"10\"/>\n+    <hibernate_sequences sequence_name=\"SEQ_TaskExecution\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPACurrentStep\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPAHistoryStep\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPAPropertySetItem\" sequence_next_hi_value=\"10\"/>\n@@ -45,26 +47,6 @@\n     <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n     <SyncopeUser id=\"3\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n     <SyncopeUser id=\"4\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"5\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"6\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"7\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"8\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"9\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"10\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"11\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"12\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"13\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"14\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"15\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"16\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"17\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"18\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"19\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"20\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"21\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"22\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"23\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n-    <SyncopeUser id=\"24\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n \n     <SyncopeRole id=\"1\" name=\"root\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\"/>\n     <SyncopeRole id=\"2\" name=\"child\" parent_id=\"1\" inheritAttributes=\"0\" inheritDerivedAttributes=\"0\"/>\n@@ -159,50 +141,50 @@\n                                             \n     <UDerAttr id=\"1000\" derivedSchema_name=\"cn\" owner_id=\"3\"/>\n \n-    <ConnectorInstance id=\"100\" displayName=\"ConnectorInstance100\"\n+    <ConnInstance id=\"100\" displayName=\"ConnInstance100\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n                        version=\"${project.version}\"\n-                       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"SYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"SYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"SYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"ASYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"ASYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"ASYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"RESOLVE\"/>\n-\n-    <ConnectorInstance id=\"101\" displayName=\"ConnectorInstance101\"\n+\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"SYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"SYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"SYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"ASYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"ASYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"ASYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"RESOLVE\"/>\n+\n+    <ConnInstance id=\"101\" displayName=\"ConnInstance101\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n                        version=\"${project.version}\"\n-                       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"SYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"SYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"SYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"ASYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"ASYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"ASYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"RESOLVE\"/>\n-\n-    <ConnectorInstance id=\"102\" displayName=\"ConnectorInstance102\"\n+\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"SYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"SYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"SYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"ASYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"ASYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"ASYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"RESOLVE\"/>\n+\n+    <ConnInstance id=\"102\" displayName=\"ConnInstance102\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n                        version=\"${project.version}\"\n-                       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"SYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"SYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"SYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"ASYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"ASYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"ASYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"RESOLVE\"/>\n-\n-    <ConnectorInstance id=\"103\" displayName=\"ConnectorInstance103\"\n+\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"SYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"SYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"SYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"ASYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"ASYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"ASYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"RESOLVE\"/>\n+\n+    <ConnInstance id=\"103\" displayName=\"ConnInstance103\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n                        version=\"${project.version}\"\n-                       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n \n     <TargetResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n     <TargetResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>"},{"sha":"14429dddab6000368a3200943112ef9741825727","filename":"core/src/main/java/org/syncope/core/persistence/ConnInstanceLoader.java","status":"renamed","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FConnInstanceLoader.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -29,9 +29,9 @@\n import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n import org.springframework.context.ConfigurableApplicationContext;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n+import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.SyncopeConf;\n-import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n+import org.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.syncope.core.persistence.dao.MissingConfKeyException;\n import org.syncope.core.persistence.dao.ConfDAO;\n import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n@@ -40,13 +40,13 @@\n /**\n  * Load identity connector instances on application startup.\n  */\n-public class ConnectorInstanceLoader implements ServletContextListener {\n+public class ConnInstanceLoader implements ServletContextListener {\n \n     /**\n      * Logger.\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(\n-            ConnectorInstanceLoader.class);\n+            ConnInstanceLoader.class);\n \n     public static ConnectorInfoManager getConnectorManager()\n             throws NotFoundException {\n@@ -115,7 +115,7 @@ public static ConnectorFacadeProxy getConnector(final String id)\n         return (ConnectorFacadeProxy) getBeanFactory().getBean(id);\n     }\n \n-    public static void registerConnector(final ConnectorInstance instance)\n+    public static void registerConnector(final ConnInstance instance)\n             throws NotFoundException {\n \n         if (getBeanFactory().containsSingleton(instance.getId().toString())) {\n@@ -140,12 +140,11 @@ public final void contextInitialized(final ServletContextEvent sce) {\n         ConfigurableApplicationContext context =\n                 ApplicationContextManager.getApplicationContext();\n \n-        ConnectorInstanceDAO connectorInstanceDAO =\n-                (ConnectorInstanceDAO) context.getBean(\n-                \"connectorInstanceDAOImpl\");\n+        ConnInstanceDAO connectorInstanceDAO =\n+                (ConnInstanceDAO) context.getBean(\"connInstanceDAOImpl\");\n \n-        List<ConnectorInstance> instances = connectorInstanceDAO.findAll();\n-        for (ConnectorInstance instance : instances) {\n+        List<ConnInstance> instances = connectorInstanceDAO.findAll();\n+        for (ConnInstance instance : instances) {\n             try {\n                 LOG.error(\"register connector {}\", instance);\n                 registerConnector(instance);","previous_filename":"core/src/main/java/org/syncope/core/persistence/ConnectorInstanceLoader.java"},{"sha":"be55ae644f45992661f1b92c9344f0e6d8862516","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnInstance.java","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -35,11 +35,11 @@\n import javax.persistence.Lob;\n import javax.persistence.OneToMany;\n import org.hibernate.annotations.CollectionOfElements;\n-import org.syncope.client.to.PropertyTO;\n+import org.syncope.types.ConnConfProperty;\n import org.syncope.types.ConnectorCapability;\n \n @Entity\n-public class ConnectorInstance extends AbstractBaseBean {\n+public class ConnInstance extends AbstractBaseBean {\n \n     @Id\n     private Long id;\n@@ -92,7 +92,7 @@ public class ConnectorInstance extends AbstractBaseBean {\n     mappedBy = \"connector\")\n     private List<TargetResource> resources;\n \n-    public ConnectorInstance() {\n+    public ConnInstance() {\n         capabilities = EnumSet.noneOf(ConnectorCapability.class);\n     }\n \n@@ -120,8 +120,8 @@ public void setConnectorName(String connectorName) {\n         this.connectorName = connectorName;\n     }\n \n-    public Set<PropertyTO> getConfiguration() {\n-        Set<PropertyTO> result = Collections.EMPTY_SET;\n+    public Set<ConnConfProperty> getConfiguration() {\n+        Set<ConnConfProperty> result = Collections.EMPTY_SET;\n \n         try {\n             ByteArrayInputStream tokenContentIS = new ByteArrayInputStream(\n@@ -131,15 +131,15 @@ public Set<PropertyTO> getConfiguration() {\n             Object object = decoder.readObject();\n             decoder.close();\n \n-            result = (Set<PropertyTO>) object;\n+            result = (Set<ConnConfProperty>) object;\n         } catch (Throwable t) {\n             LOG.error(\"During connector properties deserialization\", t);\n         }\n \n         return result;\n     }\n \n-    public void setConfiguration(Set<PropertyTO> configuration) {\n+    public void setConfiguration(final Set<ConnConfProperty> configuration) {\n         try {\n             ByteArrayOutputStream tokenContentOS = new ByteArrayOutputStream();\n             XMLEncoder encoder = new XMLEncoder(tokenContentOS);","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnectorInstance.java"},{"sha":"d3fdc951a5c6018d28e5d8235e631b33b4f32185","filename":"core/src/main/java/org/syncope/core/persistence/beans/TargetResource.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -66,7 +66,7 @@ public class TargetResource extends AbstractBaseBean {\n      * The resource type is identified by the associated connector.\n      */\n     @ManyToOne(fetch = FetchType.EAGER)\n-    private ConnectorInstance connector;\n+    private ConnInstance connector;\n \n     /**\n      * Users associated to this resource.\n@@ -123,11 +123,11 @@ public void setForceMandatoryConstraint(boolean forceMandatoryConstraint) {\n                 getBooleanAsInteger(forceMandatoryConstraint);\n     }\n \n-    public ConnectorInstance getConnector() {\n+    public ConnInstance getConnector() {\n         return connector;\n     }\n \n-    public void setConnector(ConnectorInstance connector) {\n+    public void setConnector(ConnInstance connector) {\n         this.connector = connector;\n     }\n "},{"sha":"f4f60da51dc0a7c41ead55532098c53d055793ae","filename":"core/src/main/java/org/syncope/core/persistence/beans/Task.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTask.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -27,8 +27,6 @@\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n import javax.persistence.FetchType;\n-import javax.persistence.GeneratedValue;\n-import javax.persistence.GenerationType;\n import javax.persistence.Id;\n import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n@@ -50,7 +48,6 @@ public class Task extends AbstractBaseBean {\n      * Id.\n      */\n     @Id\n-    @GeneratedValue(strategy = GenerationType.AUTO)\n     private Long id;\n \n     /**"},{"sha":"15ba5f1d354a47837665db6276f24905f8acbd7e","filename":"core/src/main/java/org/syncope/core/persistence/beans/TaskExecution.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTaskExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTaskExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTaskExecution.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -19,8 +19,6 @@\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n-import javax.persistence.GeneratedValue;\n-import javax.persistence.GenerationType;\n import javax.persistence.Id;\n import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n@@ -38,7 +36,6 @@ public class TaskExecution extends AbstractBaseBean {\n      * Id.\n      */\n     @Id\n-    @GeneratedValue(strategy = GenerationType.AUTO)\n     private Long id;\n \n     /**"},{"sha":"aee88d24cc874097cb2bdfd1444da32ecd39668c","filename":"core/src/main/java/org/syncope/core/persistence/dao/ConnInstanceDAO.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -15,16 +15,16 @@\n package org.syncope.core.persistence.dao;\n \n import java.util.List;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n+import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n-public interface ConnectorInstanceDAO extends DAO {\n+public interface ConnInstanceDAO extends DAO {\n \n-    ConnectorInstance find(Long id);\n+    ConnInstance find(Long id);\n \n-    List<ConnectorInstance> findAll();\n+    List<ConnInstance> findAll();\n \n-    ConnectorInstance save(ConnectorInstance connector)\n+    ConnInstance save(ConnInstance connector)\n             throws InvalidEntityException;\n \n     void delete(Long id);","previous_filename":"core/src/main/java/org/syncope/core/persistence/dao/ConnectorInstanceDAO.java"},{"sha":"bba59c123eeda7312ca29f382c596a50bf1e7d4a","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ConnInstanceDAOImpl.java","status":"renamed","additions":13,"deletions":14,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -18,31 +18,30 @@\n import javassist.NotFoundException;\n import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n-import org.syncope.core.persistence.ConnectorInstanceLoader;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n-import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n+import org.syncope.core.persistence.ConnInstanceLoader;\n+import org.syncope.core.persistence.beans.ConnInstance;\n+import org.syncope.core.persistence.dao.ConnInstanceDAO;\n \n @Repository\n-public class ConnectorInstanceDAOImpl extends AbstractDAOImpl\n-        implements ConnectorInstanceDAO {\n+public class ConnInstanceDAOImpl extends AbstractDAOImpl\n+        implements ConnInstanceDAO {\n \n     @Override\n-    public ConnectorInstance find(final Long id) {\n-        return entityManager.find(ConnectorInstance.class, id);\n+    public ConnInstance find(final Long id) {\n+        return entityManager.find(ConnInstance.class, id);\n     }\n \n     @Override\n-    public List<ConnectorInstance> findAll() {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM ConnectorInstance e\");\n+    public List<ConnInstance> findAll() {\n+        Query query = entityManager.createQuery(\"SELECT e FROM ConnInstance e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    public ConnectorInstance save(final ConnectorInstance connector) {\n-        ConnectorInstance actual = entityManager.merge(connector);\n+    public ConnInstance save(final ConnInstance connector) {\n+        ConnInstance actual = entityManager.merge(connector);\n         try {\n-            ConnectorInstanceLoader.registerConnector(actual);\n+            ConnInstanceLoader.registerConnector(actual);\n         } catch (NotFoundException e) {\n             LOG.error(\"While registering the connector for instance \"\n                     + actual, e);\n@@ -55,6 +54,6 @@ public ConnectorInstance save(final ConnectorInstance connector) {\n     public void delete(final Long id) {\n         entityManager.remove(find(id));\n \n-        ConnectorInstanceLoader.removeConnector(id.toString());\n+        ConnInstanceLoader.removeConnector(id.toString());\n     }\n }","previous_filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ConnectorInstanceDAOImpl.java"},{"sha":"44ad658d22fd5892e94d77a312567aaab7b056c7","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ConnectorFacadeProxy.java","status":"modified","additions":47,"deletions":19,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -16,6 +16,8 @@\n \n import java.util.Set;\n import javassist.NotFoundException;\n+import org.identityconnectors.common.security.GuardedByteArray;\n+import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.api.APIConfiguration;\n import org.identityconnectors.framework.api.ConfigurationProperties;\n import org.identityconnectors.framework.api.ConnectorFacade;\n@@ -28,9 +30,10 @@\n import org.identityconnectors.framework.common.objects.Uid;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.syncope.client.to.PropertyTO;\n-import org.syncope.core.persistence.ConnectorInstanceLoader;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n+import org.springframework.util.ClassUtils;\n+import org.syncope.types.ConnConfProperty;\n+import org.syncope.core.persistence.ConnInstanceLoader;\n+import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.types.ConnectorCapability;\n import org.syncope.types.PropagationMode;\n import org.syncope.types.ResourceOperationType;\n@@ -55,30 +58,30 @@ public class ConnectorFacadeProxy {\n \n     /**\n      * Set of configure connecto instance capabilities.\n-     * @see org.syncope.core.persistence.beans.ConnectorInstance\n+     * @see org.syncope.core.persistence.beans.ConnInstance\n      */\n     private final Set<ConnectorCapability> capabitilies;\n \n     /**\n      * Use the passed connector instance to build a ConnectorFacade that will\n      * be used to make all wrapped calls.\n      *\n-     * @param connectorInstance the connector instance configuration\n+     * @param connInstance the connector instance configuration\n      * @throws NotFoundException when not able to fetch all the required data\n      * @see ConnectorKey\n      * @see ConnectorInfo\n      * @see APIConfiguration\n      * @see ConfigurationProperties\n      * @see ConnectorFacade\n      */\n-    public ConnectorFacadeProxy(final ConnectorInstance connectorInstance)\n+    public ConnectorFacadeProxy(final ConnInstance connInstance)\n             throws NotFoundException {\n \n         // specify a connector.\n         ConnectorKey key = new ConnectorKey(\n-                connectorInstance.getBundleName(),\n-                connectorInstance.getVersion(),\n-                connectorInstance.getConnectorName());\n+                connInstance.getBundleName(),\n+                connInstance.getVersion(),\n+                connInstance.getConnectorName());\n \n         if (key == null) {\n             throw new NotFoundException(\"Connector Key\");\n@@ -91,10 +94,8 @@ public ConnectorFacadeProxy(final ConnectorInstance connectorInstance)\n         }\n \n         // get the specified connector.\n-        ConnectorInfo info =\n-                ConnectorInstanceLoader.getConnectorManager().findConnectorInfo(\n-                key);\n-\n+        ConnectorInfo info = ConnInstanceLoader.getConnectorManager().\n+                findConnectorInfo(key);\n         if (info == null) {\n             throw new NotFoundException(\"Connector Info\");\n         }\n@@ -125,9 +126,33 @@ public ConnectorFacadeProxy(final ConnectorInstance connectorInstance)\n         }\n \n         // Set all of the ConfigurationProperties needed by the connector.\n-        for (PropertyTO property : connectorInstance.getConfiguration()) {\n-            properties.setPropertyValue(\n-                    property.getKey(), property.getValue());\n+        Class propertySchemaClass;\n+        Object propertyValue;\n+        for (ConnConfProperty property : connInstance.getConfiguration()) {\n+            if (property.getValue() != null) {\n+                try {\n+                    propertySchemaClass = ClassUtils.forName(\n+                            property.getSchema().getType(),\n+                            ClassUtils.getDefaultClassLoader());\n+\n+                    if (GuardedString.class.equals(propertySchemaClass)) {\n+                        propertyValue = new GuardedString(\n+                                property.getValue().toCharArray());\n+                    } else if (GuardedByteArray.class.equals(\n+                            propertySchemaClass)) {\n+                        propertyValue = new GuardedByteArray(\n+                                property.getValue().getBytes());\n+                    } else {\n+                        propertyValue = property.getValue();\n+                    }\n+\n+                    properties.setPropertyValue(\n+                            property.getSchema().getName(), propertyValue);\n+                } catch (ClassNotFoundException e) {\n+                    LOG.error(\"Invalid configType specified for \"\n+                            + property.getSchema(), e);\n+                }\n+            }\n         }\n \n         // Use the ConnectorFacadeFactory's newInstance() method to get\n@@ -140,11 +165,14 @@ public ConnectorFacadeProxy(final ConnectorInstance connectorInstance)\n         }\n \n         // Make sure we have set up the Configuration properly\n-        connector.validate();\n-        //connector.test(); //needs a target resource deployed\n+        try {\n+            connector.validate();\n+        } catch (RuntimeException e) {\n+            LOG.error(\"Connector configuration not valid: \" + apiConfig, e);\n+        }\n \n         this.connector = connector;\n-        this.capabitilies = connectorInstance.getCapabilities();\n+        this.capabitilies = connInstance.getCapabilities();\n     }\n \n     public Uid resolveUsername("},{"sha":"a8ecdcf70d834065250db089c5cbd4a6e38931fa","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -36,10 +36,10 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.NoSuchBeanDefinitionException;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.syncope.core.persistence.ConnectorInstanceLoader;\n+import org.syncope.core.persistence.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n import org.syncope.core.persistence.beans.AbstractSchema;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n+import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.Task;\n@@ -474,11 +474,11 @@ public void propagate(final TaskExecution execution) {\n         final Set<String> triedPropagationRequests = new HashSet<String>();\n \n         try {\n-            ConnectorInstance connectorInstance =\n+            ConnInstance connectorInstance =\n                     task.getResource().getConnector();\n \n             ConnectorFacadeProxy connector =\n-                    ConnectorInstanceLoader.getConnector(\n+                    ConnInstanceLoader.getConnector(\n                     connectorInstance.getId().toString());\n \n             if (connector == null) {"},{"sha":"d5985185d406641976708ee448fcc0cf59bec06a","filename":"core/src/main/java/org/syncope/core/rest/controller/ConnInstanceController.java","status":"renamed","additions":57,"deletions":50,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -30,40 +30,41 @@\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.servlet.ModelAndView;\n-import org.syncope.client.to.ConnectorBundleTO;\n-import org.syncope.client.to.ConnectorInstanceTO;\n+import org.syncope.client.to.ConnBundleTO;\n+import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.core.persistence.ConnectorInstanceLoader;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n-import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n+import org.syncope.core.persistence.ConnInstanceLoader;\n+import org.syncope.core.persistence.beans.ConnInstance;\n+import org.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.syncope.core.persistence.dao.MissingConfKeyException;\n import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n-import org.syncope.core.rest.data.ConnectorInstanceDataBinder;\n+import org.syncope.core.rest.data.ConnInstanceDataBinder;\n+import org.syncope.types.ConnConfPropSchema;\n \n @Controller\n @RequestMapping(\"/connector\")\n-public class ConnectorInstanceController extends AbstractController {\n+public class ConnInstanceController extends AbstractController {\n \n     @Autowired\n-    private ConnectorInstanceDAO connectorInstanceDAO;\n+    private ConnInstanceDAO connInstanceDAO;\n \n     @Autowired\n-    private ConnectorInstanceDataBinder binder;\n+    private ConnInstanceDataBinder binder;\n \n     @PreAuthorize(\"hasRole('CONNECTOR_CREATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/create\")\n-    public ConnectorInstanceTO create(final HttpServletResponse response,\n-            @RequestBody final ConnectorInstanceTO connectorTO)\n+    public ConnInstanceTO create(final HttpServletResponse response,\n+            @RequestBody final ConnInstanceTO connectorTO)\n             throws SyncopeClientCompositeErrorException, NotFoundException,\n             MissingConfKeyException {\n \n-        LOG.debug(\"ConnectorInstance create called with configuration {}\",\n+        LOG.debug(\"ConnInstance create called with configuration {}\",\n                 connectorTO);\n \n-        ConnectorInstance connectorInstance = null;\n+        ConnInstance connInstance = null;\n         try {\n-            connectorInstance = binder.getConnectorInstance(connectorTO);\n+            connInstance = binder.getConnInstance(connectorTO);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"Could not create for \" + connectorTO, e);\n \n@@ -72,25 +73,25 @@ public ConnectorInstanceTO create(final HttpServletResponse response,\n \n         // Everything went out fine, we can flush to the database\n         // and register the new connector instance for later usage\n-        connectorInstance = connectorInstanceDAO.save(connectorInstance);\n+        connInstance = connInstanceDAO.save(connInstance);\n \n         response.setStatus(HttpServletResponse.SC_CREATED);\n-        return binder.getConnectorInstanceTO(connectorInstance);\n+        return binder.getConnInstanceTO(connInstance);\n     }\n \n     @PreAuthorize(\"hasRole('CONNECTOR_UPDATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/update\")\n-    public ConnectorInstanceTO update(\n-            @RequestBody final ConnectorInstanceTO connectorTO)\n+    public ConnInstanceTO update(\n+            @RequestBody final ConnInstanceTO connectorTO)\n             throws SyncopeClientCompositeErrorException, NotFoundException,\n             MissingConfKeyException {\n \n         LOG.debug(\"Connector update called with configuration {}\", connectorTO);\n \n-        ConnectorInstance connectorInstance;\n+        ConnInstance connInstance;\n         try {\n-            connectorInstance = binder.updateConnectorInstance(\n+            connInstance = binder.updateConnInstance(\n                     connectorTO.getId(), connectorTO);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"Could not create for \" + connectorTO, e);\n@@ -100,9 +101,9 @@ public ConnectorInstanceTO update(\n \n         // Everything went out fine, we can flush to the database\n         // and register the new connector instance for later usage\n-        connectorInstance = connectorInstanceDAO.save(connectorInstance);\n+        connInstance = connInstanceDAO.save(connInstance);\n \n-        return binder.getConnectorInstanceTO(connectorInstance);\n+        return binder.getConnInstanceTO(connInstance);\n     }\n \n     @PreAuthorize(\"hasRole('CONNECTOR_DELETE')\")\n@@ -111,59 +112,56 @@ public ConnectorInstanceTO update(\n     public void delete(@PathVariable(\"connectorId\") Long connectorId)\n             throws NotFoundException {\n \n-        ConnectorInstance connectorInstance =\n-                connectorInstanceDAO.find(connectorId);\n+        ConnInstance connInstance = connInstanceDAO.find(connectorId);\n \n-        if (connectorInstance == null) {\n+        if (connInstance == null) {\n             LOG.error(\"Could not find connector '\" + connectorId + \"'\");\n \n             throw new NotFoundException(String.valueOf(connectorId));\n         }\n \n-        connectorInstanceDAO.delete(connectorId);\n+        connInstanceDAO.delete(connectorId);\n     }\n \n     @PreAuthorize(\"hasRole('CONNECTOR_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/list\")\n-    public List<ConnectorInstanceTO> list() {\n-        List<ConnectorInstance> connectorInstances =\n-                connectorInstanceDAO.findAll();\n-\n-        List<ConnectorInstanceTO> connectorInstanceTOs =\n-                new ArrayList<ConnectorInstanceTO>();\n-        for (ConnectorInstance connector : connectorInstances) {\n-            connectorInstanceTOs.add(binder.getConnectorInstanceTO(connector));\n+    public List<ConnInstanceTO> list() {\n+        List<ConnInstance> connInstances = connInstanceDAO.findAll();\n+\n+        List<ConnInstanceTO> connInstanceTOs =\n+                new ArrayList<ConnInstanceTO>();\n+        for (ConnInstance connector : connInstances) {\n+            connInstanceTOs.add(binder.getConnInstanceTO(connector));\n         }\n \n-        return connectorInstanceTOs;\n+        return connInstanceTOs;\n     }\n \n     @PreAuthorize(\"hasRole('CONNECTOR_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/read/{connectorId}\")\n-    public ConnectorInstanceTO read(\n+    public ConnInstanceTO read(\n             @PathVariable(\"connectorId\") Long connectorId)\n             throws NotFoundException {\n \n-        ConnectorInstance connectorInstance =\n-                connectorInstanceDAO.find(connectorId);\n+        ConnInstance connInstance = connInstanceDAO.find(connectorId);\n \n-        if (connectorInstance == null) {\n+        if (connInstance == null) {\n             LOG.error(\"Could not find connector '\" + connectorId + \"'\");\n \n             throw new NotFoundException(String.valueOf(connectorId));\n         }\n \n-        return binder.getConnectorInstanceTO(connectorInstance);\n+        return binder.getConnInstanceTO(connInstance);\n     }\n \n     @PreAuthorize(\"hasRole('CONNECTOR_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/check/{connectorId}\")\n     public ModelAndView check(@PathVariable(\"connectorId\") String connectorId) {\n         ConnectorFacadeProxy connector =\n-                ConnectorInstanceLoader.getConnector(connectorId);\n+                ConnInstanceLoader.getConnector(connectorId);\n \n         ModelAndView mav = new ModelAndView();\n \n@@ -184,31 +182,30 @@ public ModelAndView check(@PathVariable(\"connectorId\") String connectorId) {\n \n     @PreAuthorize(\"hasRole('CONNECTOR_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n-    value = \"/getBundles\")\n-    public List<ConnectorBundleTO> getBundles()\n+    value = \"/bundle/list\")\n+    public List<ConnBundleTO> getBundles()\n             throws NotFoundException, MissingConfKeyException {\n \n         ConnectorInfoManager manager =\n-                ConnectorInstanceLoader.getConnectorManager();\n+                ConnInstanceLoader.getConnectorManager();\n \n         List<ConnectorInfo> bundles = manager.getConnectorInfos();\n \n-        if (bundles != null) {\n+        if (LOG.isDebugEnabled() && bundles != null) {\n             LOG.debug(\"#Bundles: {}\", bundles.size());\n \n             for (ConnectorInfo bundle : bundles) {\n                 LOG.debug(\"Bundle: {}\", bundle.getConnectorDisplayName());\n             }\n         }\n \n-        ConnectorBundleTO connectorBundleTO;\n+        ConnBundleTO connectorBundleTO;\n         ConnectorKey key;\n         ConfigurationProperties properties;\n \n-        List<ConnectorBundleTO> connectorBundleTOs =\n-                new ArrayList<ConnectorBundleTO>();\n+        List<ConnBundleTO> connectorBundleTOs = new ArrayList<ConnBundleTO>();\n         for (ConnectorInfo bundle : bundles) {\n-            connectorBundleTO = new ConnectorBundleTO();\n+            connectorBundleTO = new ConnBundleTO();\n             connectorBundleTO.setDisplayName(bundle.getConnectorDisplayName());\n \n             key = bundle.getConnectorKey();\n@@ -228,7 +225,17 @@ public List<ConnectorBundleTO> getBundles()\n             properties = bundle.createDefaultAPIConfiguration().\n                     getConfigurationProperties();\n \n-            connectorBundleTO.setProperties(properties.getPropertyNames());\n+            ConnConfPropSchema connConfPropSchema;\n+            for (String propName : properties.getPropertyNames()) {\n+                connConfPropSchema = new ConnConfPropSchema();\n+                connConfPropSchema.setName(propName);\n+                connConfPropSchema.setRequired(\n+                        properties.getProperty(propName).isRequired());\n+                connConfPropSchema.setType(\n+                        properties.getProperty(propName).getType().getName());\n+\n+                connectorBundleTO.addProperty(connConfPropSchema);\n+            }\n \n             LOG.debug(\"Bundle properties: {}\",\n                     connectorBundleTO.getProperties());","previous_filename":"core/src/main/java/org/syncope/core/rest/controller/ConnectorInstanceController.java"},{"sha":"a5647983389c5ed9e01950145edba33913ad9f08","filename":"core/src/main/java/org/syncope/core/rest/data/ConnInstanceDataBinder.java","status":"renamed","additions":15,"deletions":23,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -14,36 +14,28 @@\n  */\n package org.syncope.core.rest.data;\n \n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n-import org.syncope.client.to.ConnectorInstanceTO;\n+import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n-import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n+import org.syncope.core.persistence.beans.ConnInstance;\n+import org.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n-public class ConnectorInstanceDataBinder {\n-\n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            ConnectorInstanceDataBinder.class);\n+public class ConnInstanceDataBinder {\n \n     private static final String[] ignoreProperties = {\n         \"id\", \"resources\"};\n \n     @Autowired\n-    private ConnectorInstanceDAO connectorInstanceDAO;\n+    private ConnInstanceDAO connectorInstanceDAO;\n \n-    public ConnectorInstance getConnectorInstance(\n-            ConnectorInstanceTO connectorInstanceTO)\n+    public ConnInstance getConnInstance(\n+            final ConnInstanceTO connectorInstanceTO)\n             throws SyncopeClientCompositeErrorException {\n \n         SyncopeClientCompositeErrorException compositeErrorException =\n@@ -71,7 +63,7 @@ public ConnectorInstance getConnectorInstance(\n             requiredValuesMissing.addElement(\"configuration\");\n         }\n \n-        ConnectorInstance connectorInstance = new ConnectorInstance();\n+        ConnInstance connectorInstance = new ConnInstance();\n \n         BeanUtils.copyProperties(\n                 connectorInstanceTO, connectorInstance, ignoreProperties);\n@@ -90,9 +82,9 @@ public ConnectorInstance getConnectorInstance(\n         return connectorInstance;\n     }\n \n-    public ConnectorInstance updateConnectorInstance(\n+    public ConnInstance updateConnInstance(\n             Long connectorInstanceId,\n-            ConnectorInstanceTO connectorInstanceTO)\n+            ConnInstanceTO connectorInstanceTO)\n             throws SyncopeClientCompositeErrorException {\n \n         SyncopeClientCompositeErrorException compositeErrorException =\n@@ -107,7 +99,7 @@ public ConnectorInstance updateConnectorInstance(\n             requiredValuesMissing.addElement(\"connector id\");\n         }\n \n-        ConnectorInstance connectorInstance =\n+        ConnInstance connectorInstance =\n                 connectorInstanceDAO.find(connectorInstanceId);\n \n         if (connectorInstanceTO.getBundleName() != null) {\n@@ -152,11 +144,11 @@ public ConnectorInstance updateConnectorInstance(\n         return connectorInstance;\n     }\n \n-    public ConnectorInstanceTO getConnectorInstanceTO(\n-            ConnectorInstance connectorInstance) {\n+    public ConnInstanceTO getConnInstanceTO(\n+            ConnInstance connectorInstance) {\n \n-        ConnectorInstanceTO connectorInstanceTO =\n-                new ConnectorInstanceTO();\n+        ConnInstanceTO connectorInstanceTO =\n+                new ConnInstanceTO();\n \n         BeanUtils.copyProperties(\n                 connectorInstance, connectorInstanceTO, ignoreProperties);","previous_filename":"core/src/main/java/org/syncope/core/rest/data/ConnectorInstanceDataBinder.java"},{"sha":"f807d00e2756cd8d69bd57bf97305d19fbcc8f43","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -29,10 +29,10 @@\n import org.syncope.client.to.SchemaMappingTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n+import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n-import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n+import org.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n@@ -48,7 +48,7 @@ public class ResourceDataBinder {\n         \"id\", \"resource\"};\n \n     @Autowired\n-    private ConnectorInstanceDAO connectorInstanceDAO;\n+    private ConnInstanceDAO connectorInstanceDAO;\n \n     @Autowired\n     private JexlEngine jexlEngine;\n@@ -79,7 +79,7 @@ public TargetResource getResource(TargetResource resource,\n             requiredValuesMissing.addElement(\"name\");\n         }\n \n-        ConnectorInstance connector = null;\n+        ConnInstance connector = null;\n \n         if (resourceTO.getConnectorId() != null) {\n             connector = connectorInstanceDAO.find(resourceTO.getConnectorId());\n@@ -143,7 +143,7 @@ public ResourceTO getResourceTO(TargetResource resource) {\n         resourceTO.setName(resource.getName());\n \n         // set the connector instance\n-        ConnectorInstance connector = resource.getConnector();\n+        ConnInstance connector = resource.getConnector();\n \n         resourceTO.setConnectorId(\n                 connector != null ? connector.getId() : null);"},{"sha":"ca7285529d10672fbfa6f6d2eae75b763f933b3d","filename":"core/src/main/resources/META-INF/orm.xml","status":"modified","additions":21,"deletions":4,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -58,11 +58,11 @@\n         </attributes>\n     </entity>\n \n-    <entity class=\"org.syncope.core.persistence.beans.ConnectorInstance\">\n+    <entity class=\"org.syncope.core.persistence.beans.ConnInstance\">\n         <attributes>\n             <id name=\"id\">\n-                <generated-value generator=\"SEQ_ConnectorInstance\" strategy=\"TABLE\"/>\n-                <table-generator name=\"SEQ_ConnectorInstance\" pk-column-value=\"SEQ_ConnectorInstance\" initial-value=\"1000\"/>\n+                <generated-value generator=\"SEQ_ConnInstance\" strategy=\"TABLE\"/>\n+                <table-generator name=\"SEQ_ConnInstance\" pk-column-value=\"SEQ_ConnInstance\" initial-value=\"1000\"/>\n             </id>\n         </attributes>\n     </entity>\n@@ -201,6 +201,23 @@\n         </attributes>\n     </entity>\n \n+    <entity class=\"org.syncope.core.persistence.beans.Task\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value generator=\"SEQ_Task\" strategy=\"TABLE\"/>\n+                <table-generator name=\"SEQ_Task\" pk-column-value=\"SEQ_Task\" initial-value=\"10\"/>\n+            </id>\n+        </attributes>\n+    </entity>\n+    <entity class=\"org.syncope.core.persistence.beans.TaskExecution\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value generator=\"SEQ_TaskExecution\" strategy=\"TABLE\"/>\n+                <table-generator name=\"SEQ_TaskExecution\" pk-column-value=\"SEQ_TaskExecution\" initial-value=\"10\"/>\n+            </id>\n+        </attributes>\n+    </entity>\n+\n     <entity class=\"jpasymphony.beans.JPACurrentStep\">\n         <attributes>\n             <id name=\"id\">\n@@ -234,4 +251,4 @@\n         </attributes>\n     </entity>\n \n-</entity-mappings>\n\\ No newline at end of file\n+</entity-mappings>"},{"sha":"d809f669df0c538c1aff2b90afc8413c9db00f49","filename":"core/src/main/resources/META-INF/orm.xml.oracle","status":"modified","additions":20,"deletions":3,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -58,11 +58,11 @@\n         </attributes>\n     </entity>\n \n-    <entity class=\"org.syncope.core.persistence.beans.ConnectorInstance\">\n+    <entity class=\"org.syncope.core.persistence.beans.ConnInstance\">\n         <attributes>\n             <id name=\"id\">\n-                <generated-value generator=\"SEQ_ConnectorInstance\" strategy=\"TABLE\"/>\n-                <table-generator name=\"SEQ_ConnectorInstance\" pk-column-value=\"SEQ_ConnectorInstance\" initial-value=\"1000\"/>\n+                <generated-value generator=\"SEQ_ConnInstance\" strategy=\"TABLE\"/>\n+                <table-generator name=\"SEQ_ConnInstance\" pk-column-value=\"SEQ_ConnInstance\" initial-value=\"1000\"/>\n             </id>\n         </attributes>\n     </entity>\n@@ -165,6 +165,23 @@\n         </attributes>\n     </entity>\n \n+    <entity class=\"org.syncope.core.persistence.beans.Task\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value generator=\"SEQ_Task\" strategy=\"TABLE\"/>\n+                <table-generator name=\"SEQ_Task\" pk-column-value=\"SEQ_Task\" initial-value=\"10\"/>\n+            </id>\n+        </attributes>\n+    </entity>\n+    <entity class=\"org.syncope.core.persistence.beans.TaskExecution\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value generator=\"SEQ_TaskExecution\" strategy=\"TABLE\"/>\n+                <table-generator name=\"SEQ_TaskExecution\" pk-column-value=\"SEQ_TaskExecution\" initial-value=\"10\"/>\n+            </id>\n+        </attributes>\n+    </entity>\n+\n     <entity class=\"jpasymphony.beans.JPACurrentStep\">\n         <attributes>\n             <id name=\"id\">"},{"sha":"ec6123e28038033afcb40e15ad9ea5e4b787da32","filename":"core/src/main/resources/content.xml","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -21,13 +21,15 @@\n     <hibernate_sequences sequence_name=\"SEQ_SyncopeRole\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_Membership\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_SchemaMapping\" sequence_next_hi_value=\"10\"/>\n-    <hibernate_sequences sequence_name=\"SEQ_ConnectorInstance\" sequence_next_hi_value=\"10\"/>\n+    <hibernate_sequences sequence_name=\"SEQ_ConnInstance\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_UAttr\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_RAttr\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_MAttr\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_UAttrValue\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_RAttrValue\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_MAttrValue\" sequence_next_hi_value=\"1000\"/>\n+    <hibernate_sequences sequence_name=\"SEQ_Task\" sequence_next_hi_value=\"10\"/>\n+    <hibernate_sequences sequence_name=\"SEQ_TaskExecution\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPACurrentStep\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPAHistoryStep\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPAPropertySetItem\" sequence_next_hi_value=\"10\"/>"},{"sha":"a24fa99c9405fee39af596142b27f92cf33a67f9","filename":"core/src/main/resources/indexes.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -17,7 +17,7 @@\n     <comment>Additional indexes (in respect to JPA's)</comment>\n \n     <entry key=\"roleNameIndex\">CREATE INDEX roleNameIndex ON SyncopeRole(name)</entry>\n-    <entry key=\"ConnectorInstance_capabilities_ConnectorInstance_idIndex\">CREATE INDEX ConnectorInstance_capabilIndex ON ConnectorInstance_capabilities(ConnectorInstance_id)</entry>\n+    <entry key=\"ConnInstance_capabilities_ConnInstance_idIndex\">CREATE INDEX ConnInstance_capabilIndex ON ConnInstance_capabilities(ConnInstance_id)</entry>\n     <entry key=\"MAttr_schema_nameIndex\">CREATE INDEX MAttr_schema_nameIndex ON MAttr(schema_name)</entry>\n     <entry key=\"MAttr_owner_idIndex\">CREATE INDEX MAttr_owner_idIndex ON MAttr(owner_id)</entry>\n     <entry key=\"MAttrValue_attribute_idIndex\">CREATE INDEX MAttrValue_attribute_idIndex ON MAttrValue(attribute_id)</entry>"},{"sha":"16fa27f94f67c83a388f6e74b80331a7ade7e86f","filename":"core/src/main/resources/logback.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -86,6 +86,11 @@\n         </encoder>\n     </appender>\n \n+    <logger name=\"org.syncope.client\" additivity=\"false\">\n+        <level value=\"OFF\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n+\n     <logger name=\"org.syncope.core.persistence\" additivity=\"false\">\n         <level value=\"INFO\"/>\n         <appender-ref ref=\"persistence\"/>"},{"sha":"835fd10e0e75c10efee80d3b10333f1890e72a8b","filename":"core/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -32,7 +32,7 @@\n         <listener-class>org.syncope.core.persistence.DefaultContentLoader</listener-class>\n     </listener>\n     <listener>\n-        <listener-class>org.syncope.core.persistence.ConnectorInstanceLoader</listener-class>\n+        <listener-class>org.syncope.core.persistence.ConnInstanceLoader</listener-class>\n     </listener>\n \n     <servlet>"},{"sha":"d4a9023b9409bdbd2a15bb1332fd6b8a7771c08a","filename":"core/src/test/java/org/syncope/core/persistence/dao/ConnInstanceTest.java","status":"renamed","additions":24,"deletions":15,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -21,20 +21,21 @@\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.client.to.PropertyTO;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n+import org.syncope.types.ConnConfProperty;\n+import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.AbstractTest;\n import org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector;\n+import org.syncope.types.ConnConfPropSchema;\n \n @Transactional\n-public class ConnectorInstanceTest extends AbstractTest {\n+public class ConnInstanceTest extends AbstractTest {\n \n     @Autowired\n-    private ConnectorInstanceDAO connectorInstanceDAO;\n+    private ConnInstanceDAO connectorInstanceDAO;\n \n     @Test\n     public final void findById() {\n-        ConnectorInstance connectorInstance = connectorInstanceDAO.find(100L);\n+        ConnInstance connectorInstance = connectorInstanceDAO.find(100L);\n \n         assertNotNull(\"findById did not work\", connectorInstance);\n \n@@ -53,7 +54,7 @@ public final void findById() {\n     @Test\n     public final void save()\n             throws ClassNotFoundException {\n-        ConnectorInstance connectorInstance = new ConnectorInstance();\n+        ConnInstance connectorInstance = new ConnInstance();\n \n         // set connector version\n         connectorInstance.setVersion(\"1.0\");\n@@ -68,14 +69,22 @@ public final void save()\n         connectorInstance.setDisplayName(\"New\");\n \n         // set the connector configuration using PropertyTO\n-        Set<PropertyTO> conf = new HashSet<PropertyTO>();\n-\n-        PropertyTO endpoint = new PropertyTO();\n-        endpoint.setKey(\"endpoint\");\n+        Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n+\n+        ConnConfPropSchema endpointSchema = new ConnConfPropSchema();\n+        endpointSchema.setName(\"endpoint\");\n+        endpointSchema.setType(String.class.getName());\n+        endpointSchema.setRequired(true);\n+        ConnConfProperty endpoint = new ConnConfProperty();\n+        endpoint.setSchema(endpointSchema);\n         endpoint.setValue(\"http://host.domain\");\n \n-        PropertyTO servicename = new PropertyTO();\n-        servicename.setKey(\"servicename\");\n+        ConnConfPropSchema servicenameSchema = new ConnConfPropSchema();\n+        servicenameSchema.setName(\"servicename\");\n+        servicenameSchema.setType(String.class.getName());\n+        servicenameSchema.setRequired(true);\n+        ConnConfProperty servicename = new ConnConfProperty();\n+        servicename.setSchema(servicenameSchema);\n         servicename.setValue(\"Provisioning\");\n \n         conf.add(endpoint);\n@@ -86,7 +95,7 @@ public final void save()\n         assertFalse(connectorInstance.getConfiguration().isEmpty());\n \n         // perform save operation\n-        ConnectorInstance actual =\n+        ConnInstance actual =\n                 connectorInstanceDAO.save(connectorInstance);\n \n         assertNotNull(\"save did not work\", actual.getId());\n@@ -115,13 +124,13 @@ public final void save()\n \n     @Test\n     public final void delete() {\n-        ConnectorInstance connectorInstance = connectorInstanceDAO.find(100L);\n+        ConnInstance connectorInstance = connectorInstanceDAO.find(100L);\n \n         assertNotNull(\"find to delete did not work\", connectorInstance);\n \n         connectorInstanceDAO.delete(connectorInstance.getId());\n \n-        ConnectorInstance actual = connectorInstanceDAO.find(100L);\n+        ConnInstance actual = connectorInstanceDAO.find(100L);\n         assertNull(\"delete did not work\", actual);\n     }\n }","previous_filename":"core/src/test/java/org/syncope/core/persistence/dao/ConnectorInstanceTest.java"},{"sha":"cdffa14624f9724a828fe2c1dfeb00c6bc21b7b3","filename":"core/src/test/java/org/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -21,7 +21,7 @@\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n+import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.AbstractTest;\n@@ -41,7 +41,7 @@ public final void findById() {\n \n         assertNotNull(\"findById did not work\", resource);\n \n-        ConnectorInstance connector = resource.getConnector();\n+        ConnInstance connector = resource.getConnector();\n \n         assertNotNull(\"connector not found\", connector);\n "},{"sha":"d36e43427dc6ef820b118a7a69512ceae0d7068f","filename":"core/src/test/java/org/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -35,6 +35,7 @@ public class TaskTest extends AbstractTest {\n \n     @Autowired\n     private TaskDAO taskDAO;\n+\n     @Autowired\n     private ResourceDAO resourceDAO;\n \n@@ -67,9 +68,6 @@ public final void save() {\n \n         Task actual = taskDAO.find(task.getId());\n         assertEquals(task, actual);\n-\n-        resource = resourceDAO.find(\"ws-target-resource-1\");\n-        assertTrue(resource.getTasks().contains(task));\n     }\n \n     @Test"},{"sha":"aa6217be33f069f2d0f1e010e4e0626ab3e39efd","filename":"core/src/test/java/org/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -26,12 +26,12 @@\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.SchemaMappingTO;\n-import org.syncope.core.persistence.beans.ConnectorInstance;\n+import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.USchema;\n-import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n+import org.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.UserDAO;\n@@ -52,7 +52,7 @@ public class ResourceTest extends AbstractTest {\n     private SchemaDAO schemaDAO;\n \n     @Autowired\n-    private ConnectorInstanceDAO connectorInstanceDAO;\n+    private ConnInstanceDAO connectorInstanceDAO;\n \n     @Autowired\n     private UserDAO userDAO;\n@@ -129,7 +129,7 @@ public final void save()\n         resource.setName(\"ws-target-resource-save\");\n \n         // specify the connector\n-        ConnectorInstance connector = connectorInstanceDAO.find(100L);\n+        ConnInstance connector = connectorInstanceDAO.find(100L);\n \n         assertNotNull(\"connector not found\", connector);\n \n@@ -212,7 +212,7 @@ public final void delete() {\n         // -------------------------------------\n         // Get originally associated connector\n         // -------------------------------------\n-        ConnectorInstance connector = resource.getConnector();\n+        ConnInstance connector = resource.getConnector();\n \n         assertNotNull(connector);\n \n@@ -258,7 +258,7 @@ public final void delete() {\n         }\n \n         // resource must be not referenced any more from the connector\n-        ConnectorInstance actualConnector =\n+        ConnInstance actualConnector =\n                 connectorInstanceDAO.find(connectorId);\n         assertNotNull(actualConnector);\n         resources = actualConnector.getResources();"},{"sha":"51dbc3490ffb402dedea110f6198acb08022203b","filename":"core/src/test/java/org/syncope/core/persistence/relationships/TaskTest.java","status":"modified","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -15,25 +15,67 @@\n package org.syncope.core.persistence.relationships;\n \n import java.util.Date;\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.identityconnectors.framework.common.objects.Attribute;\n+import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import static org.junit.Assert.*;\n import org.junit.Test;\n \n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.AbstractTest;\n+import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.TaskExecution;\n+import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.TaskDAO;\n import org.syncope.core.persistence.dao.TaskExecutionDAO;\n+import org.syncope.types.PropagationMode;\n+import org.syncope.types.ResourceOperationType;\n \n @Transactional\n public class TaskTest extends AbstractTest {\n \n     @Autowired\n     private TaskDAO taskDAO;\n+\n     @Autowired\n     private TaskExecutionDAO taskExecutionDAO;\n \n+    @Autowired\n+    private ResourceDAO resourceDAO;\n+\n+    @Test\n+    public final void save() {\n+        TargetResource resource = resourceDAO.find(\"ws-target-resource-1\");\n+        assertNotNull(resource);\n+\n+        Task task = new Task();\n+        task.setResource(resource);\n+        task.setPropagationMode(PropagationMode.ASYNC);\n+        task.setResourceOperationType(ResourceOperationType.CREATE);\n+        task.setAccountId(\"one@two.com\");\n+\n+        Set<Attribute> attributes = new HashSet<Attribute>();\n+        attributes.add(AttributeBuilder.build(\"testAttribute\", \"testValue1\",\n+                \"testValue2\"));\n+        attributes.add(\n+                AttributeBuilder.buildPassword(\"password\".toCharArray()));\n+        task.setAttributes(attributes);\n+\n+        task = taskDAO.save(task);\n+        assertNotNull(task);\n+\n+        Task actual = taskDAO.find(task.getId());\n+        assertEquals(task, actual);\n+\n+        taskDAO.flush();\n+\n+        resource = resourceDAO.find(\"ws-target-resource-1\");\n+        assertTrue(resource.getTasks().contains(task));\n+    }\n+\n     @Test\n     public final void addTaskExecution() {\n         Task task = taskDAO.find(1L);"},{"sha":"9a0ba30ae7b216a49be4b366e03f814fcb2a9c58","filename":"core/src/test/java/org/syncope/core/rest/ConnInstanceTestITCase.java","status":"renamed","additions":55,"deletions":38,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -27,14 +27,15 @@\n import org.springframework.http.HttpStatus;\n import org.springframework.test.annotation.ExpectedException;\n import org.springframework.web.client.HttpStatusCodeException;\n-import org.syncope.client.to.ConnectorBundleTO;\n-import org.syncope.client.to.ConnectorInstanceTO;\n-import org.syncope.client.to.PropertyTO;\n+import org.syncope.client.to.ConnBundleTO;\n+import org.syncope.client.to.ConnInstanceTO;\n+import org.syncope.types.ConnConfProperty;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector;\n+import org.syncope.types.ConnConfPropSchema;\n import org.syncope.types.ConnectorCapability;\n \n-public class ConnectorInstanceTestITCase extends AbstractTest {\n+public class ConnInstanceTestITCase extends AbstractTest {\n \n     private static String bundles_version;\n \n@@ -60,15 +61,15 @@ public void init() {\n     @Test\n     @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n     public void createWithException() {\n-        ConnectorInstanceTO connectorTO = new ConnectorInstanceTO();\n+        ConnInstanceTO connectorTO = new ConnInstanceTO();\n \n         restTemplate.postForObject(BASE_URL + \"connector/create.json\",\n-                connectorTO, ConnectorInstanceTO.class);\n+                connectorTO, ConnInstanceTO.class);\n     }\n \n     @Test\n     public void create() {\n-        ConnectorInstanceTO connectorTO = new ConnectorInstanceTO();\n+        ConnInstanceTO connectorTO = new ConnInstanceTO();\n \n         // set connector version\n         connectorTO.setVersion(bundles_version);\n@@ -83,14 +84,22 @@ public void create() {\n         connectorTO.setDisplayName(\"Display name\");\n \n         // set the connector configuration using PropertyTO\n-        Set<PropertyTO> conf = new HashSet<PropertyTO>();\n-\n-        PropertyTO endpoint = new PropertyTO();\n-        endpoint.setKey(\"endpoint\");\n+        Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n+\n+        ConnConfPropSchema endpointSchema = new ConnConfPropSchema();\n+        endpointSchema.setName(\"endpoint\");\n+        endpointSchema.setType(String.class.getName());\n+        endpointSchema.setRequired(true);\n+        ConnConfProperty endpoint = new ConnConfProperty();\n+        endpoint.setSchema(endpointSchema);\n         endpoint.setValue(\"http://localhost:8888/wstarget/services\");\n \n-        PropertyTO servicename = new PropertyTO();\n-        servicename.setKey(\"servicename\");\n+        ConnConfPropSchema servicenameSchema = new ConnConfPropSchema();\n+        servicenameSchema.setName(\"servicename\");\n+        servicenameSchema.setType(String.class.getName());\n+        servicenameSchema.setRequired(true);\n+        ConnConfProperty servicename = new ConnConfProperty();\n+        servicename.setSchema(servicenameSchema);\n         servicename.setValue(\"Provisioning\");\n \n         conf.add(endpoint);\n@@ -104,10 +113,10 @@ public void create() {\n         connectorTO.addCapability(ConnectorCapability.SYNC_CREATE);\n         connectorTO.addCapability(ConnectorCapability.ASYNC_UPDATE);\n \n-        ConnectorInstanceTO actual =\n-                (ConnectorInstanceTO) restTemplate.postForObject(\n+        ConnInstanceTO actual =\n+                (ConnInstanceTO) restTemplate.postForObject(\n                 BASE_URL + \"connector/create.json\",\n-                connectorTO, ConnectorInstanceTO.class);\n+                connectorTO, ConnInstanceTO.class);\n \n         assertNotNull(actual);\n \n@@ -126,7 +135,7 @@ public void create() {\n         try {\n             actual = restTemplate.postForObject(\n                     BASE_URL + \"connector/update.json\",\n-                    connectorTO, ConnectorInstanceTO.class);\n+                    connectorTO, ConnInstanceTO.class);\n         } catch (HttpStatusCodeException e) {\n             LOG.error(\"update failed\", e);\n             t = e;\n@@ -152,7 +161,7 @@ public void create() {\n         try {\n             restTemplate.getForObject(\n                     BASE_URL + \"connector/read/{connectorId}\",\n-                    ConnectorInstanceTO.class,\n+                    ConnInstanceTO.class,\n                     actual.getId().toString());\n         } catch (HttpStatusCodeException e) {\n             assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n@@ -161,7 +170,7 @@ public void create() {\n \n     @Test\n     public void update() {\n-        ConnectorInstanceTO connectorTO = new ConnectorInstanceTO();\n+        ConnInstanceTO connectorTO = new ConnInstanceTO();\n \n         // set connector instance id\n         connectorTO.setId(100L);\n@@ -177,14 +186,22 @@ public void update() {\n                 \"org.syncope.identityconnectors.bundles.staticws\");\n \n         // set the connector configuration using PropertyTO\n-        Set<PropertyTO> conf = new HashSet<PropertyTO>();\n-\n-        PropertyTO endpoint = new PropertyTO();\n-        endpoint.setKey(\"endpoint\");\n+        Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n+\n+        ConnConfPropSchema endpointSchema = new ConnConfPropSchema();\n+        endpointSchema.setName(\"endpoint\");\n+        endpointSchema.setType(String.class.getName());\n+        endpointSchema.setRequired(true);\n+        ConnConfProperty endpoint = new ConnConfProperty();\n+        endpoint.setSchema(endpointSchema);\n         endpoint.setValue(\"http://localhost:8888/wstarget/services\");\n \n-        PropertyTO servicename = new PropertyTO();\n-        servicename.setKey(\"servicename\");\n+        ConnConfPropSchema servicenameSchema = new ConnConfPropSchema();\n+        servicenameSchema.setName(\"servicename\");\n+        servicenameSchema.setType(String.class.getName());\n+        servicenameSchema.setRequired(true);\n+        ConnConfProperty servicename = new ConnConfProperty();\n+        servicename.setSchema(servicenameSchema);\n         servicename.setValue(\"Provisioning\");\n \n         conf.add(endpoint);\n@@ -193,16 +210,16 @@ public void update() {\n         // set connector configuration\n         connectorTO.setConfiguration(conf);\n \n-        ConnectorInstanceTO actual =\n-                (ConnectorInstanceTO) restTemplate.postForObject(\n+        ConnInstanceTO actual =\n+                (ConnInstanceTO) restTemplate.postForObject(\n                 BASE_URL + \"connector/update.json\",\n-                connectorTO, ConnectorInstanceTO.class);\n+                connectorTO, ConnInstanceTO.class);\n \n         assertNotNull(actual);\n \n         actual = restTemplate.getForObject(\n                 BASE_URL + \"connector/read/{connectorId}\",\n-                ConnectorInstanceTO.class,\n+                ConnInstanceTO.class,\n                 actual.getId().toString());\n \n         assertNotNull(actual);\n@@ -223,21 +240,21 @@ public void deleteWithException() {\n \n     @Test\n     public void list() {\n-        List<ConnectorInstanceTO> connectorInstanceTOs = Arrays.asList(\n+        List<ConnInstanceTO> connectorInstanceTOs = Arrays.asList(\n                 restTemplate.getForObject(\n-                BASE_URL + \"connector/list.json\", ConnectorInstanceTO[].class));\n+                BASE_URL + \"connector/list.json\", ConnInstanceTO[].class));\n         assertNotNull(connectorInstanceTOs);\n         assertFalse(connectorInstanceTOs.isEmpty());\n-        for (ConnectorInstanceTO instance : connectorInstanceTOs) {\n+        for (ConnInstanceTO instance : connectorInstanceTOs) {\n             assertNotNull(instance);\n         }\n     }\n \n     @Test\n     public void read() {\n-        ConnectorInstanceTO connectorInstanceTO = restTemplate.getForObject(\n+        ConnInstanceTO connectorInstanceTO = restTemplate.getForObject(\n                 BASE_URL + \"connector/read/{connectorId}.json\",\n-                ConnectorInstanceTO.class, \"100\");\n+                ConnInstanceTO.class, \"100\");\n \n         assertNotNull(connectorInstanceTO);\n     }\n@@ -253,13 +270,13 @@ public void check() {\n \n     @Test\n     public void getBundles() {\n-        List<ConnectorBundleTO> bundles = Arrays.asList(\n+        List<ConnBundleTO> bundles = Arrays.asList(\n                 restTemplate.getForObject(\n-                BASE_URL + \"connector/getBundles.json\",\n-                ConnectorBundleTO[].class));\n+                BASE_URL + \"connector/bundle/list\",\n+                ConnBundleTO[].class));\n         assertNotNull(bundles);\n         assertFalse(bundles.isEmpty());\n-        for (ConnectorBundleTO bundle : bundles) {\n+        for (ConnBundleTO bundle : bundles) {\n             assertNotNull(bundle);\n         }\n     }","previous_filename":"core/src/test/java/org/syncope/core/rest/ConnectorInstanceTestITCase.java"},{"sha":"02eab0f3c26f972d4a59d113e8d3c0f1f0c45c8e","filename":"core/src/test/resources/content.xml","status":"modified","additions":35,"deletions":33,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -21,13 +21,15 @@\n     <hibernate_sequences sequence_name=\"SEQ_SyncopeRole\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_Membership\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_SchemaMapping\" sequence_next_hi_value=\"10\"/>\n-    <hibernate_sequences sequence_name=\"SEQ_ConnectorInstance\" sequence_next_hi_value=\"10\"/>\n+    <hibernate_sequences sequence_name=\"SEQ_ConnInstance\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_UAttr\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_RAttr\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_MAttr\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_UAttrValue\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_RAttrValue\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_MAttrValue\" sequence_next_hi_value=\"1000\"/>\n+    <hibernate_sequences sequence_name=\"SEQ_Task\" sequence_next_hi_value=\"10\"/>\n+    <hibernate_sequences sequence_name=\"SEQ_TaskExecution\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPACurrentStep\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPAHistoryStep\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPAPropertySetItem\" sequence_next_hi_value=\"10\"/>\n@@ -139,50 +141,50 @@\n                                             \n     <UDerAttr id=\"1000\" derivedSchema_name=\"cn\" owner_id=\"3\"/>\n \n-    <ConnectorInstance id=\"100\" displayName=\"ConnectorInstance100\"\n+    <ConnInstance id=\"100\" displayName=\"ConnInstance100\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n                        version=\"${project.version}\"\n-                       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"SYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"SYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"SYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"ASYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"ASYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"ASYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"100\" element=\"RESOLVE\"/>\n-\n-    <ConnectorInstance id=\"101\" displayName=\"ConnectorInstance101\"\n+\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"SYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"SYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"SYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"ASYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"ASYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"ASYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"100\" element=\"RESOLVE\"/>\n+\n+    <ConnInstance id=\"101\" displayName=\"ConnInstance101\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n                        version=\"${project.version}\"\n-                       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"SYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"SYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"SYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"ASYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"ASYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"ASYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"101\" element=\"RESOLVE\"/>\n-\n-    <ConnectorInstance id=\"102\" displayName=\"ConnectorInstance102\"\n+\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"SYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"SYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"SYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"ASYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"ASYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"ASYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"101\" element=\"RESOLVE\"/>\n+\n+    <ConnInstance id=\"102\" displayName=\"ConnInstance102\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n                        version=\"${project.version}\"\n-                       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"SYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"SYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"SYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"ASYNC_CREATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"ASYNC_UPDATE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"ASYNC_DELETE\"/>\n-    <ConnectorInstance_capabilities ConnectorInstance_id=\"102\" element=\"RESOLVE\"/>\n-\n-    <ConnectorInstance id=\"103\" displayName=\"ConnectorInstance103\"\n+\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"SYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"SYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"SYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"ASYNC_CREATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"ASYNC_UPDATE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"ASYNC_DELETE\"/>\n+    <ConnInstance_capabilities ConnInstance_id=\"102\" element=\"RESOLVE\"/>\n+\n+    <ConnInstance id=\"103\" displayName=\"ConnInstance103\"\n                        bundleName=\"org.syncope.identityconnectors.bundles.staticws\"\n                        connectorName=\"org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector\"\n                        version=\"${project.version}\"\n-                       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n \n     <TargetResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n     <TargetResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>"},{"sha":"3502f2868bd2b56d91d2872280ed59b6b379f9ec","filename":"identityconnectors/bundles/staticws/staticwebservice/src/main/java/org/syncope/identityconnectors/bundles/staticwebservice/WebServiceConfiguration.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0ce8570bfdde601433765a7935d7235ed5a3d835/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2FWebServiceConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0ce8570bfdde601433765a7935d7235ed5a3d835/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2FWebServiceConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2FWebServiceConfiguration.java?ref=0ce8570bfdde601433765a7935d7235ed5a3d835","patch":"@@ -91,7 +91,7 @@ public void validate() {\n             new URL(endpoint);\n         } catch (MalformedURLException ex) {\n             throw new IllegalArgumentException(\n-                    \"ExampleProperty cannot be null or empty.\");\n+                    \"The specified endpoint is not a valid URL.\");\n         }\n     }\n }"}]}