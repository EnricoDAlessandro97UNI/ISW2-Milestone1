{"sha":"4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRmNjgxOGIxMDNlY2U3ZjRiNGYxMGQyZmU0YzEwZGRiZmYzM2I0OWU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-30T13:17:47Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-30T13:17:47Z"},"message":"[SYNCOPE-884] Besides the reported failure, all IT cases were verified with application/xml","tree":{"sha":"df5b79e91dc6f8030990613e86e495d861382987","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/df5b79e91dc6f8030990613e86e495d861382987"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0d5e730f8f5b018222bd50f0e1b0f6bf84066bdc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0d5e730f8f5b018222bd50f0e1b0f6bf84066bdc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0d5e730f8f5b018222bd50f0e1b0f6bf84066bdc"}],"stats":{"total":278,"additions":251,"deletions":27},"files":[{"sha":"95ad262925eeff2865a5c5c9f7bce35a4e963e07","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/jaxb/EntityTOType.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FEntityTOType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FEntityTOType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FEntityTOType.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.jaxb;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlEnum;\n+import javax.xml.bind.annotation.XmlSeeAlso;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+@XmlSeeAlso({ UserTO.class, GroupTO.class, AnyObjectTO.class, RealmTO.class })\n+@XmlAccessorType(XmlAccessType.PROPERTY)\n+public class EntityTOType {\n+\n+    @XmlEnum\n+    public enum Type {\n+        USER,\n+        GROUP,\n+        ANY_OBJECT,\n+        REALM\n+\n+    }\n+\n+    private Type type;\n+\n+    private Object value;\n+\n+    public Type getType() {\n+        return type;\n+    }\n+\n+    public void setType(final Type type) {\n+        this.type = type;\n+    }\n+\n+    public Object getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(final Object value) {\n+        this.value = value;\n+    }\n+\n+}"},{"sha":"2374891c45d40f3d0de0d94d10897b3b45e240c1","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/jaxb/XmlEntityTOAdapter.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlEntityTOAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlEntityTOAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fjaxb%2FXmlEntityTOAdapter.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.jaxb;\n+\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+\n+public class XmlEntityTOAdapter<E extends EntityTO> extends XmlAdapter<EntityTOType, E> {\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public E unmarshal(final EntityTOType v) throws Exception {\n+        E result = null;\n+\n+        switch (v.getType()) {\n+            case USER:\n+            case GROUP:\n+            case ANY_OBJECT:\n+            case REALM:\n+                result = (E) v.getValue();\n+                break;\n+\n+            default:\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public EntityTOType marshal(final E v) throws Exception {\n+        EntityTOType result = new EntityTOType();\n+        if (v instanceof UserTO) {\n+            result.setType(EntityTOType.Type.USER);\n+        } else if (v instanceof GroupTO) {\n+            result.setType(EntityTOType.Type.GROUP);\n+        } else if (v instanceof AnyObjectTO) {\n+            result.setType(EntityTOType.Type.ANY_OBJECT);\n+        } else if (v instanceof RealmTO) {\n+            result.setType(EntityTOType.Type.REALM);\n+        }\n+        result.setValue(v);\n+\n+        return result;\n+    }\n+\n+}"},{"sha":"0dadbf8625dda16c420e710005e08e3f3194413e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AnyPatch.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -70,11 +70,17 @@ public Set<StringPatchItem> getAuxClasses() {\n         return auxClasses;\n     }\n \n+    @XmlElementWrapper(name = \"plainAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"plainAttrs\")\n     @Override\n     public Set<AttrPatch> getPlainAttrs() {\n         return plainAttrs;\n     }\n \n+    @XmlElementWrapper(name = \"virAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"virAttrs\")\n     @Override\n     public Set<AttrTO> getVirAttrs() {\n         return virAttrs;"},{"sha":"9c951ef08c8bea5741d7aa5e828471fd2120d570","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AttributablePatch.java","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAttributablePatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAttributablePatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAttributablePatch.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -18,21 +18,12 @@\n  */\n package org.apache.syncope.common.lib.patch;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n import org.apache.syncope.common.lib.to.AttrTO;\n \n public interface AttributablePatch {\n \n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n     Set<AttrPatch> getPlainAttrs();\n \n-    @XmlElementWrapper(name = \"virAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virAttrs\")\n     Set<AttrTO> getVirAttrs();\n }"},{"sha":"8487e1fc252c6166fdf88e04746ec57994e97782","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/MembershipPatch.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FMembershipPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FMembershipPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FMembershipPatch.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -18,8 +18,11 @@\n  */\n package org.apache.syncope.common.lib.patch;\n \n+import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.HashSet;\n import java.util.Set;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -57,11 +60,17 @@ public void setGroup(final String group) {\n         this.group = group;\n     }\n \n+    @XmlElementWrapper(name = \"plainAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"plainAttrs\")\n     @Override\n     public Set<AttrPatch> getPlainAttrs() {\n         return plainAttrs;\n     }\n \n+    @XmlElementWrapper(name = \"virAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"virAttrs\")\n     @Override\n     public Set<AttrTO> getVirAttrs() {\n         return virAttrs;"},{"sha":"b63d4b0ba02fa3d8e98f7f2d44bd1198600ed54d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTO.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import java.util.ArrayList;\n@@ -98,11 +99,15 @@ public List<String> getAuxClasses() {\n         return auxClasses;\n     }\n \n+    @XmlElementWrapper(name = \"plainAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"plainAttrs\")\n     @Override\n     public Set<AttrTO> getPlainAttrs() {\n         return plainAttrs;\n     }\n \n+    @JsonIgnore\n     @Override\n     public Map<String, AttrTO> getPlainAttrMap() {\n         Map<String, AttrTO> result = new HashMap<>(plainAttrs.size());\n@@ -113,11 +118,15 @@ public Map<String, AttrTO> getPlainAttrMap() {\n         return Collections.unmodifiableMap(result);\n     }\n \n+    @XmlElementWrapper(name = \"derAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"derAttrs\")\n     @Override\n     public Set<AttrTO> getDerAttrs() {\n         return derAttrs;\n     }\n \n+    @JsonIgnore\n     @Override\n     public Map<String, AttrTO> getDerAttrMap() {\n         Map<String, AttrTO> result = new HashMap<>(derAttrs.size());\n@@ -128,11 +137,15 @@ public Map<String, AttrTO> getDerAttrMap() {\n         return Collections.unmodifiableMap(result);\n     }\n \n+    @XmlElementWrapper(name = \"virAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"virAttrs\")\n     @Override\n     public Set<AttrTO> getVirAttrs() {\n         return virAttrs;\n     }\n \n+    @JsonIgnore\n     @Override\n     public Map<String, AttrTO> getVirAttrMap() {\n         Map<String, AttrTO> result = new HashMap<>(virAttrs.size());"},{"sha":"da2f7a11cdaea05e6a02eaca707f3333d270132e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AttributableTO.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttributableTO.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -18,36 +18,20 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.Map;\n import java.util.Set;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n \n public interface AttributableTO {\n \n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n     Set<AttrTO> getPlainAttrs();\n \n-    @JsonIgnore\n     Map<String, AttrTO> getPlainAttrMap();\n \n-    @XmlElementWrapper(name = \"derAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"derAttrs\")\n     Set<AttrTO> getDerAttrs();\n \n-    @JsonIgnore\n     Map<String, AttrTO> getDerAttrMap();\n \n-    @XmlElementWrapper(name = \"virAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virAttrs\")\n     Set<AttrTO> getVirAttrs();\n \n-    @JsonIgnore\n     Map<String, AttrTO> getVirAttrMap();\n }"},{"sha":"a970decc5a3c59f07cc285742d007c8da0130b5f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MembershipTO.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -19,11 +19,14 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -99,11 +102,15 @@ public void setGroupName(final String groupName) {\n         this.groupName = groupName;\n     }\n \n+    @XmlElementWrapper(name = \"plainAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"plainAttrs\")\n     @Override\n     public Set<AttrTO> getPlainAttrs() {\n         return plainAttrs;\n     }\n \n+    @JsonIgnore\n     @Override\n     public Map<String, AttrTO> getPlainAttrMap() {\n         Map<String, AttrTO> result = new HashMap<>(plainAttrs.size());\n@@ -114,11 +121,15 @@ public Map<String, AttrTO> getPlainAttrMap() {\n         return Collections.unmodifiableMap(result);\n     }\n \n+    @XmlElementWrapper(name = \"derAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"derAttrs\")\n     @Override\n     public Set<AttrTO> getDerAttrs() {\n         return derAttrs;\n     }\n \n+    @JsonIgnore\n     @Override\n     public Map<String, AttrTO> getDerAttrMap() {\n         Map<String, AttrTO> result = new HashMap<>(derAttrs.size());\n@@ -129,11 +140,15 @@ public Map<String, AttrTO> getDerAttrMap() {\n         return Collections.unmodifiableMap(result);\n     }\n \n+    @XmlElementWrapper(name = \"virAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"virAttrs\")\n     @Override\n     public Set<AttrTO> getVirAttrs() {\n         return virAttrs;\n     }\n \n+    @JsonIgnore\n     @Override\n     public Map<String, AttrTO> getVirAttrMap() {\n         Map<String, AttrTO> result = new HashMap<>(virAttrs.size());\n@@ -143,5 +158,4 @@ public Map<String, AttrTO> getVirAttrMap() {\n \n         return Collections.unmodifiableMap(result);\n     }\n-\n }"},{"sha":"3fe47901308c1cc7b3caef5bbc917c07557862c6","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisioningResult.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningResult.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -18,27 +18,35 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n+import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.jaxb.XmlEntityTOAdapter;\n \n @XmlRootElement(name = \"provisioningResult\")\n @XmlType\n public class ProvisioningResult<E extends EntityTO> extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 351317476398082746L;\n \n-    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n+    @XmlJavaTypeAdapter(XmlEntityTOAdapter.class)\n+    @JsonIgnore\n     private E entity;\n \n     private final List<PropagationStatus> propagationStatuses = new ArrayList<>();\n \n+    @XmlTransient\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n+    @JsonProperty\n     public E getEntity() {\n         return entity;\n     }"},{"sha":"a14b87837b12321a56bf9ef76a885b8639febe2a","filename":"common/lib/src/test/java/org/apache/syncope/common/lib/JAXBTest.java","status":"modified","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -18,14 +18,24 @@\n  */\n package org.apache.syncope.common.lib;\n \n+import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.fail;\n \n+import java.io.StringReader;\n import java.io.StringWriter;\n+import java.util.UUID;\n import javax.xml.bind.JAXBContext;\n+import javax.xml.bind.JAXBException;\n import javax.xml.bind.Marshaller;\n+import javax.xml.bind.Unmarshaller;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.report.UserReportletConf;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.PropagationStatus;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.junit.Test;\n \n@@ -42,4 +52,31 @@ public void marshal() {\n             fail(ExceptionUtils.getStackTrace(e));\n         }\n     }\n+\n+    @Test\n+    public void provisioningResult() throws JAXBException {\n+        JAXBContext context = JAXBContext.newInstance(ProvisioningResult.class);\n+        Marshaller marshaller = context.createMarshaller();\n+        Unmarshaller unmarshaller = context.createUnmarshaller();\n+\n+        GroupTO group = new GroupTO();\n+        group.setName(UUID.randomUUID().toString());\n+        group.setRealm(SyncopeConstants.ROOT_REALM);\n+        group.getVirAttrs().add(new AttrTO.Builder().schema(\"rvirtualdata\").value(\"rvirtualvalue\").build());\n+        group.getADynMembershipConds().put(\"USER\", \"username==a*\");\n+\n+        ProvisioningResult<GroupTO> original = new ProvisioningResult<>();\n+        original.setEntity(group);\n+\n+        PropagationStatus status = new PropagationStatus();\n+        status.setFailureReason(\"failed\");\n+        status.setBeforeObj(new ConnObjectTO());\n+        original.getPropagationStatuses().add(status);\n+        \n+        StringWriter writer = new StringWriter();\n+        marshaller.marshal(original, writer);\n+\n+        Object actual = unmarshaller.unmarshal(new StringReader(writer.toString()));\n+        assertEquals(original, actual);\n+    }\n }"},{"sha":"9c5c777588ec6c1ddb281fb94dbb3fc7303d35a3","filename":"common/lib/src/test/java/org/apache/syncope/common/lib/JSONTest.java","status":"modified","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java?ref=4f6818b103ece7f4b4f10d2fe4c10ddbff33b49e","patch":"@@ -21,6 +21,7 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n \n+import com.fasterxml.jackson.core.type.TypeReference;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n import java.io.StringWriter;\n@@ -30,6 +31,11 @@\n import org.apache.syncope.common.lib.patch.StringReplacePatchItem;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.report.UserReportletConf;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.PropagationStatus;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.to.WorkflowFormPropertyTO;\n import org.apache.syncope.common.lib.types.PatchOperation;\n@@ -90,4 +96,31 @@ public void patch() throws IOException {\n         UserPatch actual = mapper.readValue(writer.toString(), UserPatch.class);\n         assertEquals(patch, actual);\n     }\n+\n+    @Test\n+    public void provisioningResult() throws IOException {\n+        GroupTO group = new GroupTO();\n+        group.setName(UUID.randomUUID().toString());\n+        group.setRealm(SyncopeConstants.ROOT_REALM);\n+        group.getVirAttrs().add(new AttrTO.Builder().schema(\"rvirtualdata\").value(\"rvirtualvalue\").build());\n+        group.getADynMembershipConds().put(\"USER\", \"username==a*\");\n+\n+        ProvisioningResult<GroupTO> original = new ProvisioningResult<>();\n+        original.setEntity(group);\n+\n+        PropagationStatus status = new PropagationStatus();\n+        status.setFailureReason(\"failed\");\n+        status.setBeforeObj(new ConnObjectTO());\n+        original.getPropagationStatuses().add(status);\n+\n+        ObjectMapper mapper = new ObjectMapper();\n+\n+        StringWriter writer = new StringWriter();\n+        mapper.writeValue(writer, original);\n+\n+        ProvisioningResult<GroupTO> actual = mapper.readValue(\n+                writer.toString(), new TypeReference<ProvisioningResult<GroupTO>>() {\n+        });\n+        assertEquals(original, actual);\n+    }\n }"}]}