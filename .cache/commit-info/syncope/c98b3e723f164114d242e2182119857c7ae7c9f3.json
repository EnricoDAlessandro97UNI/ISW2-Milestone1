{"sha":"c98b3e723f164114d242e2182119857c7ae7c9f3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM5OGIzZTcyM2YxNjQxMTRkMjQyZTIxODIxMTk4NTdjN2FlN2M5ZjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-24T07:47:28Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-24T07:47:41Z"},"message":"Extensive usage of SyncopeConstants.ROOT_REALM + review group search only when entitlement is owned","tree":{"sha":"5e2bd2237ba0b6a9de93e08165359f4d7ca30520","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5e2bd2237ba0b6a9de93e08165359f4d7ca30520"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c98b3e723f164114d242e2182119857c7ae7c9f3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c98b3e723f164114d242e2182119857c7ae7c9f3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c98b3e723f164114d242e2182119857c7ae7c9f3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c98b3e723f164114d242e2182119857c7ae7c9f3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ae5a7ff2079610452bc64e7b05519cbfec87839b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ae5a7ff2079610452bc64e7b05519cbfec87839b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ae5a7ff2079610452bc64e7b05519cbfec87839b"}],"stats":{"total":150,"additions":55,"deletions":95},"files":[{"sha":"59c490187f21ec04d23500fdf5a787fa0bb60d11","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=c98b3e723f164114d242e2182119857c7ae7c9f3","patch":"@@ -95,10 +95,10 @@ protected GroupDirectoryPanel(final String id, final Builder builder, final bool\n             protected Serializable onApplyInternal(\n                     final GroupTO groupTO, final String type, final AjaxRequestTarget target) {\n \n-                final AnyTypeRestClient typeRestClient = new AnyTypeRestClient();\n-                final AnyTypeClassRestClient classRestClient = new AnyTypeClassRestClient();\n+                AnyTypeRestClient typeRestClient = new AnyTypeRestClient();\n+                AnyTypeClassRestClient classRestClient = new AnyTypeClassRestClient();\n \n-                final AnyTypeTO anyTypeTO = typeRestClient.read(type);\n+                AnyTypeTO anyTypeTO = typeRestClient.read(type);\n \n                 ModalPanel panel = new AnyPanel(BaseModal.CONTENT_ID, anyTypeTO, null, null, false, pageRef) {\n \n@@ -116,7 +116,7 @@ protected Panel getDirectoryPanel(final String id) {\n \n                             panel = new UserDirectoryPanel.Builder(\n                                     classRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n-                                    setRealm(\"/\").\n+                                    setRealm(SyncopeConstants.ROOT_REALM).\n                                     setFiltered(true).\n                                     setFiql(query).\n                                     disableCheckBoxes().\n@@ -136,7 +136,7 @@ protected Panel getDirectoryPanel(final String id) {\n \n                             panel = new AnyObjectDirectoryPanel.Builder(\n                                     classRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n-                                    setRealm(\"/\").\n+                                    setRealm(SyncopeConstants.ROOT_REALM).\n                                     setFiltered(true).\n                                     setFiql(query).\n                                     disableCheckBoxes()."},{"sha":"ed17bc3010554cdf0ba12c008db8cd44a87b9784","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleDirectoryPanel.java","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleDirectoryPanel.java?ref=c98b3e723f164114d242e2182119857c7ae7c9f3","patch":"@@ -47,6 +47,7 @@\n import org.apache.syncope.client.console.wizards.role.RoleWrapper;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -145,7 +146,7 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n-                final RoleTO clone = SerializationUtils.clone(model.getObject());\n+                RoleTO clone = SerializationUtils.clone(model.getObject());\n                 clone.setKey(null);\n                 send(RoleDirectoryPanel.this, Broadcast.EXACT,\n                         new AjaxWizard.NewItemActionEvent<>(new RoleWrapper(clone), target));\n@@ -158,24 +159,24 @@ public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n-                final String query = SyncopeClient.getUserSearchConditionBuilder().and(\n+                String query = SyncopeClient.getUserSearchConditionBuilder().and(\n                         SyncopeClient.getUserSearchConditionBuilder().inRoles(model.getObject().getKey()),\n                         SyncopeClient.getUserSearchConditionBuilder().is(\"key\").notNullValue()).query();\n \n-                final AnyTypeRestClient typeRestClient = new AnyTypeRestClient();\n-                final AnyTypeClassRestClient classRestClient = new AnyTypeClassRestClient();\n+                AnyTypeRestClient typeRestClient = new AnyTypeRestClient();\n+                AnyTypeClassRestClient classRestClient = new AnyTypeClassRestClient();\n \n-                final AnyTypeTO anyTypeTO = typeRestClient.read(AnyTypeKind.USER.name());\n+                AnyTypeTO anyTypeTO = typeRestClient.read(AnyTypeKind.USER.name());\n \n                 ModalPanel panel = new AnyPanel(BaseModal.CONTENT_ID, anyTypeTO, null, null, false, pageRef) {\n \n                     private static final long serialVersionUID = -7514498203393023415L;\n \n                     @Override\n                     protected Panel getDirectoryPanel(final String id) {\n-                        final Panel panel = new UserDirectoryPanel.Builder(\n+                        Panel panel = new UserDirectoryPanel.Builder(\n                                 classRestClient.list(anyTypeTO.getClasses()), anyTypeTO.getKey(), pageRef).\n-                                setRealm(\"/\").\n+                                setRealm(SyncopeConstants.ROOT_REALM).\n                                 setFiltered(true).\n                                 setFiql(query).\n                                 disableCheckBoxes().\n@@ -208,7 +209,7 @@ protected Panel getDirectoryPanel(final String id) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n-                final ConsoleLayoutInfo info = new ConsoleLayoutInfo(model.getObject().getKey());\n+                ConsoleLayoutInfo info = new ConsoleLayoutInfo(model.getObject().getKey());\n                 info.setContent(restClient.readConsoleLayoutInfo(model.getObject().getKey()));\n \n                 utilityModal.header(new ResourceModel(\"console.layout.info\", \"JSON Content\"));"},{"sha":"6094143595b203a2ce8b95b0a82ff070e80a7d20","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=c98b3e723f164114d242e2182119857c7ae7c9f3","patch":"@@ -24,18 +24,20 @@\n import java.util.function.Function;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.search.SearchableFields;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.event.IEventSink;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n@@ -128,11 +130,9 @@ protected AbstractSearchPanel(\n         super(id);\n         populate();\n         Pair<IModel<Map<String, String>>, Integer> groupInfo =\n-                Pair.of(groupNames, groupRestClient.search(\"/\",\n-                        null,\n-                        1,\n-                        1,\n-                        new SortParam<>(\"name\", true)).getTotalCount());\n+                SyncopeConsoleSession.get().owns(StandardEntitlement.GROUP_SEARCH)\n+                ? Pair.of(groupNames, groupRestClient.count(SyncopeConstants.ROOT_REALM, null, null))\n+                : Pair.of(groupNames, 0);\n \n         this.model = builder.model;\n         this.typeKind = kind;\n@@ -185,10 +185,9 @@ protected List<String> load() {\n \n             @Override\n             protected Map<String, PlainSchemaTO> load() {\n-                final List<PlainSchemaTO> schemas = schemaRestClient.<PlainSchemaTO>getSchemas(\n-                        SchemaType.PLAIN, null, anyTypeRestClient.read(type).getClasses().toArray(new String[] {}));\n-\n-                return schemas.stream().collect(Collectors.toMap(schema -> schema.getKey(), Function.identity()));\n+                return schemaRestClient.<PlainSchemaTO>getSchemas(\n+                        SchemaType.PLAIN, null, anyTypeRestClient.read(type).getClasses().toArray(new String[] {})).\n+                        stream().collect(Collectors.toMap(schema -> schema.getKey(), Function.identity()));\n             }\n         };\n "},{"sha":"75c03ac5cc9e0ea40e53f0fdb5c629127fa4c6fa","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSearchPanel.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java?ref=c98b3e723f164114d242e2182119857c7ae7c9f3","patch":"@@ -19,9 +19,10 @@\n package org.apache.syncope.client.console.panels.search;\n \n import java.util.ArrayList;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n@@ -79,19 +80,12 @@ protected List<SearchClause.Type> load() {\n \n             @Override\n             protected Map<String, String> load() {\n-                List<GroupTO> res = groupRestClient.search(\"/\",\n+                return groupRestClient.search(SyncopeConstants.ROOT_REALM,\n                         null,\n                         1,\n                         MAX_GROUP_LIST_CARDINALITY,\n                         new SortParam<>(\"name\", true),\n-                        null);\n-\n-                final Map<String, String> result = new HashMap<>(res.size());\n-                for (GroupTO group : res) {\n-                    result.put(group.getKey(), group.getName());\n-                }\n-\n-                return result;\n+                        null).stream().collect(Collectors.toMap(GroupTO::getKey, GroupTO::getName));\n             }\n         };\n     }"},{"sha":"69e6e1ca21eef31131c7433d0b5abf1078d93cbb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=c98b3e723f164114d242e2182119857c7ae7c9f3","patch":"@@ -41,6 +41,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n@@ -397,8 +398,7 @@ protected void onEvent(final AjaxRequestTarget target) {\n                 if (field.getModel().getObject().getType() == Type.GROUP_MEMBERSHIP) {\n                     String[] inputAsArray = property.getField().getInputAsArray();\n \n-                    if (StringUtils.isBlank(property.getField().getInput())\n-                            || inputAsArray.length == 0) {\n+                    if (StringUtils.isBlank(property.getField().getInput()) || inputAsArray.length == 0) {\n                         property.setChoices(properties.getObject());\n                     } else {\n                         String inputValue = (inputAsArray.length > 1 && inputAsArray[1] != null)\n@@ -412,18 +412,15 @@ protected void onEvent(final AjaxRequestTarget target) {\n                                 ? inputValue : \"*\" + inputValue + \"*\");\n \n                         if (groupInfo.getRight() > AnyObjectSearchPanel.MAX_GROUP_LIST_CARDINALITY) {\n-                            List<GroupTO> filteredGroups = groupRestClient.search(\"/\",\n+                            property.setChoices(groupRestClient.search(\n+                                    SyncopeConstants.ROOT_REALM,\n                                     SyncopeClient.getGroupSearchConditionBuilder().\n                                             is(\"name\").equalToIgnoreCase(inputValue).\n                                             query(),\n                                     1,\n                                     AnyObjectSearchPanel.MAX_GROUP_LIST_CARDINALITY,\n                                     new SortParam<>(\"name\", true),\n-                                    null);\n-                            List<String> names = filteredGroups.stream().\n-                                    map(GroupTO::getName).collect(Collectors.toList());\n-                            Collections.sort(names);\n-                            property.setChoices(names);\n+                                    null).stream().map(GroupTO::getName).collect(Collectors.toList()));\n                         }\n                     }\n                 }"},{"sha":"9de89ef27ae0ee7310f57d21908999a2823e1f54","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSearchPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java?ref=c98b3e723f164114d242e2182119857c7ae7c9f3","patch":"@@ -92,5 +92,4 @@ protected List<SearchClause.Type> getAvailableTypes() {\n         result.add(SearchClause.Type.RELATIONSHIP);\n         return result;\n     }\n-\n }"},{"sha":"e5d642b0058816e6d66f2676e47dad6f29a76b41","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":3,"deletions":29,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=c98b3e723f164114d242e2182119857c7ae7c9f3","patch":"@@ -18,13 +18,11 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n-import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.BulkMembersActionType;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n@@ -77,33 +75,9 @@ public List<GroupTO> search(\n             final SortParam<String> sort,\n             final String type) {\n \n-        List<GroupTO> result = new ArrayList<>();\n-        PagedResult<GroupTO> res;\n-        do {\n-            res = getService(GroupService.class).\n-                    search(new AnyQuery.Builder().realm(realm).fiql(fiql).page(page).size(size).\n-                            orderBy(toOrderBy(sort)).details(false).build());\n-            result.addAll(res.getResult());\n-        } while (page == -1 && size == -1 && res.getNext() != null);\n-\n-        return result;\n-    }\n-\n-    public PagedResult<GroupTO> search(\n-            final String realm,\n-            final String fiql,\n-            final int page,\n-            final int size,\n-            final SortParam<String> sort) {\n-\n-        PagedResult<GroupTO> res;\n-        do {\n-            res = getService(GroupService.class).\n-                    search(new AnyQuery.Builder().realm(realm).fiql(fiql).page(page).size(size).\n-                            orderBy(toOrderBy(sort)).details(false).build());\n-        } while (page == -1 && size == -1 && res.getNext() != null);\n-\n-        return res;\n+        return getService(GroupService.class).\n+                search(new AnyQuery.Builder().realm(realm).fiql(fiql).page(page).size(size).\n+                        orderBy(toOrderBy(sort)).details(false).build()).getResult();\n     }\n \n     public void bulkMembersAction(final String key, final BulkMembersActionType actionType) {"},{"sha":"29e4111308d52c53d0a43286b61ed8d00fe4ef3b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":20,"deletions":24,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c98b3e723f164114d242e2182119857c7ae7c9f3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=c98b3e723f164114d242e2182119857c7ae7c9f3","patch":"@@ -22,16 +22,19 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.function.Function;\n import java.util.stream.Collectors;\n import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.ext.search.client.CompleteCondition;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.DynRealmRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.search.GroupFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.DynRealmTO;\n@@ -44,6 +47,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.ActionPermissions;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n@@ -246,23 +250,20 @@ private void reloadMemberships() {\n             // this is to be sure to have group names (required to see membership details in approval page)\n             GroupFiqlSearchConditionBuilder searchConditionBuilder = SyncopeClient.getGroupSearchConditionBuilder();\n \n-            List<CompleteCondition> conditions = new ArrayList<>();\n-            GroupableRelatableTO.class.cast(anyTO).getMemberships().forEach(membershipTO -> {\n-                conditions.add(searchConditionBuilder.is(\"key\").equalTo(membershipTO.getGroupKey()).wrap());\n-            });\n+            List<CompleteCondition> conditions = GroupableRelatableTO.class.cast(anyTO).getMemberships().\n+                    stream().map(membership\n+                            -> searchConditionBuilder.is(\"key\").equalTo(membership.getGroupKey()).wrap()).\n+                    collect(Collectors.toList());\n \n             Map<String, GroupTO> assignedGroups = new HashMap<>();\n             if (!conditions.isEmpty()) {\n-                groupRestClient.search(\n+                assignedGroups.putAll(groupRestClient.search(\n                         realm,\n                         searchConditionBuilder.isAssignable().and().or(conditions).query(),\n                         -1,\n                         -1,\n                         new SortParam<>(\"name\", true),\n-                        null).\n-                        forEach(group -> {\n-                            assignedGroups.put(group.getKey(), group);\n-                        });\n+                        null).stream().collect(Collectors.toMap(GroupTO::getKey, Function.identity())));\n             }\n \n             // set group names in membership TOs and remove membership not assignable\n@@ -290,26 +291,21 @@ public List<String> getDynMemberships() {\n         private void reloadDynMemberships() {\n             GroupFiqlSearchConditionBuilder searchConditionBuilder = SyncopeClient.getGroupSearchConditionBuilder();\n \n-            ArrayList<CompleteCondition> conditions = new ArrayList<>();\n-            GroupableRelatableTO.class.cast(anyTO).getDynMemberships().forEach(membership -> {\n-                conditions.add(searchConditionBuilder.is(\"key\").equalTo(membership.getGroupKey()).wrap());\n-            });\n+            List<CompleteCondition> conditions = GroupableRelatableTO.class.cast(anyTO).getDynMemberships().\n+                    stream().map(membership\n+                            -> searchConditionBuilder.is(\"key\").equalTo(membership.getGroupKey()).wrap()).\n+                    collect(Collectors.toList());\n \n-            Map<String, GroupTO> assignedGroups = new HashMap<>();\n-            if (!conditions.isEmpty()) {\n-                groupRestClient.search(\n-                        \"/\",\n+            dynMemberships = new ArrayList<>();\n+            if (SyncopeConsoleSession.get().owns(StandardEntitlement.GROUP_SEARCH) && !conditions.isEmpty()) {\n+                dynMemberships.addAll(groupRestClient.search(\n+                        SyncopeConstants.ROOT_REALM,\n                         searchConditionBuilder.or(conditions).query(),\n                         -1,\n                         -1,\n                         new SortParam<>(\"name\", true),\n-                        null).\n-                        forEach(group -> {\n-                            assignedGroups.put(group.getKey(), group);\n-                        });\n+                        null).stream().map(GroupTO::getName).collect(Collectors.toList()));\n             }\n-\n-            dynMemberships = assignedGroups.values().stream().map(GroupTO::getName).collect(Collectors.toList());\n         }\n \n         /**\n@@ -320,7 +316,7 @@ private void reload() {\n \n             if (Groups.this.templateMode) {\n                 reload = realm == null;\n-                realm = \"/\";\n+                realm = SyncopeConstants.ROOT_REALM;\n             } else {\n                 reload = !Groups.this.anyTO.getRealm().equalsIgnoreCase(realm);\n                 realm = Groups.this.anyTO.getRealm();"}]}