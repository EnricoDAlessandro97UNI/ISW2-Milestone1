{"sha":"55ed9db2deb61df70f3b07a8dae86e69100a50b2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU1ZWQ5ZGIyZGViNjFkZjcwZjNiMDdhOGRhZTg2ZTY5MTAwYTUwYjI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-26T13:06:53Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-26T13:06:53Z"},"message":"Better error reporting for validation errors\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246757 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"92796a3cdc6dec4e04bc386e1904305af1af3f6f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/92796a3cdc6dec4e04bc386e1904305af1af3f6f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/55ed9db2deb61df70f3b07a8dae86e69100a50b2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/55ed9db2deb61df70f3b07a8dae86e69100a50b2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/55ed9db2deb61df70f3b07a8dae86e69100a50b2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/55ed9db2deb61df70f3b07a8dae86e69100a50b2/comments","author":null,"committer":null,"parents":[{"sha":"c9c2ac76ff8dd37a8553a356ebd05dba8262eab0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c9c2ac76ff8dd37a8553a356ebd05dba8262eab0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c9c2ac76ff8dd37a8553a356ebd05dba8262eab0"}],"stats":{"total":82,"additions":65,"deletions":17},"files":[{"sha":"aca5f9f74704ac0dcb24c9be04f0331f2a410688","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AbstractValidator.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55ed9db2deb61df70f3b07a8dae86e69100a50b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55ed9db2deb61df70f3b07a8dae86e69100a50b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractValidator.java?ref=55ed9db2deb61df70f3b07a8dae86e69100a50b2","patch":"@@ -0,0 +1,28 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.validation.entity;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class AbstractValidator {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(\n+            AbstractValidator.class);\n+\n+}"},{"sha":"98bc3c98f39ecb9e316fc56a8e90da63fa9f5571","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttrValidator.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55ed9db2deb61df70f3b07a8dae86e69100a50b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55ed9db2deb61df70f3b07a8dae86e69100a50b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java?ref=55ed9db2deb61df70f3b07a8dae86e69100a50b2","patch":"@@ -16,20 +16,12 @@\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.syncope.core.persistence.beans.AbstractAttr;\n import org.syncope.types.EntityViolationType;\n \n-public class AttrValidator\n+public class AttrValidator extends AbstractValidator\n         implements ConstraintValidator<AttrCheck, AbstractAttr> {\n \n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            AttrValidator.class);\n-\n     @Override\n     public void initialize(final AttrCheck constraintAnnotation) {\n     }\n@@ -56,13 +48,16 @@ public boolean isValid(final AbstractAttr object,\n             }\n \n             if (!isValid) {\n-                LOG.error(\"Invalid values for attribute: \"\n+                LOG.error(\"Invalid values for attribute \" + object + \": \"\n                         + \"schema=\" + object.getSchema().getName() + \", \"\n                         + \"values={}\", object.getValuesAsStrings());\n \n                 context.disableDefaultConstraintViolation();\n                 context.buildConstraintViolationWithTemplate(\n                         EntityViolationType.InvalidValueList.toString()).\n+                        addNode(object\n+                        + \"(\" + object.getSchema().getName() + \")\"\n+                        + \"{\" + object.getValuesAsStrings() + \"}\").\n                         addConstraintViolation();\n             }\n         }"},{"sha":"ebff72f8b440a629caa3a7f36c3eb9b3bf29f0a7","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttrValueValidator.java","status":"modified","additions":20,"deletions":4,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55ed9db2deb61df70f3b07a8dae86e69100a50b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55ed9db2deb61df70f3b07a8dae86e69100a50b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java?ref=55ed9db2deb61df70f3b07a8dae86e69100a50b2","patch":"@@ -18,9 +18,10 @@\n import javax.validation.ConstraintValidatorContext;\n import org.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n+import org.syncope.core.persistence.beans.AbstractSchema;\n import org.syncope.types.EntityViolationType;\n \n-public class AttrValueValidator\n+public class AttrValueValidator extends AbstractValidator\n         implements ConstraintValidator<AttrValueCheck, AbstractAttrValue> {\n \n     @Override\n@@ -55,19 +56,34 @@ public boolean isValid(final AbstractAttrValue object,\n             isValid = nonNullVales == 1;\n \n             if (!isValid) {\n+                LOG.error(\"More than one non-null value for \" + object);\n+\n                 context.disableDefaultConstraintViolation();\n                 context.buildConstraintViolationWithTemplate(\n                         EntityViolationType.MoreThanOneNonNull.toString()).\n+                        addNode(object.toString().replaceAll(\"\\\\n\", \" \")).\n                         addConstraintViolation();\n             } else if (object instanceof AbstractAttrUniqueValue) {\n-                isValid = ((AbstractAttrUniqueValue) object).getSchema().equals(\n-                        object.getAttribute().getSchema());\n+                AbstractSchema uniqueValueSchema =\n+                        ((AbstractAttrUniqueValue) object).getSchema();\n+                AbstractSchema attrSchema = object.getAttribute().getSchema();\n+\n+                isValid = uniqueValueSchema.equals(attrSchema);\n \n                 if (!isValid) {\n+                    LOG.error(\"Unique value schema for \"\n+                            + object.getClass().getSimpleName()\n+                            + \"[\" + object.getId() + \"]\"\n+                            + \" is \" + uniqueValueSchema + \", while owning \"\n+                            + \"attribute schema is \" + attrSchema);\n+\n                     context.disableDefaultConstraintViolation();\n                     context.buildConstraintViolationWithTemplate(\n                             EntityViolationType.InvalidSchema.toString()).\n-                            addConstraintViolation();\n+                            addNode(object.getClass().getSimpleName()\n+                            + \"[\" + object.getId() + \"].schema=\"\n+                            + uniqueValueSchema\n+                            + \" != \" + attrSchema).addConstraintViolation();\n                 }\n             }\n         }"},{"sha":"e85a31cc0fc297009a452852ba66f88f6b18a61c","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SchemaValidator.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55ed9db2deb61df70f3b07a8dae86e69100a50b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55ed9db2deb61df70f3b07a8dae86e69100a50b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java?ref=55ed9db2deb61df70f3b07a8dae86e69100a50b2","patch":"@@ -19,7 +19,7 @@\n import org.syncope.core.persistence.beans.AbstractSchema;\n import org.syncope.types.EntityViolationType;\n \n-public class SchemaValidator\n+public class SchemaValidator extends AbstractValidator\n         implements ConstraintValidator<SchemaCheck, AbstractSchema> {\n \n     @Override\n@@ -39,10 +39,15 @@ public boolean isValid(final AbstractSchema object,\n                     ? !object.isUniqueConstraint() : true;\n \n             if (!isValid) {\n+                LOG.error(object + \" cannot be multivalue and have \"\n+                        + \"unique constraint at the same time\");\n+\n                 context.disableDefaultConstraintViolation();\n                 context.buildConstraintViolationWithTemplate(\n                         EntityViolationType.MultivalueAndUniqueConstraint.\n-                        toString()).addConstraintViolation();\n+                        toString()).\n+                        addNode(object.toString()).\n+                        addConstraintViolation();\n             }\n         }\n "},{"sha":"7963dbec9941b14d800ffb946cc95aff354ed0f1","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/TargetResourceValidator.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55ed9db2deb61df70f3b07a8dae86e69100a50b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FTargetResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55ed9db2deb61df70f3b07a8dae86e69100a50b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FTargetResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FTargetResourceValidator.java?ref=55ed9db2deb61df70f3b07a8dae86e69100a50b2","patch":"@@ -20,7 +20,7 @@\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.types.EntityViolationType;\n \n-public class TargetResourceValidator\n+public class TargetResourceValidator extends AbstractValidator\n         implements ConstraintValidator<TargetResourceCheck, TargetResource> {\n \n     @Override\n@@ -45,9 +45,13 @@ public boolean isValid(final TargetResource object,\n             isValid = accountIds == 1;\n \n             if (!isValid) {\n+                LOG.error(\"Mappings for \" + object\n+                        + \" have 0 or >1 account ids\");\n+\n                 context.disableDefaultConstraintViolation();\n                 context.buildConstraintViolationWithTemplate(\n                         EntityViolationType.InvalidAccountIdCount.toString()).\n+                        addNode(object + \".accountIds.size==\" + accountIds).\n                         addConstraintViolation();\n             }\n         }"}]}