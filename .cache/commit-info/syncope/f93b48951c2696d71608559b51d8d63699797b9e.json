{"sha":"f93b48951c2696d71608559b51d8d63699797b9e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY5M2I0ODk1MWMyNjk2ZDcxNjA4NTU5YjUxZDhkNjM2OTk3OTdiOWU=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-28T14:48:30Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-28T14:48:30Z"},"message":"[SYNCOPE-745] providing roles management","tree":{"sha":"02236596ce7c190ff8a3481751b2111f5d0725a1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/02236596ce7c190ff8a3481751b2111f5d0725a1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f93b48951c2696d71608559b51d8d63699797b9e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f93b48951c2696d71608559b51d8d63699797b9e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f93b48951c2696d71608559b51d8d63699797b9e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f93b48951c2696d71608559b51d8d63699797b9e/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"33fd83021e7aa0ba835c03c39d41c66b812b7c55","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/33fd83021e7aa0ba835c03c39d41c66b812b7c55","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/33fd83021e7aa0ba835c03c39d41c66b812b7c55"}],"stats":{"total":1249,"additions":1106,"deletions":143},"files":[{"sha":"05d18e3a89957e505cb7b14463c55b0a5211b371","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AnyDataProvider.java","status":"modified","additions":11,"deletions":13,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -24,23 +24,20 @@\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n \n-public class AnyDataProvider<T extends AnyTO> extends SortableDataProvider<T, String> {\n+public class AnyDataProvider<T extends AnyTO> extends SearchableDataProvider<T> {\n \n     private static final long serialVersionUID = 6267494272884913376L;\n \n     private final SortableAnyProviderComparator<T> comparator;\n \n-    private String fiql = null;\n-\n-    private final int paginatorRows;\n+    private final AbstractAnyRestClient<T> restClient;\n \n-    private final boolean filtered;\n+    protected String fiql;\n \n-    private final AbstractAnyRestClient<T> restClient;\n+    protected final boolean filtered;\n \n     private final String realm;\n \n@@ -53,11 +50,11 @@ public AnyDataProvider(\n             final String realm,\n             final String type) {\n \n-        super();\n+        super(paginatorRows);\n \n         this.restClient = restClient;\n+\n         this.filtered = filtered;\n-        this.paginatorRows = paginatorRows;\n \n         // default sorting\n         setSort(\"key\", SortOrder.ASCENDING);\n@@ -68,10 +65,6 @@ public AnyDataProvider(\n         this.type = type;\n     }\n \n-    public void setFIQL(final String fiql) {\n-        this.fiql = fiql;\n-    }\n-\n     @Override\n     public Iterator<T> iterator(final long first, final long count) {\n         List<T> result;\n@@ -103,6 +96,11 @@ public long size() {\n         return result;\n     }\n \n+    public AnyDataProvider<T> setFIQL(final String fiql) {\n+        this.fiql = fiql;\n+        return this;\n+    }\n+\n     @Override\n     public IModel<T> model(final T object) {\n         return new CompoundPropertyModel<>(object);"},{"sha":"ac38364e025bdd84fd30bcefba16e5de56ec1259","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -82,6 +82,12 @@ public final class Constants {\n \n     public static final String PREF_USERS_PAGINATOR_ROWS = \"users.paginator.rows\";\n \n+    public static final String PREF_ANYOBJECT_PAGINATOR_ROWS = \"anyobject.paginator.rows\";\n+\n+    public static final String PREF_GROUP_PAGINATOR_ROWS = \"group.paginator.rows\";\n+\n+    public static final String PREF_ROLE_PAGINATOR_ROWS = \"role.paginator.rows\";\n+\n     public static final String PREF_RESOURCES_PAGINATOR_ROWS = \"resources.paginator.rows\";\n \n     public static final String PREF_CONNECTORS_PAGINATOR_ROWS = \"connectors.paginator.rows\";"},{"sha":"5d85ec5749f3ed62a05db0e538b97f7b667396a6","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/RoleDataProvider.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleDataProvider.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+\n+public class RoleDataProvider extends SearchableDataProvider<RoleTO> {\n+\n+    private static final long serialVersionUID = 6267494272884913376L;\n+\n+    private final SortableDataProviderComparator<RoleTO> comparator;\n+\n+    private final RoleRestClient restClient = new RoleRestClient();\n+\n+    public RoleDataProvider(final int paginatorRows) {\n+        super(paginatorRows);\n+        this.comparator = new SortableDataProviderComparator<>(this);\n+    }\n+\n+    @Override\n+    public Iterator<RoleTO> iterator(final long first, final long count) {\n+        final List<RoleTO> result = restClient.list();\n+        Collections.sort(result, comparator);\n+        return result.iterator();\n+    }\n+\n+    @Override\n+    public long size() {\n+        return restClient.count();\n+    }\n+\n+    @Override\n+    public IModel<RoleTO> model(final RoleTO object) {\n+        return new CompoundPropertyModel<>(object);\n+    }\n+}"},{"sha":"37701a79d6edfa9f0fbdf2ff9f1d8a4ebc8573e9","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/SearchableDataProvider.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSearchableDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSearchableDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSearchableDataProvider.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import java.io.Serializable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+\n+public abstract class SearchableDataProvider<T extends Serializable> extends SortableDataProvider<T, String> {\n+\n+    private static final long serialVersionUID = 6267494272884913376L;\n+\n+    protected final int paginatorRows;\n+\n+    public SearchableDataProvider(final int paginatorRows) {\n+        super();\n+        this.paginatorRows = paginatorRows;\n+\n+        // default sorting\n+        setSort(\"key\", SortOrder.ASCENDING);\n+    }\n+}"},{"sha":"b7132cdea68b7f9b77975acfc96a6ec7cc186fb6","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -120,6 +120,11 @@ public BasePage(final PageParameters parameters) {\n         MetaDataRoleAuthorizationStrategy.authorize(typesLink, WebPage.ENABLE, StandardEntitlement.SCHEMA_LIST);\n         liContainer.add(typesLink);\n \n+        liContainer = new WebMarkupContainer(getLIContainerId(\"roles\"));\n+        confULContainer.add(liContainer);\n+        liContainer.add(new BookmarkablePageLink<>(\"roles\", Roles.class));\n+        MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.ROLE_LIST);\n+        \n         liContainer = new WebMarkupContainer(getLIContainerId(\"policies\"));\n         confULContainer.add(liContainer);\n         liContainer.add(new BookmarkablePageLink<>(\"policies\", Policies.class));"},{"sha":"7910c9a510aa8b03af66013ec95ae0e060004313","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Roles.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import static org.apache.wicket.Component.ENABLE;\n+\n+import org.apache.syncope.client.console.panels.RoleSearchResultPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.console.wizards.role.RoleHandler;\n+import org.apache.syncope.client.console.wizards.role.RoleWizardBuilder;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class Roles extends BasePage {\n+\n+    private static final long serialVersionUID = -1100228004207271271L;\n+\n+    public Roles(final PageParameters parameters) {\n+        super(parameters);\n+\n+        final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.add(new Label(\"header\", getString(\"header_title\", new Model<>(), \"Roles\")));\n+        content.setOutputMarkupId(true);\n+        add(content);\n+\n+        final WizardMgtPanel<RoleHandler> roleSearchResultPanel\n+                = new RoleSearchResultPanel.Builder(getPageReference()) {\n+\n+            private static final long serialVersionUID = -5960765294082359003L;\n+\n+        }.addNewItemPanelBuilder(new RoleWizardBuilder(BaseModal.CONTENT_ID, new RoleTO(), getPageReference()), false).\n+                build(\"roles\");\n+\n+        final AjaxLink<RoleTO> createLink = new AjaxLink<RoleTO>(\"add\") {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                send(roleSearchResultPanel, Broadcast.EXACT, new AjaxWizard.NewItemActionEvent<RoleTO>(null, target));\n+            }\n+        };\n+\n+        content.add(createLink);\n+        MetaDataRoleAuthorizationStrategy.authorize(createLink, ENABLE, StandardEntitlement.ROLE_CREATE);\n+\n+        content.add(roleSearchResultPanel);\n+    }\n+}"},{"sha":"d588a9ca8e79bc866702dd09eace50b6311d0958","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":30,"deletions":62,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -18,18 +18,17 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.io.Serializable;\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.client.console.PreferenceManager;\n-import org.apache.syncope.client.console.commons.AnyDataProvider;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.pages.AbstractBasePage;\n-import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n-import org.apache.syncope.client.console.wizards.any.AnyHandler;\n-import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -44,7 +43,9 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public abstract class AbstractSearchResultPanel<T extends AnyTO> extends WizardMgtPanel<AnyHandler<T>> {\n+public abstract class AbstractSearchResultPanel<\n+        T extends Serializable, W extends Serializable, DP extends SearchableDataProvider<T>, E extends BaseRestClient>\n+        extends WizardMgtPanel<W> {\n \n     private static final long serialVersionUID = -9170191461250434024L;\n \n@@ -55,12 +56,12 @@\n      */\n     protected PreferenceManager prefMan = new PreferenceManager();\n \n-    protected final AbstractAnyRestClient<T> restClient;\n+    protected final E restClient;\n \n     /**\n      * Number of rows per page.\n      */\n-    private final int rows;\n+    protected int rows;\n \n     /**\n      * Container used to refresh table.\n@@ -76,15 +77,10 @@\n      * Specify if results are about a filtered search or not. Using this attribute it is possible to use this panel to\n      * show results about user list and user search.\n      */\n-    private final boolean filtered;\n+    protected final boolean filtered;\n \n     private final boolean checkBoxEnabled;\n \n-    /**\n-     * Filter used in case of filtered search.\n-     */\n-    private String fiql;\n-\n     /**\n      * Result table.\n      */\n@@ -93,34 +89,23 @@\n     /**\n      * Data provider used to search for users.\n      */\n-    private AnyDataProvider<T> dataProvider;\n+    protected DP dataProvider;\n \n     /**\n      * Owner page.\n      */\n     protected final AbstractBasePage page;\n \n-    /**\n-     * Realm related to current panel.\n-     */\n-    private final String realm;\n+    protected AbstractSearchResultPanel(final String id, final Builder<T, W, E> builder) {\n \n-    /**\n-     * Any type related to current panel.\n-     */\n-    protected final String type;\n-\n-    protected AbstractSearchResultPanel(final String id, final Builder<T> builder) {\n-\n-        super(id, builder.getPageRef(), true);\n+        super(id, true);\n \n         setOutputMarkupId(true);\n \n         this.page = (AbstractBasePage) builder.getPageRef().getPage();\n \n         this.filtered = builder.filtered;\n         this.checkBoxEnabled = builder.checkBoxEnabled;\n-        this.fiql = builder.fiql;\n         this.feedbackPanel = page.getFeedbackPanel();\n \n         this.restClient = builder.restClient;\n@@ -130,14 +115,17 @@ protected AbstractSearchResultPanel(final String id, final Builder<T> builder) {\n         container.setOutputMarkupId(true);\n         add(container);\n \n-        rows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n-\n-        this.realm = builder.realm;\n-        this.type = builder.type;\n+        rows = prefMan.getPaginatorRows(getRequest(), paginatorRowsKey());\n \n         setWindowClosedReloadCallback(modal);\n     }\n \n+    protected abstract DP dataProvider();\n+\n+    protected abstract String paginatorRowsKey();\n+\n+    protected abstract List<IColumn<T, String>> getColumns();\n+\n     protected void initResultTable() {\n         // ---------------------------\n         // Result table initialization\n@@ -160,7 +148,7 @@ protected void initResultTable() {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_USERS_PAGINATOR_ROWS, String.valueOf(rows));\n+                prefMan.set(getRequest(), getResponse(), paginatorRowsKey(), String.valueOf(rows));\n \n                 final EventDataWrapper data = new EventDataWrapper();\n                 data.setTarget(target);\n@@ -173,9 +161,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         // ---------------------------\n     }\n \n-    public void search(final String fiql, final AjaxRequestTarget target) {\n-        this.fiql = fiql;\n-        dataProvider.setFIQL(fiql);\n+    public void search(final AjaxRequestTarget target) {\n         target.add(container);\n     }\n \n@@ -184,8 +170,7 @@ private void updateResultTable(final boolean create) {\n     }\n \n     private void updateResultTable(final boolean create, final int rows) {\n-        dataProvider = new AnyDataProvider<>(restClient, rows, filtered, realm, type);\n-        dataProvider.setFIQL(fiql);\n+        dataProvider = dataProvider();\n \n         final int currentPage = resultTable != null\n                 ? (create ? (int) resultTable.getPageCount() - 1 : (int) resultTable.getCurrentPage()) : 0;\n@@ -208,8 +193,6 @@ dataProvider, getPageId(), page.getPageReference()).\n         container.addOrReplace(resultTable);\n     }\n \n-    protected abstract List<IColumn<T, String>> getColumns();\n-\n     @Override\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof EventDataWrapper) {\n@@ -286,11 +269,12 @@ public void setRows(final int rows) {\n         }\n     }\n \n-    protected abstract <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions();\n+    protected abstract Collection<ActionLink.ActionType> getBulkActions();\n \n     protected abstract String getPageId();\n \n-    public abstract static class Builder<T extends AnyTO> extends WizardMgtPanel.Builder<AnyHandler<T>> {\n+    public abstract static class Builder<T extends Serializable, W extends Serializable, E extends BaseRestClient>\n+            extends WizardMgtPanel.Builder<W> {\n \n         private static final long serialVersionUID = 5088962796986706805L;\n \n@@ -307,44 +291,28 @@ public void setRows(final int rows) {\n          */\n         protected String fiql;\n \n-        protected final AbstractAnyRestClient<T> restClient;\n-\n-        /**\n-         * Realm related to current panel.\n-         */\n-        protected String realm = \"/\";\n-\n-        /**\n-         * Any type related to current panel.\n-         */\n-        protected final String type;\n+        protected final E restClient;\n \n-        protected Builder(final AbstractAnyRestClient<T> restClient, final String type, final PageReference pageRef) {\n+        protected Builder(final E restClient, final PageReference pageRef) {\n             super(pageRef);\n             this.restClient = restClient;\n-            this.type = type;\n         }\n \n-        public Builder<T> setFiltered(final boolean filtered) {\n+        public Builder<T, W, E> setFiltered(final boolean filtered) {\n             this.filtered = filtered;\n             return this;\n         }\n \n-        public Builder<T> disableCheckBoxes() {\n+        public Builder<T, W, E> disableCheckBoxes() {\n             this.checkBoxEnabled = false;\n             return this;\n         }\n \n-        public Builder<T> setFiql(final String fiql) {\n+        public Builder<T, W, E> setFiql(final String fiql) {\n             this.fiql = fiql;\n             return this;\n         }\n \n-        public Builder<T> setRealm(final String realm) {\n-            this.realm = realm;\n-            return this;\n-        }\n-\n         private PageReference getPageRef() {\n             return pageRef;\n         }"},{"sha":"badfbd5c724041ca16bced4c67d0bb3354c847fa","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectSearchResultPanel.java","status":"modified","additions":63,"deletions":9,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -26,6 +26,7 @@\n import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.syncope.client.console.commons.AnyDataProvider;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.AnyDisplayAttributesModalPage;\n import org.apache.syncope.client.console.pages.BasePage;\n@@ -56,7 +57,8 @@\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n-public class AnyObjectSearchResultPanel<T extends AnyTO> extends AbstractSearchResultPanel<T> {\n+public class AnyObjectSearchResultPanel<T extends AnyTO>\n+        extends AbstractSearchResultPanel<T, AnyHandler<T>, AnyDataProvider<T>, AbstractAnyRestClient<T>> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n@@ -66,10 +68,28 @@\n \n     protected final List<String> dSchemaNames;\n \n-    protected final String pageID = \"Any\";\n+    private final String pageID = \"Any\";\n \n-    protected AnyObjectSearchResultPanel(final String id, final AbstractSearchResultPanel.Builder<T> builder) {\n+    /**\n+     * Filter used in case of filtered search.\n+     */\n+    private String fiql;\n+\n+    /**\n+     * Realm related to current panel.\n+     */\n+    protected final String realm;\n+\n+    /**\n+     * Any type related to current panel.\n+     */\n+    protected final String type;\n+\n+    protected AnyObjectSearchResultPanel(final String id, final Builder<T> builder) {\n         super(id, builder);\n+        this.realm = builder.realm;\n+        this.type = builder.type;\n+        this.fiql = builder.fiql;\n \n         modal.size(Modal.Size.Large);\n \n@@ -87,6 +107,17 @@ protected AnyObjectSearchResultPanel(final String id, final AbstractSearchResult\n         initResultTable();\n     }\n \n+    @Override\n+    protected AnyDataProvider<T> dataProvider() {\n+        final AnyDataProvider<T> dp = new AnyDataProvider<>(restClient, rows, filtered, realm, type);\n+        return dp.setFIQL(this.fiql);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_ANYOBJECT_PAGINATOR_ROWS;\n+    }\n+\n     @Override\n     protected List<IColumn<T, String>> getColumns() {\n         final List<IColumn<T, String>> columns = new ArrayList<>();\n@@ -214,8 +245,14 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n         return columns;\n     }\n \n+    public void search(final String fiql, final AjaxRequestTarget target) {\n+        this.fiql = fiql;\n+        dataProvider.setFIQL(fiql);\n+        super.search(target);\n+    }\n+\n     @Override\n-    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n         final List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n \n         bulkActions.add(ActionLink.ActionType.DELETE);\n@@ -235,26 +272,43 @@ public interface AnySearchResultPanelBuilder extends Serializable {\n         List<AnyTypeClassTO> getAnyTypeClassTOs();\n     }\n \n-    public static final class Builder extends AbstractSearchResultPanel.Builder<AnyObjectTO>\n+    public static class Builder<T extends AnyTO>\n+            extends AbstractSearchResultPanel.Builder<T, AnyHandler<T>, AbstractAnyRestClient<T>>\n             implements AnySearchResultPanelBuilder {\n \n         private static final long serialVersionUID = -6828423611982275640L;\n \n+        /**\n+         * Realm related to current panel.\n+         */\n+        protected String realm = \"/\";\n+\n+        /**\n+         * Any type related to current panel.\n+         */\n+        protected final String type;\n+\n         private final List<AnyTypeClassTO> anyTypeClassTOs;\n \n         public Builder(\n                 final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final AbstractAnyRestClient<AnyObjectTO> restClient,\n+                final AbstractAnyRestClient<T> restClient,\n                 final String type,\n                 final PageReference pageRef) {\n \n-            super(restClient, type, pageRef);\n+            super(restClient, pageRef);\n             this.anyTypeClassTOs = anyTypeClassTOs;\n+            this.type = type;\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyHandler<AnyObjectTO>> newInstance(final String id) {\n-            return new AnyObjectSearchResultPanel<>(id, this);\n+        protected WizardMgtPanel<AnyHandler<T>> newInstance(final String id) {\n+            return new AnyObjectSearchResultPanel<T>(id, this);\n+        }\n+\n+        public Builder<T> setRealm(final String realm) {\n+            this.realm = realm;\n+            return this;\n         }\n \n         @Override"},{"sha":"8ac8812b6443944705edf194d58d9b64d654dbbc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":13,"deletions":15,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -41,7 +41,6 @@\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.client.console.wizards.any.GroupHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n@@ -59,10 +58,17 @@ public class GroupSearchResultPanel extends AnyObjectSearchResultPanel<GroupTO>\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n+    private final String pageID = \"Groups\";\n+\n     protected GroupSearchResultPanel(final String id, final Builder builder) {\n         super(id, builder);\n     }\n \n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_GROUP_PAGINATOR_ROWS;\n+    }\n+\n     @Override\n     protected List<IColumn<GroupTO, String>> getColumns() {\n         final List<IColumn<GroupTO, String>> columns = new ArrayList<>();\n@@ -114,7 +120,7 @@ public ActionLinksPanel<GroupTO> getActions(final String componentId, final IMod\n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                         send(GroupSearchResultPanel.this, Broadcast.EXACT,\n                                 new AjaxWizard.EditItemActionEvent<GroupHandler>(\n                                         new GroupHandler(new GroupRestClient().read(model.getObject().getKey())),\n@@ -125,7 +131,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                         final GroupTO clone = SerializationUtils.clone(model.getObject());\n                         clone.setKey(0L);\n                         send(GroupSearchResultPanel.this, Broadcast.EXACT,\n@@ -136,7 +142,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                         try {\n                             restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n@@ -187,7 +193,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n     }\n \n     @Override\n-    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n         final List<ActionType> bulkActions = new ArrayList<>();\n \n         bulkActions.add(ActionType.DELETE);\n@@ -202,31 +208,23 @@ protected String getPageId() {\n         return pageID;\n     }\n \n-    public static class Builder extends AbstractSearchResultPanel.Builder<GroupTO>\n+    public static class Builder extends AnyObjectSearchResultPanel.Builder<GroupTO>\n             implements AnySearchResultPanelBuilder {\n \n         private static final long serialVersionUID = 1L;\n \n-        private final List<AnyTypeClassTO> anyTypeClassTOs;\n-\n         public Builder(\n                 final List<AnyTypeClassTO> anyTypeClassTOs,\n                 final AbstractAnyRestClient<GroupTO> restClient,\n                 final String type,\n                 final PageReference pageRef) {\n \n-            super(restClient, type, pageRef);\n-            this.anyTypeClassTOs = anyTypeClassTOs;\n+            super(anyTypeClassTOs, restClient, type, pageRef);\n         }\n \n         @Override\n         protected WizardMgtPanel<AnyHandler<GroupTO>> newInstance(final String id) {\n             return new GroupSearchResultPanel(id, this);\n         }\n-\n-        @Override\n-        public List<AnyTypeClassTO> getAnyTypeClassTOs() {\n-            return this.anyTypeClassTOs;\n-        }\n     }\n }"},{"sha":"c1ac5b18c753d42344be67a533ee7d9705e50ea3","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -98,9 +98,8 @@ private ListViewPanel(\n             final ActionLinksPanel.Builder<T> actions,\n             final CheckAvailability check,\n             final boolean reuseItem,\n-            final IModel<? extends Collection<T>> model,\n-            final PageReference pageRef) {\n-        super(id, pageRef);\n+            final IModel<? extends Collection<T>> model) {\n+        super(id);\n         setOutputMarkupId(true);\n \n         this.check = Model.of(check);\n@@ -341,7 +340,7 @@ protected Component getValueComponent(final String key, final T bean) {\n \n         @Override\n         protected WizardMgtPanel<T> newInstance(final String id) {\n-            return new ListViewPanel<T>(id, items, reference, includes, actions, check, reuseItem, model, pageRef) {\n+            return new ListViewPanel<T>(id, items, reference, includes, actions, check, reuseItem, model) {\n \n                 private static final long serialVersionUID = 1L;\n "},{"sha":"1a581694a6b1debc46a7020665da9db5e5b53a89","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -149,7 +149,7 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 final AnyObjectTO anyObjectTO = new AnyObjectTO();\n                 anyObjectTO.setRealm(realmTO.getFullPath());\n                 anyObjectTO.setType(anyTypeTO.getKey());\n-                panel = new AnyObjectSearchResultPanel.Builder(\n+                panel = new AnyObjectSearchResultPanel.Builder<AnyObjectTO>(\n                         anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n                         anyObjectRestClient,\n                         anyTypeTO.getKey(),"},{"sha":"7986cd6c8ea503b0daffbfb9720f9dabe81de2d8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RoleSearchResultPanel.java","status":"added","additions":179,"deletions":0,"changes":179,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,179 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.RoleDataProvider;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.console.wizards.role.RoleHandler;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class RoleSearchResultPanel\n+        extends AbstractSearchResultPanel<RoleTO, RoleHandler, RoleDataProvider, RoleRestClient> {\n+\n+    private static final long serialVersionUID = -1100228004207271270L;\n+\n+    private final String pageID = \"Roles\";\n+\n+    protected RoleSearchResultPanel(final String id, final Builder builder) {\n+        super(id, builder);\n+        modal.size(Modal.Size.Large);\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected RoleDataProvider dataProvider() {\n+        return new RoleDataProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_ROLE_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected List<IColumn<RoleTO, String>> getColumns() {\n+        final List<IColumn<RoleTO, String>> columns = new ArrayList<>();\n+\n+        columns.add(new PropertyColumn<RoleTO, String>(new ResourceModel(\"key\", \"key\"), \"key\", \"key\"));\n+        columns.add(new PropertyColumn<RoleTO, String>(\n+                new ResourceModel(\"entitlements\", \"entitlements\"), \"entitlements\", \"entitlements\"));\n+        columns.add(new PropertyColumn<RoleTO, String>(\n+                new ResourceModel(\"realms\", \"realms\"), \"realms\", \"realms\"));\n+\n+        columns.add(new ActionColumn<RoleTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel<RoleTO> getActions(final String componentId, final IModel<RoleTO> model) {\n+                final ActionLinksPanel.Builder<RoleTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                panel.add(new ActionLink<RoleTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                        send(RoleSearchResultPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<RoleHandler>(\n+                                        new RoleHandler(new RoleRestClient().read(model.getObject().getKey())),\n+                                        target));\n+                    }\n+                }, ActionLink.ActionType.EDIT, StandardEntitlement.ROLE_READ).add(new ActionLink<RoleTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                        final RoleTO clone = SerializationUtils.clone(model.getObject());\n+                        clone.setKey(null);\n+                        send(RoleSearchResultPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.NewItemActionEvent<RoleHandler>(new RoleHandler(clone), target));\n+                    }\n+                }, ActionLink.ActionType.CLONE, StandardEntitlement.ROLE_CREATE).add(new ActionLink<RoleTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                        try {\n+                            restClient.delete(model.getObject().getKey());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (SyncopeClientException e) {\n+                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                        }\n+                        ((BasePage) getPage()).getFeedbackPanel().refresh(target);\n+                    }\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.ROLE_DELETE);\n+\n+                return panel.build(componentId);\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<RoleTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<RoleTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                return panel.add(new ActionLink<RoleTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final RoleTO ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.ROLE_LIST).build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        final List<ActionType> bulkActions = new ArrayList<>();\n+        bulkActions.add(ActionType.DELETE);\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected String getPageId() {\n+        return pageID;\n+    }\n+\n+    public abstract static class Builder\n+            extends AbstractSearchResultPanel.Builder<RoleTO, RoleHandler, RoleRestClient> {\n+\n+        private static final long serialVersionUID = 5088962796986706805L;\n+\n+        public Builder(final PageReference pageRef) {\n+            super(new RoleRestClient(), pageRef);\n+        }\n+\n+        @Override\n+        protected WizardMgtPanel<RoleHandler> newInstance(final String id) {\n+            return new RoleSearchResultPanel(id, this);\n+        }\n+    }\n+}"},{"sha":"65b49472932f40ca7960f175f1481e386816790f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":10,"deletions":13,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -42,7 +42,6 @@\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n@@ -62,10 +61,17 @@ public class UserSearchResultPanel extends AnyObjectSearchResultPanel<UserTO> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n+    private final String pageID = \"Users\";\n+\n     protected UserSearchResultPanel(final String id, final Builder builder) {\n         super(id, builder);\n     }\n \n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_USERS_PAGINATOR_ROWS;\n+    }\n+\n     @Override\n     protected List<IColumn<UserTO, String>> getColumns() {\n \n@@ -227,7 +233,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n     }\n \n     @Override\n-    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n         final List<ActionType> bulkActions = new ArrayList<>();\n \n         bulkActions.add(ActionType.DELETE);\n@@ -242,31 +248,22 @@ protected String getPageId() {\n         return pageID;\n     }\n \n-    public static class Builder extends AbstractSearchResultPanel.Builder<UserTO>\n-            implements AnySearchResultPanelBuilder {\n+    public static class Builder extends AnyObjectSearchResultPanel.Builder<UserTO> {\n \n         private static final long serialVersionUID = 1L;\n \n-        private final List<AnyTypeClassTO> anyTypeClassTOs;\n-\n         public Builder(\n                 final List<AnyTypeClassTO> anyTypeClassTOs,\n                 final AbstractAnyRestClient<UserTO> restClient,\n                 final String type,\n                 final PageReference pageRef) {\n \n-            super(restClient, type, pageRef);\n-            this.anyTypeClassTOs = anyTypeClassTOs;\n+            super(anyTypeClassTOs, restClient, type, pageRef);\n         }\n \n         @Override\n         protected WizardMgtPanel<AnyHandler<UserTO>> newInstance(final String id) {\n             return new UserSearchResultPanel(id, this);\n         }\n-\n-        @Override\n-        public List<AnyTypeClassTO> getAnyTypeClassTOs() {\n-            return this.anyTypeClassTOs;\n-        }\n     }\n }"},{"sha":"e6b5b2bc1731e22674fd008bfb5bf3ab93a02fce","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSelectionSearchResultPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -36,7 +36,6 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n-import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n@@ -140,7 +139,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n     }\n \n     @Override\n-    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n     }\n "},{"sha":"c37e670db1d7e5ec36f27ccc193ae9fb66d7978c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSelectionSearchResultPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -36,7 +36,6 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n-import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n@@ -142,7 +141,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n     }\n \n     @Override\n-    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n         return Collections.<ActionLink.ActionType>emptyList();\n     }\n "},{"sha":"a2ec3692dd3e7bacd87f248ad72a67cb7656122f","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RoleRestClient.java","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n+\n+import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.rest.api.service.RoleService;\n@@ -31,7 +34,35 @@ public class RoleRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 1L;\n \n+    public void delete(final String key) {\n+        getService(RoleService.class).delete(key);\n+    }\n+\n+    public RoleTO read(final String key) {\n+        return getService(RoleService.class).read(key);\n+    }\n+\n+    public void update(final RoleTO roleTO) {\n+        getService(RoleService.class).update(roleTO);\n+    }\n+\n+    public void create(final RoleTO roleTO) {\n+        getService(RoleService.class).create(roleTO);\n+    }\n+\n     public List<RoleTO> getAll() {\n         return getService(RoleService.class).list();\n     }\n+\n+    public List<RoleTO> list() {\n+        return getService(RoleService.class).list();\n+    }\n+\n+    public int count() {\n+        return getService(RoleService.class).list().size();\n+    }\n+\n+    public List<String> getAllAvailableEntitlements() {\n+        return new ArrayList<>(getSyncopeService().info().getEntitlements());\n+    }\n }"},{"sha":"bdeb26ced7ede3f7859f96c8a08b68960d94d694","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":61,"deletions":5,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -20,6 +20,7 @@\n \n import java.io.Serializable;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.Iterator;\n@@ -32,6 +33,7 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n+import org.apache.wicket.extensions.markup.html.form.palette.component.Recorder;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n@@ -94,18 +96,72 @@ private void initialize(final IModel<List<T>> model, final Builder<T> builder) {\n         this.palette = new NonI18nPalette<T>(\n                 \"paletteField\", model, choicesModel, builder.renderer, 8, builder.allowOrder, builder.allowMoveAll) {\n \n-                    private static final long serialVersionUID = -3074655279011678437L;\n+            private static final long serialVersionUID = -3074655279011678437L;\n+\n+            @Override\n+            protected Component newAvailableHeader(final String componentId) {\n+                return new Label(componentId, new ResourceModel(\"palette.available\", builder.availableLabel));\n+            }\n+\n+            @Override\n+            protected Component newSelectedHeader(final String componentId) {\n+                return new Label(componentId, new ResourceModel(\"palette.selected\", builder.selectedLabel));\n+            }\n+\n+            @Override\n+            protected Recorder<T> newRecorderComponent() {\n+                return new Recorder<T>(\"recorder\", this) {\n+\n+                    private static final long serialVersionUID = -9169109967480083523L;\n \n                     @Override\n-                    protected Component newAvailableHeader(final String componentId) {\n-                        return new Label(componentId, new ResourceModel(\"palette.available\", builder.availableLabel));\n+                    public List<T> getUnselectedList() {\n+                        final IChoiceRenderer<? super T> renderer = getPalette().getChoiceRenderer();\n+                        final Collection<? extends T> choices = getPalette().getChoices();\n+                        final List<T> unselected = new ArrayList<>(choices.size());\n+                        final List<String> ids = Arrays.asList(getValue().split(\",\"));\n+\n+                        for (final T choice : choices) {\n+                            final String choiceId = renderer.getIdValue(choice, 0);\n+\n+                            if (!ids.contains(choiceId)) {\n+                                unselected.add(choice);\n+                            }\n+                        }\n+\n+                        return unselected;\n                     }\n \n                     @Override\n-                    protected Component newSelectedHeader(final String componentId) {\n-                        return new Label(componentId, new ResourceModel(\"palette.selected\", builder.selectedLabel));\n+                    public List<T> getSelectedList() {\n+                        final IChoiceRenderer<? super T> renderer = getPalette().getChoiceRenderer();\n+                        final Collection<? extends T> choices = getPalette().getChoices();\n+                        final List<T> selected = new ArrayList<>(choices.size());\n+\n+                        // reduce number of method calls by building a lookup table\n+                        final Map<T, String> idForChoice = new HashMap<>(choices.size());\n+                        for (final T choice : choices) {\n+                            idForChoice.put(choice, renderer.getIdValue(choice, 0));\n+                        }\n+\n+                        final String value = getValue();\n+                        int start = value.indexOf(';') + 1;\n+\n+                        for (final String id : Strings.split(value.substring(start), ',')) {\n+                            for (final T choice : choices) {\n+                                final String idValue = idForChoice.get(choice);\n+                                if (id.equals(idValue)) {\n+                                    selected.add(choice);\n+                                    break;\n+                                }\n+                            }\n+                        }\n+\n+                        return selected;\n                     }\n                 };\n+            }\n+        };\n \n         add(palette.setOutputMarkupId(true));\n "},{"sha":"56b1cc5e46df1038a5a5ce179e060f009734b96a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":31,"deletions":10,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -51,8 +51,6 @@\n \n     private NotificationPanel notificationPanel;\n \n-    private final PageReference pageRef;\n-\n     /**\n      * Modal window.\n      */\n@@ -70,14 +68,13 @@ protected void onConfigure() {\n \n     private final boolean wizardInModal;\n \n-    protected WizardMgtPanel(final String id, final PageReference pageRef) {\n-        this(id, pageRef, false);\n+    protected WizardMgtPanel(final String id) {\n+        this(id, false);\n     }\n \n-    protected WizardMgtPanel(final String id, final PageReference pageRef, final boolean wizardInModal) {\n+    protected WizardMgtPanel(final String id, final boolean wizardInModal) {\n         super(id);\n         setOutputMarkupId(true);\n-        this.pageRef = pageRef;\n         this.wizardInModal = wizardInModal;\n \n         add(modal);\n@@ -156,12 +153,13 @@ public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n     }\n \n-    private WizardMgtPanel<T> addNewItemPanelBuilder(final AjaxWizardBuilder<T> panelBuilder) {\n+    private WizardMgtPanel<T> addNewItemPanelBuilder(\n+            final AjaxWizardBuilder<T> panelBuilder, final boolean newItemDefaultButtonEnabled) {\n         this.newItemPanelBuilder = panelBuilder;\n \n         if (this.newItemPanelBuilder != null) {\n-            addAjaxLink.setEnabled(true);\n-            addAjaxLink.setVisible(true);\n+            addAjaxLink.setEnabled(newItemDefaultButtonEnabled);\n+            addAjaxLink.setVisible(newItemDefaultButtonEnabled);\n         }\n \n         return this;\n@@ -185,6 +183,8 @@ private WizardMgtPanel<T> addNotificationPanel(final NotificationPanel notificat\n \n         private AjaxWizardBuilder<T> newItemPanelBuilder;\n \n+        private boolean newItemDefaultButtonEnabled = true;\n+\n         private NotificationPanel notificationPanel;\n \n         protected Builder(final PageReference pageRef) {\n@@ -200,14 +200,35 @@ protected Builder(final PageReference pageRef) {\n          * @return List view.\n          */\n         public WizardMgtPanel<T> build(final String id) {\n-            return newInstance(id).addNewItemPanelBuilder(newItemPanelBuilder).addNotificationPanel(notificationPanel);\n+            return newInstance(id).\n+                    addNewItemPanelBuilder(newItemPanelBuilder, newItemDefaultButtonEnabled).\n+                    addNotificationPanel(notificationPanel);\n         }\n \n         public Builder<T> addNewItemPanelBuilder(final AjaxWizardBuilder<T> panelBuilder) {\n             this.newItemPanelBuilder = panelBuilder;\n             return this;\n         }\n \n+        /**\n+         * Adds new item panel builder.\n+         *\n+         * @param panelBuilder new item panel builder.\n+         * @param newItemDefaultButtonEnabled enable default button to adda new item.\n+         * @return the current builder.\n+         */\n+        public Builder<T> addNewItemPanelBuilder(\n+                final AjaxWizardBuilder<T> panelBuilder, final boolean newItemDefaultButtonEnabled) {\n+            this.newItemDefaultButtonEnabled = newItemDefaultButtonEnabled;\n+            return addNewItemPanelBuilder(panelBuilder);\n+        }\n+\n+        /**\n+         * Adds new item panel builder and enables default button to adda new item.\n+         *\n+         * @param notificationPanel new item panel builder.\n+         * @return the current builder.\n+         */\n         public Builder<T> addNotificationPanel(final NotificationPanel notificationPanel) {\n             this.notificationPanel = notificationPanel;\n             return this;"},{"sha":"59fc58d7f0bd0849ec3439fd2866738079e864ad","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupHandler.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -36,8 +36,8 @@ public class GroupHandler extends AnyHandler<GroupTO> {\n \n     private Map<String, List<SearchClause>> aDynClauses;\n \n-    public GroupHandler(final GroupTO anyTO) {\n-        super(anyTO);\n+    public GroupHandler(final GroupTO groupTO) {\n+        super(groupTO);\n     }\n \n     public List<SearchClause> getUDynClauses() {"},{"sha":"19ce19620d86d51e16f0bbfe62aa51cc092b0a82","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleHandler.java","status":"added","additions":73,"deletions":0,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleHandler.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.role;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.panels.search.SearchUtils;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+\n+public class RoleHandler implements Serializable {\n+\n+    private static final long serialVersionUID = 8058288034211558376L;\n+\n+    private final RoleTO roleTO;\n+\n+    private List<SearchClause> dynClauses;\n+\n+    public RoleHandler(final RoleTO roleTO) {\n+        this.roleTO = roleTO;\n+    }\n+\n+    public List<SearchClause> getDynClauses() {\n+        if (this.dynClauses == null) {\n+            this.dynClauses = SearchUtils.getSearchClauses(this.roleTO.getDynMembershipCond());\n+        }\n+        return this.dynClauses;\n+    }\n+\n+    public void setDynClauses(final List<SearchClause> dynClauses) {\n+        this.dynClauses = dynClauses;\n+    }\n+\n+    public String getDynMembershipCond() {\n+        if (CollectionUtils.isEmpty(this.dynClauses)) {\n+            return this.roleTO.getDynMembershipCond();\n+        } else {\n+            return getFIQLString(this.dynClauses, SyncopeClient.getUserSearchConditionBuilder());\n+        }\n+    }\n+\n+    private String getFIQLString(final List<SearchClause> clauses, final AbstractFiqlSearchConditionBuilder bld) {\n+        return SearchUtils.buildFIQL(clauses, bld);\n+    }\n+\n+    public RoleTO fillDynamicConditions() {\n+        this.roleTO.setDynMembershipCond(this.getDynMembershipCond());\n+        return this.roleTO;\n+    }\n+\n+    public RoleTO getInnerObject() {\n+        return this.roleTO;\n+    }\n+}"},{"sha":"b14bf7a88241f810311cd1c3abceafcbdd0135b8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder.java","status":"added","additions":167,"deletions":0,"changes":167,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,167 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.role;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.Collapsible;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.client.console.rest.RoleRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class RoleWizardBuilder extends AjaxWizardBuilder<RoleHandler> {\n+\n+    private static final long serialVersionUID = 5945391813567245081L;\n+\n+    private final RoleRestClient groupRestClient = new RoleRestClient();\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param roleTO role\n+     * @param pageRef Caller page reference.\n+     */\n+    public RoleWizardBuilder(final String id, final RoleTO roleTO, final PageReference pageRef) {\n+        super(id, new RoleHandler(roleTO), pageRef);\n+    }\n+\n+    /**\n+     * This method has been overridden to manage asynchronous translation of FIQL string to search clases list and\n+     * viceversa.\n+     *\n+     * @param item wizard backend item.\n+     * @return the current builder.\n+     */\n+    @Override\n+    public AjaxWizardBuilder<RoleHandler> setItem(final RoleHandler item) {\n+        return item == null ? super.setItem(item) : super.setItem(new RoleHandler(item.getInnerObject()));\n+    }\n+\n+    @Override\n+    protected void onApplyInternal(final RoleHandler modelObject) {\n+        modelObject.fillDynamicConditions();\n+        if (getOriginalItem() == null || getOriginalItem().getInnerObject() == null\n+                || StringUtils.isBlank(getOriginalItem().getInnerObject().getKey())) {\n+            groupRestClient.create(modelObject.getInnerObject());\n+        } else {\n+            groupRestClient.update(modelObject.getInnerObject());\n+        }\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final RoleHandler modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new Details(modelObject));\n+        wizardModel.add(new Entitlements(modelObject.getInnerObject()));\n+        wizardModel.add(new Realms(modelObject.getInnerObject()));\n+        return wizardModel;\n+    }\n+\n+    @Override\n+    protected void onCancelInternal(final RoleHandler modelObject) {\n+        // nothing to do\n+    }\n+\n+    public static class Details extends WizardStep {\n+\n+        private static final long serialVersionUID = 5514523040031722255L;\n+\n+        public Details(final RoleHandler modelObject) {\n+            add(new AjaxTextFieldPanel(\n+                    \"key\", \"key\", new PropertyModel<String>(modelObject.getInnerObject(), \"key\"), false));\n+\n+            // ------------------------\n+            // dynMembershipCond\n+            // ------------------------\n+            add(new Collapsible(\"dynMembershipCond\", Collections.<ITab>singletonList(\n+                    new AbstractTab(new ResourceModel(\"dynMembershipCond\", \"Dynamic USER Membership Conditions\")) {\n+\n+                private static final long serialVersionUID = 1037272333056449378L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new UserSearchPanel.Builder(\n+                            new PropertyModel<List<SearchClause>>(modelObject, \"dynClauses\")).\n+                            required(false).build(panelId);\n+                }\n+            }), Model.of(StringUtils.isBlank(modelObject.getDynMembershipCond()) ? -1 : 0)).setOutputMarkupId(true));\n+            // ------------------------ \n+        }\n+    }\n+\n+    public static class Entitlements extends WizardStep {\n+\n+        private static final long serialVersionUID = 5514523040031722256L;\n+\n+        public Entitlements(final RoleTO modelObject) {\n+            add(new AjaxPalettePanel.Builder<String>().build(\"entitlements\",\n+                    new PropertyModel<List<String>>(modelObject, \"entitlements\") {\n+\n+                private static final long serialVersionUID = -7809699384012595307L;\n+\n+                @Override\n+                public List<String> getObject() {\n+                    return new ArrayList<>(modelObject.getEntitlements());\n+                }\n+\n+                @Override\n+                public void setObject(final List<String> object) {\n+                    modelObject.getEntitlements().clear();\n+                    modelObject.getEntitlements().addAll(object);\n+                }\n+            }, new ListModel<>(new RoleRestClient().getAllAvailableEntitlements())).setOutputMarkupId(true));\n+        }\n+    }\n+\n+    public static class Realms extends WizardStep {\n+\n+        private static final long serialVersionUID = 5514523040031722257L;\n+\n+        public Realms(final RoleTO modelObject) {\n+            add(new AjaxPalettePanel.Builder<String>().build(\"realms\",\n+                    new PropertyModel<List<String>>(modelObject, \"realms\"),\n+                    new ListModel<>(\n+                            CollectionUtils.collect(new RealmRestClient().list(), new Transformer<RealmTO, String>() {\n+\n+                                @Override\n+                                public String transform(final RealmTO input) {\n+                                    return input.getFullPath();\n+                                }\n+                            }, new ArrayList<String>()))).setOutputMarkupId(true));\n+        }\n+    }\n+\n+}"},{"sha":"b24dbdccf70628d51537004558afb3ad084815c8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -110,6 +110,7 @@\n             <li wicket:id=\"configurationLI\" class=\"treeview\">\n               <a href=\"#\"><i class=\"fa fa-edit\"></i><span>Configuration</span> <i class=\"fa fa-angle-left pull-right\"></i></a>\n               <ul wicket:id=\"configurationUL\" class=\"treeview-menu\">\n+                <li wicket:id=\"rolesLI\"><a href=\"#\" wicket:id=\"roles\"><i class=\"fa fa-users\"></i>Roles</a></li>\n                 <li wicket:id=\"policiesLI\"><a href=\"#\" wicket:id=\"policies\"><i class=\"fa fa-circle-o\"></i>Policies</a></li>\n                 <li wicket:id=\"securityquestionsLI\"><a href=\"#\" wicket:id=\"securityquestions\"><i class=\"fa fa-circle-o\"></i>Security Questions</a></li>\n                 <li wicket:id=\"workflowLI\"><a href=\"#\" wicket:id=\"workflow\"><i class=\"fa fa-circle-o\"></i>Workflow</a></li>"},{"sha":"4180c56901fa12b177ab624ac40f02cfa5f1e3e9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Roles.html","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.html?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,48 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div class=\"wrapper\">\n+      <div class=\"admin-content-page\" wicket:id=\"content\">\n+        <div class=\"box box-solid box-primary\">\n+          <div class=\"box-header with-border\">\n+            <h3 class=\"box-title\">\n+              <span wicket:id=\"header\"></span>\n+            </h3>\n+            <div class=\"box-tools pull-right\">\n+              <ul class=\"nav navbar-nav actions\">\n+                <li>\n+                  <a wicket:message=\"title:add\" alt=\"add icon\" wicket:id=\"add\">\n+                    <i class=\"glyphicon glyphicon-plus\"></i>\n+                  </a>                  \n+                </li>\n+              </ul>\n+            </div>\n+          </div>\n+          <div class=\"box-body\">\n+            <div class=\"realms\">\n+              <div wicket:id=\"roles\"></div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"f03583ab2d0c4907260189814fe646a28435972b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Roles.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.properties?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+header_title=Roles\n+add=Create new Role"},{"sha":"c9797dd95323fac12259c12fc2bc2753ee24860c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Roles_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles_it.properties?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+header_title=Ruoli\n+add=Crea un nuovo Ruolo"},{"sha":"e9ebe1c1e946e5ae0247af694cdd14f6a3add052","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Roles_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles_pt_BR.properties?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+header_title=Fun\\u00e7\\u00e3os\n+add=Cria um novo fun\\u00e7\\u00e3o"},{"sha":"8d357658e63ca2501da2b616d06ca097a61af176","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/SecurityQuestions.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -30,7 +30,7 @@ <h3 class=\"box-title\">\n               <ul class=\"nav navbar-nav actions\">\n                 <li>\n                   <a wicket:message=\"title:createSecurityQuestion\" wicket:id=\"createSecurityQuestion\">\n-                    <i class=\"glyphicon glyphicon-link\"></i>\n+                    <i class=\"glyphicon glyphicon-plus\"></i>\n                   </a>                  \n                 </li>\n               </ul>"},{"sha":"70e378ae96eb2e393672705cbf9442c0ab30576c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -29,6 +29,6 @@ creationDate=Data Creazione\n tokenValued=Valued\n tokenNotValued=Not valued\n \n-any.edit=Modifica ${type} ${key}\n-any.new=Nuovo ${type}\n+any.edit=Modifica ${anyTO.type} ${key}\n+any.new=Nuovo ${anyTO.type}\n any.attr.display=Attributes to be displayed"},{"sha":"889e6f024bfd62d68a885d4880fe854f7b8137d3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -29,6 +29,6 @@ creationDate=Data de Cria\\u00e7\\u00e3o\n tokenValued=Atribu\\u00eddo\n tokenNotValued=N\\u00e3o Atribu\\u00eddo\n \n-any.edit=Alterar ${type} ${key}\n-any.new=Novo ${type}\n+any.edit=Alterar ${anyTO.type} ${key}\n+any.new=Novo ${anyTO.type}\n any.attr.display=Attributes to be displayed"},{"sha":"441110e7eb83693a6c8fb431171d99cf18faf178","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleSearchResultPanel.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel.properties?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit role ${roleTO.key}\n+any.new=New role"},{"sha":"b0485462888323747f7227b6957d962a152da569","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleSearchResultPanel_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel_it.properties?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica ruolo ${roleTO.key}\n+any.new=Nuovo ruolo"},{"sha":"9ae44c5263a27242c98a0e9bd0fd4d1fa07ac05b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RoleSearchResultPanel_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRoleSearchResultPanel_pt_BR.properties?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Alterar fun\\u00e7\\u00e3o ${roleTO.key}\n+any.new=Novo fun\\u00e7\\u00e3o"},{"sha":"80ebc0cc5e3eed2eed1ba3911f4ac4d02e96914c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder$Details.html","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder%24Details.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder%24Details.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder%24Details.html?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,29 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"key\">[NAME]</span>\n+      </div>\n+      <div wicket:id=\"dynMembershipCond\" />\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"f14d054c8f10475eaa65ab80378da3c1e61cdd80","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder$Entitlements.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder%24Entitlements.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder%24Entitlements.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder%24Entitlements.html?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"entitlements\">[ENTITLEMENTS]</span>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"7c3d20e75fdedffee3a556a4c7c004f7091c9446","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder$Realms.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder%24Realms.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f93b48951c2696d71608559b51d8d63699797b9e/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder%24Realms.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder%24Realms.html?ref=f93b48951c2696d71608559b51d8d63699797b9e","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"realms\">[REALMS]</span>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>"}]}