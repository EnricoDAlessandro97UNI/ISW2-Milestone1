{"sha":"e080c73064c69c3e04240f2eed3efdde5ac17ecd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUwODBjNzMwNjRjNjljM2UwNDI0MGYyZWVkM2VmZGRlNWFjMTdlY2Q=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-06T10:04:14Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-06T10:04:14Z"},"message":"[SYNCOPE-650] onError() methods added","tree":{"sha":"52e30bfe41c249f9eaa1ff0c47e1108aedb358dd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/52e30bfe41c249f9eaa1ff0c47e1108aedb358dd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e080c73064c69c3e04240f2eed3efdde5ac17ecd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e080c73064c69c3e04240f2eed3efdde5ac17ecd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e080c73064c69c3e04240f2eed3efdde5ac17ecd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e080c73064c69c3e04240f2eed3efdde5ac17ecd/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"62193429f899535bbd55490f1d38a41e4ffbb7ac","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/62193429f899535bbd55490f1d38a41e4ffbb7ac","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/62193429f899535bbd55490f1d38a41e4ffbb7ac"}],"stats":{"total":196,"additions":149,"deletions":47},"files":[{"sha":"cb6d64380926dcf8b0cb6863ca9ddb1944ba5b3d","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationActions.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationActions.java?ref=e080c73064c69c3e04240f2eed3efdde5ac17ecd","patch":"@@ -26,5 +26,7 @@ public interface PropagationActions {\n \n     void before(PropagationTask task, ConnectorObject beforeObj);\n \n+    void onError(PropagationTask task, TaskExec execution, Exception error);\n+\n     void after(PropagationTask task, TaskExec execution, ConnectorObject afterObj);\n }"},{"sha":"f66acdeb737c65f4fb107107f37808a9d8a67256","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/sync/PushActions.java","status":"modified","additions":44,"deletions":29,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FPushActions.java?ref=e080c73064c69c3e04240f2eed3efdde5ac17ecd","patch":"@@ -31,109 +31,124 @@ public interface PushActions extends ProvisioningActions {\n     /**\n      * Action to be executed before to assign (link & provision) a synchronized user / group to the resource.\n      *\n-     * @param profile profile of the synchronization being executed.\n+     * @param profile profile of the push being executed.\n      * @param subject user / group to be created.\n      * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends Subject<?, ?, ?>> T beforeAssign(\n-            final ProvisioningProfile<?, ?> profile,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to provision a synchronized user / group to the resource.\n      *\n-     * @param profile profile of the synchronization being executed.\n+     * @param profile profile of the push being executed.\n      * @param subject user / group to be created.\n      * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends Subject<?, ?, ?>> T beforeProvision(\n-            final ProvisioningProfile<?, ?> profile,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to update a synchronized user / group on the resource.\n      *\n-     * @param profile profile of the synchronization being executed.\n+     * @param profile profile of the push being executed.\n      * @param subject user / group to be updated.\n      * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends Subject<?, ?, ?>> T beforeUpdate(\n-            final ProvisioningProfile<?, ?> profile,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to link a synchronized user / group to the resource.\n      *\n-     * @param profile profile of the synchronization being executed.\n+     * @param profile profile of the push being executed.\n      * @param subject user / group to be created.\n      * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends Subject<?, ?, ?>> T beforeLink(\n-            final ProvisioningProfile<?, ?> profile,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to unlink a synchronized user / group from the resource.\n      *\n-     * @param profile profile of the synchronization being executed.\n+     * @param profile profile of the push being executed.\n      * @param subject user / group to be created.\n      * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends Subject<?, ?, ?>> T beforeUnlink(\n-            final ProvisioningProfile<?, ?> profile,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to unassign a synchronized user / group from the resource.\n      *\n-     * @param profile profile of the synchronization being executed.\n+     * @param profile profile of the push being executed.\n      * @param subject user / group to be created.\n      * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends Subject<?, ?, ?>> T beforeUnassign(\n-            final ProvisioningProfile<?, ?> profile,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to unassign a synchronized user / group from the resource.\n      *\n-     * @param profile profile of the synchronization being executed.\n+     * @param profile profile of the push being executed.\n      * @param subject user / group to be created.\n      * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends Subject<?, ?, ?>> T beforeDeprovision(\n-            final ProvisioningProfile<?, ?> profile,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before delete a synchronized user / group locally and from the resource.\n      *\n-     * @param profile profile of the synchronization being executed.\n+     * @param profile profile of the push being executed.\n      * @param subject user / group to be created.\n      * @return subject.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends Subject<?, ?, ?>> T beforeDelete(\n-            final ProvisioningProfile<?, ?> profile,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            T subject) throws JobExecutionException;\n \n     /**\n-     * Action to be executed after each local user / group synchronization.\n+     * Action to be executed after user / group push goes on error.\n      *\n-     * @param profile profile of the synchronization being executed.\n+     * @param profile profile of the push being executed.\n+     * @param subject synchronized user / group.\n+     * @param result operation result.\n+     * @param error error being reported\n+     * @throws JobExecutionException in case of generic failure\n+     */\n+    <T extends Subject<?, ?, ?>> void onError(\n+            ProvisioningProfile<?, ?> profile,\n+            T subject,\n+            ProvisioningResult result,\n+            Exception error) throws JobExecutionException;\n+\n+    /**\n+     * Action to be executed after each local user / group push.\n+     *\n+     * @param profile profile of the push being executed.\n      * @param subject synchronized user / group.\n      * @param result operation result.\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends Subject<?, ?, ?>> void after(\n-            final ProvisioningProfile<?, ?> profile,\n-            final T subject,\n-            final ProvisioningResult result) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            T subject,\n+            ProvisioningResult result) throws JobExecutionException;\n }"},{"sha":"ba577de2c170440714e6bcb3ba6af049e52363c1","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/sync/SyncActions.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FSyncActions.java?ref=e080c73064c69c3e04240f2eed3efdde5ac17ecd","patch":"@@ -160,6 +160,22 @@ <T extends AbstractSubjectTO> SyncDelta beforeDelete(\n             SyncDelta delta,\n             T subject) throws JobExecutionException;\n \n+    /**\n+     * Action to be executed when user / group synchronization goes on error.\n+     *\n+     * @param profile profile of the synchronization being executed.\n+     * @param delta retrieved synchronization information (may be modified by\n+     * 'beforeProvision/beforeUpdate/beforeDelete')\n+     * @param result global synchronization results at the current synchronization step\n+     * @param error error being reported\n+     * @throws JobExecutionException in case of generic failure\n+     */\n+    void onError(\n+            ProvisioningProfile<?, ?> profile,\n+            SyncDelta delta,\n+            ProvisioningResult result,\n+            Exception error) throws JobExecutionException;\n+\n     /**\n      * Action to be executed after each local user / group synchronization.\n      *"},{"sha":"38563249b81c8c404281bbc601f0a410e1b50f26","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=e080c73064c69c3e04240f2eed3efdde5ac17ecd","patch":"@@ -342,6 +342,10 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n                     ? PropagationTaskExecStatus.SUCCESS.name()\n                     : PropagationTaskExecStatus.SUBMITTED.name());\n \n+            for (PropagationActions action : actions) {\n+                action.after(task, execution, afterObj);\n+            }\n+\n             LOG.debug(\"Successfully propagated to {}\", task.getResource());\n             result = Result.SUCCESS;\n         } catch (Exception e) {\n@@ -373,6 +377,10 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n             }\n \n             propagationAttempted.add(task.getPropagationOperation().name().toLowerCase());\n+\n+            for (PropagationActions action : actions) {\n+                action.onError(task, execution, e);\n+            }\n         } finally {\n             // Try to read remote object (user / group) AFTER any actual operation\n             if (connector != null) {\n@@ -416,10 +424,6 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n             }\n         }\n \n-        for (PropagationActions action : actions) {\n-            action.after(task, execution, afterObj);\n-        }\n-\n         notificationManager.createTasks(\n                 AuditElements.EventCategoryType.PROPAGATION,\n                 task.getSubjectType().name().toLowerCase(),"},{"sha":"23726ed8b5fd7de9c27cffae8ba34bbda1ac86cd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationActions.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationActions.java?ref=e080c73064c69c3e04240f2eed3efdde5ac17ecd","patch":"@@ -30,9 +30,16 @@ public abstract class DefaultPropagationActions implements PropagationActions {\n \n     @Override\n     public void before(final PropagationTask task, final ConnectorObject beforeObj) {\n+        // do nothing\n+    }\n+\n+    @Override\n+    public void onError(final PropagationTask task, final TaskExec execution, final Exception error) {\n+        // do nothing\n     }\n \n     @Override\n     public void after(final PropagationTask task, final TaskExec execution, final ConnectorObject afterObj) {\n+        // do nothing\n     }\n }"},{"sha":"5a63f8e5bbf6785d7fc9c7e702d5f686fe9d5008","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractPushResultHandler.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java?ref=e080c73064c69c3e04240f2eed3efdde5ac17ecd","patch":"@@ -271,6 +271,11 @@ protected final void doHandle(final long subjectId)\n                 output = e;\n \n                 LOG.warn(\"Error pushing {} towards {}\", subject, profile.getTask().getResource(), e);\n+\n+                for (PushActions action : profile.getActions()) {\n+                    action.onError(this.getProfile(), subject, result, e);\n+                }\n+\n                 throw new JobExecutionException(e);\n             } finally {\n                 notificationManager.createTasks(AuditElements.EventCategoryType.PUSH,"},{"sha":"b3a73dfa153ae02ea78b4efcf31dd5bbdad5d800","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractSyncResultHandler.java","status":"modified","additions":49,"deletions":14,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java?ref=e080c73064c69c3e04240f2eed3efdde5ac17ecd","patch":"@@ -185,20 +185,28 @@ private void create(\n             for (SyncActions action : profile.getActions()) {\n                 action.after(this.getProfile(), delta, actual, result);\n             }\n+        } catch (IgnoreProvisionException e) {\n+            throw e;\n         } catch (PropagationException e) {\n             // A propagation failure doesn't imply a synchronization failure.\n             // The propagation exception status will be reported into the propagation task execution.\n             LOG.error(\"Could not propagate {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n             output = e;\n             resultStatus = Result.FAILURE;\n-        } catch (IgnoreProvisionException e) {\n-            throw e;\n+\n+            for (SyncActions action : profile.getActions()) {\n+                action.onError(this.getProfile(), delta, result, e);\n+            }\n         } catch (Exception e) {\n             result.setStatus(ProvisioningResult.Status.FAILURE);\n             result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n             LOG.error(\"Could not create {} {} \", attrUtils.getType(), delta.getUid().getUidValue(), e);\n             output = e;\n             resultStatus = Result.FAILURE;\n+\n+            for (SyncActions action : profile.getActions()) {\n+                action.onError(this.getProfile(), delta, result, e);\n+            }\n         }\n \n         audit(operation, resultStatus, null, output, delta);\n@@ -262,22 +270,30 @@ protected List<ProvisioningResult> update(final SyncDelta delta, final List<Long\n                         resultStatus = Result.SUCCESS;\n                         result.setName(getName(updated));\n                         LOG.debug(\"{} {} successfully updated\", attrUtils.getType(), key);\n+                    } catch (IgnoreProvisionException e) {\n+                        throw e;\n                     } catch (PropagationException e) {\n                         // A propagation failure doesn't imply a synchronization failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n-                        LOG.error(\"Could not propagate {} {}\", \n+                        LOG.error(\"Could not propagate {} {}\",\n                                 attrUtils.getType(), workingDelta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n-                    } catch (IgnoreProvisionException e) {\n-                        throw e;\n+\n+                        for (SyncActions action : profile.getActions()) {\n+                            action.onError(this.getProfile(), workingDelta, result, e);\n+                        }\n                     } catch (Exception e) {\n                         result.setStatus(ProvisioningResult.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n-                        LOG.error(\"Could not update {} {}\", \n+                        LOG.error(\"Could not update {} {}\",\n                                 attrUtils.getType(), workingDelta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n+\n+                        for (SyncActions action : profile.getActions()) {\n+                            action.onError(this.getProfile(), workingDelta, result, e);\n+                        }\n                     }\n                 }\n                 audit(MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, workingDelta);\n@@ -349,20 +365,28 @@ protected List<ProvisioningResult> deprovision(\n \n                         resultStatus = Result.SUCCESS;\n                         LOG.debug(\"{} {} successfully updated\", attrUtils.getType(), id);\n+                    } catch (IgnoreProvisionException e) {\n+                        throw e;\n                     } catch (PropagationException e) {\n                         // A propagation failure doesn't imply a synchronization failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n                         LOG.error(\"Could not propagate {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n-                    } catch (IgnoreProvisionException e) {\n-                        throw e;\n+\n+                        for (SyncActions action : profile.getActions()) {\n+                            action.onError(this.getProfile(), delta, result, e);\n+                        }\n                     } catch (Exception e) {\n                         result.setStatus(ProvisioningResult.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                         LOG.error(\"Could not update {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n+\n+                        for (SyncActions action : profile.getActions()) {\n+                            action.onError(this.getProfile(), delta, result, e);\n+                        }\n                     }\n                 }\n                 audit(unlink\n@@ -436,20 +460,28 @@ protected List<ProvisioningResult> link(\n \n                         resultStatus = Result.SUCCESS;\n                         LOG.debug(\"{} {} successfully updated\", attrUtils.getType(), id);\n+                    } catch (IgnoreProvisionException e) {\n+                        throw e;\n                     } catch (PropagationException e) {\n                         // A propagation failure doesn't imply a synchronization failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n                         LOG.error(\"Could not propagate {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n-                    } catch (IgnoreProvisionException e) {\n-                        throw e;\n+\n+                        for (SyncActions action : profile.getActions()) {\n+                            action.onError(this.getProfile(), delta, result, e);\n+                        }\n                     } catch (Exception e) {\n                         result.setStatus(ProvisioningResult.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                         LOG.error(\"Could not update {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n+\n+                        for (SyncActions action : profile.getActions()) {\n+                            action.onError(this.getProfile(), delta, result, e);\n+                        }\n                     }\n                 }\n                 audit(unlink ? MatchingRule.toEventName(MatchingRule.UNLINK)\n@@ -500,24 +532,27 @@ protected List<ProvisioningResult> delete(\n                         doDelete(id);\n                         output = null;\n                         resultStatus = Result.SUCCESS;\n+\n+                        for (SyncActions action : profile.getActions()) {\n+                            action.after(this.getProfile(), workingDelta, before, result);\n+                        }\n                     } catch (IgnoreProvisionException e) {\n                         throw e;\n                     } catch (Exception e) {\n                         result.setStatus(ProvisioningResult.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n                         LOG.error(\"Could not delete {} {}\", attrUtils.getType(), id, e);\n                         output = e;\n-                    }\n \n-                    for (SyncActions action : profile.getActions()) {\n-                        action.after(this.getProfile(), workingDelta, before, result);\n+                        for (SyncActions action : profile.getActions()) {\n+                            action.onError(this.getProfile(), workingDelta, result, e);\n+                        }\n                     }\n \n                     audit(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, workingDelta);\n                 }\n \n                 delResults.add(result);\n-\n             } catch (NotFoundException e) {\n                 LOG.error(\"Could not find {} {}\", attrUtils.getType(), id, e);\n             } catch (UnauthorizedException e) {"},{"sha":"fa5f843030df56c326b3ce0aa07c5ba331d323da","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/DefaultPushActions.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultPushActions.java?ref=e080c73064c69c3e04240f2eed3efdde5ac17ecd","patch":"@@ -75,14 +75,26 @@ public void beforeAll(final ProvisioningProfile<?, ?> profile) throws JobExecuti\n         return subject;\n     }\n \n+    @Override\n+    public <T extends Subject<?, ?, ?>> void onError(\n+            final ProvisioningProfile<?, ?> profile, final T subject, final ProvisioningResult result,\n+            final Exception error) throws JobExecutionException {\n+\n+        // do nothing\n+    }\n+\n     @Override\n     public <T extends Subject<?, ?, ?>> void after(\n             final ProvisioningProfile<?, ?> profile, final T subject, final ProvisioningResult result)\n             throws JobExecutionException {\n+\n+        // do nothing\n     }\n \n     @Override\n     public void afterAll(final ProvisioningProfile<?, ?> profile)\n             throws JobExecutionException {\n+\n+        // do nothing\n     }\n }"},{"sha":"8f3432adb9f339e822fb8e7978ac70d23bb74cc9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/DefaultSyncActions.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e080c73064c69c3e04240f2eed3efdde5ac17ecd/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultSyncActions.java?ref=e080c73064c69c3e04240f2eed3efdde5ac17ecd","patch":"@@ -101,6 +101,12 @@ public <T extends AbstractSubjectTO> SyncDelta beforeUnlink(\n         return delta;\n     }\n \n+    @Override\n+    public void onError(\n+            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final ProvisioningResult result,\n+            final Exception error) throws JobExecutionException {\n+    }\n+\n     @Override\n     public <T extends AbstractSubjectTO> void after(\n             final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final T subject,"}]}