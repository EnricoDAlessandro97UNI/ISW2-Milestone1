{"sha":"66a75481e5f936654eb4be21526c8e1185fb2a51","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY2YTc1NDgxZTVmOTM2NjU0ZWI0YmUyMTUyNmM4ZTExODVmYjJhNTE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-03-06T13:26:31Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-03-06T13:53:11Z"},"message":"[SYNCOPE-1444] Passing SyncDelta as argument","tree":{"sha":"cafa08eed13ba72cdcf06f51ece350281dd12978","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cafa08eed13ba72cdcf06f51ece350281dd12978"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/66a75481e5f936654eb4be21526c8e1185fb2a51","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/66a75481e5f936654eb4be21526c8e1185fb2a51","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/66a75481e5f936654eb4be21526c8e1185fb2a51","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/66a75481e5f936654eb4be21526c8e1185fb2a51/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b31e471101b9188757e2bc3cc7ea7fc6f192922e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b31e471101b9188757e2bc3cc7ea7fc6f192922e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b31e471101b9188757e2bc3cc7ea7fc6f192922e"}],"stats":{"total":69,"additions":40,"deletions":29},"files":[{"sha":"383afc245aea237d1a13ca476ff2edeb44f4aba1","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/implementations/MyPullCorrelationRule.groovy","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/66a75481e5f936654eb4be21526c8e1185fb2a51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullCorrelationRule.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/66a75481e5f936654eb4be21526c8e1185fb2a51/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullCorrelationRule.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fimplementations%2FMyPullCorrelationRule.groovy?ref=66a75481e5f936654eb4be21526c8e1185fb2a51","patch":"@@ -20,13 +20,13 @@ import groovy.transform.CompileStatic\n import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond\n import org.apache.syncope.core.persistence.api.entity.resource.Provision\n-import org.identityconnectors.framework.common.objects.ConnectorObject\n+import org.identityconnectors.framework.common.objects.SyncDelta\n \n @CompileStatic\n class MyPullCorrelationRule implements PullCorrelationRule {\n \n   @Override\n-  SearchCond getSearchCond(ConnectorObject connObj, Provision provision) {\n+  SearchCond getSearchCond(SyncDelta syncDelta, Provision provision) {\n     \n   }\n }"},{"sha":"24c13e3f4ad004f1f70255957bf9c98c63af6f86","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PullCorrelationRule.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPullCorrelationRule.java?ref=66a75481e5f936654eb4be21526c8e1185fb2a51","patch":"@@ -21,7 +21,7 @@\n import org.apache.syncope.common.lib.policy.PullCorrelationRuleConf;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n-import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n \n /**\n  * Interface for correlation rule to be evaluated during PullJob execution.\n@@ -34,9 +34,9 @@ default void setConf(PullCorrelationRuleConf conf) {\n     /**\n      * Return a search condition.\n      *\n-     * @param connObj connector object.\n+     * @param syncDelta change operation, including external attributes\n      * @param provision resource provision\n      * @return search condition.\n      */\n-    SearchCond getSearchCond(ConnectorObject connObj, Provision provision);\n+    SearchCond getSearchCond(SyncDelta syncDelta, Provision provision);\n }"},{"sha":"16302eccfbfe36268bc289daf13ed2871f801ed8","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/DefaultPullCorrelationRule.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FDefaultPullCorrelationRule.java?ref=66a75481e5f936654eb4be21526c8e1185fb2a51","patch":"@@ -31,9 +31,9 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Item;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.identityconnectors.framework.common.objects.Attribute;\n-import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.persistence.api.dao.PullCorrelationRuleConfClass;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n \n @PullCorrelationRuleConfClass(DefaultPullCorrelationRuleConf.class)\n public class DefaultPullCorrelationRule implements PullCorrelationRule {\n@@ -51,7 +51,7 @@ public void setConf(final PullCorrelationRuleConf conf) {\n     }\n \n     @Override\n-    public SearchCond getSearchCond(final ConnectorObject connObj, final Provision provision) {\n+    public SearchCond getSearchCond(final SyncDelta syncDelta, final Provision provision) {\n         Map<String, Item> mappingItems = provision.getMapping().getItems().stream().\n                 collect(Collectors.toMap(Item::getIntAttrName, Function.identity()));\n \n@@ -62,7 +62,7 @@ public SearchCond getSearchCond(final ConnectorObject connObj, final Provision p\n             Item item = mappingItems.get(schema);\n             Attribute attr = item == null\n                     ? null\n-                    : connObj.getAttributeByName(item.getExtAttrName());\n+                    : syncDelta.getObject().getAttributeByName(item.getExtAttrName());\n             if (attr == null) {\n                 throw new IllegalArgumentException(\n                         \"Connector object does not contains the attributes to perform the search: \" + schema);"},{"sha":"a53174ad77432fcb97a5e62d883d7df97da7d24e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=66a75481e5f936654eb4be21526c8e1185fb2a51","patch":"@@ -339,7 +339,6 @@ public void handleResult(final SearchResult result) {\n             public boolean handle(final ConnectorObject object) {\n                 return handler.handle(new SyncDeltaBuilder().\n                         setObject(object).\n-                        setUid(object.getUid()).\n                         setDeltaType(SyncDeltaType.CREATE_OR_UPDATE).\n                         setToken(new SyncToken(\"\")).\n                         build());"},{"sha":"950d7e8804f94914b6b7e21d125cdcc4c87b627e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=66a75481e5f936654eb4be21526c8e1185fb2a51","patch":"@@ -784,7 +784,7 @@ protected void doHandle(final SyncDelta delta, final Provision provision) throws\n                 processed.getDeltaType(), processed.getUid().getUidValue(), processed.getObject().getObjectClass());\n \n         try {\n-            List<String> keys = pullUtils.match(processed.getObject(), provision, anyUtils);\n+            List<String> keys = pullUtils.match(processed, provision, anyUtils);\n             LOG.debug(\"Match(es) found for {} as {}: {}\",\n                     processed.getUid().getUidValue(), processed.getObject().getObjectClass(), keys);\n "},{"sha":"43c2eb8a8ee1cdc79fdb376e341eb0c0e0fa14be","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=66a75481e5f936654eb4be21526c8e1185fb2a51","patch":"@@ -678,7 +678,7 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n         LOG.debug(\"Transformed {} for {} as {}\",\n                 processed.getDeltaType(), processed.getUid().getUidValue(), processed.getObject().getObjectClass());\n \n-        List<String> keys = pullUtils.match(processed.getObject(), orgUnit);\n+        List<String> keys = pullUtils.match(processed, orgUnit);\n         LOG.debug(\"Match found for {} as {}: {}\",\n                 processed.getUid().getUidValue(), processed.getObject().getObjectClass(), keys);\n "},{"sha":"dd4380069b6195c345c0063e8d3a3084df60d984","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullUtils.java","status":"modified","additions":25,"deletions":13,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/66a75481e5f936654eb4be21526c8e1185fb2a51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java?ref=66a75481e5f936654eb4be21526c8e1185fb2a51","patch":"@@ -68,6 +68,10 @@\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.identityconnectors.framework.common.objects.SearchResult;\n import org.identityconnectors.framework.common.objects.filter.FilterBuilder;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.identityconnectors.framework.common.objects.SyncDeltaBuilder;\n+import org.identityconnectors.framework.common.objects.SyncDeltaType;\n+import org.identityconnectors.framework.common.objects.SyncToken;\n import org.identityconnectors.framework.spi.SearchResultsHandler;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -158,7 +162,13 @@ public boolean handle(final ConnectorObject connectorObject) {\n \n             ConnectorObject connObj = found.iterator().next();\n             try {\n-                List<String> anyKeys = match(connObj, provision.get(), anyUtils);\n+                List<String> anyKeys = match(\n+                        new SyncDeltaBuilder().\n+                                setToken(new SyncToken(\"\")).\n+                                setDeltaType(SyncDeltaType.CREATE_OR_UPDATE).\n+                                setObject(connObj).\n+                                build(),\n+                        provision.get(), anyUtils);\n                 if (anyKeys.isEmpty()) {\n                     LOG.debug(\"No matching {} found for {}, aborting\", anyUtils.anyTypeKind(), connObj);\n                 } else {\n@@ -177,13 +187,14 @@ public boolean handle(final ConnectorObject connectorObject) {\n     }\n \n     private List<String> findByConnObjectKey(\n-            final ConnectorObject connObj, final Provision provision, final AnyUtils anyUtils) {\n+            final SyncDelta syncDelta, final Provision provision, final AnyUtils anyUtils) {\n \n         String connObjectKey = null;\n \n         Optional<? extends MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n         if (connObjectKeyItem.isPresent()) {\n-            Attribute connObjectKeyAttr = connObj.getAttributeByName(connObjectKeyItem.get().getExtAttrName());\n+            Attribute connObjectKeyAttr = syncDelta.getObject().\n+                    getAttributeByName(connObjectKeyItem.get().getExtAttrName());\n             if (connObjectKeyAttr != null) {\n                 connObjectKey = AttributeUtil.getStringValue(connObjectKeyAttr);\n             }\n@@ -303,25 +314,25 @@ private List<String> findByConnObjectKey(\n     }\n \n     private List<String> findByCorrelationRule(\n-            final ConnectorObject connObj,\n+            final SyncDelta syncDelta,\n             final Provision provision,\n             final PullCorrelationRule rule,\n             final AnyTypeKind type) {\n \n-        return searchDAO.search(rule.getSearchCond(connObj, provision), type).stream().\n+        return searchDAO.search(rule.getSearchCond(syncDelta, provision), type).stream().\n                 map(Entity::getKey).collect(Collectors.toList());\n     }\n \n     /**\n      * Finds internal entities based on external attributes and mapping.\n      *\n-     * @param connObj external attributes\n+     * @param syncDelta change operation, including external attributes\n      * @param provision mapping\n      * @param anyUtils any utils\n      * @return list of matching users' / groups' / any objects' keys\n      */\n     public List<String> match(\n-            final ConnectorObject connObj,\n+            final SyncDelta syncDelta,\n             final Provision provision,\n             final AnyUtils anyUtils) {\n \n@@ -340,30 +351,31 @@ public List<String> match(\n \n         try {\n             return rule.isPresent()\n-                    ? findByCorrelationRule(connObj, provision, rule.get(), anyUtils.anyTypeKind())\n-                    : findByConnObjectKey(connObj, provision, anyUtils);\n+                    ? findByCorrelationRule(syncDelta, provision, rule.get(), anyUtils.anyTypeKind())\n+                    : findByConnObjectKey(syncDelta, provision, anyUtils);\n         } catch (RuntimeException e) {\n-            LOG.error(\"Could not match {} with any existing {}\", connObj, provision.getAnyType(), e);\n+            LOG.error(\"Could not match {} with any existing {}\", syncDelta, provision.getAnyType(), e);\n             return Collections.<String>emptyList();\n         }\n     }\n \n     /**\n      * Finds internal realms based on external attributes and mapping.\n      *\n-     * @param connObj external attributes\n+     * @param syncDelta change operation, including external attributes\n      * @param orgUnit mapping\n      * @return list of matching realms' keys.\n      */\n     public List<String> match(\n-            final ConnectorObject connObj,\n+            final SyncDelta syncDelta,\n             final OrgUnit orgUnit) {\n \n         String connObjectKey = null;\n \n         Optional<? extends OrgUnitItem> connObjectKeyItem = orgUnit.getConnObjectKeyItem();\n         if (connObjectKeyItem.isPresent()) {\n-            Attribute connObjectKeyAttr = connObj.getAttributeByName(connObjectKeyItem.get().getExtAttrName());\n+            Attribute connObjectKeyAttr = syncDelta.getObject().\n+                    getAttributeByName(connObjectKeyItem.get().getExtAttrName());\n             if (connObjectKeyAttr != null) {\n                 connObjectKey = AttributeUtil.getStringValue(connObjectKeyAttr);\n             }"},{"sha":"c37bda37086167a24685fa99c2b81c415cda1cca","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/DummyPullCorrelationRule.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/66a75481e5f936654eb4be21526c8e1185fb2a51/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDummyPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/66a75481e5f936654eb4be21526c8e1185fb2a51/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDummyPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDummyPullCorrelationRule.java?ref=66a75481e5f936654eb4be21526c8e1185fb2a51","patch":"@@ -22,13 +22,13 @@\n import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n import org.apache.syncope.core.persistence.api.dao.PullCorrelationRuleConfClass;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n-import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n \n @PullCorrelationRuleConfClass(DummyPullCorrelationRuleConf.class)\n public class DummyPullCorrelationRule implements PullCorrelationRule {\n \n     @Override\n-    public SearchCond getSearchCond(final ConnectorObject connObj, final Provision provision) {\n+    public SearchCond getSearchCond(final SyncDelta syncDelta, final Provision provision) {\n         return new SearchCond();\n     }\n }"},{"sha":"222480e6040b3d16e97172b62445baf614c60c1e","filename":"fit/core-reference/src/test/resources/TestPullRule.groovy","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/66a75481e5f936654eb4be21526c8e1185fb2a51/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FTestPullRule.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/66a75481e5f936654eb4be21526c8e1185fb2a51/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FTestPullRule.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FTestPullRule.groovy?ref=66a75481e5f936654eb4be21526c8e1185fb2a51","patch":"@@ -22,7 +22,7 @@ import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule\n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision\n-import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.identityconnectors.framework.common.objects.SyncDelta\n \n /**\n  * Test pull rule relying on {@code email} attribute value.\n@@ -31,11 +31,11 @@ import org.identityconnectors.framework.common.objects.ConnectorObject;\n class TestPullRule implements PullCorrelationRule {\n \n   @Override\n-  SearchCond getSearchCond(final ConnectorObject connObj, final Provision provision) {\n+  SearchCond getSearchCond(final SyncDelta syncDelta, final Provision provision) {\n     AttributeCond cond = new AttributeCond();\n     cond.setSchema(\"email\");\n     cond.setType(AttributeCond.Type.EQ);\n-    cond.setExpression(connObj.getName().getNameValue());\n+    cond.setExpression(syncDelta.getObject().getName().getNameValue());\n \n     return SearchCond.getLeafCond(cond);\n   }"}]}