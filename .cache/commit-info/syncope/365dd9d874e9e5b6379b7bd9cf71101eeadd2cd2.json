{"sha":"365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM2NWRkOWQ4NzRlOWU1YjYzNzliN2JkOWNmNzExMDFlZWFkZDJjZDI=","commit":{"author":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2013-05-28T13:36:34Z"},"committer":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2013-05-28T13:36:34Z"},"message":"Secure random string\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1486918 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3965e1dd23897517150fee6e2b5836ef9ce2cb3b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3965e1dd23897517150fee6e2b5836ef9ce2cb3b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2/comments","author":null,"committer":null,"parents":[{"sha":"907663032e8ffacf6ae420d12aa3c19afd73e838","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/907663032e8ffacf6ae420d12aa3c19afd73e838","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/907663032e8ffacf6ae420d12aa3c19afd73e838"}],"stats":{"total":50,"additions":44,"deletions":6},"files":[{"sha":"38aa0ff6deba33c4f2bfa8841c5aecdfc54c5b82","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2","patch":"@@ -26,7 +26,6 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import org.apache.commons.lang.RandomStringUtils;\n import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.mod.AbstractAttributableMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n@@ -62,6 +61,7 @@\n import org.apache.syncope.core.util.InvalidPasswordPolicySpecException;\n import org.apache.syncope.core.util.JexlUtil;\n import org.apache.syncope.core.util.MappingUtil;\n+import org.apache.syncope.core.util.SecureRandomUtil;\n import org.apache.syncope.core.util.VirAttrCache;\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n@@ -183,7 +183,7 @@ public <T extends AbstractAttributableTO> T getAttributableTO(final ConnectorObj\n             } catch (InvalidPasswordPolicySpecException e) {\n                 LOG.error(\"Could not generate policy-compliant random password for {}\", userTO, e);\n \n-                password = RandomStringUtils.randomAlphanumeric(16);\n+                password = SecureRandomUtil.generateRandomPassword(16);\n             }\n             userTO.setPassword(password);\n         }"},{"sha":"173525c2b2144f2cfb2592e89e5b6e8db9709e8a","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2","patch":"@@ -47,7 +47,6 @@\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n-import org.apache.commons.lang.RandomStringUtils;\n import org.apache.syncope.common.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n@@ -58,6 +57,7 @@\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.validation.entity.SyncopeUserCheck;\n import org.apache.syncope.core.util.PasswordEncoder;\n+import org.apache.syncope.core.util.SecureRandomUtil;\n \n @Entity\n @Cacheable\n@@ -397,7 +397,7 @@ public void setStatus(final String status) {\n     }\n \n     public void generateToken(final int tokenLength, final int tokenExpireTime) {\n-        this.token = RandomStringUtils.randomAlphanumeric(tokenLength);\n+        this.token = SecureRandomUtil.generateRandomPassword(tokenLength);\n \n         Calendar calendar = Calendar.getInstance();\n         calendar.add(Calendar.MINUTE, tokenExpireTime);\n@@ -485,6 +485,8 @@ public String getUsername() {\n         return username;\n     }\n \n+    int PASSWORD_LENGTH = 8;\n+\n     public void setUsername(final String username) {\n         this.username = username;\n     }"},{"sha":"5cf242685542ce1d2d333dc9dcbabadf4bb332f6","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2","patch":"@@ -28,7 +28,6 @@\n import java.util.Set;\n import org.apache.commons.jexl2.JexlContext;\n import org.apache.commons.jexl2.MapContext;\n-import org.apache.commons.lang.RandomStringUtils;\n import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.types.IntMappingType;\n@@ -222,7 +221,7 @@ public static <T extends AbstractAttributable> Map.Entry<String, Attribute> prep\n                     } catch (InvalidPasswordPolicySpecException e) {\n                         LOG.error(\"Could not generate policy-compliant random password for {}\", user, e);\n \n-                        passwordAttrValue = RandomStringUtils.randomAlphanumeric(16);\n+                        passwordAttrValue = SecureRandomUtil.generateRandomPassword(16);\n                     }\n                 }\n             }"},{"sha":"775958858a005ddfd89619a268b1be2049e65737","filename":"core/src/main/java/org/apache/syncope/core/util/SecureRandomUtil.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSecureRandomUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSecureRandomUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FSecureRandomUtil.java?ref=365dd9d874e9e5b6379b7bd9cf71101eeadd2cd2","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.util;\n+\n+import java.security.SecureRandom;\n+import java.util.Random;\n+\n+public class SecureRandomUtil {\n+\n+    public static String generateRandomPassword(final int tokenLength) {\n+        Random random = new SecureRandom();\n+\n+        final String letters = \"abcdefghjkmnpqrstuvwxyzABCDEFGHJKMNPQRSTUVWXYZ0123456789\";\n+\n+        String pw = \"\";\n+        for (int i = 0; i < tokenLength; i++) {\n+            pw += letters.charAt((int) (random.nextDouble() * letters.length()));\n+        }\n+        return pw;\n+    }\n+}"}]}