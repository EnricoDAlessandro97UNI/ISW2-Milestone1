{"sha":"2ccbf857a8009c41fd8344b98f002282e1bb8b6e","node_id":"C_kwDOJfYA1toAKDJjY2JmODU3YTgwMDljNDFmZDgzNDRiOThmMDAyMjgyZTFiYjhiNmU","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-12-24T14:22:17Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-12-24T14:22:17Z"},"message":"[SYNCOPE-1716] Introducing PushTask's and PullTask's ThreadPoolSettings (#397)","tree":{"sha":"79b370971a9165c69d4300f1c3e736a079bebf88","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/79b370971a9165c69d4300f1c3e736a079bebf88"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2ccbf857a8009c41fd8344b98f002282e1bb8b6e","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjpwsZCRBK7hj4Ov3rIwAA7GIIAFnht5kL5TcDrizrOhf2/5Ym\nNM0Y8sptLBAul89bNwstOZ5CufzZ7fwnix0PbH0VsagVAyK2s70PDJpvgzxaZkPN\nadzdxpxTCS+FF7u4uPcbbyL+wXvdALP0i5TFpPGeCe3oycz3flC1tYP5ErDXEsxp\nR0gpsC82ATVSo8fnsyk3NtYLLXMPQkFRP4fdmcyBX/P1ACqdvuX6iq9/S1y2Dfa/\n5xT42xMMjVCmAsfRl6FLY1ife14RHD5h8xTtJPSeXuae/2FrBm9K7O+tYktd9701\nLZfxu5NabcWFljO4MV29tLBIQRiUB9w5MtYlKpqjNu6MShQUisaqBE80qN7nshw=\n=GEE4\n-----END PGP SIGNATURE-----\n","payload":"tree 79b370971a9165c69d4300f1c3e736a079bebf88\nparent a3efcf3ab454f0c75102944e09f873fd4753878d\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1671891737 +0100\ncommitter GitHub <noreply@github.com> 1671891737 +0100\n\n[SYNCOPE-1716] Introducing PushTask's and PullTask's ThreadPoolSettings (#397)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ccbf857a8009c41fd8344b98f002282e1bb8b6e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2ccbf857a8009c41fd8344b98f002282e1bb8b6e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"a3efcf3ab454f0c75102944e09f873fd4753878d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a3efcf3ab454f0c75102944e09f873fd4753878d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a3efcf3ab454f0c75102944e09f873fd4753878d"}],"stats":{"total":2529,"additions":1562,"deletions":967},"files":[{"sha":"62f514b8b8dd13e47b0a007037b90b2298a49602","filename":".github/workflows/mariadb.yml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/.github%2Fworkflows%2Fmariadb.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/.github%2Fworkflows%2Fmariadb.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Fmariadb.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -26,7 +26,7 @@ on:\n     - cron: '0 13 * * 4'\n \n jobs:\n-  MariaDB:\n+  mariadb:\n     runs-on: ubuntu-latest\n \n     steps:"},{"sha":"4e31b234edfadcc9c449b27a4593200b4c42cd7f","filename":".github/workflows/mysql.yml","status":"modified","additions":22,"deletions":3,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/.github%2Fworkflows%2Fmysql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/.github%2Fworkflows%2Fmysql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Fmysql.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -26,7 +26,7 @@ on:\n     - cron: '0 13 * * 4'\n \n jobs:\n-  MySQL:\n+  mysql:\n     runs-on: ubuntu-latest\n \n     steps:\n@@ -44,9 +44,28 @@ jobs:\n         restore-keys: ${{ runner.os }}-m2\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n-    - name: 'Unit Tests: MySQL JPA JSON'\n-      run: mvn -f core/persistence-jpa-json/pom.xml -P myjson -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - name: 'Integration Tests: MySQL'\n       run: mvn -f fit/core-reference/pom.xml -P mysql-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+\n+  myjson:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout repository\n+      uses: actions/checkout@v3\n+    - name: Setup Java JDK\n+      uses: actions/setup-java@v3\n+      with:\n+        distribution: 'zulu'      \n+        java-version: 11\n+    - uses: actions/cache@v3\n+      with:\n+        path: ~/.m2\n+        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}\n+        restore-keys: ${{ runner.os }}-m2\n+    - name: Build\n+      run: mvn -U -T 1C -P 'skipTests,all'\n+    - name: 'Unit Tests: MySQL JPA JSON'\n+      run: mvn -f core/persistence-jpa-json/pom.xml -P myjson -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - name: 'Integration Tests: MySQL JPA JSON'\n       run: mvn -f fit/core-reference/pom.xml -P myjson-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"3b4cd1f3f35754684317466a7ad395c5378e7cf9","filename":".github/workflows/oracle.yml","status":"modified","additions":22,"deletions":3,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/.github%2Fworkflows%2Foracle.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/.github%2Fworkflows%2Foracle.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Foracle.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -26,7 +26,7 @@ on:\n     - cron: '0 13 * * 4'\n \n jobs:\n-  Oracle:\n+  oracle:\n     runs-on: ubuntu-latest\n \n     steps:\n@@ -44,9 +44,28 @@ jobs:\n         restore-keys: ${{ runner.os }}-m2\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n-    - name: 'Unit Tests: Oracle JPA JSON'\n-      run: mvn -f core/persistence-jpa-json/pom.xml -P ojson -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - name: 'Integration Tests: Oracle'\n       run: mvn -f fit/core-reference/pom.xml -P oracle-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+\n+  ojson:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout repository\n+      uses: actions/checkout@v3\n+    - name: Setup Java JDK\n+      uses: actions/setup-java@v3\n+      with:\n+        distribution: 'zulu'      \n+        java-version: 11\n+    - uses: actions/cache@v3\n+      with:\n+        path: ~/.m2\n+        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}\n+        restore-keys: ${{ runner.os }}-m2\n+    - name: Build\n+      run: mvn -U -T 1C -P 'skipTests,all'\n+    - name: 'Unit Tests: Oracle JPA JSON'\n+      run: mvn -f core/persistence-jpa-json/pom.xml -P ojson -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - name: 'Integration Tests: Oracle JPA JSON'\n       run: mvn -f fit/core-reference/pom.xml -P ojson-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"b1b575b3913346001b6203ea58952dfa65130a1e","filename":".github/workflows/postgresql.yml","status":"modified","additions":22,"deletions":3,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/.github%2Fworkflows%2Fpostgresql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/.github%2Fworkflows%2Fpostgresql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/.github%2Fworkflows%2Fpostgresql.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -26,7 +26,7 @@ on:\n     - cron: '0 13 * * 4'\n \n jobs:\n-  PostgreSQL:\n+  postgres:\n     runs-on: ubuntu-latest\n \n     steps:\n@@ -44,9 +44,28 @@ jobs:\n         restore-keys: ${{ runner.os }}-m2\n     - name: Build\n       run: mvn -U -T 1C -P 'skipTests,all'\n-    - name: 'Unit Tests: PostgreSQL JPA JSON'\n-      run: mvn -f core/persistence-jpa-json/pom.xml -P pgjsonb -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - name: 'Integration Tests: PostgreSQL'\n       run: mvn -f fit/core-reference/pom.xml -P postgres-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n+\n+  pgjsonb:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout repository\n+      uses: actions/checkout@v3\n+    - name: Setup Java JDK\n+      uses: actions/setup-java@v3\n+      with:\n+        distribution: 'zulu'      \n+        java-version: 11\n+    - uses: actions/cache@v3\n+      with:\n+        path: ~/.m2\n+        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}\n+        restore-keys: ${{ runner.os }}-m2\n+    - name: Build\n+      run: mvn -U -T 1C -P 'skipTests,all'\n+    - name: 'Unit Tests: PostgreSQL JPA JSON'\n+      run: mvn -f core/persistence-jpa-json/pom.xml -P pgjsonb -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Dianal.phase=none -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true\n     - name: 'Integration Tests: PostgreSQL JPA JSON'\n       run: mvn -f fit/core-reference/pom.xml -P pgjsonb-it -Dinvoker.streamLogs=true -Dmodernizer.skip=true -Drat.skip=true -Dcheckstyle.skip=true -Djacoco.skip=true"},{"sha":"6999730f1de8f8ab141f70698b9fc3bac51bb6cd","filename":"archetype/src/main/resources/archetype-resources/fit/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Ffit%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Ffit%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Ffit%2Fpom.xml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -413,8 +413,8 @@ under the License.\n                       <DB_URL>jdbc:postgresql://postgres:5432/syncope?stringtype=unspecified</DB_URL>\n                       <DB_USER>syncope</DB_USER>\n                       <DB_PASSWORD>syncope</DB_PASSWORD>\n-                      <DB_POOL_MAX>10</DB_POOL_MAX>\n-                      <DB_POOL_MIN>2</DB_POOL_MIN>\n+                      <DB_POOL_MAX>20</DB_POOL_MAX>\n+                      <DB_POOL_MIN>5</DB_POOL_MIN>\n                       <OPENJPA_REMOTE_COMMIT>sjvm</OPENJPA_REMOTE_COMMIT>\n                       <SERVICE_DISCOVERY_ADDRESS>http://syncope:8080/syncope/rest/</SERVICE_DISCOVERY_ADDRESS>\n                       <KEYMASTER_ADDRESS>http://syncope:8080/syncope/rest/keymaster</KEYMASTER_ADDRESS>"},{"sha":"860655d89f5dcf8b5fc7f85ff710760852dd524c","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceDirectoryPanel_it.properties","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDirectoryPanel_it.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -27,12 +27,12 @@ resource.menu.explore=Esplora risorsa\n resource.menu.history=Storico delle configurazioni\n resource.menu.clone=Duplica risorsa\n \n-task.propagation.list=Task di propagazione {0}\n-task.pull.list=Pull task {0}\n-task.push.list=Push task {0}\n+task.propagation.list=Task di Propagazione {0}\n+task.pull.list=Task di Pull {0}\n+task.push.list=Task di Push {0}\n resource.explore.list=Esplora ${key}\n resource.reconciliation=Riconciliazione {0}\n resource.menu.reconciliation=Riconciliazione\n-resource.menu.push.list=Push tasks\n-resource.menu.pull.list=Pull tasks\n-resource.menu.propagation.list=Task di propagazione\n+resource.menu.push.list=Task di Push\n+resource.menu.pull.list=Task di Pull\n+resource.menu.propagation.list=Task di Propagazione"},{"sha":"4f89a372ee8f5358bb51e50d66d59621c5a6da88","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel_it.properties","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel_it.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -31,13 +31,13 @@ resource.menu.provision=Modifica regole di provisioning\n resource.menu.explore=Esplora risorsa\n resource.menu.history=Storico delle configurazioni\n resource.menu.clone=Duplica risorsa\n-task.propagation.list=Task di propagazione {0}\n-task.pull.list=Pull task {0}\n-task.push.list=Push task {0}\n+task.propagation.list=Task di Propagazione {0}\n+task.pull.list=Task di Pull {0}\n+task.push.list=Task di Push {0}\n resource.explore.list=Esplora ${key}\n connectors.reload=Ricarica tutti i connettori\n resource.reconciliation=Riconciliazione {0}\n resource.menu.reconciliation=Riconciliazione\n-resource.menu.push.list=Push tasks\n-resource.menu.pull.list=Pull tasks\n-resource.menu.propagation.list=Task di propagazione\n+resource.menu.push.list=Task di Push\n+resource.menu.pull.list=Task di Pull\n+resource.menu.propagation.list=Task di Propagazione"},{"sha":"0484743d4931edc46e6adb64297a5eaf5fc73b90","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"modified","additions":113,"deletions":3,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -21,6 +21,7 @@\n import java.io.Serializable;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n@@ -34,7 +35,9 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxSpinnerFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.MacroTaskTO;\n import org.apache.syncope.common.lib.to.ProvisioningTaskTO;\n@@ -45,6 +48,7 @@\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.PullMode;\n import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.common.lib.types.ThreadPoolSettings;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -55,6 +59,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n+import org.springframework.beans.PropertyAccessorFactory;\n \n public class SchedTaskWizardBuilder<T extends SchedTaskTO> extends BaseAjaxWizardBuilder<T> {\n \n@@ -292,7 +297,7 @@ protected Iterator<String> getChoices(final String input) {\n             // For push and pull tasks\n             // ------------------------------\n             WebMarkupContainer provisioningTaskSpecifics = new WebMarkupContainer(\"provisioningTaskSpecifics\");\n-            add(provisioningTaskSpecifics.setRenderBodyOnly(true));\n+            add(provisioningTaskSpecifics.setOutputMarkupId(true));\n \n             if (taskTO instanceof ProvisioningTaskTO) {\n                 jobDelegate.setEnabled(false).setVisible(false);\n@@ -311,8 +316,7 @@ protected Iterator<String> getChoices(final String input) {\n                             new PropertyModel<>(taskTO, \"actions\"),\n                             new ListModel<>(taskTO instanceof PushTaskTO\n                                     ? pushActions.getObject() : pullActions.getObject()));\n-            actions.setOutputMarkupId(true);\n-            provisioningTaskSpecifics.add(actions);\n+            provisioningTaskSpecifics.add(actions.setOutputMarkupId(true));\n \n             AjaxDropDownChoicePanel<MatchingRule> matchingRule = new AjaxDropDownChoicePanel<>(\n                     \"matchingRule\", \"matchingRule\", new PropertyModel<>(taskTO, \"matchingRule\"), false);\n@@ -340,6 +344,112 @@ protected Iterator<String> getChoices(final String input) {\n             AjaxCheckBoxPanel syncStatus = new AjaxCheckBoxPanel(\n                     \"syncStatus\", \"syncStatus\", new PropertyModel<>(taskTO, \"syncStatus\"), false);\n             provisioningTaskSpecifics.add(syncStatus);\n+\n+            // Concurrent settings\n+            PropertyModel<ThreadPoolSettings> concurrentSettingsModel =\n+                    new PropertyModel<>(taskTO, \"concurrentSettings\");\n+\n+            AjaxCheckBoxPanel enableConcurrentSettings = new AjaxCheckBoxPanel(\n+                    \"enableConcurrentSettings\", \"enableConcurrentSettings\", new IModel<Boolean>() {\n+\n+                private static final long serialVersionUID = -7126718045816207110L;\n+\n+                @Override\n+                public Boolean getObject() {\n+                    return concurrentSettingsModel.getObject() != null;\n+                }\n+\n+                @Override\n+                public void setObject(final Boolean object) {\n+                    // nothing to do\n+                }\n+            });\n+            provisioningTaskSpecifics.add(enableConcurrentSettings.\n+                    setVisible(taskTO instanceof ProvisioningTaskTO).setOutputMarkupId(true));\n+\n+            FieldPanel<Integer> corePoolSize = new AjaxSpinnerFieldPanel.Builder<Integer>().min(1).build(\n+                    \"corePoolSize\",\n+                    \"corePoolSize\",\n+                    Integer.class,\n+                    new ConcurrentSettingsValueModel(concurrentSettingsModel, \"corePoolSize\")).setRequired(true);\n+            corePoolSize.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true);\n+            corePoolSize.setVisible(taskTO instanceof ProvisioningTaskTO\n+                    ? concurrentSettingsModel.getObject() != null\n+                    : false);\n+            provisioningTaskSpecifics.add(corePoolSize);\n+\n+            FieldPanel<Integer> maxPoolSize = new AjaxSpinnerFieldPanel.Builder<Integer>().min(1).build(\n+                    \"maxPoolSize\",\n+                    \"maxPoolSize\",\n+                    Integer.class,\n+                    new ConcurrentSettingsValueModel(concurrentSettingsModel, \"maxPoolSize\")).setRequired(true);\n+            maxPoolSize.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true);\n+            maxPoolSize.setVisible(taskTO instanceof ProvisioningTaskTO\n+                    ? concurrentSettingsModel.getObject() != null\n+                    : false);\n+            provisioningTaskSpecifics.add(maxPoolSize);\n+\n+            FieldPanel<Integer> queueCapacity = new AjaxSpinnerFieldPanel.Builder<Integer>().min(1).build(\n+                    \"queueCapacity\",\n+                    \"queueCapacity\",\n+                    Integer.class,\n+                    new ConcurrentSettingsValueModel(concurrentSettingsModel, \"queueCapacity\")).setRequired(true);\n+            queueCapacity.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true);\n+            queueCapacity.setVisible(taskTO instanceof ProvisioningTaskTO\n+                    ? concurrentSettingsModel.getObject() != null\n+                    : false);\n+            provisioningTaskSpecifics.add(queueCapacity);\n+\n+            enableConcurrentSettings.getField().add(\n+                    new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    if (concurrentSettingsModel.getObject() == null) {\n+                        concurrentSettingsModel.setObject(new ThreadPoolSettings());\n+                    } else {\n+                        concurrentSettingsModel.setObject(null);\n+                    }\n+\n+                    corePoolSize.setVisible(concurrentSettingsModel.getObject() != null);\n+                    maxPoolSize.setVisible(concurrentSettingsModel.getObject() != null);\n+                    queueCapacity.setVisible(concurrentSettingsModel.getObject() != null);\n+\n+                    target.add(provisioningTaskSpecifics);\n+                }\n+            });\n+        }\n+    }\n+\n+    protected static class ConcurrentSettingsValueModel implements IModel<Integer> {\n+\n+        private static final long serialVersionUID = 8869612332790116116L;\n+\n+        private final PropertyModel<ThreadPoolSettings> concurrentSettingsModel;\n+\n+        private final String property;\n+\n+        public ConcurrentSettingsValueModel(\n+                final PropertyModel<ThreadPoolSettings> concurrentSettingsModel,\n+                final String property) {\n+\n+            this.concurrentSettingsModel = concurrentSettingsModel;\n+            this.property = property;\n+        }\n+\n+        @Override\n+        public Integer getObject() {\n+            return Optional.ofNullable(concurrentSettingsModel.getObject()).\n+                    map(s -> (Integer) PropertyAccessorFactory.forBeanPropertyAccess(s).getPropertyValue(property)).\n+                    orElse(null);\n+        }\n+\n+        @Override\n+        public void setObject(final Integer object) {\n+            Optional.ofNullable(concurrentSettingsModel.getObject()).\n+                    ifPresent(s -> PropertyAccessorFactory.forBeanPropertyAccess(s).setPropertyValue(property, object));\n         }\n     }\n "},{"sha":"2a80d888d2a1791f418d777f4472757efc5e8656","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/DirectoryPanel_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_it.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -36,7 +36,7 @@ any.attr.display=Attributi da mostrare\n any.finish=Invia ${anyTO.type}\n any.cancel=Annulla ${anyTO.type}\n batch=Batch\n-any.propagation.tasks=Task di propagazione per ${type} ${name}\n-any.notification.tasks=Task di notifica per ${type} ${name}\n+any.propagation.tasks=Task di Propagazione per ${type} ${name}\n+any.notification.tasks=Task di Notifica per ${type} ${name}\n notification.tasks=Task relativi alla notifica ${key}\n typeExtensions=Type extensions per GROUP ${name}"},{"sha":"def43e7aba8395573b38753560227919f770e23d","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/UserDirectoryPanel_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel_it.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -15,8 +15,8 @@\n # specific language governing permissions and limitations\n # under the License.\n any.edit=Modifica ${anyTO.type} ${anyTO.username}\n-any.propagation.tasks=Task di propagazione per ${type} ${username}\n-any.notification.tasks=Task di notifica per ${type} ${username}\n+any.propagation.tasks=Task di Propagazione per ${type} ${username}\n+any.notification.tasks=Task di Notifica per ${type} ${username}\n linkedAccounts.title=Gestisci account utente\n mergeLinkedAccounts.title=Combinare account utente con ${username}\n auditHistory.title=${anyTO.type} ${anyTO.username} history"},{"sha":"9eb35d81b03479fe749a5add5ea7aac449ed3159","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile.html","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.html?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -51,6 +51,10 @@\n       <div class=\"form-group\"><span wicket:id=\"performUpdate\">[performUpdate]</span></div>\n       <div class=\"form-group\"><span wicket:id=\"performDelete\">[performDelete]</span></div>\n       <div class=\"form-group\"><span wicket:id=\"syncStatus\">[syncStatus]</span></div>\n+      <div class=\"form-group\"><span wicket:id=\"enableConcurrentSettings\">[enableConcurrentSettings]</span></div>\n+      <div class=\"form-group\"><span wicket:id=\"corePoolSize\">[corePoolSize]</span></div>\n+      <div class=\"form-group\"><span wicket:id=\"maxPoolSize\">[maxPoolSize]</span></div>\n+      <div class=\"form-group\"><span wicket:id=\"queueCapacity\">[queueCapacity]</span></div>\n     </span>\n   </wicket:panel>\n </html>"},{"sha":"b26aa8f9db1ea65a84ac9c0e65eac7077347cd9e","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -32,3 +32,7 @@ execute=Execute\n executeDryRun=Dry run\n latestExecStatus=Last status\n remediation=Remediation\n+corePoolSize=Pool: Core Size\n+maxPoolSize=Pool: Max Size\n+queueCapacity=Pool: Queue Capacity\n+enableConcurrentSettings=Enable Concurrent Settings?"},{"sha":"24b8c9136bc54f07c3bae228559ce3217c5d5414","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_fr_CA.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_fr_CA.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -32,3 +32,7 @@ execute=Ex\\u00e9cuter\n executeDryRun=Test \\u00e0 blanc\n latestExecStatus=Dernier statut\n remediation=Remise en \\u00e9tat\n+corePoolSize=Pool: Core Size\n+maxPoolSize=Pool: Max Size\n+queueCapacity=Pool: Queue Capacity\n+enableConcurrentSettings=Enable Concurrent Settings?"},{"sha":"99126d8b647f53267c41835e907dcf103ae3c04e","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_it.properties","status":"modified","additions":11,"deletions":7,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_it.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -23,12 +23,16 @@ performCreate=Consenti creazione\n performUpdate=Consenti modifica\n performDelete=Consenti cancellazione\n syncStatus=Allinea stato\n-lastExec=Last Execution\n-nextExec=Next Execution\n-detail=Detail\n-delete=Delete\n-edit=Edit\n-execute=Execute\n+lastExec=Ultima esecuzione\n+nextExec=Prossima esecuzione\n+detail=Dettaglio\n+delete=Cancella\n+edit=Modifia\n+execute=Esegui\n executeDryRun=Dry run\n-latestExecStatus=Last status\n+latestExecStatus=Ultimo stato\n remediation=Remediation\n+corePoolSize=Pool: Dimensione Iniziale\n+maxPoolSize=Pool: Dimensione Massima\n+queueCapacity=Pool: Capacit\\u00e0 della Coda\n+enableConcurrentSettings=Abilitare le impostazioni di concorrenza?"},{"sha":"94e5531e970fc94d88963da8f46a4f5c8f246be5","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_ja.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_ja.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -32,3 +32,7 @@ execute=\\u5b9f\\u884c\n executeDryRun=\\u4e88\\u884c\\u6f14\\u7fd2\n latestExecStatus=\\u6700\\u7d42\\u30b9\\u30c6\\u30fc\\u30bf\\u30b9\n remediation=\\u5fa9\\u65e7\n+corePoolSize=Pool: Core Size\n+maxPoolSize=Pool: Max Size\n+queueCapacity=Pool: Queue Capacity\n+enableConcurrentSettings=Enable Concurrent Settings?"},{"sha":"b26aa8f9db1ea65a84ac9c0e65eac7077347cd9e","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_pt_BR.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_pt_BR.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -32,3 +32,7 @@ execute=Execute\n executeDryRun=Dry run\n latestExecStatus=Last status\n remediation=Remediation\n+corePoolSize=Pool: Core Size\n+maxPoolSize=Pool: Max Size\n+queueCapacity=Pool: Queue Capacity\n+enableConcurrentSettings=Enable Concurrent Settings?"},{"sha":"704aa4e9c5b3ec91ad47c75b643cdd1191b0275f","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder$Profile_ru.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder%24Profile_ru.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -33,3 +33,7 @@ execute=\\u0417\\u0430\\u043f\\u0443\\u0441\\u043a\n executeDryRun=\\u041f\\u0440\\u043e\\u0431\\u043d\\u044b\\u0439 \\u0437\\u0430\\u043f\\u0443\\u0441\\u043a\n latestExecStatus=\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043f\\u0440\\u0435\\u0434\\u044b\\u0434\\u0443\\u0449\\u0435\\u0433\\u043e \\u0437\\u0430\\u043f\\u0443\\u0441\\u043a\\u0430\n remediation=\\u0438\\u0441\\u043f\\u0440\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435\n+corePoolSize=Pool: Core Size\n+maxPoolSize=Pool: Max Size\n+queueCapacity=Pool: Queue Capacity\n+enableConcurrentSettings=Enable Concurrent Settings?"},{"sha":"1dcdba0890ca34853409bf82cb875e5109a127e6","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisioningTaskTO.java","status":"modified","additions":19,"deletions":6,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningTaskTO.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -27,6 +27,7 @@\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.MatchingRule;\n+import org.apache.syncope.common.lib.types.ThreadPoolSettings;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n \n @Schema(allOf = { SchedTaskTO.class },\n@@ -51,6 +52,8 @@ public abstract class ProvisioningTaskTO extends SchedTaskTO {\n \n     private final List<String> actions = new ArrayList<>();\n \n+    private ThreadPoolSettings concurrentSettings;\n+\n     @JsonProperty(required = true)\n     public String getResource() {\n         return resource;\n@@ -92,12 +95,6 @@ public void setSyncStatus(final boolean syncStatus) {\n         this.syncStatus = syncStatus;\n     }\n \n-    @JacksonXmlElementWrapper(localName = \"actions\")\n-    @JacksonXmlProperty(localName = \"action\")\n-    public List<String> getActions() {\n-        return actions;\n-    }\n-\n     public UnmatchingRule getUnmatchingRule() {\n         return unmatchingRule;\n     }\n@@ -114,6 +111,20 @@ public void setMatchingRule(final MatchingRule matchigRule) {\n         this.matchingRule = matchigRule;\n     }\n \n+    @JacksonXmlElementWrapper(localName = \"actions\")\n+    @JacksonXmlProperty(localName = \"action\")\n+    public List<String> getActions() {\n+        return actions;\n+    }\n+\n+    public ThreadPoolSettings getConcurrentSettings() {\n+        return concurrentSettings;\n+    }\n+\n+    public void setConcurrentSettings(final ThreadPoolSettings concurrentSettings) {\n+        this.concurrentSettings = concurrentSettings;\n+    }\n+\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n@@ -126,6 +137,7 @@ public int hashCode() {\n                 append(unmatchingRule).\n                 append(matchingRule).\n                 append(actions).\n+                append(concurrentSettings).\n                 build();\n     }\n \n@@ -151,6 +163,7 @@ public boolean equals(final Object obj) {\n                 append(unmatchingRule, other.unmatchingRule).\n                 append(matchingRule, other.matchingRule).\n                 append(actions, other.actions).\n+                append(concurrentSettings, other.concurrentSettings).\n                 build();\n     }\n }"},{"sha":"d7a7e45a7504e7ad501f55b1ce364bf886a3d3db","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ThreadPoolSettings.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FThreadPoolSettings.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FThreadPoolSettings.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FThreadPoolSettings.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.apache.commons.lang3.builder.ToStringStyle;\n+\n+public class ThreadPoolSettings implements Serializable {\n+\n+    private static final long serialVersionUID = -3860071577309258396L;\n+\n+    private int corePoolSize = 1;\n+\n+    private int maxPoolSize = Integer.MAX_VALUE;\n+\n+    private int queueCapacity = Integer.MAX_VALUE;\n+\n+    public int getCorePoolSize() {\n+        return corePoolSize;\n+    }\n+\n+    public void setCorePoolSize(final int corePoolSize) {\n+        this.corePoolSize = corePoolSize;\n+    }\n+\n+    public int getMaxPoolSize() {\n+        return maxPoolSize;\n+    }\n+\n+    public void setMaxPoolSize(final int maxPoolSize) {\n+        this.maxPoolSize = maxPoolSize;\n+    }\n+\n+    public int getQueueCapacity() {\n+        return queueCapacity;\n+    }\n+\n+    public void setQueueCapacity(final int queueCapacity) {\n+        this.queueCapacity = queueCapacity;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(corePoolSize).\n+                append(maxPoolSize).\n+                append(queueCapacity).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final ThreadPoolSettings other = (ThreadPoolSettings) obj;\n+        return new EqualsBuilder().\n+                append(corePoolSize, other.corePoolSize).\n+                append(maxPoolSize, other.maxPoolSize).\n+                append(queueCapacity, other.queueCapacity).\n+                build();\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return new ToStringBuilder(this, ToStringStyle.SIMPLE_STYLE).\n+                append(corePoolSize).\n+                append(maxPoolSize).\n+                append(queueCapacity).\n+                build();\n+    }\n+}"},{"sha":"322a213a72dd8fd38bfe6205590ca5708cecf9b3","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/ProvisioningTask.java","status":"modified","additions":13,"deletions":8,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FProvisioningTask.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import org.apache.syncope.common.lib.types.MatchingRule;\n+import org.apache.syncope.common.lib.types.ThreadPoolSettings;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n@@ -34,14 +35,6 @@\n \n     List<? extends Implementation> getActions();\n \n-    MatchingRule getMatchingRule();\n-\n-    void setMatchingRule(MatchingRule matchigRule);\n-\n-    UnmatchingRule getUnmatchingRule();\n-\n-    void setUnmatchingRule(UnmatchingRule unmatchigRule);\n-\n     boolean isPerformCreate();\n \n     void setPerformCreate(boolean performCreate);\n@@ -57,4 +50,16 @@\n     boolean isSyncStatus();\n \n     void setSyncStatus(boolean syncStatus);\n+\n+    MatchingRule getMatchingRule();\n+\n+    void setMatchingRule(MatchingRule matchigRule);\n+\n+    UnmatchingRule getUnmatchingRule();\n+\n+    void setUnmatchingRule(UnmatchingRule unmatchigRule);\n+\n+    ThreadPoolSettings getConcurrentSettings();\n+\n+    void setConcurrentSettings(ThreadPoolSettings settings);\n }"},{"sha":"5468240cba2a09f4e6af73817583e2c38c4ea764","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PullTask.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPullTask.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -47,5 +47,4 @@ public interface PullTask extends ProvisioningTask<PullTask> {\n     void setRemediation(boolean remediation);\n \n     boolean isRemediation();\n-\n }"},{"sha":"8a27d4f666009650154416f1cc4e609a355ef892","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PushTask.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTask.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -18,9 +18,8 @@\n  */\n package org.apache.syncope.core.persistence.api.entity.task;\n \n-import java.util.List;\n+import java.util.Map;\n import java.util.Optional;\n-import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n \n public interface PushTask extends ProvisioningTask<PushTask> {\n@@ -29,9 +28,7 @@ public interface PushTask extends ProvisioningTask<PushTask> {\n \n     void setSourceRealm(Realm sourceRealm);\n \n-    boolean add(PushTaskAnyFilter filter);\n+    Optional<String> getFilter(String anyType);\n \n-    Optional<? extends PushTaskAnyFilter> getFilter(AnyType anyType);\n-\n-    List<? extends PushTaskAnyFilter> getFilters();\n+    Map<String, String> getFilters();\n }"},{"sha":"ad42d0562f7d1214a90f3e90ee8911a2b172e682","filename":"core/persistence-jpa-json/src/main/resources/core-myjson.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -26,8 +26,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3,useSetStringForClobs=true)\n persistence.domain[0].orm=META-INF/spring-orm-myjson.xml\n persistence.domain[0].auditSql=audit_myjson.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n provisioning.quartz.sql=tables_mysql_innodb.sql"},{"sha":"4da7b2e9af11378035e4f967b8ae4f81555fd95f","filename":"core/persistence-jpa-json/src/main/resources/core-ojson.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-ojson.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-ojson.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-ojson.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -27,8 +27,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.OracleDictionary\n persistence.domain[0].orm=META-INF/spring-orm-ojson.xml\n persistence.domain[0].auditSql=audit_ojson.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.oracle.OracleDelegate\n provisioning.quartz.sql=tables_oracle.sql"},{"sha":"d0254a98a423264b56e61c077c2436a7aa42face","filename":"core/persistence-jpa-json/src/main/resources/core-pgjsonb.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -26,8 +26,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n persistence.domain[0].orm=META-INF/spring-orm-pgjsonb.xml\n persistence.domain[0].auditSql=audit_pgjsonb.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n provisioning.quartz.sql=tables_postgres.sql"},{"sha":"759c819729c0b0967f6738789a55f1e9b8a0619f","filename":"core/persistence-jpa-json/src/test/resources/core-myjson-test.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-myjson-test.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-myjson-test.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-myjson-test.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -21,5 +21,7 @@ security.jwsKey=${jwsKey}\n security.secretKey=${secretKey}\n \n persistence.domain[0].jdbcURL=jdbc:mysql://${DB_CONTAINER_IP}:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n+persistence.domain[0].poolMaxActive=10\n+persistence.domain[0].poolMinIdle=2\n \n provisioning.connIdLocation=${connid.location}"},{"sha":"70b684cc234afc54a0255b2dc112aa6b2145e2dd","filename":"core/persistence-jpa-json/src/test/resources/core-ojson-test.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-ojson-test.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-ojson-test.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-ojson-test.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -22,5 +22,7 @@ security.secretKey=${secretKey}\n \n persistence.domain[0].jdbcURL=jdbc:oracle:thin:@${DB_CONTAINER_IP}:1521/XEPDB1\n #persistence.domain[0].jdbcURL=jdbc:oracle:thin:@192.168.0.176:1521/orcl\n+persistence.domain[0].poolMaxActive=10\n+persistence.domain[0].poolMinIdle=2\n \n provisioning.connIdLocation=${connid.location}"},{"sha":"fb3c8c266768a1a1fd12e4012d23bc886fdbec22","filename":"core/persistence-jpa-json/src/test/resources/core-pgjsonb-test.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-pgjsonb-test.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-pgjsonb-test.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fcore-pgjsonb-test.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -21,5 +21,7 @@ security.jwsKey=${jwsKey}\n security.secretKey=${secretKey}\n \n persistence.domain[0].jdbcURL=jdbc:postgresql://${DB_CONTAINER_IP}:5432/syncope?stringtype=unspecified\n+persistence.domain[0].poolMaxActive=10\n+persistence.domain[0].poolMinIdle=2\n \n provisioning.connIdLocation=${connid.location}"},{"sha":"6c3558479df77d78e96970ad0f715b9c8d38ce46","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":22,"deletions":33,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -750,69 +750,58 @@ under the License.\n   <PushTask id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-            unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>  \n-  <PushTaskAnyFilter id=\"1fdcff65-765f-4a6e-98a7-13ef7cca47e2\" anyType_id=\"USER\" pushTask_id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" fiql=\"surname==Vivaldi\"/>\n-  <PushTaskAnyFilter id=\"3b564c51-5d64-48b3-8da5-fd4ebc10e0a8\" anyType_id=\"GROUP\" pushTask_id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Vivaldi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-            unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"199efd21-5e89-46ac-95de-f47e9d0569fc\" anyType_id=\"USER\" pushTask_id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" fiql=\"surname==Bellini\"/>\n-  <PushTaskAnyFilter id=\"7672a167-77d6-4639-8b1d-0af561293c7d\" anyType_id=\"GROUP\" pushTask_id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Bellini\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"03aa2a04-4881-4573-9117-753f81b04865\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"39a11ba6-397a-4c94-8bfe-1f4f757d6501\" anyType_id=\"USER\" pushTask_id=\"03aa2a04-4881-4573-9117-753f81b04865\" fiql=\"surname==Puccini\"/>\n-  <PushTaskAnyFilter id=\"5bd7501e-8a18-4fbd-a3fe-a1e731ba95db\" anyType_id=\"GROUP\" pushTask_id=\"03aa2a04-4881-4573-9117-753f81b04865\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Puccini\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-            unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"0d0371a3-5772-4b4c-ad14-139adf1d346a\" anyType_id=\"USER\" pushTask_id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" fiql=\"surname==Verdi\"/>\n-  <PushTaskAnyFilter id=\"2e7488ae-a2fc-4657-a93b-159b8433c0e7\" anyType_id=\"GROUP\" pushTask_id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Verdi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"41bf22fe-a014-41af-9a75-402b987eb433\" anyType_id=\"USER\" pushTask_id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" fiql=\"username==_NO_ONE_\"/>\n-  <PushTaskAnyFilter id=\"fa983fde-795e-4c89-a6f7-1ccd80a8adeb\" anyType_id=\"GROUP\" pushTask_id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"username==_NO_ONE_\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"ec674143-480a-4816-98ad-b61fa090821e\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"e238a6dc-0b04-46cf-9bfa-be68bd9f2da0\" anyType_id=\"USER\" pushTask_id=\"ec674143-480a-4816-98ad-b61fa090821e\" fiql=\"surname==Verdi\"/>\n-  <PushTaskAnyFilter id=\"0eaa643e-0add-4c46-8273-539f9d6abec5\" anyType_id=\"GROUP\" pushTask_id=\"ec674143-480a-4816-98ad-b61fa090821e\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Verdi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"335b4f11-589a-44c5-80b0-ba94892f0c62\" anyType_id=\"USER\" pushTask_id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" fiql=\"surname==Rossini\"/>\n-  <PushTaskAnyFilter id=\"b32eecc2-aa4f-43c6-a501-a692c3e93113\" anyType_id=\"GROUP\" pushTask_id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Rossini\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"IGNORE\" matchingRule=\"LINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"9f974a0d-87d8-4cae-9ea9-1fc245bc1dbf\" anyType_id=\"USER\" pushTask_id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" fiql=\"surname==Verdi\"/>\n-  <PushTaskAnyFilter id=\"0dc46ba4-1270-4fa9-b3e1-79f940d4308f\" anyType_id=\"GROUP\" pushTask_id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"LINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Verdi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"3aa3b0b8-7469-4859-89d5-476ae5915101\" anyType_id=\"USER\" pushTask_id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" fiql=\"surname==Verdi\"/>\n-  <PushTaskAnyFilter id=\"f054810e-6842-4017-8f60-5b4031fa2c72\" anyType_id=\"GROUP\" pushTask_id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Verdi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\"  active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"95f047fc-1a8a-45f4-b56c-6e04d8ca5567\" anyType_id=\"USER\" pushTask_id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" fiql=\"surname==Verdi\"/>\n-  <PushTaskAnyFilter id=\"013a4298-4b14-4f8b-9f59-191c2d53dbd8\" anyType_id=\"GROUP\" pushTask_id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\"  active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Verdi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" name=\"Export on resource-ldap\" resource_id=\"resource-ldap\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"30842acc-f2dd-4d47-b359-20db06c30803\" anyType_id=\"USER\" pushTask_id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" fiql=\"username==_NO_ONE_\"/>\n-  <PushTaskAnyFilter id=\"9e4c0233-440e-4b5b-9563-11ec0f55a334\" anyType_id=\"GROUP\" pushTask_id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" fiql=\"name==citizen\"/>\n+            unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"username==_NO_ONE_\",\"GROUP\":\"name==citizen\"}'/>\n   <PullTask remediation=\"0\" id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" name=\"CSV Task (update matching; provision unmatching)\" resource_id=\"resource-csv\"\n             destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"INCREMENTAL\"\n             unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>"},{"sha":"ed6e1573a58ebdba4e291c75c3a9336eb01ddda2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyTypeDAO.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeDAO.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -94,5 +94,4 @@ public void delete(final String key) {\n \n         entityManager().remove(anyType);\n     }\n-\n }"},{"sha":"84aaef19017edf9cd76015e64c8771da23f548a7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -473,6 +473,8 @@ public int count(\n     public <T extends Task<T>> T save(final T task) {\n         if (task instanceof JPANotificationTask) {\n             ((JPANotificationTask) task).list2json();\n+        } else if (task instanceof JPAPushTask) {\n+            ((JPAPushTask) task).map2json();\n         }\n         return entityManager().merge(task);\n     }"},{"sha":"3aef72ac639b8543b507f69857d36c99fe51c39e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractAnyTemplate.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnyTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnyTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAnyTemplate.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n+import java.util.Optional;\n import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n import javax.persistence.MappedSuperclass;\n@@ -64,10 +65,6 @@ public AnyTO get() {\n \n     @Override\n     public void set(final AnyTO template) {\n-        if (template == null) {\n-            this.template = null;\n-        } else {\n-            this.template = POJOHelper.serialize(template);\n-        }\n+        this.template = Optional.ofNullable(template).map(POJOHelper::serialize).orElse(null);\n     }\n }"},{"sha":"5a508b85312b1c9a1016a7531543da42dcecfb48","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -90,7 +90,6 @@\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n-import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.user.DynRoleMembership;\n import org.apache.syncope.core.persistence.api.entity.user.LAPlainAttr;\n@@ -144,7 +143,6 @@\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPropagationTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPullTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTask;\n-import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTaskAnyFilter;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPASchedTask;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPADynRoleMembership;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPALAPlainAttr;\n@@ -278,8 +276,6 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n             result = (E) new JPAMacroTask();\n         } else if (reference.equals(SchedTask.class)) {\n             result = (E) new JPASchedTask();\n-        } else if (reference.equals(PushTaskAnyFilter.class)) {\n-            result = (E) new JPAPushTaskAnyFilter();\n         } else if (reference.equals(AnyTemplatePullTask.class)) {\n             result = (E) new JPAAnyTemplatePullTask();\n         } else if (reference.equals(SecurityQuestion.class)) {"},{"sha":"2a09c91bc3a46d10bcf1a36d26358e66480c27f8","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/AbstractProvisioningTask.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -18,18 +18,22 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.task;\n \n+import java.util.Optional;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n+import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n import javax.persistence.MappedSuperclass;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.common.lib.types.MatchingRule;\n+import org.apache.syncope.common.lib.types.ThreadPoolSettings;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.jpa.entity.JPAExternalResource;\n import org.apache.syncope.core.persistence.jpa.validation.entity.ProvisioningTaskCheck;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n \n @MappedSuperclass\n @ProvisioningTaskCheck\n@@ -70,6 +74,9 @@\n     @Enumerated(EnumType.STRING)\n     protected MatchingRule matchingRule;\n \n+    @Lob\n+    protected String concurrentSettings;\n+\n     @Override\n     public ExternalResource getResource() {\n         return resource;\n@@ -143,4 +150,15 @@ public MatchingRule getMatchingRule() {\n     public void setMatchingRule(final MatchingRule matchigRule) {\n         this.matchingRule = matchigRule;\n     }\n+\n+    @Override\n+    public ThreadPoolSettings getConcurrentSettings() {\n+        return Optional.ofNullable(concurrentSettings).\n+                map(s -> POJOHelper.deserialize(s, ThreadPoolSettings.class)).orElse(null);\n+    }\n+\n+    @Override\n+    public void setConcurrentSettings(final ThreadPoolSettings settings) {\n+        this.concurrentSettings = Optional.ofNullable(settings).map(POJOHelper::serialize).orElse(null);\n+    }\n }"},{"sha":"0c66ed7cfb4141d99d6cfa2adde499481cd7c307","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPullTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPullTask.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -154,7 +154,7 @@ public void setRemediation(final boolean remediation) {\n \n     @Override\n     public boolean isRemediation() {\n-        return remediation;\n+        return concurrentSettings != null ? true : remediation;\n     }\n \n     @Override"},{"sha":"16b97cbcf4bf66fb15467847178bb133fdb8c78f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPushTask.java","status":"modified","additions":51,"deletions":15,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTask.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -18,29 +18,38 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.task;\n \n+import com.fasterxml.jackson.core.type.TypeReference;\n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.Optional;\n import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.JoinColumn;\n import javax.persistence.JoinTable;\n+import javax.persistence.Lob;\n import javax.persistence.ManyToMany;\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n+import javax.persistence.PostLoad;\n+import javax.persistence.PostPersist;\n+import javax.persistence.PostUpdate;\n+import javax.persistence.PrePersist;\n+import javax.persistence.PreUpdate;\n import javax.persistence.Table;\n+import javax.persistence.Transient;\n import javax.persistence.UniqueConstraint;\n import org.apache.syncope.common.lib.types.IdMImplementationType;\n-import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n-import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.JPAImplementation;\n import org.apache.syncope.core.persistence.jpa.entity.JPARealm;\n+import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n \n @Entity\n @Table(name = JPAPushTask.TABLE)\n@@ -50,9 +59,19 @@ public class JPAPushTask extends AbstractProvisioningTask<PushTask> implements P\n \n     public static final String TABLE = \"PushTask\";\n \n+    protected static final TypeReference<HashMap<String, String>> FILTER_TYPEREF =\n+            new TypeReference<HashMap<String, String>>() {\n+    };\n+\n     @ManyToOne(fetch = FetchType.EAGER, optional = false)\n     private JPARealm sourceRealm;\n \n+    @Lob\n+    private String filters;\n+\n+    @Transient\n+    private Map<String, String> filterMap = new HashMap<>();\n+\n     @ManyToMany(fetch = FetchType.EAGER)\n     @JoinTable(name = \"PushTaskAction\",\n             joinColumns =\n@@ -63,9 +82,6 @@ public class JPAPushTask extends AbstractProvisioningTask<PushTask> implements P\n             @UniqueConstraint(columnNames = { \"task_id\", \"implementation_id\" }))\n     private List<JPAImplementation> actions = new ArrayList<>();\n \n-    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"pushTask\")\n-    private List<JPAPushTaskAnyFilter> filters = new ArrayList<>();\n-\n     @OneToMany(targetEntity = JPAPushTaskExec.class,\n             cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"task\")\n     private List<TaskExec<SchedTask>> executions = new ArrayList<>();\n@@ -94,19 +110,13 @@ public List<? extends Implementation> getActions() {\n     }\n \n     @Override\n-    public boolean add(final PushTaskAnyFilter filter) {\n-        checkType(filter, JPAPushTaskAnyFilter.class);\n-        return this.filters.add((JPAPushTaskAnyFilter) filter);\n+    public Optional<String> getFilter(final String anyType) {\n+        return Optional.ofNullable(filterMap.get(anyType));\n     }\n \n     @Override\n-    public Optional<? extends PushTaskAnyFilter> getFilter(final AnyType anyType) {\n-        return filters.stream().filter(filter -> anyType != null && anyType.equals(filter.getAnyType())).findFirst();\n-    }\n-\n-    @Override\n-    public List<? extends PushTaskAnyFilter> getFilters() {\n-        return filters;\n+    public Map<String, String> getFilters() {\n+        return filterMap;\n     }\n \n     @Override\n@@ -118,4 +128,30 @@ protected Class<? extends TaskExec<SchedTask>> executionClass() {\n     protected List<TaskExec<SchedTask>> executions() {\n         return executions;\n     }\n+\n+    protected void json2map(final boolean clearFirst) {\n+        if (clearFirst) {\n+            getFilters().clear();\n+        }\n+        if (filters != null) {\n+            getFilters().putAll(POJOHelper.deserialize(filters, FILTER_TYPEREF));\n+        }\n+    }\n+\n+    @PostLoad\n+    public void postLoad() {\n+        json2map(false);\n+    }\n+\n+    @PostPersist\n+    @PostUpdate\n+    public void postSave() {\n+        json2map(true);\n+    }\n+\n+    @PrePersist\n+    @PreUpdate\n+    public void map2json() {\n+        filters = POJOHelper.serialize(getFilters());\n+    }\n }"},{"sha":"0950b6ddc0cad3cd96e0915288c215aa89fad390","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPushTaskAnyFilter.java","status":"removed","additions":0,"deletions":82,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a3efcf3ab454f0c75102944e09f873fd4753878d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a3efcf3ab454f0c75102944e09f873fd4753878d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPushTaskAnyFilter.java?ref=a3efcf3ab454f0c75102944e09f873fd4753878d","patch":"@@ -1,82 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.entity.task;\n-\n-import javax.persistence.Entity;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.Table;\n-import javax.persistence.UniqueConstraint;\n-import javax.validation.constraints.NotNull;\n-import org.apache.syncope.core.persistence.api.entity.AnyType;\n-import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n-import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n-import org.apache.syncope.core.persistence.jpa.entity.AbstractGeneratedKeyEntity;\n-import org.apache.syncope.core.persistence.jpa.entity.JPAAnyType;\n-\n-@Entity\n-@Table(name = JPAPushTaskAnyFilter.TABLE, uniqueConstraints =\n-        @UniqueConstraint(columnNames = { \"pushTask_id\", \"anyType_id\" }))\n-public class JPAPushTaskAnyFilter extends AbstractGeneratedKeyEntity implements PushTaskAnyFilter {\n-\n-    private static final long serialVersionUID = 3517381731849788407L;\n-\n-    public static final String TABLE = \"PushTaskAnyFilter\";\n-\n-    @ManyToOne(optional = false)\n-    private JPAPushTask pushTask;\n-\n-    @ManyToOne(optional = false)\n-    private JPAAnyType anyType;\n-\n-    @NotNull\n-    private String fiql;\n-\n-    @Override\n-    public PushTask getPushTask() {\n-        return pushTask;\n-    }\n-\n-    @Override\n-    public void setPushTask(final PushTask pushTask) {\n-        checkType(pushTask, JPAPushTask.class);\n-        this.pushTask = (JPAPushTask) pushTask;\n-    }\n-\n-    @Override\n-    public AnyType getAnyType() {\n-        return anyType;\n-    }\n-\n-    @Override\n-    public void setAnyType(final AnyType anyType) {\n-        checkType(anyType, JPAAnyType.class);\n-        this.anyType = (JPAAnyType) anyType;\n-    }\n-\n-    @Override\n-    public String getFIQLCond() {\n-        return fiql;\n-    }\n-\n-    @Override\n-    public void setFIQLCond(final String fiql) {\n-        this.fiql = fiql;\n-    }\n-\n-}"},{"sha":"d71e3c676ac5a0e66bdf263d34b923a8dd917bfb","filename":"core/persistence-jpa/src/test/resources/core-test.properties","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcore-test.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcore-test.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcore-test.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -27,8 +27,8 @@ persistence.domain[0].dbUsername=sa\n persistence.domain[0].dbPassword=\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.H2Dictionary\n persistence.domain[0].auditSql=audit.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n persistence.domain[1].key=Two\n persistence.domain[1].jdbcDriver=org.h2.Driver\n@@ -37,8 +37,8 @@ persistence.domain[1].dbUsername=sa\n persistence.domain[1].dbPassword=\n persistence.domain[1].databasePlatform=org.apache.openjpa.jdbc.sql.H2Dictionary\n persistence.domain[1].auditSql=audit.sql\n-persistence.domain[1].poolMaxActive=10\n-persistence.domain[1].poolMinIdle=2\n+persistence.domain[1].poolMaxActive=20\n+persistence.domain[1].poolMinIdle=5\n persistence.domain[1].adminPassword=2AA60A8FF7FCD473D321E0146AFD9E26DF395147\n persistence.domain[1].adminCipherAlgorithm=SHA\n "},{"sha":"1a11e11471aba9e67b9ce3b320c18d7d3b362f18","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":22,"deletions":33,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -836,69 +836,58 @@ under the License.\n   <PushTask id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-            unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>  \n-  <PushTaskAnyFilter id=\"1fdcff65-765f-4a6e-98a7-13ef7cca47e2\" anyType_id=\"USER\" pushTask_id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" fiql=\"surname==Vivaldi\"/>\n-  <PushTaskAnyFilter id=\"3b564c51-5d64-48b3-8da5-fd4ebc10e0a8\" anyType_id=\"GROUP\" pushTask_id=\"af558be4-9d2f-4359-bf85-a554e6e90be1\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Vivaldi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-            unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"199efd21-5e89-46ac-95de-f47e9d0569fc\" anyType_id=\"USER\" pushTask_id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" fiql=\"surname==Bellini\"/>\n-  <PushTaskAnyFilter id=\"7672a167-77d6-4639-8b1d-0af561293c7d\" anyType_id=\"GROUP\" pushTask_id=\"97f327b6-2eff-4d35-85e8-d581baaab855\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Bellini\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"03aa2a04-4881-4573-9117-753f81b04865\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"39a11ba6-397a-4c94-8bfe-1f4f757d6501\" anyType_id=\"USER\" pushTask_id=\"03aa2a04-4881-4573-9117-753f81b04865\" fiql=\"surname==Puccini\"/>\n-  <PushTaskAnyFilter id=\"5bd7501e-8a18-4fbd-a3fe-a1e731ba95db\" anyType_id=\"GROUP\" pushTask_id=\"03aa2a04-4881-4573-9117-753f81b04865\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Puccini\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n-            unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"0d0371a3-5772-4b4c-ad14-139adf1d346a\" anyType_id=\"USER\" pushTask_id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" fiql=\"surname==Verdi\"/>\n-  <PushTaskAnyFilter id=\"2e7488ae-a2fc-4657-a93b-159b8433c0e7\" anyType_id=\"GROUP\" pushTask_id=\"5e5f7c7e-9de7-4c6a-99f1-4df1af959807\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Verdi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"41bf22fe-a014-41af-9a75-402b987eb433\" anyType_id=\"USER\" pushTask_id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" fiql=\"username==_NO_ONE_\"/>\n-  <PushTaskAnyFilter id=\"fa983fde-795e-4c89-a6f7-1ccd80a8adeb\" anyType_id=\"GROUP\" pushTask_id=\"0bc11a19-6454-45c2-a4e3-ceef84e5d79b\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"username==_NO_ONE_\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"ec674143-480a-4816-98ad-b61fa090821e\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"e238a6dc-0b04-46cf-9bfa-be68bd9f2da0\" anyType_id=\"USER\" pushTask_id=\"ec674143-480a-4816-98ad-b61fa090821e\" fiql=\"surname==Verdi\"/>\n-  <PushTaskAnyFilter id=\"0eaa643e-0add-4c46-8273-539f9d6abec5\" anyType_id=\"GROUP\" pushTask_id=\"ec674143-480a-4816-98ad-b61fa090821e\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Verdi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"335b4f11-589a-44c5-80b0-ba94892f0c62\" anyType_id=\"USER\" pushTask_id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" fiql=\"surname==Rossini\"/>\n-  <PushTaskAnyFilter id=\"b32eecc2-aa4f-43c6-a501-a692c3e93113\" anyType_id=\"GROUP\" pushTask_id=\"c46edc3a-a18b-4af2-b707-f4a415507496\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Rossini\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"IGNORE\" matchingRule=\"LINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"9f974a0d-87d8-4cae-9ea9-1fc245bc1dbf\" anyType_id=\"USER\" pushTask_id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" fiql=\"surname==Verdi\"/>\n-  <PushTaskAnyFilter id=\"0dc46ba4-1270-4fa9-b3e1-79f940d4308f\" anyType_id=\"GROUP\" pushTask_id=\"51318433-cce4-4f71-8f45-9534b6c9c819\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"LINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Verdi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"3aa3b0b8-7469-4859-89d5-476ae5915101\" anyType_id=\"USER\" pushTask_id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" fiql=\"surname==Verdi\"/>\n-  <PushTaskAnyFilter id=\"f054810e-6842-4017-8f60-5b4031fa2c72\" anyType_id=\"GROUP\" pushTask_id=\"24b1be9c-7e3b-443a-86c9-798ebce5eaf2\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Verdi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" name=\"Export on resource-testdb2\" resource_id=\"resource-testdb2\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\"  active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"95f047fc-1a8a-45f4-b56c-6e04d8ca5567\" anyType_id=\"USER\" pushTask_id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" fiql=\"surname==Verdi\"/>\n-  <PushTaskAnyFilter id=\"013a4298-4b14-4f8b-9f59-191c2d53dbd8\" anyType_id=\"GROUP\" pushTask_id=\"375c7b7f-9e3a-4833-88c9-b7787b0a69f2\" fiql=\"name==_NO_ONE_\"/>\n+            unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\"  active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"surname==Verdi\",\"GROUP\":\"name==_NO_ONE_\"}'/>\n   <PushTask id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" name=\"Export on resource-ldap\" resource_id=\"resource-ldap\"\n             sourceRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\"\n             performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"        \n-            unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"/>\n-  <PushTaskAnyFilter id=\"30842acc-f2dd-4d47-b359-20db06c30803\" anyType_id=\"USER\" pushTask_id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" fiql=\"username==_NO_ONE_\"/>\n-  <PushTaskAnyFilter id=\"9e4c0233-440e-4b5b-9563-11ec0f55a334\" anyType_id=\"GROUP\" pushTask_id=\"fd905ba5-9d56-4f51-83e2-859096a67b75\" fiql=\"name==citizen\"/>\n+            unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" active=\"1\" jobDelegate_id=\"PushJobDelegate\"\n+            filters='{\"USER\":\"username==_NO_ONE_\",\"GROUP\":\"name==citizen\"}'/>\n   <PullTask remediation=\"0\" id=\"986867e2-993b-430e-8feb-aa9abb4c1dcd\" name=\"CSV Task (update matching; provision unmatching)\" resource_id=\"resource-csv\"\n             destinationRealm_id=\"e4c28e7a-9dbf-4ee7-9441-93812a0d4a28\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" pullMode=\"INCREMENTAL\"\n             unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\" active=\"1\" jobDelegate_id=\"PullJobDelegate\"/>"},{"sha":"e5019a685b105dd0cddce1146b0d8c6162ca36e1","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/AnyObjectPullResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPullResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -19,5 +19,4 @@\n package org.apache.syncope.core.provisioning.api.pushpull;\n \n public interface AnyObjectPullResultHandler extends SyncopePullResultHandler {\n-\n }"},{"sha":"db573ec59e0ff3b004b9304e45c333943f5ceaef","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/AnyObjectPushResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FAnyObjectPushResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -19,5 +19,4 @@\n package org.apache.syncope.core.provisioning.api.pushpull;\n \n public interface AnyObjectPushResultHandler extends SyncopePushResultHandler {\n-\n }"},{"sha":"15526a6068e95a25bc507ed03a337a0ec772110c","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/GroupPushResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FGroupPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FGroupPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FGroupPushResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -19,5 +19,4 @@\n package org.apache.syncope.core.provisioning.api.pushpull;\n \n public interface GroupPushResultHandler extends SyncopePushResultHandler {\n-\n }"},{"sha":"b0edb1b53134aed8b29a6e6c1a08d3fc6dc5d87c","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ProvisioningProfile.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningProfile.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n import org.apache.syncope.common.lib.to.ProvisioningReport;\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n@@ -31,7 +32,7 @@\n \n     private final T task;\n \n-    private final List<ProvisioningReport> results = new ArrayList<>();\n+    private final List<ProvisioningReport> results = new CopyOnWriteArrayList<>();\n \n     private boolean dryRun;\n "},{"sha":"56528176a97243806f782daf5228e0b559d9112a","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/RealmPullResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPullResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -19,5 +19,4 @@\n package org.apache.syncope.core.provisioning.api.pushpull;\n \n public interface RealmPullResultHandler extends SyncopePullResultHandler {\n-\n }"},{"sha":"c69a7ab21ff3eb85c00c5fed5ce0972c8792e1ae","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/RealmPushResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPushResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -19,5 +19,4 @@\n package org.apache.syncope.core.provisioning.api.pushpull;\n \n public interface RealmPushResultHandler extends SyncopePushResultHandler {\n-\n }"},{"sha":"6092987bd283616a930cef77b02d81e8a13cda27","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopePullResultHandler.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePullResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -24,8 +24,6 @@\n \n public interface SyncopePullResultHandler extends SyncopeResultHandler<PullTask, PullActions>, SyncResultsHandler {\n \n-    void setPullExecutor(SyncopePullExecutor executor);\n-\n     @Override\n     boolean handle(SyncDelta delta);\n }"},{"sha":"6e6cfd934065164a08070a3728c12ef3c9d5b792","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopePushExecutor.java","status":"renamed","additions":5,"deletions":14,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePushExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePushExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopePushExecutor.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -16,22 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api.entity.task;\n+package org.apache.syncope.core.provisioning.api.pushpull;\n \n-import org.apache.syncope.core.persistence.api.entity.AnyType;\n-import org.apache.syncope.core.persistence.api.entity.Entity;\n+public interface SyncopePushExecutor {\n \n-public interface PushTaskAnyFilter extends Entity {\n+    void reportHandled(String anyType, String key);\n \n-    PushTask getPushTask();\n+    boolean wasInterruptRequested();\n \n-    void setPushTask(PushTask pushTask);\n-\n-    AnyType getAnyType();\n-\n-    void setAnyType(AnyType anyType);\n-\n-    String getFIQLCond();\n-\n-    void setFIQLCond(String fiql);\n+    void setInterrupted();\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PushTaskAnyFilter.java"},{"sha":"2b4975cf88d5020d1d195e5da4b99b8b4e3d173b","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopeResultHandler.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -22,7 +22,5 @@\n \n public interface SyncopeResultHandler<T extends ProvisioningTask<?>, A extends ProvisioningActions> {\n \n-    ProvisioningProfile<T, A> getProfile();\n-\n     void setProfile(ProvisioningProfile<T, A> profile);\n }"},{"sha":"b8af3f4a34196a1a9ac14c94578cacc370c1fe5c","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/UserPullResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FUserPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FUserPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FUserPullResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -19,5 +19,4 @@\n package org.apache.syncope.core.provisioning.api.pushpull;\n \n public interface UserPullResultHandler extends SyncopePullResultHandler {\n-\n }"},{"sha":"4669e9c7eabaedd1a3e00f7a3d4b9d8d0d1365f4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultMappingManager.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultMappingManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultMappingManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultMappingManager.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -804,10 +804,7 @@ public Pair<AttrSchemaType, List<PlainAttrValue>> getIntValues(\n                             attr = ((GroupableRelatable<?, ?, ?, ?, ?>) ref).getPlainAttr(\n                                     intAttrName.getSchema().getKey(), membership).orElse(null);\n                         }\n-                        if (attr == null) {\n-                            LOG.warn(\"Invalid PlainSchema {} or PlainAttr not found for {}\",\n-                                    intAttrName.getSchema().getKey(), ref);\n-                        } else {\n+                        if (attr != null) {\n                             if (attr.getUniqueValue() != null) {\n                                 values.add(anyUtils.clonePlainAttrValue(attr.getUniqueValue()));\n                             } else if (attr.getValues() != null) {"},{"sha":"fb6202645b8a9c129721f5a1bedd7183f8a5a12b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/TaskDataBinderImpl.java","status":"modified","additions":12,"deletions":14,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -57,7 +57,6 @@\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n-import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n import org.apache.syncope.core.persistence.api.entity.task.SchedTask;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n@@ -151,19 +150,14 @@ protected void fill(final ProvisioningTask<?> provisioningTask, final Provisioni\n                 if (anyType == null) {\n                     LOG.debug(\"Invalid AnyType {} specified, ignoring...\", type);\n                 } else {\n-                    PushTaskAnyFilter filter = pushTask.getFilter(anyType).orElse(null);\n-                    if (filter == null) {\n-                        filter = entityFactory.newEntity(PushTaskAnyFilter.class);\n-                        filter.setAnyType(anyType);\n-                        filter.setPushTask(pushTask);\n-                        pushTask.add(filter);\n-                    }\n-                    filter.setFIQLCond(fiql);\n+                    pushTask.getFilters().put(anyType.getKey(), fiql);\n                 }\n             });\n             // remove all filters not contained in the TO\n-            pushTask.getFilters().\n-                    removeIf(anyFilter -> !pushTaskTO.getFilters().containsKey(anyFilter.getAnyType().getKey()));\n+            pushTask.getFilters().entrySet().\n+                    removeIf(filter -> !pushTaskTO.getFilters().containsKey(filter.getKey()));\n+\n+            pushTask.setConcurrentSettings(pushTaskTO.getConcurrentSettings());\n         } else if (provisioningTask instanceof PullTask && provisioningTaskTO instanceof PullTaskTO) {\n             PullTask pullTask = (PullTask) provisioningTask;\n             PullTaskTO pullTaskTO = (PullTaskTO) provisioningTaskTO;\n@@ -223,6 +217,8 @@ protected void fill(final ProvisioningTask<?> provisioningTask, final Provisioni\n                     removeIf(anyTemplate -> !pullTaskTO.getTemplates().containsKey(anyTemplate.getAnyType().getKey()));\n \n             pullTask.setRemediation(pullTaskTO.isRemediation());\n+\n+            pullTask.setConcurrentSettings(pullTaskTO.getConcurrentSettings());\n         }\n \n         // 3. fill the remaining fields\n@@ -502,6 +498,8 @@ public <T extends TaskTO> T getTaskTO(final Task<?> task, final TaskUtils taskUt\n                         put(template.getAnyType().getKey(), template.get()));\n \n                 pullTaskTO.setRemediation(pullTask.isRemediation());\n+\n+                pullTaskTO.setConcurrentSettings(pullTask.getConcurrentSettings());\n                 break;\n \n             case PUSH:\n@@ -516,9 +514,9 @@ public <T extends TaskTO> T getTaskTO(final Task<?> task, final TaskUtils taskUt\n                 pushTaskTO.setUnmatchingRule(pushTask.getUnmatchingRule() == null\n                         ? UnmatchingRule.ASSIGN : pushTask.getUnmatchingRule());\n \n-                pushTask.getFilters().\n-                        forEach(filter -> pushTaskTO.getFilters().\n-                        put(filter.getAnyType().getKey(), filter.getFIQLCond()));\n+                pushTaskTO.getFilters().putAll(pushTask.getFilters());\n+\n+                pushTaskTO.setConcurrentSettings(pushTask.getConcurrentSettings());\n                 break;\n \n             case NOTIFICATION:"},{"sha":"f7a7bc7e6c8ffc8984d1bf0e63da3fba70c58dff","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":140,"deletions":157,"changes":297,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.time.OffsetDateTime;\n-import java.util.ArrayList;\n import java.util.List;\n import java.util.Set;\n import java.util.stream.Collectors;\n@@ -62,7 +61,6 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n-import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n@@ -73,9 +71,16 @@\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n-public abstract class AbstractPullResultHandler extends AbstractSyncopeResultHandler<PullTask, PullActions>\n+public abstract class AbstractPullResultHandler\n+        extends AbstractSyncopeResultHandler<PullTask, PullActions>\n         implements SyncopePullResultHandler {\n \n+    protected static Result and(final Result left, final Result right) {\n+        return left == Result.SUCCESS && right == Result.SUCCESS\n+                ? Result.SUCCESS\n+                : Result.FAILURE;\n+    }\n+\n     @Autowired\n     protected InboundMatcher inboundMatcher;\n \n@@ -109,10 +114,6 @@ public abstract class AbstractPullResultHandler extends AbstractSyncopeResultHan\n     @Autowired\n     protected EntityFactory entityFactory;\n \n-    protected SyncopePullExecutor executor;\n-\n-    protected Result latestResult;\n-\n     protected abstract String getName(AnyTO anyTO);\n \n     protected abstract String getName(AnyCR anyCR);\n@@ -123,11 +124,6 @@ public abstract class AbstractPullResultHandler extends AbstractSyncopeResultHan\n \n     protected abstract AnyUR doUpdate(AnyTO before, AnyUR anyUR, SyncDelta delta, ProvisioningReport result);\n \n-    @Override\n-    public void setPullExecutor(final SyncopePullExecutor executor) {\n-        this.executor = executor;\n-    }\n-\n     @Transactional(rollbackFor = Throwable.class, propagation = Propagation.REQUIRES_NEW)\n     @Override\n     public boolean handle(final SyncDelta delta) {\n@@ -139,34 +135,14 @@ public boolean handle(final SyncDelta delta) {\n                     \"No provision found on \" + profile.getTask().getResource()\n                     + \" for \" + delta.getObject().getObjectClass()));\n \n-            doHandle(delta, provision, anyTypeDAO.find(provision.getAnyType()).getKind());\n-            executor.reportHandled(delta.getObjectClass().getObjectClassValue(), delta.getObject().getName());\n+            Result latestResult = doHandle(delta, provision, anyTypeDAO.find(provision.getAnyType()).getKind());\n \n             LOG.debug(\"Successfully handled {}\", delta);\n \n             if (profile.getTask().getPullMode() != PullMode.INCREMENTAL) {\n-                if (executor.wasInterruptRequested()) {\n-                    LOG.debug(\"Pull interrupted\");\n-                    executor.setInterrupted();\n-                    return false;\n-                }\n                 return true;\n             }\n-\n-            boolean shouldContinue;\n-            synchronized (this) {\n-                shouldContinue = latestResult == Result.SUCCESS;\n-                this.latestResult = null;\n-            }\n-            if (shouldContinue) {\n-                executor.setLatestSyncToken(delta.getObjectClass().getObjectClassValue(), delta.getToken());\n-            }\n-            if (executor.wasInterruptRequested()) {\n-                LOG.debug(\"Pull interrupted\");\n-                executor.setInterrupted();\n-                return false;\n-            }\n-            return shouldContinue;\n+            return latestResult == Result.SUCCESS;\n         } catch (IgnoreProvisionException e) {\n             ProvisioningReport ignoreResult = new ProvisioningReport();\n             ignoreResult.setOperation(ResourceOperation.NONE);\n@@ -181,9 +157,6 @@ public boolean handle(final SyncDelta delta) {\n \n             LOG.warn(\"Ignoring during pull\", e);\n \n-            executor.setLatestSyncToken(delta.getObjectClass().getObjectClassValue(), delta.getToken());\n-            executor.reportHandled(delta.getObjectClass().getObjectClassValue(), delta.getObject().getName());\n-\n             return true;\n         } catch (JobExecutionException e) {\n             LOG.error(\"Pull failed\", e);\n@@ -192,7 +165,25 @@ public boolean handle(final SyncDelta delta) {\n         }\n     }\n \n-    protected List<ProvisioningReport> provision(\n+    protected void throwIgnoreProvisionException(final SyncDelta delta, final Exception exception)\n+            throws JobExecutionException {\n+\n+        if (exception instanceof IgnoreProvisionException) {\n+            throw IgnoreProvisionException.class.cast(exception);\n+        }\n+\n+        IgnoreProvisionException ipe = null;\n+        for (PullActions action : profile.getActions()) {\n+            if (ipe == null) {\n+                ipe = action.onError(profile, delta, exception);\n+            }\n+        }\n+        if (ipe != null) {\n+            throw ipe;\n+        }\n+    }\n+\n+    protected Result provision(\n             final UnmatchingRule rule,\n             final SyncDelta delta,\n             final AnyTypeKind anyTypeKind,\n@@ -201,7 +192,7 @@ protected List<ProvisioningReport> provision(\n         if (!profile.getTask().isPerformCreate()) {\n             LOG.debug(\"PullTask not configured for create\");\n             end(provision.getAnyType(), UnmatchingRule.toEventName(rule), Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            return Result.SUCCESS;\n         }\n \n         AnyCR anyCR = connObjectUtils.getAnyCR(\n@@ -224,79 +215,62 @@ protected List<ProvisioningReport> provision(\n         if (profile.isDryRun()) {\n             result.setKey(null);\n             end(provision.getAnyType(), UnmatchingRule.toEventName(rule), Result.SUCCESS, null, null, delta);\n-        } else {\n-            Object output;\n-            Result resultStatus;\n-            try {\n-                for (PullActions action : profile.getActions()) {\n-                    if (rule == UnmatchingRule.ASSIGN) {\n-                        action.beforeAssign(profile, delta, anyCR);\n-                    } else if (rule == UnmatchingRule.PROVISION) {\n-                        action.beforeProvision(profile, delta, anyCR);\n-                    }\n-                }\n-                result.setName(getName(anyCR));\n-\n-                AnyTO created = doCreate(anyCR, delta);\n-                output = created;\n-                result.setKey(created.getKey());\n-                result.setName(getName(created));\n-                resultStatus = Result.SUCCESS;\n-\n-                for (PullActions action : profile.getActions()) {\n-                    action.after(profile, delta, created, result);\n-                }\n-\n-                LOG.debug(\"{} {} successfully created\", created.getType(), created.getKey());\n-            } catch (PropagationException e) {\n-                // A propagation failure doesn't imply a pull failure.\n-                // The propagation exception status will be reported into the propagation task execution.\n-                LOG.error(\"Could not propagate {} {}\",\n-                        provision.getAnyType(), delta.getUid().getUidValue(), e);\n-                output = e;\n-                resultStatus = Result.FAILURE;\n-            } catch (Exception e) {\n-                throwIgnoreProvisionException(delta, e);\n+            return Result.SUCCESS;\n+        }\n \n-                result.setStatus(ProvisioningReport.Status.FAILURE);\n-                result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n-                LOG.error(\"Could not create {} {} \", provision.getAnyType(), delta.getUid().getUidValue(), e);\n-                output = e;\n-\n-                if (profile.getTask().isRemediation()) {\n-                    // set to SUCCESS to let the incremental flow go on in case of errors\n-                    resultStatus = Result.SUCCESS;\n-                    createRemediation(provision.getAnyType(), null, anyCR, null, result, delta);\n-                } else {\n-                    resultStatus = Result.FAILURE;\n+        Object output;\n+        Result resultStatus;\n+        try {\n+            for (PullActions action : profile.getActions()) {\n+                if (rule == UnmatchingRule.ASSIGN) {\n+                    action.beforeAssign(profile, delta, anyCR);\n+                } else if (rule == UnmatchingRule.PROVISION) {\n+                    action.beforeProvision(profile, delta, anyCR);\n                 }\n             }\n+            result.setName(getName(anyCR));\n \n-            end(provision.getAnyType(), UnmatchingRule.toEventName(rule), resultStatus, null, output, delta);\n-        }\n-\n-        return List.of(result);\n-    }\n-\n-    protected void throwIgnoreProvisionException(final SyncDelta delta, final Exception exception)\n-            throws JobExecutionException {\n+            AnyTO created = doCreate(anyCR, delta);\n+            output = created;\n+            result.setKey(created.getKey());\n+            result.setName(getName(created));\n+            resultStatus = Result.SUCCESS;\n \n-        if (exception instanceof IgnoreProvisionException) {\n-            throw IgnoreProvisionException.class.cast(exception);\n-        }\n+            for (PullActions action : profile.getActions()) {\n+                action.after(profile, delta, created, result);\n+            }\n \n-        IgnoreProvisionException ipe = null;\n-        for (PullActions action : profile.getActions()) {\n-            if (ipe == null) {\n-                ipe = action.onError(profile, delta, exception);\n+            LOG.debug(\"{} {} successfully created\", created.getType(), created.getKey());\n+        } catch (PropagationException e) {\n+            // A propagation failure doesn't imply a pull failure.\n+            // The propagation exception status will be reported into the propagation task execution.\n+            LOG.error(\"Could not propagate {} {}\",\n+                    provision.getAnyType(), delta.getUid().getUidValue(), e);\n+            output = e;\n+            resultStatus = Result.FAILURE;\n+        } catch (Exception e) {\n+            throwIgnoreProvisionException(delta, e);\n+\n+            result.setStatus(ProvisioningReport.Status.FAILURE);\n+            result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n+            LOG.error(\"Could not create {} {} \", provision.getAnyType(), delta.getUid().getUidValue(), e);\n+            output = e;\n+\n+            if (profile.getTask().isRemediation()) {\n+                // set to SUCCESS to let the incremental flow go on in case of errors\n+                resultStatus = Result.SUCCESS;\n+                createRemediation(provision.getAnyType(), null, anyCR, null, result, delta);\n+            } else {\n+                resultStatus = Result.FAILURE;\n             }\n         }\n-        if (ipe != null) {\n-            throw ipe;\n-        }\n+\n+        end(provision.getAnyType(), UnmatchingRule.toEventName(rule), resultStatus, null, output, delta);\n+        profile.getResults().add(result);\n+        return resultStatus;\n     }\n \n-    protected List<ProvisioningReport> update(\n+    protected Result update(\n             final SyncDelta delta,\n             final List<PullMatch> matches,\n             final Provision provision) throws JobExecutionException {\n@@ -305,13 +279,12 @@ protected List<ProvisioningReport> update(\n             LOG.debug(\"PullTask not configured for update\");\n             end(provision.getAnyType(),\n                     MatchingRule.toEventName(MatchingRule.UPDATE), Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to update {}\", matches);\n \n-        List<ProvisioningReport> results = new ArrayList<>();\n-\n+        Result global = Result.SUCCESS;\n         for (PullMatch match : matches) {\n             LOG.debug(\"About to update {}\", match);\n \n@@ -393,13 +366,16 @@ protected List<ProvisioningReport> update(\n                 end(provision.getAnyType(),\n                         MatchingRule.toEventName(MatchingRule.UPDATE),\n                         resultStatus, before, output, delta, effectiveReq);\n+                global = and(global, resultStatus);\n             }\n-            results.add(result);\n+\n+            profile.getResults().add(result);\n         }\n-        return results;\n+\n+        return global;\n     }\n \n-    protected List<ProvisioningReport> deprovision(\n+    protected Result deprovision(\n             final MatchingRule matchingRule,\n             final SyncDelta delta,\n             final List<PullMatch> matches,\n@@ -410,13 +386,12 @@ protected List<ProvisioningReport> deprovision(\n             LOG.debug(\"PullTask not configured for update\");\n             end(provision.getAnyType(),\n                     MatchingRule.toEventName(matchingRule), Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to deprovision {}\", matches);\n \n-        List<ProvisioningReport> results = new ArrayList<>();\n-\n+        Result global = Result.SUCCESS;\n         for (PullMatch match : matches) {\n             LOG.debug(\"About to unassign resource {}\", match);\n \n@@ -506,15 +481,18 @@ protected List<ProvisioningReport> deprovision(\n                     }\n                 }\n                 end(provision.getAnyType(),\n-                        MatchingRule.toEventName(matchingRule), resultStatus, before, output, delta);\n+                        MatchingRule.toEventName(matchingRule),\n+                        resultStatus, before, output, delta);\n+                global = and(global, resultStatus);\n             }\n-            results.add(result);\n+\n+            profile.getResults().add(result);\n         }\n \n-        return results;\n+        return global;\n     }\n \n-    protected List<ProvisioningReport> link(\n+    protected Result link(\n             final SyncDelta delta,\n             final List<PullMatch> matches,\n             final Provision provision,\n@@ -528,13 +506,12 @@ protected List<ProvisioningReport> link(\n                             ? MatchingRule.toEventName(MatchingRule.UNLINK)\n                             : MatchingRule.toEventName(MatchingRule.LINK),\n                     Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to update {}\", matches);\n \n-        final List<ProvisioningReport> results = new ArrayList<>();\n-\n+        Result global = Result.SUCCESS;\n         for (PullMatch match : matches) {\n             LOG.debug(\"About to unassign resource {}\", match);\n \n@@ -612,14 +589,16 @@ protected List<ProvisioningReport> link(\n                                 ? MatchingRule.toEventName(MatchingRule.UNLINK)\n                                 : MatchingRule.toEventName(MatchingRule.LINK),\n                         resultStatus, before, output, delta, effectiveReq);\n+                global = and(global, resultStatus);\n             }\n-            results.add(result);\n+\n+            profile.getResults().add(result);\n         }\n \n-        return results;\n+        return global;\n     }\n \n-    protected List<ProvisioningReport> delete(\n+    protected Result delete(\n             final SyncDelta delta,\n             final List<PullMatch> matches,\n             final Provision provision)\n@@ -629,14 +608,13 @@ protected List<ProvisioningReport> delete(\n             LOG.debug(\"PullTask not configured for delete\");\n             end(provision.getAnyType(),\n                     ResourceOperation.DELETE.name().toLowerCase(), Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to delete {}\", matches);\n \n-        List<ProvisioningReport> results = new ArrayList<>();\n-\n-        matches.forEach(match -> {\n+        Result global = Result.SUCCESS;\n+        for (PullMatch match : matches) {\n             Object output;\n             Result resultStatus = Result.FAILURE;\n \n@@ -687,23 +665,25 @@ protected List<ProvisioningReport> delete(\n                     }\n \n                     end(provision.getAnyType(),\n-                            ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, delta);\n+                            ResourceOperation.DELETE.name().toLowerCase(),\n+                            resultStatus, before, output, delta);\n+                    global = and(global, resultStatus);\n                 }\n \n-                results.add(result);\n+                profile.getResults().add(result);\n             } catch (NotFoundException e) {\n                 LOG.error(\"Could not find {} {}\", provision.getAnyType(), match, e);\n             } catch (DelegatedAdministrationException e) {\n                 LOG.error(\"Not allowed to read {} {}\", provision.getAnyType(), match, e);\n             } catch (Exception e) {\n                 LOG.error(\"Could not delete {} {}\", provision.getAnyType(), match, e);\n             }\n-        });\n+        }\n \n-        return results;\n+        return global;\n     }\n \n-    protected List<ProvisioningReport> ignore(\n+    protected Result ignore(\n             final SyncDelta delta,\n             final List<PullMatch> matches,\n             final Provision provision,\n@@ -713,8 +693,6 @@ protected List<ProvisioningReport> ignore(\n \n         LOG.debug(\"Any to ignore {}\", delta.getObject().getUid().getUidValue());\n \n-        List<ProvisioningReport> results = new ArrayList<>();\n-\n         if (matches == null) {\n             ProvisioningReport report = new ProvisioningReport();\n             report.setKey(null);\n@@ -727,7 +705,7 @@ protected List<ProvisioningReport> ignore(\n                 report.setMessage(message[0]);\n             }\n \n-            results.add(report);\n+            profile.getResults().add(report);\n         } else {\n             matches.forEach(match -> {\n                 ProvisioningReport report = new ProvisioningReport();\n@@ -741,29 +719,31 @@ protected List<ProvisioningReport> ignore(\n                     report.setMessage(message[0]);\n                 }\n \n-                results.add(report);\n+                profile.getResults().add(report);\n             });\n         }\n \n         end(provision.getAnyType(),\n                 matching\n                         ? MatchingRule.toEventName(MatchingRule.IGNORE)\n-                        : UnmatchingRule.toEventName(UnmatchingRule.IGNORE), Result.SUCCESS, null, null, delta);\n+                        : UnmatchingRule.toEventName(UnmatchingRule.IGNORE),\n+                Result.SUCCESS, null, null, delta);\n \n-        return results;\n+        return Result.SUCCESS;\n     }\n \n-    protected void handleAnys(\n+    protected Result handleAnys(\n             final SyncDelta delta,\n             final List<PullMatch> matches,\n             final AnyTypeKind anyTypeKind,\n             final Provision provision) throws JobExecutionException {\n \n         if (matches.isEmpty()) {\n             LOG.debug(\"Nothing to do\");\n-            return;\n+            return Result.SUCCESS;\n         }\n \n+        Result result = Result.SUCCESS;\n         switch (delta.getDeltaType()) {\n             case CREATE:\n             case UPDATE:\n@@ -772,12 +752,11 @@ protected void handleAnys(\n                     switch (profile.getTask().getUnmatchingRule()) {\n                         case ASSIGN:\n                         case PROVISION:\n-                            profile.getResults().addAll(\n-                                    provision(profile.getTask().getUnmatchingRule(), delta, anyTypeKind, provision));\n+                            result = provision(profile.getTask().getUnmatchingRule(), delta, anyTypeKind, provision);\n                             break;\n \n                         case IGNORE:\n-                            profile.getResults().addAll(ignore(delta, null, provision, false));\n+                            result = ignore(delta, null, provision, false);\n                             break;\n \n                         default:\n@@ -804,25 +783,24 @@ protected void handleAnys(\n \n                     switch (profile.getTask().getMatchingRule()) {\n                         case UPDATE:\n-                            profile.getResults().addAll(update(delta, matches, provision));\n+                            result = update(delta, matches, provision);\n                             break;\n \n                         case DEPROVISION:\n                         case UNASSIGN:\n-                            profile.getResults().addAll(\n-                                    deprovision(profile.getTask().getMatchingRule(), delta, matches, provision));\n+                            result = deprovision(profile.getTask().getMatchingRule(), delta, matches, provision);\n                             break;\n \n                         case LINK:\n-                            profile.getResults().addAll(link(delta, matches, provision, false));\n+                            result = link(delta, matches, provision, false);\n                             break;\n \n                         case UNLINK:\n-                            profile.getResults().addAll(link(delta, matches, provision, true));\n+                            result = link(delta, matches, provision, true);\n                             break;\n \n                         case IGNORE:\n-                            profile.getResults().addAll(ignore(delta, matches, provision, true));\n+                            result = ignore(delta, matches, provision, true);\n                             break;\n \n                         default:\n@@ -832,25 +810,28 @@ protected void handleAnys(\n                 break;\n \n             case DELETE:\n-                profile.getResults().addAll(delete(delta, matches, provision));\n+                result = delete(delta, matches, provision);\n                 break;\n \n             default:\n         }\n+\n+        return result;\n     }\n \n-    protected void handleLinkedAccounts(\n+    protected Result handleLinkedAccounts(\n             final SyncDelta delta,\n             final List<PullMatch> matches,\n             final Provision provision) throws JobExecutionException {\n \n         if (matches.isEmpty()) {\n             LOG.debug(\"Nothing to do\");\n-            return;\n+            return Result.SUCCESS;\n         }\n \n         // nothing to do in the general case\n         LOG.warn(\"Unexpected linked accounts found for {}: {}\", provision.getAnyType(), matches);\n+        return Result.SUCCESS;\n     }\n \n     /**\n@@ -859,9 +840,10 @@ protected void handleLinkedAccounts(\n      * @param delta returned by the underlying profile.getConnector()\n      * @param provision provisioning info\n      * @param anyTypeKind any type kind\n+     * @return if handle was successful or not\n      * @throws JobExecutionException in case of pull failure.\n      */\n-    protected void doHandle(\n+    protected Result doHandle(\n             final SyncDelta delta,\n             final Provision provision,\n             final AnyTypeKind anyTypeKind) throws JobExecutionException {\n@@ -877,6 +859,7 @@ protected void doHandle(\n         LOG.debug(\"Transformed {} for {} as {}\",\n                 finalDelta.getDeltaType(), finalDelta.getUid().getUidValue(), finalDelta.getObject().getObjectClass());\n \n+        Result result = Result.SUCCESS;\n         try {\n             List<PullMatch> matches = inboundMatcher.match(\n                     finalDelta,\n@@ -906,7 +889,7 @@ protected void doHandle(\n             }\n \n             // users, groups and any objects\n-            handleAnys(\n+            Result anys = handleAnys(\n                     finalDelta,\n                     matches.stream().\n                             filter(match -> match.getMatchTarget() == MatchType.ANY).\n@@ -915,14 +898,18 @@ protected void doHandle(\n                     provision);\n \n             // linked accounts\n-            handleLinkedAccounts(\n+            Result linkedAccounts = handleLinkedAccounts(\n                     finalDelta,\n                     matches.stream().\n                             filter(match -> match.getMatchTarget() == MatchType.LINKED_ACCOUNT).\n                             collect(Collectors.toList()), provision);\n+\n+            result = and(anys, linkedAccounts);\n         } catch (IllegalStateException | IllegalArgumentException e) {\n             LOG.warn(e.getMessage());\n         }\n+\n+        return result;\n     }\n \n     protected void end(\n@@ -934,10 +921,6 @@ protected void end(\n             final SyncDelta delta,\n             final Object... furtherInput) {\n \n-        synchronized (this) {\n-            this.latestResult = result;\n-        }\n-\n         notificationManager.createTasks(\n                 profile.getExecutor(),\n                 AuditElements.EventCategoryType.PULL,"},{"sha":"29f132fb23e653932d619d4a67281785c9ba5e09","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractRealmResultHandler.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractRealmResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -80,9 +80,4 @@\n     public void setProfile(final ProvisioningProfile<T, A> profile) {\n         this.profile = profile;\n     }\n-\n-    @Override\n-    public ProvisioningProfile<T, A> getProfile() {\n-        return profile;\n-    }\n }"},{"sha":"14c7e27f44e76df1aa96e8858fcd928cbcb044a6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractSyncopeResultHandler.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractSyncopeResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -104,11 +104,6 @@ public void setProfile(final ProvisioningProfile<T, A> profile) {\n         this.profile = profile;\n     }\n \n-    @Override\n-    public ProvisioningProfile<T, A> getProfile() {\n-        return profile;\n-    }\n-\n     protected String getContext() {\n         return (getClass().getSimpleName().contains(\"Pull\") ? \"PullTask\" : \"PushTask\")\n                 + \" \" + profile.getTask().getKey() + \" '\" + profile.getTask().getName() + \"'\";"},{"sha":"77f9f94ee15c31527c9bc37a4e2cd406f003f739","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":128,"deletions":139,"changes":267,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -18,9 +18,9 @@\n  */\n package org.apache.syncope.core.provisioning.java.pushpull;\n \n-import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n import java.util.Set;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -53,7 +53,6 @@\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.apache.syncope.core.provisioning.api.pushpull.RealmPullResultHandler;\n-import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n@@ -68,63 +67,50 @@\n         extends AbstractRealmResultHandler<PullTask, PullActions>\n         implements RealmPullResultHandler {\n \n-    @Autowired\n-    private InboundMatcher inboundMatcher;\n+    protected static Result and(final Result left, final Result right) {\n+        return left == Result.SUCCESS && right == Result.SUCCESS\n+                ? Result.SUCCESS\n+                : Result.FAILURE;\n+    }\n \n     @Autowired\n-    private ConnObjectUtils connObjectUtils;\n+    protected InboundMatcher inboundMatcher;\n \n     @Autowired\n-    private AnySearchDAO searchDAO;\n+    protected ConnObjectUtils connObjectUtils;\n \n     @Autowired\n-    private TaskDAO taskDAO;\n+    protected AnySearchDAO searchDAO;\n \n     @Autowired\n-    private CASSPClientAppDAO casSPClientAppDAO;\n+    protected TaskDAO taskDAO;\n \n     @Autowired\n-    private OIDCRPClientAppDAO oidcRPClientAppDAO;\n+    protected CASSPClientAppDAO casSPClientAppDAO;\n \n     @Autowired\n-    private SAML2SPClientAppDAO saml2SPClientAppDAO;\n-\n-    private SyncopePullExecutor executor;\n+    protected OIDCRPClientAppDAO oidcRPClientAppDAO;\n \n-    private Result latestResult;\n-\n-    @Override\n-    public void setPullExecutor(final SyncopePullExecutor executor) {\n-        this.executor = executor;\n-    }\n+    @Autowired\n+    protected SAML2SPClientAppDAO saml2SPClientAppDAO;\n \n     @Override\n     public boolean handle(final SyncDelta delta) {\n         try {\n-            OrgUnit orgUnit = profile.getTask().getResource().getOrgUnit();\n-            if (orgUnit == null) {\n-                throw new JobExecutionException(\"No orgUnit found on \" + profile.getTask().getResource() + \" for \"\n-                        + delta.getObject().getObjectClass());\n-            }\n+            OrgUnit orgUnit = Optional.ofNullable(profile.getTask().getResource().getOrgUnit()).\n+                    orElseThrow(() -> new JobExecutionException(\n+                    \"No orgUnit found on \" + profile.getTask().getResource() + \" for \"\n+                    + delta.getObject().getObjectClass()));\n \n-            doHandle(delta, orgUnit);\n-            executor.reportHandled(delta.getObjectClass().getObjectClassValue(), delta.getObject().getName());\n+            Result latestResult = doHandle(delta, orgUnit);\n \n             LOG.debug(\"Successfully handled {}\", delta);\n \n             if (profile.getTask().getPullMode() != PullMode.INCREMENTAL) {\n                 return true;\n             }\n \n-            boolean shouldContinue;\n-            synchronized (this) {\n-                shouldContinue = latestResult == Result.SUCCESS;\n-                this.latestResult = null;\n-            }\n-            if (shouldContinue) {\n-                executor.setLatestSyncToken(delta.getObjectClass().getObjectClassValue(), delta.getToken());\n-            }\n-            return shouldContinue;\n+            return latestResult == Result.SUCCESS;\n         } catch (IgnoreProvisionException e) {\n             ProvisioningReport ignoreResult = new ProvisioningReport();\n             ignoreResult.setOperation(ResourceOperation.NONE);\n@@ -136,9 +122,6 @@ public boolean handle(final SyncDelta delta) {\n \n             LOG.warn(\"Ignoring during pull\", e);\n \n-            executor.setLatestSyncToken(delta.getObjectClass().getObjectClassValue(), delta.getToken());\n-            executor.reportHandled(delta.getObjectClass().getObjectClassValue(), delta.getObject().getName());\n-\n             return true;\n         } catch (JobExecutionException e) {\n             LOG.error(\"Pull failed\", e);\n@@ -147,13 +130,31 @@ public boolean handle(final SyncDelta delta) {\n         }\n     }\n \n-    private List<ProvisioningReport> assign(final SyncDelta delta, final OrgUnit orgUnit)\n+    protected void throwIgnoreProvisionException(final SyncDelta delta, final Exception exception)\n+            throws JobExecutionException {\n+\n+        if (exception instanceof IgnoreProvisionException) {\n+            throw IgnoreProvisionException.class.cast(exception);\n+        }\n+\n+        IgnoreProvisionException ipe = null;\n+        for (PullActions action : profile.getActions()) {\n+            if (ipe == null) {\n+                ipe = action.onError(profile, delta, exception);\n+            }\n+        }\n+        if (ipe != null) {\n+            throw ipe;\n+        }\n+    }\n+\n+    protected Result assign(final SyncDelta delta, final OrgUnit orgUnit)\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformCreate()) {\n             LOG.debug(\"PullTask not configured for create\");\n-            finalize(UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            end(UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), Result.SUCCESS, null, null, delta);\n+            return Result.SUCCESS;\n         }\n \n         RealmTO realmTO = connObjectUtils.getRealmTO(delta.getObject(), orgUnit);\n@@ -174,25 +175,26 @@ private List<ProvisioningReport> assign(final SyncDelta delta, final OrgUnit org\n \n         if (profile.isDryRun()) {\n             result.setKey(null);\n-            finalize(UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), Result.SUCCESS, null, null, delta);\n-        } else {\n-            for (PullActions action : profile.getActions()) {\n-                action.beforeAssign(profile, delta, realmTO);\n-            }\n+            end(UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), Result.SUCCESS, null, null, delta);\n+            return Result.SUCCESS;\n+        }\n \n-            create(realmTO, delta, UnmatchingRule.ASSIGN, result);\n+        for (PullActions action : profile.getActions()) {\n+            action.beforeAssign(profile, delta, realmTO);\n         }\n \n-        return List.of(result);\n+        profile.getResults().add(result);\n+\n+        return create(realmTO, delta, UnmatchingRule.ASSIGN, result);\n     }\n \n-    private List<ProvisioningReport> provision(final SyncDelta delta, final OrgUnit orgUnit)\n+    protected Result provision(final SyncDelta delta, final OrgUnit orgUnit)\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformCreate()) {\n             LOG.debug(\"PullTask not configured for create\");\n-            finalize(UnmatchingRule.toEventName(UnmatchingRule.PROVISION), Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            end(UnmatchingRule.toEventName(UnmatchingRule.PROVISION), Result.SUCCESS, null, null, delta);\n+            return Result.SUCCESS;\n         }\n \n         RealmTO realmTO = connObjectUtils.getRealmTO(delta.getObject(), orgUnit);\n@@ -212,37 +214,20 @@ private List<ProvisioningReport> provision(final SyncDelta delta, final OrgUnit\n \n         if (profile.isDryRun()) {\n             result.setKey(null);\n-            finalize(UnmatchingRule.toEventName(UnmatchingRule.PROVISION), Result.SUCCESS, null, null, delta);\n-        } else {\n-            for (PullActions action : profile.getActions()) {\n-                action.beforeProvision(profile, delta, realmTO);\n-            }\n-\n-            create(realmTO, delta, UnmatchingRule.PROVISION, result);\n-        }\n-\n-        return List.of(result);\n-    }\n-\n-    private void throwIgnoreProvisionException(final SyncDelta delta, final Exception exception)\n-            throws JobExecutionException {\n-\n-        if (exception instanceof IgnoreProvisionException) {\n-            throw IgnoreProvisionException.class.cast(exception);\n+            end(UnmatchingRule.toEventName(UnmatchingRule.PROVISION), Result.SUCCESS, null, null, delta);\n+            return Result.SUCCESS;\n         }\n \n-        IgnoreProvisionException ipe = null;\n         for (PullActions action : profile.getActions()) {\n-            if (ipe == null) {\n-                ipe = action.onError(profile, delta, exception);\n-            }\n-        }\n-        if (ipe != null) {\n-            throw ipe;\n+            action.beforeProvision(profile, delta, realmTO);\n         }\n+\n+        profile.getResults().add(result);\n+\n+        return create(realmTO, delta, UnmatchingRule.PROVISION, result);\n     }\n \n-    private void create(\n+    protected Result create(\n             final RealmTO realmTO,\n             final SyncDelta delta,\n             final UnmatchingRule unmatchingRule,\n@@ -291,22 +276,22 @@ private void create(\n             resultStatus = Result.FAILURE;\n         }\n \n-        finalize(UnmatchingRule.toEventName(unmatchingRule), resultStatus, null, output, delta);\n+        end(UnmatchingRule.toEventName(unmatchingRule), resultStatus, null, output, delta);\n+        return resultStatus;\n     }\n \n-    private List<ProvisioningReport> update(final SyncDelta delta, final List<Realm> realms, final boolean inLink)\n+    protected Result update(final SyncDelta delta, final List<Realm> realms, final boolean inLink)\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformUpdate()) {\n             LOG.debug(\"PullTask not configured for update\");\n-            finalize(MatchingRule.toEventName(MatchingRule.UPDATE), Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            end(MatchingRule.toEventName(MatchingRule.UPDATE), Result.SUCCESS, null, null, delta);\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to update {}\", realms);\n \n-        List<ProvisioningReport> results = new ArrayList<>();\n-\n+        Result global = Result.SUCCESS;\n         for (Realm realm : realms) {\n             LOG.debug(\"About to update {}\", realm);\n \n@@ -366,30 +351,30 @@ private List<ProvisioningReport> update(final SyncDelta delta, final List<Realm>\n                     resultStatus = Result.FAILURE;\n                 }\n \n-                finalize(MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, delta);\n+                end(MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, delta);\n+                global = and(global, resultStatus);\n             }\n \n-            results.add(result);\n+            profile.getResults().add(result);\n         }\n \n-        return results;\n+        return global;\n     }\n \n-    private List<ProvisioningReport> deprovision(final SyncDelta delta, final List<Realm> realms, final boolean unlink)\n+    protected Result deprovision(final SyncDelta delta, final List<Realm> realms, final boolean unlink)\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformUpdate()) {\n             LOG.debug(\"PullTask not configured for update\");\n-            finalize(unlink\n+            end(unlink\n                     ? MatchingRule.toEventName(MatchingRule.UNASSIGN)\n                     : MatchingRule.toEventName(MatchingRule.DEPROVISION), Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to deprovision {}\", realms);\n \n-        final List<ProvisioningReport> results = new ArrayList<>();\n-\n+        Result global = Result.SUCCESS;\n         for (Realm realm : realms) {\n             LOG.debug(\"About to unassign resource {}\", realm);\n \n@@ -454,32 +439,33 @@ private List<ProvisioningReport> deprovision(final SyncDelta delta, final List<R\n                     resultStatus = Result.FAILURE;\n                 }\n \n-                finalize(unlink\n+                end(unlink\n                         ? MatchingRule.toEventName(MatchingRule.UNASSIGN)\n-                        : MatchingRule.toEventName(MatchingRule.DEPROVISION), resultStatus, before, output, delta);\n+                        : MatchingRule.toEventName(MatchingRule.DEPROVISION),\n+                        resultStatus, before, output, delta);\n+                global = and(global, resultStatus);\n             }\n \n-            results.add(result);\n+            profile.getResults().add(result);\n         }\n \n-        return results;\n+        return global;\n     }\n \n-    private List<ProvisioningReport> link(final SyncDelta delta, final List<Realm> realms, final boolean unlink)\n+    protected Result link(final SyncDelta delta, final List<Realm> realms, final boolean unlink)\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformUpdate()) {\n             LOG.debug(\"PullTask not configured for update\");\n-            finalize(unlink\n+            end(unlink\n                     ? MatchingRule.toEventName(MatchingRule.UNLINK)\n                     : MatchingRule.toEventName(MatchingRule.LINK), Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to link {}\", realms);\n \n-        final List<ProvisioningReport> results = new ArrayList<>();\n-\n+        Result global = Result.SUCCESS;\n         for (Realm realm : realms) {\n             LOG.debug(\"About to unassign resource {}\", realm);\n \n@@ -532,30 +518,32 @@ private List<ProvisioningReport> link(final SyncDelta delta, final List<Realm> r\n                     resultStatus = Result.FAILURE;\n                 }\n \n-                finalize(unlink\n+                end(unlink\n                         ? MatchingRule.toEventName(MatchingRule.UNLINK)\n-                        : MatchingRule.toEventName(MatchingRule.LINK), resultStatus, before, output, delta);\n+                        : MatchingRule.toEventName(MatchingRule.LINK),\n+                        resultStatus, before, output, delta);\n+                global = and(global, resultStatus);\n             }\n-            results.add(result);\n+\n+            profile.getResults().add(result);\n         }\n \n-        return results;\n+        return global;\n     }\n \n-    private List<ProvisioningReport> delete(final SyncDelta delta, final List<Realm> realms)\n+    protected Result delete(final SyncDelta delta, final List<Realm> realms)\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformDelete()) {\n             LOG.debug(\"PullTask not configured for delete\");\n-            finalize(ResourceOperation.DELETE.name().toLowerCase(), Result.SUCCESS, null, null, delta);\n-            return List.of();\n+            end(ResourceOperation.DELETE.name().toLowerCase(), Result.SUCCESS, null, null, delta);\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to delete {}\", realms);\n \n-        List<ProvisioningReport> results = new ArrayList<>();\n-\n-        realms.forEach(realm -> {\n+        Result global = Result.SUCCESS;\n+        for (Realm realm : realms) {\n             Object output;\n             Result resultStatus = Result.FAILURE;\n \n@@ -627,41 +615,43 @@ private List<ProvisioningReport> delete(final SyncDelta delta, final List<Realm>\n                         output = e;\n                     }\n \n-                    finalize(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, delta);\n+                    end(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, delta);\n+                    global = and(global, resultStatus);\n                 }\n \n-                results.add(result);\n+                profile.getResults().add(result);\n             } catch (DelegatedAdministrationException e) {\n                 LOG.error(\"Not allowed to read Realm {}\", realm, e);\n             } catch (Exception e) {\n                 LOG.error(\"Could not delete Realm {}\", realm, e);\n             }\n-        });\n+        }\n \n-        return results;\n+        return global;\n     }\n \n-    private ProvisioningReport ignore(final SyncDelta delta, final boolean matching) throws JobExecutionException {\n+    protected Result ignore(final SyncDelta delta, final boolean matching) throws JobExecutionException {\n         LOG.debug(\"Any to ignore {}\", delta.getObject().getUid().getUidValue());\n \n-        ProvisioningReport result = new ProvisioningReport();\n-\n-        result.setKey(null);\n-        result.setName(delta.getObject().getUid().getUidValue());\n-        result.setOperation(ResourceOperation.NONE);\n-        result.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n-        result.setStatus(ProvisioningReport.Status.SUCCESS);\n+        ProvisioningReport report = new ProvisioningReport();\n+        report.setKey(null);\n+        report.setName(delta.getObject().getUid().getUidValue());\n+        report.setOperation(ResourceOperation.NONE);\n+        report.setAnyType(SyncopeConstants.REALM_ANYTYPE);\n+        report.setStatus(ProvisioningReport.Status.SUCCESS);\n+        profile.getResults().add(report);\n \n         if (!profile.isDryRun()) {\n-            finalize(matching\n+            end(matching\n                     ? MatchingRule.toEventName(MatchingRule.IGNORE)\n                     : UnmatchingRule.toEventName(UnmatchingRule.IGNORE), Result.SUCCESS, null, null, delta);\n+            return Result.SUCCESS;\n         }\n \n-        return result;\n+        return Result.SUCCESS;\n     }\n \n-    private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobExecutionException {\n+    protected Result doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobExecutionException {\n         LOG.debug(\"Process {} for {} as {}\",\n                 delta.getDeltaType(), delta.getUid().getUidValue(), delta.getObject().getObjectClass());\n \n@@ -696,6 +686,7 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n                 }\n         }\n \n+        Result result = Result.SUCCESS;\n         try {\n             switch (delta.getDeltaType()) {\n                 case CREATE:\n@@ -704,15 +695,15 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n                     if (realms.isEmpty()) {\n                         switch (profile.getTask().getUnmatchingRule()) {\n                             case ASSIGN:\n-                                profile.getResults().addAll(assign(finalDelta, orgUnit));\n+                                result = assign(finalDelta, orgUnit);\n                                 break;\n \n                             case PROVISION:\n-                                profile.getResults().addAll(provision(finalDelta, orgUnit));\n+                                result = provision(finalDelta, orgUnit);\n                                 break;\n \n                             case IGNORE:\n-                                profile.getResults().add(ignore(finalDelta, false));\n+                                result = ignore(finalDelta, false);\n                                 break;\n \n                             default:\n@@ -721,27 +712,27 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n                     } else {\n                         switch (profile.getTask().getMatchingRule()) {\n                             case UPDATE:\n-                                profile.getResults().addAll(update(finalDelta, realms, false));\n+                                result = update(finalDelta, realms, false);\n                                 break;\n \n                             case DEPROVISION:\n-                                profile.getResults().addAll(deprovision(finalDelta, realms, false));\n+                                result = deprovision(finalDelta, realms, false);\n                                 break;\n \n                             case UNASSIGN:\n-                                profile.getResults().addAll(deprovision(finalDelta, realms, true));\n+                                result = deprovision(finalDelta, realms, true);\n                                 break;\n \n                             case LINK:\n-                                profile.getResults().addAll(link(finalDelta, realms, false));\n+                                result = link(finalDelta, realms, false);\n                                 break;\n \n                             case UNLINK:\n-                                profile.getResults().addAll(link(finalDelta, realms, true));\n+                                result = link(finalDelta, realms, true);\n                                 break;\n \n                             case IGNORE:\n-                                profile.getResults().add(ignore(finalDelta, true));\n+                                result = ignore(finalDelta, true);\n                                 break;\n \n                             default:\n@@ -752,10 +743,10 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n \n                 case DELETE:\n                     if (realms.isEmpty()) {\n-                        finalize(ResourceOperation.DELETE.name().toLowerCase(), Result.SUCCESS, null, null, finalDelta);\n+                        end(ResourceOperation.DELETE.name().toLowerCase(), Result.SUCCESS, null, null, finalDelta);\n                         LOG.debug(\"No match found for deletion\");\n                     } else {\n-                        profile.getResults().addAll(delete(finalDelta, realms));\n+                        result = delete(finalDelta, realms);\n                     }\n                     break;\n \n@@ -764,19 +755,17 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n         } catch (IllegalStateException | IllegalArgumentException e) {\n             LOG.warn(e.getMessage());\n         }\n+\n+        return result;\n     }\n \n-    private void finalize(\n+    protected void end(\n             final String event,\n             final Result result,\n             final Object before,\n             final Object output,\n             final SyncDelta delta) {\n \n-        synchronized (this) {\n-            this.latestResult = result;\n-        }\n-\n         notificationManager.createTasks(\n                 AuthContextUtils.getWho(),\n                 AuditElements.EventCategoryType.PULL,"},{"sha":"d664a3705dc8f8ada3fd1eb16c03ee3f4472e7c9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPullResultHandler.java","status":"modified","additions":110,"deletions":101,"changes":211,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -140,16 +140,17 @@ protected AnyUR doUpdate(\n     }\n \n     @Override\n-    protected void handleLinkedAccounts(\n+    protected Result handleLinkedAccounts(\n             final SyncDelta delta,\n             final List<PullMatch> matches,\n             final Provision provision) throws JobExecutionException {\n \n+        Result global = Result.SUCCESS;\n         for (PullMatch match : matches) {\n             User user = (User) match.getAny();\n             if (user == null) {\n                 LOG.error(\"Could not find linking user, cannot process match {}\", match);\n-                return;\n+                return Result.FAILURE;\n             }\n \n             Optional<? extends LinkedAccount> found =\n@@ -163,13 +164,12 @@ protected void handleLinkedAccounts(\n                     case CREATE_OR_UPDATE:\n                         switch (profile.getTask().getMatchingRule()) {\n                             case UPDATE:\n-                                update(delta, account, provision).ifPresent(profile.getResults()::add);\n+                                global = and(global, update(delta, account, provision));\n                                 break;\n \n                             case DEPROVISION:\n                             case UNASSIGN:\n-                                deprovision(profile.getTask().getMatchingRule(), delta, account).\n-                                        ifPresent(profile.getResults()::add);\n+                                global = and(global, deprovision(profile.getTask().getMatchingRule(), delta, account));\n                                 break;\n \n                             case LINK:\n@@ -179,7 +179,7 @@ protected void handleLinkedAccounts(\n                                 break;\n \n                             case IGNORE:\n-                                profile.getResults().add(ignore(delta, account, true));\n+                                global = and(global, ignore(delta, account, true));\n                                 break;\n \n                             default:\n@@ -188,7 +188,7 @@ protected void handleLinkedAccounts(\n                         break;\n \n                     case DELETE:\n-                        delete(delta, account, provision).ifPresent(profile.getResults()::add);\n+                        global = and(global, delete(delta, account, provision));\n                         break;\n \n                     default:\n@@ -205,12 +205,12 @@ protected void handleLinkedAccounts(\n                         switch (profile.getTask().getUnmatchingRule()) {\n                             case ASSIGN:\n                             case PROVISION:\n-                                provision(profile.getTask().getUnmatchingRule(), delta, user, accountTO, provision).\n-                                        ifPresent(profile.getResults()::add);\n+                                global = and(global, provision(\n+                                        profile.getTask().getUnmatchingRule(), delta, user, accountTO, provision));\n                                 break;\n \n                             case IGNORE:\n-                                profile.getResults().add(ignore(delta, null, false));\n+                                global = and(global, ignore(delta, null, false));\n                                 break;\n \n                             default:\n@@ -232,9 +232,11 @@ protected void handleLinkedAccounts(\n                 }\n             }\n         }\n+\n+        return global;\n     }\n \n-    protected Optional<ProvisioningReport> deprovision(\n+    protected Result deprovision(\n             final MatchingRule matchingRule,\n             final SyncDelta delta,\n             final LinkedAccount account) throws JobExecutionException {\n@@ -243,7 +245,7 @@ protected Optional<ProvisioningReport> deprovision(\n             LOG.debug(\"PullTask not configured for update\");\n             end(AnyTypeKind.USER.name(),\n                     MatchingRule.toEventName(MatchingRule.UPDATE), Result.SUCCESS, null, null, delta);\n-            return Optional.empty();\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to deprovision {}\", account);\n@@ -257,9 +259,9 @@ protected Optional<ProvisioningReport> deprovision(\n \n         LinkedAccountTO before = userDataBinder.getLinkedAccountTO(account);\n \n+        Result resultStatus = Result.SUCCESS;\n         if (!profile.isDryRun()) {\n             Object output = before;\n-            Result resultStatus;\n \n             try {\n                 if (matchingRule == MatchingRule.UNASSIGN) {\n@@ -309,12 +311,13 @@ protected Optional<ProvisioningReport> deprovision(\n             }\n \n             end(AnyTypeKind.USER.name(), MatchingRule.toEventName(matchingRule), resultStatus, before, output, delta);\n+            profile.getResults().add(report);\n         }\n \n-        return Optional.of(report);\n+        return resultStatus;\n     }\n \n-    protected Optional<ProvisioningReport> provision(\n+    protected Result provision(\n             final UnmatchingRule rule,\n             final SyncDelta delta,\n             final User user,\n@@ -325,7 +328,7 @@ protected Optional<ProvisioningReport> provision(\n         if (!profile.getTask().isPerformCreate()) {\n             LOG.debug(\"PullTask not configured for create\");\n             end(AnyTypeKind.USER.name(), UnmatchingRule.toEventName(rule), Result.SUCCESS, null, null, delta);\n-            return Optional.empty();\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to create {}\", accountTO);\n@@ -340,99 +343,101 @@ protected Optional<ProvisioningReport> provision(\n         if (profile.isDryRun()) {\n             report.setKey(null);\n             end(AnyTypeKind.USER.name(), UnmatchingRule.toEventName(rule), Result.SUCCESS, null, null, delta);\n-        } else {\n-            UserTO owner = userDataBinder.getUserTO(user, false);\n-            UserCR connObject = connObjectUtils.getAnyCR(\n-                    delta.getObject(), profile.getTask(), AnyTypeKind.USER, provision, false);\n+            return Result.SUCCESS;\n+        }\n \n-            if (connObject.getUsername().equals(owner.getUsername())) {\n-                accountTO.setUsername(null);\n-            } else if (!connObject.getUsername().equals(accountTO.getUsername())) {\n-                accountTO.setUsername(connObject.getUsername());\n-            }\n+        UserTO owner = userDataBinder.getUserTO(user, false);\n+        UserCR connObject = connObjectUtils.getAnyCR(\n+                delta.getObject(), profile.getTask(), AnyTypeKind.USER, provision, false);\n \n-            if (connObject.getPassword() != null) {\n-                accountTO.setPassword(connObject.getPassword());\n-            }\n+        if (connObject.getUsername().equals(owner.getUsername())) {\n+            accountTO.setUsername(null);\n+        } else if (!connObject.getUsername().equals(accountTO.getUsername())) {\n+            accountTO.setUsername(connObject.getUsername());\n+        }\n \n-            accountTO.setSuspended(BooleanUtils.isTrue(BooleanUtils.negate(enabled(delta))));\n+        if (connObject.getPassword() != null) {\n+            accountTO.setPassword(connObject.getPassword());\n+        }\n \n-            connObject.getPlainAttrs().forEach(connObjectAttr -> {\n-                Optional<Attr> ownerAttr = owner.getPlainAttr(connObjectAttr.getSchema());\n-                if (ownerAttr.isPresent() && ownerAttr.get().getValues().equals(connObjectAttr.getValues())) {\n-                    accountTO.getPlainAttrs().removeIf(attr -> connObjectAttr.getSchema().equals(attr.getSchema()));\n-                } else {\n-                    accountTO.getPlainAttrs().add(connObjectAttr);\n-                }\n-            });\n+        accountTO.setSuspended(BooleanUtils.isTrue(BooleanUtils.negate(enabled(delta))));\n \n-            for (PullActions action : profile.getActions()) {\n-                if (rule == UnmatchingRule.ASSIGN) {\n-                    action.beforeAssign(profile, delta, accountTO);\n-                } else if (rule == UnmatchingRule.PROVISION) {\n-                    action.beforeProvision(profile, delta, accountTO);\n-                }\n+        connObject.getPlainAttrs().forEach(connObjectAttr -> {\n+            Optional<Attr> ownerAttr = owner.getPlainAttr(connObjectAttr.getSchema());\n+            if (ownerAttr.isPresent() && ownerAttr.get().getValues().equals(connObjectAttr.getValues())) {\n+                accountTO.getPlainAttrs().removeIf(attr -> connObjectAttr.getSchema().equals(attr.getSchema()));\n+            } else {\n+                accountTO.getPlainAttrs().add(connObjectAttr);\n             }\n-            report.setName(accountTO.getConnObjectKeyValue());\n+        });\n \n-            UserUR req = new UserUR();\n-            req.setKey(user.getKey());\n-            req.getLinkedAccounts().add(new LinkedAccountUR.Builder().\n-                    operation(PatchOperation.ADD_REPLACE).linkedAccountTO(accountTO).build());\n-\n-            Result resultStatus;\n-            Object output;\n+        for (PullActions action : profile.getActions()) {\n+            if (rule == UnmatchingRule.ASSIGN) {\n+                action.beforeAssign(profile, delta, accountTO);\n+            } else if (rule == UnmatchingRule.PROVISION) {\n+                action.beforeProvision(profile, delta, accountTO);\n+            }\n+        }\n+        report.setName(accountTO.getConnObjectKeyValue());\n \n-            try {\n-                userProvisioningManager.update(\n-                        req,\n-                        report,\n-                        null,\n-                        Set.of(profile.getTask().getResource().getKey()),\n-                        true,\n-                        profile.getExecutor(),\n-                        getContext());\n+        UserUR req = new UserUR();\n+        req.setKey(user.getKey());\n+        req.getLinkedAccounts().add(new LinkedAccountUR.Builder().\n+                operation(PatchOperation.ADD_REPLACE).linkedAccountTO(accountTO).build());\n \n-                LinkedAccountTO created = userDAO.find(req.getKey()).\n-                        getLinkedAccount(accountTO.getResource(), accountTO.getConnObjectKeyValue()).\n-                        map(acct -> userDataBinder.getLinkedAccountTO(acct)).\n-                        orElse(null);\n+        Result resultStatus;\n+        Object output;\n \n-                output = created;\n-                resultStatus = Result.SUCCESS;\n+        try {\n+            userProvisioningManager.update(\n+                    req,\n+                    report,\n+                    null,\n+                    Set.of(profile.getTask().getResource().getKey()),\n+                    true,\n+                    profile.getExecutor(),\n+                    getContext());\n+\n+            LinkedAccountTO created = userDAO.find(req.getKey()).\n+                    getLinkedAccount(accountTO.getResource(), accountTO.getConnObjectKeyValue()).\n+                    map(acct -> userDataBinder.getLinkedAccountTO(acct)).\n+                    orElse(null);\n+\n+            output = created;\n+            resultStatus = Result.SUCCESS;\n \n-                for (PullActions action : profile.getActions()) {\n-                    action.after(profile, delta, created, report);\n-                }\n+            for (PullActions action : profile.getActions()) {\n+                action.after(profile, delta, created, report);\n+            }\n \n-                LOG.debug(\"Linked account {} successfully created\", accountTO.getConnObjectKeyValue());\n-            } catch (PropagationException e) {\n-                // A propagation failure doesn't imply a pull failure.\n-                // The propagation exception status will be reported into the propagation task execution.\n-                LOG.error(\"Could not propagate linked acccount {}\", accountTO.getConnObjectKeyValue());\n-                output = e;\n-                resultStatus = Result.FAILURE;\n-            } catch (Exception e) {\n-                throwIgnoreProvisionException(delta, e);\n+            LOG.debug(\"Linked account {} successfully created\", accountTO.getConnObjectKeyValue());\n+        } catch (PropagationException e) {\n+            // A propagation failure doesn't imply a pull failure.\n+            // The propagation exception status will be reported into the propagation task execution.\n+            LOG.error(\"Could not propagate linked acccount {}\", accountTO.getConnObjectKeyValue());\n+            output = e;\n+            resultStatus = Result.FAILURE;\n+        } catch (Exception e) {\n+            throwIgnoreProvisionException(delta, e);\n \n-                report.setStatus(ProvisioningReport.Status.FAILURE);\n-                report.setMessage(ExceptionUtils.getRootCauseMessage(e));\n-                LOG.error(\"Could not create linked account {} \", accountTO.getConnObjectKeyValue(), e);\n-                output = e;\n-                resultStatus = Result.FAILURE;\n+            report.setStatus(ProvisioningReport.Status.FAILURE);\n+            report.setMessage(ExceptionUtils.getRootCauseMessage(e));\n+            LOG.error(\"Could not create linked account {} \", accountTO.getConnObjectKeyValue(), e);\n+            output = e;\n+            resultStatus = Result.FAILURE;\n \n-                if (profile.getTask().isRemediation()) {\n-                    createRemediation(provision.getAnyType(), null, null, req, report, delta);\n-                }\n+            if (profile.getTask().isRemediation()) {\n+                createRemediation(provision.getAnyType(), null, null, req, report, delta);\n             }\n-\n-            end(AnyTypeKind.USER.name(), UnmatchingRule.toEventName(rule), resultStatus, null, output, delta);\n         }\n \n-        return Optional.of(report);\n+        end(AnyTypeKind.USER.name(), UnmatchingRule.toEventName(rule), resultStatus, null, output, delta);\n+        profile.getResults().add(report);\n+\n+        return resultStatus;\n     }\n \n-    protected Optional<ProvisioningReport> update(\n+    protected Result update(\n             final SyncDelta delta,\n             final LinkedAccount account,\n             final Provision provision)\n@@ -442,7 +447,7 @@ protected Optional<ProvisioningReport> update(\n             LOG.debug(\"PullTask not configured for update\");\n             end(AnyTypeKind.USER.name(),\n                     MatchingRule.toEventName(MatchingRule.UPDATE), Result.SUCCESS, null, null, delta);\n-            return Optional.empty();\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to update {}\", account);\n@@ -455,6 +460,7 @@ protected Optional<ProvisioningReport> update(\n         report.setAnyType(MatchType.LINKED_ACCOUNT.name());\n         report.setStatus(ProvisioningReport.Status.SUCCESS);\n \n+        Result resultStatus = Result.SUCCESS;\n         if (!profile.isDryRun()) {\n             LinkedAccountTO before = userDataBinder.getLinkedAccountTO(account);\n \n@@ -500,9 +506,7 @@ protected Optional<ProvisioningReport> update(\n                 action.beforeUpdate(profile, delta, before, userUR);\n             }\n \n-            Result resultStatus;\n             Object output;\n-\n             try {\n                 userProvisioningManager.update(\n                         userUR,\n@@ -546,13 +550,15 @@ protected Optional<ProvisioningReport> update(\n             }\n \n             end(AnyTypeKind.USER.name(),\n-                    MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, delta);\n+                    MatchingRule.toEventName(MatchingRule.UPDATE),\n+                    resultStatus, before, output, delta);\n+            profile.getResults().add(report);\n         }\n \n-        return Optional.of(report);\n+        return resultStatus;\n     }\n \n-    protected Optional<ProvisioningReport> delete(\n+    protected Result delete(\n             final SyncDelta delta,\n             final LinkedAccount account,\n             final Provision provision)\n@@ -562,7 +568,7 @@ protected Optional<ProvisioningReport> delete(\n             LOG.debug(\"PullTask not configured for delete\");\n             end(AnyTypeKind.USER.name(),\n                     ResourceOperation.DELETE.name().toLowerCase(), Result.SUCCESS, null, null, delta);\n-            return Optional.empty();\n+            return Result.SUCCESS;\n         }\n \n         LOG.debug(\"About to delete {}\", account);\n@@ -622,16 +628,18 @@ protected Optional<ProvisioningReport> delete(\n                 }\n \n                 end(AnyTypeKind.USER.name(),\n-                        ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, delta);\n+                        ResourceOperation.DELETE.name().toLowerCase(),\n+                        resultStatus, before, output, delta);\n+                profile.getResults().add(report);\n             }\n         } catch (Exception e) {\n             LOG.error(\"Could not delete linked account {}\", account, e);\n         }\n \n-        return Optional.of(report);\n+        return resultStatus;\n     }\n \n-    protected ProvisioningReport ignore(\n+    protected Result ignore(\n             final SyncDelta delta,\n             final LinkedAccount account,\n             final boolean matching,\n@@ -659,6 +667,7 @@ protected ProvisioningReport ignore(\n                         : UnmatchingRule.toEventName(UnmatchingRule.IGNORE),\n                 AuditElements.Result.SUCCESS, null, null, delta);\n \n-        return report;\n+        profile.getResults().add(report);\n+        return Result.SUCCESS;\n     }\n }"},{"sha":"adbeacf18e9b27a48aa8e03b26217bdd913abbdc","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":60,"deletions":51,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.provisioning.java.pushpull;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n@@ -47,6 +48,7 @@\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n+import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.Connector;\n@@ -93,7 +95,7 @@ public class PullJobDelegate extends AbstractProvisioningJobDelegate<PullTask> i\n     @Autowired\n     protected PlainAttrValidationManager validator;\n \n-    protected final Map<String, SyncToken> latestSyncTokens = new HashMap<>();\n+    protected final Map<String, SyncToken> latestSyncTokens = Collections.synchronizedMap(new HashMap<>());\n \n     protected ProvisioningProfile<PullTask, PullActions> profile;\n \n@@ -110,21 +112,23 @@ public void setLatestSyncToken(final String objectClass, final SyncToken latestS\n \n     @Override\n     public void reportHandled(final String objectClass, final Name name) {\n-        MutablePair<Integer, String> pair = Optional.ofNullable(handled.get(objectClass)).orElseGet(() -> {\n-            MutablePair<Integer, String> p = MutablePair.of(0, null);\n-            handled.put(objectClass, p);\n-            return p;\n-        });\n-        pair.setLeft(pair.getLeft() + 1);\n-        pair.setRight(name.getNameValue());\n-\n-        if (!handled.isEmpty()) {\n-            StringBuilder builder = new StringBuilder(\"Processed:\\n\");\n-            handled.forEach((k, v) -> builder.append(' ').append(v.getLeft()).append('\\t').\n-                    append(k).\n-                    append(\" / latest: \").append(v.getRight()).\n-                    append('\\n'));\n-            setStatus(builder.toString());\n+        synchronized (handled) {\n+            MutablePair<Integer, String> pair = Optional.ofNullable(handled.get(objectClass)).orElseGet(() -> {\n+                MutablePair<Integer, String> p = MutablePair.of(0, null);\n+                handled.put(objectClass, p);\n+                return p;\n+            });\n+            pair.setLeft(pair.getLeft() + 1);\n+            pair.setRight(name.getNameValue());\n+\n+            if (!handled.isEmpty()) {\n+                StringBuilder builder = new StringBuilder(\"Processed:\\n\");\n+                handled.forEach((k, v) -> builder.append(' ').append(v.getLeft()).append('\\t').\n+                        append(k).\n+                        append(\" / latest: \").append(v.getRight()).\n+                        append('\\n'));\n+                setStatus(builder.toString());\n+            }\n         }\n     }\n \n@@ -151,16 +155,16 @@ protected void setGroupOwners(final GroupPullResultHandler ghandler) {\n                 Optional<PullMatch> match = inboundMatcher.match(\n                         anyTypeDAO.findUser(),\n                         ownerKey,\n-                        ghandler.getProfile().getTask().getResource(),\n-                        ghandler.getProfile().getConnector());\n+                        profile.getTask().getResource(),\n+                        profile.getConnector());\n                 if (match.isPresent()) {\n                     group.setUserOwner((User) match.get().getAny());\n                 } else {\n                     inboundMatcher.match(\n                             anyTypeDAO.findGroup(),\n                             ownerKey,\n-                            ghandler.getProfile().getTask().getResource(),\n-                            ghandler.getProfile().getConnector()).\n+                            profile.getTask().getResource(),\n+                            profile.getConnector()).\n                             ifPresent(groupMatch -> group.setGroupOwner((Group) groupMatch.getAny()));\n                 }\n             }\n@@ -209,12 +213,8 @@ protected UserPullResultHandler buildUserHandler() {\n     }\n \n     protected GroupPullResultHandler buildGroupHandler() {\n-        GroupPullResultHandler handler = (GroupPullResultHandler) ApplicationContextProvider.getBeanFactory().\n+        return (GroupPullResultHandler) ApplicationContextProvider.getBeanFactory().\n                 createBean(DefaultGroupPullResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n-        handler.setProfile(profile);\n-        handler.setPullExecutor(this);\n-\n-        return handler;\n     }\n \n     @Override\n@@ -230,11 +230,14 @@ protected String doExecuteProvisioning(\n         profile = new ProvisioningProfile<>(connector, pullTask);\n         profile.getActions().addAll(getPullActions(pullTask.getActions()));\n         profile.setDryRun(dryRun);\n-        profile.setConflictResolutionAction(pullTask.getResource().getPullPolicy() == null\n-                ? ConflictResolutionAction.IGNORE\n-                : pullTask.getResource().getPullPolicy().getConflictResolutionAction());\n+        profile.setConflictResolutionAction(\n+                Optional.ofNullable(pullTask.getResource().getPullPolicy()).\n+                        map(PullPolicy::getConflictResolutionAction).\n+                        orElse(ConflictResolutionAction.IGNORE));\n         profile.setExecutor(executor);\n \n+        PullResultHandlerDispatcher dispatcher = new PullResultHandlerDispatcher(profile, this);\n+\n         latestSyncTokens.clear();\n \n         if (!profile.isDryRun()) {\n@@ -256,9 +259,11 @@ protected String doExecuteProvisioning(\n             OperationOptions options = MappingUtils.buildOperationOptions(\n                     MappingUtils.getPullItems(orgUnit.getItems().stream()), moreAttrsToGet.toArray(String[]::new));\n \n-            RealmPullResultHandler handler = buildRealmHandler();\n-            handler.setProfile(profile);\n-            handler.setPullExecutor(this);\n+            dispatcher.addHandlerSupplier(orgUnit.getObjectClass(), () -> {\n+                RealmPullResultHandler handler = buildRealmHandler();\n+                handler.setProfile(profile);\n+                return handler;\n+            });\n \n             try {\n                 switch (pullTask.getPullMode()) {\n@@ -271,7 +276,7 @@ protected String doExecuteProvisioning(\n \n                         connector.sync(new ObjectClass(orgUnit.getObjectClass()),\n                                 ConnObjectUtils.toSyncToken(orgUnit.getSyncToken()),\n-                                handler,\n+                                dispatcher,\n                                 options);\n \n                         if (!dryRun) {\n@@ -284,15 +289,15 @@ protected String doExecuteProvisioning(\n                     case FILTERED_RECONCILIATION:\n                         connector.filteredReconciliation(new ObjectClass(orgUnit.getObjectClass()),\n                                 getReconFilterBuilder(pullTask),\n-                                handler,\n+                                dispatcher,\n                                 options);\n                         break;\n \n                     case FULL_RECONCILIATION:\n                     default:\n                         connector.fullReconciliation(\n                                 new ObjectClass(orgUnit.getObjectClass()),\n-                                handler,\n+                                dispatcher,\n                                 options);\n                         break;\n                 }\n@@ -313,22 +318,24 @@ protected String doExecuteProvisioning(\n \n             AnyType anyType = anyTypeDAO.find(provision.getAnyType());\n \n-            SyncopePullResultHandler handler;\n-            switch (anyType.getKind()) {\n-                case USER:\n-                    handler = buildUserHandler();\n-                    break;\n+            dispatcher.addHandlerSupplier(provision.getObjectClass(), () -> {\n+                SyncopePullResultHandler handler;\n+                switch (anyType.getKind()) {\n+                    case USER:\n+                        handler = buildUserHandler();\n+                        break;\n \n-                case GROUP:\n-                    handler = ghandler;\n-                    break;\n+                    case GROUP:\n+                        handler = ghandler;\n+                        break;\n \n-                case ANY_OBJECT:\n-                default:\n-                    handler = buildAnyObjectHandler();\n-            }\n-            handler.setProfile(profile);\n-            handler.setPullExecutor(this);\n+                    case ANY_OBJECT:\n+                    default:\n+                        handler = buildAnyObjectHandler();\n+                }\n+                handler.setProfile(profile);\n+                return handler;\n+            });\n \n             boolean setSyncTokens = false;\n             try {\n@@ -352,7 +359,7 @@ protected String doExecuteProvisioning(\n                         connector.sync(\n                                 new ObjectClass(provision.getObjectClass()),\n                                 ConnObjectUtils.toSyncToken(provision.getSyncToken()),\n-                                handler,\n+                                dispatcher,\n                                 options);\n \n                         if (!dryRun) {\n@@ -363,15 +370,15 @@ protected String doExecuteProvisioning(\n                     case FILTERED_RECONCILIATION:\n                         connector.filteredReconciliation(new ObjectClass(provision.getObjectClass()),\n                                 getReconFilterBuilder(pullTask),\n-                                handler,\n+                                dispatcher,\n                                 options);\n                         break;\n \n                     case FULL_RECONCILIATION:\n                     default:\n                         connector.fullReconciliation(\n                                 new ObjectClass(provision.getObjectClass()),\n-                                handler,\n+                                dispatcher,\n                                 options);\n                         break;\n                 }\n@@ -410,6 +417,8 @@ protected String doExecuteProvisioning(\n             }\n         }\n \n+        dispatcher.cleanup();\n+\n         setStatus(\"Pull done\");\n \n         String result = createReport(profile.getResults(), pullTask.getResource(), dryRun);"},{"sha":"4362281d3bb53a556dd3ed23e1818cd39480180b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullResultHandlerDispatcher.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullResultHandlerDispatcher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullResultHandlerDispatcher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullResultHandlerDispatcher.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.pushpull;\n+\n+import java.util.concurrent.RejectedExecutionException;\n+import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+public class PullResultHandlerDispatcher\n+        extends SyncopeResultHandlerDispatcher<PullTask, PullActions, SyncopePullResultHandler>\n+        implements SyncResultsHandler {\n+\n+    protected final SyncopePullExecutor executor;\n+\n+    public PullResultHandlerDispatcher(\n+            final ProvisioningProfile<PullTask, PullActions> profile,\n+            final SyncopePullExecutor executor) {\n+\n+        super(profile);\n+        this.executor = executor;\n+    }\n+\n+    @Transactional\n+    @Override\n+    public boolean handle(final SyncDelta delta) {\n+        if (executor.wasInterruptRequested()) {\n+            LOG.debug(\"Pull interrupted\");\n+            executor.setInterrupted();\n+            return false;\n+        }\n+\n+        if (ecs.isEmpty()) {\n+            boolean result = nonConcurrentHandler(delta.getObjectClass().getObjectClassValue()).handle(delta);\n+\n+            executor.reportHandled(delta.getObjectClass().getObjectClassValue(), delta.getObject().getName());\n+            if (result) {\n+                executor.setLatestSyncToken(delta.getObjectClass().getObjectClassValue(), delta.getToken());\n+            }\n+\n+            return result;\n+        }\n+\n+        try {\n+            submit(() -> {\n+                executor.setLatestSyncToken(delta.getObjectClass().getObjectClassValue(), delta.getToken());\n+\n+                suppliers.get(delta.getObjectClass().getObjectClassValue()).get().handle(delta);\n+\n+                executor.reportHandled(delta.getObjectClass().getObjectClassValue(), delta.getObject().getName());\n+            });\n+            return true;\n+        } catch (RejectedExecutionException e) {\n+            LOG.error(\"Could not submit pull handler for {} {}\",\n+                    delta.getObjectClass().getObjectClassValue(), delta.getObject().getName());\n+            return false;\n+        }\n+    }\n+}"},{"sha":"f2310fabeface1236dff655046630157bf612360","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PushJobDelegate.java","status":"modified","additions":66,"deletions":57,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -40,11 +40,8 @@\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n-import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.api.entity.group.Group;\n+import org.apache.syncope.core.persistence.api.entity.policy.PushPolicy;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n-import org.apache.syncope.core.persistence.api.entity.task.PushTaskAnyFilter;\n-import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.api.search.SearchCondConverter;\n import org.apache.syncope.core.persistence.api.search.SearchCondVisitor;\n import org.apache.syncope.core.provisioning.api.Connector;\n@@ -54,6 +51,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n import org.apache.syncope.core.provisioning.api.pushpull.RealmPushResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushExecutor;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.UserPushResultHandler;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n@@ -63,11 +61,8 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n \n-public class PushJobDelegate extends AbstractProvisioningJobDelegate<PushTask> {\n+public class PushJobDelegate extends AbstractProvisioningJobDelegate<PushTask> implements SyncopePushExecutor {\n \n-    /**\n-     * Search DAO.\n-     */\n     @Autowired\n     protected AnySearchDAO searchDAO;\n \n@@ -86,7 +81,8 @@ public class PushJobDelegate extends AbstractProvisioningJobDelegate<PushTask> {\n \n     protected final Map<String, PushActions> perContextActions = new ConcurrentHashMap<>();\n \n-    protected void reportHandled(final String anyType, final String key) {\n+    @Override\n+    public void reportHandled(final String anyType, final String key) {\n         MutablePair<Integer, String> pair = handled.get(anyType);\n         if (pair == null) {\n             pair = MutablePair.of(0, null);\n@@ -105,27 +101,32 @@ protected void reportHandled(final String anyType, final String key) {\n         }\n     }\n \n-    protected void doHandle(\n+    @Override\n+    public boolean wasInterruptRequested() {\n+        return interrupt;\n+    }\n+\n+    @Override\n+    public void setInterrupted() {\n+        this.interrupted = true;\n+    }\n+\n+    protected boolean doHandle(\n             final List<? extends Any<?>> anys,\n-            final SyncopePushResultHandler handler,\n+            final PushResultHandlerDispatcher dispatcher,\n             final ExternalResource resource)\n             throws JobExecutionException {\n \n-        for (int i = 0; i < anys.size() && !interrupt; i++) {\n+        boolean result = true;\n+        for (int i = 0; i < anys.size() && result; i++) {\n             try {\n-                handler.handle(anys.get(i).getKey());\n-                reportHandled(\n-                        anys.get(i).getType().getKey(),\n-                        (anys.get(i) instanceof User\n-                        ? ((User) anys.get(i)).getUsername()\n-                        : anys.get(i) instanceof Group\n-                        ? ((Group) anys.get(i)).getName()\n-                        : ((AnyObject) anys.get(i)).getName()));\n+                result = dispatcher.handle(anys.get(i).getType().getKey(), anys.get(i).getKey());\n             } catch (Exception e) {\n                 LOG.warn(\"Failure pushing '{}' on '{}'\", anys.get(i), resource, e);\n                 throw new JobExecutionException(\"While pushing \" + anys.get(i) + \" on \" + resource, e);\n             }\n         }\n+        return result;\n     }\n \n     protected RealmPushResultHandler buildRealmHandler() {\n@@ -178,11 +179,14 @@ protected String doExecuteProvisioning(\n         profile = new ProvisioningProfile<>(connector, pushTask);\n         profile.getActions().addAll(getPushActions(pushTask.getActions()));\n         profile.setDryRun(dryRun);\n-        profile.setConflictResolutionAction(pushTask.getResource().getPushPolicy() == null\n-                ? ConflictResolutionAction.IGNORE\n-                : pushTask.getResource().getPushPolicy().getConflictResolutionAction());\n+        profile.setConflictResolutionAction(\n+                Optional.ofNullable(pushTask.getResource().getPushPolicy()).\n+                        map(PushPolicy::getConflictResolutionAction).\n+                        orElse(ConflictResolutionAction.IGNORE));\n         profile.setExecutor(executor);\n \n+        PushResultHandlerDispatcher dispatcher = new PushResultHandlerDispatcher(profile, this);\n+\n         if (!profile.isDryRun()) {\n             for (PushActions action : profile.getActions()) {\n                 action.beforeAll(profile);\n@@ -195,19 +199,23 @@ protected String doExecuteProvisioning(\n         if (pushTask.getResource().getOrgUnit() != null) {\n             setStatus(\"Pushing realms\");\n \n-            RealmPushResultHandler handler = buildRealmHandler();\n-            handler.setProfile(profile);\n-\n-            for (Realm realm : realmDAO.findDescendants(profile.getTask().getSourceRealm())) {\n-                // Never push the root realm\n-                if (realm.getParent() != null) {\n-                    try {\n-                        handler.handle(realm.getKey());\n-                        reportHandled(SyncopeConstants.REALM_ANYTYPE, realm.getName());\n-                    } catch (Exception e) {\n-                        LOG.warn(\"Failure pushing '{}' on '{}'\", realm, pushTask.getResource(), e);\n-                        throw new JobExecutionException(\"While pushing \" + realm + \" on \" + pushTask.getResource(), e);\n-                    }\n+            dispatcher.addHandlerSupplier(SyncopeConstants.REALM_ANYTYPE, () -> {\n+                RealmPushResultHandler handler = buildRealmHandler();\n+                handler.setProfile(profile);\n+                return handler;\n+            });\n+\n+            // Never push the root realm\n+            List<Realm> realms = realmDAO.findDescendants(profile.getTask().getSourceRealm()).stream().\n+                    filter(realm -> realm.getParent() != null).collect(Collectors.toList());\n+            boolean result = true;\n+            for (int i = 0; i < realms.size() && result; i++) {\n+                try {\n+                    result = dispatcher.handle(SyncopeConstants.REALM_ANYTYPE, realms.get(i).getKey());\n+                } catch (Exception e) {\n+                    LOG.warn(\"Failure pushing '{}' on '{}'\", realms.get(i), pushTask.getResource(), e);\n+                    throw new JobExecutionException(\n+                            \"While pushing \" + realms.get(i) + \" on \" + pushTask.getResource(), e);\n                 }\n             }\n         }\n@@ -225,24 +233,26 @@ protected String doExecuteProvisioning(\n \n             AnyDAO<?> anyDAO = anyUtilsFactory.getInstance(anyType.getKind()).dao();\n \n-            SyncopePushResultHandler handler;\n-            switch (anyType.getKind()) {\n-                case USER:\n-                    handler = buildUserHandler();\n-                    break;\n+            dispatcher.addHandlerSupplier(provision.getAnyType(), () -> {\n+                SyncopePushResultHandler handler;\n+                switch (anyType.getKind()) {\n+                    case USER:\n+                        handler = buildUserHandler();\n+                        break;\n \n-                case GROUP:\n-                    handler = buildGroupHandler();\n-                    break;\n+                    case GROUP:\n+                        handler = buildGroupHandler();\n+                        break;\n \n-                case ANY_OBJECT:\n-                default:\n-                    handler = buildAnyObjectHandler();\n-            }\n-            handler.setProfile(profile);\n+                    case ANY_OBJECT:\n+                    default:\n+                        handler = buildAnyObjectHandler();\n+                }\n+                handler.setProfile(profile);\n+                return handler;\n+            });\n \n-            Optional<? extends PushTaskAnyFilter> anyFilter = pushTask.getFilter(anyType);\n-            String filter = anyFilter.map(PushTaskAnyFilter::getFIQLCond).orElse(null);\n+            String filter = pushTask.getFilter(anyType.getKey()).orElse(null);\n             SearchCond cond = StringUtils.isBlank(filter)\n                     ? anyDAO.getAllMatchingCond()\n                     : SearchCondConverter.convert(searchCondVisitor, filter);\n@@ -252,7 +262,8 @@ protected String doExecuteProvisioning(\n                     Set.of(profile.getTask().getSourceRealm().getFullPath()),\n                     cond,\n                     anyType.getKind());\n-            for (int page = 1; page <= (count / AnyDAO.DEFAULT_PAGE_SIZE) + 1 && !interrupt; page++) {\n+            boolean result = true;\n+            for (int page = 1; page <= (count / AnyDAO.DEFAULT_PAGE_SIZE) + 1 && result; page++) {\n                 List<? extends Any<?>> anys = searchDAO.search(\n                         profile.getTask().getSourceRealm(),\n                         true,\n@@ -262,19 +273,17 @@ protected String doExecuteProvisioning(\n                         AnyDAO.DEFAULT_PAGE_SIZE,\n                         List.of(),\n                         anyType.getKind());\n-                doHandle(anys, handler, pushTask.getResource());\n+                result = doHandle(anys, dispatcher, pushTask.getResource());\n             }\n         }\n \n-        if (!profile.isDryRun() && !interrupt) {\n+        if (!profile.isDryRun()) {\n             for (PushActions action : profile.getActions()) {\n                 action.afterAll(profile);\n             }\n         }\n \n-        if (interrupt) {\n-            interrupted = true;\n-        }\n+        dispatcher.cleanup();\n \n         setStatus(\"Push done\");\n "},{"sha":"4bed895fdb4e3f95d261c1f6c0afbf4df89a363f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PushResultHandlerDispatcher.java","status":"added","additions":68,"deletions":0,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushResultHandlerDispatcher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushResultHandlerDispatcher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushResultHandlerDispatcher.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.pushpull;\n+\n+import java.util.concurrent.RejectedExecutionException;\n+import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushExecutor;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n+\n+public class PushResultHandlerDispatcher\n+        extends SyncopeResultHandlerDispatcher<PushTask, PushActions, SyncopePushResultHandler> {\n+\n+    protected final SyncopePushExecutor executor;\n+\n+    public PushResultHandlerDispatcher(\n+            final ProvisioningProfile<PushTask, PushActions> profile,\n+            final SyncopePushExecutor executor) {\n+\n+        super(profile);\n+        this.executor = executor;\n+    }\n+\n+    public boolean handle(final String anyType, final String anyKey) {\n+        if (executor.wasInterruptRequested()) {\n+            LOG.debug(\"Push interrupted\");\n+            executor.setInterrupted();\n+            return false;\n+        }\n+\n+        if (ecs.isEmpty()) {\n+            boolean result = nonConcurrentHandler(anyType).handle(anyKey);\n+\n+            executor.reportHandled(anyType, anyKey);\n+\n+            return result;\n+        }\n+\n+        try {\n+            submit(() -> {\n+                suppliers.get(anyType).get().handle(anyKey);\n+\n+                executor.reportHandled(anyType, anyKey);\n+            });\n+            return true;\n+        } catch (RejectedExecutionException e) {\n+            LOG.error(\"Could not submit push handler for {} {}\", anyType, anyKey);\n+            return false;\n+        }\n+    }\n+}"},{"sha":"4915f7a758fa6ed2361b72d4b04e70637ed55dbf","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/SinglePullJobDelegate.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -138,7 +138,6 @@ public List<ProvisioningReport> pull(\n                     handler = buildAnyObjectHandler();\n             }\n             handler.setProfile(profile);\n-            handler.setPullExecutor(this);\n \n             // execute filtered pull\n             Set<String> matg = new HashSet<>(moreAttrsToGet);"},{"sha":"849c2e8c13c94b1c3bf40b5ecf30ff758bc50f79","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/SinglePushJobDelegate.java","status":"modified","additions":21,"deletions":17,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePushJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePushJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePushJobDelegate.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -91,26 +91,30 @@ public List<ProvisioningReport> push(\n \n         try {\n             before(resource, connector, pushTaskTO, executor);\n+            PushResultHandlerDispatcher dispatcher = new PushResultHandlerDispatcher(profile, this);\n \n             AnyType anyType = anyTypeDAO.find(provision.getAnyType());\n \n-            SyncopePushResultHandler handler;\n-            switch (anyType.getKind()) {\n-                case USER:\n-                    handler = buildUserHandler();\n-                    break;\n-\n-                case GROUP:\n-                    handler = buildGroupHandler();\n-                    break;\n-\n-                case ANY_OBJECT:\n-                default:\n-                    handler = buildAnyObjectHandler();\n-            }\n-            handler.setProfile(profile);\n-\n-            doHandle(List.of(any), handler, resource);\n+            dispatcher.addHandlerSupplier(provision.getAnyType(), () -> {\n+                SyncopePushResultHandler handler;\n+                switch (anyType.getKind()) {\n+                    case USER:\n+                        handler = buildUserHandler();\n+                        break;\n+\n+                    case GROUP:\n+                        handler = buildGroupHandler();\n+                        break;\n+\n+                    case ANY_OBJECT:\n+                    default:\n+                        handler = buildAnyObjectHandler();\n+                }\n+                handler.setProfile(profile);\n+                return handler;\n+            });\n+\n+            doHandle(List.of(any), dispatcher, resource);\n \n             for (PushActions action : profile.getActions()) {\n                 action.afterAll(profile);"},{"sha":"0b9064f667bc4d94d29287a7765ca1b9dfebfd3b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/SyncopeResultHandlerDispatcher.java","status":"added","additions":111,"deletions":0,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSyncopeResultHandlerDispatcher.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSyncopeResultHandlerDispatcher.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSyncopeResultHandlerDispatcher.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.pushpull;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorCompletionService;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.function.Supplier;\n+import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.SyncopeResultHandler;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+\n+public abstract class SyncopeResultHandlerDispatcher<\n+        T extends ProvisioningTask<?>, A extends ProvisioningActions, RA extends SyncopeResultHandler<T, A>> {\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(SyncopeResultHandlerDispatcher.class);\n+\n+    protected final Optional<ThreadPoolTaskExecutor> tpte;\n+\n+    protected final Optional<ExecutorCompletionService<Void>> ecs;\n+\n+    protected final Map<String, Supplier<RA>> suppliers = new ConcurrentHashMap<>();\n+\n+    protected final Map<String, RA> handlers = new ConcurrentHashMap<>();\n+\n+    protected final List<Future<Void>> futures = new ArrayList<>();\n+\n+    public SyncopeResultHandlerDispatcher(final ProvisioningProfile<T, A> profile) {\n+        if (profile.getTask().getConcurrentSettings() == null) {\n+            tpte = Optional.empty();\n+            ecs = Optional.empty();\n+        } else {\n+            ThreadPoolTaskExecutor t = new ThreadPoolTaskExecutor();\n+            t.setCorePoolSize(profile.getTask().getConcurrentSettings().getCorePoolSize());\n+            t.setMaxPoolSize(profile.getTask().getConcurrentSettings().getMaxPoolSize());\n+            t.setQueueCapacity(profile.getTask().getConcurrentSettings().getQueueCapacity());\n+            t.setWaitForTasksToCompleteOnShutdown(true);\n+            t.setThreadNamePrefix(\"provisioningTask-\" + profile.getTask().getKey() + \"-\");\n+            t.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());\n+\n+            Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n+            t.setTaskDecorator(d -> () -> {\n+                SecurityContextHolder.getContext().setAuthentication(authentication);\n+                d.run();\n+            });\n+\n+            t.initialize();\n+            this.tpte = Optional.of(t);\n+\n+            this.ecs = Optional.of(new ExecutorCompletionService<>(t.getThreadPoolExecutor()));\n+        }\n+    }\n+\n+    public void addHandlerSupplier(final String key, final Supplier<RA> supplier) {\n+        suppliers.put(key, supplier);\n+    }\n+\n+    protected RA nonConcurrentHandler(final String key) {\n+        return Optional.ofNullable(handlers.get(key)).orElseGet(() -> {\n+            RA h = suppliers.get(key).get();\n+            handlers.put(key, h);\n+            return h;\n+        });\n+    }\n+\n+    protected void submit(final Runnable runnable) {\n+        if (ecs.isPresent()) {\n+            futures.add(ecs.get().submit(runnable, null));\n+        }\n+    }\n+\n+    protected void cleanup() {\n+        for (Future<Void> f : this.futures) {\n+            try {\n+                f.get();\n+            } catch (ExecutionException | InterruptedException e) {\n+                LOG.error(\"Unexpected error when waiting for completion\", e);\n+            }\n+        }\n+\n+        tpte.ifPresent(ThreadPoolTaskExecutor::shutdown);\n+    }\n+}"},{"sha":"51b378f9d4bc9922e954aa3b1e68ffc74fb88654","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/stream/StreamPullJobDelegate.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamPullJobDelegate.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -209,7 +209,6 @@ public List<ProvisioningReport> pull(\n                     handler = buildAnyObjectHandler();\n             }\n             handler.setProfile(profile);\n-            handler.setPullExecutor(this);\n \n             // execute filtered pull\n             Set<String> moreAttrsToGet = new HashSet<>();"},{"sha":"fa7fbd4d8e9082f1d497279761ae6f9e6042a993","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/stream/StreamPushJobDelegate.java","status":"modified","additions":23,"deletions":17,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamPushJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamPushJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2Fstream%2FStreamPushJobDelegate.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -45,6 +45,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.UserPushResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.stream.SyncopeStreamPushExecutor;\n import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n+import org.apache.syncope.core.provisioning.java.pushpull.PushResultHandlerDispatcher;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.security.SecureRandomUtils;\n import org.quartz.JobExecutionException;\n@@ -148,27 +149,32 @@ public List<ProvisioningReport> push(\n                     map(implementationDAO::find).filter(Objects::nonNull).collect(Collectors.toList())));\n             profile.setConflictResolutionAction(ConflictResolutionAction.FIRSTMATCH);\n \n+            PushResultHandlerDispatcher dispatcher = new PushResultHandlerDispatcher(profile, this);\n+\n             for (PushActions action : profile.getActions()) {\n                 action.beforeAll(profile);\n             }\n \n-            SyncopePushResultHandler handler;\n-            switch (anyType.getKind()) {\n-                case USER:\n-                    handler = buildUserHandler();\n-                    break;\n-\n-                case GROUP:\n-                    handler = buildGroupHandler();\n-                    break;\n-\n-                case ANY_OBJECT:\n-                default:\n-                    handler = buildAnyObjectHandler();\n-            }\n-            handler.setProfile(profile);\n-\n-            doHandle(anys, handler, resource);\n+            dispatcher.addHandlerSupplier(anyType.getKey(), () -> {\n+                SyncopePushResultHandler handler;\n+                switch (anyType.getKind()) {\n+                    case USER:\n+                        handler = buildUserHandler();\n+                        break;\n+\n+                    case GROUP:\n+                        handler = buildGroupHandler();\n+                        break;\n+\n+                    case ANY_OBJECT:\n+                    default:\n+                        handler = buildAnyObjectHandler();\n+                }\n+                handler.setProfile(profile);\n+                return handler;\n+            });\n+\n+            doHandle(anys, dispatcher, resource);\n \n             for (PushActions action : profile.getActions()) {\n                 action.afterAll(profile);"},{"sha":"421e521c485ef836de828d45a405a3c7c7c0e1ca","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthContextUtils.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthContextUtils.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -109,13 +109,13 @@ public static String getDomain() {\n         return domainKey;\n     }\n \n-    private static <T> T call(final String domain, final Authentication fakeAuth, final Callable<T> callable) {\n+    private static <T> T call(final Authentication authentication, final Callable<T> callable) {\n         Authentication original = SecurityContextHolder.getContext().getAuthentication();\n-        SecurityContextHolder.getContext().setAuthentication(fakeAuth);\n+        SecurityContextHolder.getContext().setAuthentication(authentication);\n         try {\n             return callable.call();\n         } catch (Exception e) {\n-            LOG.debug(\"Error during execution with domain {} context\", domain, e);\n+            LOG.debug(\"Error during execution under authentication {}\", authentication, e);\n             if (e instanceof RuntimeException) {\n                 throw (RuntimeException) e;\n             } else {\n@@ -139,7 +139,7 @@ public static <T> T callAs(\n                 new User(username, FAKE_PASSWORD, authorities), FAKE_PASSWORD, authorities);\n         fakeAuth.setDetails(new SyncopeAuthenticationDetails(domain, getDelegatedBy().orElse(null)));\n \n-        return call(domain, fakeAuth, callable);\n+        return call(fakeAuth, callable);\n     }\n \n     public static <T> T callAsAdmin(final String domain, final Callable<T> callable) {"},{"sha":"b9c992abda0338c18a74b18123109413c6d45a1c","filename":"core/starter/src/main/resources/core.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fcore.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fcore.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fcore.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -50,8 +50,8 @@ persistence.domain[0].dbUsername=syncope\n persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n persistence.domain[0].auditSql=audit.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n ################\n # Provisioning #"},{"sha":"f8daa397d7704a29846e7d7060b168932051eafb","filename":"docker/src/main/resources/docker-compose/docker-compose-all.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-all.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-all.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-all.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -48,8 +48,8 @@ services:\n        DB_URL: jdbc:postgresql://db:5432/syncope?stringtype=unspecified\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: keymaster:2181\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME:-}"},{"sha":"a18f1c5ea218081c3dc717d8fa7cf75dc6c46be4","filename":"docker/src/main/resources/docker-compose/docker-compose-ha.yml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ha.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ha.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ha.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -41,8 +41,8 @@ services:\n        DB_URL: jdbc:postgresql://db:5432/syncope?stringtype=unspecified\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: tcp(Addresses=syncope1;syncope2)\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n@@ -63,8 +63,8 @@ services:\n        DB_URL: jdbc:postgresql://db:5432/syncope?stringtype=unspecified\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: tcp(Addresses=syncope1;syncope2)\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}"},{"sha":"faef001f1cf00e81ab5fdcfeee4f055516204da4","filename":"docker/src/main/resources/docker-compose/docker-compose-mariadb.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mariadb.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mariadb.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mariadb.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -41,8 +41,8 @@ services:\n        DB_URL: jdbc:mysql://db:3306/syncope?characterEncoding=UTF-8&relaxAutoCommit=true&useSSL=false\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}"},{"sha":"68fb23bf1754800ab16c087e0b011cb106944642","filename":"docker/src/main/resources/docker-compose/docker-compose-myjson.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-myjson.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-myjson.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-myjson.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -43,8 +43,8 @@ services:\n        DB_URL: jdbc:mysql://db:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}"},{"sha":"74a3e04b162848364bfed68216291fb570a157dc","filename":"docker/src/main/resources/docker-compose/docker-compose-mysql.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mysql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mysql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mysql.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -42,8 +42,8 @@ services:\n        DB_URL: jdbc:mysql://db:3306/syncope?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}"},{"sha":"10ee95ab4b67bf5524e7c78d278f3d660638e4a0","filename":"docker/src/main/resources/docker-compose/docker-compose-ojson.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ojson.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ojson.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ojson.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -42,8 +42,8 @@ services:\n        DB_SCHEMA: SYNCOPE\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}"},{"sha":"d88469569ec2a353b7afb1f949324b5bbc181e3f","filename":"docker/src/main/resources/docker-compose/docker-compose-oracle.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-oracle.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-oracle.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-oracle.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -42,8 +42,8 @@ services:\n        DB_SCHEMA: SYNCOPE\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}"},{"sha":"c66d9a9953bce0cc829e017b9d00d72ff303b23c","filename":"docker/src/main/resources/docker-compose/docker-compose-pgjsonb.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -41,8 +41,8 @@ services:\n        DB_URL: jdbc:postgresql://db:5432/syncope?stringtype=unspecified\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}"},{"sha":"728bb86f0dc3eaf69e6f3d4981bd96a08abe412c","filename":"docker/src/main/resources/docker-compose/docker-compose-postgresql.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-postgresql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-postgresql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-postgresql.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -40,8 +40,8 @@ services:\n        DB_URL: jdbc:postgresql://db:5432/syncope?stringtype=unspecified\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}"},{"sha":"82c37c73d956e57deacff924dfc1006c84484f25","filename":"docker/src/main/resources/docker-compose/docker-compose-sqlserver.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-sqlserver.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-sqlserver.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-sqlserver.yml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -43,8 +43,8 @@ services:\n        DB_SCHEMA: dbo\n        DB_USER: syncope\n        DB_PASSWORD: Syncope123\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}"},{"sha":"62f927042968a51607aee665866af3332553039a","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/SyncopeBuildToolsApplication.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -81,8 +81,7 @@ public Provisioning provisioningImpl(@Qualifier(\"testDataSource\") final DataSour\n     }\n \n     @Bean\n-    public Endpoint soapProvisioning(final Provisioning provisioning,\n-            final Bus bus) {\n+    public Endpoint soapProvisioning(final Provisioning provisioning, final Bus bus) {\n         EndpointImpl soapProvisioning = new EndpointImpl(provisioning);\n         soapProvisioning.setBus(bus);\n         soapProvisioning.publish(\"/soap\");"},{"sha":"4aba37e36b39e6ae1bbb8a9208f78fe14ed3558c","filename":"fit/core-reference/src/main/resources/core-embedded.properties","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-embedded.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-embedded.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-embedded.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -49,8 +49,8 @@ persistence.domain[0].dbUsername=sa\n persistence.domain[0].dbPassword=\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.H2Dictionary\n persistence.domain[0].auditSql=audit.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n persistence.domain[1].key=Two\n persistence.domain[1].jdbcDriver=org.h2.Driver\n@@ -59,8 +59,8 @@ persistence.domain[1].dbUsername=sa\n persistence.domain[1].dbPassword=\n persistence.domain[1].databasePlatform=org.apache.openjpa.jdbc.sql.H2Dictionary\n persistence.domain[1].auditSql=audit.sql\n-persistence.domain[1].poolMaxActive=10\n-persistence.domain[1].poolMinIdle=2\n+persistence.domain[1].poolMaxActive=20\n+persistence.domain[1].poolMinIdle=5\n persistence.domain[1].adminPassword=2AA60A8FF7FCD473D321E0146AFD9E26DF395147\n persistence.domain[1].adminCipherAlgorithm=SHA\n "},{"sha":"978a496e0e9297c70fe1cd27847aa57ffd1a4a68","filename":"fit/core-reference/src/main/resources/core-mariadb.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-mariadb.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-mariadb.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-mariadb.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -22,8 +22,8 @@ persistence.domain[0].dbUsername=syncope\n persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MariaDBDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3)\n persistence.domain[0].auditSql=audit_mariadb.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n provisioning.quartz.sql=tables_mariadb.sql"},{"sha":"5d6ccc7b38a2727220403970065c491fd9fab5c3","filename":"fit/core-reference/src/main/resources/core-myjson.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-myjson.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -26,8 +26,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3,useSetStringForClobs=true)\n persistence.domain[0].orm=META-INF/spring-orm-myjson.xml\n persistence.domain[0].auditSql=audit_myjson.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n provisioning.quartz.sql=tables_mysql_innodb.sql"},{"sha":"fff945790c5c35594bc57ceffd37714539d52e29","filename":"fit/core-reference/src/main/resources/core-mysql.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-mysql.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-mysql.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-mysql.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -22,8 +22,8 @@ persistence.domain[0].dbUsername=syncope\n persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3,useSetStringForClobs=true)\n persistence.domain[0].auditSql=audit_mysql_innodb.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n provisioning.quartz.sql=tables_mysql_innodb.sql"},{"sha":"bd1b785b544a11ba910c59eecb7243a1f7b48460","filename":"fit/core-reference/src/main/resources/core-ojson.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-ojson.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-ojson.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-ojson.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -27,8 +27,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.OracleDictionary\n persistence.domain[0].orm=META-INF/spring-orm-ojson.xml\n persistence.domain[0].auditSql=audit_ojson.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.oracle.OracleDelegate\n provisioning.quartz.sql=tables_oracle.sql"},{"sha":"ae2398604d2864671750cdd08881979c902c8caa","filename":"fit/core-reference/src/main/resources/core-oracle.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-oracle.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-oracle.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-oracle.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -24,8 +24,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.OracleDictionary\n persistence.domain[0].orm=META-INF/spring-orm-oracle.xml\n persistence.domain[0].auditSql=audit_oracle.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n persistence.indexesXML=classpath:oracle_indexes.xml\n "},{"sha":"0cefc40dbd54049f9da7ba6cf864653bfe84171e","filename":"fit/core-reference/src/main/resources/core-pgjsonb.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-pgjsonb.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -26,8 +26,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n persistence.domain[0].orm=META-INF/spring-orm-pgjsonb.xml\n persistence.domain[0].auditSql=audit_pgjsonb.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n provisioning.quartz.sql=tables_postgres.sql"},{"sha":"a39dfee94084c0b659ad8e24d6f4c7b1f1de456c","filename":"fit/core-reference/src/main/resources/core-postgres.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-postgres.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-postgres.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-postgres.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -22,8 +22,8 @@ persistence.domain[0].dbUsername=syncope\n persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n persistence.domain[0].auditSql=audit.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n provisioning.quartz.sql=tables_postgres.sql"},{"sha":"79fed5b4b65705299c6ca72e5e0f5084a25ec7f9","filename":"fit/core-reference/src/main/resources/core-sqlserver.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-sqlserver.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-sqlserver.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-sqlserver.properties?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -24,8 +24,8 @@ persistence.domain[0].dbPassword=Syncope123\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.SQLServerDictionary\n persistence.domain[0].orm=META-INF/spring-orm-sqlserver.xml\n persistence.domain[0].auditSql=audit_sqlserver.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n persistence.viewsXML=classpath:sqlserver_views.xml\n "},{"sha":"4801eb2af86ff11ff4a8611c14642cff52e252ba","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":112,"deletions":35,"changes":147,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -45,6 +45,8 @@\n import java.util.Properties;\n import java.util.Set;\n import java.util.UUID;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicReference;\n import javax.naming.NamingException;\n@@ -57,6 +59,7 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.lib.batch.BatchRequest;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -99,6 +102,7 @@\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.common.lib.types.ThreadPoolSettings;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n@@ -107,6 +111,7 @@\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.common.rest.api.service.TaskService;\n+import org.apache.syncope.common.rest.api.service.UserService;\n import org.apache.syncope.core.provisioning.java.pushpull.DBPasswordPullActions;\n import org.apache.syncope.core.provisioning.java.pushpull.LDAPPasswordPullActions;\n import org.apache.syncope.core.spring.security.Encryptor;\n@@ -144,6 +149,39 @@ public static void testPullActionsSetup() {\n         TASK_SERVICE.update(TaskType.PULL, pullTask);\n     }\n \n+    private static Pair<String, Set<Attribute>> prepareLdapAttributes(\n+            final String uid,\n+            final String email,\n+            final String description,\n+            final String givenName,\n+            final String sn,\n+            final String registeredAddress,\n+            final String title,\n+            final String password) {\n+\n+        String entryDn = \"uid=\" + uid + \",ou=People,o=isp\";\n+        Set<Attribute> attributes = new HashSet<>();\n+\n+        attributes.add(new BasicAttribute(\"description\", description));\n+        attributes.add(new BasicAttribute(\"givenName\", givenName));\n+        attributes.add(new BasicAttribute(\"mail\", email));\n+        attributes.add(new BasicAttribute(\"sn\", sn));\n+        attributes.add(new BasicAttribute(\"cn\", uid));\n+        attributes.add(new BasicAttribute(\"uid\", uid));\n+        attributes.add(new BasicAttribute(\"registeredaddress\", registeredAddress));\n+        attributes.add(new BasicAttribute(\"title\", title));\n+        attributes.add(new BasicAttribute(\"userpassword\", password));\n+\n+        Attribute oc = new BasicAttribute(\"objectClass\");\n+        oc.add(\"top\");\n+        oc.add(\"person\");\n+        oc.add(\"inetOrgPerson\");\n+        oc.add(\"organizationalPerson\");\n+        attributes.add(oc);\n+\n+        return Pair.of(entryDn, attributes);\n+    }\n+\n     @Test\n     public void getPullActionsClasses() {\n         Set<String> actions = ADMIN_CLIENT.platform().\n@@ -853,8 +891,8 @@ public void remediationSinglePull() throws IOException {\n             pullTask.setMatchingRule(MatchingRule.UPDATE);\n \n             try {\n-                RECONCILIATION_SERVICE.pull(new ReconQuery.Builder(AnyTypeKind.USER.name(), ldap.getKey()).fiql(\n-                        \"uid==pullFromLDAP\").build(), pullTask);\n+                RECONCILIATION_SERVICE.pull(new ReconQuery.Builder(AnyTypeKind.USER.name(), ldap.getKey()).\n+                        fiql(\"uid==pullFromLDAP\").build(), pullTask);\n                 fail(\"Should not arrive here\");\n             } catch (SyncopeClientException sce) {\n                 assertEquals(ClientExceptionType.Reconciliation, sce.getType());\n@@ -878,6 +916,77 @@ public void remediationSinglePull() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void concurrentPull() throws NamingException, InterruptedException {\n+        int usersBefore = USER_SERVICE.search(new AnyQuery.Builder().fiql(\n+                SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP_*\").query()).\n+                page(1).size(0).build()).getTotalCount();\n+\n+        // 0. first cleanup then create 100 users on LDAP\n+        ldapCleanup();\n+\n+        ExecutorService tp = Executors.newFixedThreadPool(10);\n+        for (int i = 0; i < 100; i++) {\n+            String idx = StringUtils.leftPad(String.valueOf(i), 2, \"0\");\n+            tp.submit(() -> {\n+                try {\n+                    createLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, prepareLdapAttributes(\n+                            \"pullFromLDAP_\" + idx,\n+                            \"pullFromLDAP_\" + idx + \"@syncope.apache.org\",\n+                            \"Active\",\n+                            \"pullFromLDAP_\" + idx,\n+                            \"Surname\",\n+                            \"5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8\",\n+                            \"odd\",\n+                            \"password\"));\n+                } catch (NamingException e) {\n+                    LOG.error(\"While creating LDAP {}-th user\", idx, e);\n+                }\n+            });\n+        }\n+        tp.shutdown();\n+        tp.awaitTermination(MAX_WAIT_SECONDS, TimeUnit.SECONDS);\n+\n+        // 1. create new concurrent pull task\n+        PullTaskTO pullTask = TASK_SERVICE.read(TaskType.PULL, \"1e419ca4-ea81-4493-a14f-28b90113686d\", false);\n+        assertNull(pullTask.getConcurrentSettings());\n+        pullTask.setKey(null);\n+        pullTask.setName(\"LDAP Concurrent Pull Task\");\n+        pullTask.setDescription(\"LDAP Concurrent Pull Task\");\n+\n+        ThreadPoolSettings tps = new ThreadPoolSettings();\n+        tps.setCorePoolSize(3);\n+        tps.setMaxPoolSize(3);\n+        tps.setQueueCapacity(100);\n+        pullTask.setConcurrentSettings(tps);\n+\n+        Response response = TASK_SERVICE.create(TaskType.PULL, pullTask);\n+        String pullTaskKey = response.getHeaderString(RESTHeaders.RESOURCE_KEY);\n+\n+        PagedResult<UserTO> result = null;\n+        try {\n+            // 2. run concurrent pull task\n+            ExecTO execution = execProvisioningTask(\n+                    TASK_SERVICE, TaskType.PULL, pullTaskKey, 5 * MAX_WAIT_SECONDS, false);\n+\n+            // 3. verify execution status\n+            assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n+\n+            // 4. verify that the given number of users was effectively pulled\n+            result = USER_SERVICE.search(new AnyQuery.Builder().fiql(\n+                    SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP_*\").query()).\n+                    page(1).size(200).build());\n+            assertTrue(result.getTotalCount() >= usersBefore + 100);\n+        } finally {\n+            if (result != null) {\n+                BatchRequest batchRequest = ADMIN_CLIENT.batch();\n+                UserService batchUserService = batchRequest.getService(UserService.class);\n+                result.getResult().stream().map(UserTO::getKey).forEach(batchUserService::delete);\n+                batchRequest.commit();\n+            }\n+        }\n+    }\n+\n     @Test\n     public void issueSYNCOPE68() {\n         //-----------------------------\n@@ -1468,40 +1577,8 @@ public void issueSYNCOPE1656() throws NamingException {\n         }\n     }\n \n-    private void cleanUpRemediations() {\n+    private static void cleanUpRemediations() {\n         REMEDIATION_SERVICE.list(new RemediationQuery.Builder().page(1).size(100).build()).getResult().forEach(\n                 r -> REMEDIATION_SERVICE.delete(r.getKey()));\n     }\n-\n-    private Pair<String, Set<Attribute>> prepareLdapAttributes(\n-            final String uid,\n-            final String email,\n-            final String description,\n-            final String givenName,\n-            final String sn,\n-            final String registeredAddress,\n-            final String title,\n-            final String password) {\n-        String entryDn = \"uid=\" + uid + \",ou=People,o=isp\";\n-        Set<Attribute> attributes = new HashSet<>();\n-\n-        attributes.add(new BasicAttribute(\"description\", description));\n-        attributes.add(new BasicAttribute(\"givenName\", givenName));\n-        attributes.add(new BasicAttribute(\"mail\", email));\n-        attributes.add(new BasicAttribute(\"sn\", sn));\n-        attributes.add(new BasicAttribute(\"cn\", uid));\n-        attributes.add(new BasicAttribute(\"uid\", uid));\n-        attributes.add(new BasicAttribute(\"registeredaddress\", registeredAddress));\n-        attributes.add(new BasicAttribute(\"title\", title));\n-        attributes.add(new BasicAttribute(\"userpassword\", password));\n-\n-        Attribute oc = new BasicAttribute(\"objectClass\");\n-        oc.add(\"top\");\n-        oc.add(\"person\");\n-        oc.add(\"inetOrgPerson\");\n-        oc.add(\"organizationalPerson\");\n-        attributes.add(oc);\n-\n-        return Pair.of(entryDn, attributes);\n-    }\n }"},{"sha":"e60611d83fbe0c16ed131b3343f1431f62bd4c7e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PushTaskITCase.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPushTaskITCase.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -53,8 +53,10 @@\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.common.lib.types.ThreadPoolSettings;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.ReconQuery;\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.NotificationService;\n@@ -352,6 +354,32 @@ public void orgUnit() {\n         assertNotNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, \"ou=two,ou=even,o=isp\"));\n     }\n \n+    @Test\n+    public void concurrentPush() {\n+        // 1. create new concurrent pull task\n+        PushTaskTO pushTask = TASK_SERVICE.read(TaskType.PUSH, \"97f327b6-2eff-4d35-85e8-d581baaab855\", false);\n+        assertNull(pushTask.getConcurrentSettings());\n+        pushTask.setKey(null);\n+        pushTask.setName(\"Concurrent Export on resource-testdb2\");\n+        pushTask.setDescription(\"Concurrent Export on resource-testdb2\");\n+        pushTask.getFilters().put(AnyTypeKind.USER.name(), \"username!=puccini;username!=vivaldi\");\n+\n+        ThreadPoolSettings tps = new ThreadPoolSettings();\n+        tps.setCorePoolSize(3);\n+        tps.setMaxPoolSize(3);\n+        tps.setQueueCapacity(100);\n+        pushTask.setConcurrentSettings(tps);\n+\n+        Response response = TASK_SERVICE.create(TaskType.PUSH, pushTask);\n+        String pushTaskKey = response.getHeaderString(RESTHeaders.RESOURCE_KEY);\n+\n+        // 2. run concurrent pull task\n+        ExecTO execution = execProvisioningTask(TASK_SERVICE, TaskType.PUSH, pushTaskKey, MAX_WAIT_SECONDS, false);\n+\n+        // 3. verify execution status\n+        assertEquals(ExecStatus.SUCCESS, ExecStatus.valueOf(execution.getStatus()));\n+    }\n+\n     @Test\n     public void issueSYNCOPE598() {\n         // create a new group schema"},{"sha":"ca2c3654070baa8a638ef09c9259a4856ee2820b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":9,"deletions":24,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -34,6 +34,7 @@\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.RandomStringUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.lib.batch.BatchRequest;\n import org.apache.syncope.client.ui.commons.ConnIdSpecialName;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -57,6 +58,7 @@\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.beans.ConnObjectTOQuery;\n+import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.syncope.common.rest.api.service.RoleService;\n import org.apache.syncope.fit.AbstractITCase;\n import org.identityconnectors.framework.common.objects.Name;\n@@ -81,10 +83,6 @@ public void searchUser() {\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().isNull(\"loginDate\").query()).build());\n         assertNotNull(matchingUsers);\n         assertFalse(matchingUsers.getResult().isEmpty());\n-\n-        assertEquals(2, matchingUsers.getResult().stream().\n-                filter(user -> \"74cd8ece-715a-44a4-a736-e17b46c4e7e6\".equals(user.getKey())\n-                || \"b3cbc78d-32e6-4bd4-92e0-bbe07566a2ee\".equals(user.getKey())).count());\n     }\n \n     @Test\n@@ -521,25 +519,11 @@ public void searchConnObjectsBrowsePagedResult() {\n         int totalRead = 0;\n         Set<String> read = new HashSet<>();\n         try {\n-            // 1. first search with no filters\n             ConnObjectTOQuery.Builder builder = new ConnObjectTOQuery.Builder().size(10);\n             PagedConnObjectResult matches;\n             do {\n-                matches = null;\n-\n-                boolean succeeded = false;\n-                // needed because embedded LDAP server seems to randomly fail when searching with cookie\n-                for (int i = 0; i < 5 && !succeeded; i++) {\n-                    try {\n-                        matches = RESOURCE_SERVICE.searchConnObjects(\n-                                RESOURCE_NAME_LDAP,\n-                                AnyTypeKind.GROUP.name(),\n-                                builder.build());\n-                        succeeded = true;\n-                    } catch (SyncopeClientException e) {\n-                        assertEquals(ClientExceptionType.ConnectorException, e.getType());\n-                    }\n-                }\n+                matches = RESOURCE_SERVICE.searchConnObjects(\n+                        RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), builder.build());\n                 assertNotNull(matches);\n \n                 totalRead += matches.getResult().size();\n@@ -553,11 +537,12 @@ public void searchConnObjectsBrowsePagedResult() {\n             } while (matches.getPagedResultsCookie() != null);\n \n             assertEquals(totalRead, read.size());\n-            assertTrue(totalRead >= 10);\n+            assertTrue(totalRead >= groupKeys.size());\n         } finally {\n-            groupKeys.forEach(key -> {\n-                GROUP_SERVICE.delete(key);\n-            });\n+            BatchRequest batchRequest = ADMIN_CLIENT.batch();\n+            GroupService batchGroupService = batchRequest.getService(GroupService.class);\n+            groupKeys.forEach(batchGroupService::delete);\n+            batchRequest.commit();\n         }\n     }\n "},{"sha":"d96ea58159a36062da80d3c5d1ac42020e8fa9d7","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -1147,7 +1147,7 @@ under the License.\n       <dependency>\n         <groupId>com.icegreen</groupId>\n         <artifactId>greenmail</artifactId>\n-        <version>1.6.11</version>\n+        <version>1.6.12</version>\n         <exclusions>\n           <exclusion>\n             <groupId>junit</groupId>"},{"sha":"0aea0ceebf860bb660b127b52815b56fa96a2cda","filename":"src/main/asciidoc/getting-started/obtain.adoc","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fobtain.adoc?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -213,8 +213,8 @@ services:\n        DB_URL: jdbc:postgresql://db:5432/syncope?stringtype=unspecified\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n        KEYMASTER_USERNAME: ${ANONYMOUS_USER}\n@@ -300,8 +300,8 @@ services:\n        DB_URL: jdbc:postgresql://db:5432/syncope?stringtype=unspecified\n        DB_USER: syncope\n        DB_PASSWORD: syncope\n-       DB_POOL_MAX: 10\n-       DB_POOL_MIN: 2\n+       DB_POOL_MAX: 20\n+       DB_POOL_MIN: 5\n        OPENJPA_REMOTE_COMMIT: sjvm\n        KEYMASTER_ADDRESS: keymaster:2181\n        KEYMASTER_USERNAME: ${KEYMASTER_USERNAME:-}"},{"sha":"2e20d40304e8c1f419235d1fa51c01544f611408","filename":"src/main/asciidoc/reference-guide/concepts/tasks.adoc","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftasks.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftasks.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftasks.adoc?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -125,6 +125,15 @@ It is possible to simulate the execution of a pull (or push) task without perfor\n selecting the _DryRun_ option. The execution results will be still available for examination.\n ====\n \n+[[concurrent-tasks-pull]]\n+[TIP]\n+.Concurrent Pull Task Executions\n+====\n+By default, pull tasks are set to accept and sequentially process the objects received from the configured External\n+Resource; it is also possible to configure a pull task to work on several objects at once in order to speed up the\n+overall execution time.\n+====\n+\n [[tasks-push]]\n ==== Push\n \n@@ -157,6 +166,14 @@ the execution details - depending on the trace level set on the related\n <<external-resource-details,external resource>>.\n ====\n \n+[[concurrent-tasks-push]]\n+[TIP]\n+.Concurrent Push Task Executions\n+====\n+By default, push tasks are set to sequentially send items to the configured External Resource; it is also possible to\n+configure a push task to work on several objects at once in order to speed up the overall execution time.\n+====\n+\n [[tasks-notification]]\n ==== Notification\n "},{"sha":"51d9548b6c829b68084174a045ed3967e4faf75f","filename":"src/main/asciidoc/reference-guide/configuration/dbms.adoc","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconfiguration%2Fdbms.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ccbf857a8009c41fd8344b98f002282e1bb8b6e/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconfiguration%2Fdbms.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconfiguration%2Fdbms.adoc?ref=2ccbf857a8009c41fd8344b98f002282e1bb8b6e","patch":"@@ -34,8 +34,8 @@ persistence.domain[0].dbUsername=syncope\n persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n persistence.domain[0].auditSql=audit.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n provisioning.quartz.sql=tables_postgres.sql\n@@ -86,8 +86,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n persistence.domain[0].orm=META-INF/spring-orm-pgjsonb.xml\n persistence.domain[0].auditSql=audit_pgjsonb.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n provisioning.quartz.sql=tables_postgres.sql\n@@ -119,8 +119,8 @@ persistence.domain[0].dbUsername=syncope\n persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3,useSetStringForClobs=true)\n persistence.domain[0].auditSql=audit_mysql_innodb.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n provisioning.quartz.sql=tables_mysql_innodb.sql\n@@ -178,8 +178,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MySQLDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3,useSetStringForClobs=true)\n persistence.domain[0].orm=META-INF/spring-orm-myjson.xml\n persistence.domain[0].auditSql=audit_myjson.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n provisioning.quartz.sql=tables_mysql_innodb.sql\n@@ -217,8 +217,8 @@ persistence.domain[0].dbUsername=syncope\n persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.MariaDBDictionary(blobTypeName=LONGBLOB,dateFractionDigits=3,useSetStringForClobs=true)\n persistence.domain[0].auditSql=audit_mariadb.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n provisioning.quartz.sql=tables_mariadb.sql\n@@ -255,8 +255,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.OracleDictionary\n persistence.domain[0].orm=META-INF/spring-orm-oracle.xml\n persistence.domain[0].auditSql=audit_oracle.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n persistence.indexesXML=classpath:oracle_indexes.xml\n \n@@ -310,8 +310,8 @@ persistence.domain[0].dbPassword=syncope\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.OracleDictionary\n persistence.domain[0].orm=META-INF/spring-orm-ojson.xml\n persistence.domain[0].auditSql=audit_ojson.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n provisioning.quartz.delegate=org.quartz.impl.jdbcjobstore.oracle.OracleDelegate\n provisioning.quartz.sql=tables_oracle.sql\n@@ -345,8 +345,8 @@ persistence.domain[0].dbPassword=Syncope123\n persistence.domain[0].databasePlatform=org.apache.openjpa.jdbc.sql.SQLServerDictionary\n persistence.domain[0].orm=META-INF/spring-orm-sqlserver.xml\n persistence.domain[0].auditSql=audit_sqlserver.sql\n-persistence.domain[0].poolMaxActive=10\n-persistence.domain[0].poolMinIdle=2\n+persistence.domain[0].poolMaxActive=20\n+persistence.domain[0].poolMinIdle=5\n \n persistence.viewsXML=classpath:sqlserver_views.xml\n "}]}