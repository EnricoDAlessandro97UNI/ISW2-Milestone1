{"sha":"d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ4OTI3ZWY0YzM5NDNhNWExZGVjMWMxNzk4NWEzMmZjOWJmYmFlNTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-06-11T14:04:23Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-06-11T14:04:23Z"},"message":"[SYNCOPE-666] All done now","tree":{"sha":"e6c70ab6189d7bed027968bf17cb0b5144d5e5b8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e6c70ab6189d7bed027968bf17cb0b5144d5e5b8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df60b3b4166cfb924dac08c6f81a7f49bd2a5f8c"}],"stats":{"total":1250,"additions":1197,"deletions":53},"files":[{"sha":"d535c342c514bebce402dcd979a6824416a899e2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MembershipTO.java","status":"modified","additions":13,"deletions":3,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -30,9 +30,19 @@ public class MembershipTO extends RelationshipTO {\n \n     private String groupName;\n \n-    public MembershipTO() {\n-        super();\n-        super.setRightType(AnyTypeKind.GROUP.name());\n+    @Override\n+    public String getRelationshipType() {\n+        return \"Membership\";\n+    }\n+\n+    @Override\n+    public void setRelationshipType(final String relationshipType) {\n+        // ignore\n+    }\n+\n+    @Override\n+    public String getRightType() {\n+        return AnyTypeKind.GROUP.name();\n     }\n \n     @Override"},{"sha":"6468dab6a38a66abb1fbb55a035fd26306fee58b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RelationshipTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -28,6 +28,8 @@ public class RelationshipTO extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 360672942026613929L;\n \n+    private String relationshipType;\n+\n     private String leftType;\n \n     private long leftKey;\n@@ -36,6 +38,14 @@ public class RelationshipTO extends AbstractBaseBean {\n \n     private long rightKey;\n \n+    public String getRelationshipType() {\n+        return relationshipType;\n+    }\n+\n+    public void setRelationshipType(final String relationshipType) {\n+        this.relationshipType = relationshipType;\n+    }\n+\n     public String getLeftType() {\n         return leftType;\n     }"},{"sha":"d1d72f741d22484f6aa013f0b06d0bcfe9e5ae76","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RelationshipTypeTO.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import javax.ws.rs.Path;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+@XmlRootElement(name = \"relationshipType\")\n+@XmlType\n+public class RelationshipTypeTO extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = -1884088415277925817L;\n+\n+    private String key;\n+\n+    private String description;\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    @Path(\"{key}\")\n+    public void setKey(final String key) {\n+        this.key = key;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(final String description) {\n+        this.description = description;\n+    }\n+\n+}"},{"sha":"3fcef86a7407de963fca1733730a440043f6a34c","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -40,6 +40,7 @@ public enum ClientExceptionType {\n     InvalidProvision(Response.Status.BAD_REQUEST),\n     InvalidReport(Response.Status.BAD_REQUEST),\n     InvalidReportExec(Response.Status.BAD_REQUEST),\n+    InvalidRelationshipType(Response.Status.BAD_REQUEST),\n     InvalidAnyType(Response.Status.BAD_REQUEST),\n     InvalidAnyObject(Response.Status.BAD_REQUEST),\n     InvalidGroup(Response.Status.BAD_REQUEST),"},{"sha":"806aaa45940bbf4557fceafc7bd0a2483ece23b6","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/Entitlement.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntitlement.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -56,6 +56,16 @@ public final class Entitlement {\n \n     public static final String ANYTYPE_DELETE = \"ANYTYPE_DELETE\";\n \n+    public static final String RELATIONSHIPTYPE_LIST = \"RELATIONSHIPTYPE_LIST\";\n+\n+    public static final String RELATIONSHIPTYPE_CREATE = \"RELATIONSHIPTYPE_CREATE\";\n+\n+    public static final String RELATIONSHIPTYPE_READ = \"RELATIONSHIPTYPE_READ\";\n+\n+    public static final String RELATIONSHIPTYPE_UPDATE = \"RELATIONSHIPTYPE_UPDATE\";\n+\n+    public static final String RELATIONSHIPTYPE_DELETE = \"RELATIONSHIPTYPE_DELETE\";\n+\n     public static final String ROLE_LIST = \"ROLE_LIST\";\n \n     public static final String ROLE_CREATE = \"ROLE_CREATE\";"},{"sha":"178bb6c46f8009576ea4dd78c94180902f157064","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RelationshipTypeService.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.rest.api.service;\n+\n+import java.util.List;\n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.model.wadl.Description;\n+import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n+import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n+import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n+\n+/**\n+ * REST operations for relationship types.\n+ */\n+@Path(\"relationshipTypes\")\n+public interface RelationshipTypeService extends JAXRSService {\n+\n+    /**\n+     * Returns a list of all relationshipTypes.\n+     *\n+     * @return list of all relationshipTypes.\n+     */\n+    @GET\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    List<RelationshipTypeTO> list();\n+\n+    /**\n+     * Returns relationshipType with matching key.\n+     *\n+     * @param key relationshipType key to be read\n+     * @return relationshipType with matching key\n+     */\n+    @GET\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    RelationshipTypeTO read(@NotNull @PathParam(\"key\") String key);\n+\n+    /**\n+     * Creates a new relationshipType.\n+     *\n+     * @param relationshipTypeTO relationshipType to be created\n+     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created relationshipType\n+     */\n+    @Descriptions({\n+        @Description(target = DocTarget.RESPONSE,\n+                value = \"Featuring <tt>Location</tt> header of created relationshipType\")\n+    })\n+    @POST\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    Response create(@NotNull RelationshipTypeTO relationshipTypeTO);\n+\n+    /**\n+     * Updates the relationshipType matching the provided key.\n+     *\n+     * @param relationshipTypeTO relationshipType to be stored\n+     */\n+    @PUT\n+    @Path(\"{key}\")\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    void update(@NotNull RelationshipTypeTO relationshipTypeTO);\n+\n+    /**\n+     * Deletes the relationshipType matching the provided key.\n+     *\n+     * @param key relationshipType key to be deleted\n+     */\n+    @DELETE\n+    @Path(\"{key}\")\n+    void delete(@NotNull @PathParam(\"key\") String key);\n+}"},{"sha":"7df2755d8b7f9fa56adeefcf72f336ef95ad09da","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/RelationshipTypeLogic.java","status":"added","additions":134,"deletions":0,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRelationshipTypeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRelationshipTypeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRelationshipTypeLogic.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,134 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF RELATIONSHIP\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n+import org.apache.syncope.common.lib.types.Entitlement;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.api.dao.RelationshipTypeDAO;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n+import org.apache.syncope.core.provisioning.api.data.RelationshipTypeDataBinder;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class RelationshipTypeLogic extends AbstractTransactionalLogic<RelationshipTypeTO> {\n+\n+    @Autowired\n+    private RelationshipTypeDataBinder binder;\n+\n+    @Autowired\n+    private RelationshipTypeDAO relationshipTypeDAO;\n+\n+    @PreAuthorize(\"hasRole('\" + Entitlement.RELATIONSHIPTYPE_READ + \"')\")\n+    public RelationshipTypeTO read(final String key) {\n+        RelationshipType relationshipType = relationshipTypeDAO.find(key);\n+        if (relationshipType == null) {\n+            LOG.error(\"Could not find relationshipType '\" + key + \"'\");\n+\n+            throw new NotFoundException(String.valueOf(key));\n+        }\n+\n+        return binder.getRelationshipTypeTO(relationshipType);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + Entitlement.RELATIONSHIPTYPE_LIST + \"')\")\n+    public List<RelationshipTypeTO> list() {\n+        return CollectionUtils.collect(relationshipTypeDAO.findAll(),\n+                new Transformer<RelationshipType, RelationshipTypeTO>() {\n+\n+                    @Override\n+                    public RelationshipTypeTO transform(final RelationshipType input) {\n+                        return binder.getRelationshipTypeTO(input);\n+                    }\n+                }, new ArrayList<RelationshipTypeTO>());\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + Entitlement.RELATIONSHIPTYPE_CREATE + \"')\")\n+    public RelationshipTypeTO create(final RelationshipTypeTO relationshipTypeTO) {\n+        return binder.getRelationshipTypeTO(relationshipTypeDAO.save(binder.create(relationshipTypeTO)));\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + Entitlement.RELATIONSHIPTYPE_UPDATE + \"')\")\n+    public RelationshipTypeTO update(final RelationshipTypeTO relationshipTypeTO) {\n+        RelationshipType relationshipType = relationshipTypeDAO.find(relationshipTypeTO.getKey());\n+        if (relationshipType == null) {\n+            LOG.error(\"Could not find relationshipType '\" + relationshipTypeTO.getKey() + \"'\");\n+            throw new NotFoundException(String.valueOf(relationshipTypeTO.getKey()));\n+        }\n+\n+        binder.update(relationshipType, relationshipTypeTO);\n+        relationshipType = relationshipTypeDAO.save(relationshipType);\n+\n+        return binder.getRelationshipTypeTO(relationshipType);\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + Entitlement.RELATIONSHIPTYPE_DELETE + \"')\")\n+    public RelationshipTypeTO delete(final String key) {\n+        RelationshipType relationshipType = relationshipTypeDAO.find(key);\n+        if (relationshipType == null) {\n+            LOG.error(\"Could not find relationshipType '\" + key + \"'\");\n+\n+            throw new NotFoundException(String.valueOf(key));\n+        }\n+\n+        RelationshipTypeTO deleted = binder.getRelationshipTypeTO(relationshipType);\n+\n+        relationshipTypeDAO.delete(key);\n+\n+        return deleted;\n+    }\n+\n+    @Override\n+    protected RelationshipTypeTO resolveReference(final Method method, final Object... args)\n+            throws UnresolvedReferenceException {\n+\n+        String key = null;\n+\n+        if (ArrayUtils.isNotEmpty(args)) {\n+            for (int i = 0; key == null && i < args.length; i++) {\n+                if (args[i] instanceof Long) {\n+                    key = (String) args[i];\n+                } else if (args[i] instanceof RelationshipTypeTO) {\n+                    key = ((RelationshipTypeTO) args[i]).getKey();\n+                }\n+            }\n+        }\n+\n+        if (StringUtils.isNotBlank(key)) {\n+            try {\n+                return binder.getRelationshipTypeTO(relationshipTypeDAO.find(key));\n+            } catch (Throwable ignore) {\n+                LOG.debug(\"Unresolved reference\", ignore);\n+                throw new UnresolvedReferenceException(ignore);\n+            }\n+        }\n+\n+        throw new UnresolvedReferenceException();\n+    }\n+\n+}"},{"sha":"e7d14b9268eb9205d57c88207f20a8cb63a9e2f4","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/RelationshipTypeDAO.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRelationshipTypeDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRelationshipTypeDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRelationshipTypeDAO.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n+\n+public interface RelationshipTypeDAO extends DAO<RelationshipType, String> {\n+\n+    RelationshipType find(String key);\n+\n+    List<RelationshipType> findAll();\n+\n+    RelationshipType save(RelationshipType anyType);\n+\n+    void delete(String key);\n+}"},{"sha":"55ac640c4efa52cf84096ce641c4fb35fc75e4d1","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Membership.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMembership.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -22,4 +22,7 @@\n \n public interface Membership<L extends Any<?, ?, ?>> extends Relationship<L, Group> {\n \n+    @Override\n+    MembershipType getType();\n+\n }"},{"sha":"d49b4dd82cfe50c5cab06e6110cdac43b5cddfcb","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/MembershipType.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMembershipType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMembershipType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMembershipType.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.entity;\n+\n+public final class MembershipType implements RelationshipType {\n+\n+    private static final long serialVersionUID = -2767173479992170853L;\n+\n+    private static final MembershipType INSTANCE = new MembershipType();\n+\n+    public static MembershipType getInstance() {\n+        return INSTANCE;\n+    }\n+\n+    private MembershipType() {\n+    }\n+\n+    @Override\n+    public String getKey() {\n+        return \"Membership\";\n+    }\n+\n+    @Override\n+    public void setKey(final String key) {\n+        // cannot be changed\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return null;\n+    }\n+\n+    @Override\n+    public void setDescription(final String description) {\n+        // cannot be changed\n+    }\n+}"},{"sha":"05497148eeef95f41f99f559d8a103c845be6811","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Relationship.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationship.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationship.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationship.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -20,6 +20,10 @@\n \n public interface Relationship<L extends Any<?, ?, ?>, R extends Any<?, ?, ?>> extends Entity<Long> {\n \n+    RelationshipType getType();\n+\n+    void setType(RelationshipType type);\n+\n     L getLeftEnd();\n \n     void setLeftEnd(L leftEnd);"},{"sha":"71f1155df93109380f1be12a1e5f7356458fc24e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/RelationshipType.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationshipType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationshipType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationshipType.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.entity;\n+\n+public interface RelationshipType extends Entity<String> {\n+\n+    void setKey(String key);\n+\n+    String getDescription();\n+\n+    void setDescription(String description);\n+}"},{"sha":"ffb61a32ac96dc0b7753aea95a197f658a53ae35","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/anyobject/AnyObject.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fanyobject%2FAnyObject.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fanyobject%2FAnyObject.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fanyobject%2FAnyObject.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -20,13 +20,16 @@\n \n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.Any;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n \n public interface AnyObject extends Any<APlainAttr, ADerAttr, AVirAttr> {\n \n     boolean add(ARelationship relationship);\n \n     boolean remove(ARelationship relationship);\n \n+    ARelationship getRelationship(RelationshipType relationshipType);\n+\n     ARelationship getRelationship(Long relationshipKey);\n \n     List<? extends ARelationship> getRelationships();"},{"sha":"63047a1ff48c43d57de125779e35253b806b5ab8","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/ExternalResource.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -33,7 +33,7 @@\n \n public interface ExternalResource extends AnnotatedEntity<String> {\n \n-    void setKey(String name);\n+    void setKey(String key);\n \n     ConnInstance getConnector();\n "},{"sha":"c3b0ca6854e32368ce4e91a88b49300d9adf89b3","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/user/User.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -22,6 +22,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.api.entity.Any;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n import org.apache.syncope.core.persistence.api.entity.Role;\n \n public interface User extends Any<UPlainAttr, UDerAttr, UVirAttr> {\n@@ -134,6 +135,8 @@ public interface User extends Any<UPlainAttr, UDerAttr, UVirAttr> {\n \n     URelationship getRelationship(Long anyObjectKey);\n \n+    URelationship getRelationship(RelationshipType relationshipType);\n+\n     List<? extends URelationship> getRelationships();\n \n     boolean add(UMembership membership);"},{"sha":"37ce1075ae7e354fa497ee7be904a6207e1b8fe6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARelationshipTypeDAO.java","status":"added","additions":95,"deletions":0,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARelationshipTypeDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARelationshipTypeDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARelationshipTypeDAO.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.dao;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import javax.persistence.TypedQuery;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.syncope.core.persistence.api.dao.RelationshipTypeDAO;\n+import org.apache.syncope.core.persistence.api.entity.Relationship;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n+import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n+import org.apache.syncope.core.persistence.api.entity.anyobject.ARelationship;\n+import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n+import org.apache.syncope.core.persistence.api.entity.user.URelationship;\n+import org.apache.syncope.core.persistence.jpa.entity.JPARelationshipType;\n+import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAARelationship;\n+import org.apache.syncope.core.persistence.jpa.entity.user.JPAURelationship;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public class JPARelationshipTypeDAO extends AbstractDAO<RelationshipType, String> implements RelationshipTypeDAO {\n+\n+    @Override\n+    public RelationshipType find(final String key) {\n+        return entityManager.find(JPARelationshipType.class, key);\n+    }\n+\n+    @Override\n+    public List<RelationshipType> findAll() {\n+        TypedQuery<RelationshipType> query = entityManager.createQuery(\n+                \"SELECT e FROM \" + JPARelationshipType.class.getSimpleName() + \" e \", RelationshipType.class);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    public RelationshipType save(final RelationshipType anyType) {\n+        return entityManager.merge(anyType);\n+    }\n+\n+    private Collection<? extends Relationship<?, ?>> findRelationshipsByType(final RelationshipType type) {\n+        TypedQuery<ARelationship> aquery = entityManager.createQuery(\n+                \"SELECT e FROM \" + JPAARelationship.class.getSimpleName() + \" e WHERE e.type=:type\",\n+                ARelationship.class);\n+        aquery.setParameter(\"type\", type);\n+        TypedQuery<URelationship> uquery = entityManager.createQuery(\n+                \"SELECT e FROM \" + JPAURelationship.class.getSimpleName() + \" e WHERE e.type=:type\",\n+                URelationship.class);\n+        uquery.setParameter(\"type\", type);\n+\n+        return CollectionUtils.union(aquery.getResultList(), uquery.getResultList());\n+    }\n+\n+    @Override\n+    public void delete(final String key) {\n+        RelationshipType type = find(key);\n+        if (type == null) {\n+            return;\n+        }\n+\n+        for (Relationship<?, ?> relationship : findRelationshipsByType(type)) {\n+            if (relationship instanceof URelationship) {\n+                ((URelationship) relationship).getLeftEnd().remove((URelationship) relationship);\n+            } else if (relationship instanceof UMembership) {\n+                ((UMembership) relationship).getLeftEnd().remove((UMembership) relationship);\n+            } else if (relationship instanceof ARelationship) {\n+                ((ARelationship) relationship).getLeftEnd().remove((ARelationship) relationship);\n+            } else if (relationship instanceof AMembership) {\n+                ((AMembership) relationship).getLeftEnd().remove((AMembership) relationship);\n+            }\n+\n+            relationship.setLeftEnd(null);\n+            entityManager.remove(relationship);\n+        }\n+\n+        entityManager.remove(type);\n+    }\n+\n+}"},{"sha":"ad6304efa3e3f6e6f4dcdb86aeaa081ae513cd41","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAEntityFactory.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAEntityFactory.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.PushPolicy;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n import org.apache.syncope.core.persistence.api.entity.Report;\n import org.apache.syncope.core.persistence.api.entity.ReportExec;\n import org.apache.syncope.core.persistence.api.entity.ReportletConfInstance;\n@@ -150,6 +151,8 @@ public <KEY, T extends Entity<KEY>> T newEntity(final Class<T> reference) {\n             result = (T) new JPAUser();\n         } else if (reference.equals(Group.class)) {\n             result = (T) new JPAGroup();\n+        } else if (reference.equals(RelationshipType.class)) {\n+            result = (T) new JPARelationshipType();\n         } else if (reference.equals(ARelationship.class)) {\n             result = (T) new JPAARelationship();\n         } else if (reference.equals(URelationship.class)) {"},{"sha":"f3fc8823a0d768d036a546aa706c73d0742f75a8","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPARelationshipType.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARelationshipType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARelationshipType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPARelationshipType.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity;\n+\n+import javax.persistence.Cacheable;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n+import org.apache.syncope.core.persistence.jpa.validation.entity.RelationshipTypeCheck;\n+\n+@Entity\n+@Table(name = JPARelationshipType.TABLE)\n+@RelationshipTypeCheck\n+@Cacheable\n+public class JPARelationshipType extends AbstractEntity<String> implements RelationshipType {\n+\n+    private static final long serialVersionUID = -753673974614737065L;\n+\n+    public static final String TABLE = \"RelationshipType\";\n+\n+    @Id\n+    private String name;\n+\n+    private String description;\n+\n+    @Override\n+    public String getKey() {\n+        return name;\n+    }\n+\n+    @Override\n+    public void setKey(final String name) {\n+        this.name = name;\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    @Override\n+    public void setDescription(final String description) {\n+        this.description = description;\n+    }\n+}"},{"sha":"28ee49bbc4cb2d153e4e8d84f420af9a23353c89","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAAMembership.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAMembership.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -23,6 +23,8 @@\n import javax.persistence.Id;\n import javax.persistence.ManyToOne;\n import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.MembershipType;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n@@ -53,6 +55,16 @@ public Long getKey() {\n         return id;\n     }\n \n+    @Override\n+    public MembershipType getType() {\n+        return MembershipType.getInstance();\n+    }\n+\n+    @Override\n+    public void setType(final RelationshipType type) {\n+        // cannot be changed\n+    }\n+\n     @Override\n     public AnyObject getLeftEnd() {\n         return leftEnd;"},{"sha":"e12f8d8fdea4dd0a6a66da93afa491ff27c58f43","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAARelationship.java","status":"modified","additions":24,"deletions":1,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAARelationship.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAARelationship.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAARelationship.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -20,15 +20,21 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n import javax.persistence.Id;\n import javax.persistence.ManyToOne;\n import javax.persistence.Table;\n+import javax.persistence.UniqueConstraint;\n+import org.apache.syncope.core.persistence.api.entity.MembershipType;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ARelationship;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractEntity;\n+import org.apache.syncope.core.persistence.jpa.entity.JPARelationshipType;\n \n @Entity\n-@Table(name = JPAARelationship.TABLE)\n+@Table(name = JPAARelationship.TABLE, uniqueConstraints =\n+        @UniqueConstraint(columnNames = { \"type_name\", \"left_anyObject_id\", \"right_anyObject_id\" }))\n public class JPAARelationship extends AbstractEntity<Long> implements ARelationship {\n \n     private static final long serialVersionUID = 6608821135023815357L;\n@@ -38,6 +44,9 @@ public class JPAARelationship extends AbstractEntity<Long> implements ARelations\n     @Id\n     private Long id;\n \n+    @ManyToOne(fetch = FetchType.EAGER, optional = false)\n+    private JPARelationshipType type;\n+\n     @ManyToOne\n     @Column(name = \"left_anyObject_id\")\n     private JPAAnyObject leftEnd;\n@@ -51,6 +60,20 @@ public Long getKey() {\n         return id;\n     }\n \n+    @Override\n+    public RelationshipType getType() {\n+        return type;\n+    }\n+\n+    @Override\n+    public void setType(final RelationshipType type) {\n+        if (MembershipType.getInstance().getKey().equalsIgnoreCase(type.getKey())) {\n+            throw new IllegalArgumentException(\"This is not a membership\");\n+        }\n+        checkType(type, JPARelationshipType.class);\n+        this.type = (JPARelationshipType) type;\n+    }\n+\n     @Override\n     public AnyObject getLeftEnd() {\n         return leftEnd;"},{"sha":"d32ec02cd26116cb8b799bc141798fb71bdbada2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAAnyObject.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAnyObject.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAnyObject.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAnyObject.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -36,6 +36,7 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ADerAttr;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttr;\n@@ -197,6 +198,17 @@ public boolean remove(final ARelationship relationship) {\n         return this.relationships.remove((JPAARelationship) relationship);\n     }\n \n+    @Override\n+    public ARelationship getRelationship(final RelationshipType relationshipType) {\n+        return CollectionUtils.find(getRelationships(), new Predicate<ARelationship>() {\n+\n+            @Override\n+            public boolean evaluate(final ARelationship relationship) {\n+                return relationshipType != null && relationshipType.equals(relationship.getType());\n+            }\n+        });\n+    }\n+\n     @Override\n     public ARelationship getRelationship(final Long anyObjectKey) {\n         return CollectionUtils.find(getRelationships(), new Predicate<ARelationship>() {"},{"sha":"879ee87cd52757e7e938b5d82e694caa908a69f4","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUMembership.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUMembership.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -23,6 +23,8 @@\n import javax.persistence.Id;\n import javax.persistence.ManyToOne;\n import javax.persistence.Table;\n+import org.apache.syncope.core.persistence.api.entity.MembershipType;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n@@ -53,6 +55,16 @@ public Long getKey() {\n         return id;\n     }\n \n+    @Override\n+    public MembershipType getType() {\n+        return MembershipType.getInstance();\n+    }\n+\n+    @Override\n+    public void setType(final RelationshipType type) {\n+        // cannot be changed\n+    }\n+\n     @Override\n     public JPAUser getLeftEnd() {\n         return leftEnd;"},{"sha":"25fd3a1116f73f9ec66b10cde36d6d3bde9c4b4c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAURelationship.java","status":"modified","additions":24,"deletions":1,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAURelationship.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAURelationship.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAURelationship.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -20,17 +20,23 @@\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n import javax.persistence.Id;\n import javax.persistence.ManyToOne;\n import javax.persistence.Table;\n+import javax.persistence.UniqueConstraint;\n+import org.apache.syncope.core.persistence.api.entity.MembershipType;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.user.URelationship;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractEntity;\n+import org.apache.syncope.core.persistence.jpa.entity.JPARelationshipType;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAnyObject;\n \n @Entity\n-@Table(name = JPAURelationship.TABLE)\n+@Table(name = JPAURelationship.TABLE, uniqueConstraints =\n+        @UniqueConstraint(columnNames = { \"type_name\", \"user_id\", \"anyObject_id\" }))\n public class JPAURelationship extends AbstractEntity<Long> implements URelationship {\n \n     private static final long serialVersionUID = 2778494939240083204L;\n@@ -40,6 +46,9 @@ public class JPAURelationship extends AbstractEntity<Long> implements URelations\n     @Id\n     private Long id;\n \n+    @ManyToOne(fetch = FetchType.EAGER, optional = false)\n+    private JPARelationshipType type;\n+\n     @ManyToOne\n     @Column(name = \"user_id\")\n     private JPAUser leftEnd;\n@@ -53,6 +62,20 @@ public Long getKey() {\n         return id;\n     }\n \n+    @Override\n+    public RelationshipType getType() {\n+        return type;\n+    }\n+\n+    @Override\n+    public void setType(final RelationshipType type) {\n+        if (MembershipType.getInstance().getKey().equalsIgnoreCase(type.getKey())) {\n+            throw new IllegalArgumentException(\"This is not a membership\");\n+        }\n+        checkType(type, JPARelationshipType.class);\n+        this.type = (JPARelationshipType) type;\n+    }\n+\n     @Override\n     public JPAUser getLeftEnd() {\n         return leftEnd;"},{"sha":"88c86fb4d980021d417b8cc5a586991220073db6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUser.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -64,6 +64,7 @@\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n import org.apache.syncope.core.persistence.api.entity.Role;\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n import org.apache.syncope.core.persistence.api.entity.user.URelationship;\n@@ -536,6 +537,17 @@ public boolean remove(final URelationship relationship) {\n         return this.relationships.remove((JPAURelationship) relationship);\n     }\n \n+    @Override\n+    public URelationship getRelationship(final RelationshipType relationshipType) {\n+        return CollectionUtils.find(getRelationships(), new Predicate<URelationship>() {\n+\n+            @Override\n+            public boolean evaluate(final URelationship relationship) {\n+                return relationshipType != null && relationshipType.equals(relationship.getType());\n+            }\n+        });\n+    }\n+\n     @Override\n     public URelationship getRelationship(final Long anyObjectKey) {\n         return CollectionUtils.find(getRelationships(), new Predicate<URelationship>() {"},{"sha":"f1a70dc3a591cc47f0ff08ebf948b1ae39f96349","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/AbstractValidator.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAbstractValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAbstractValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FAbstractValidator.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -27,9 +27,6 @@\n \n public abstract class AbstractValidator<A extends Annotation, T> implements ConstraintValidator<A, T> {\n \n-    /**\n-     * Logger.\n-     */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractValidator.class);\n \n     protected static final Pattern NAME_PATTERN ="},{"sha":"9574e5387c6c351641af017ce1ebac0af2214687","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/RelationshipTypeCheck.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FRelationshipTypeCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FRelationshipTypeCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FRelationshipTypeCheck.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.validation.entity;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import javax.validation.Constraint;\n+import javax.validation.Payload;\n+\n+@Target({ ElementType.TYPE })\n+@Retention(RetentionPolicy.RUNTIME)\n+@Constraint(validatedBy = RelationshipTypeValidator.class)\n+@Documented\n+public @interface RelationshipTypeCheck {\n+\n+    String message() default \"{org.apache.syncope.core.persistence.validation.relationshiptype}\";\n+\n+    Class<?>[] groups() default {};\n+\n+    Class<? extends Payload>[] payload() default {};\n+}"},{"sha":"8051bdab2b91de805a271f60d00de1da7b2e2e54","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/RelationshipTypeValidator.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FRelationshipTypeValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FRelationshipTypeValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FRelationshipTypeValidator.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.validation.entity;\n+\n+import javax.validation.ConstraintValidatorContext;\n+import org.apache.syncope.common.lib.types.EntityViolationType;\n+import org.apache.syncope.core.persistence.api.entity.MembershipType;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n+\n+public class RelationshipTypeValidator extends AbstractValidator<RelationshipTypeCheck, RelationshipType> {\n+\n+    @Override\n+    public boolean isValid(final RelationshipType object, final ConstraintValidatorContext context) {\n+        context.disableDefaultConstraintViolation();\n+\n+        if (MembershipType.getInstance().getKey().equalsIgnoreCase(object.getKey())) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.InvalidName, \"Invalid RelationshipType name\")).\n+                    addPropertyNode(\"name\").addConstraintViolation();\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+}"},{"sha":"5130c285c7f76198f1afb68a101022f0520577bf","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnyObjectTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyObjectTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyObjectTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyObjectTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/AnyObjectTest.java"},{"sha":"37aef3ce8786fa61c010ec5de825b02869bd1e1a","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnySearchTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/AnySearchTest.java"},{"sha":"ed83f65c4e30e069e92ebe746eb426cb2a8107a0","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnyTypeClassTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyTypeClassTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyTypeClassTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyTypeClassTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/AnyTypeClassTest.java"},{"sha":"be60f464e740659427ba51881f92e72803b727b6","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnyTypeTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyTypeTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyTypeTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnyTypeTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/AnyTypeTest.java"},{"sha":"1e90e5c7c7d7947ea3f7fcfa0363e2dbb4157b13","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ConfTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConfTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConfTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConfTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/ConfTest.java"},{"sha":"70665ed5b73bdd5c43adf1847bb1d72cbc45c1e0","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ConnInstanceTest.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FConnInstanceTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n@@ -123,7 +123,7 @@ public void save() throws ClassNotFoundException {\n \n         assertEquals(\"New\", actual.getDisplayName());\n \n-        assertEquals(new Integer(60), actual.getConnRequestTimeout());\n+        assertEquals(60, actual.getConnRequestTimeout(), 0);\n \n         conf = connInstance.getConfiguration();\n         assertFalse(conf.isEmpty());","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/ConnInstanceTest.java"},{"sha":"cd336ae43df8ddbbec1a17ce97a850bd0a1f1ea2","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/DerAttrTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FDerAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FDerAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FDerAttrTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/DerAttrTest.java"},{"sha":"c62ab6e0e125fad2cef83cab6030fac27ec69c9c","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/DerSchemaTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FDerSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FDerSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FDerSchemaTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/DerSchemaTest.java"},{"sha":"c6a31efaf9b43f573152fff92dde52453b89f74b","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/GroupTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FGroupTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FGroupTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FGroupTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/GroupTest.java"},{"sha":"150b9246b4a31011e4af87cbcf41c32f2703b2b6","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/NotificationTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FNotificationTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/NotificationTest.java"},{"sha":"108e6226acf479a25da6d0cb6129709455a12acc","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PlainAttrTest.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainAttrTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n@@ -206,9 +206,9 @@ public void saveWithBinary() throws UnsupportedEncodingException {\n         assertNotNull(photoSchema);\n         assertNotNull(photoSchema.getMimeType());\n \n-        final byte[] bytes = new byte[20];\n+        byte[] bytes = new byte[20];\n         new Random().nextBytes(bytes);\n-        final String photoB64Value = new String(Base64.encode(bytes), SyncopeConstants.DEFAULT_ENCODING);\n+        String photoB64Value = new String(Base64.encode(bytes), SyncopeConstants.DEFAULT_CHARSET);\n \n         UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n         attr.setOwner(user);","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/PlainAttrTest.java"},{"sha":"119ae6df94287433828d6a7817352c39530c1f0b","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PlainSchemaTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPlainSchemaTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/PlainSchemaTest.java"},{"sha":"ed114454367ac68e6fe419931ed62fd99c5a728b","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PolicyTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/PolicyTest.java"},{"sha":"3fef2ceb56818b9ee8514710b9b014d75de5877b","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/RealmTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRealmTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRealmTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRealmTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/RealmTest.java"},{"sha":"9aee7f13d466a83c9ff998b45bff61cb5f401405","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/RelationshipTypeTest.java","status":"added","additions":104,"deletions":0,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRelationshipTypeTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRelationshipTypeTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRelationshipTypeTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.inner;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n+import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n+import org.apache.syncope.core.persistence.api.dao.RelationshipTypeDAO;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n+import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n+import org.apache.syncope.core.persistence.jpa.AbstractTest;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Transactional\n+public class RelationshipTypeTest extends AbstractTest {\n+\n+    @Autowired\n+    private RelationshipTypeDAO relationshipTypeDAO;\n+\n+    @Autowired\n+    private AnyObjectDAO anyObjectDAO;\n+\n+    @Test\n+    public void find() {\n+        RelationshipType inclusion = relationshipTypeDAO.find(\"inclusion\");\n+        assertNotNull(inclusion);\n+        assertEquals(\"inclusion\", inclusion.getKey());\n+    }\n+\n+    @Test\n+    public void findAll() {\n+        List<RelationshipType> list = relationshipTypeDAO.findAll();\n+        assertFalse(list.isEmpty());\n+    }\n+\n+    @Test\n+    public void save() {\n+        RelationshipType newType = entityFactory.newEntity(RelationshipType.class);\n+        newType.setKey(\"new type\");\n+        newType.setDescription(\"description\");\n+\n+        newType = relationshipTypeDAO.save(newType);\n+        assertNotNull(newType);\n+        assertEquals(\"description\", newType.getDescription());\n+    }\n+\n+    @Test(expected = InvalidEntityException.class)\n+    public void saveInvalidName() {\n+        RelationshipType newType = entityFactory.newEntity(RelationshipType.class);\n+        newType.setKey(\"membership\");\n+        relationshipTypeDAO.save(newType);\n+    }\n+\n+    @Test\n+    public void delete() {\n+        RelationshipType type = relationshipTypeDAO.find(\"neighborhood\");\n+        assertNotNull(type);\n+\n+        relationshipTypeDAO.delete(type.getKey());\n+        assertNull(relationshipTypeDAO.find(\"neighborhood\"));\n+    }\n+\n+    @Test\n+    public void deleteOnAnyObject() {\n+        RelationshipType neighborhood = relationshipTypeDAO.find(\"neighborhood\");\n+        assertNotNull(neighborhood);\n+\n+        AnyObject anyObject = anyObjectDAO.find(1L);\n+        assertNotNull(anyObject);\n+        assertNotNull(anyObject.getRelationship(neighborhood));\n+\n+        relationshipTypeDAO.delete(\"neighborhood\");\n+\n+        relationshipTypeDAO.flush();\n+\n+        anyObject = anyObjectDAO.find(1L);\n+        assertNotNull(anyObject);\n+        assertTrue(anyObject.getRelationships().isEmpty());\n+    }\n+}"},{"sha":"43188130e93b5804b189a4f1e72737a76e3531a5","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ReportTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FReportTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FReportTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FReportTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/ReportTest.java"},{"sha":"e5cee24a2c959dbc399980da044b5a180a97e7ad","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ResourceTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FResourceTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/ResourceTest.java"},{"sha":"bf2c0129cbb415a17d5698cb9e6e8a5db6fa0721","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/RoleTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRoleTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/RoleTest.java"},{"sha":"f17146edec4b10b94c87d80e9894b8c68e3ce0ad","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/SecurityQuestionTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FSecurityQuestionTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FSecurityQuestionTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FSecurityQuestionTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/SecurityQuestionTest.java"},{"sha":"538560043f49436899eda280b42c88f1d9a93aba","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/TaskExecTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskExecTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskExecTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskExecTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/TaskExecTest.java"},{"sha":"4f4b02cd86d5d5a5ef49d9335cb9fb700a83d5cc","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/TaskTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/TaskTest.java"},{"sha":"587f31d15cca0b76a4c101c7c9096045425b123d","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/UserTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/UserTest.java"},{"sha":"95111c6287dc0c346b13977ceed8522fd482d325","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/VirAttrTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FVirAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FVirAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FVirAttrTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/VirAttrTest.java"},{"sha":"fc567393c6de37e30e1360bdaee1bdf22d9ddea3","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/VirSchemaTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FVirSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FVirSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FVirSchemaTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.jpa.inner;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/VirSchemaTest.java"},{"sha":"79f96ed5b16352f287469b67ca197ee9710c208c","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/AnySearchTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/AnySearchTest.java"},{"sha":"29b97a3f92e955a5286031cc2716c87fcad57f08","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/AnyTypeClassTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnyTypeClassTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnyTypeClassTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnyTypeClassTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/AnyTypeClassTest.java"},{"sha":"b3712d80fdb056a77b9c7bed1dfd91ff286bd9a6","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/AnyTypeTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnyTypeTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnyTypeTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnyTypeTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/AnyTypeTest.java"},{"sha":"0046679134c6144a673053c89177d166820207df","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ConnInstanceTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FConnInstanceTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/ConnInstanceTest.java"},{"sha":"fcbe239db88074137466ef528114183386e867ee","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/DerSchemaTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FDerSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FDerSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FDerSchemaTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertNull;\n ","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/DerSchemaTest.java"},{"sha":"d2081067c5e1fe4b59d104019bebc24d9e563da9","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/GroupTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/GroupTest.java"},{"sha":"2e46caf57d4af1b0de205330d86bd359c6dadb86","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PlainAttrTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainAttrTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/PlainAttrTest.java"},{"sha":"0917d2726d41a6cbd97aede9dd46d1cfb4646a60","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PlainSchemaTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/PlainSchemaTest.java"},{"sha":"d55fa62319e176154894f442618f2ab514edb16a","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/RealmTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRealmTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRealmTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRealmTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/RealmTest.java"},{"sha":"713ea64a6dc8efc2b680382c9ce79ff3ab13a62d","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ReportTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FReportTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FReportTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FReportTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/ReportTest.java"},{"sha":"d092f3d0e156e340972fd790d7083a310ad296c2","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ResourceTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/ResourceTest.java"},{"sha":"11b572c5481e6d266882bd08ad76a80480b861f9","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/RoleTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/RoleTest.java"},{"sha":"0a966dab7250a2f428bc037b0f7e22c167f7d96a","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/SecurityQuestionTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FSecurityQuestionTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FSecurityQuestionTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FSecurityQuestionTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertNull;\n ","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/SecurityQuestionTest.java"},{"sha":"f281fb42af41fdfe2f041f4f38012f1a3a7f7b4c","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/TaskTest.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/TaskTest.java"},{"sha":"b921cdc72f53c604e876ab4d9ff46fce5dd2ca53","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/UserTest.java","status":"renamed","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.relationship;\n+package org.apache.syncope.core.persistence.jpa.outer;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n@@ -30,6 +30,7 @@\n import org.apache.syncope.core.persistence.api.dao.PlainAttrValueDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n+import org.apache.syncope.core.persistence.api.dao.RelationshipTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttr;\n@@ -44,6 +45,9 @@\n @Transactional\n public class UserTest extends AbstractTest {\n \n+    @Autowired\n+    private RelationshipTypeDAO relationshipTypeDAO;\n+\n     @Autowired\n     private AnyObjectDAO anyObjectDAO;\n \n@@ -111,6 +115,7 @@ public void ships() {\n         user.remove(user.getRelationships().get(0));\n \n         URelationship newR = entityFactory.newEntity(URelationship.class);\n+        newR.setType(relationshipTypeDAO.find(\"neighborhood\"));\n         newR.setLeftEnd(user);\n         newR.setRightEnd(anyObjectDAO.find(2L));\n         user.add(newR);","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/UserTest.java"},{"sha":"8b4740a476935ed836c814f156f606f7447b5b92","filename":"core/persistence-jpa/src/test/resources/content.xml","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -112,6 +112,9 @@ under the License.\n   <Policy DTYPE=\"SyncPolicy\" id=\"9\" description=\"sync policy for java rule\" type=\"SYNC\" \n           specification='{\"conflictResolutionAction\":\"IGNORE\",\"items\":[]}'/>\n \n+  <RelationshipType name=\"inclusion\" description=\"Models the act that an object is included in another\"/>\n+  <RelationshipType name=\"neighborhood\"/>\n+  \n   <AnyTypeClass name=\"generic membership\"/>\n \n   <AnyType name=\"USER\" kind=\"USER\"/>\n@@ -141,8 +144,8 @@ under the License.\n   <AnyObject id=\"2\" realm_id=\"1\" type_name=\"PRINTER\"\n              creator=\"admin\" lastModifier=\"admin\" \n              creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n-\n-  <ARelationship id=\"1\" left_anyObject_id=\"1\" right_anyObject_id=\"2\"/>\n+  \n+  <ARelationship id=\"1\" left_anyObject_id=\"1\" right_anyObject_id=\"2\" type_name=\"neighborhood\"/>\n   \n   <SyncopeRole id=\"1\" name=\"User reviewer\"/>\n   <SyncopeRole_entitlements entitlement=\"USER_READ\" role_id=\"1\"/>\n@@ -254,7 +257,7 @@ under the License.\n                 creator=\"admin\" lastModifier=\"admin\" \n                 creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   \n-  <URelationship id=\"1\" user_id=\"4\" anyObject_id=\"1\"/>\n+  <URelationship id=\"1\" user_id=\"4\" anyObject_id=\"1\" type_name=\"neighborhood\"/>\n \n   <UMembership id=\"1\" user_id=\"1\" group_id=\"1\"/>\n   <UMembership id=\"2\" user_id=\"2\" group_id=\"1\"/>"},{"sha":"3e940eecba57bd4dfaa186bc964311df041edd7c","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/RelationshipTypeDataBinder.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FRelationshipTypeDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FRelationshipTypeDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FRelationshipTypeDataBinder.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.data;\n+\n+import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n+\n+public interface RelationshipTypeDataBinder {\n+\n+    RelationshipType create(RelationshipTypeTO relationshipTypeTO);\n+\n+    void update(RelationshipType relationshipType, RelationshipTypeTO relationshipTypeTO);\n+\n+    RelationshipTypeTO getRelationshipTypeTO(RelationshipType relationshipType);\n+}"},{"sha":"4d324cfa1c1efe92f0378b80f2b0865c01f0f139","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/RelationshipTypeDataBinderImpl.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRelationshipTypeDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRelationshipTypeDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRelationshipTypeDataBinderImpl.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.data;\n+\n+import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n+import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n+import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n+import org.apache.syncope.core.provisioning.api.data.RelationshipTypeDataBinder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class RelationshipTypeDataBinderImpl implements RelationshipTypeDataBinder {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(RelationshipTypeDataBinder.class);\n+\n+    @Autowired\n+    private EntityFactory entityFactory;\n+\n+    @Override\n+    public RelationshipType create(final RelationshipTypeTO relationshipTypeTO) {\n+        RelationshipType relationshipType = entityFactory.newEntity(RelationshipType.class);\n+        update(relationshipType, relationshipTypeTO);\n+        return relationshipType;\n+    }\n+\n+    @Override\n+    public void update(final RelationshipType relationshipType, final RelationshipTypeTO relationshipTypeTO) {\n+        if (relationshipType.getKey() == null) {\n+            relationshipType.setKey(relationshipTypeTO.getKey());\n+        }\n+\n+        relationshipType.setDescription(relationshipTypeTO.getDescription());\n+    }\n+\n+    @Override\n+    public RelationshipTypeTO getRelationshipTypeTO(final RelationshipType relationshipType) {\n+        RelationshipTypeTO relationshipTypeTO = new RelationshipTypeTO();\n+\n+        relationshipTypeTO.setKey(relationshipType.getKey());\n+        relationshipTypeTO.setDescription(relationshipType.getDescription());\n+\n+        return relationshipTypeTO;\n+    }\n+\n+}"},{"sha":"6e1958e4836353c74a78d4762a93d37bd7926de1","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RelationshipTypeServiceImpl.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRelationshipTypeServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRelationshipTypeServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRelationshipTypeServiceImpl.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf.service;\n+\n+import java.net.URI;\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n+import org.apache.syncope.core.logic.RelationshipTypeLogic;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class RelationshipTypeServiceImpl extends AbstractServiceImpl implements RelationshipTypeService {\n+\n+    @Autowired\n+    private RelationshipTypeLogic logic;\n+\n+    @Override\n+    public List<RelationshipTypeTO> list() {\n+        return logic.list();\n+    }\n+\n+    @Override\n+    public RelationshipTypeTO read(final String key) {\n+        return logic.read(key);\n+    }\n+\n+    @Override\n+    public Response create(final RelationshipTypeTO anyTypeTO) {\n+        RelationshipTypeTO created = logic.create(anyTypeTO);\n+        URI location = uriInfo.getAbsolutePathBuilder().path(String.valueOf(created.getKey())).build();\n+        return Response.created(location).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n+                build();\n+    }\n+\n+    @Override\n+    public void update(final RelationshipTypeTO anyTypeTO) {\n+        logic.update(anyTypeTO);\n+    }\n+\n+    @Override\n+    public void delete(final String key) {\n+        logic.delete(key);\n+    }\n+\n+}"},{"sha":"7c366115e8e09f3690ed7676ccaf9f68b540d599","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AbstractITCase.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractITCase.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -63,6 +63,7 @@\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.syncope.common.rest.api.service.RealmService;\n+import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n import org.apache.syncope.common.rest.api.service.RoleService;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.syncope.common.rest.api.service.SecurityQuestionService;\n@@ -158,6 +159,8 @@ public abstract class AbstractITCase {\n \n     protected static AnyTypeService anyTypeService;\n \n+    protected static RelationshipTypeService relationshipTypeService;\n+\n     protected static RealmService realmService;\n \n     protected static AnyObjectService anyObjectService;\n@@ -232,6 +235,7 @@ public static void restSetup() {\n         syncopeService = adminClient.getService(SyncopeService.class);\n         anyTypeClassService = adminClient.getService(AnyTypeClassService.class);\n         anyTypeService = adminClient.getService(AnyTypeService.class);\n+        relationshipTypeService = adminClient.getService(RelationshipTypeService.class);\n         realmService = adminClient.getService(RealmService.class);\n         anyObjectService = adminClient.getService(AnyObjectService.class);\n         roleService = adminClient.getService(RoleService.class);"},{"sha":"3d8d82ff550a86c14e8587f05be910eae869860e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/RelationshipTypeITCase.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRelationshipTypeITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d8927ef4c3943a5a1dec1c17985a32fc9bfbae50/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRelationshipTypeITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FRelationshipTypeITCase.java?ref=d8927ef4c3943a5a1dec1c17985a32fc9bfbae50","patch":"@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+\n+import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class RelationshipTypeITCase extends AbstractITCase {\n+\n+    @Test\n+    public void read() {\n+        RelationshipTypeTO otherType = relationshipTypeService.read(\"inclusion\");\n+        assertNotNull(otherType);\n+        assertEquals(\"inclusion\", otherType.getKey());\n+    }\n+\n+    @Test\n+    public void list() {\n+        List<RelationshipTypeTO> list = relationshipTypeService.list();\n+        assertFalse(list.isEmpty());\n+    }\n+\n+    @Test\n+    public void crud() {\n+        RelationshipTypeTO newType = new RelationshipTypeTO();\n+        newType.setKey(\"new type\");\n+        newType.setDescription(\"description\");\n+\n+        Response response = relationshipTypeService.create(newType);\n+        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n+\n+        newType = getObject(response.getLocation(), RelationshipTypeService.class, RelationshipTypeTO.class);\n+        assertNotNull(newType);\n+        assertEquals(\"description\", newType.getDescription());\n+\n+        newType.setDescription(\"new description\");\n+        relationshipTypeService.update(newType);\n+\n+        newType = relationshipTypeService.read(newType.getKey());\n+        assertNotNull(newType);\n+        assertEquals(\"new description\", newType.getDescription());\n+\n+        relationshipTypeService.delete(newType.getKey());\n+\n+        try {\n+            relationshipTypeService.read(newType.getKey());\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.NotFound, e.getType());\n+        }\n+    }\n+\n+    @Test\n+    public void createInvalidName() {\n+        RelationshipTypeTO newType = new RelationshipTypeTO();\n+        newType.setKey(\"membership\");\n+        try {\n+            relationshipTypeService.create(newType);\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.InvalidRelationshipType, e.getType());\n+        }\n+    }\n+}"}]}