{"sha":"1be15811191905e4d360d1e2b26fd6d10138af79","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFiZTE1ODExMTkxOTA1ZTRkMzYwZDFlMmIyNmZkNmQxMDEzOGFmNzk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-20T15:24:48Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-20T15:24:48Z"},"message":"[SYNCOPE-858] Enhancement provided","tree":{"sha":"691e5aec0d36f03c43a5417462f71b6e42c0b9df","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/691e5aec0d36f03c43a5417462f71b6e42c0b9df"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1be15811191905e4d360d1e2b26fd6d10138af79","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1be15811191905e4d360d1e2b26fd6d10138af79","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1be15811191905e4d360d1e2b26fd6d10138af79","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1be15811191905e4d360d1e2b26fd6d10138af79/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"63bceebfc38ed53a07ccee4e422647d11ad83941","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/63bceebfc38ed53a07ccee4e422647d11ad83941","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/63bceebfc38ed53a07ccee4e422647d11ad83941"}],"stats":{"total":45,"additions":34,"deletions":11},"files":[{"sha":"9069b7a09245c1f58bae8b3025d699e996d40ba8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":34,"deletions":11,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1be15811191905e4d360d1e2b26fd6d10138af79/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1be15811191905e4d360d1e2b26fd6d10138af79/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=1be15811191905e4d360d1e2b26fd6d10138af79","patch":"@@ -67,6 +67,7 @@\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.identityconnectors.framework.common.objects.ConnectorObjectBuilder;\n import org.identityconnectors.framework.common.objects.Name;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.Uid;\n@@ -185,7 +186,7 @@ private Map<String, Attribute> toMap(final Collection<? extends Attribute> attri\n         return map;\n     }\n \n-    protected void createOrUpdate(\n+    protected Uid createOrUpdate(\n             final PropagationTask task,\n             final ConnectorObject beforeObj,\n             final Connector connector,\n@@ -215,9 +216,11 @@ protected void createOrUpdate(\n                     \"Not attempted because there are mandatory attributes without value(s): \" + mandatoryAttrNames);\n         }\n \n+        Uid result;\n         if (beforeObj == null) {\n             LOG.debug(\"Create {} on {}\", attributes, task.getResource().getKey());\n-            connector.create(new ObjectClass(task.getObjectClassName()), attributes, null, propagationAttempted);\n+            result = connector.create(\n+                    new ObjectClass(task.getObjectClassName()), attributes, null, propagationAttempted);\n         } else {\n             // 1. check if rename is really required\n             Name newName = (Name) AttributeUtil.find(Name.NAME, attributes);\n@@ -247,6 +250,7 @@ protected void createOrUpdate(\n \n             if (originalAttrs.equals(attributes)) {\n                 LOG.debug(\"Don't need to propagate anything: {} is equal to {}\", originalAttrs, attributes);\n+                result = (Uid) AttributeUtil.find(Uid.NAME, attributes);\n             } else {\n                 LOG.debug(\"Attributes that would be updated {}\", attributes);\n \n@@ -260,10 +264,12 @@ protected void createOrUpdate(\n                 // 3. provision entry\n                 LOG.debug(\"Update {} on {}\", strictlyModified, task.getResource().getKey());\n \n-                connector.update(\n+                result = connector.update(\n                         beforeObj.getObjectClass(), beforeObj.getUid(), strictlyModified, null, propagationAttempted);\n             }\n         }\n+\n+        return result;\n     }\n \n     protected Any<?> getAny(final PropagationTask task) {\n@@ -301,14 +307,16 @@ protected Any<?> getAny(final PropagationTask task) {\n         return any;\n     }\n \n-    protected void delete(\n+    protected Uid delete(\n             final PropagationTask task,\n             final ConnectorObject beforeObj,\n             final Connector connector,\n             final Boolean[] propagationAttempted) {\n \n+        Uid result;\n         if (beforeObj == null) {\n             LOG.debug(\"{} not found on external resource: ignoring delete\", task.getConnObjectKey());\n+            result = null;\n         } else {\n             /*\n              * We must choose here whether to\n@@ -337,10 +345,13 @@ protected void delete(\n                 LOG.debug(\"Delete {} on {}\", beforeObj.getUid(), task.getResource().getKey());\n \n                 connector.delete(beforeObj.getObjectClass(), beforeObj.getUid(), null, propagationAttempted);\n+                result = beforeObj.getUid();\n             } else {\n-                createOrUpdate(task, beforeObj, connector, propagationAttempted);\n+                result = createOrUpdate(task, beforeObj, connector, propagationAttempted);\n             }\n         }\n+\n+        return result;\n     }\n \n     @Override\n@@ -362,6 +373,7 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n         ConnectorObject afterObj = null;\n \n         Provision provision = null;\n+        Uid uid = null;\n         Connector connector = null;\n         Result result;\n         try {\n@@ -378,11 +390,11 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n             switch (task.getOperation()) {\n                 case CREATE:\n                 case UPDATE:\n-                    createOrUpdate(task, beforeObj, connector, propagationAttempted);\n+                    uid = createOrUpdate(task, beforeObj, connector, propagationAttempted);\n                     break;\n \n                 case DELETE:\n-                    delete(task, beforeObj, connector, propagationAttempted);\n+                    uid = delete(task, beforeObj, connector, propagationAttempted);\n                     break;\n \n                 default:\n@@ -392,10 +404,6 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n                     ? PropagationTaskExecStatus.SUCCESS.name()\n                     : PropagationTaskExecStatus.NOT_ATTEMPTED.name());\n \n-            for (PropagationActions action : actions) {\n-                action.after(task, execution, afterObj);\n-            }\n-\n             LOG.debug(\"Successfully propagated to {}\", task.getResource());\n             result = Result.SUCCESS;\n         } catch (Exception e) {\n@@ -432,6 +440,9 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n         } finally {\n             // Try to read remote object AFTER any actual operation\n             if (connector != null) {\n+                if (uid != null) {\n+                    task.setConnObjectKey(uid.getUidValue());\n+                }\n                 try {\n                     afterObj = getRemoteObject(task, connector, provision, true);\n                 } catch (Exception ignore) {\n@@ -440,6 +451,14 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n                 }\n             }\n \n+            if (afterObj == null && uid != null) {\n+                afterObj = new ConnectorObjectBuilder().\n+                        setObjectClass(new ObjectClass(task.getObjectClassName())).\n+                        setUid(uid).\n+                        setName(AttributeUtil.getNameFromAttributes(task.getAttributes())).\n+                        build();\n+            }\n+\n             execution.setStart(start);\n             execution.setMessage(taskExecutionMessage);\n             execution.setEnd(new Date());\n@@ -467,6 +486,10 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n             }\n         }\n \n+        for (PropagationActions action : actions) {\n+            action.after(task, execution, afterObj);\n+        }\n+\n         notificationManager.createTasks(\n                 AuditElements.EventCategoryType.PROPAGATION,\n                 task.getAnyTypeKind().name().toLowerCase(),"}]}