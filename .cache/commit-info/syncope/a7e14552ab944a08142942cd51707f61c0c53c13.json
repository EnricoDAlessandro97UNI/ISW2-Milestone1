{"sha":"a7e14552ab944a08142942cd51707f61c0c53c13","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE3ZTE0NTUyYWI5NDRhMDgxNDI5NDJjZDUxNzA3ZjYxYzBjNTNjMTM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-02T13:05:47Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-02T13:05:47Z"},"message":"Renaming, renaming, renaming\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246669 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d44c971087627c0a2ac88a942707c52f9ad31a9d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d44c971087627c0a2ac88a942707c52f9ad31a9d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a7e14552ab944a08142942cd51707f61c0c53c13","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a7e14552ab944a08142942cd51707f61c0c53c13","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a7e14552ab944a08142942cd51707f61c0c53c13","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a7e14552ab944a08142942cd51707f61c0c53c13/comments","author":null,"committer":null,"parents":[{"sha":"b5e3797793a1b3391c1ad4e0daa188ce76954d79","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b5e3797793a1b3391c1ad4e0daa188ce76954d79","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b5e3797793a1b3391c1ad4e0daa188ce76954d79"}],"stats":{"total":1828,"additions":972,"deletions":856},"files":[{"sha":"fb890bd5fdd3b43d92c0a5a63e3129284602ec91","filename":"client/src/main/java/org/syncope/client/to/SchemaMappingTO.java","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaMappingTO.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -15,39 +15,39 @@\n package org.syncope.client.to;\n \n import org.syncope.client.AbstractBaseBean;\n-import org.syncope.types.SchemaType;\n+import org.syncope.types.SourceMappingType;\n \n public class SchemaMappingTO extends AbstractBaseBean {\n \n     private Long id;\n+\n     /**\n      * Attribute schema to be mapped.\n      * Consider that we can associate tha same attribute schema more\n      * than once, with different aliases, to different resource attributes.\n      */\n-    private String schemaName;\n+    private String sourceAttrName;\n+\n     /**\n      * Schema type to be mapped.\n-     * Possible values are:\n-     * * AccountId for an account id;\n-     * * Password for a password;\n-     * * UserSchema for a user schema;\n-     * * RoleSchema for a role schema;\n-     * * MembershipSchema for a membership schema.\n      */\n-    private SchemaType schemaType;\n+    private SourceMappingType sourceMappingType;\n+\n     /**\n      * Target resource's field to be mapped.\n      */\n-    private String field;\n+    private String destAttrName;\n+\n     /**\n      * Specify if the mapped target resource's field is the key.\n      */\n     private boolean accountid;\n+\n     /**\n      * Specify if the mapped target resource's field is the password.\n      */\n     private boolean password;\n+\n     /**\n      * Specify if the mapped target resource's field is nullable.\n      */\n@@ -61,12 +61,12 @@ public void setAccountid(boolean accountid) {\n         this.accountid = accountid;\n     }\n \n-    public String getField() {\n-        return field;\n+    public String getDestAttrName() {\n+        return destAttrName;\n     }\n \n-    public void setField(String field) {\n-        this.field = field;\n+    public void setDestAttrName(String destAttrName) {\n+        this.destAttrName = destAttrName;\n     }\n \n     public Long getId() {\n@@ -93,19 +93,19 @@ public void setPassword(boolean password) {\n         this.password = password;\n     }\n \n-    public String getSchemaName() {\n-        return schemaName;\n+    public String getSourceAttrName() {\n+        return sourceAttrName;\n     }\n \n-    public void setSchemaName(String schemaName) {\n-        this.schemaName = schemaName;\n+    public void setSourceAttrName(String sourceAttrName) {\n+        this.sourceAttrName = sourceAttrName;\n     }\n \n-    public SchemaType getSchemaType() {\n-        return schemaType;\n+    public SourceMappingType getSourceMappingType() {\n+        return sourceMappingType;\n     }\n \n-    public void setSchemaType(SchemaType schemaType) {\n-        this.schemaType = schemaType;\n+    public void setSourceMappingType(SourceMappingType sourceMappingType) {\n+        this.sourceMappingType = sourceMappingType;\n     }\n }"},{"sha":"b920e5332f322d7aa88cba1baeee559226caad69","filename":"client/src/main/java/org/syncope/client/to/SchemaTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -17,12 +17,12 @@\n import java.util.HashSet;\n import java.util.Set;\n import org.syncope.client.AbstractBaseBean;\n-import org.syncope.types.SchemaValueType;\n+import org.syncope.types.SchemaType;\n \n public class SchemaTO extends AbstractBaseBean {\n \n     private String name;\n-    private SchemaValueType type;\n+    private SchemaType type;\n     private boolean virtual;\n     private String mandatoryCondition;\n     private boolean multivalue;\n@@ -94,11 +94,11 @@ public void setName(String name) {\n         this.name = name;\n     }\n \n-    public SchemaValueType getType() {\n+    public SchemaType getType() {\n         return type;\n     }\n \n-    public void setType(SchemaValueType type) {\n+    public void setType(SchemaType type) {\n         this.type = type;\n     }\n "},{"sha":"8c79cab9265afd9359e53e44db0fab7c9558c275","filename":"client/src/main/java/org/syncope/types/SchemaType.java","status":"modified","additions":11,"deletions":28,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSchemaType.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -1,5 +1,3 @@\n-package org.syncope.types;\n-\n /*\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n@@ -14,18 +12,15 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n+package org.syncope.types;\n+\n public enum SchemaType {\n \n-    UserSchema(\n-    \"org.syncope.core.persistence.beans.user.USchema\"),\n-    RoleSchema(\n-    \"org.syncope.core.persistence.beans.role.RSchema\"),\n-    MembershipSchema(\n-    \"org.syncope.core.persistence.beans.membership.MSchema\"),\n-    AccountId(\n-    \"AccountId\"),\n-    Password(\n-    \"Password\");\n+    String(\"java.lang.String\"),\n+    Long(\"java.lang.Long\"),\n+    Double(\"java.lang.Double\"),\n+    Boolean(\"java.lang.Boolean\"),\n+    Date(\"java.util.Date\");\n \n     final private String className;\n \n@@ -37,21 +32,9 @@ public String getClassName() {\n         return className;\n     }\n \n-    public Class getSchemaClass() {\n-        try {\n-            return Class.forName(getClassName());\n-        } catch (ClassNotFoundException e) {\n-            return String.class;\n-        }\n-    }\n-\n-    public static SchemaType byClass(Class theClass) {\n-        for (SchemaType schemaType : SchemaType.values()) {\n-            if (schemaType.getClassName().equals(theClass.getName())) {\n-                return schemaType;\n-            }\n-        }\n-\n-        return null;\n+    public boolean isConversionPatternNeeded() {\n+        return this == SchemaType.Date\n+                || this == SchemaType.Double\n+                || this == SchemaType.Long;\n     }\n }"},{"sha":"c1396364c19e1461a6d8154b0fadf0d16b1df6d0","filename":"client/src/main/java/org/syncope/types/SourceMappingType.java","status":"renamed","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSourceMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSourceMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSourceMappingType.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -1,3 +1,5 @@\n+package org.syncope.types;\n+\n /*\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n@@ -12,11 +14,12 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.core.persistence.beans;\n-\n-public interface IAttrUniqueValue {\n+public enum SourceMappingType {\n \n-    <T extends AbstractSchema> T getSchema();\n+    UserSchema,\n+    RoleSchema,\n+    MembershipSchema,\n+    SyncopeUserId,\n+    Password;\n \n-    <T extends AbstractSchema> void setSchema(T schema);\n }","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/IAttrUniqueValue.java"},{"sha":"34d6d3cbd618851358b6af97b81932256feca54c","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":110,"deletions":93,"changes":203,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -57,34 +57,39 @@\n import org.syncope.console.wicket.markup.html.form.UpdatingCheckBox;\n import org.syncope.console.wicket.markup.html.form.UpdatingDropDownChoice;\n import org.syncope.console.wicket.markup.html.form.UpdatingTextField;\n-import org.syncope.types.SchemaType;\n+import org.syncope.types.SourceMappingType;\n \n /**\n  * Modal window with Resource form.\n  */\n public class ResourceModalPage extends SyncopeModalPage {\n \n     public TextField resourceName;\n+\n     public DropDownChoice connector;\n+\n     public CheckBox forceMandatoryConstraint;\n \n-    ConnectorInstanceTO connectorTO = new ConnectorInstanceTO();\n-//    List<SchemaMappingTO> schemaMappingTOs =\n-//            new ArrayList<SchemaMappingTO>();\n+    private ConnectorInstanceTO connectorTO = new ConnectorInstanceTO();\n \n     private ResourceTO resource;\n \n     public AjaxButton submit;\n+\n     public AjaxButton addSchemaMappingBtn;\n \n     private List<String> accountIdAttributesNames;\n+\n     private List<String> passwordAttributesNames;\n+\n     private List<String> userSchemaAttributesNames;\n+\n     private List<String> roleSchemaAttributesNames;\n+\n     private List<String> membershipSchemaAttributesNames;\n \n     /** Custom validation's errors map*/\n-    private Map<String,String> errors = new HashMap<String,String>();\n+    private Map<String, String> errors = new HashMap<String, String>();\n \n     ListView mappingUserSchemaView;\n \n@@ -94,7 +99,7 @@ public class ResourceModalPage extends SyncopeModalPage {\n     WebMarkupContainer mappingUserSchemaContainer;\n \n     SchemaRestClient schemaRestClient;\n-    \n+\n     /**\n      *\n      * @param basePage base\n@@ -107,8 +112,8 @@ public ResourceModalPage(final BasePage basePage, final ModalWindow window,\n \n         this.resource = resourceTO;\n \n-        schemaRestClient = (SchemaRestClient) ((SyncopeApplication) Application\n-                .get()).getApplicationContext().getBean(\"schemaRestClient\");\n+        schemaRestClient = (SchemaRestClient) ((SyncopeApplication) Application.\n+                get()).getApplicationContext().getBean(\"schemaRestClient\");\n \n         setupChoiceListsPopulators();\n \n@@ -127,24 +132,25 @@ public ResourceModalPage(final BasePage basePage, final ModalWindow window,\n             @Override\n             protected Object load() {\n \n-                ConnectorsRestClient connectorRestClient = (ConnectorsRestClient)\n-                        ((SyncopeApplication) Application.get())\n-                        .getApplicationContext().getBean(\"connectorsRestClient\");\n+                ConnectorsRestClient connectorRestClient =\n+                        (ConnectorsRestClient) ((SyncopeApplication) Application.\n+                        get()).getApplicationContext().getBean(\n+                        \"connectorsRestClient\");\n \n                 return connectorRestClient.getAllConnectors();\n             }\n         };\n \n-        final IModel schemaTypesList = new LoadableDetachableModel() {\n+        final IModel sourceMappingTypes = new LoadableDetachableModel() {\n \n             @Override\n             protected Object load() {\n \n-                return Arrays.asList(SchemaType.values());\n+                return Arrays.asList(SourceMappingType.values());\n \n             }\n         };\n-        \n+\n         resourceName = new TextField(\"name\");\n         resourceName.setEnabled(createFlag);\n         resourceName.setRequired(true);\n@@ -187,6 +193,7 @@ public void detach() {\n                 resourceTO.getMappings()) {\n \n             SchemaMappingTO mappingTO = null;\n+\n             UpdatingDropDownChoice schemaAttributeChoice = null;\n \n             @Override\n@@ -203,66 +210,70 @@ protected void onUpdate(AjaxRequestTarget target) {\n                     }\n                 });\n                 item.add(new UpdatingTextField(\"field\",\n-                        new PropertyModel(mappingTO, \"field\")).\n-                        setRequired(true).setLabel(\n+                        new PropertyModel(mappingTO, \"field\")).setRequired(true).\n+                        setLabel(\n                         new Model(getString(\"fieldName\"))));\n \n                 schemaAttributeChoice =\n                         new UpdatingDropDownChoice(\"schemaAttributes\",\n-                        new PropertyModel(mappingTO, \"schemaName\"),null);\n-                \n-                if(mappingTO.getSchemaType() == null)\n+                        new PropertyModel(mappingTO, \"schemaName\"), null);\n+\n+                if (mappingTO.getSourceMappingType() == null) {\n                     schemaAttributeChoice.setChoices(Collections.emptyList());\n-                else if (mappingTO.getSchemaType().equals(SchemaType.UserSchema)){\n+                } else if (mappingTO.getSourceMappingType().equals(\n+                        SourceMappingType.UserSchema)) {\n                     schemaAttributeChoice.setChoices(userSchemaAttributesNames);\n                     schemaAttributeChoice.setRequired(true);\n-                }\n-                else if (mappingTO.getSchemaType().equals(SchemaType.RoleSchema)){\n+                } else if (mappingTO.getSourceMappingType().equals(\n+                        SourceMappingType.RoleSchema)) {\n                     schemaAttributeChoice.setChoices(roleSchemaAttributesNames);\n                     schemaAttributeChoice.setRequired(true);\n-                }\n-                else if (mappingTO.getSchemaType().equals(SchemaType.MembershipSchema)){\n-                    schemaAttributeChoice.setChoices(membershipSchemaAttributesNames);\n+                } else if (mappingTO.getSourceMappingType().equals(\n+                        SourceMappingType.MembershipSchema)) {\n+                    schemaAttributeChoice.setChoices(\n+                            membershipSchemaAttributesNames);\n                     schemaAttributeChoice.setRequired(true);\n-                }\n-                else if (mappingTO.getSchemaType().equals(SchemaType.AccountId)){\n+                } else if (mappingTO.getSourceMappingType().equals(\n+                        SourceMappingType.SyncopeUserId)) {\n                     schemaAttributeChoice.setEnabled(false);\n                     schemaAttributeChoice.setRequired(false);\n                     schemaAttributeChoice.setChoices(Collections.emptyList());\n-                    mappingTO.setSchemaName(\"AccountId\");\n-                }\n-                else if (mappingTO.getSchemaType().equals(SchemaType.Password)){\n+                    mappingTO.setSourceAttrName(\"SyncopeUserId\");\n+                } else if (mappingTO.getSourceMappingType().equals(\n+                        SourceMappingType.Password)) {\n                     schemaAttributeChoice.setEnabled(false);\n                     schemaAttributeChoice.setRequired(false);\n                     schemaAttributeChoice.setChoices(Collections.emptyList());\n-                    mappingTO.setSchemaName(\"Password\");\n+                    mappingTO.setSourceAttrName(\"Password\");\n                 }\n \n                 schemaAttributeChoice.setOutputMarkupId(true);\n                 item.add(schemaAttributeChoice);\n \n-                item.add(new SchemaTypesDropDownChoice(\"schemaTypes\",\n-                         new PropertyModel(mappingTO, \"schemaType\"), \n-                         schemaTypesList, schemaAttributeChoice)\n-                         .setRequired(true).setOutputMarkupId(true));\n+                item.add(new SourceMappingTypesDropDownChoice(\n+                        \"sourceMappingTypes\",\n+                        new PropertyModel(mappingTO, \"sourceMappingType\"),\n+                        sourceMappingTypes, schemaAttributeChoice).setRequired(\n+                        true).\n+                        setOutputMarkupId(true));\n \n                 item.add(new UpdatingAutoCompleteTextField(\"mandatoryCondition\",\n-                        new PropertyModel(mappingTO,\"mandatoryCondition\")) {\n+                        new PropertyModel(mappingTO, \"mandatoryCondition\")) {\n \n                     @Override\n                     protected Iterator getChoices(String input) {\n                         List<String> choices = new ArrayList<String>();\n \n-                        if (Strings.isEmpty(input))\n-                        {\n+                        if (Strings.isEmpty(input)) {\n                             choices = Collections.emptyList();\n                             return choices.iterator();\n                         }\n \n-                        if(\"true\".startsWith(input.toLowerCase()))\n+                        if (\"true\".startsWith(input.toLowerCase())) {\n                             choices.add(\"true\");\n-                        else if (\"false\".startsWith(input.toLowerCase()))\n-                               choices.add(\"false\");\n+                        } else if (\"false\".startsWith(input.toLowerCase())) {\n+                            choices.add(\"false\");\n+                        }\n \n \n                         return choices.iterator();\n@@ -301,23 +312,23 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n-                ResourceTO resourceTO = (ResourceTO) form.getDefaultModelObject();\n-                //resourceTO.setMappings(schemaMappingTOs);\n+                ResourceTO resourceTO =\n+                        (ResourceTO) form.getDefaultModelObject();\n \n                 try {\n                     resourceFormCustomValidation();\n-                }\n-                catch (IllegalArgumentException e) {\n+                } catch (IllegalArgumentException e) {\n \n-                    for(String error : errors.values())\n+                    for (String error : errors.values()) {\n                         error(error);\n-                    \n+                    }\n+\n                     errors.clear();\n                     return;\n                 }\n \n-                try {   \n-                    \n+                try {\n+\n                     if (createFlag) {\n                         restClient.createResource(resourceTO);\n                     } else {\n@@ -329,8 +340,7 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n                     window.close(target);\n \n-                } \n-                catch (SyncopeClientCompositeErrorException e) {\n+                } catch (SyncopeClientCompositeErrorException e) {\n                     error(getString(\"error\") + \":\" + e.getMessage());\n                 }\n             }\n@@ -357,56 +367,57 @@ public void resourceFormCustomValidation() {\n \n         for (SchemaMappingTO schemaMapping : resource.getMappings()) {\n \n-            if (schemaMapping.isAccountid()) \n+            if (schemaMapping.isAccountid()) {\n                 count++;\n-\n-            if (count > 1){\n-               errors.put(\"accountId\", getString(\"accountIdValidation\"));\n-               break;\n             }\n \n+            if (count > 1) {\n+                errors.put(\"accountId\", getString(\"accountIdValidation\"));\n+                break;\n             }\n \n+        }\n+\n         count = 0;\n \n         for (SchemaMappingTO schemaMapping : resource.getMappings()) {\n \n-            if (schemaMapping.isPassword())\n+            if (schemaMapping.isPassword()) {\n                 count++;\n+            }\n \n-            if (count > 1){\n-               errors.put(\"password\", getString(\"passwordValidation\"));\n-               break;\n+            if (count > 1) {\n+                errors.put(\"password\", getString(\"passwordValidation\"));\n+                break;\n             }\n \n \n-            }\n+        }\n \n-         if(errors.size() > 0)\n-         throw new IllegalArgumentException(getString(\"customValidation\"));\n+        if (errors.size() > 0) {\n+            throw new IllegalArgumentException(getString(\"customValidation\"));\n+        }\n     }\n \n-\n     /**\n      * Set User and Role Schemas list for populating different views.\n      * @param schemaMappingTos\n     \n     public void setupSchemaMappingsList(List<SchemaMappingTO> mappings) {\n-        schemaMappingTOs = new ArrayList<SchemaMappingTO>();\n+    schemaMappingTOs = new ArrayList<SchemaMappingTO>();\n \n-        if (mappings != null) {\n-            for (SchemaMappingTO schemaMappingTO :  mappings) {\n-                schemaMappingTOs.add(schemaMappingTO);\n-            }\n-        } else {\n-            schemaMappingTOs.add(new SchemaMappingTO());\n-        }\n+    if (mappings != null) {\n+    for (SchemaMappingTO schemaMappingTO :  mappings) {\n+    schemaMappingTOs.add(schemaMappingTO);\n+    }\n+    } else {\n+    schemaMappingTOs.add(new SchemaMappingTO());\n+    }\n     }*/\n-\n     /**\n      * Setup choice-list populators.\n      */\n-    public void setupChoiceListsPopulators(){\n+    public void setupChoiceListsPopulators() {\n         List<String> accountIdList = new ArrayList<String>();\n         accountIdList.add(\"accountId\");\n         setAccountIdAttributesNames(accountIdList);\n@@ -417,38 +428,43 @@ public void setupChoiceListsPopulators(){\n \n         setRoleSchemaAttributesNames(schemaRestClient.getAllRoleSchemasNames());\n         setUserSchemaAttributesNames(schemaRestClient.getAllUserSchemasNames());\n-        setMembershipSchemaAttributesNames(schemaRestClient.getAllMembershipSchemasNames());\n+        setMembershipSchemaAttributesNames(schemaRestClient.\n+                getAllMembershipSchemasNames());\n     }\n \n     public List<String> getMembershipSchemaAttributesNames() {\n         return membershipSchemaAttributesNames;\n     }\n \n-    public void setMembershipSchemaAttributesNames(List<String> membershipSchemaAttributesNames) {\n+    public void setMembershipSchemaAttributesNames(\n+            List<String> membershipSchemaAttributesNames) {\n         this.membershipSchemaAttributesNames = membershipSchemaAttributesNames;\n     }\n \n     public List<String> getRoleSchemaAttributesNames() {\n         return roleSchemaAttributesNames;\n     }\n \n-    public void setRoleSchemaAttributesNames(List<String> roleSchemaAttributesNames) {\n+    public void setRoleSchemaAttributesNames(\n+            List<String> roleSchemaAttributesNames) {\n         this.roleSchemaAttributesNames = roleSchemaAttributesNames;\n     }\n \n     public List<String> getUserSchemaAttributesNames() {\n         return userSchemaAttributesNames;\n     }\n \n-    public void setUserSchemaAttributesNames(List<String> userSchemaAttributesNames) {\n+    public void setUserSchemaAttributesNames(\n+            List<String> userSchemaAttributesNames) {\n         this.userSchemaAttributesNames = userSchemaAttributesNames;\n     }\n \n     public List<String> getAccountIdAttributesNames() {\n         return accountIdAttributesNames;\n     }\n \n-    public void setAccountIdAttributesNames(List<String> accountIdAttributesNames) {\n+    public void setAccountIdAttributesNames(\n+            List<String> accountIdAttributesNames) {\n         this.accountIdAttributesNames = accountIdAttributesNames;\n     }\n \n@@ -459,16 +475,16 @@ public List<String> getPasswordAttributesNames() {\n     public void setPasswordAttributesNames(List<String> passwordAttributesNames) {\n         this.passwordAttributesNames = passwordAttributesNames;\n     }\n-    \n+\n     /**\n      * Extension class of DropDownChoice. It's purposed for storing values in the\n      * corresponding property model after pressing 'Add' button.\n      */\n-    public class SchemaTypesDropDownChoice extends DropDownChoice {\n+    public class SourceMappingTypesDropDownChoice extends DropDownChoice {\n \n         SchemaMappingTO schemaMappingModel;\n \n-        public SchemaTypesDropDownChoice(String id, final PropertyModel model,\n+        public SourceMappingTypesDropDownChoice(String id, final PropertyModel model,\n                 IModel imodel, final DropDownChoice chooserToPopulate) {\n             super(id, model, imodel);\n \n@@ -481,24 +497,25 @@ protected void onUpdate(AjaxRequestTarget target) {\n \n                         @Override\n                         protected Object load() {\n-                            SchemaType schemaType = schemaMappingModel.getSchemaType();\n+                            SourceMappingType sourceMType = schemaMappingModel.\n+                                    getSourceMappingType();\n \n-                            if (schemaType == null) {\n+                            if (sourceMType == null) {\n                                 return Collections.emptyList();\n                             }\n-                            if (schemaType.equals(SchemaType.RoleSchema)) {\n+                            if (sourceMType.equals(SourceMappingType.RoleSchema)) {\n                                 return roleSchemaAttributesNames;\n-                            }\n-                            else if (schemaType.equals(SchemaType.UserSchema)) {\n+                            } else if (sourceMType.equals(\n+                                    SourceMappingType.UserSchema)) {\n                                 return userSchemaAttributesNames;\n-                            }\n-                            else if (schemaType.equals(SchemaType.MembershipSchema)) {\n+                            } else if (sourceMType.equals(\n+                                    SourceMappingType.MembershipSchema)) {\n                                 return membershipSchemaAttributesNames;\n-                            } \n-                            else if (schemaType.equals(SchemaType.AccountId)) {\n+                            } else if (sourceMType.equals(\n+                                    SourceMappingType.SyncopeUserId)) {\n                                 return Collections.emptyList();\n-                            } \n-                            else if (schemaType.equals(SchemaType.Password)) {\n+                            } else if (sourceMType.equals(\n+                                    SourceMappingType.Password)) {\n                                 return Collections.emptyList();\n                             } else {\n                                 return Collections.emptyList();"},{"sha":"c7fde8297041bdd666b73a3954d270b86e084c2b","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":491,"deletions":400,"changes":891,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -28,10 +28,8 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n-        .AjaxFallbackDefaultDataTable;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid\n-        .ICellPopulator;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n@@ -58,44 +56,60 @@\n /**\n  * Schema WebPage.\n  */\n-public class Schema extends BasePage\n-{\n-    protected enum SchemaType {RoleSchema, UserSchema, MembershipSchema};\n+public class Schema extends BasePage {\n \n-    protected enum SchemaDerivedType {RoleDerivedSchema, UserDerivedSchema,\n-    MembershipDerivedSchema};\n+    protected enum SourceMappingType {\n \n+        RoleSchema, UserSchema, MembershipSchema\n+\n+    };\n+\n+    protected enum SchemaDerivedType {\n+\n+        RoleDerivedSchema, UserDerivedSchema,\n+        MembershipDerivedSchema\n+\n+    };\n     @SpringBean(name = \"schemaRestClient\")\n     SchemaRestClient restClient;\n \n     @SpringBean(name = \"utility\")\n     Utility utility;\n \n     final ModalWindow createUserSchemaWin;\n+\n     final ModalWindow editUserSchemaWin;\n \n     final ModalWindow createUserDerivedSchemaWin;\n+\n     final ModalWindow editUserDerivedSchemaWin;\n \n     final ModalWindow createRoleSchemaWin;\n+\n     final ModalWindow editRoleSchemaWin;\n-    \n+\n     final ModalWindow createRoleDerivedSchemaWin;\n+\n     final ModalWindow editRoleDerivedSchemaWin;\n \n     final ModalWindow createMembershipSchemaWin;\n+\n     final ModalWindow editMembershipSchemaWin;\n \n     final ModalWindow createMembershipDerivedSchemaWin;\n+\n     final ModalWindow editMembershipDerivedSchemaWin;\n-    \n+\n     WebMarkupContainer userSchemaContainer;\n+\n     WebMarkupContainer userDerivedSchemaContainer;\n \n     WebMarkupContainer roleSchemasContainer;\n+\n     WebMarkupContainer roleDerivedSchemasContainer;\n \n     WebMarkupContainer membershipSchemaContainer;\n+\n     WebMarkupContainer membershipDerivedSchemaContainer;\n \n     private int userSchemaPageRows;\n@@ -111,62 +125,62 @@ protected enum SchemaDerivedType {RoleDerivedSchema, UserDerivedSchema,\n     private int membershipDerPageRows;\n \n     /*\n-     Response flag set by the Modal Window after the operation is completed\n+    Response flag set by the Modal Window after the operation is completed\n      */\n     boolean operationResult = false;\n+\n     FeedbackPanel feedbackPanel;\n-    \n-    public Schema(PageParameters parameters)\n-    {\n+\n+    public Schema(PageParameters parameters) {\n         super(parameters);\n \n         add(createRoleSchemaWin = new ModalWindow(\"createRoleSchemaWin\"));\n         add(editRoleSchemaWin = new ModalWindow(\"editRoleSchemaWin\"));\n \n-        add(createRoleDerivedSchemaWin\n-                = new ModalWindow(\"createRoleDerivedSchemaWin\"));\n-        add(editRoleDerivedSchemaWin\n-                = new ModalWindow(\"editRoleDerivedSchemaWin\"));\n+        add(createRoleDerivedSchemaWin = new ModalWindow(\n+                \"createRoleDerivedSchemaWin\"));\n+        add(editRoleDerivedSchemaWin = new ModalWindow(\n+                \"editRoleDerivedSchemaWin\"));\n \n         add(createUserSchemaWin = new ModalWindow(\"createUserSchemaWin\"));\n         add(editUserSchemaWin = new ModalWindow(\"editUserSchemaWin\"));\n-        \n-        add(createUserDerivedSchemaWin\n-                = new ModalWindow(\"createUserDerSchemaWin\"));\n+\n+        add(createUserDerivedSchemaWin = new ModalWindow(\n+                \"createUserDerSchemaWin\"));\n         add(editUserDerivedSchemaWin = new ModalWindow(\"editUserDerSchemaWin\"));\n \n-        add(createMembershipSchemaWin\n-                = new ModalWindow(\"createMembershipSchemaWin\"));\n+        add(createMembershipSchemaWin = new ModalWindow(\n+                \"createMembershipSchemaWin\"));\n         add(editMembershipSchemaWin = new ModalWindow(\"editMembershipSchemaWin\"));\n \n-        add(createMembershipDerivedSchemaWin\n-                = new ModalWindow(\"createMembershipDerSchemaWin\"));\n-        add(editMembershipDerivedSchemaWin\n-                = new ModalWindow(\"editMembershipDerSchemaWin\"));\n+        add(createMembershipDerivedSchemaWin = new ModalWindow(\n+                \"createMembershipDerSchemaWin\"));\n+        add(editMembershipDerivedSchemaWin = new ModalWindow(\n+                \"editMembershipDerSchemaWin\"));\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n-        feedbackPanel.setOutputMarkupId( true );\n-        \n+        feedbackPanel.setOutputMarkupId(true);\n+\n         add(feedbackPanel);\n \n-        rolePageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_ROLE_SCHEMA_PAGINATOR_ROWS);\n+        rolePageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_ROLE_SCHEMA_PAGINATOR_ROWS);\n+\n+        roleDerPageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS);\n \n-        roleDerPageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS);\n+        userSchemaPageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_USER_SCHEMA_PAGINATOR_ROWS);\n \n-        userSchemaPageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_USER_SCHEMA_PAGINATOR_ROWS);\n+        userDerSchemaPageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_USER_DER_SCHEMA_PAGINATOR_ROWS);\n \n-        userDerSchemaPageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_USER_DER_SCHEMA_PAGINATOR_ROWS);\n+        membershipPageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS);\n \n-        membershipPageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS);\n+        membershipDerPageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n \n-        membershipDerPageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n-        \n         List<IColumn> rolesColumns = new ArrayList<IColumn>();\n \n         rolesColumns.add(new PropertyColumn(new Model(getString(\"name\")),\n@@ -179,26 +193,27 @@ public Schema(PageParameters parameters)\n                 \"attributes\", \"attributes\"));\n \n         rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"name\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+                getString(\"name\"))) {\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem,\n+                    String componentId, IModel<SchemaTO> model) {\n+\n+                final SchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         editRoleSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            SchemaModalPage window = new SchemaModalPage(\n-                                    Schema.this, editRoleSchemaWin, schemaTO, false);\n-                            window.setEntity(SchemaModalPage.Entity.ROLE);\n-                            return window;\n-                        }\n+                            public Page createPage() {\n+                                SchemaModalPage window = new SchemaModalPage(\n+                                        Schema.this, editRoleSchemaWin, schemaTO,\n+                                        false);\n+                                window.setEntity(SchemaModalPage.Entity.ROLE);\n+                                return window;\n+                            }\n                         });\n \n                         editRoleSchemaWin.show(target);\n@@ -212,15 +227,15 @@ public Page createPage() {\n             }\n         });\n \n-        rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+        rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(getString(\n+                \"delete\"))) {\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem,\n+                    String componentId, IModel<SchemaTO> model) {\n+\n+                final SchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -234,13 +249,17 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -256,25 +275,26 @@ public CharSequence preDecorateScript(CharSequence script) {\n \n         final AjaxFallbackDefaultDataTable tableRoles =\n                 new AjaxFallbackDefaultDataTable(\"datatable\", rolesColumns,\n-                new SchemaProvider(SchemaType.RoleSchema), rolePageRows);\n+                new SchemaProvider(SourceMappingType.RoleSchema), rolePageRows);\n \n         Form rolesPaginatorForm = new Form(\"RolesPaginatorForm\");\n \n         final DropDownChoice rowsRoleChooser = new DropDownChoice(\"rowsChooser\",\n-        new PropertyModel(this,\"rolePageRows\"),utility.paginatorRowsChooser());\n+                new PropertyModel(this, \"rolePageRows\"), utility.\n+                paginatorRowsChooser());\n \n-        rowsRoleChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants\n-                      .CONF_ROLE_SCHEMA_PAGINATOR_ROWS, rolePageRows);\n+        rowsRoleChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-              tableRoles.setRowsPerPage(rolePageRows);\n-              \n-              target.addComponent(roleSchemasContainer);\n-            }\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_ROLE_SCHEMA_PAGINATOR_ROWS,\n+                        rolePageRows);\n+\n+                tableRoles.setRowsPerPage(rolePageRows);\n \n-          });\n+                target.addComponent(roleSchemasContainer);\n+            }\n+        });\n \n         rolesPaginatorForm.add(rowsRoleChooser);\n         add(rolesPaginatorForm);\n@@ -284,33 +304,42 @@ protected void onUpdate( AjaxRequestTarget target )\n         columnsRolesDer.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n-        columnsRolesDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n+        columnsRolesDer.add(new PropertyColumn(\n+                new Model(getString(\"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsRolesDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+        columnsRolesDer.add(new PropertyColumn(\n+                new Model(getString(\"attributes\")),\n                 \"derivedAttributes\", \"derivedAttributes\"));\n \n         columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+            public void populateItem(\n+                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    String componentId, IModel<DerivedSchemaTO> model) {\n+\n+                final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editRoleDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        editRoleDerivedSchemaWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            DerivedSchemaModalPage form = new DerivedSchemaModalPage\n-                                    (Schema.this, editRoleDerivedSchemaWin, schemaTO, false);\n-                            form.setEntity(DerivedSchemaModalPage.Entity.ROLE);\n-                            return form;\n-                        }\n-                        });\n+                                    public Page createPage() {\n+                                        DerivedSchemaModalPage form =\n+                                                new DerivedSchemaModalPage(\n+                                                Schema.this,\n+                                                editRoleDerivedSchemaWin,\n+                                                schemaTO, false);\n+                                        form.setEntity(\n+                                                DerivedSchemaModalPage.Entity.ROLE);\n+                                        return form;\n+                                    }\n+                                });\n \n                         editRoleDerivedSchemaWin.show(target);\n                     }\n@@ -323,15 +352,17 @@ public Page createPage() {\n             }\n         });\n \n-        columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n+        columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n+                new Model<String>(getString(\n+                \"delete\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    String componentId, IModel<DerivedSchemaTO> model) {\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -345,13 +376,17 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -374,20 +409,22 @@ public CharSequence preDecorateScript(CharSequence script) {\n         Form rolesDerPaginatorForm = new Form(\"RolesDerPaginatorForm\");\n \n         DropDownChoice rowsRolesDerChooser = new DropDownChoice(\"rowsChooser\",\n-        new PropertyModel(this,\"roleDerPageRows\"),utility.paginatorRowsChooser());\n+                new PropertyModel(this, \"roleDerPageRows\"), utility.\n+                paginatorRowsChooser());\n \n-        rowsRolesDerChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants.\n-                      CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS, rolePageRows);\n+        rowsRolesDerChooser.add(\n+                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-              tableRolesDer.setRowsPerPage(roleDerPageRows);\n+                    protected void onUpdate(AjaxRequestTarget target) {\n+                        utility.updatePaginatorRows(\n+                                Constants.CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS,\n+                                rolePageRows);\n \n-              target.addComponent(roleDerivedSchemasContainer);\n-            }\n+                        tableRolesDer.setRowsPerPage(roleDerPageRows);\n \n-          });\n+                        target.addComponent(roleDerivedSchemasContainer);\n+                    }\n+                });\n \n         rolesDerPaginatorForm.add(rowsRolesDerChooser);\n         add(rolesDerPaginatorForm);\n@@ -404,29 +441,31 @@ protected void onUpdate( AjaxRequestTarget target )\n                 \"attributes\", \"attributes\"));\n \n         userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"edit\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+                getString(\"edit\"))) {\n+\n+            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem,\n+                    String componentId, IModel<SchemaTO> model) {\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                final SchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editUserSchemaWin.setPageCreator(new ModalWindow\n-                                .PageCreator() {\n+                        editUserSchemaWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            SchemaModalPage form = new SchemaModalPage(\n-                                    Schema.this, editUserSchemaWin, schemaTO,\n-                                    false);\n-                            form.setEntity(SchemaModalPage.Entity.USER);\n-                            return form;\n-                        }\n-                        });\n+                                    public Page createPage() {\n+                                        SchemaModalPage form =\n+                                                new SchemaModalPage(\n+                                                Schema.this, editUserSchemaWin,\n+                                                schemaTO, false);\n+                                        form.setEntity(\n+                                                SchemaModalPage.Entity.USER);\n+                                        return form;\n+                                    }\n+                                });\n \n                         editUserSchemaWin.show(target);\n                     }\n@@ -439,15 +478,15 @@ public Page createPage() {\n             }\n         });\n \n-        userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+        userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n+                getString(\"delete\"))) {\n+\n+            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem,\n+                    String componentId, IModel<SchemaTO> model) {\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                final SchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -461,13 +500,17 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -484,27 +527,29 @@ public CharSequence preDecorateScript(CharSequence script) {\n \n         final AjaxFallbackDefaultDataTable tableUsers =\n                 new AjaxFallbackDefaultDataTable(\"datatable\", userColumns,\n-                new SchemaProvider(SchemaType.UserSchema), userSchemaPageRows);\n+                new SchemaProvider(SourceMappingType.UserSchema),\n+                userSchemaPageRows);\n \n \n         Form usersPaginatorForm = new Form(\"UsersPaginatorForm\");\n \n-        final DropDownChoice usersRowsChooser = new DropDownChoice(\"rowsChooser\",\n-               new PropertyModel(this,\"userSchemaPageRows\"),\n-               utility.paginatorRowsChooser());\n+        final DropDownChoice usersRowsChooser = new DropDownChoice(\n+                \"rowsChooser\",\n+                new PropertyModel(this, \"userSchemaPageRows\"),\n+                utility.paginatorRowsChooser());\n \n         usersRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants.CONF_USER_SCHEMA_PAGINATOR_ROWS,\n-                      userSchemaPageRows);\n \n-              tableUsers.setRowsPerPage(userSchemaPageRows);\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_USER_SCHEMA_PAGINATOR_ROWS,\n+                        userSchemaPageRows);\n \n-              target.addComponent(userSchemaContainer);\n-            }\n+                tableUsers.setRowsPerPage(userSchemaPageRows);\n \n-          });\n+                target.addComponent(userSchemaContainer);\n+            }\n+        });\n \n         usersPaginatorForm.add(usersRowsChooser);\n         add(usersPaginatorForm);\n@@ -514,35 +559,42 @@ protected void onUpdate( AjaxRequestTarget target )\n         columnsUsersDer.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n-        columnsUsersDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n+        columnsUsersDer.add(new PropertyColumn(\n+                new Model(getString(\"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsUsersDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+        columnsUsersDer.add(new PropertyColumn(\n+                new Model(getString(\"attributes\")),\n                 \"derivedAttributes\", \"derivedAttributes\"));\n \n         columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+            public void populateItem(\n+                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    String componentId, IModel<DerivedSchemaTO> model) {\n+\n+                final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         editUserDerivedSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            DerivedSchemaModalPage window = new DerivedSchemaModalPage\n-                                    (Schema.this, editUserDerivedSchemaWin,\n-                                    schemaTO, false);\n-                            window.setEntity(DerivedSchemaModalPage.Entity.USER);\n-                            return window;\n-                        }\n-                        });\n+                                    public Page createPage() {\n+                                        DerivedSchemaModalPage window =\n+                                                new DerivedSchemaModalPage(\n+                                                Schema.this,\n+                                                editUserDerivedSchemaWin,\n+                                                schemaTO, false);\n+                                        window.setEntity(\n+                                                DerivedSchemaModalPage.Entity.USER);\n+                                        return window;\n+                                    }\n+                                });\n \n                         editUserDerivedSchemaWin.show(target);\n                     }\n@@ -555,15 +607,16 @@ public Page createPage() {\n             }\n         });\n \n-        columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n+        columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n+                new Model<String>(getString(\"delete\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    String componentId, IModel<DerivedSchemaTO> model) {\n+\n+                final DerivedSchemaTO schemaTO = model.getObject();\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -577,13 +630,16 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -606,59 +662,57 @@ public CharSequence preDecorateScript(CharSequence script) {\n \n         final DropDownChoice usersDerRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n-                new PropertyModel(this,\"userDerSchemaPageRows\"),\n+                new PropertyModel(this, \"userDerSchemaPageRows\"),\n                 utility.paginatorRowsChooser());\n \n         usersDerRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants.CONF_USER_DER_SCHEMA_PAGINATOR_ROWS,\n-                      userDerSchemaPageRows);\n \n-              tableUsersDer.setRowsPerPage(userDerSchemaPageRows);\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_USER_DER_SCHEMA_PAGINATOR_ROWS,\n+                        userDerSchemaPageRows);\n \n-              target.addComponent(userDerivedSchemaContainer);\n-            }\n+                tableUsersDer.setRowsPerPage(userDerSchemaPageRows);\n \n-          });\n+                target.addComponent(userDerivedSchemaContainer);\n+            }\n+        });\n \n         usersDerPaginatorForm.add(usersDerRowsChooser);\n         add(usersDerPaginatorForm);\n \n-       List<IColumn> membershipsColumns = new ArrayList<IColumn>();\n+        List<IColumn> membershipsColumns = new ArrayList<IColumn>();\n \n         membershipsColumns.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n         membershipsColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n                 \"type\", \"type\"));\n \n-        membershipsColumns.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+        membershipsColumns.add(new PropertyColumn(new Model(getString(\n+                \"attributes\")),\n                 \"attributes\", \"attributes\"));\n \n         membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"name\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+                getString(\"name\"))) {\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem, String componentId, IModel<SchemaTO> model) {\n+                final SchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editMembershipSchemaWin.setPageCreator(new ModalWindow\n-                                .PageCreator() {\n+                        editMembershipSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            SchemaModalPage form = new SchemaModalPage(\n-                                    Schema.this, editMembershipSchemaWin,\n-                                    schemaTO, false);\n-                            form.setEntity(SchemaModalPage.Entity.MEMBERSHIP);\n-                            return form;\n-                        }\n+                            public Page createPage() {\n+                                SchemaModalPage form = new SchemaModalPage(\n+                                        Schema.this, editMembershipSchemaWin,\n+                                        schemaTO, false);\n+                                form.setEntity(SchemaModalPage.Entity.MEMBERSHIP);\n+                                return form;\n+                            }\n                         });\n \n                         editMembershipSchemaWin.show(target);\n@@ -672,15 +726,13 @@ public Page createPage() {\n             }\n         });\n \n-        membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+        membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(getString(\n+                \"delete\"))) {\n+\n+            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem, String componentId, IModel<SchemaTO> model) {\n+                final SchemaTO schemaTO = model.getObject();\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -694,13 +746,16 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -716,66 +771,71 @@ public CharSequence preDecorateScript(CharSequence script) {\n \n         final AjaxFallbackDefaultDataTable tableMemberships =\n                 new AjaxFallbackDefaultDataTable(\"datatable\", membershipsColumns,\n-                new SchemaProvider(SchemaType.MembershipSchema),\n+                new SchemaProvider(SourceMappingType.MembershipSchema),\n                 membershipPageRows);\n \n-       Form membershipPaginatorForm = new Form(\"MembershipPaginatorForm\");\n+        Form membershipPaginatorForm = new Form(\"MembershipPaginatorForm\");\n \n         final DropDownChoice membershipRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n-                new PropertyModel(this,\"membershipPageRows\"),\n+                new PropertyModel(this, \"membershipPageRows\"),\n                 utility.paginatorRowsChooser());\n \n-        membershipRowsChooser.add(new AjaxFormComponentUpdatingBehavior\n-                (\"onchange\") { protected void onUpdate\n-                        ( AjaxRequestTarget target ) {\n-              utility.updatePaginatorRows(\n-                      Constants.CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS,\n-                      membershipPageRows);\n+        membershipRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\n+                \"onchange\") {\n \n-              tableMemberships.setRowsPerPage(membershipPageRows);\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS,\n+                        membershipPageRows);\n \n-              target.addComponent(membershipSchemaContainer);\n-            }\n+                tableMemberships.setRowsPerPage(membershipPageRows);\n \n-          });\n+                target.addComponent(membershipSchemaContainer);\n+            }\n+        });\n \n         membershipPaginatorForm.add(membershipRowsChooser);\n         add(membershipPaginatorForm);\n \n         List<IColumn> columnsMembershipsDer = new ArrayList<IColumn>();\n \n-        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"name\")),\n+        columnsMembershipsDer.add(new PropertyColumn(\n+                new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n-        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n+        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\n+                \"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\n+                \"attributes\")),\n                 \"derivedAttributes\", \"derivedAttributes\"));\n \n         columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>> cellItem, String componentId, IModel<DerivedSchemaTO> model) {\n+                final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         editMembershipDerivedSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            DerivedSchemaModalPage window = new DerivedSchemaModalPage\n-                                    (Schema.this, editMembershipDerivedSchemaWin, schemaTO, false);\n-                            window.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n-                            return window;\n-                        }\n-                        });\n+                                    public Page createPage() {\n+                                        DerivedSchemaModalPage window = new DerivedSchemaModalPage(\n+                                                Schema.this,\n+                                                editMembershipDerivedSchemaWin,\n+                                                schemaTO, false);\n+                                        window.setEntity(\n+                                                DerivedSchemaModalPage.Entity.MEMBERSHIP);\n+                                        return window;\n+                                    }\n+                                });\n \n                         editMembershipDerivedSchemaWin.show(target);\n                     }\n@@ -788,15 +848,13 @@ public Page createPage() {\n             }\n         });\n \n-        columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n+        columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>(getString(\n+                \"delete\"))) {\n+\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>> cellItem, String componentId, IModel<DerivedSchemaTO> model) {\n+                final DerivedSchemaTO schemaTO = model.getObject();\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -811,13 +869,16 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -832,30 +893,32 @@ public CharSequence preDecorateScript(CharSequence script) {\n         });\n \n         final AjaxFallbackDefaultDataTable tableMembershipsDer =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", columnsMembershipsDer,\n-                new DerivedSchemaProvider(SchemaDerivedType.MembershipDerivedSchema),\n+                new AjaxFallbackDefaultDataTable(\"datatable\",\n+                columnsMembershipsDer,\n+                new DerivedSchemaProvider(\n+                SchemaDerivedType.MembershipDerivedSchema),\n                 membershipDerPageRows);\n \n         Form membershipDerPaginatorForm = new Form(\"MembershipDerPaginatorForm\");\n \n         final DropDownChoice membershipDerRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n-                new PropertyModel(this,\"membershipDerPageRows\"),\n+                new PropertyModel(this, \"membershipDerPageRows\"),\n                 utility.paginatorRowsChooser());\n \n-        membershipDerRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(\n-                      Constants.CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS,\n-                      membershipDerPageRows);\n+        membershipDerRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\n+                \"onchange\") {\n \n-              tableMembershipsDer.setRowsPerPage(membershipDerPageRows);\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS,\n+                        membershipDerPageRows);\n \n-              target.addComponent(membershipDerivedSchemaContainer);\n-            }\n+                tableMembershipsDer.setRowsPerPage(membershipDerPageRows);\n \n-          });\n+                target.addComponent(membershipDerivedSchemaContainer);\n+            }\n+        });\n \n         membershipDerPaginatorForm.add(membershipDerRowsChooser);\n         add(membershipDerPaginatorForm);\n@@ -864,26 +927,30 @@ protected void onUpdate( AjaxRequestTarget target )\n         roleSchemasContainer.add(tableRoles);\n         roleSchemasContainer.setOutputMarkupId(true);\n \n-        roleDerivedSchemasContainer = new WebMarkupContainer(\"roleDerivedSchemasContainer\");\n+        roleDerivedSchemasContainer = new WebMarkupContainer(\n+                \"roleDerivedSchemasContainer\");\n         roleDerivedSchemasContainer.add(tableRolesDer);\n         roleDerivedSchemasContainer.setOutputMarkupId(true);\n \n         userSchemaContainer = new WebMarkupContainer(\"userSchemaContainer\");\n         userSchemaContainer.add(tableUsers);\n         userSchemaContainer.setOutputMarkupId(true);\n \n-        userDerivedSchemaContainer = new WebMarkupContainer(\"userDerivedSchemaContainer\");\n+        userDerivedSchemaContainer = new WebMarkupContainer(\n+                \"userDerivedSchemaContainer\");\n         userDerivedSchemaContainer.add(tableUsersDer);\n         userDerivedSchemaContainer.setOutputMarkupId(true);\n \n-        membershipSchemaContainer = new WebMarkupContainer(\"membershipSchemaContainer\");\n+        membershipSchemaContainer = new WebMarkupContainer(\n+                \"membershipSchemaContainer\");\n         membershipSchemaContainer.add(tableMemberships);\n         membershipSchemaContainer.setOutputMarkupId(true);\n \n-        membershipDerivedSchemaContainer = new WebMarkupContainer(\"membershipDerivedSchemaContainer\");\n+        membershipDerivedSchemaContainer = new WebMarkupContainer(\n+                \"membershipDerivedSchemaContainer\");\n         membershipDerivedSchemaContainer.add(tableMembershipsDer);\n         membershipDerivedSchemaContainer.setOutputMarkupId(true);\n-        \n+\n         add(roleSchemasContainer);\n         add(roleDerivedSchemasContainer);\n \n@@ -908,19 +975,19 @@ protected void onUpdate( AjaxRequestTarget target )\n         editUserDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editUserDerivedSchemaWin.setPageMapName(\"modal-4\");\n         editUserDerivedSchemaWin.setCookieName(\"modal-4\");\n-        \n+\n         createRoleSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createRoleSchemaWin.setPageMapName(\"modal-5\");\n         createRoleSchemaWin.setCookieName(\"modal-5\");\n-        \n+\n         editRoleSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editRoleSchemaWin.setPageMapName(\"modal-6\");\n         editRoleSchemaWin.setCookieName(\"modal-6\");\n-        \n+\n         createRoleDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createRoleDerivedSchemaWin.setPageMapName(\"modal-7\");\n         createRoleDerivedSchemaWin.setCookieName(\"modal-7\");\n-        \n+\n         editRoleDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editRoleDerivedSchemaWin.setPageMapName(\"modal-8\");\n         editRoleDerivedSchemaWin.setCookieName(\"modal-8\");\n@@ -933,31 +1000,41 @@ protected void onUpdate( AjaxRequestTarget target )\n         createMembershipSchemaWin.setPageMapName(\"modal-10\");\n         createMembershipSchemaWin.setCookieName(\"modal-10\");\n \n-        createMembershipDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createMembershipDerivedSchemaWin.setCssClassName(\n+                ModalWindow.CSS_CLASS_GRAY);\n         createMembershipDerivedSchemaWin.setPageMapName(\"modal-11\");\n         createMembershipDerivedSchemaWin.setCookieName(\"modal-11\");\n \n-        editMembershipDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editMembershipDerivedSchemaWin.setCssClassName(\n+                ModalWindow.CSS_CLASS_GRAY);\n         editMembershipDerivedSchemaWin.setPageMapName(\"modal-12\");\n         editMembershipDerivedSchemaWin.setCookieName(\"modal-12\");\n \n         setWindowClosedCallback(createUserSchemaWin, userSchemaContainer);\n         setWindowClosedCallback(editUserSchemaWin, userSchemaContainer);\n \n-        setWindowClosedCallback(createUserDerivedSchemaWin, userDerivedSchemaContainer);\n-        setWindowClosedCallback(editUserDerivedSchemaWin, userDerivedSchemaContainer);\n+        setWindowClosedCallback(createUserDerivedSchemaWin,\n+                userDerivedSchemaContainer);\n+        setWindowClosedCallback(editUserDerivedSchemaWin,\n+                userDerivedSchemaContainer);\n \n         setWindowClosedCallback(createRoleSchemaWin, roleSchemasContainer);\n         setWindowClosedCallback(editRoleSchemaWin, roleSchemasContainer);\n \n-        setWindowClosedCallback(createRoleDerivedSchemaWin, roleDerivedSchemasContainer);\n-        setWindowClosedCallback(editRoleDerivedSchemaWin, roleDerivedSchemasContainer);\n+        setWindowClosedCallback(createRoleDerivedSchemaWin,\n+                roleDerivedSchemasContainer);\n+        setWindowClosedCallback(editRoleDerivedSchemaWin,\n+                roleDerivedSchemasContainer);\n \n-        setWindowClosedCallback(createMembershipSchemaWin, membershipSchemaContainer);\n-        setWindowClosedCallback(editMembershipSchemaWin, membershipSchemaContainer);\n+        setWindowClosedCallback(createMembershipSchemaWin,\n+                membershipSchemaContainer);\n+        setWindowClosedCallback(editMembershipSchemaWin,\n+                membershipSchemaContainer);\n \n-        setWindowClosedCallback(createMembershipDerivedSchemaWin, membershipDerivedSchemaContainer);\n-        setWindowClosedCallback(editMembershipDerivedSchemaWin, membershipDerivedSchemaContainer);\n+        setWindowClosedCallback(createMembershipDerivedSchemaWin,\n+                membershipDerivedSchemaContainer);\n+        setWindowClosedCallback(editMembershipDerivedSchemaWin,\n+                membershipDerivedSchemaContainer);\n \n         add(new AjaxLink(\"createRoleSchemaWinLink\") {\n \n@@ -968,7 +1045,8 @@ public void onClick(AjaxRequestTarget target) {\n \n                     public Page createPage() {\n                         SchemaModalPage form = new SchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createRoleSchemaWin\"), null, true);\n+                                new ModalWindow(\"createRoleSchemaWin\"), null,\n+                                true);\n                         form.setEntity(SchemaModalPage.Entity.ROLE);\n                         return form;\n                     }\n@@ -986,8 +1064,10 @@ public void onClick(AjaxRequestTarget target) {\n                 createRoleDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                     public Page createPage() {\n-                        DerivedSchemaModalPage form = new DerivedSchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createRoleDerivedSchemaWin\"), null, true);\n+                        DerivedSchemaModalPage form = new DerivedSchemaModalPage(\n+                                Schema.this,\n+                                new ModalWindow(\"createRoleDerivedSchemaWin\"),\n+                                null, true);\n                         form.setEntity(DerivedSchemaModalPage.Entity.ROLE);\n                         return form;\n                     }\n@@ -1006,33 +1086,36 @@ public void onClick(AjaxRequestTarget target) {\n \n                     public Page createPage() {\n                         SchemaModalPage form = new SchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createUserSchemaWin\"), null, true);\n+                                new ModalWindow(\"createUserSchemaWin\"), null,\n+                                true);\n                         form.setEntity(SchemaModalPage.Entity.USER);\n                         return form;\n                     }\n                 });\n-                \n+\n                 createUserSchemaWin.show(target);\n             }\n         });\n \n         add(new AjaxLink(\"createUserDerSchemaWinLink\") {\n-            \n+\n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-            createUserDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                createUserDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-            public Page createPage() {\n-                DerivedSchemaModalPage form = new DerivedSchemaModalPage(Schema.this,\n-                        new ModalWindow(\"createUserDerSchemaModalWin\"), null, true);\n-                form.setEntity(DerivedSchemaModalPage.Entity.USER);\n-                \n-                return form;\n-            }\n-            });\n+                    public Page createPage() {\n+                        DerivedSchemaModalPage form = new DerivedSchemaModalPage(\n+                                Schema.this,\n+                                new ModalWindow(\"createUserDerSchemaModalWin\"),\n+                                null, true);\n+                        form.setEntity(DerivedSchemaModalPage.Entity.USER);\n+\n+                        return form;\n+                    }\n+                });\n \n-            createUserDerivedSchemaWin.show(target);\n+                createUserDerivedSchemaWin.show(target);\n             }\n         });\n \n@@ -1045,7 +1128,8 @@ public void onClick(AjaxRequestTarget target) {\n \n                     public Page createPage() {\n                         SchemaModalPage form = new SchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createMembershipSchemaModalWin\"), null, true);\n+                                new ModalWindow(\"createMembershipSchemaModalWin\"),\n+                                null, true);\n                         form.setEntity(SchemaModalPage.Entity.MEMBERSHIP);\n                         return form;\n                     }\n@@ -1055,24 +1139,26 @@ public Page createPage() {\n             }\n         });\n \n-            add(new AjaxLink(\"createMembershipDerSchemaWinLink\") {\n+        add(new AjaxLink(\"createMembershipDerSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-            createMembershipDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                createMembershipDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-            public Page createPage() {\n-                DerivedSchemaModalPage form = new DerivedSchemaModalPage(Schema.this,\n-                        new ModalWindow(\"createMembershipDerivedSchemaWin\"),\n-                        null, true);\n-                form.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n+                    public Page createPage() {\n+                        DerivedSchemaModalPage form = new DerivedSchemaModalPage(\n+                                Schema.this,\n+                                new ModalWindow(\n+                                \"createMembershipDerivedSchemaWin\"),\n+                                null, true);\n+                        form.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n \n-                return form;\n-            }\n-            });\n+                        return form;\n+                    }\n+                });\n \n-            createMembershipDerivedSchemaWin.show(target);\n+                createMembershipDerivedSchemaWin.show(target);\n             }\n         });\n \n@@ -1087,16 +1173,17 @@ public void setWindowClosedCallback(ModalWindow window,\n             final WebMarkupContainer container) {\n \n         window.setWindowClosedCallback(\n-            new ModalWindow.WindowClosedCallback() {\n-                public void onClose(AjaxRequestTarget target) {\n-                    target.addComponent(container);\n-                    if(operationResult){\n-                        info(getString(\"operation_succeded\"));  \n-                        target.addComponent(feedbackPanel);\n-                        operationResult = false;\n+                new ModalWindow.WindowClosedCallback() {\n+\n+                    public void onClose(AjaxRequestTarget target) {\n+                        target.addComponent(container);\n+                        if (operationResult) {\n+                            info(getString(\"operation_succeded\"));\n+                            target.addComponent(feedbackPanel);\n+                            operationResult = false;\n+                        }\n                     }\n-                }\n-            });\n+                });\n     }\n \n     public boolean isOperationResult() {\n@@ -1112,14 +1199,14 @@ class SchemaProvider extends SortableDataProvider<SchemaTO> {\n         private SortableDataProviderComparator comparator =\n                 new SortableDataProviderComparator();\n \n-        private SchemaType schema;\n+        private SourceMappingType schema;\n \n-        public SchemaProvider(SchemaType schema) {\n+        public SchemaProvider(SourceMappingType schema) {\n \n             this.schema = schema;\n \n             //Default sorting\n-            setSort(\"name\",true);\n+            setSort(\"name\", true);\n         }\n \n         @Override\n@@ -1128,7 +1215,7 @@ public Iterator<SchemaTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first+count).iterator();\n+            return list.subList(first, first + count).iterator();\n         }\n \n         @Override\n@@ -1137,8 +1224,7 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<SchemaTO> model(final SchemaTO\n-                user) {\n+        public IModel<SchemaTO> model(final SchemaTO user) {\n             return new AbstractReadOnlyModel<SchemaTO>() {\n \n                 @Override\n@@ -1148,48 +1234,51 @@ public SchemaTO getObject() {\n             };\n         }\n \n-        public List<SchemaTO> getAttributesSchemaListDB(){\n+        public List<SchemaTO> getAttributesSchemaListDB() {\n \n             List<SchemaTO> list = null;\n \n-            if(schema == SchemaType.RoleSchema)\n+            if (schema == SourceMappingType.RoleSchema) {\n                 list = restClient.getAllRoleSchemas();\n-            else if (schema == SchemaType.UserSchema)\n+            } else if (schema == SourceMappingType.UserSchema) {\n                 list = restClient.getAllUserSchemas();\n-            else if (schema == SchemaType.MembershipSchema)\n+            } else if (schema == SourceMappingType.MembershipSchema) {\n                 list = restClient.getAllMemberhipSchemas();\n+            }\n \n             return list;\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<SchemaTO>, Serializable {\n+\n             public int compare(final SchemaTO o1,\n                     final SchemaTO o2) {\n-                    PropertyModel<Comparable> model1 =\n-                            new PropertyModel<Comparable>(o1, getSort()\n-                            .getProperty());\n-                    PropertyModel<Comparable> model2 =\n-                            new PropertyModel<Comparable>(o2, getSort()\n-                            .getProperty());\n-\n-                    int result = 1;\n-\n-                    if(model1.getObject() == null && model2.getObject() == null)\n-                        result = 0;\n-                    else if(model1.getObject() == null)\n-                        result = 1;\n-                    else if(model2.getObject() == null)\n-                        result = -1;\n-                    else\n-                        result = ((Comparable)model1.getObject()).compareTo(\n-                                model2.getObject());\n-\n-                    result = getSort().isAscending() ? result : -result;\n-\n-                    return result;\n+                PropertyModel<Comparable> model1 =\n+                        new PropertyModel<Comparable>(o1,\n+                        getSort().getProperty());\n+                PropertyModel<Comparable> model2 =\n+                        new PropertyModel<Comparable>(o2,\n+                        getSort().getProperty());\n+\n+                int result = 1;\n+\n+                if (model1.getObject() == null && model2.getObject() == null) {\n+                    result = 0;\n+                } else if (model1.getObject() == null) {\n+                    result = 1;\n+                } else if (model2.getObject() == null) {\n+                    result = -1;\n+                } else {\n+                    result = ((Comparable) model1.getObject()).compareTo(\n+                            model2.getObject());\n+                }\n+\n+                result = getSort().isAscending() ? result : -result;\n+\n+                return result;\n             }\n-\t}\n+        }\n     }\n \n     class DerivedSchemaProvider extends SortableDataProvider<DerivedSchemaTO> {\n@@ -1204,7 +1293,7 @@ public DerivedSchemaProvider(SchemaDerivedType schema) {\n             this.schema = schema;\n \n             //Default sorting\n-            setSort(\"name\",true);\n+            setSort(\"name\", true);\n         }\n \n         @Override\n@@ -1213,7 +1302,7 @@ public Iterator<DerivedSchemaTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first+count).iterator();\n+            return list.subList(first, first + count).iterator();\n         }\n \n         @Override\n@@ -1222,8 +1311,7 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO\n-                schema) {\n+        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO schema) {\n             return new AbstractReadOnlyModel<DerivedSchemaTO>() {\n \n                 @Override\n@@ -1233,47 +1321,50 @@ public DerivedSchemaTO getObject() {\n             };\n         }\n \n-        public List<DerivedSchemaTO> getAttributesSchemaListDB(){\n+        public List<DerivedSchemaTO> getAttributesSchemaListDB() {\n \n-        List<DerivedSchemaTO> list = null;\n+            List<DerivedSchemaTO> list = null;\n \n-        if(schema == SchemaDerivedType.RoleDerivedSchema)\n-            list = restClient.getAllRoleDerivedSchemas();\n-        else if (schema == SchemaDerivedType.UserDerivedSchema)\n-            list = restClient.getAllUserDerivedSchemas();\n-        else if (schema == SchemaDerivedType.MembershipDerivedSchema)\n-            list = restClient.getAllMembershipDerivedSchemas();\n+            if (schema == SchemaDerivedType.RoleDerivedSchema) {\n+                list = restClient.getAllRoleDerivedSchemas();\n+            } else if (schema == SchemaDerivedType.UserDerivedSchema) {\n+                list = restClient.getAllUserDerivedSchemas();\n+            } else if (schema == SchemaDerivedType.MembershipDerivedSchema) {\n+                list = restClient.getAllMembershipDerivedSchemas();\n+            }\n \n-        return list;\n+            return list;\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<DerivedSchemaTO>, Serializable {\n+\n             public int compare(final DerivedSchemaTO o1,\n                     final DerivedSchemaTO o2) {\n-                    PropertyModel<Comparable> model1 =\n-                            new PropertyModel<Comparable>(o1, getSort()\n-                            .getProperty());\n-                    PropertyModel<Comparable> model2 =\n-                            new PropertyModel<Comparable>(o2, getSort()\n-                            .getProperty());\n-\n-                    int result = 1;\n-\n-                    if(model1.getObject() == null && model2.getObject() == null)\n-                        result = 0;\n-                    else if(model1.getObject() == null)\n-                        result = 1;\n-                    else if(model2.getObject() == null)\n-                        result = -1;\n-                    else\n-                        result = ((Comparable)model1.getObject()).compareTo(\n-                                model2.getObject());\n-\n-                    result = getSort().isAscending() ? result : -result;\n-\n-                    return result;\n+                PropertyModel<Comparable> model1 =\n+                        new PropertyModel<Comparable>(o1,\n+                        getSort().getProperty());\n+                PropertyModel<Comparable> model2 =\n+                        new PropertyModel<Comparable>(o2,\n+                        getSort().getProperty());\n+\n+                int result = 1;\n+\n+                if (model1.getObject() == null && model2.getObject() == null) {\n+                    result = 0;\n+                } else if (model1.getObject() == null) {\n+                    result = 1;\n+                } else if (model2.getObject() == null) {\n+                    result = -1;\n+                } else {\n+                    result = ((Comparable) model1.getObject()).compareTo(\n+                            model2.getObject());\n+                }\n+\n+                result = getSort().isAscending() ? result : -result;\n+\n+                return result;\n             }\n-\t}\n+        }\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"8a779d54e90e2c0c0f5665c7ba4b6dbc7073660d","filename":"console/src/main/java/org/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -37,7 +37,7 @@\n import org.apache.wicket.util.string.Strings;\n import org.syncope.client.to.SchemaTO;\n import org.syncope.console.rest.SchemaRestClient;\n-import org.syncope.types.SchemaValueType;\n+import org.syncope.types.SchemaType;\n \n \n /**\n@@ -98,7 +98,7 @@ public SchemaModalPage(final BasePage basePage, final ModalWindow window,\n                 new PropertyModel(schema, \"validatorClass\")\n                 ,validatorsList);\n \n-        type = new DropDownChoice(\"type\",Arrays.asList(SchemaValueType.values()));\n+        type = new DropDownChoice(\"type\",Arrays.asList(SchemaType.values()));\n         type.setRequired(true);\n \n         mandatoryCondition = new AutoCompleteTextField(\"mandatoryCondition\") {"},{"sha":"ad51393752cdd963a73590917c81aa30a7ab890b","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.html","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -58,7 +58,7 @@\n                         <tr class=\"ui-widget-header\">\n                             <th><wicket:message key=\"delete\"/></th>\n                             <th><wicket:message key=\"field\"/></th>\n-                            <th><wicket:message key=\"schemaTypes\"/></th>\n+                            <th><wicket:message key=\"sourceMappingTypes\"/></th>\n                             <th><wicket:message key=\"schemaAttributes\"/></th>\n                             <th><wicket:message key=\"mandatoryCondition\"/></th>\n                             <th><wicket:message key=\"accountId\"/></th>\n@@ -83,7 +83,7 @@\n                             </td>\n                             <td>\n                                 <select class=\"text ui-widget-content ui-corner-all\" \n-                                        style=\"width:100%\" wicket:id=\"schemaTypes\"/>\n+                                        style=\"width:100%\" wicket:id=\"sourceMappingTypes\"/>\n                             </td>\n                             <td>\n                                 <select class=\"text ui-widget-content ui-corner-all\"\n@@ -123,4 +123,4 @@\n             </fieldset>\n         </form>\n     </div>\n-</wicket:extend>\n\\ No newline at end of file\n+</wicket:extend>"},{"sha":"e18b09d6d265abee56b62780c2f69f3ead5e93a8","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -8,7 +8,7 @@ action=Action\n edit_attribute=Edit resource\n title=Resource\n field=Field\n-schemaTypes=Schema types\n+sourceMappingTypes=Source mapping types\n roleSchema=Role Schema\n accountId=Account Id\n mandatoryCondition=Mandatory condition"},{"sha":"80383cf284b45cfdd05d170d31c27cb1db5f331e","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -8,7 +8,7 @@ action=Azione\n edit_attribute=Modifica risorsa\n title=Risorsa\n field=Campo\n-schemaTypes=Tipo Schema\n+sourceMappingTypes=Tipo mapping sorgente\n roleSchema=Schema Ruolo\n accountId=Id Account\n mandatoryCondition=Condizione d'obbligatoriet\\u00E0"},{"sha":"f924e16622255efcfe070ee4c5672c2a1b296871","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttr.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -21,7 +21,7 @@\n import org.syncope.core.persistence.validation.attrvalue.ParseException;\n import org.syncope.core.persistence.validation.attrvalue.InvalidAttrValueException;\n import org.syncope.core.persistence.validation.entity.AttrCheck;\n-import org.syncope.core.rest.data.AttributableUtil;\n+import org.syncope.core.persistence.util.AttributableUtil;\n \n @MappedSuperclass\n @AttrCheck\n@@ -36,7 +36,7 @@ public <T extends AbstractAttrValue> T addValue(final String value,\n         T attrValue;\n         if (getSchema().isUniqueConstraint()) {\n             attrValue = (T) attributableUtil.newAttributeUniqueValue();\n-            ((IAttrUniqueValue) attrValue).setSchema(getSchema());\n+            ((AbstractAttrUniqueValue) attrValue).setSchema(getSchema());\n         } else {\n             attrValue = (T) attributableUtil.newAttributeValue();\n         }"},{"sha":"564e568e588470ddbc3c093be1f31b0668aa88cf","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttrUniqueValue.java","status":"renamed","additions":4,"deletions":22,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrUniqueValue.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -12,29 +12,11 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.types;\n+package org.syncope.core.persistence.beans;\n \n-public enum SchemaValueType {\n+public abstract class AbstractAttrUniqueValue extends AbstractAttrValue {\n \n-    String(\"java.lang.String\"),\n-    Long(\"java.lang.Long\"),\n-    Double(\"java.lang.Double\"),\n-    Boolean(\"java.lang.Boolean\"),\n-    Date(\"java.util.Date\");\n+    public abstract <T extends AbstractSchema> T getSchema();\n \n-    final private String className;\n-\n-    SchemaValueType(String className) {\n-        this.className = className;\n-    }\n-\n-    public String getClassName() {\n-        return className;\n-    }\n-\n-    public boolean isConversionPatternNeeded() {\n-        return this == SchemaValueType.Date\n-                || this == SchemaValueType.Double\n-                || this == SchemaValueType.Long;\n-    }\n+    public abstract <T extends AbstractSchema> void setSchema(T schema);\n }","previous_filename":"client/src/main/java/org/syncope/types/SchemaValueType.java"},{"sha":"bf491d89ef761e67089484656e4085516f6d9135","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractSchema.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -31,7 +31,7 @@\n import org.syncope.core.persistence.validation.attrvalue.BasicValidator;\n import org.syncope.core.persistence.validation.attrvalue.AbstractValidator;\n import org.syncope.core.persistence.validation.entity.SchemaCheck;\n-import org.syncope.types.SchemaValueType;\n+import org.syncope.types.SchemaType;\n \n @MappedSuperclass\n @SchemaCheck\n@@ -60,7 +60,7 @@ protected DecimalFormat initialValue() {\n \n     @Column(nullable = false)\n     @Enumerated(STRING)\n-    private SchemaValueType type;\n+    private SchemaType type;\n \n     /**\n      * Specify if the attribute should be stored on the local repository.\n@@ -96,7 +96,7 @@ protected DecimalFormat initialValue() {\n     public AbstractSchema() {\n         super();\n \n-        type = SchemaValueType.String;\n+        type = SchemaType.String;\n         virtual = getBooleanAsInteger(false);\n         mandatoryCondition = Boolean.FALSE.toString();\n         multivalue = getBooleanAsInteger(false);\n@@ -112,11 +112,11 @@ public void setName(String name) {\n         this.name = name;\n     }\n \n-    public SchemaValueType getType() {\n+    public SchemaType getType() {\n         return type;\n     }\n \n-    public void setType(SchemaValueType type) {\n+    public void setType(SchemaType type) {\n         this.type = type;\n     }\n "},{"sha":"cd009b8d26ca489b8612f317b8a4d42f51b09dff","filename":"core/src/main/java/org/syncope/core/persistence/beans/SchemaMapping.java","status":"modified","additions":16,"deletions":20,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -23,24 +23,20 @@\n import javax.persistence.Id;\n import javax.persistence.ManyToOne;\n import org.hibernate.validator.constraints.Range;\n-import org.syncope.types.SchemaType;\n+import org.syncope.types.SourceMappingType;\n \n @Entity\n public class SchemaMapping extends AbstractBaseBean {\n \n-    /**\n-     * This autogenerated id leads to strange behavior with PostgreSQL, when\n-     * using GenerationType.AUTO.\n-     */\n     @Id\n     private Long id;\n \n     @Column(nullable = false)\n-    private String schemaName;\n+    private String sourceAttrName;\n \n     @Column(nullable = false)\n     @Enumerated(STRING)\n-    private SchemaType schemaType;\n+    private SourceMappingType sourceMappingType;\n \n     /**\n      * Target resource that has fields to be mapped over user attribute schemas.\n@@ -52,7 +48,7 @@ public class SchemaMapping extends AbstractBaseBean {\n      * Target resource's field to be mapped.\n      */\n     @Column(nullable = false)\n-    private String field;\n+    private String destAttrName;\n \n     /**\n      * Specify if the mapped target resource's field is the key.\n@@ -96,12 +92,12 @@ public void setAccountid(boolean accountid) {\n         this.accountid = getBooleanAsInteger(accountid);\n     }\n \n-    public String getField() {\n-        return field;\n+    public String getDestAttrName() {\n+        return destAttrName;\n     }\n \n-    public void setField(String field) {\n-        this.field = field;\n+    public void setDestAttrName(String destAttrName) {\n+        this.destAttrName = destAttrName;\n     }\n \n     public String getMandatoryCondition() {\n@@ -128,19 +124,19 @@ public void setResource(TargetResource resource) {\n         this.resource = resource;\n     }\n \n-    public String getSchemaName() {\n-        return schemaName;\n+    public String getSourceAttrName() {\n+        return sourceAttrName;\n     }\n \n-    public void setSchemaName(String schemaName) {\n-        this.schemaName = schemaName;\n+    public void setSourceAttrName(String sourceAttrName) {\n+        this.sourceAttrName = sourceAttrName;\n     }\n \n-    public SchemaType getSchemaType() {\n-        return schemaType;\n+    public SourceMappingType getSourceMappingType() {\n+        return sourceMappingType;\n     }\n \n-    public void setSchemaType(SchemaType schemaType) {\n-        this.schemaType = schemaType;\n+    public void setSourceMappingType(SourceMappingType sourceMappingType) {\n+        this.sourceMappingType = sourceMappingType;\n     }\n }"},{"sha":"a95d62cf065f0abea9ead9f5b1ddc84ceb8f8dd9","filename":"core/src/main/java/org/syncope/core/persistence/beans/TargetResource.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -51,15 +51,18 @@\n         @QueryHint(name = \"org.hibernate.cacheable\", value = \"true\")\n     }),\n     @NamedQuery(name = \"TargetResource.getMappings\",\n-    query = \"SELECT m FROM SchemaMapping m WHERE m.schemaName=:schemaName \"\n-    + \"AND m.schemaType=:schemaType\",\n+    query = \"SELECT m FROM SchemaMapping m \"\n+    + \"WHERE m.sourceAttrName=:sourceAttrName \"\n+    + \"AND m.sourceMappingType=:sourceMappingType\",\n     hints = {\n         @QueryHint(name = \"org.hibernate.cacheable\", value = \"true\"),\n         @QueryHint(name = \"org.hibernate.cacheMode\", value = \"refresh\")\n     }),\n     @NamedQuery(name = \"TargetResource.getMappingsByTargetResource\",\n-    query = \"SELECT m FROM SchemaMapping m WHERE m.schemaName=:schemaName \"\n-    + \"AND m.schemaType=:schemaType AND m.resource.name=:resourceName\",\n+    query = \"SELECT m FROM SchemaMapping m \"\n+    + \"WHERE m.sourceAttrName=:sourceAttrName \"\n+    + \"AND m.sourceMappingType=:sourceMappingType \"\n+    + \"AND m.resource.name=:resourceName\",\n     hints = {\n         @QueryHint(name = \"org.hibernate.cacheable\", value = \"true\"),\n         @QueryHint(name = \"org.hibernate.cacheMode\", value = \"refresh\")"},{"sha":"e23c8b341ce106964c794d90a4638b8c2046f6c6","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/MAttrUniqueValue.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttrUniqueValue.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -19,13 +19,11 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToOne;\n import org.syncope.core.persistence.beans.AbstractAttr;\n-import org.syncope.core.persistence.beans.AbstractAttrValue;\n+import org.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n import org.syncope.core.persistence.beans.AbstractSchema;\n-import org.syncope.core.persistence.beans.IAttrUniqueValue;\n \n @Entity\n-public class MAttrUniqueValue extends AbstractAttrValue\n-        implements IAttrUniqueValue {\n+public class MAttrUniqueValue extends AbstractAttrUniqueValue {\n \n     @Id\n     private Long id;"},{"sha":"e115dd21b3e66f48c9d672916f711767ffc94113","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/RAttrUniqueValue.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttrUniqueValue.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -19,13 +19,11 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToOne;\n import org.syncope.core.persistence.beans.AbstractAttr;\n-import org.syncope.core.persistence.beans.AbstractAttrValue;\n+import org.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n import org.syncope.core.persistence.beans.AbstractSchema;\n-import org.syncope.core.persistence.beans.IAttrUniqueValue;\n \n @Entity\n-public class RAttrUniqueValue extends AbstractAttrValue\n-        implements IAttrUniqueValue {\n+public class RAttrUniqueValue extends AbstractAttrUniqueValue {\n \n     @Id\n     private Long id;"},{"sha":"2b933b41906017038a9325514bc59ceeb18b887a","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/UAttrUniqueValue.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttrUniqueValue.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -19,13 +19,11 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToOne;\n import org.syncope.core.persistence.beans.AbstractAttr;\n-import org.syncope.core.persistence.beans.AbstractAttrValue;\n+import org.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n import org.syncope.core.persistence.beans.AbstractSchema;\n-import org.syncope.core.persistence.beans.IAttrUniqueValue;\n \n @Entity\n-public class UAttrUniqueValue extends AbstractAttrValue\n-        implements IAttrUniqueValue {\n+public class UAttrUniqueValue extends AbstractAttrUniqueValue {\n \n     @Id\n     private Long id;"},{"sha":"7b84bf1989b6dfa0a15c7973e02b2d1aef2b05ec","filename":"core/src/main/java/org/syncope/core/persistence/dao/ResourceDAO.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -18,7 +18,7 @@\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n-import org.syncope.types.SchemaType;\n+import org.syncope.types.SourceMappingType;\n \n public interface ResourceDAO extends DAO {\n \n@@ -29,14 +29,16 @@ public interface ResourceDAO extends DAO {\n     TargetResource save(TargetResource resource)\n             throws InvalidEntityException;\n \n-    List<SchemaMapping> getMappings(String schemaName, SchemaType schemaType);\n+    List<SchemaMapping> getMappings(String schemaName,\n+            SourceMappingType sourceMappingType);\n \n-    List<SchemaMapping> getMappings(String schemaName, SchemaType schemaType,\n+    List<SchemaMapping> getMappings(String schemaName,\n+            SourceMappingType sourceMappingType,\n             String resourceName);\n \n     String getSchemaNameForAccountId(String resourceName);\n \n-    void deleteMappings(String schemaName, SchemaType schemaType);\n+    void deleteMappings(String schemaName, SourceMappingType sourceMappingType);\n \n     void deleteAllMappings(TargetResource resource);\n "},{"sha":"df143d2e40c37ec19a7ee1ae4e73465cc7c2b1da","filename":"core/src/main/java/org/syncope/core/persistence/dao/SchemaDAO.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -17,6 +17,7 @@\n import java.util.List;\n import org.syncope.core.persistence.beans.AbstractSchema;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n+import org.syncope.core.persistence.util.AttributableUtil;\n \n public interface SchemaDAO extends DAO {\n \n@@ -27,5 +28,5 @@ public interface SchemaDAO extends DAO {\n     <T extends AbstractSchema> T save(T schema)\n             throws InvalidEntityException;\n \n-    <T extends AbstractSchema> void delete(String name, Class<T> reference);\n+    void delete(String name, AttributableUtil attributableUtil);\n }"},{"sha":"0fcb3d9c909641f3ad5809ca35903e0a8ce7b12e","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":19,"deletions":18,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -23,7 +23,7 @@\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.ResourceDAO;\n-import org.syncope.types.SchemaType;\n+import org.syncope.types.SourceMappingType;\n \n @Repository\n public class ResourceDAOImpl extends AbstractDAOImpl\n@@ -54,25 +54,26 @@ public TargetResource save(final TargetResource resource) {\n     }\n \n     @Override\n-    public List<SchemaMapping> getMappings(final String schemaName,\n-            final SchemaType schemaType) {\n+    public List<SchemaMapping> getMappings(final String sourceAttrName,\n+            final SourceMappingType sourceMappingType) {\n \n         Query query = entityManager.createNamedQuery(\n                 \"TargetResource.getMappings\");\n-        query.setParameter(\"schemaName\", schemaName);\n-        query.setParameter(\"schemaType\", schemaType);\n+        query.setParameter(\"sourceAttrName\", sourceAttrName);\n+        query.setParameter(\"sourceMappingType\", sourceMappingType);\n \n         return query.getResultList();\n     }\n \n     @Override\n-    public List<SchemaMapping> getMappings(final String schemaName,\n-            final SchemaType schemaType, final String resourceName) {\n+    public List<SchemaMapping> getMappings(final String sourceAttrName,\n+            final SourceMappingType sourceMappingType,\n+            final String resourceName) {\n \n         Query query = entityManager.createNamedQuery(\n                 \"TargetResource.getMappingsByTargetResource\");\n-        query.setParameter(\"schemaName\", schemaName);\n-        query.setParameter(\"schemaType\", schemaType);\n+        query.setParameter(\"sourceAttrName\", sourceAttrName);\n+        query.setParameter(\"sourceMappingType\", sourceMappingType);\n         query.setParameter(\"resourceName\", resourceName);\n \n         return query.getResultList();\n@@ -86,24 +87,24 @@ public String getSchemaNameForAccountId(final String resourceName) {\n                 + \"AND m.accountid = 1\");\n         query.setParameter(\"resourceName\", resourceName);\n \n-        return ((SchemaMapping) query.getSingleResult()).getSchemaName();\n+        return ((SchemaMapping) query.getSingleResult()).getSourceAttrName();\n     }\n \n     @Override\n-    public void deleteMappings(final String schemaName,\n-            final SchemaType schemaType) {\n+    public void deleteMappings(final String sourceAttrName,\n+            final SourceMappingType sourceMappingType) {\n \n-        if (schemaType == SchemaType.AccountId\n-                || schemaType == SchemaType.Password) {\n+        if (sourceMappingType == SourceMappingType.SyncopeUserId\n+                || sourceMappingType == SourceMappingType.Password) {\n             return;\n         }\n \n         Query query = entityManager.createQuery(\"DELETE FROM \"\n                 + SchemaMapping.class.getSimpleName()\n-                + \" m WHERE m.schemaName=:schemaName \"\n-                + \"AND m.schemaType=:schemaType\");\n-        query.setParameter(\"schemaName\", schemaName);\n-        query.setParameter(\"schemaType\", schemaType);\n+                + \" m WHERE m.sourceAttrName=:sourceAttrName \"\n+                + \"AND m.sourceMappingType=:sourceMappingType\");\n+        query.setParameter(\"sourceAttrName\", sourceAttrName);\n+        query.setParameter(\"sourceMappingType\", sourceMappingType);\n \n         int items = query.executeUpdate();\n         LOG.debug(\"Removed {} schema mappings\", items);"},{"sha":"728a4dccdb17491dd65ce67cff90f09250a3a750","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -26,7 +26,7 @@\n import org.syncope.core.persistence.dao.AttributeDAO;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n-import org.syncope.types.SchemaType;\n+import org.syncope.core.persistence.util.AttributableUtil;\n \n @Repository\n public class SchemaDAOImpl extends AbstractDAOImpl\n@@ -61,10 +61,10 @@ public <T extends AbstractSchema> T save(final T schema) {\n     }\n \n     @Override\n-    public <T extends AbstractSchema> void delete(String name,\n-            Class<T> reference) {\n+    public void delete(final String name,\n+            final AttributableUtil attributableUtil) {\n \n-        T schema = find(name, reference);\n+        AbstractSchema schema = find(name, attributableUtil.schemaClass());\n         if (schema == null) {\n             return;\n         }\n@@ -85,7 +85,7 @@ public <T extends AbstractSchema> void delete(String name,\n             attributeDAO.delete(attributeId, attributeClass);\n         }\n \n-        resourceDAO.deleteMappings(name, SchemaType.byClass(reference));\n+        resourceDAO.deleteMappings(name, attributableUtil.sourceMappingType());\n \n         entityManager.remove(schema);\n     }"},{"sha":"5bb6a9cc318282858c05ec6fa019c5593e1b83ce","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":94,"deletions":67,"changes":161,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -34,23 +34,27 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.syncope.core.persistence.ConnectorInstanceLoader;\n+import org.syncope.core.persistence.beans.AbstractAttrValue;\n import org.syncope.core.persistence.beans.AbstractSchema;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.TaskExecution;\n+import org.syncope.core.persistence.beans.membership.MSchema;\n import org.syncope.core.persistence.beans.membership.Membership;\n+import org.syncope.core.persistence.beans.role.RSchema;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UAttr;\n import org.syncope.core.persistence.beans.user.UAttrValue;\n+import org.syncope.core.persistence.beans.user.USchema;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.TaskDAO;\n import org.syncope.core.rest.data.TaskDataBinder;\n import org.syncope.types.PropagationMode;\n import org.syncope.types.ResourceOperationType;\n+import org.syncope.types.SourceMappingType;\n import org.syncope.types.SchemaType;\n-import org.syncope.types.SchemaValueType;\n import org.syncope.types.TaskExecutionStatus;\n \n /**\n@@ -247,6 +251,30 @@ private void provision(\n         }\n     }\n \n+    private Class getSourceMappingTypeClass(\n+            SourceMappingType sourceMappingType) {\n+\n+        Class result;\n+\n+        switch (sourceMappingType) {\n+            case UserSchema:\n+                result = USchema.class;\n+                break;\n+\n+            case RoleSchema:\n+                result = RSchema.class;\n+                break;\n+\n+            case MembershipSchema:\n+                result = MSchema.class;\n+\n+            default:\n+                result = null;\n+        }\n+\n+        return result;\n+    }\n+\n     private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n             String password, TargetResource resource) {\n \n@@ -269,81 +297,85 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n         Set objValues;\n \n         // syncope user attribute\n-        UAttr userAttribute;\n+        UAttr attr;\n+        AbstractSchema schema;\n         // syncope user attribute schema type\n-        SchemaValueType schemaValueType = null;\n+        SchemaType schemaType = null;\n         // syncope user attribute values\n-        List<UAttrValue> values;\n+        List<AbstractAttrValue> values;\n \n         for (SchemaMapping mapping : resource.getMappings()) {\n-            LOG.debug(\"Processing schema {} ({})\", mapping.getSchemaName(),\n-                    mapping.getSchemaType().getClassName());\n+            LOG.debug(\"Processing schema {}\", mapping.getSourceAttrName());\n \n             try {\n-                AbstractSchema schema = null;\n-                try {\n-                    // check for schema or constants (AccountId/Password)\n-                    mapping.getSchemaType().getSchemaClass().asSubclass(\n-                            AbstractSchema.class);\n-\n-                    schema = schemaDAO.find(mapping.getSchemaName(),\n-                            mapping.getSchemaType().getSchemaClass());\n-                } catch (ClassCastException e) {\n-                    // ignore exception ... check for AccountId or Password\n-                    LOG.debug(\"Wrong schema type {}\",\n-                            mapping.getSchemaType().getClassName());\n-                }\n+                switch (mapping.getSourceMappingType()) {\n+                    case UserSchema:\n+                    case RoleSchema:\n+                    case MembershipSchema:\n+                        schema = schemaDAO.find(mapping.getSourceAttrName(),\n+                                getSourceMappingTypeClass(\n+                                mapping.getSourceMappingType()));\n+                        schemaType = schema.getType();\n+\n+                        attr = user.getAttribute(mapping.getSourceAttrName());\n+\n+                        values = attr != null\n+                                ? (schema.isUniqueConstraint()\n+                                ? Collections.singletonList(\n+                                attr.getUniqueValue())\n+                                : attr.getValues())\n+                                : Collections.EMPTY_LIST;\n \n-                if (schema != null) {\n-                    // get defined type for user attribute\n-                    schemaValueType = schema.getType();\n+                        if (LOG.isDebugEnabled()) {\n+                            LOG.debug(\"Retrieved attribute \" + attr\n+                                    + \"\\n* SourceAttrName \"\n+                                    + mapping.getSourceAttrName()\n+                                    + \"\\n* SourceMappingType \"\n+                                    + mapping.getSourceMappingType()\n+                                    + \"\\n* Attribute values \" + values);\n+                        }\n+                        break;\n \n-                    // get user attribute object\n-                    userAttribute = user.getAttribute(mapping.getSchemaName());\n+                    case SyncopeUserId:\n+                    case Password:\n+                        schema = null;\n+                        schemaType = SchemaType.String;\n \n-                    values = userAttribute != null\n-                            ? userAttribute.getValues()\n-                            : Collections.EMPTY_LIST;\n+                        AbstractAttrValue uAttrValue = new UAttrValue();\n \n-                    if (LOG.isDebugEnabled()) {\n-                        LOG.debug(\"Retrieved attribute \" + userAttribute\n-                                + \"\\n* Schema \" + mapping.getSchemaName()\n-                                + \"\\n* Schema type \"\n-                                + mapping.getSchemaType().getClassName()\n-                                + \"\\n* Attribute values \" + values);\n-                    }\n-                } else {\n-                    schemaValueType = SchemaValueType.String;\n+                        if (SourceMappingType.SyncopeUserId == mapping.\n+                                getSourceMappingType()) {\n \n-                    UAttrValue userAttributeValue =\n-                            new UAttrValue();\n+                            uAttrValue.setStringValue(user.getId().toString());\n+                        }\n+                        if (SourceMappingType.Password == mapping.\n+                                getSourceMappingType()\n+                                && password != null) {\n \n-                    if (SchemaType.AccountId.equals(mapping.getSchemaType())) {\n-                        userAttributeValue.setStringValue(\n-                                user.getId().toString());\n-                    }\n-                    if (SchemaType.Password.equals(mapping.getSchemaType())\n-                            && password != null) {\n+                            uAttrValue.setStringValue(password);\n+                        }\n \n-                        userAttributeValue.setStringValue(password);\n-                    }\n+                        values = Collections.singletonList(uAttrValue);\n+                        break;\n \n-                    values = Collections.singletonList(userAttributeValue);\n+                    default:\n+                        schema = null;\n+                        values = null;\n                 }\n \n                 if (LOG.isDebugEnabled()) {\n                     LOG.debug(\"Define mapping for: \"\n-                            + \"\\n* Field \" + mapping.getField()\n+                            + \"\\n* DestAttrName \" + mapping.getDestAttrName()\n                             + \"\\n* is accountId \" + mapping.isAccountid()\n                             + \"\\n* is password \" + (mapping.isPassword()\n-                            || mapping.getSchemaType().equals(\n-                            SchemaType.Password))\n-                            + \"\\n* nullable condition \"\n+                            || mapping.getSourceMappingType().equals(\n+                            SourceMappingType.Password))\n+                            + \"\\n* mandatory condition \"\n                             + mapping.getMandatoryCondition()\n-                            + \"\\n* Schema \" + mapping.getSchemaName()\n-                            + \"\\n* SchemaType \"\n-                            + mapping.getSchemaType().toString()\n-                            + \"\\n* ClassType \" + schemaValueType.getClassName()\n+                            + \"\\n* Schema \" + mapping.getSourceAttrName()\n+                            + \"\\n* SourceMappingType \"\n+                            + mapping.getSourceMappingType().toString()\n+                            + \"\\n* ClassType \" + schemaType.getClassName()\n                             + \"\\n* Values \" + values);\n                 }\n \n@@ -352,9 +384,9 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n                 // -----------------------------\n                 objValues = new HashSet();\n \n-                for (UAttrValue value : values) {\n+                for (AbstractAttrValue value : values) {\n                     castToBeApplied =\n-                            Class.forName(schemaValueType.getClassName());\n+                            Class.forName(schemaType.getClassName());\n \n                     if (!FrameworkUtil.isSupportedAttributeType(\n                             castToBeApplied)) {\n@@ -381,25 +413,20 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n                 if (!mapping.isPassword() && !mapping.isAccountid()) {\n                     if (schema != null && schema.isMultivalue()) {\n                         attributes.add(AttributeBuilder.build(\n-                                mapping.getField(),\n+                                mapping.getDestAttrName(),\n                                 objValues));\n                     } else {\n                         attributes.add(objValues.isEmpty()\n                                 ? AttributeBuilder.build(\n-                                mapping.getField())\n+                                mapping.getDestAttrName())\n                                 : AttributeBuilder.build(\n-                                mapping.getField(),\n+                                mapping.getDestAttrName(),\n                                 objValues.iterator().next()));\n                     }\n                 }\n-            } catch (ClassNotFoundException e) {\n-                LOG.warn(\"Unsupported attribute type \"\n-                        + schemaValueType.getClassName(), e);\n             } catch (Throwable t) {\n-                if (LOG.isDebugEnabled()) {\n-                    LOG.debug(\"Attribute '\" + mapping.getSchemaName()\n-                            + \"' processing failed\", t);\n-                }\n+                LOG.debug(\"Attribute '{}' processing failed\",\n+                        mapping.getSourceAttrName(), t);\n             }\n         }\n "},{"sha":"77da64f375a7226f8f488b94e240901623d06906","filename":"core/src/main/java/org/syncope/core/persistence/util/AttributableUtil.java","status":"renamed","additions":20,"deletions":1,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FAttributableUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FAttributableUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FAttributableUtil.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.core.rest.data;\n+package org.syncope.core.persistence.util;\n \n import org.syncope.core.persistence.beans.AbstractAttr;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n@@ -37,11 +37,30 @@\n import org.syncope.core.persistence.beans.user.UDerAttr;\n import org.syncope.core.persistence.beans.user.UDerSchema;\n import org.syncope.core.persistence.beans.user.USchema;\n+import org.syncope.types.SourceMappingType;\n \n public enum AttributableUtil {\n \n     USER, ROLE, MEMBERSHIP;\n \n+    public SourceMappingType sourceMappingType() {\n+        SourceMappingType result = null;\n+\n+        switch (this) {\n+            case USER:\n+                result = SourceMappingType.UserSchema;\n+                break;\n+            case ROLE:\n+                result = SourceMappingType.RoleSchema;\n+                break;\n+            case MEMBERSHIP:\n+                result = SourceMappingType.MembershipSchema;\n+                break;\n+        }\n+\n+        return result;\n+    }\n+\n     public <T extends AbstractSchema> Class<T> schemaClass() {\n         Class result = null;\n ","previous_filename":"core/src/main/java/org/syncope/core/rest/data/AttributableUtil.java"},{"sha":"47af0aea4294db14b7fc7d42a77250f2d38698b2","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttrValueValidator.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -16,8 +16,8 @@\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n+import org.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n-import org.syncope.core.persistence.beans.IAttrUniqueValue;\n import org.syncope.types.EntityViolationType;\n \n public class AttrValueValidator\n@@ -59,8 +59,8 @@ public boolean isValid(final AbstractAttrValue object,\n                 context.buildConstraintViolationWithTemplate(\n                         EntityViolationType.MoreThanOneNonNull.toString()).\n                         addConstraintViolation();\n-            } else if (object instanceof IAttrUniqueValue) {\n-                isValid = ((IAttrUniqueValue) object).getSchema().equals(\n+            } else if (object instanceof AbstractAttrUniqueValue) {\n+                isValid = ((AbstractAttrUniqueValue) object).getSchema().equals(\n                         object.getAttribute().getSchema());\n \n                 if (!isValid) {"},{"sha":"14832fa2fc37d9debfce9afeb8318ec4ac660f96","filename":"core/src/main/java/org/syncope/core/rest/controller/AbstractController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -15,7 +15,7 @@\n  */\n package org.syncope.core.rest.controller;\n \n-import org.syncope.core.rest.data.AttributableUtil;\n+import org.syncope.core.persistence.util.AttributableUtil;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.TypeMismatchException;"},{"sha":"8dd4a079356fe7ec2eb3eec4b9e7380e98d2f844","filename":"core/src/main/java/org/syncope/core/rest/controller/SchemaController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -69,7 +69,7 @@ public void delete(@PathVariable(\"kind\") final String kind,\n \n             throw new NotFoundException(schemaName);\n         } else {\n-            schemaDAO.delete(schemaName, reference);\n+            schemaDAO.delete(schemaName, getAttributableUtil(kind));\n         }\n     }\n "},{"sha":"24a9ec6a29f789139e5ef148b3cc5a061c405335","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":28,"deletions":27,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -14,6 +14,7 @@\n  */\n package org.syncope.core.rest.data;\n \n+import org.syncope.core.persistence.util.AttributableUtil;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashSet;\n@@ -56,7 +57,6 @@\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n import org.syncope.core.persistence.propagation.ResourceOperations;\n import org.syncope.types.ResourceOperationType;\n-import org.syncope.types.SchemaType;\n import org.syncope.types.SyncopeClientExceptionType;\n \n public abstract class AbstractAttributableDataBinder {\n@@ -169,14 +169,15 @@ private void fillAttribute(final List<String> values,\n         }\n     }\n \n-    private <T extends AbstractSchema> boolean evaluateMandatoryCondition(\n+    private boolean evaluateMandatoryCondition(\n             final String mandatoryCondition,\n             final List<? extends AbstractAttr> attributes,\n-            final Class<T> referenceSchema) {\n+            final AttributableUtil attributableUtil) {\n \n         JexlContext jexlContext = new MapContext();\n \n-        List<T> allSchemas = schemaDAO.findAll(referenceSchema);\n+        List<AbstractSchema> allSchemas =\n+                schemaDAO.findAll(attributableUtil.schemaClass());\n         for (AbstractAttr attribute : attributes) {\n             jexlContext.set(attribute.getSchema().getName(),\n                     attribute.getValuesAsStrings().isEmpty()\n@@ -185,9 +186,9 @@ private <T extends AbstractSchema> boolean evaluateMandatoryCondition(\n                     ? attribute.getValuesAsStrings()\n                     : attribute.getValuesAsStrings().iterator().next()));\n \n-            allSchemas.remove((T) attribute.getSchema());\n+            allSchemas.remove(attribute.getSchema());\n         }\n-        for (T schema : allSchemas) {\n+        for (AbstractSchema schema : allSchemas) {\n             jexlContext.set(schema.getName(), null);\n         }\n \n@@ -205,14 +206,14 @@ private <T extends AbstractSchema> boolean evaluateMandatoryCondition(\n         return result;\n     }\n \n-    private <T extends AbstractSchema> boolean evaluateMandatoryCondition(\n+    private boolean evaluateMandatoryCondition(\n             final String resourceName,\n             final List<? extends AbstractAttr> attributes,\n             final String schemaName,\n-            final Class<T> referenceSchema) {\n+            final AttributableUtil attributableUtil) {\n \n         List<SchemaMapping> mappings = resourceDAO.getMappings(schemaName,\n-                SchemaType.byClass(referenceSchema), resourceName);\n+                attributableUtil.sourceMappingType(), resourceName);\n \n         boolean result = false;\n \n@@ -224,17 +225,17 @@ private <T extends AbstractSchema> boolean evaluateMandatoryCondition(\n             result |= evaluateMandatoryCondition(\n                     mapping.getMandatoryCondition(),\n                     attributes,\n-                    referenceSchema);\n+                    attributableUtil);\n         }\n \n         return result;\n     }\n \n-    private <T extends AbstractSchema> boolean evaluateMandatoryCondition(\n+    private boolean evaluateMandatoryCondition(\n             final Set<TargetResource> resources,\n             final List<? extends AbstractAttr> attributes,\n             final String schemaName,\n-            final Class<T> referenceSchema) {\n+            final AttributableUtil attributableUtil) {\n \n         boolean result = false;\n \n@@ -245,15 +246,15 @@ private <T extends AbstractSchema> boolean evaluateMandatoryCondition(\n             resource = itor.next();\n             if (resource.isForceMandatoryConstraint()) {\n                 result |= evaluateMandatoryCondition(resource.getName(),\n-                        attributes, schemaName, referenceSchema);\n+                        attributes, schemaName, attributableUtil);\n             }\n         }\n \n         return result;\n     }\n \n-    private <T extends AbstractSchema> SyncopeClientException checkMandatory(\n-            final Class<T> referenceSchema,\n+    private SyncopeClientException checkMandatory(\n+            final AttributableUtil attributableUtil,\n             final AbstractAttributable attributable) {\n \n         SyncopeClientException requiredValuesMissing =\n@@ -265,23 +266,23 @@ private <T extends AbstractSchema> SyncopeClientException checkMandatory(\n         resources.addAll(attributable.getInheritedTargetResources());\n \n         LOG.debug(\"Check mandatory constraint among resources {}\", resources);\n-\n         // Check if there is some mandatory schema defined for which no value\n         // has been provided\n-        List<T> allSchemas = schemaDAO.findAll(referenceSchema);\n+        List<AbstractSchema> allSchemas =\n+                schemaDAO.findAll(attributableUtil.schemaClass());\n \n-        for (T schema : allSchemas) {\n+        for (AbstractSchema schema : allSchemas) {\n             if (attributable.getAttribute(schema.getName()) == null\n                     && !schema.isVirtual()\n                     && !schema.isReadonly()\n                     && (evaluateMandatoryCondition(\n                     schema.getMandatoryCondition(),\n                     attributable.getAttributes(),\n-                    referenceSchema)\n+                    attributableUtil)\n                     || evaluateMandatoryCondition(resources,\n                     attributable.getAttributes(),\n                     schema.getName(),\n-                    referenceSchema))) {\n+                    attributableUtil))) {\n \n                 LOG.error(\"Mandatory schema \" + schema.getName()\n                         + \" not provided with values\");\n@@ -334,8 +335,7 @@ protected ResourceOperations fill(\n \n                 for (SchemaMapping mapping : resourceDAO.getMappings(\n                         schema.getName(),\n-                        SchemaType.byClass(\n-                        attributableUtil.schemaClass()))) {\n+                        attributableUtil.sourceMappingType())) {\n \n                     if (mapping.getResource() != null\n                             && resources.contains(mapping.getResource())) {\n@@ -368,8 +368,7 @@ protected ResourceOperations fill(\n             if (schema != null) {\n                 for (SchemaMapping mapping : resourceDAO.getMappings(\n                         schema.getName(),\n-                        SchemaType.byClass(\n-                        attributableUtil.schemaClass()))) {\n+                        attributableUtil.sourceMappingType())) {\n \n                     if (mapping.getResource() != null\n                             && resources.contains(mapping.getResource())) {\n@@ -402,7 +401,9 @@ protected ResourceOperations fill(\n                         }\n                     } else {\n                         for (AbstractAttrValue mav : attribute.getValues()) {\n-                            if (valueToBeRemoved.equals(mav.getValueAsString())) {\n+                            if (valueToBeRemoved.equals(\n+                                    mav.getValueAsString())) {\n+\n                                 valuesToBeRemoved.add(mav.getId());\n                             }\n                         }\n@@ -429,7 +430,7 @@ protected ResourceOperations fill(\n         }\n \n         SyncopeClientException requiredValuesMissing =\n-                checkMandatory(attributableUtil.schemaClass(), attributable);\n+                checkMandatory(attributableUtil, attributable);\n         if (!requiredValuesMissing.getElements().isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n         }\n@@ -591,7 +592,7 @@ protected void fill(AbstractAttributable attributable,\n         }\n \n         SyncopeClientException requiredValuesMissing =\n-                checkMandatory(attributableUtil.schemaClass(), attributable);\n+                checkMandatory(attributableUtil, attributable);\n         if (!requiredValuesMissing.getElements().isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n         }"},{"sha":"9eff8f06064d1d0910b440dd58366902aff17dd8","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":12,"deletions":17,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -189,14 +189,14 @@ private SchemaMapping getSchemaMapping(\n             return null;\n         }\n \n-        if (mappingTO.getSchemaName() == null) {\n-            requiredValuesMissing.addElement(\"schema\");\n+        if (mappingTO.getSourceAttrName() == null) {\n+            requiredValuesMissing.addElement(\"sourceAttrName\");\n         }\n-        if (mappingTO.getField() == null) {\n-            requiredValuesMissing.addElement(\"field\");\n+        if (mappingTO.getDestAttrName() == null) {\n+            requiredValuesMissing.addElement(\"destAttrName\");\n         }\n-        if (mappingTO.getSchemaType() == null) {\n-            requiredValuesMissing.addElement(\"type\");\n+        if (mappingTO.getSourceMappingType() == null) {\n+            requiredValuesMissing.addElement(\"sourceMappingType\");\n         }\n         if (mappingTO.getMandatoryCondition() == null) {\n             requiredValuesMissing.addElement(\"mandatoryCondition\");\n@@ -232,14 +232,13 @@ private SchemaMapping getSchemaMapping(\n             throw compositeErrorException;\n         }\n \n-        SchemaMapping schemaMapping = new SchemaMapping();\n+        SchemaMapping mapping = new SchemaMapping();\n \n-        BeanUtils.copyProperties(\n-                mappingTO, schemaMapping, MAPPING_IGNORE_PROPERTIES);\n+        BeanUtils.copyProperties(mappingTO, mapping, MAPPING_IGNORE_PROPERTIES);\n \n-        schemaMapping.setResource(resource);\n+        mapping.setResource(resource);\n \n-        return schemaMapping;\n+        return mapping;\n     }\n \n     public List<SchemaMappingTO> getSchemaMappingTOs(\n@@ -254,16 +253,12 @@ public List<SchemaMappingTO> getSchemaMappingTOs(\n         List<SchemaMappingTO> schemaMappingTOs =\n                 new ArrayList<SchemaMappingTO>();\n         for (SchemaMapping mapping : mappings) {\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Ask for \" + mapping + \" TO\");\n-            }\n+            LOG.debug(\"Asking for TO for {}\", mapping);\n \n             schemaMappingTOs.add(getSchemaMappingTO(mapping));\n         }\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Collected TOs \" + schemaMappingTOs);\n-        }\n+        LOG.debug(\"Collected TOs: {}\", schemaMappingTOs);\n \n         return schemaMappingTOs;\n     }"},{"sha":"ae567ecbc4e61debc508925012fd995a6f653b5a","filename":"core/src/main/java/org/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -14,6 +14,7 @@\n  */\n package org.syncope.core.rest.data;\n \n+import org.syncope.core.persistence.util.AttributableUtil;\n import java.util.Collections;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;"},{"sha":"ce756efefedd88913b31acb94854680dc0d65b71","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -14,6 +14,7 @@\n  */\n package org.syncope.core.rest.data;\n \n+import org.syncope.core.persistence.util.AttributableUtil;\n import com.opensymphony.workflow.Workflow;\n import com.opensymphony.workflow.spi.Step;\n import java.util.HashSet;"},{"sha":"c063feb7f903d1f77311656222178911e104ecb9","filename":"core/src/main/java/org/syncope/core/workflow/AbstractStoreAttributeValue.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractStoreAttributeValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractStoreAttributeValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractStoreAttributeValue.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -24,7 +24,7 @@\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.SchemaDAO;\n-import org.syncope.core.rest.data.AttributableUtil;\n+import org.syncope.core.persistence.util.AttributableUtil;\n \n abstract class AbstractStoreAttributeValue extends OSWorkflowComponent\n         implements FunctionProvider {"},{"sha":"0772be61492eb7d378e6a73449f18b74ea767d68","filename":"core/src/test/java/org/syncope/core/persistence/dao/AttributeTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeTest.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -27,7 +27,7 @@\n import org.syncope.core.persistence.AbstractTest;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UAttrUniqueValue;\n-import org.syncope.core.rest.data.AttributableUtil;\n+import org.syncope.core.persistence.util.AttributableUtil;\n import org.syncope.types.EntityViolationType;\n \n @Transactional"},{"sha":"ddc4c339bff25ca5982750e32f7617369c70795c","filename":"core/src/test/java/org/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -26,7 +26,7 @@\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.AbstractTest;\n import org.syncope.identityconnectors.bundles.staticwebservice.WebServiceConnector;\n-import org.syncope.types.SchemaType;\n+import org.syncope.types.SourceMappingType;\n \n @Transactional\n public class ResourceTest extends AbstractTest {\n@@ -89,9 +89,9 @@ public final void save()\n         SchemaMapping accountId = new SchemaMapping();\n         accountId.setResource(resource);\n         accountId.setAccountid(true);\n-        accountId.setField(\"username\");\n-        accountId.setSchemaName(\"username\");\n-        accountId.setSchemaType(SchemaType.AccountId);\n+        accountId.setDestAttrName(\"username\");\n+        accountId.setSourceAttrName(\"username\");\n+        accountId.setSourceMappingType(SourceMappingType.SyncopeUserId);\n \n         resource.addMapping(accountId);\n "},{"sha":"2e85f5fab3692698d3d269549c631822fe063d17","filename":"core/src/test/java/org/syncope/core/persistence/dao/SchemaTest.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -24,8 +24,9 @@\n import org.syncope.core.persistence.beans.role.RSchema;\n import org.syncope.core.persistence.beans.user.USchema;\n import org.syncope.core.persistence.AbstractTest;\n+import org.syncope.core.persistence.util.AttributableUtil;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n-import org.syncope.types.SchemaValueType;\n+import org.syncope.types.SchemaType;\n \n @Transactional\n public class SchemaTest extends AbstractTest {\n@@ -54,7 +55,7 @@ public final void findByName() {\n     public final void save() {\n         USchema attributeSchema = new USchema();\n         attributeSchema.setName(\"secondaryEmail\");\n-        attributeSchema.setType(SchemaValueType.String);\n+        attributeSchema.setType(SchemaType.String);\n         attributeSchema.setValidatorClass(\n                 \"org.syncope.core.validation.EmailAddressValidator\");\n         attributeSchema.setMandatoryCondition(\"false\");\n@@ -72,7 +73,7 @@ public final void save() {\n     public final void saveNonValid() {\n         USchema attributeSchema = new USchema();\n         attributeSchema.setName(\"secondaryEmail\");\n-        attributeSchema.setType(SchemaValueType.String);\n+        attributeSchema.setType(SchemaType.String);\n         attributeSchema.setValidatorClass(\n                 \"org.syncope.core.validation.EmailAddressValidator\");\n         attributeSchema.setMandatoryCondition(\"false\");\n@@ -84,10 +85,9 @@ public final void saveNonValid() {\n \n     @Test\n     public final void delete() {\n-        USchema schema =\n-                schemaDAO.find(\"username\", USchema.class);\n+        USchema schema = schemaDAO.find(\"username\", USchema.class);\n \n-        schemaDAO.delete(schema.getName(), USchema.class);\n+        schemaDAO.delete(schema.getName(), AttributableUtil.USER);\n \n         USchema actual = schemaDAO.find(\"username\", USchema.class);\n         assertNull(\"delete did not work\", actual);"},{"sha":"2766d152ed277429cbaefd959ab461f05532a86f","filename":"core/src/test/java/org/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":12,"deletions":14,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -39,7 +39,7 @@\n import org.syncope.core.persistence.AbstractTest;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.dao.TaskDAO;\n-import org.syncope.types.SchemaType;\n+import org.syncope.types.SourceMappingType;\n \n @Transactional\n public class ResourceTest extends AbstractTest {\n@@ -70,12 +70,12 @@ public final void issue42() {\n         USchema userId = schemaDAO.find(\"userId\", USchema.class);\n         int beforeUserIdMappings = resourceDAO.getMappings(\n                 userId.getName(),\n-                SchemaType.UserSchema).size();\n+                SourceMappingType.UserSchema).size();\n \n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setSchemaName(\"userId\");\n-        schemaMappingTO.setSchemaType(SchemaType.UserSchema);\n-        schemaMappingTO.setField(\"campo1\");\n+        schemaMappingTO.setSourceAttrName(\"userId\");\n+        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n+        schemaMappingTO.setDestAttrName(\"campo1\");\n         schemaMappingTO.setAccountid(true);\n         schemaMappingTO.setPassword(false);\n         schemaMappingTO.setMandatoryCondition(\"false\");\n@@ -91,9 +91,7 @@ public final void issue42() {\n         resourceTO.setForceMandatoryConstraint(true);\n \n         TargetResource resource = resourceDataBinder.getResource(resourceTO);\n-\n         resource = resourceDAO.save(resource);\n-\n         resourceDAO.flush();\n \n         TargetResource actual = resourceDAO.find(\"resource-issue42\");\n@@ -102,7 +100,7 @@ public final void issue42() {\n         userId = schemaDAO.find(\"userId\", USchema.class);\n         int afterUserIdMappings = resourceDAO.getMappings(\n                 userId.getName(),\n-                SchemaType.UserSchema).size();\n+                SourceMappingType.UserSchema).size();\n \n         assertEquals(beforeUserIdMappings, afterUserIdMappings - 1);\n     }\n@@ -129,20 +127,20 @@ public final void save()\n \n         for (int i = 0; i < 3; i++) {\n             mapping = new SchemaMapping();\n-            mapping.setField(\"test\" + i);\n+            mapping.setDestAttrName(\"test\" + i);\n \n-            mapping.setSchemaName(userSchema.getName());\n-            mapping.setSchemaType(SchemaType.UserSchema);\n+            mapping.setSourceAttrName(userSchema.getName());\n+            mapping.setSourceMappingType(SourceMappingType.UserSchema);\n             mapping.setMandatoryCondition(\"false\");\n \n             resource.addMapping(mapping);\n         }\n         SchemaMapping accountId = new SchemaMapping();\n         accountId.setResource(resource);\n         accountId.setAccountid(true);\n-        accountId.setField(\"username\");\n-        accountId.setSchemaName(userSchema.getName());\n-        accountId.setSchemaType(SchemaType.AccountId);\n+        accountId.setDestAttrName(\"username\");\n+        accountId.setSourceAttrName(userSchema.getName());\n+        accountId.setSourceMappingType(SourceMappingType.SyncopeUserId);\n \n         resource.addMapping(accountId);\n "},{"sha":"4a3b3033e2c7cd8cbff408e77c2d8cd994d76a2b","filename":"core/src/test/java/org/syncope/core/persistence/relationships/SchemaTest.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSchemaTest.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -30,7 +30,8 @@\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n import org.syncope.core.persistence.AbstractTest;\n-import org.syncope.types.SchemaType;\n+import org.syncope.core.persistence.util.AttributableUtil;\n+import org.syncope.types.SourceMappingType;\n \n @Transactional\n public class SchemaTest extends AbstractTest {\n@@ -60,11 +61,11 @@ public final void test1() {\n         // check for associated mappings\n         List<SchemaMapping> mappings = resourceDAO.getMappings(\n                 schema.getName(),\n-                SchemaType.UserSchema);\n+                SourceMappingType.UserSchema);\n         assertFalse(mappings.isEmpty());\n \n         // delete user schema username\n-        schemaDAO.delete(\"username\", USchema.class);\n+        schemaDAO.delete(\"username\", AttributableUtil.USER);\n \n         schemaDAO.flush();\n \n@@ -75,7 +76,7 @@ public final void test1() {\n \n         // check for mappings deletion\n         mappings = resourceDAO.getMappings(\"username\",\n-                SchemaType.UserSchema);\n+                SourceMappingType.UserSchema);\n         assertTrue(mappings.isEmpty());\n \n         assertNull(attributeDAO.find(100L, UAttr.class));\n@@ -95,11 +96,11 @@ public void test2() {\n         // check for associated mappings\n         List<SchemaMapping> mappings = resourceDAO.getMappings(\n                 schema.getName(),\n-                SchemaType.UserSchema);\n+                SourceMappingType.UserSchema);\n         assertNotNull(mappings);\n \n         // delete user schema username\n-        schemaDAO.delete(\"surname\", USchema.class);\n+        schemaDAO.delete(\"surname\", AttributableUtil.USER);\n \n         schemaDAO.flush();\n "},{"sha":"6a593a3f81e8b2f99241f7c386c9c3fac70bbb8f","filename":"core/src/test/java/org/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -26,7 +26,7 @@\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.SchemaMappingTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.types.SchemaType;\n+import org.syncope.types.SourceMappingType;\n \n public class ResourceTestITCase extends AbstractTest {\n \n@@ -51,21 +51,21 @@ public void create() {\n         resourceTO.setConnectorId(102L);\n \n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setField(\"uid\");\n-        schemaMappingTO.setSchemaName(\"userId\");\n-        schemaMappingTO.setSchemaType(SchemaType.UserSchema);\n+        schemaMappingTO.setDestAttrName(\"uid\");\n+        schemaMappingTO.setSourceAttrName(\"userId\");\n+        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n         resourceTO.addMapping(schemaMappingTO);\n \n         schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setField(\"icon\");\n-        schemaMappingTO.setSchemaName(\"icon\");\n-        schemaMappingTO.setSchemaType(SchemaType.RoleSchema);\n+        schemaMappingTO.setDestAttrName(\"icon\");\n+        schemaMappingTO.setSourceAttrName(\"icon\");\n+        schemaMappingTO.setSourceMappingType(SourceMappingType.RoleSchema);\n         resourceTO.addMapping(schemaMappingTO);\n \n         schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setField(\"username\");\n-        schemaMappingTO.setSchemaName(\"username\");\n-        schemaMappingTO.setSchemaType(SchemaType.AccountId);\n+        schemaMappingTO.setDestAttrName(\"username\");\n+        schemaMappingTO.setSourceAttrName(\"username\");\n+        schemaMappingTO.setSourceMappingType(SourceMappingType.SyncopeUserId);\n         schemaMappingTO.setAccountid(true);\n         resourceTO.addMapping(schemaMappingTO);\n \n@@ -113,23 +113,23 @@ public void update() {\n         // Update with an existing and already assigned mapping\n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n         schemaMappingTO.setId(112L);\n-        schemaMappingTO.setField(\"test3\");\n-        schemaMappingTO.setSchemaName(\"username\");\n-        schemaMappingTO.setSchemaType(SchemaType.UserSchema);\n+        schemaMappingTO.setDestAttrName(\"test3\");\n+        schemaMappingTO.setSourceAttrName(\"username\");\n+        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n         schemaMappingTOs.add(schemaMappingTO);\n \n         // Update defining new mappings\n         for (int i = 4; i < 6; i++) {\n             schemaMappingTO = new SchemaMappingTO();\n-            schemaMappingTO.setField(\"test\" + i);\n-            schemaMappingTO.setSchemaName(\"username\");\n-            schemaMappingTO.setSchemaType(SchemaType.UserSchema);\n+            schemaMappingTO.setDestAttrName(\"test\" + i);\n+            schemaMappingTO.setSourceAttrName(\"username\");\n+            schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n             schemaMappingTOs.add(schemaMappingTO);\n         }\n         schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setField(\"username\");\n-        schemaMappingTO.setSchemaName(\"username\");\n-        schemaMappingTO.setSchemaType(SchemaType.AccountId);\n+        schemaMappingTO.setDestAttrName(\"username\");\n+        schemaMappingTO.setSourceAttrName(\"username\");\n+        schemaMappingTO.setSourceMappingType(SourceMappingType.SyncopeUserId);\n         schemaMappingTO.setAccountid(true);\n         schemaMappingTOs.add(schemaMappingTO);\n "},{"sha":"b75019e03b6be14162f81f6bb066faffc07a80c4","filename":"core/src/test/java/org/syncope/core/rest/SchemaTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FSchemaTestITCase.java?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -23,7 +23,7 @@\n import org.springframework.http.HttpStatus;\n import org.syncope.client.to.SchemaTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.types.SchemaValueType;\n+import org.syncope.types.SchemaType;\n import static org.junit.Assert.*;\n \n public class SchemaTestITCase extends AbstractTest {\n@@ -33,7 +33,7 @@ public void create() {\n         SchemaTO schemaTO = new SchemaTO();\n         schemaTO.setName(\"testAttribute\");\n         schemaTO.setMandatoryCondition(\"true\");\n-        schemaTO.setType(SchemaValueType.String);\n+        schemaTO.setType(SchemaType.String);\n \n         SchemaTO newSchemaTO = restTemplate.postForObject(BASE_URL\n                 + \"schema/user/create\", schemaTO, SchemaTO.class);\n@@ -107,7 +107,7 @@ public void update() {\n                 + \"schema/role/update\", schemaTO, SchemaTO.class);\n         assertEquals(schemaTO, updatedTO);\n \n-        updatedTO.setType(SchemaValueType.Date);\n+        updatedTO.setType(SchemaType.Date);\n         SyncopeClientException syncopeClientException = null;\n         try {\n             restTemplate.postForObject(BASE_URL"},{"sha":"921b835921245a933a3278b706d6223988b3e7d8","filename":"core/src/test/resources/content.xml","status":"modified","additions":32,"deletions":32,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -201,84 +201,84 @@\n     <SyncopeRole_TargetResource roles_id=\"8\" targetResources_name=\"ws-target-resource-2\" />\n     <SyncopeRole_TargetResource roles_id=\"3\" targetResources_name=\"ws-target-resource-list-mappings-2\" />\n \n-    <SchemaMapping id=\"99\" field=\"userid\"\n+    <SchemaMapping id=\"99\" destAttrName=\"userid\"\n                    resource_name=\"ws-target-resource-1\"\n-                   schemaName=\"AccountId\" schemaType=\"AccountId\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"SyncopeUserId\" sourceMappingType=\"SyncopeUserId\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n \n-    <SchemaMapping id=\"100\" field=\"email\"\n+    <SchemaMapping id=\"100\" destAttrName=\"email\"\n                    resource_name=\"ws-target-resource-1\"\n-                   schemaName=\"email\" schemaType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"email\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n \n-    <SchemaMapping id=\"101\" field=\"username\"\n+    <SchemaMapping id=\"101\" destAttrName=\"username\"\n                    resource_name=\"ws-target-resource-2\"\n-                   schemaName=\"username\" schemaType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"username\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n \n-    <SchemaMapping id=\"102\" field=\"email\"\n+    <SchemaMapping id=\"102\" destAttrName=\"email\"\n                    resource_name=\"ws-target-resource-list-mappings-1\"\n-                   schemaName=\"email\" schemaType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"email\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n \n-    <SchemaMapping id=\"103\" field=\"surname\"\n+    <SchemaMapping id=\"103\" destAttrName=\"surname\"\n                    resource_name=\"ws-target-resource-list-mappings-1\"\n-                   schemaName=\"surname\" schemaType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"surname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"104\" field=\"userid\"\n+    <SchemaMapping id=\"104\" destAttrName=\"userid\"\n                    resource_name=\"ws-target-resource-list-mappings-2\"\n-                   schemaName=\"userId\" schemaType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"userId\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n \n-    <SchemaMapping id=\"105\" field=\"surname\"\n+    <SchemaMapping id=\"105\" destAttrName=\"surname\"\n                    resource_name=\"ws-target-resource-1\"\n-                   schemaName=\"surname\" schemaType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"surname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"106\" field=\"password\"\n+    <SchemaMapping id=\"106\" destAttrName=\"password\"\n                    resource_name=\"ws-target-resource-1\"\n-                   schemaName=\"Password\" schemaType=\"Password\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"Password\" sourceMappingType=\"Password\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"1\"/>\n \n-    <SchemaMapping id=\"107\" field=\"password\"\n+    <SchemaMapping id=\"107\" destAttrName=\"password\"\n                    resource_name=\"ws-target-resource-2\"\n-                   schemaName=\"Password\" schemaType=\"Password\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"Password\" sourceMappingType=\"Password\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"1\"/>\n \n-    <SchemaMapping id=\"108\" field=\"type\"\n+    <SchemaMapping id=\"108\" destAttrName=\"type\"\n                    resource_name=\"ws-target-resource-2\"\n-                   schemaName=\"type\" schemaType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"type\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"109\" field=\"surname\"\n+    <SchemaMapping id=\"109\" destAttrName=\"surname\"\n                    resource_name=\"ws-target-resource-2\"\n-                   schemaName=\"surname\" schemaType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"surname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"110\" field=\"email\"\n+    <SchemaMapping id=\"110\" destAttrName=\"email\"\n                    resource_name=\"ws-target-resource-update\"\n-                   schemaName=\"email\" schemaType=\"UserSchema\" mandatoryCondition=\"false\"\n+                   sourceAttrName=\"email\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"111\" field=\"userId\"\n+    <SchemaMapping id=\"111\" destAttrName=\"userId\"\n                    resource_name=\"ws-target-resource-update\"\n-                   schemaName=\"userId\" schemaType=\"UserSchema\" mandatoryCondition=\"false\"\n+                   sourceAttrName=\"userId\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n                    accountid=\"0\" password=\"0\"/>\n     \n-    <SchemaMapping id=\"112\" field=\"test3\"\n+    <SchemaMapping id=\"112\" destAttrName=\"test3\"\n                    resource_name=\"ws-target-resource-update\"\n-                   schemaName=\"username\" schemaType=\"UserSchema\" mandatoryCondition=\"false\"\n+                   sourceAttrName=\"username\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"113\" field=\"name\"\n+    <SchemaMapping id=\"113\" destAttrName=\"name\"\n                    resource_name=\"ws-target-resource-2\"\n-                   schemaName=\"firstname\" schemaType=\"UserSchema\" mandatoryCondition=\"type == 'F'\"\n+                   sourceAttrName=\"firstname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"type == 'F'\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"114\" field=\"name\"\n+    <SchemaMapping id=\"114\" destAttrName=\"name\"\n                    resource_name=\"ws-target-resource-nopropagation\"\n-                   schemaName=\"firstname\" schemaType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   sourceAttrName=\"firstname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n \n     <Task id=\"1\" propagationMode=\"ASYNC\" resourceOperationType=\"UPDATE\""},{"sha":"bb574f05a57daa22e9149689b4adcc73c455b1f3","filename":"identityconnectors/bundles/staticws/ws-target-resource/src/main/resources/schema.sql","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fresources%2Fschema.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fresources%2Fschema.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fresources%2Fschema.sql?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -1,7 +1,7 @@\n CREATE TABLE PUBLIC.user(\n capsId INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,\n userId VARCHAR(30) NOT NULL,\n-password VARCHAR(30) NOT NULL,\n+password VARCHAR(255) NOT NULL,\n type VARCHAR(17) NOT NULL,\n residence VARCHAR(60),\n telephone VARCHAR(20),"}]}