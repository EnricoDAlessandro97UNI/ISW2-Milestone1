{"sha":"2a352cfb20c982d8738aa353c399d0da59b58109","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJhMzUyY2ZiMjBjOTgyZDg3MzhhYTM1M2MzOTlkMGRhNTliNTgxMDk=","commit":{"author":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-25T13:33:59Z"},"committer":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-25T13:33:59Z"},"message":"[SYNCOPE-231]\n* Adding RoleService\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1438507 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"581965d43af608ed603ea042bf9c61fa2010e561","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/581965d43af608ed603ea042bf9c61fa2010e561"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2a352cfb20c982d8738aa353c399d0da59b58109","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a352cfb20c982d8738aa353c399d0da59b58109","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2a352cfb20c982d8738aa353c399d0da59b58109","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a352cfb20c982d8738aa353c399d0da59b58109/comments","author":null,"committer":null,"parents":[{"sha":"80bd44bdc8ad72c55d0d396b6fde76496d8f9f62","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/80bd44bdc8ad72c55d0d396b6fde76496d8f9f62","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/80bd44bdc8ad72c55d0d396b6fde76496d8f9f62"}],"stats":{"total":90,"additions":60,"deletions":30},"files":[{"sha":"0222ec4b59cf86dd31df5b1be9e92087493d4d94","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/RoleServiceProxy.java","status":"modified","additions":16,"deletions":7,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a352cfb20c982d8738aa353c399d0da59b58109/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FRoleServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a352cfb20c982d8738aa353c399d0da59b58109/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FRoleServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FRoleServiceProxy.java?ref=2a352cfb20c982d8738aa353c399d0da59b58109","patch":"@@ -18,8 +18,16 @@\n  */\r\n package org.apache.syncope.client.services.proxy;\r\n \r\n+import java.net.URI;\r\n import java.util.Arrays;\r\n import java.util.List;\r\n+\r\n+import javax.ws.rs.NotFoundException;\r\n+import javax.ws.rs.NotSupportedException;\r\n+import javax.ws.rs.ServiceUnavailableException;\r\n+import javax.ws.rs.core.Response;\r\n+\r\n+import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.mod.RoleMod;\r\n import org.apache.syncope.common.search.NodeCond;\r\n import org.apache.syncope.common.services.RoleService;\r\n@@ -39,14 +47,16 @@ public List<RoleTO> children(final Long roleId) {\n     }\r\n \r\n     @Override\r\n-    public Integer count() {\r\n-        //return getRestTemplate().getForObject(baseUrl + \"role/count.json\", Integer.class);\r\n-        throw new UnsupportedOperationException();\r\n+    public int count() {\r\n+        return Integer.valueOf(list().size());\r\n     }\r\n \r\n     @Override\r\n-    public RoleTO create(final RoleTO roleTO) {\r\n-        return getRestTemplate().postForObject(baseUrl + \"role/create\", roleTO, RoleTO.class);\r\n+    public Response create(final RoleTO roleTO) {\r\n+        RoleTO role = getRestTemplate().postForObject(baseUrl + \"role/create\", roleTO, RoleTO.class);\r\n+\r\n+        URI location = URI.create(baseUrl + \"role/read/\" + role.getId() + \".json\");\r\n+        return Response.created(location).header(SyncopeConstants.REST_HEADER_ID, role.getId()).build();\r\n     }\r\n \r\n     @Override\r\n@@ -61,8 +71,7 @@ public List<RoleTO> list() {\n \r\n     @Override\r\n     public List<RoleTO> list(final int page, final int size) {\r\n-        //return Arrays.asList(getRestTemplate().getForObject(baseURL + \"role/list.json\", RoleTO[].class, page, size));\r\n-        throw new UnsupportedOperationException();\r\n+        throw new ServiceUnavailableException();\r\n     }\r\n \r\n     @Override\r"},{"sha":"003a39f59ca72d505338bd68c219ee4be22ac2fe","filename":"common/src/main/java/org/apache/syncope/common/services/RoleService.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a352cfb20c982d8738aa353c399d0da59b58109/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a352cfb20c982d8738aa353c399d0da59b58109/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java?ref=2a352cfb20c982d8738aa353c399d0da59b58109","patch":"@@ -26,6 +26,8 @@\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n import javax.ws.rs.QueryParam;\r\n+import javax.ws.rs.core.Response;\r\n+\r\n import org.apache.syncope.common.search.NodeCond;\r\n import org.apache.syncope.common.mod.RoleMod;\r\n import org.apache.syncope.common.to.RoleTO;\r\n@@ -39,10 +41,10 @@ public interface RoleService {\n \r\n     @GET\r\n     @Path(\"count\")\r\n-    Integer count();\r\n+    int count();\r\n \r\n     @POST\r\n-    RoleTO create(RoleTO roleTO);\r\n+    Response create(RoleTO roleTO);\r\n \r\n     @DELETE\r\n     @Path(\"{roleId}\")\r\n@@ -80,4 +82,5 @@ List<RoleTO> search(NodeCond searchCondition, @QueryParam(\"page\") int page,\n     @POST\r\n     @Path(\"{roleId}\")\r\n     RoleTO update(@PathParam(\"roleId\") Long roleId, RoleMod roleMod);\r\n+\r\n }\n\\ No newline at end of file"},{"sha":"3e5a09a82f0262a767cda32e392ecec5b7766694","filename":"console/src/main/java/org/apache/syncope/console/SyncopeSession.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a352cfb20c982d8738aa353c399d0da59b58109/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a352cfb20c982d8738aa353c399d0da59b58109/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=2a352cfb20c982d8738aa353c399d0da59b58109","patch":"@@ -92,6 +92,10 @@ public SyncopeSession(final Request request) {\n         restTemplate = applicationContext.getBean(RestTemplate.class);\n         baseURL = applicationContext.getBean(\"baseURL\", String.class);\n \n+        setupRESTClients();\n+    }\n+\n+    protected void setupRESTClients() {\n         services.put(ConfigurationService.class, new ConfigurationServiceProxy(baseURL, restTemplate));\n         services.put(ConnectorService.class, new ConnectorServiceProxy(baseURL, restTemplate));\n         services.put(EntitlementService.class, new EntitlementServiceProxy(baseURL, restTemplate));"},{"sha":"70abd1333b7a483ae11a5d1de63aa4dd439b59a8","filename":"console/src/main/java/org/apache/syncope/console/rest/RoleRestClient.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a352cfb20c982d8738aa353c399d0da59b58109/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a352cfb20c982d8738aa353c399d0da59b58109/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=2a352cfb20c982d8738aa353c399d0da59b58109","patch":"@@ -20,14 +20,15 @@\n \n import java.util.List;\n \n+import javax.ws.rs.core.Response;\n+\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.ResourceService;\n import org.apache.syncope.common.services.RoleService;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -58,19 +59,18 @@ public Integer searchCount(final NodeCond searchCond) {\n     }\n \n     @Override\n-    public List<RoleTO> search(final NodeCond searchCond, final int page, final int size)\n-            throws SyncopeClientCompositeErrorException {\n+    public List<RoleTO> search(final NodeCond searchCond, final int page, final int size) {\n         return getService(RoleService.class).search(searchCond, page, size);\n     }\n \n     @Override\n-    public ConnObjectTO getRemoteObject(final String resourceName, final String objectId)\n-            throws SyncopeClientCompositeErrorException {\n+    public ConnObjectTO getRemoteObject(final String resourceName, final String objectId) {\n         return getService(ResourceService.class).getConnector(resourceName, AttributableType.ROLE, objectId);\n     }\n \n     public RoleTO create(final RoleTO roleTO) {\n-        return getService(RoleService.class).create(roleTO);\n+        Response response = getService(RoleService.class).create(roleTO);\n+        return (RoleTO) response.getEntity(); // FIXME after CXF migration\n     }\n \n     public RoleTO read(final Long id) {"},{"sha":"0b3b0a880866e830a95f02b0f75888a64975a0dc","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a352cfb20c982d8738aa353c399d0da59b58109/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a352cfb20c982d8738aa353c399d0da59b58109/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=2a352cfb20c982d8738aa353c399d0da59b58109","patch":"@@ -54,7 +54,7 @@\n public class AuthenticationTestITCase extends AbstractTest {\n \n     // Enable running test more than once with parameters\n-    public AuthenticationTestITCase(String contentType) {\n+    public AuthenticationTestITCase(final String contentType) {\n         super(contentType);\n      }\n \n@@ -81,7 +81,8 @@ public void testUserSchemaAuthorization() {\n         authRoleTO.setParent(8L);\n         authRoleTO.addEntitlement(\"SCHEMA_READ\");\n \n-        authRoleTO = roleService.create(authRoleTO);\n+        Response response = roleService.create(authRoleTO);\n+        authRoleTO = getObject(response, RoleTO.class, roleService);\n         assertNotNull(authRoleTO);\n \n         // 1. create a schema (as admin)\n@@ -90,7 +91,7 @@ public void testUserSchemaAuthorization() {\n         schemaTO.setMandatoryCondition(\"false\");\n         schemaTO.setType(SchemaType.String);\n \n-        Response response = schemaService.create(AttributableType.USER, SchemaService.SchemaType.NORMAL, schemaTO);\n+        response = schemaService.create(AttributableType.USER, SchemaService.SchemaType.NORMAL, schemaTO);\n         SchemaTO newSchemaTO = getObject(response, SchemaTO.class, entitlementService);\n         assertEquals(schemaTO, newSchemaTO);\n \n@@ -411,15 +412,17 @@ public void issueSYNCOPE48() {\n         parentRole.addEntitlement(\"ROLE_1\");\n         parentRole.setParent(1L);\n \n-        parentRole = roleService.create(parentRole);\n+        Response response = roleService.create(parentRole);\n+        parentRole = getObject(response, RoleTO.class, roleService);\n         assertNotNull(parentRole);\n \n         // Child role, with no entitlements\n         RoleTO childRole = new RoleTO();\n         childRole.setName(\"childAdminRole\");\n         childRole.setParent(parentRole.getId());\n \n-        childRole = roleService.create(childRole);\n+        response = roleService.create(childRole);\n+        childRole = getObject(response, RoleTO.class, roleService);\n         assertNotNull(childRole);\n \n         // User with child role, created by admin"},{"sha":"21d518b85e3b190e313d90b49252be7f86abd8ef","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a352cfb20c982d8738aa353c399d0da59b58109/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a352cfb20c982d8738aa353c399d0da59b58109/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=2a352cfb20c982d8738aa353c399d0da59b58109","patch":"@@ -114,15 +114,15 @@ public void delete() {\n     \tNotificationTO notification = null;\n     \ttry {\n     \t\t// Check for pre-loaded notification: must be deleted for other create tests success\n-    \t\tnotification = notificationService.read(101L);\t\n+    \t\tnotification = notificationService.read(101L);\n     \t} catch (SyncopeClientCompositeErrorException e) {\n     \t\tassertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n     \t\tnotification = buildNotificationTO();\n             notification.setSelfAsRecipient(true);\n             Response response = notificationService.create(notification);\n             notification = response.readEntity(NotificationTO.class);\n     \t}\n-    \t\n+\n         NotificationTO deletedNotification = notificationService.delete(notification.getId());\n         assertNotNull(deletedNotification);\n "},{"sha":"bd1226ad1f10d243ef0ec6c39673507dbb9bcfc1","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":19,"deletions":8,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a352cfb20c982d8738aa353c399d0da59b58109/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a352cfb20c982d8738aa353c399d0da59b58109/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=2a352cfb20c982d8738aa353c399d0da59b58109","patch":"@@ -27,6 +27,9 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+\n+import javax.ws.rs.core.Response;\n+\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.RoleTO;\n@@ -95,7 +98,8 @@ public void create() {\n         roleTO.addVirtualAttribute(attributeTO(\"rvirtualdata\", \"rvirtualvalue\"));\n         roleTO.setRoleOwner(8L);\n \n-        roleTO = roleService.create(roleTO);\n+        Response response = roleService.create(roleTO);\n+        roleTO = getObject(response, RoleTO.class, roleService);\n         assertNotNull(roleTO);\n \n         assertNotNull(roleTO.getVirtualAttributeMap());\n@@ -124,7 +128,8 @@ public void createWithPasswordPolicy() {\n         roleTO.setParent(8L);\n         roleTO.setPasswordPolicy(4L);\n \n-        RoleTO actual = roleService.create(roleTO);\n+        Response response = roleService.create(roleTO);\n+        RoleTO actual = getObject(response, RoleTO.class, roleService);\n         assertNotNull(actual);\n \n         actual = roleService.read(actual.getId());\n@@ -147,7 +152,8 @@ public void delete() {\n \n         roleTO.addResource(\"resource-ldap\");\n \n-        roleTO = roleService.create(roleTO);\n+        Response response = roleService.create(roleTO);\n+        roleTO = getObject(response, RoleTO.class, roleService);\n         assertNotNull(roleTO);\n \n         RoleTO deletedRole = roleService.delete(roleTO.getId());\n@@ -218,7 +224,8 @@ public void selfRead() {\n     @Test\n     public void update() {\n         RoleTO roleTO = buildRoleTO(\"latestRole\");\n-        roleTO = roleService.create(roleTO);\n+        Response response = roleService.create(roleTO);\n+        roleTO = getObject(response, RoleTO.class, roleService);\n \n         assertEquals(1, roleTO.getAttributes().size());\n \n@@ -255,7 +262,8 @@ public void updateRemovingVirAttribute() {\n         RoleTO roleTO = buildBasicRoleTO(\"withvirtual\");\n         roleTO.addVirtualAttribute(attributeTO(\"rvirtualdata\", null));\n \n-        roleTO = roleService.create(roleTO);\n+        Response response = roleService.create(roleTO);\n+        roleTO = getObject(response, RoleTO.class, roleService);\n \n         assertNotNull(roleTO);\n         assertEquals(1, roleTO.getVirtualAttributes().size());\n@@ -275,7 +283,8 @@ public void updateRemovingDerAttribute() {\n         RoleTO roleTO = buildBasicRoleTO(\"withderived\");\n         roleTO.addDerivedAttribute(attributeTO(\"rderivedschema\", null));\n \n-        roleTO = roleService.create(roleTO);\n+        Response response = roleService.create(roleTO);\n+        roleTO = getObject(response, RoleTO.class, roleService);\n \n         assertNotNull(roleTO);\n         assertEquals(1, roleTO.getDerivedAttributes().size());\n@@ -332,7 +341,8 @@ public void issue178() {\n         String roleName = \"torename\" + getUUIDString();\n         roleTO.setName(roleName);\n \n-        RoleTO actual = roleService.create(roleTO);\n+        Response response = roleService.create(roleTO);\n+        RoleTO actual = getObject(response, RoleTO.class, roleService);\n \n         assertNotNull(actual);\n         assertEquals(roleName, actual.getName());\n@@ -356,7 +366,8 @@ public void issueSYNCOPE228() {\n         roleTO.addEntitlement(\"USER_READ\");\n         roleTO.addEntitlement(\"SCHEMA_READ\");\n \n-        roleTO = roleService.create(roleTO);\n+        Response response = roleService.create(roleTO);\n+        roleTO = getObject(response, RoleTO.class, roleService);\n         assertNotNull(roleTO);\n         assertNotNull(roleTO.getEntitlements());\n         assertFalse(roleTO.getEntitlements().isEmpty());"}]}