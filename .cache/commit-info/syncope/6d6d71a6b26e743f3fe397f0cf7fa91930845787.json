{"sha":"6d6d71a6b26e743f3fe397f0cf7fa91930845787","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZkNmQ3MWE2YjI2ZTc0M2YzZmUzOTdmMGNmN2ZhOTE5MzA4NDU3ODc=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-02-23T16:24:59Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-02-23T16:24:59Z"},"message":"SYNCOPE-7 #resolve #close #time 4d\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1292842 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d982ec796d7006867789a92109dc6d0e255fc2c4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d982ec796d7006867789a92109dc6d0e255fc2c4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6d6d71a6b26e743f3fe397f0cf7fa91930845787","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d6d71a6b26e743f3fe397f0cf7fa91930845787","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6d6d71a6b26e743f3fe397f0cf7fa91930845787","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d6d71a6b26e743f3fe397f0cf7fa91930845787/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"599e678a64ef2947665796c0c1908981339d86c7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/599e678a64ef2947665796c0c1908981339d86c7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/599e678a64ef2947665796c0c1908981339d86c7"}],"stats":{"total":1160,"additions":810,"deletions":350},"files":[{"sha":"fb53a43f8137fe50c30eae61731c078650a227b2","filename":"client/src/main/java/org/syncope/types/Entity.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FEntity.java?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.syncope.types;\n+\n+/**\n+ * Mapping type.\n+ */\n+public enum Entity {\n+\n+    USER, ROLE, MEMBERSHIP;\n+}"},{"sha":"26535cdb8e3b74478f0c4a841694a2d3e805a094","filename":"client/src/main/java/org/syncope/types/IntMappingType.java","status":"modified","additions":106,"deletions":19,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -18,26 +18,113 @@\n  */\n package org.syncope.types;\n \n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n+import java.util.EnumSet;\n+\n+/**\n+ * Internal attribute mapping type.\n  */\n public enum IntMappingType {\n \n-    UserSchema,\n-    UserDerivedSchema,\n-    UserVirtualSchema,\n-    SyncopeUserId,\n-    Password,\n-    Username;\n+    // Unfortunately enum type cannot be extended ...\n+    // -------------------------\n+    // User attribute types (the same in UserMappingType)\n+    // -------------------------\n+    UserSchema(Entity.USER),\n+    UserDerivedSchema(Entity.USER),\n+    UserVirtualSchema(Entity.USER),\n+    SyncopeUserId(Entity.USER),\n+    Password(Entity.USER),\n+    Username(Entity.USER),\n+    // -------------------------\n+    // Role attribute types (the same in RoleMappingType)\n+    // -------------------------\n+    RoleSchema(Entity.ROLE),\n+    RoleDerivedSchema(Entity.ROLE),\n+    RoleVirtualSchema(Entity.ROLE),\n+    // -------------------------\n+    // Membership attribute types (the same in MembershipMappingType)\n+    // -------------------------\n+    MembershipSchema(Entity.MEMBERSHIP),\n+    MembershipDerivedSchema(Entity.MEMBERSHIP),\n+    MembershipVirtualSchema(Entity.MEMBERSHIP);\n+\n+    private Entity entity;\n+\n+    private IntMappingType(final Entity entity) {\n+        this.entity = entity;\n+    }\n+\n+    public Entity getEntity() {\n+        return entity;\n+    }\n+\n+    /**\n+     * Get attribute types for a certain entity.\n+     *\n+     * @param entity entity.\n+     * @return set of attribute types.\n+     */\n+    public static EnumSet getAttributeTypes(final Entity entity) {\n+        switch (entity) {\n+            case ROLE:\n+                return EnumSet.allOf(RoleMappingType.class);\n+            case MEMBERSHIP:\n+                return EnumSet.allOf(MembershipMappingType.class);\n+            default:\n+                return EnumSet.allOf(UserMappingType.class);\n+        }\n+    }\n+\n+    /**\n+     * Check if attribute type belongs to the specified entity set.\n+     *\n+     * @param entity entity.\n+     * @param type attrybute type.\n+     * @return true if attribute type belongs to the specified entity set.\n+     */\n+    public static boolean contains(\n+            final Entity entity, final String type) {\n+\n+        switch (entity) {\n+            case ROLE:\n+                return RoleMappingType.valueOf(type) != null;\n+            case MEMBERSHIP:\n+                return MembershipMappingType.valueOf(type) != null;\n+            default:\n+                return UserMappingType.valueOf(type) != null;\n+        }\n+    }\n+\n+    /**\n+     * User attribute types.\n+     */\n+    enum UserMappingType {\n+\n+        UserSchema,\n+        UserDerivedSchema,\n+        UserVirtualSchema,\n+        SyncopeUserId,\n+        Password,\n+        Username;\n+    }\n+\n+    /**\n+     * Role attribute types.\n+     */\n+    private enum RoleMappingType {\n+\n+        RoleSchema,\n+        RoleDerivedSchema,\n+        RoleVirtualSchema;\n+    }\n+\n+    /**\n+     * Membership attribute types.\n+     */\n+    private enum MembershipMappingType {\n+\n+        MembershipSchema,\n+        MembershipDerivedSchema,\n+        MembershipVirtualSchema;\n+    }\n }"},{"sha":"dd994f3fba069868df904628f39807f3a7ab07d3","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -81,9 +81,9 @@ public class Resources extends BasePage {\n \n     private final ModalWindow editConnectorWin;\n \n-    private static final int WIN_HEIGHT = 500;\n+    private static final int WIN_HEIGHT = 600;\n \n-    private static final int WIN_WIDTH = 900;\n+    private static final int WIN_WIDTH = 950;\n \n     private WebMarkupContainer resourceContainer;\n "},{"sha":"bef7f3167fbb127fd1737a5c87e14c152b12a806","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":254,"deletions":168,"changes":422,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.EnumSet;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -36,8 +37,6 @@\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -56,10 +55,17 @@\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n import org.syncope.types.ConnConfProperty;\n+import org.syncope.types.Entity;\n import org.syncope.types.IntMappingType;\n \n+/**\n+ * Resource mapping panel.\n+ */\n public class ResourceMappingPanel extends Panel {\n \n+    /**\n+     * Serial verion UID.\n+     */\n     private static final long serialVersionUID = -7982691107029848579L;\n \n     /**\n@@ -68,62 +74,96 @@ public class ResourceMappingPanel extends Panel {\n     protected static final Logger LOG =\n             LoggerFactory.getLogger(ResourceMappingPanel.class);\n \n+    /**\n+     * Schema rest client.\n+     */\n     @SpringBean\n-    private SchemaRestClient schemaRestClient;\n+    private transient SchemaRestClient schemaRestClient;\n \n+    /**\n+     * ConnInstance rest client.\n+     */\n     @SpringBean\n-    private ConnectorRestClient connRestClient;\n+    private transient ConnectorRestClient connRestClient;\n \n-    private List<String> uSchemaAttrNames;\n+    /**\n+     * Resource schema name.\n+     */\n+    private List<String> schemaNames;\n \n-    private List<String> uDerSchemaAttrNames;\n+    /**\n+     * Internal attribute types.\n+     */\n+    private List<IntMappingType> attrTypes = new ArrayList<IntMappingType>();\n \n-    private List<String> uVirSchemaAttrNames;\n+    /**\n+     * Add mapping button.\n+     */\n+    private final AjaxButton addMappingBtn;\n \n-    private List<String> resourceSchemaNames;\n+    /**\n+     * All mappings.\n+     */\n+    private final ListView mappings;\n \n-    private AjaxButton addSchemaMappingBtn;\n+    /**\n+     * External resource to be updated.\n+     */\n+    private final ResourceTO resourceTO;\n+\n+    /**\n+     * Mapping container.\n+     */\n+    private final WebMarkupContainer mappingContainer;\n+\n+    /**\n+     * Create flag.\n+     */\n+    private final boolean createFlag;\n \n-    private ListView mappings;\n+    /**\n+     * OnChange event name.\n+     */\n+    private static String onchange = \"onchange\";\n \n-    private ResourceTO resourceTO;\n+    /**\n+     * Mapping field style sheet.\n+     */\n+    private static String fieldStyle =\n+            \"ui-widget-content ui-corner-all short_fixedsize\";\n \n-    private WebMarkupContainer mappingContainer;\n+    /**\n+     * Mapping field style sheet.\n+     */\n+    private static String defFieldStyle =\n+            \"ui-widget-content ui-corner-all\";\n \n-    private boolean createFlag;\n+    /**\n+     * Mapping field style sheet.\n+     */\n+    private static String shortFieldStyle =\n+            \"ui-widget-content ui-corner-all veryshort_fixedsize\";\n \n+    /**\n+     * Attribute Mapping Panel.\n+     *\n+     * @param panelid panel id.\n+     * @param resourceTO external resource.\n+     * @param createFlag create flag.\n+     */\n     public ResourceMappingPanel(\n-            final String id,\n+            final String panelid,\n             final ResourceTO resourceTO,\n             final boolean createFlag) {\n \n-        super(id);\n+        super(panelid);\n         setOutputMarkupId(true);\n \n         this.resourceTO = resourceTO;\n         this.createFlag = createFlag;\n \n         initResourceSchemaNames();\n \n-        uSchemaAttrNames =\n-                schemaRestClient.getSchemaNames(\"user\");\n-        uDerSchemaAttrNames =\n-                schemaRestClient.getDerivedSchemaNames(\"user\");\n-        uVirSchemaAttrNames =\n-                schemaRestClient.getVirtualSchemaNames(\"user\");\n-\n-        final IModel<List<IntMappingType>> intMappingTypes =\n-                new LoadableDetachableModel<List<IntMappingType>>() {\n-\n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n-\n-                    @Override\n-                    protected List<IntMappingType> load() {\n-                        return Arrays.asList(IntMappingType.values());\n-                    }\n-                };\n-\n         final AjaxTextFieldPanel accountLink = new AjaxTextFieldPanel(\n                 \"accountLink\",\n                 new ResourceModel(\"accountLink\", \"accountLink\").getObject(),\n@@ -137,6 +177,9 @@ protected List<IntMappingType> load() {\n         mappings = new ListView<SchemaMappingTO>(\n                 \"mappings\", resourceTO.getMappings()) {\n \n+            /**\n+             * Serial version UID.\n+             */\n             private static final long serialVersionUID = 4949588177564901031L;\n \n             @Override\n@@ -145,6 +188,11 @@ protected void populateItem(\n \n                 final SchemaMappingTO mappingTO = item.getModelObject();\n \n+                final Entity entity = mappingTO.getIntMappingType() == null\n+                        ? null : mappingTO.getIntMappingType().getEntity();\n+\n+                attrTypes = getAttributeTypes(entity);\n+\n                 item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n                         new Model(Boolean.FALSE)) {\n \n@@ -201,73 +249,81 @@ public CharSequence preDecorateScript(\n                         getString(\"intAttrNames\"),\n                         new PropertyModel(mappingTO, \"intAttrName\"),\n                         true);\n-                intAttrNames.setChoices(resourceSchemaNames);\n+                intAttrNames.setChoices(schemaNames);\n                 intAttrNames.setRequired(true);\n-                intAttrNames.setStyleShet(\n-                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+                intAttrNames.setStyleShet(fieldStyle);\n \n-                if (mappingTO.getIntMappingType() == null) {\n-                    intAttrNames.setChoices(Collections.EMPTY_LIST);\n-                } else {\n-                    switch (mappingTO.getIntMappingType()) {\n-                        case UserSchema:\n-                            intAttrNames.setChoices(uSchemaAttrNames);\n-                            break;\n-\n-                        case UserDerivedSchema:\n-                            intAttrNames.setChoices(uDerSchemaAttrNames);\n-                            break;\n-\n-                        case UserVirtualSchema:\n-                            intAttrNames.setChoices(uVirSchemaAttrNames);\n-                            break;\n-\n-                        case SyncopeUserId:\n-                            intAttrNames.setEnabled(false);\n-                            intAttrNames.setRequired(false);\n-                            intAttrNames.setChoices(Collections.EMPTY_LIST);\n-                            mappingTO.setIntAttrName(\"SyncopeUserId\");\n-                            break;\n-\n-                        case Password:\n-                            intAttrNames.setEnabled(false);\n-                            intAttrNames.setRequired(false);\n-                            intAttrNames.setChoices(Collections.EMPTY_LIST);\n-                            mappingTO.setIntAttrName(\"Password\");\n-                            break;\n-\n-                        case Username:\n-                            intAttrNames.setEnabled(false);\n-                            intAttrNames.setRequired(false);\n-                            intAttrNames.setChoices(Collections.EMPTY_LIST);\n-                            mappingTO.setIntAttrName(\"Username\");\n-                            break;\n-\n-                        default:\n-                            intAttrNames.setChoices(Collections.EMPTY_LIST);\n-                    }\n-                }\n+                setAttrNames(mappingTO.getIntMappingType(), intAttrNames);\n \n                 item.add(intAttrNames);\n \n-                final IntMappingTypesDropDownChoice mappingTypesPanel =\n-                        new IntMappingTypesDropDownChoice(\n+\n+                final AjaxDropDownChoicePanel typesPanel =\n+                        new AjaxDropDownChoicePanel(\n                         \"intMappingTypes\",\n                         new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").\n                         getObject(),\n                         new PropertyModel<IntMappingType>(\n-                        mappingTO, \"intMappingType\"),\n-                        intAttrNames);\n+                        mappingTO, \"intMappingType\"), false);\n+\n+                typesPanel.getField().add(\n+                        new AjaxFormComponentUpdatingBehavior(onchange) {\n+\n+                            private static final long serialVersionUID =\n+                                    -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(\n+                                    final AjaxRequestTarget target) {\n+                                setAttrNames(\n+                                        (IntMappingType) typesPanel.\n+                                        getModelObject(), intAttrNames);\n+                                target.add(intAttrNames);\n+                            }\n+                        });\n+\n+                typesPanel.setRequired(true);\n+                typesPanel.setChoices(attrTypes);\n+                typesPanel.setStyleShet(fieldStyle);\n+                item.add(typesPanel);\n+\n+                final AjaxDropDownChoicePanel mappingTypesPanel =\n+                        new AjaxDropDownChoicePanel(\n+                        \"mappingTypes\",\n+                        new ResourceModel(\"mappingTypes\", \"mappingTypes\").\n+                        getObject(), new Model(entity), false);\n+\n+                mappingTypesPanel.setChoices(Arrays.asList(Entity.values()));\n+                mappingTypesPanel.setStyleShet(defFieldStyle);\n \n-                mappingTypesPanel.setRequired(true);\n-                mappingTypesPanel.setChoices(intMappingTypes.getObject());\n-                mappingTypesPanel.setStyleShet(\n-                        \"ui-widget-content ui-corner-all short_fixedsize\");\n                 item.add(mappingTypesPanel);\n \n+                mappingTypesPanel.getField().add(\n+                        new AjaxFormComponentUpdatingBehavior(onchange) {\n+\n+                            private static final long serialVersionUID =\n+                                    -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(\n+                                    final AjaxRequestTarget target) {\n+\n+                                attrTypes = getAttributeTypes(\n+                                        (Entity) mappingTypesPanel.\n+                                        getModelObject());\n+\n+                                typesPanel.setChoices(attrTypes);\n+                                intAttrNames.setChoices(Collections.EMPTY_LIST);\n+\n+                                target.add(typesPanel.getField());\n+                                target.add(intAttrNames.getField());\n+\n+                            }\n+                        });\n+\n                 final FieldPanel extAttrName;\n \n-                if (resourceSchemaNames.isEmpty()) {\n+                if (schemaNames.isEmpty()) {\n                     extAttrName = new AjaxTextFieldPanel(\n                             \"extAttrName\",\n                             new ResourceModel(\"extAttrNames\", \"extAttrNames\").\n@@ -284,7 +340,7 @@ public CharSequence preDecorateScript(\n                             new PropertyModel(mappingTO, \"extAttrName\"),\n                             true);\n                     ((AjaxDropDownChoicePanel) extAttrName).setChoices(\n-                            resourceSchemaNames);\n+                            schemaNames);\n \n                 }\n \n@@ -294,26 +350,23 @@ public CharSequence preDecorateScript(\n                 extAttrName.setRequired(required);\n                 extAttrName.setEnabled(required);\n \n-                extAttrName.setStyleShet(\n-                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+                extAttrName.setStyleShet(fieldStyle);\n                 item.add(extAttrName);\n \n-                final AjaxTextFieldPanel mandatoryCondition =\n+                final AjaxTextFieldPanel mandatory =\n                         new AjaxTextFieldPanel(\n                         \"mandatoryCondition\",\n                         new ResourceModel(\n                         \"mandatoryCondition\", \"mandatoryCondition\").getObject(),\n-                        new PropertyModel(mappingTO,\n-                        \"mandatoryCondition\"),\n+                        new PropertyModel(mappingTO, \"mandatoryCondition\"),\n                         true);\n \n-                mandatoryCondition.setChoices(\n+                mandatory.setChoices(\n                         Arrays.asList(new String[]{\"true\", \"false\"}));\n \n-                mandatoryCondition.setStyleShet(\n-                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+                mandatory.setStyleShet(shortFieldStyle);\n \n-                item.add(mandatoryCondition);\n+                item.add(mandatory);\n \n                 final AjaxCheckBoxPanel accountId =\n                         new AjaxCheckBoxPanel(\n@@ -322,7 +375,7 @@ public CharSequence preDecorateScript(\n                         new PropertyModel(mappingTO, \"accountid\"), false);\n \n                 accountId.getField().add(\n-                        new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+                        new AjaxFormComponentUpdatingBehavior(onchange) {\n \n                             private static final long serialVersionUID =\n                                     -1107858522700306810L;\n@@ -349,14 +402,14 @@ protected void onUpdate(\n                         new PropertyModel(mappingTO, \"password\"), true);\n \n                 password.getField().add(\n-                        new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+                        new AjaxFormComponentUpdatingBehavior(onchange) {\n \n                             private static final long serialVersionUID =\n                                     -1107858522700306810L;\n \n                             @Override\n                             protected void onUpdate(\n-                                    AjaxRequestTarget target) {\n+                                    final AjaxRequestTarget target) {\n                                 extAttrName.setEnabled(\n                                         !mappingTO.isAccountid()\n                                         && !password.getModelObject());\n@@ -374,7 +427,7 @@ protected void onUpdate(\n         mappings.setReuseItems(true);\n         mappingContainer.add(mappings);\n \n-        addSchemaMappingBtn = new IndicatingAjaxButton(\n+        addMappingBtn = new IndicatingAjaxButton(\n                 \"addUserSchemaMappingBtn\", new ResourceModel(\"add\")) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n@@ -388,74 +441,16 @@ protected void onSubmit(final AjaxRequestTarget target,\n             }\n \n             @Override\n-            protected void onError(AjaxRequestTarget target, Form<?> form) {\n+            protected void onError(\n+                    final AjaxRequestTarget target, final Form<?> form) {\n                 // ignore errors\n             }\n         };\n \n-        addSchemaMappingBtn.setDefaultFormProcessing(false);\n-        addSchemaMappingBtn.setEnabled(!createFlag);\n-        mappingContainer.add(addSchemaMappingBtn);\n-\n-    }\n-\n-    /**\n-     * Extension class of DropDownChoice. It's purposed for storing values in\n-     * the corresponding property model after pressing 'Add' button.\n-     */\n-    private class IntMappingTypesDropDownChoice\n-            extends AjaxDropDownChoicePanel {\n-\n-        private static final long serialVersionUID = -2855668124505116627L;\n-\n-        public IntMappingTypesDropDownChoice(\n-                final String id,\n-                final String name,\n-                final PropertyModel<IntMappingType> model,\n-                final AjaxDropDownChoicePanel<String> chooserToPopulate) {\n-\n-            super(id, name, model, false);\n-\n-            field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n-\n-                @Override\n-                protected void onUpdate(final AjaxRequestTarget target) {\n-\n-                    chooserToPopulate.setRequired(true);\n-                    chooserToPopulate.setEnabled(true);\n+        addMappingBtn.setDefaultFormProcessing(false);\n+        addMappingBtn.setEnabled(!createFlag);\n+        mappingContainer.add(addMappingBtn);\n \n-                    final List<String> result;\n-\n-                    switch (model.getObject()) {\n-                        case UserSchema:\n-                            result = uSchemaAttrNames;\n-                            break;\n-\n-                        case UserDerivedSchema:\n-                            result = uDerSchemaAttrNames;\n-                            break;\n-\n-                        case UserVirtualSchema:\n-                            result = uVirSchemaAttrNames;\n-                            break;\n-\n-                        case SyncopeUserId:\n-                        case Password:\n-                        case Username:\n-                        default:\n-                            chooserToPopulate.setRequired(false);\n-                            chooserToPopulate.setEnabled(false);\n-                            result = Collections.EMPTY_LIST;\n-                    }\n-\n-                    chooserToPopulate.setChoices(result);\n-                    target.add(chooserToPopulate);\n-                }\n-            });\n-        }\n     }\n \n     /**\n@@ -472,12 +467,12 @@ private void initResourceSchemaNames() {\n             connInstanceTO.setConfiguration(\n                     resourceTO.getConnConfProperties());\n \n-            resourceSchemaNames = getResourceSchemaNames(\n+            schemaNames = getResourceSchemaNames(\n                     resourceTO.getConnectorId(),\n                     resourceTO.getConnConfProperties());\n \n         } else {\n-            resourceSchemaNames = Collections.EMPTY_LIST;\n+            schemaNames = Collections.EMPTY_LIST;\n         }\n     }\n \n@@ -520,15 +515,106 @@ public void onEvent(final IEvent<?> event) {\n \n             mappings.removeAll();\n \n-            addSchemaMappingBtn.setEnabled(\n+            addMappingBtn.setEnabled(\n                     resourceTO.getConnectorId() != null\n                     && resourceTO.getConnectorId() > 0);\n \n-            resourceSchemaNames = getResourceSchemaNames(\n+            schemaNames = getResourceSchemaNames(\n                     resourceTO.getConnectorId(),\n                     new HashSet<ConnConfProperty>(conf));\n \n             target.add(mappingContainer);\n         }\n     }\n+\n+    /**\n+     * Seta attribute names for a drop down chice list.\n+     *\n+     * @param attrType attribute type.\n+     * @param toBeUpdated drop down choice to be updated.\n+     */\n+    private void setAttrNames(\n+            final IntMappingType attrType,\n+            final AjaxDropDownChoicePanel toBeUpdated) {\n+\n+        toBeUpdated.setRequired(true);\n+        toBeUpdated.setEnabled(true);\n+\n+        if (attrType == null || attrType.getEntity() == null) {\n+            toBeUpdated.setChoices(Collections.EMPTY_LIST);\n+        } else {\n+\n+            switch (attrType) {\n+                // user attribute names\n+                case UserSchema:\n+                case RoleSchema:\n+                case MembershipSchema:\n+                    toBeUpdated.setChoices(\n+                            schemaRestClient.getSchemaNames(\n+                            attrType.getEntity().toString().toLowerCase()));\n+                    break;\n+\n+                case UserDerivedSchema:\n+                case RoleDerivedSchema:\n+                case MembershipDerivedSchema:\n+                    toBeUpdated.setChoices(\n+                            schemaRestClient.getDerivedSchemaNames(\n+                            attrType.getEntity().toString().toLowerCase()));\n+                    break;\n+\n+                case UserVirtualSchema:\n+                case RoleVirtualSchema:\n+                case MembershipVirtualSchema:\n+                    toBeUpdated.setChoices(\n+                            schemaRestClient.getVirtualSchemaNames(\n+                            attrType.getEntity().toString().toLowerCase()));\n+                    break;\n+\n+                case SyncopeUserId:\n+                    toBeUpdated.setEnabled(false);\n+                    toBeUpdated.setRequired(false);\n+                    toBeUpdated.setChoices(Collections.EMPTY_LIST);\n+                    break;\n+\n+                case Password:\n+                    toBeUpdated.setEnabled(false);\n+                    toBeUpdated.setRequired(false);\n+                    toBeUpdated.setChoices(Collections.EMPTY_LIST);\n+                    break;\n+\n+                case Username:\n+                    toBeUpdated.setEnabled(false);\n+                    toBeUpdated.setRequired(false);\n+                    toBeUpdated.setChoices(Collections.EMPTY_LIST);\n+                    break;\n+\n+                default:\n+                    toBeUpdated.setRequired(false);\n+                    toBeUpdated.setEnabled(false);\n+                    toBeUpdated.setChoices(Collections.EMPTY_LIST);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get all attribute types from a selected attribute type.\n+     *\n+     * @param entity entity.\n+     * @return all attribute types.\n+     */\n+    private List<IntMappingType> getAttributeTypes(final Entity entity) {\n+        final List<IntMappingType> res = new ArrayList<IntMappingType>();\n+\n+        if (entity != null) {\n+            final EnumSet types = IntMappingType.getAttributeTypes(\n+                    Entity.valueOf(entity.toString()));\n+\n+            for (Object type : types) {\n+                res.add(IntMappingType.valueOf(\n+                        type.toString()));\n+            }\n+        }\n+\n+        return res;\n+    }\n }"},{"sha":"d3f97efcba57f0d9ba993b917c3bd4ac55e5c715","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -28,9 +28,10 @@ edit_attribute=Edit resource\n title=Resource\n extAttrNames=External Attributes\n intMappingTypes=Internal mapping types\n+entity=Entity\n roleSchema=Role Schema\n-accountId=Account Id\n-mandatoryCondition=Mandatory condition\n+accountId=AccountId\n+mandatoryCondition=Mandatory\n password=Password\n mappingUserSchema=Mapping User Schema\n mappingRoleSchema=Mapping Role Schema"},{"sha":"039ba3c9aedb271c07d5a87182792b9861dd6838","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -29,9 +29,10 @@ edit_attribute=Modifica risorsa\n title=Risorsa\n extAttrNames=Attributi esterni\n intMappingTypes=Tipo mapping interno\n+entity=Entit&agrave;\n roleSchema=Schema Ruolo\n-accountId=Id Account\n-mandatoryCondition=Condizione d'obbligatoriet\\u00e0\n+accountId=AccountId\n+mandatoryCondition=Obbligatorio\n password=Password\n mappingUserSchema=Mapping User Schema\n mappingRoleSchema=Mapping Role Schema"},{"sha":"a69c225eda56b9463aa4cd6ef694566f112b9585","filename":"console/src/main/resources/org/syncope/console/pages/panels/ResourceMappingPanel.html","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -25,6 +25,7 @@\n                         <thead>\n                             <tr class=\"ui-widget-header\">\n                                 <th><wicket:message key=\"delete\"/></th>\n+                        <th><wicket:message key=\"entity\"/></th>\n                         <th><wicket:message key=\"intMappingTypes\"/></th>\n                         <th><wicket:message key=\"intAttrNames\"/></th>\n                         <th><wicket:message key=\"extAttrNames\"/></th>\n@@ -46,6 +47,9 @@\n                                 <td align=\"center\" valign=\"middle\">\n                                     <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n                                 </td>\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <span wicket:id=\"mappingTypes\">[mappingTypes]</span>\n+                                </td>\n                                 <td align=\"center\" valign=\"middle\">\n                                     <span wicket:id=\"intMappingTypes\">[intMappingTypes]</span>\n                                 </td>"},{"sha":"372ca2d65da02c29404183797d8ff8583340e820","filename":"console/src/main/webapp/css/fieldstyle.css","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Ffieldstyle.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Ffieldstyle.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fcss%2Ffieldstyle.css?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -36,6 +36,10 @@\n     width: 150px;\n }\n \n+.veryshort_fixedsize{\n+    width: 70px;\n+}\n+\n .all_dynamicsize{\n     width: 100%;\n }"},{"sha":"781c17811de21709d781f7f252d5545dbf6afff8","filename":"core/src/main/java/org/syncope/core/propagation/PropagationManager.java","status":"modified","additions":213,"deletions":132,"changes":345,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -26,6 +26,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n import java.util.Set;\n import javassist.NotFoundException;\n import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n@@ -48,19 +49,27 @@\n import org.syncope.client.to.AttributeTO;\n import org.syncope.core.init.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n+import org.syncope.core.persistence.beans.AbstractAttributable;\n+import org.syncope.core.persistence.beans.AbstractDerAttr;\n import org.syncope.core.persistence.beans.AbstractSchema;\n+import org.syncope.core.persistence.beans.AbstractVirAttr;\n import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.TaskExec;\n+import org.syncope.core.persistence.beans.membership.MDerSchema;\n+import org.syncope.core.persistence.beans.membership.MSchema;\n+import org.syncope.core.persistence.beans.membership.MVirSchema;\n+import org.syncope.core.persistence.beans.membership.Membership;\n+import org.syncope.core.persistence.beans.role.RDerSchema;\n+import org.syncope.core.persistence.beans.role.RSchema;\n+import org.syncope.core.persistence.beans.role.RVirSchema;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UAttr;\n import org.syncope.core.persistence.beans.user.UAttrValue;\n-import org.syncope.core.persistence.beans.user.UDerAttr;\n import org.syncope.core.persistence.beans.user.UDerSchema;\n import org.syncope.core.persistence.beans.user.USchema;\n-import org.syncope.core.persistence.beans.user.UVirAttr;\n import org.syncope.core.persistence.beans.user.UVirSchema;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n@@ -408,14 +417,32 @@ private Class getIntMappingTypeClass(\n             case UserSchema:\n                 result = USchema.class;\n                 break;\n+            case RoleSchema:\n+                result = RSchema.class;\n+                break;\n+            case MembershipSchema:\n+                result = MSchema.class;\n+                break;\n \n             case UserDerivedSchema:\n                 result = UDerSchema.class;\n                 break;\n+            case RoleDerivedSchema:\n+                result = RDerSchema.class;\n+                break;\n+            case MembershipDerivedSchema:\n+                result = MDerSchema.class;\n+                break;\n \n             case UserVirtualSchema:\n                 result = UVirSchema.class;\n                 break;\n+            case RoleVirtualSchema:\n+                result = RVirSchema.class;\n+                break;\n+            case MembershipVirtualSchema:\n+                result = MVirSchema.class;\n+                break;\n \n             default:\n                 result = null;\n@@ -440,163 +467,220 @@ private Map.Entry<String, Attribute> prepareAttribute(\n             final String password)\n             throws ClassNotFoundException {\n \n+        final List<AbstractAttributable> attributables =\n+                new ArrayList<AbstractAttributable>();\n+\n+        switch (mapping.getIntMappingType().getEntity()) {\n+            case USER:\n+                attributables.addAll(Collections.singleton(user));\n+                break;\n+            case ROLE:\n+                final List<Membership> memberships = user.getMemberships();\n+                for (Membership membership : memberships) {\n+                    attributables.add(membership.getSyncopeRole());\n+                }\n+                break;\n+            case MEMBERSHIP:\n+                attributables.addAll(user.getMemberships());\n+                break;\n+            default:\n+        }\n+\n+        final Entry<AbstractSchema, List<AbstractAttrValue>> entry =\n+                getAttributeValues(mapping, attributables, password);\n+\n+        final List<AbstractAttrValue> values = entry.getValue();\n+        final AbstractSchema schema = entry.getKey();\n+        final SchemaType schemaType =\n+                schema == null ? SchemaType.String : schema.getType();\n+\n+        LOG.debug(\"Define mapping for: \"\n+                + \"\\n* ExtAttrName \" + mapping.getExtAttrName()\n+                + \"\\n* is accountId \" + mapping.isAccountid()\n+                + \"\\n* is password \" + (mapping.isPassword()\n+                || mapping.getIntMappingType().equals(\n+                IntMappingType.Password))\n+                + \"\\n* mandatory condition \"\n+                + mapping.getMandatoryCondition()\n+                + \"\\n* Schema \" + mapping.getIntAttrName()\n+                + \"\\n* IntMappingType \"\n+                + mapping.getIntMappingType().toString()\n+                + \"\\n* ClassType \" + schemaType.getClassName()\n+                + \"\\n* Values \" + values);\n+\n+        List<Object> objValues = new ArrayList<Object>();\n+        for (AbstractAttrValue value : values) {\n+            if (FrameworkUtil.isSupportedAttributeType(\n+                    Class.forName(schemaType.getClassName()))) {\n+                objValues.add(value.getValue());\n+            } else {\n+                objValues.add(value.getValueAsString());\n+            }\n+        }\n+\n+        Map.Entry<String, Attribute> res;\n+\n+        if (mapping.isAccountid()) {\n+\n+            res = new DefaultMapEntry(\n+                    objValues.iterator().next().toString(), null);\n+\n+        } else if (mapping.isPassword()) {\n+\n+            res = new DefaultMapEntry(null,\n+                    AttributeBuilder.buildPassword(\n+                    objValues.iterator().next().toString().toCharArray()));\n+\n+        } else {\n+            if (schema != null && schema.isMultivalue()) {\n+                res = new DefaultMapEntry(null,\n+                        AttributeBuilder.build(mapping.getExtAttrName(),\n+                        objValues));\n+\n+            } else {\n+                res = new DefaultMapEntry(null,\n+                        objValues.isEmpty()\n+                        ? AttributeBuilder.build(mapping.getExtAttrName())\n+                        : AttributeBuilder.build(mapping.getExtAttrName(),\n+                        objValues.iterator().next()));\n+            }\n+        }\n+\n+        return res;\n+    }\n+\n+    /**\n+     * Get attribute values.\n+     *\n+     * @param mapping mapping.\n+     * @param attributables list of attributables.\n+     * @param password password.\n+     * @return schema and attribute values.\n+     */\n+    private Entry<AbstractSchema, List<AbstractAttrValue>> getAttributeValues(\n+            final SchemaMapping mapping,\n+            final List<AbstractAttributable> attributables,\n+            final String password) {\n+\n+\n+        LOG.debug(\"Get attributes for '{}' and mapping type '{}'\",\n+                attributables, mapping.getIntMappingType());\n+\n         AbstractSchema schema = null;\n-        SchemaType schemaType = null;\n-        List<AbstractAttrValue> values = null;\n+\n+        List<AbstractAttrValue> values = new ArrayList<AbstractAttrValue>();\n         AbstractAttrValue attrValue;\n+\n         switch (mapping.getIntMappingType()) {\n             case UserSchema:\n+            case RoleSchema:\n+            case MembershipSchema:\n                 schema = schemaDAO.find(mapping.getIntAttrName(),\n-                        getIntMappingTypeClass(\n-                        mapping.getIntMappingType()));\n-                schemaType = schema.getType();\n-\n-                UAttr attr = user.getAttribute(mapping.getIntAttrName());\n-                values = attr != null\n-                        ? (schema.isUniqueConstraint()\n-                        ? Collections.singletonList(attr.getUniqueValue())\n-                        : attr.getValues())\n-                        : Collections.EMPTY_LIST;\n-\n-                LOG.debug(\"Retrieved attribute {}\", attr\n-                        + \"\\n* IntAttrName {}\"\n-                        + \"\\n* IntMappingType {}\"\n-                        + \"\\n* Attribute values {}\",\n-                        new Object[]{mapping.getIntAttrName(),\n-                            mapping.getIntMappingType(), values});\n-                break;\n-\n-            case UserVirtualSchema:\n-                schemaType = SchemaType.String;\n+                        getIntMappingTypeClass(mapping.getIntMappingType()));\n \n-                UVirAttr virAttr = user.getVirtualAttribute(\n-                        mapping.getIntAttrName());\n+                for (AbstractAttributable attributable : attributables) {\n+                    final UAttr attr =\n+                            attributable.getAttribute(mapping.getIntAttrName());\n \n-                values = new ArrayList<AbstractAttrValue>();\n-                if (virAttr != null && virAttr.getValues() != null) {\n-                    for (String value : virAttr.getValues()) {\n-                        attrValue = new UAttrValue();\n-                        attrValue.setStringValue(value);\n-                        values.add(attrValue);\n+                    if (attr != null && attr.getValues() != null) {\n+                        values.addAll(schema.isUniqueConstraint()\n+                                ? Collections.singletonList(\n+                                attr.getUniqueValue())\n+                                : attr.getValues());\n                     }\n+\n+                    LOG.debug(\"Retrieved attribute {}\"\n+                            + \"\\n* IntAttrName {}\"\n+                            + \"\\n* IntMappingType {}\"\n+                            + \"\\n* Attribute values {}\",\n+                            new Object[]{attr, mapping.getIntAttrName(),\n+                                mapping.getIntMappingType(), values});\n                 }\n \n-                LOG.debug(\"Retrieved virtual attribute {}\", virAttr\n-                        + \"\\n* IntAttrName {}\"\n-                        + \"\\n* IntMappingType {}\"\n-                        + \"\\n* Attribute values {}\",\n-                        new Object[]{mapping.getIntAttrName(),\n-                            mapping.getIntMappingType(), values});\n+                break;\n+\n+            case UserVirtualSchema:\n+            case RoleVirtualSchema:\n+            case MembershipVirtualSchema:\n+\n+                for (AbstractAttributable attributable : attributables) {\n+                    AbstractVirAttr virAttr = attributable.getVirtualAttribute(\n+                            mapping.getIntAttrName());\n+\n+                    if (virAttr != null && virAttr.getValues() != null) {\n+                        for (String value : virAttr.getValues()) {\n+                            attrValue = new UAttrValue();\n+                            attrValue.setStringValue(value);\n+                            values.add(attrValue);\n+                        }\n+                    }\n+\n+                    LOG.debug(\"Retrieved virtual attribute {}\"\n+                            + \"\\n* IntAttrName {}\"\n+                            + \"\\n* IntMappingType {}\"\n+                            + \"\\n* Attribute values {}\",\n+                            new Object[]{virAttr, mapping.getIntAttrName(),\n+                                mapping.getIntMappingType(), values});\n+                }\n                 break;\n \n             case UserDerivedSchema:\n-                schemaType = SchemaType.String;\n+            case RoleDerivedSchema:\n+            case MembershipDerivedSchema:\n+                for (AbstractAttributable attributable : attributables) {\n+                    AbstractDerAttr derAttr = attributable.getDerivedAttribute(\n+                            mapping.getIntAttrName());\n \n-                UDerAttr derAttr = user.getDerivedAttribute(\n-                        mapping.getIntAttrName());\n-                attrValue = new UAttrValue();\n-                if (derAttr != null) {\n-                    attrValue.setStringValue(\n-                            derAttr.getValue(user.getAttributes()));\n+                    if (derAttr != null) {\n+                        attrValue = new UAttrValue();\n+                        attrValue.setStringValue(\n+                                derAttr.getValue(attributable.getAttributes()));\n+                        values.add(attrValue);\n+                    }\n \n-                    values = Collections.singletonList(attrValue);\n-                } else {\n-                    values = Collections.EMPTY_LIST;\n+                    LOG.debug(\"Retrieved attribute {}\"\n+                            + \"\\n* IntAttrName {}\"\n+                            + \"\\n* IntMappingType {}\"\n+                            + \"\\n* Attribute values {}\",\n+                            new Object[]{derAttr, mapping.getIntAttrName(),\n+                                mapping.getIntMappingType(), values});\n                 }\n-\n-                LOG.debug(\"Retrieved attribute {}\", derAttr\n-                        + \"\\n* IntAttrName {}\"\n-                        + \"\\n* IntMappingType {}\"\n-                        + \"\\n* Attribute values {}\",\n-                        new Object[]{mapping.getIntAttrName(),\n-                            mapping.getIntMappingType(), values});\n                 break;\n \n-\n             case Username:\n-                schema = null;\n-                schemaType = SchemaType.String;\n-\n-                attrValue = new UAttrValue();\n-                attrValue.setStringValue(user.getUsername());\n+                for (AbstractAttributable attributable : attributables) {\n+                    attrValue = new UAttrValue();\n+                    attrValue.setStringValue(\n+                            ((SyncopeUser) attributable).getUsername());\n \n-                values = Collections.singletonList(attrValue);\n+                    values.add(attrValue);\n+                }\n                 break;\n \n             case SyncopeUserId:\n-                schema = null;\n-                schemaType = SchemaType.String;\n-                attrValue = new UAttrValue();\n-                attrValue.setStringValue(user.getId().toString());\n-                values = Collections.singletonList(attrValue);\n+                for (AbstractAttributable attributable : attributables) {\n+                    attrValue = new UAttrValue();\n+                    attrValue.setStringValue(attributable.getId().toString());\n+                    values.add(attrValue);\n+                }\n                 break;\n \n             case Password:\n-                schema = null;\n-                schemaType = SchemaType.String;\n                 attrValue = new UAttrValue();\n \n                 if (password != null) {\n                     attrValue.setStringValue(password);\n                 }\n \n-                values = Collections.singletonList(attrValue);\n+                values.add(attrValue);\n                 break;\n \n             default:\n         }\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Define mapping for: \"\n-                    + \"\\n* ExtAttrName \" + mapping.getExtAttrName()\n-                    + \"\\n* is accountId \" + mapping.isAccountid()\n-                    + \"\\n* is password \" + (mapping.isPassword()\n-                    || mapping.getIntMappingType().equals(\n-                    IntMappingType.Password))\n-                    + \"\\n* mandatory condition \"\n-                    + mapping.getMandatoryCondition()\n-                    + \"\\n* Schema \" + mapping.getIntAttrName()\n-                    + \"\\n* IntMappingType \"\n-                    + mapping.getIntMappingType().toString()\n-                    + \"\\n* ClassType \" + schemaType.getClassName()\n-                    + \"\\n* Values \" + values);\n-        }\n+        LOG.debug(\"Retrived values '{}'\", values);\n \n-        List<Object> objValues = new ArrayList<Object>();\n-        for (AbstractAttrValue value : values) {\n-            if (!FrameworkUtil.isSupportedAttributeType(\n-                    Class.forName(schemaType.getClassName()))) {\n-\n-                objValues.add(value.getValueAsString());\n-            } else {\n-                objValues.add(value.getValue());\n-            }\n-        }\n-\n-        String accountId = null;\n-        if (mapping.isAccountid()) {\n-            accountId = objValues.iterator().next().toString();\n-        }\n-\n-        Attribute attribute = null;\n-        if (mapping.isPassword()) {\n-            attribute = AttributeBuilder.buildPassword(\n-                    objValues.iterator().next().toString().toCharArray());\n-        }\n-\n-        if (!mapping.isPassword() && !mapping.isAccountid()) {\n-            if (schema != null && schema.isMultivalue()) {\n-                attribute = AttributeBuilder.build(mapping.getExtAttrName(),\n-                        objValues);\n-            } else {\n-                attribute = objValues.isEmpty()\n-                        ? AttributeBuilder.build(mapping.getExtAttrName())\n-                        : AttributeBuilder.build(mapping.getExtAttrName(),\n-                        objValues.iterator().next());\n-            }\n-        }\n-\n-        return new DefaultMapEntry(accountId, attribute);\n+        return new DefaultMapEntry(schema, values);\n     }\n \n     /**\n@@ -635,7 +719,9 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(\n                     final Attribute alreadyAdded = AttributeUtil.find(\n                             preparedAttribute.getValue().getName(), attributes);\n \n-                    if (alreadyAdded != null) {\n+                    if (alreadyAdded == null) {\n+                        attributes.add(preparedAttribute.getValue());\n+                    } else {\n                         attributes.remove(alreadyAdded);\n \n                         Set values = new HashSet(alreadyAdded.getValue());\n@@ -644,8 +730,6 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(\n                         attributes.add(AttributeBuilder.build(\n                                 preparedAttribute.getValue().getName(),\n                                 values));\n-                    } else {\n-                        attributes.add(preparedAttribute.getValue());\n                     }\n \n                 }\n@@ -658,25 +742,22 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(\n         if (!StringUtils.hasText(accountId)) {\n             // LOG error but avoid to throw exception: leave it to the \n             //external resource\n-\n-            LOG.error(\n-                    \"Failure preparing attributes for '{}': missing accountId\",\n-                    resource.getName());\n+            LOG.error(\"Missing accountId for '{}': \", resource.getName());\n         }\n \n         // Evaluate AccountLink expression\n-        String evaluatedAccountLink =\n+        String evalAccountLink =\n                 jexlUtil.evaluate(resource.getAccountLink(), user);\n \n         // AccountId must be propagated. It could be a simple attribute for\n         // the target resource or the key (depending on the accountLink)\n-        if (evaluatedAccountLink.isEmpty()) {\n+        if (evalAccountLink.isEmpty()) {\n             // add accountId as __NAME__ attribute ...\n             LOG.debug(\"Add AccountId [{}] as __NAME__\", accountId);\n             attributes.add(new Name(accountId));\n         } else {\n-            LOG.debug(\"Add AccountLink [{}] as __NAME__\", evaluatedAccountLink);\n-            attributes.add(new Name(evaluatedAccountLink));\n+            LOG.debug(\"Add AccountLink [{}] as __NAME__\", evalAccountLink);\n+            attributes.add(new Name(evalAccountLink));\n \n             // AccountId not propagated: \n             // it will be used to set the value for __UID__ attribute"},{"sha":"d34e16cc6c4146d491f3ec408288caf0db2f71a9","filename":"core/src/test/java/org/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -31,6 +31,7 @@\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.AbstractTest;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n+import org.syncope.types.Entity;\n import org.syncope.types.IntMappingType;\n \n @Transactional\n@@ -121,6 +122,11 @@ public void saveInvalidMappingIntAttr() {\n         ExternalResource resource = new ExternalResource();\n         resource.setName(\"ws-target-resource-basic-save-invalid\");\n \n+        ConnInstance connector =\n+                resourceDAO.find(\"ws-target-resource-1\").getConnector();\n+\n+        resource.setConnector(connector);\n+\n         SchemaMapping accountId = new SchemaMapping();\n         accountId.setResource(resource);\n         accountId.setAccountid(true);\n@@ -140,6 +146,11 @@ public void saveInvalidMappingExtAttr() {\n         ExternalResource resource = new ExternalResource();\n         resource.setName(\"ws-target-resource-basic-save-invalid\");\n \n+        ConnInstance connector =\n+                resourceDAO.find(\"ws-target-resource-1\").getConnector();\n+\n+        resource.setConnector(connector);\n+\n         SchemaMapping mapping = new SchemaMapping();\n         mapping.setResource(resource);\n         mapping.setAccountid(true);\n@@ -150,15 +161,70 @@ public void saveInvalidMappingExtAttr() {\n \n         mapping = new SchemaMapping();\n         mapping.setResource(resource);\n+        mapping.setIntAttrName(\"userId\");\n+        mapping.setIntMappingType(IntMappingType.UserSchema);\n+\n+        resource.addMapping(mapping);\n+\n+        resourceDAO.save(resource);\n+    }\n+\n+    @Test\n+    public void saveWithRoleMappingType() {\n+\n+        ExternalResource resource = new ExternalResource();\n+        resource.setName(\"ws-target-resource-basic-save-invalid\");\n+\n+        ConnInstance connector =\n+                resourceDAO.find(\"ws-target-resource-1\").getConnector();\n+\n+        resource.setConnector(connector);\n+\n+        SchemaMapping mapping = new SchemaMapping();\n+        mapping.setResource(resource);\n+        mapping.setAccountid(true);\n         mapping.setIntAttrName(\"fullname\");\n         mapping.setIntMappingType(IntMappingType.UserSchema);\n \n         resource.addMapping(mapping);\n \n+        mapping = new SchemaMapping();\n+        mapping.setResource(resource);\n+        mapping.setIntAttrName(\"icon\");\n+        mapping.setExtAttrName(\"icon\");\n+        mapping.setIntMappingType(IntMappingType.RoleSchema);\n+\n+        resource.addMapping(mapping);\n+\n+        mapping = new SchemaMapping();\n+        mapping.setResource(resource);\n+        mapping.setIntAttrName(\"mderiveddata\");\n+        mapping.setExtAttrName(\"mderiveddata\");\n+        mapping.setIntMappingType(IntMappingType.MembershipDerivedSchema);\n+\n+        resource.addMapping(mapping);\n+\n         // save the resource\n         ExternalResource actual = resourceDAO.save(resource);\n \n         assertNotNull(actual);\n+\n+        assertEquals(3, actual.getMappings().size());\n+\n+        for (SchemaMapping schemaMapping : actual.getMappings()) {\n+\n+            if (\"icon\".equals(schemaMapping.getIntAttrName())) {\n+                assertTrue(IntMappingType.contains(\n+                        Entity.ROLE,\n+                        schemaMapping.getIntMappingType().toString()));\n+            }\n+\n+            if (\"mderiveddata\".equals(schemaMapping.getIntAttrName())) {\n+                assertTrue(IntMappingType.contains(\n+                        Entity.MEMBERSHIP,\n+                        schemaMapping.getIntMappingType().toString()));\n+            }\n+        }\n     }\n \n     @Test"},{"sha":"86bce3b82d93ea778439a8ee320390220429c10a","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":98,"deletions":8,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -489,10 +489,10 @@ public void create() {\n         userTO.addMembership(membershipTO);\n \n         // add an attribute with no values: must be ignored\n-        AttributeTO nullValueAttributeTO = new AttributeTO();\n-        nullValueAttributeTO.setSchema(\"subscriptionDate\");\n-        nullValueAttributeTO.setValues(null);\n-        membershipTO.addAttribute(nullValueAttributeTO);\n+        AttributeTO nullValueAttrTO = new AttributeTO();\n+        nullValueAttrTO.setSchema(\"subscriptionDate\");\n+        nullValueAttrTO.setValues(null);\n+        membershipTO.addAttribute(nullValueAttrTO);\n \n         // add an attribute with a non-existing schema: must be ignored\n         AttributeTO attrWithInvalidSchemaTO = new AttributeTO();\n@@ -501,10 +501,10 @@ public void create() {\n         userTO.addAttribute(attrWithInvalidSchemaTO);\n \n         // add an attribute with null value: must be ignored\n-        nullValueAttributeTO = new AttributeTO();\n-        nullValueAttributeTO.setSchema(\"activationDate\");\n-        nullValueAttributeTO.addValue(null);\n-        userTO.addAttribute(nullValueAttributeTO);\n+        nullValueAttrTO = new AttributeTO();\n+        nullValueAttrTO.setSchema(\"activationDate\");\n+        nullValueAttrTO.addValue(null);\n+        userTO.addAttribute(nullValueAttrTO);\n \n         // 1. create user\n         UserTO newUserTO = restTemplate.postForObject(\n@@ -1655,4 +1655,94 @@ public void issue288() {\n                     SyncopeClientExceptionType.InvalidValues));\n         }\n     }\n+\n+    @Test\n+    public void roleAttrPropagation() {\n+        UserTO userTO = getSampleTO(\"checkRoleAttrPropagation@syncope-idm.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerivedAttributes().clear();\n+        userTO.getVirtualAttributes().clear();\n+\n+        AttributeTO csvuserid = new AttributeTO();\n+        csvuserid.setSchema(\"csvuserid\");\n+        userTO.addDerivedAttribute(csvuserid);\n+\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(1L);\n+\n+        userTO.addMembership(membershipTO);\n+\n+        userTO.addResource(\"resource-csv\");\n+\n+        UserTO actual = restTemplate.postForObject(\n+                BASE_URL + \"user/create\", userTO, UserTO.class);\n+\n+        assertNotNull(actual);\n+        assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n+\n+        ConnObjectTO connObjectTO = restTemplate.getForObject(\n+                BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+                ConnObjectTO.class,\n+                \"resource-csv\",\n+                actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().\n+                get(0));\n+\n+        assertNotNull(connObjectTO);\n+\n+        assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"ROLE\").\n+                getValues().get(0));\n+    }\n+    \n+    @Test\n+    public void membershipAttrPropagation() {\n+        UserTO userTO = getSampleTO(\"checkMembAttrPropagation@syncope-idm.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerivedAttributes().clear();\n+        userTO.getVirtualAttributes().clear();\n+\n+        AttributeTO csvuserid = new AttributeTO();\n+        csvuserid.setSchema(\"csvuserid\");\n+        userTO.addDerivedAttribute(csvuserid);\n+\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(1L);\n+        \n+        AttributeTO mderived_sx = new AttributeTO();\n+        mderived_sx.setSchema(\"mderived_sx\");\n+        mderived_sx.setValues(Collections.singletonList(\"sx\"));\n+        membershipTO.addAttribute(mderived_sx);\n+        \n+        AttributeTO mderived_dx = new AttributeTO();\n+        mderived_dx.setSchema(\"mderived_dx\");\n+        mderived_dx.setValues(Collections.singletonList(\"dx\"));\n+        membershipTO.addAttribute(mderived_dx);\n+        \n+        AttributeTO mderiveddata = new AttributeTO();\n+        mderiveddata.setSchema(\"mderToBePropagated\");\n+        membershipTO.addDerivedAttribute(mderiveddata);\n+\n+        userTO.addMembership(membershipTO);\n+\n+        userTO.addResource(\"resource-csv\");\n+\n+        UserTO actual = restTemplate.postForObject(\n+                BASE_URL + \"user/create\", userTO, UserTO.class);\n+\n+        assertNotNull(actual);\n+        assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n+\n+        ConnObjectTO connObjectTO = restTemplate.getForObject(\n+                BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+                ConnObjectTO.class,\n+                \"resource-csv\",\n+                actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().\n+                get(0));\n+\n+        assertNotNull(connObjectTO);\n+\n+        assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"MEMBERSHIP\").\n+                getValues().get(0));\n+    }\n }"},{"sha":"da71360ad2493e91c2e1d6a668c136a1c0d62fa0","filename":"core/src/test/resources/content.xml","status":"modified","additions":20,"deletions":7,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -172,8 +172,16 @@ under the License.\n \n     <RDerSchema name=\"rderiveddata\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n     <RDerAttr id=\"1000\" derivedSchema_name=\"rderiveddata\" owner_id=\"1\"/>\n+    \n+    <RDerSchema name=\"displayProperty\" expression=\"icon + ': ' + show\"/>\n+\n+    <RDerAttr id=\"1001\" derivedSchema_name=\"displayProperty\" owner_id=\"1\"/>\n+    <RDerAttr id=\"1002\" derivedSchema_name=\"displayProperty\" owner_id=\"4\"/>\n \n-    <!-- rderiveddata is used th verify der schema deletion -->\n+    <RDerSchema name=\"rderToBePropagated\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n+    <RDerAttr id=\"1003\" derivedSchema_name=\"rderToBePropagated\" owner_id=\"1\"/>\n+    \n+    <!-- rderiveddata is used to verify der schema deletion -->\n     <RDerSchema name=\"rderivedschema\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n \n     <MAttr id=\"100\" owner_id=\"4\" schema_name=\"subscriptionDate\"/>\n@@ -189,6 +197,8 @@ under the License.\n \n     <MDerSchema name=\"mderiveddata\" expression=\"mderived_sx + '-' + mderived_dx\"/>\n     <MDerAttr id=\"100\" derivedSchema_name=\"mderiveddata\" owner_id=\"1\"/>\n+    \n+    <MDerSchema name=\"mderToBePropagated\" expression=\"mderived_sx + '-' + mderived_dx\"/>\n \n     <UVirSchema name=\"virtualdata\"/>\n     <UVirAttr id=\"100\" virtualSchema_name=\"virtualdata\" owner_id=\"3\"/>\n@@ -251,7 +261,7 @@ under the License.\n                   bundleName=\"org.connid.bundles.csvdir\"\n                   connectorName=\"org.connid.csvdir.CSVDirConnector\"\n                   version=\"${connid.csvdir.version}\"\n-                  xmlConfiguration=\"%3Cset%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Ekeyseparator%3C/name%3E%0A++++++%3CdisplayName%3EKey+separator%3C/displayName%3E%0A++++++%3ChelpMessage%3ECharacter+used+to+separate+keys+in+a+multi-key+scenario%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3E%2C%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eencoding%3C/name%3E%0A++++++%3CdisplayName%3EFile+encoding%3C/displayName%3E%0A++++++%3ChelpMessage%3EBasic+encoding+of+the+file%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EquotationRequired%3C/name%3E%0A++++++%3CdisplayName%3EValue+quotation+required%3C/displayName%3E%0A++++++%3ChelpMessage%3ESpecify+if+value+quotation+is+required%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.Boolean%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.Boolean%3Efalse%3C/java.lang.Boolean%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EfileMask%3C/name%3E%0A++++++%3CdisplayName%3EFile+mask%3C/displayName%3E%0A++++++%3ChelpMessage%3ERegular+expression+describing+files+to+be+processed%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etest.csv%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordColumnName%3C/name%3E%0A++++++%3CdisplayName%3EPassword+column+name%3C/displayName%3E%0A++++++%3ChelpMessage%3EName+of+the+column+used+to+specify+user+password%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Epassword%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EtextQualifier%3C/name%3E%0A++++++%3CdisplayName%3EText+qualifier%3C/displayName%3E%0A++++++%3ChelpMessage%3EDelimiter+to+determine+begin+and+end+of+text+in+value%3C/helpMessage%3E%0A++++++%3Ctype%3Echar%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdeleteColumnName%3C/name%3E%0A++++++%3CdisplayName%3EDelete+column+name%3C/displayName%3E%0A++++++%3ChelpMessage%3EName+of+the+column+used+to+specify+users+to+be+deleted%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Edeleted%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EsourcePath%3C/name%3E%0A++++++%3CdisplayName%3ESource+path%3C/displayName%3E%0A++++++%3ChelpMessage%3EAbsolute+path+of+a+directory+where+are+located+CSV+files+to+be+processed%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3E/${urlencoded.java.io.tmpdir}%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EfieldDelimiter%3C/name%3E%0A++++++%3CdisplayName%3EfieldDelimiter%3C/displayName%3E%0A++++++%3ChelpMessage%3EfieldDelimiter%3C/helpMessage%3E%0A++++++%3Ctype%3Echar%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.Character%3E%2C%3C/java.lang.Character%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EkeyColumnNames%3C/name%3E%0A++++++%3CdisplayName%3EKey+column+name%3C/displayName%3E%0A++++++%3ChelpMessage%3EName+of+the+column+used+to+identify+user+uniquely%3C/helpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Ename%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Esurname%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EignoreHeader%3C/name%3E%0A++++++%3CdisplayName%3EIgnore+header%3C/displayName%3E%0A++++++%3ChelpMessage%3ESpecify+it+first+line+file+must+be+ignored%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.Boolean%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.Boolean%3Efalse%3C/java.lang.Boolean%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Efields%3C/name%3E%0A++++++%3CdisplayName%3Efields%3C/displayName%3E%0A++++++%3ChelpMessage%3EColumn+names+separated+by+comma%3C/helpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eid%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Ename%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Esurname%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Eemail%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Epassword%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Estatus%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Edeleted%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EstatusColumn%3C/name%3E%0A++++++%3CdisplayName%3EstatusColumn%3C/displayName%3E%0A++++++%3ChelpMessage%3EStatus+column%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Estatus%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%3C/set%3E\"/>\n+                  xmlConfiguration=\"%3Cset%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Ekeyseparator%3C/name%3E%0A++++++%3CdisplayName%3EKey+separator%3C/displayName%3E%0A++++++%3ChelpMessage%3ECharacter+used+to+separate+keys+in+a+multi-key+scenario%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3E%2C%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eencoding%3C/name%3E%0A++++++%3CdisplayName%3EFile+encoding%3C/displayName%3E%0A++++++%3ChelpMessage%3EBasic+encoding+of+the+file%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EquotationRequired%3C/name%3E%0A++++++%3CdisplayName%3EValue+quotation+required%3C/displayName%3E%0A++++++%3ChelpMessage%3ESpecify+if+value+quotation+is+required%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.Boolean%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.Boolean%3Efalse%3C/java.lang.Boolean%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EfileMask%3C/name%3E%0A++++++%3CdisplayName%3EFile+mask%3C/displayName%3E%0A++++++%3ChelpMessage%3ERegular+expression+describing+files+to+be+processed%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etest.csv%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordColumnName%3C/name%3E%0A++++++%3CdisplayName%3EPassword+column+name%3C/displayName%3E%0A++++++%3ChelpMessage%3EName+of+the+column+used+to+specify+user+password%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Epassword%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EtextQualifier%3C/name%3E%0A++++++%3CdisplayName%3EText+qualifier%3C/displayName%3E%0A++++++%3ChelpMessage%3EDelimiter+to+determine+begin+and+end+of+text+in+value%3C/helpMessage%3E%0A++++++%3Ctype%3Echar%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdeleteColumnName%3C/name%3E%0A++++++%3CdisplayName%3EDelete+column+name%3C/displayName%3E%0A++++++%3ChelpMessage%3EName+of+the+column+used+to+specify+users+to+be+deleted%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Edeleted%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EsourcePath%3C/name%3E%0A++++++%3CdisplayName%3ESource+path%3C/displayName%3E%0A++++++%3ChelpMessage%3EAbsolute+path+of+a+directory+where+are+located+CSV+files+to+be+processed%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3E/${urlencoded.java.io.tmpdir}%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EfieldDelimiter%3C/name%3E%0A++++++%3CdisplayName%3EfieldDelimiter%3C/displayName%3E%0A++++++%3ChelpMessage%3EfieldDelimiter%3C/helpMessage%3E%0A++++++%3Ctype%3Echar%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.Character%3E%2C%3C/java.lang.Character%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EkeyColumnNames%3C/name%3E%0A++++++%3CdisplayName%3EKey+column+name%3C/displayName%3E%0A++++++%3ChelpMessage%3EName+of+the+column+used+to+identify+user+uniquely%3C/helpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Ename%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Esurname%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EignoreHeader%3C/name%3E%0A++++++%3CdisplayName%3EIgnore+header%3C/displayName%3E%0A++++++%3ChelpMessage%3ESpecify+it+first+line+file+must+be+ignored%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.Boolean%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.Boolean%3Efalse%3C/java.lang.Boolean%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Efields%3C/name%3E%0A++++++%3CdisplayName%3Efields%3C/displayName%3E%0A++++++%3ChelpMessage%3EColumn+names+separated+by+comma%3C/helpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eid%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Ename%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Esurname%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Eemail%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Epassword%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Erole%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Emembership%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Estatus%3C/java.lang.String%3E%0A%3Cjava.lang.String%3Edeleted%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EstatusColumn%3C/name%3E%0A++++++%3CdisplayName%3EstatusColumn%3C/displayName%3E%0A++++++%3ChelpMessage%3EStatus+column%3C/helpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Estatus%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.syncope.types.ConnConfProperty%3E%0A%3C/set%3E\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"104\" capabilities=\"ONE_PHASE_CREATE\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"104\" capabilities=\"ONE_PHASE_UPDATE\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"104\" capabilities=\"ONE_PHASE_DELETE\"/>\n@@ -430,6 +440,14 @@ under the License.\n                    resource_name=\"resource-csv\"\n                    intAttrName=\"csvuserid\" intMappingType=\"UserDerivedSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n+    <SchemaMapping id=\"208\" extAttrName=\"role\"\n+                   resource_name=\"resource-csv\"\n+                   intAttrName=\"rderToBePropagated\" intMappingType=\"RoleDerivedSchema\" mandatoryCondition=\"false\"\n+                   accountid=\"0\" password=\"0\"/>\n+    <SchemaMapping id=\"209\" extAttrName=\"membership\"\n+                   resource_name=\"resource-csv\"\n+                   intAttrName=\"mderToBePropagated\" intMappingType=\"MembershipDerivedSchema\" mandatoryCondition=\"false\"\n+                   accountid=\"0\" password=\"0\"/>\n                    \n     <SchemaMapping id=\"300\" extAttrName=\"userId\"\n                    resource_name=\"ws-target-resource-update-resetsynctoken\"\n@@ -476,11 +494,6 @@ under the License.\n     <Task DTYPE=\"SyncTask\" id=\"7\" resource_name=\"resource-testdb\"\n           performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n           jobClassName=\"org.syncope.core.scheduling.SyncJob\"/>\n-                \n-    <RDerSchema name=\"displayProperty\" expression=\"icon + ': ' + show\"/>\n-\n-    <RDerAttr id=\"1001\" derivedSchema_name=\"displayProperty\" owner_id=\"1\"/>\n-    <RDerAttr id=\"1002\" derivedSchema_name=\"displayProperty\" owner_id=\"4\"/>\n \n     <!-- Authentication and authorization -->\n     <Entitlement name=\"base\"/>"},{"sha":"7b64555ec3a3d1f2bca29192a75dc73fc0a570a6","filename":"core/src/test/resources/test.csv","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d6d71a6b26e743f3fe397f0cf7fa91930845787/core%2Fsrc%2Ftest%2Fresources%2Ftest.csv","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d6d71a6b26e743f3fe397f0cf7fa91930845787/core%2Fsrc%2Ftest%2Fresources%2Ftest.csv","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Ftest.csv?ref=6d6d71a6b26e743f3fe397f0cf7fa91930845787","patch":"@@ -1,10 +1,10 @@\n-test0,nome0,cognome0,test0@syncope.org,password0,true,false\n-test1,nome1,cognome1,test1@syncope.org,password1,false,false\n-test2,nome2,cognome2,test2@syncope.org,notpermitted1,true,false\n-test3,nome3,cognome3,test3@syncope.org,password3,true,false\n-test4,nome4,cognome4,test4@syncope.org,password4,true,false\n-test5,nome5,cognome5,test5@syncope.org,password5,true,false\n-test6,nome6,cognome6,test6@syncope.org,password6,true,false\n-test7,nome7,cognome7,test7@syncope.org,password7,true,false\n-test8,nome8,cognome8,test8@syncope.org,password8,true,false\n-test9,nome9,cognome9,test9@syncope.org,password9,true,false\n+test0,nome0,cognome0,test0@syncope.org,password0,role1,membership1,true,false\n+test1,nome1,cognome1,test1@syncope.org,password1,role1,membership1,false,false\n+test2,nome2,cognome2,test2@syncope.org,notpermitted1,role1,membership1,true,false\n+test3,nome3,cognome3,test3@syncope.org,password3,role1,membership1,true,false\n+test4,nome4,cognome4,test4@syncope.org,password4,role1,membership1,true,false\n+test5,nome5,cognome5,test5@syncope.org,password5,role1,membership1,true,false\n+test6,nome6,cognome6,test6@syncope.org,password6,role1,membership1,true,false\n+test7,nome7,cognome7,test7@syncope.org,password7,role1,membership1,true,false\n+test8,nome8,cognome8,test8@syncope.org,password8,role1,membership1,true,false\n+test9,nome9,cognome9,test9@syncope.org,password9,role1,membership1,true,false"}]}