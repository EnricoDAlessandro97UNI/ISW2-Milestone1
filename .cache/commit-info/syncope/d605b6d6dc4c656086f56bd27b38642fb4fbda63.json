{"sha":"d605b6d6dc4c656086f56bd27b38642fb4fbda63","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ2MDViNmQ2ZGM0YzY1NjA4NmY1NmJkMjdiMzg2NDJmYjRmYmRhNjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-11-07T07:44:40Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-11-07T08:13:43Z"},"message":"White noise: reflow, adjust, tweak, rename...","tree":{"sha":"47960db98b7da23c917e19a9ed610589a63cb07e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/47960db98b7da23c917e19a9ed610589a63cb07e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d605b6d6dc4c656086f56bd27b38642fb4fbda63","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d605b6d6dc4c656086f56bd27b38642fb4fbda63","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d605b6d6dc4c656086f56bd27b38642fb4fbda63","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d605b6d6dc4c656086f56bd27b38642fb4fbda63/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"aa3c5ee3d7331c77672f354b40209e25e3d74a1f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/aa3c5ee3d7331c77672f354b40209e25e3d74a1f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/aa3c5ee3d7331c77672f354b40209e25e3d74a1f"}],"stats":{"total":312,"additions":130,"deletions":182},"files":[{"sha":"571218f806b73ec781587825711534e1beb7472e","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/NonI18nPalette.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -21,7 +21,6 @@\n import java.util.Collection;\n import java.util.LinkedHashMap;\n import java.util.Map;\n-import org.apache.wicket.Component;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.model.IModel;\n@@ -44,16 +43,6 @@ protected boolean localizeDisplayValues() {\n         return false;\n     }\n \n-    @Override\n-    protected Component newAvailableHeader(final String componentId) {\n-        return super.newAvailableHeader(componentId);\n-    }\n-\n-    @Override\n-    protected Component newSelectedHeader(final String componentId) {\n-        return super.newSelectedHeader(componentId);\n-    }\n-\n     @Override\n     protected Map<String, String> getAdditionalAttributesForChoices(final Object choice) {\n         Map<String, String> map = new LinkedHashMap<>();\n@@ -67,5 +56,4 @@ protected Map<String, String> getAdditionalAttributesForSelection(final Object c\n         map.put(\"title\", choice.toString());\n         return map;\n     }\n-\n }"},{"sha":"0b76462a828127361e85a51f6ebcb35eb30f78d6","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/TaskDataProvider.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTaskDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTaskDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTaskDataProvider.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -29,15 +29,12 @@\n \n     private static final long serialVersionUID = -20112718133295756L;\n \n-    private final SortableDataProviderComparator<T> comparator;\n-\n     protected final TaskType taskType;\n \n     public TaskDataProvider(final int paginatorRows, final TaskType taskType) {\n         super(paginatorRows);\n \n         setSort(\"start\", SortOrder.ASCENDING);\n-        comparator = new SortableDataProviderComparator<>(this);\n         this.taskType = taskType;\n     }\n "},{"sha":"6a033b582d1c4161f9485fbec082473fc50504e7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/BooleanPropertyColumn.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanPropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanPropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanPropertyColumn.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -28,10 +28,10 @@\n import org.springframework.beans.BeanWrapper;\n import org.springframework.beans.BeanWrapperImpl;\n \n-import java.util.Objects;\n-\n /**\n  * Format column's value as boolean.\n+ *\n+ * @param <T> The Model object type\n  */\n public class BooleanPropertyColumn<T> extends PropertyColumn<T, String> {\n \n@@ -49,7 +49,7 @@ public void populateItem(final Item<ICellPopulator<T>> item, final String compon\n         Object obj = bwi.getPropertyValue(getPropertyExpression());\n \n         item.add(new Label(componentId, StringUtils.EMPTY));\n-        if (Boolean.parseBoolean(Objects.requireNonNull(obj).toString())) {\n+        if (obj != null && Boolean.valueOf(obj.toString())) {\n             item.add(new AttributeModifier(\"class\", \"glyphicon glyphicon-ok\"));\n             item.add(new AttributeModifier(\"style\", \"display: table-cell; text-align: center;\"));\n         }"},{"sha":"fcf76726e9992e99886140b79794fcc69a0ce5ee","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":22,"deletions":26,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -25,7 +25,6 @@\n import java.util.Map;\n import java.util.stream.Collectors;\n import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n@@ -47,7 +46,7 @@\n \n     private final GroupRestClient groupRestClient = new GroupRestClient();\n \n-    protected final IModel<List<MembershipTO>> membershipTOs;\n+    protected final IModel<List<MembershipTO>> memberships;\n \n     protected final Map<String, Map<String, S>> membershipSchemas = new LinkedHashMap<>();\n \n@@ -58,37 +57,36 @@ public AbstractAttrs(\n \n         super(modelObject.getInnerObject(), AjaxWizard.Mode.CREATE, anyTypeClasses, whichAttrs, null);\n \n-        this.membershipTOs = new ListModel<>(Collections.<MembershipTO>emptyList());\n+        this.memberships = new ListModel<>(Collections.<MembershipTO>emptyList());\n \n         this.setOutputMarkupId(true);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private List<MembershipTO> loadMembershipAttrs() {\n-        List<MembershipTO> memberships = new ArrayList<>();\n-        try {\n-            membershipSchemas.clear();\n+    private List<MembershipTO> loadMemberships() {\n+        membershipSchemas.clear();\n \n-            for (MembershipTO membership : (List<MembershipTO>) PropertyResolver.getPropertyField(\n-                    \"memberships\", anyTO).get(anyTO)) {\n-                setSchemas(membership.getGroupKey(),\n-                        AnyTypeClassRestClient.list(getMembershipAuxClasses(membership, anyTO.getType())).\n+        List<MembershipTO> membs = new ArrayList<>();\n+        try {\n+            ((List<MembershipTO>) PropertyResolver.getPropertyField(\"memberships\", anyTO).get(anyTO)).forEach(memb -> {\n+                setSchemas(memb.getGroupKey(),\n+                        anyTypeClassRestClient.list(getMembershipAuxClasses(memb, anyTO.getType())).\n                                 stream().map(EntityTO::getKey).collect(Collectors.toList()));\n-                setAttrs(membership);\n-\n-                if (AbstractAttrs.this instanceof PlainAttrs && !membership.getPlainAttrs().isEmpty()) {\n-                    memberships.add(membership);\n-                } else if (AbstractAttrs.this instanceof DerAttrs && !membership.getDerAttrs().isEmpty()) {\n-                    memberships.add(membership);\n-                } else if (AbstractAttrs.this instanceof VirAttrs && !membership.getVirAttrs().isEmpty()) {\n-                    memberships.add(membership);\n+                setAttrs(memb);\n+\n+                if (this instanceof PlainAttrs && !memb.getPlainAttrs().isEmpty()) {\n+                    membs.add(memb);\n+                } else if (this instanceof DerAttrs && !memb.getDerAttrs().isEmpty()) {\n+                    membs.add(memb);\n+                } else if (this instanceof VirAttrs && !memb.getVirAttrs().isEmpty()) {\n+                    membs.add(memb);\n                 }\n-            }\n+            });\n         } catch (WicketRuntimeException | IllegalArgumentException | IllegalAccessException ex) {\n             // ignore\n         }\n \n-        return memberships;\n+        return membs;\n     }\n \n     private void setSchemas(final String membership, final List<String> anyTypeClasses) {\n@@ -119,8 +117,7 @@ protected List<String> getMembershipAuxClasses(final MembershipTO membershipTO,\n     @Override\n     public void renderHead(final IHeaderResponse response) {\n         super.renderHead(response);\n-        if (CollectionUtils.isEmpty(attrs.getObject())\n-                && CollectionUtils.isEmpty(membershipTOs.getObject())) {\n+        if (CollectionUtils.isEmpty(attrs.getObject()) && CollectionUtils.isEmpty(memberships.getObject())) {\n             response.render(OnDomReadyHeaderItem.forScript(\n                     String.format(\"$('#emptyPlaceholder').append(\\\"%s\\\"); $('#attributes').hide();\",\n                             getString(\"attribute.empty.list\"))));\n@@ -130,8 +127,7 @@ public void renderHead(final IHeaderResponse response) {\n     @Override\n     public boolean evaluate() {\n         this.attrs.setObject(loadAttrs());\n-        this.membershipTOs.setObject(loadMembershipAttrs());\n-        return !attrs.getObject().isEmpty() || !membershipTOs.getObject().isEmpty();\n+        this.memberships.setObject(loadMemberships());\n+        return !attrs.getObject().isEmpty() || !memberships.getObject().isEmpty();\n     }\n-\n }"},{"sha":"f64f18eff4a6c1b886ea69aff951934dfbc19541","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrsWizardStep.java","status":"modified","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrsWizardStep.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -104,7 +104,7 @@ public AbstractAttrsWizardStep(\n \n         super();\n         this.anyTypeClasses = anyTypeClasses;\n-        this.attrs = new ListModel<>(Collections.<Attr>emptyList());\n+        this.attrs = new ListModel<>(Collections.emptyList());\n \n         this.setOutputMarkupId(true);\n \n@@ -119,7 +119,7 @@ protected List<Attr> loadAttrs() {\n                 map(EntityTO::getKey).collect(Collectors.toList()));\n         setSchemas(classes);\n         setAttrs();\n-        return AbstractAttrsWizardStep.this.getAttrsFromTO();\n+        return getAttrsFromTO();\n     }\n \n     protected boolean reoderSchemas() {\n@@ -133,17 +133,14 @@ protected void setSchemas(final List<String> anyTypeClasses) {\n     }\n \n     protected void setSchemas(final List<String> anyTypeClasses, final Map<String, S> scs) {\n-        final List<S> allSchemas;\n-        if (anyTypeClasses.isEmpty()) {\n-            allSchemas = new ArrayList<>();\n-        } else {\n-            allSchemas = SchemaRestClient.getSchemas(getSchemaType(), null, anyTypeClasses.toArray(new String[] {}));\n-        }\n+        List<S> allSchemas = anyTypeClasses.isEmpty()\n+                ? Collections.emptyList()\n+                : SchemaRestClient.getSchemas(getSchemaType(), null, anyTypeClasses.toArray(new String[] {}));\n \n         scs.clear();\n \n         if (reoderSchemas()) {\n-            // 1. remove attributes not selected for display\n+            // remove attributes not selected for display\n             allSchemas.removeAll(allSchemas.stream().\n                     filter(schemaTO -> !whichAttrs.contains(schemaTO.getKey())).collect(Collectors.toSet()));\n         }"},{"sha":"75bdeb01007117e4c288db57b946afc7e4251a2a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectTemplateWizardBuilder.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectTemplateWizardBuilder.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.List;\n+import java.util.Optional;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n@@ -56,10 +57,10 @@ public AnyObjectTemplateWizardBuilder(\n     }\n \n     @Override\n-    protected Details<AnyObjectTO> addOptionalDetailsPanel(final AnyWrapper<AnyObjectTO> modelObject) {\n-        final Details<AnyObjectTO> details = super.addOptionalDetailsPanel(modelObject);\n-        if (templatable instanceof RealmTO) {\n-            details.disableRealmSpecification();\n+    protected Optional<Details<AnyObjectTO>> addOptionalDetailsPanel(final AnyWrapper<AnyObjectTO> modelObject) {\n+        Optional<Details<AnyObjectTO>> details = super.addOptionalDetailsPanel(modelObject);\n+        if (templatable instanceof RealmTO && details.isPresent()) {\n+            details.get().disableRealmSpecification();\n         }\n         return details;\n     }"},{"sha":"30ad682f07d00a65119c0e690665b4ba1545dc2e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -21,7 +21,6 @@\n import java.io.Serializable;\n import java.util.List;\n import java.util.Optional;\n-\n import org.apache.syncope.client.console.layout.AnyObjectForm;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n@@ -39,7 +38,7 @@ public class AnyObjectWizardBuilder extends AnyWizardBuilder<AnyObjectTO> implem\n \n     private static final long serialVersionUID = -2480279868319546243L;\n \n-    private final AnyObjectRestClient anyObjectRestClient = new AnyObjectRestClient();\n+    protected final AnyObjectRestClient anyObjectRestClient = new AnyObjectRestClient();\n \n     public AnyObjectWizardBuilder(\n             final AnyObjectTO anyObjectTO,\n@@ -48,7 +47,7 @@ public AnyObjectWizardBuilder(\n             final PageReference pageRef) {\n \n         super(Optional.ofNullable(anyObjectTO).map(AnyObjectWrapper::new)\n-            .orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n+                .orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n     /**\n@@ -97,10 +96,10 @@ protected Serializable onApplyInternal(final AnyWrapper<AnyObjectTO> modelObject\n     }\n \n     @Override\n-    protected Details<AnyObjectTO> addOptionalDetailsPanel(final AnyWrapper<AnyObjectTO> modelObject) {\n-        return new AnyObjectDetails(\n+    protected Optional<Details<AnyObjectTO>> addOptionalDetailsPanel(final AnyWrapper<AnyObjectTO> modelObject) {\n+        return Optional.of(new AnyObjectDetails(\n                 modelObject,\n                 mode == AjaxWizard.Mode.TEMPLATE,\n-                modelObject.getInnerObject().getKey() != null, pageRef);\n+                modelObject.getInnerObject().getKey() != null, pageRef));\n     }\n }"},{"sha":"eca6f8a3ecb1aea59829607b85fb51b07a079937","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":5,"deletions":11,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -25,6 +25,7 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n+import java.util.Optional;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n@@ -90,10 +91,7 @@ public AnyWizardBuilder(\n     @Override\n     protected WizardModel buildModelSteps(final AnyWrapper<A> modelObject, final WizardModel wizardModel) {\n         // optional details panel step\n-        final Details<A> details = addOptionalDetailsPanel(modelObject);\n-        if (details != null) {\n-            wizardModel.add(details);\n-        }\n+        addOptionalDetailsPanel(modelObject).ifPresent(wizardModel::add);\n \n         if ((this instanceof GroupWizardBuilder)\n                 && (modelObject.getInnerObject() instanceof GroupTO)\n@@ -167,15 +165,11 @@ public PageReference getPageReference() {\n         return wizardModel;\n     }\n \n-    protected Details<A> addOptionalDetailsPanel(final AnyWrapper<A> modelObject) {\n+    protected Optional<Details<A>> addOptionalDetailsPanel(final AnyWrapper<A> modelObject) {\n         if (modelObject.getInnerObject().getKey() == null) {\n-            return null;\n+            return Optional.empty();\n         } else {\n-            return new Details<>(\n-                    modelObject,\n-                    mode == AjaxWizard.Mode.TEMPLATE,\n-                    true,\n-                    pageRef);\n+            return Optional.of(new Details<>(modelObject, mode == AjaxWizard.Mode.TEMPLATE, true, pageRef));\n         }\n     }\n "},{"sha":"7b7b3d6945e928d28fc0b6209d7c1a89bb5b5ca1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -72,7 +72,7 @@ public WebMarkupContainer getPanel(final String panelId) {\n             }\n         }), Model.of(0)).setOutputMarkupId(true));\n \n-        add(new ListView<MembershipTO>(\"membershipsDerSchemas\", membershipTOs) {\n+        add(new ListView<MembershipTO>(\"membershipsDerSchemas\", memberships) {\n \n             private static final long serialVersionUID = 6741044372185745296L;\n "},{"sha":"6e154dfc16d0b51a36d90568fe0baf0da7af9089","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupTemplateWizardBuilder.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupTemplateWizardBuilder.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -20,6 +20,7 @@\n \n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.List;\n+import java.util.Optional;\n import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -54,10 +55,10 @@ public GroupTemplateWizardBuilder(\n     }\n \n     @Override\n-    protected Details<GroupTO> addOptionalDetailsPanel(final AnyWrapper<GroupTO> modelObject) {\n-        final Details<GroupTO> details = super.addOptionalDetailsPanel(modelObject);\n-        if (templatable instanceof RealmTO) {\n-            details.disableRealmSpecification();\n+    protected Optional<Details<GroupTO>> addOptionalDetailsPanel(final AnyWrapper<GroupTO> modelObject) {\n+        Optional<Details<GroupTO>> details = super.addOptionalDetailsPanel(modelObject);\n+        if (templatable instanceof RealmTO && details.isPresent()) {\n+            details.get().disableRealmSpecification();\n         }\n         return details;\n     }"},{"sha":"e6a9da90a6307be90146a19686a076416ef83235","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":23,"deletions":24,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -18,18 +18,17 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.io.Serializable;\n import java.util.List;\n import java.util.Optional;\n-\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.common.util.CollectionUtils;\n import org.apache.syncope.client.console.layout.GroupForm;\n import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.request.GroupCR;\n@@ -42,7 +41,7 @@ public class GroupWizardBuilder extends AnyWizardBuilder<GroupTO> implements Gro\n \n     private static final long serialVersionUID = 5945391813567245081L;\n \n-    private final GroupRestClient groupRestClient = new GroupRestClient();\n+    protected final GroupRestClient groupRestClient = new GroupRestClient();\n \n     public GroupWizardBuilder(\n             final GroupTO groupTO,\n@@ -51,7 +50,7 @@ public GroupWizardBuilder(\n             final PageReference pageRef) {\n \n         super(Optional.ofNullable(groupTO).map(GroupWrapper::new)\n-            .orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n+                .orElse(null), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n     /**\n@@ -89,49 +88,49 @@ public AjaxWizardBuilder<AnyWrapper<GroupTO>> setItem(final AnyWrapper<GroupTO>\n \n     @Override\n     protected Serializable onApplyInternal(final AnyWrapper<GroupTO> modelObject) {\n-        GroupTO inner = modelObject instanceof GroupWrapper\n+        GroupTO updated = modelObject instanceof GroupWrapper\n                 ? GroupWrapper.class.cast(modelObject).fillDynamicConditions()\n                 : modelObject.getInnerObject();\n \n         ProvisioningResult<GroupTO> result;\n-        if (inner.getKey() == null) {\n+        if (updated.getKey() == null) {\n             GroupCR req = new GroupCR();\n-            EntityTOUtils.toAnyCR(inner, req);\n-\n+            EntityTOUtils.toAnyCR(updated, req);\n             result = GroupRestClient.create(req);\n         } else {\n-            fixPlainAndVirAttrs(inner, getOriginalItem().getInnerObject());\n-            GroupUR groupUR = AnyOperations.diff(inner, getOriginalItem().getInnerObject(), false);\n-            GroupTO originaObj = getOriginalItem().getInnerObject();\n+            GroupTO original = getOriginalItem().getInnerObject();\n+            fixPlainAndVirAttrs(updated, original);\n \n             // SYNCOPE-1170\n             boolean othersNotEqualsOrBlanks =\n-                    !inner.getADynMembershipConds().equals(originaObj.getADynMembershipConds())\n-                    || (StringUtils.isNotBlank(originaObj.getUDynMembershipCond()) && StringUtils.isBlank(inner.\n-                    getUDynMembershipCond()))\n-                    || (StringUtils.isBlank(originaObj.getUDynMembershipCond()) && StringUtils.isNotBlank(inner.\n-                    getUDynMembershipCond()))\n-                    || StringUtils.isAllBlank(originaObj.getUDynMembershipCond(), inner.getUDynMembershipCond())\n-                    || !inner.getUDynMembershipCond().equals(originaObj.getUDynMembershipCond())\n-                    || !CollectionUtils.diff(inner.getTypeExtensions(), originaObj.getTypeExtensions()).isEmpty();\n+                    !updated.getADynMembershipConds().equals(original.getADynMembershipConds())\n+                    || (StringUtils.isNotBlank(original.getUDynMembershipCond())\n+                    && StringUtils.isBlank(updated.getUDynMembershipCond()))\n+                    || (StringUtils.isBlank(original.getUDynMembershipCond())\n+                    && StringUtils.isNotBlank(updated.getUDynMembershipCond()))\n+                    || StringUtils.isAllBlank(original.getUDynMembershipCond(), updated.getUDynMembershipCond())\n+                    || !updated.getUDynMembershipCond().equals(original.getUDynMembershipCond())\n+                    || !CollectionUtils.diff(updated.getTypeExtensions(), original.getTypeExtensions()).isEmpty();\n+\n+            GroupUR groupUR = AnyOperations.diff(updated, original, false);\n \n             // update just if it is changed\n             if (groupUR.isEmpty() && !othersNotEqualsOrBlanks) {\n                 result = new ProvisioningResult<>();\n-                result.setEntity(inner);\n+                result.setEntity(updated);\n             } else {\n-                result = groupRestClient.update(getOriginalItem().getInnerObject().getETagValue(), groupUR);\n+                result = groupRestClient.update(original.getETagValue(), groupUR);\n             }\n         }\n \n         return result;\n     }\n \n     @Override\n-    protected Details<GroupTO> addOptionalDetailsPanel(final AnyWrapper<GroupTO> modelObject) {\n-        return new GroupDetails(\n+    protected Optional<Details<GroupTO>> addOptionalDetailsPanel(final AnyWrapper<GroupTO> modelObject) {\n+        return Optional.of(new GroupDetails(\n                 GroupWrapper.class.cast(modelObject),\n                 mode == AjaxWizard.Mode.TEMPLATE,\n-                modelObject.getInnerObject().getKey() != null, pageRef);\n+                modelObject.getInnerObject().getKey() != null, pageRef));\n     }\n }"},{"sha":"5bc5cf2982856449cd3212a31ff9628c4870ca57","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWrapper.java","status":"modified","additions":13,"deletions":15,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWrapper.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -76,25 +76,23 @@ public void setADynClauses(final Map<String, List<SearchClause>> aDynClauses) {\n     }\n \n     public String getUDynMembershipCond() {\n-        if (CollectionUtils.isEmpty(this.uDynClauses)) {\n-            return null;\n-        } else {\n-            return SearchUtils.buildFIQL(this.uDynClauses, SyncopeClient.getUserSearchConditionBuilder());\n-        }\n+        return CollectionUtils.isEmpty(this.uDynClauses)\n+                ? null\n+                : SearchUtils.buildFIQL(this.uDynClauses, SyncopeClient.getUserSearchConditionBuilder());\n     }\n \n     public Map<String, String> getADynMembershipConds() {\n-        final Map<String, String> res = new HashMap<>();\n+        Map<String, String> res = new HashMap<>();\n         if (this.aDynClauses != null && !this.aDynClauses.isEmpty()) {\n-            for (Map.Entry<String, List<SearchClause>> entry : this.aDynClauses.entrySet()) {\n-                if (CollectionUtils.isNotEmpty(entry.getValue())) {\n-                    final String fiql = SearchUtils.buildFIQL(entry.getValue(),\n-                            SyncopeClient.getAnyObjectSearchConditionBuilder(entry.getKey()));\n-                    if (fiql != null) {\n-                        res.put(entry.getKey(), fiql);\n-                    }\n-                }\n-            }\n+            this.aDynClauses.entrySet().stream().\n+                    filter(entry -> CollectionUtils.isNotEmpty(entry.getValue())).\n+                    forEach(entry -> {\n+                        String fiql = SearchUtils.buildFIQL(entry.getValue(),\n+                                SyncopeClient.getAnyObjectSearchConditionBuilder(entry.getKey()));\n+                        if (fiql != null) {\n+                            res.put(entry.getKey(), fiql);\n+                        }\n+                    });\n         }\n \n         return res;"},{"sha":"d77e25c58a4b441c76b66a57b2088992c60ef283","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":27,"deletions":35,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n-import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -32,6 +30,8 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n+import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -96,9 +96,9 @@ public WebMarkupContainer getPanel(final String panelId) {\n             }\n         }), Model.of(0)).setOutputMarkupId(true));\n \n-        add(new ListView<MembershipTO>(\"membershipsPlainSchemas\", membershipTOs) {\n+        add(new ListView<MembershipTO>(\"membershipsPlainSchemas\", memberships) {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = 6741044372185745296L;\n \n             @Override\n             protected void populateItem(final ListItem<MembershipTO> item) {\n@@ -154,48 +154,41 @@ protected List<Attr> getAttrsFromTO(final MembershipTO membershipTO) {\n \n     @Override\n     protected void setAttrs() {\n-        List<Attr> attrs = new ArrayList<>();\n-\n         Map<String, Attr> attrMap = EntityTOUtils.buildAttrMap(anyTO.getPlainAttrs());\n \n-        attrs.addAll(schemas.values().stream().map(schema -> {\n-            Attr attrTO = new Attr();\n-            attrTO.setSchema(schema.getKey());\n+        List<Attr> attrs = schemas.values().stream().map(schema -> {\n+            Attr attr = new Attr();\n+            attr.setSchema(schema.getKey());\n             if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n-                attrTO.getValues().add(\"\");\n+                attr.getValues().add(\"\");\n             } else {\n-                attrTO = attrMap.get(schema.getKey());\n+                attr = attrMap.get(schema.getKey());\n             }\n-            return attrTO;\n-        }).collect(Collectors.toList()));\n+            return attr;\n+        }).collect(Collectors.toList());\n \n         anyTO.getPlainAttrs().clear();\n         anyTO.getPlainAttrs().addAll(attrs);\n     }\n \n     @Override\n     protected void setAttrs(final MembershipTO membershipTO) {\n-        List<Attr> attrs = new ArrayList<>();\n-\n-        final Map<String, Attr> attrMap;\n-        if (GroupableRelatableTO.class.cast(anyTO).getMembership(membershipTO.getGroupKey()).isPresent()) {\n-            attrMap = EntityTOUtils.buildAttrMap(GroupableRelatableTO.class.cast(anyTO)\n-                    .getMembership(membershipTO.getGroupKey()).get().getPlainAttrs());\n-        } else {\n-            attrMap = new HashMap<>();\n-        }\n-\n-        attrs.addAll(membershipSchemas.get(membershipTO.getGroupKey()).values().stream().\n-                map(schema -> {\n-                    Attr attrTO = new Attr();\n-                    attrTO.setSchema(schema.getKey());\n-                    if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n-                        attrTO.getValues().add(StringUtils.EMPTY);\n-                    } else {\n-                        attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n-                    }\n-                    return attrTO;\n-                }).collect(Collectors.toList()));\n+        Map<String, Attr> attrMap =\n+                GroupableRelatableTO.class.cast(anyTO).getMembership(membershipTO.getGroupKey()).isPresent()\n+                ? EntityTOUtils.buildAttrMap(GroupableRelatableTO.class.cast(anyTO).\n+                        getMembership(membershipTO.getGroupKey()).get().getPlainAttrs())\n+                : new HashMap<>();\n+\n+        List<Attr> attrs = membershipSchemas.get(membershipTO.getGroupKey()).values().stream().map(schema -> {\n+            Attr attr = new Attr();\n+            attr.setSchema(schema.getKey());\n+            if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n+                attr.getValues().add(StringUtils.EMPTY);\n+            } else {\n+                attr.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n+            }\n+            return attr;\n+        }).collect(Collectors.toList());\n \n         membershipTO.getPlainAttrs().clear();\n         membershipTO.getPlainAttrs().addAll(attrs);\n@@ -274,5 +267,4 @@ public List<String> getObject() {\n             });\n         }\n     }\n-\n }"},{"sha":"4ce27b98a8ff84f31087585480d55eb59a87a0c2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserTemplateWizardBuilder.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -21,6 +21,7 @@\n import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.List;\n+import java.util.Optional;\n import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.common.lib.to.RealmTO;\n@@ -72,10 +73,10 @@ public UserTemplateWizardBuilder(\n     }\n \n     @Override\n-    protected Details<UserTO> addOptionalDetailsPanel(final AnyWrapper<UserTO> modelObject) {\n-        final Details<UserTO> details = super.addOptionalDetailsPanel(modelObject);\n-        if (templatable instanceof RealmTO) {\n-            details.disableRealmSpecification();\n+    protected Optional<Details<UserTO>> addOptionalDetailsPanel(final AnyWrapper<UserTO> modelObject) {\n+        Optional<Details<UserTO>> details = super.addOptionalDetailsPanel(modelObject);\n+        if (templatable instanceof RealmTO && details.isPresent()) {\n+            details.get().disableRealmSpecification();\n         }\n         return details;\n     }"},{"sha":"c9e3c11d8a0c1a5c9f6772bd05f76d6868affc2d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":5,"deletions":22,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -21,7 +21,6 @@\n import java.io.Serializable;\n import java.util.List;\n import java.util.Optional;\n-\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.ui.commons.layout.UserForm;\n@@ -44,13 +43,6 @@ public class UserWizardBuilder extends AnyWizardBuilder<UserTO> implements UserF\n \n     protected final UserRestClient userRestClient = new UserRestClient();\n \n-    /**\n-     * Constructor to be used for templating only.\n-     *\n-     * @param anyTypeClasses any type classes.\n-     * @param formLayoutInfo form layout.\n-     * @param pageRef reference page.\n-     */\n     public UserWizardBuilder(\n             final List<String> anyTypeClasses,\n             final UserFormLayoutInfo formLayoutInfo,\n@@ -59,15 +51,6 @@ public UserWizardBuilder(\n         super(new UserWrapper(null), anyTypeClasses, formLayoutInfo, pageRef);\n     }\n \n-    /**\n-     * Constructor to be used for Approval and Remediation details only.\n-     *\n-     * @param previousUserTO previous user status.\n-     * @param userTO new user status to be approved.\n-     * @param anyTypeClasses any type classes.\n-     * @param formLayoutInfo from layout.\n-     * @param pageRef reference page.\n-     */\n     public UserWizardBuilder(\n             final UserTO previousUserTO,\n             final UserTO userTO,\n@@ -114,13 +97,13 @@ protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n     }\n \n     @Override\n-    protected Details<UserTO> addOptionalDetailsPanel(final AnyWrapper<UserTO> modelObject) {\n-        return new UserDetails(\n+    protected Optional<Details<UserTO>> addOptionalDetailsPanel(final AnyWrapper<UserTO> modelObject) {\n+        return Optional.of(new UserDetails(\n                 UserWrapper.class.cast(modelObject),\n                 mode == AjaxWizard.Mode.TEMPLATE,\n                 modelObject.getInnerObject().getKey() != null,\n                 UserFormLayoutInfo.class.cast(formLayoutInfo).isPasswordManagement(),\n-                pageRef);\n+                pageRef));\n     }\n \n     /**\n@@ -131,8 +114,8 @@ protected Details<UserTO> addOptionalDetailsPanel(final AnyWrapper<UserTO> model\n      */\n     @Override\n     public UserWizardBuilder setItem(final AnyWrapper<UserTO> item) {\n-        super.setItem(Optional.ofNullable(item)\n-            .map(userTOAnyWrapper -> new UserWrapper(userTOAnyWrapper.getInnerObject())).orElse(null));\n+        super.setItem(Optional.ofNullable(item).\n+                map(userTOAnyWrapper -> new UserWrapper(userTOAnyWrapper.getInnerObject())).orElse(null));\n         return this;\n     }\n }"},{"sha":"ded7b5d3ef256ba34a3cedbc7a6a632e9ca264b5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -84,7 +84,7 @@ public WebMarkupContainer getPanel(final String panelId) {\n             }\n         }), Model.of(0)).setOutputMarkupId(true));\n \n-        add(new ListView<MembershipTO>(\"membershipsVirSchemas\", membershipTOs) {\n+        add(new ListView<MembershipTO>(\"membershipsVirSchemas\", memberships) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n "},{"sha":"74c935eff3a910186dafa14dbda42b49adc81819","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -342,7 +342,7 @@ protected String doExecuteProvisioning(\n                     if (provision.getUidOnCreate() != null) {\n                         AnyUtils anyUtils = anyUtilsFactory.getInstance(provision.getAnyType().getKind());\n                         profile.getResults().stream().\n-                                filter(result -> result.getUidValue() != null\n+                                filter(result -> result.getUidValue() != null && result.getKey() != null\n                                 && result.getOperation() == ResourceOperation.CREATE\n                                 && result.getAnyType().equals(provision.getAnyType().getKey())).\n                                 forEach(result -> {"},{"sha":"5a12062bccf5b4d8f9a6e562acbcfec9817a695c","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserRequestHandler.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.flowable.impl;\n \n-import org.apache.syncope.core.flowable.api.UserRequestHandler;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n@@ -40,6 +39,7 @@\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.UserRequestFormPropertyType;\n import org.apache.syncope.core.flowable.api.DropdownValueProvider;\n+import org.apache.syncope.core.flowable.api.UserRequestHandler;\n import org.apache.syncope.core.flowable.support.DomainProcessEngine;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n@@ -618,6 +618,7 @@ private static Map<String, String> getPropertiesForSubmit(final UserRequestForm\n     }\n \n     @Override\n+    @SuppressWarnings(\"unchecked\")\n     public UserWorkflowResult<UserUR> submitForm(final UserRequestForm form) {\n         Pair<Task, TaskFormData> parsed = parseTask(form.getTaskId());\n "},{"sha":"ee9696700ee6681251bad268f593d0dc51a79314","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d605b6d6dc4c656086f56bd27b38642fb4fbda63/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d605b6d6dc4c656086f56bd27b38642fb4fbda63/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserWorkflowAdapter.java?ref=d605b6d6dc4c656086f56bd27b38642fb4fbda63","patch":"@@ -232,6 +232,7 @@ protected UserWorkflowResult<Pair<UserUR, Boolean>> doUpdate(final User user, fi\n         // save some existing variable values for later processing, after actual update is made \n         UserUR beforeUpdate = engine.getRuntimeService().\n                 getVariable(procInstID, FlowableRuntimeUtils.USER_UR, UserUR.class);\n+        @SuppressWarnings(\"unchecked\")\n         PropagationByResource<String> propByResBeforeUpdate = engine.getRuntimeService().getVariable(\n                 procInstID, FlowableRuntimeUtils.PROP_BY_RESOURCE, PropagationByResource.class);\n         @SuppressWarnings(\"unchecked\")"}]}