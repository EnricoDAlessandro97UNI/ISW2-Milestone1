{"sha":"ca59ef9e22435709703cf34c2f678abd8affa522","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNhNTllZjllMjI0MzU3MDk3MDNjZjM0YzJmNjc4YWJkOGFmZmE1MjI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-29T07:46:03Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-29T07:46:03Z"},"message":"[SYNCOPE-172][SYNCOPE-173] Role synchronization from external resources in place - needs more test and probably some cleaning + refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/DEV_ROLE_PROVISIONING@1415070 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"629ef426a3971a50b3c17a626476a459271d82a3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/629ef426a3971a50b3c17a626476a459271d82a3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ca59ef9e22435709703cf34c2f678abd8affa522","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca59ef9e22435709703cf34c2f678abd8affa522","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca59ef9e22435709703cf34c2f678abd8affa522","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca59ef9e22435709703cf34c2f678abd8affa522/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"55631b226c05dd7e2d870b856ab217e5c143c855","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/55631b226c05dd7e2d870b856ab217e5c143c855","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/55631b226c05dd7e2d870b856ab217e5c143c855"}],"stats":{"total":5922,"additions":3186,"deletions":2736},"files":[{"sha":"905be3fc8631834b7f53cd8f2dcbcc47ac1787dd","filename":"CHANGES","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/CHANGES","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/CHANGES","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/CHANGES?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -1,4 +1,4 @@\n-Apache Syncope (incubating) - CHANGES\n+Apache Syncope - CHANGES\n Licensed under Apache License 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n --------------------------------------------------------------------------------\n "},{"sha":"9642b8f1e782d2bded6726984564b9c3bf20b23a","filename":"DISCLAIMER","status":"removed","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55631b226c05dd7e2d870b856ab217e5c143c855/DISCLAIMER","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55631b226c05dd7e2d870b856ab217e5c143c855/DISCLAIMER","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/DISCLAIMER?ref=55631b226c05dd7e2d870b856ab217e5c143c855","patch":"@@ -1,10 +0,0 @@\n-Apache Syncope is an effort undergoing incubation at the Apache Software\n-Foundation (ASF), sponsored by the Apache Incubator PMC. \n-\n-Incubation is required of all newly accepted projects until a further review \n-indicates that the infrastructure, communications, and decision making process \n-have stabilized in a manner consistent with other successful ASF projects. \n-\n-While incubation status is not necessarily a reflection of the completeness \n-or stability of the code, it does indicate that the project has yet to be \n-fully endorsed by the ASF."},{"sha":"031fb3bb507d609d56c36ebb61e278fc41cadb0e","filename":"archetype/pom.xml","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -43,13 +43,13 @@ under the License.\n   </distributionManagement>\n   \n   <properties>\n-    <SVNRepoURL>http://svn.apache.org/repos/asf/incubator/syncope/trunk</SVNRepoURL>\n+    <SVNRepoURL>http://svn.apache.org/repos/asf/syncope/trunk</SVNRepoURL>\n   </properties>\n \n   <scm>\n-    <connection>scm:svn:http://svn.apache.org/repos/asf/incubator/syncope/trunk/archetype</connection>\n-    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/incubator/syncope/trunk/archetype</developerConnection>\n-    <url>http://svn.apache.org/repos/asf/incubator/syncope/trunk/archetype</url>\n+    <connection>scm:svn:http://svn.apache.org/repos/asf/syncope/trunk/archetype</connection>\n+    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/syncope/trunk/archetype</developerConnection>\n+    <url>http://svn.apache.org/repos/asf/syncope/trunk/archetype</url>\n   </scm>\n \n   <build>\n@@ -203,7 +203,6 @@ under the License.\n         <includes>\n           <include>LICENSE</include>\n           <include>NOTICE</include>\n-          <include>DISCLAIMER</include>\n         </includes>\n       </resource>\n     </resources>"},{"sha":"c4dffdded9ae7e18b4371b7eabc21744aeef1e29","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -293,7 +293,7 @@ under the License.\n     <profile>\r\n       <id>embedded</id>\r\n       <properties>\r\n-        <maven.test.skip>true</maven.test.skip>\r\n+        <skipTests>true</skipTests>\r\n       </properties>\r\n       <build>\r\n         <defaultGoal>clean verify cargo:run</defaultGoal>    \r"},{"sha":"0f07bde75f8eeda4c9fee9f86a91438a161f1909","filename":"build-tools/pom.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/build-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/build-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fpom.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -193,7 +193,6 @@ under the License.\n         <includes>\n           <include>LICENSE</include>\n           <include>NOTICE</include>\n-          <include>DISCLAIMER</include>\n         </includes>\n       </resource>\n     </resources>"},{"sha":"03c75a2b0664100f599784fcd4bcdc1470d9d90c","filename":"client/pom.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fpom.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -129,7 +129,6 @@ under the License.\n         <includes>\n           <include>LICENSE</include>\n           <include>NOTICE</include>\n-          <include>DISCLAIMER</include>\n         </includes>\n       </resource>\n     </resources>"},{"sha":"1f3789f2d9575db5f5d50507db991e0ec47e1f09","filename":"client/src/main/java/org/apache/syncope/client/search/AttributableCond.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fsearch%2FAttributableCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fsearch%2FAttributableCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fsearch%2FAttributableCond.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -21,14 +21,14 @@\n /**\n  * Search condition to be applied when comparing bean attribute values.\n  */\n-public class SyncopeUserCond extends AttributeCond {\n+public class AttributableCond extends AttributeCond {\n \n     private static final long serialVersionUID = -1880319220462653955L;\n \n-    public SyncopeUserCond() {\n+    public AttributableCond() {\n     }\n \n-    public SyncopeUserCond(Type conditionType) {\n+    public AttributableCond(Type conditionType) {\n         super(conditionType);\n     }\n }","previous_filename":"client/src/main/java/org/apache/syncope/client/search/SyncopeUserCond.java"},{"sha":"2ae726522229ec0e9ac0e5e5563d783a08f3d8cc","filename":"client/src/main/java/org/apache/syncope/client/search/NodeCond.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fsearch%2FNodeCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fsearch%2FNodeCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fsearch%2FNodeCond.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -32,7 +32,7 @@ public enum Type {\n \n     private Type type;\n \n-    private SyncopeUserCond syncopeUserCond;\n+    private AttributableCond attributableCond;\n \n     private AttributeCond attributeCond;\n \n@@ -44,11 +44,11 @@ public enum Type {\n \n     private NodeCond rightNodeCond;\n \n-    public static NodeCond getLeafCond(final SyncopeUserCond syncopeUserCond) {\n+    public static NodeCond getLeafCond(final AttributableCond syncopeUserCond) {\n         NodeCond nodeCond = new NodeCond();\n \n         nodeCond.type = Type.LEAF;\n-        nodeCond.syncopeUserCond = syncopeUserCond;\n+        nodeCond.attributableCond = syncopeUserCond;\n \n         return nodeCond;\n     }\n@@ -80,7 +80,7 @@ public static NodeCond getLeafCond(final ResourceCond resourceCond) {\n         return nodeCond;\n     }\n \n-    public static NodeCond getNotLeafCond(final SyncopeUserCond syncopeUserCond) {\n+    public static NodeCond getNotLeafCond(final AttributableCond syncopeUserCond) {\n         NodeCond nodeCond = getLeafCond(syncopeUserCond);\n         nodeCond.type = Type.NOT_LEAF;\n         return nodeCond;\n@@ -150,12 +150,12 @@ public void setResourceCond(final ResourceCond resourceCond) {\n         this.resourceCond = resourceCond;\n     }\n \n-    public SyncopeUserCond getSyncopeUserCond() {\n-        return syncopeUserCond;\n+    public AttributableCond getAttributableCond() {\n+        return attributableCond;\n     }\n \n-    public void setSyncopeUserCond(final SyncopeUserCond syncopeUserCond) {\n-        this.syncopeUserCond = syncopeUserCond;\n+    public void setAttributableCond(final AttributableCond attributableCond) {\n+        this.attributableCond = attributableCond;\n     }\n \n     public final NodeCond getLeftNodeCond() {\n@@ -190,13 +190,13 @@ public final boolean checkValidity() {\n         switch (type) {\n             case LEAF:\n             case NOT_LEAF:\n-                return (syncopeUserCond != null && attributeCond == null && membershipCond == null\n-                        && resourceCond == null && syncopeUserCond.checkValidity())\n-                        || (syncopeUserCond == null && attributeCond != null && membershipCond == null\n+                return (attributableCond != null && attributeCond == null && membershipCond == null\n+                        && resourceCond == null && attributableCond.checkValidity())\n+                        || (attributableCond == null && attributeCond != null && membershipCond == null\n                                 && resourceCond == null && attributeCond.checkValidity())\n-                        || (syncopeUserCond == null && attributeCond == null && membershipCond != null\n+                        || (attributableCond == null && attributeCond == null && membershipCond != null\n                                 && resourceCond == null && membershipCond.checkValidity())\n-                        || (syncopeUserCond == null && attributeCond == null && membershipCond == null\n+                        || (attributableCond == null && attributeCond == null && membershipCond == null\n                                 && resourceCond != null && resourceCond.checkValidity());\n             case AND:\n             case OR:"},{"sha":"464eda4c0eeab893dda881da0b0d91e9eba49e9e","filename":"client/src/main/java/org/apache/syncope/client/to/ResourceTO.java","status":"modified","additions":15,"deletions":5,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FResourceTO.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -67,7 +67,9 @@ public class ResourceTO extends AbstractBaseBean {\n \n     private Set<ConnConfProperty> connConfProperties;\n \n-    private String syncToken;\n+    private String usyncToken;\n+\n+    private String rsyncToken;\n \n     private String actionsClassName;\n \n@@ -212,12 +214,20 @@ public void setSyncTraceLevel(final TraceLevel syncTraceLevel) {\n         this.syncTraceLevel = syncTraceLevel;\n     }\n \n-    public String getSyncToken() {\n-        return syncToken;\n+    public String getUsyncToken() {\n+        return usyncToken;\n+    }\n+\n+    public void setUsyncToken(final String syncToken) {\n+        this.usyncToken = syncToken;\n+    }\n+\n+    public String getRsyncToken() {\n+        return rsyncToken;\n     }\n \n-    public void setSyncToken(final String syncToken) {\n-        this.syncToken = syncToken;\n+    public void setRsyncToken(final String syncToken) {\n+        this.rsyncToken = syncToken;\n     }\n \n     public String getActionsClassName() {"},{"sha":"f8c6f24c437d93f5be4940a8a3bddb11b723ab36","filename":"client/src/main/java/org/apache/syncope/client/util/AttributableOperations.java","status":"modified","additions":29,"deletions":19,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -197,20 +197,18 @@ public static UserMod diff(final UserTO updated, final UserTO original) {\n      * @param incremental perform incremental diff (without removing existing info)\n      * @return UserMod containing differences\n      */\n-    public static UserMod diff(final UserTO updated, final UserTO original, final boolean  incremental) {\n+    public static UserMod diff(final UserTO updated, final UserTO original, final boolean incremental) {\n         UserMod result = new UserMod();\n \n         diff(updated, original, result, incremental);\n \n         // 1. password\n         if (original.getPassword() != null && !original.getPassword().equals(updated.getPassword())) {\n-\n             result.setPassword(updated.getPassword());\n         }\n \n         // 2. username\n         if (original.getUsername() != null && !original.getUsername().equals(updated.getUsername())) {\n-\n             result.setUsername(updated.getUsername());\n         }\n \n@@ -278,9 +276,21 @@ public static UserMod diff(final UserTO updated, final UserTO original, final bo\n      * @return RoleMod containing differences\n      */\n     public static RoleMod diff(final RoleTO updated, final RoleTO original) {\n+        return diff(updated, original, false);\n+    }\n+\n+    /**\n+     * Calculate modifications needed by first in order to be equal to second.\n+     *\n+     * @param updated updated RoleTO\n+     * @param original original RoleTO\n+     * @param incremental perform incremental diff (without removing existing info)\n+     * @return RoleMod containing differences\n+     */\n+    public static RoleMod diff(final RoleTO updated, final RoleTO original, final boolean incremental) {\n         RoleMod result = new RoleMod();\n \n-        diff(updated, original, result, false);\n+        diff(updated, original, result, incremental);\n \n         // 1. inheritance\n         result.setInheritOwner(updated.isInheritOwner());\n@@ -318,39 +328,35 @@ public static RoleMod diff(final RoleTO updated, final RoleTO original) {\n     private static List<AttributeTO> getUpdateValues(final Map<String, AttributeTO> attrs,\n             final Set<String> attrsToBeRemoved, final Set<AttributeMod> attrsToBeUpdated) {\n \n+        Map<String, AttributeTO> rwattrs = new HashMap<String, AttributeTO>(attrs);\n         for (String attrName : attrsToBeRemoved) {\n-            attrs.remove(attrName);\n+            rwattrs.remove(attrName);\n         }\n         for (AttributeMod attrMod : attrsToBeUpdated) {\n-            if (attrs.containsKey(attrMod.getSchema())) {\n-                AttributeTO attrTO = attrs.get(attrMod.getSchema());\n+            if (rwattrs.containsKey(attrMod.getSchema())) {\n+                AttributeTO attrTO = rwattrs.get(attrMod.getSchema());\n                 attrTO.getValues().removeAll(attrMod.getValuesToBeRemoved());\n                 attrTO.getValues().addAll(attrMod.getValuesToBeAdded());\n             } else {\n                 AttributeTO attrTO = new AttributeTO();\n                 attrTO.setSchema(attrMod.getSchema());\n                 attrTO.setValues(attrMod.getValuesToBeAdded());\n \n-                attrs.put(attrMod.getSchema(), attrTO);\n+                rwattrs.put(attrMod.getSchema(), attrTO);\n             }\n         }\n \n-        return new ArrayList<AttributeTO>(attrs.values());\n+        return new ArrayList<AttributeTO>(rwattrs.values());\n     }\n \n     private static <T extends AbstractAttributableTO, K extends AbstractAttributableMod> void apply(final T to,\n             final K mod, final T result) {\n \n-        // 1. check same id\n-        if (to.getId() != mod.getId()) {\n-            throw new IllegalArgumentException(\"AttributableTO and AttributableMod ids must be the same\");\n-        }\n-\n-        // 2. attributes\n+        // 1. attributes\n         result.setAttributes(getUpdateValues(to.getAttributeMap(), mod.getAttributesToBeRemoved(), mod.\n                 getAttributesToBeUpdated()));\n \n-        // 3. derived attributes\n+        // 2. derived attributes\n         Map<String, AttributeTO> attrs = to.getDerivedAttributeMap();\n         for (String attrName : mod.getDerivedAttributesToBeRemoved()) {\n             attrs.remove(attrName);\n@@ -363,18 +369,22 @@ private static <T extends AbstractAttributableTO, K extends AbstractAttributable\n         }\n         result.setDerivedAttributes(new ArrayList<AttributeTO>(attrs.values()));\n \n-        // 4. virtual attributes\n+        // 3. virtual attributes\n         result.setVirtualAttributes(getUpdateValues(to.getVirtualAttributeMap(), mod.getVirtualAttributesToBeRemoved(),\n                 mod.getVirtualAttributesToBeUpdated()));\n \n-        // 5. resources\n+        // 4. resources\n         result.getResources().removeAll(mod.getResourcesToBeRemoved());\n         result.getResources().addAll(mod.getResourcesToBeAdded());\n     }\n \n     public static UserTO apply(final UserTO userTO, final UserMod userMod) {\n-        UserTO result = clone(userTO);\n+        // 1. check same id\n+        if (userTO.getId() != userMod.getId()) {\n+            throw new IllegalArgumentException(\"UserTO and UserMod ids must be the same\");\n+        }\n \n+        UserTO result = clone(userTO);\n         apply(userTO, userMod, result);\n \n         // 1. password"},{"sha":"16f80ca1e58cc738b0054bcdbf7f82fbf74d6bf9","filename":"client/src/main/java/org/apache/syncope/types/SyncPolicySpec.java","status":"modified","additions":30,"deletions":14,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FSyncPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FSyncPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FSyncPolicySpec.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -27,36 +27,52 @@ public class SyncPolicySpec extends AbstractPolicySpec {\n     private static final long serialVersionUID = -3144027171719498127L;\n \n     /**\n-     * SyncopeUsers attributes and user schemas used to disambiguate.\n+     * SyncopeUser attributes and fields for matching during synchronization.\n      */\n     @SchemaList(extended = true)\n-    private List<String> alternativeSearchAttrs;\n+    private List<String> uAltSearchSchemas;\n+\n+    /**\n+     * SyncopeRole attributes and fields for matching during synchronization.\n+     */\n+    @SchemaList(extended = true)\n+    private List<String> rAltSearchSchemas;\n \n     /**\n      * Conflict resolution action.\n      */\n     private ConflictResolutionAction conflictResolutionAction;\n \n+    public SyncPolicySpec() {\n+        super();\n+\n+        uAltSearchSchemas = new ArrayList<String>();\n+        rAltSearchSchemas = new ArrayList<String>();\n+    }\n+\n     public ConflictResolutionAction getConflictResolutionAction() {\n-        if (conflictResolutionAction == null) {\n-            return ConflictResolutionAction.IGNORE;\n-        } else {\n-            return conflictResolutionAction;\n-        }\n+        return conflictResolutionAction == null\n+                ? ConflictResolutionAction.IGNORE\n+                : conflictResolutionAction;\n     }\n \n     public void setConflictResolutionAction(final ConflictResolutionAction conflictResolutionAction) {\n         this.conflictResolutionAction = conflictResolutionAction;\n     }\n \n-    public List<String> getAlternativeSearchAttrs() {\n-        if (alternativeSearchAttrs == null) {\n-            alternativeSearchAttrs = new ArrayList<String>();\n-        }\n-        return alternativeSearchAttrs;\n+    public List<String> getuAltSearchSchemas() {\n+        return uAltSearchSchemas;\n+    }\n+\n+    public void setuAltSearchSchemas(List<String> uAltSearchSchemas) {\n+        this.uAltSearchSchemas = uAltSearchSchemas;\n+    }\n+\n+    public List<String> getrAltSearchSchemas() {\n+        return rAltSearchSchemas;\n     }\n \n-    public void setAlternativeSearchAttrs(final List<String> alternativeSearchAttrs) {\n-        this.alternativeSearchAttrs = alternativeSearchAttrs;\n+    public void setrAltSearchSchemas(List<String> rAltSearchSchemas) {\n+        this.rAltSearchSchemas = rAltSearchSchemas;\n     }\n }"},{"sha":"08939ddf967b305a871641354c85838e25115d8f","filename":"console/pom.xml","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -77,7 +77,7 @@ under the License.\n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>\n+    </dependency>    \n \n     <dependency>\n       <groupId>org.apache.wicket</groupId>\n@@ -400,7 +400,6 @@ under the License.\n         <includes>\n           <include>LICENSE</include>\n           <include>NOTICE</include>\n-          <include>DISCLAIMER</include>\n         </includes>\n       </resource>\n     </resources>\n@@ -422,7 +421,7 @@ under the License.\n     <profile>\n       <id>dev</id>\n       <properties>\n-        <maven.test.skip>true</maven.test.skip>\n+        <skipTests>true</skipTests>\n         <javaagent />\n       </properties>\n       <build>"},{"sha":"c770bd482226c67ba67ad9c3b451f446a3105a3e","filename":"console/src/main/java/org/apache/syncope/console/SyncopeRequestCycleListener.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -18,21 +18,21 @@\n  */\n package org.apache.syncope.console;\n \n+import org.apache.syncope.console.pages.ErrorPage;\n import org.apache.wicket.Page;\n import org.apache.wicket.authorization.UnauthorizedInstantiationException;\n+import org.apache.wicket.core.request.handler.ComponentRenderingRequestHandler;\n import org.apache.wicket.markup.html.pages.ExceptionErrorPage;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.protocol.http.PageExpiredException;\n import org.apache.wicket.request.IRequestHandler;\n import org.apache.wicket.request.cycle.AbstractRequestCycleListener;\n import org.apache.wicket.request.cycle.RequestCycle;\n-import org.apache.wicket.request.handler.ComponentRenderingRequestHandler;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.web.client.HttpClientErrorException;\n import org.springframework.web.client.RestClientException;\n-import org.apache.syncope.console.pages.ErrorPage;\n \n public class SyncopeRequestCycleListener extends AbstractRequestCycleListener {\n "},{"sha":"4e3b3dbb2caf2c12d053c6e3397bc28337e89899","filename":"console/src/main/java/org/apache/syncope/console/commons/CloseOnESCBehavior.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FCloseOnESCBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FCloseOnESCBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FCloseOnESCBehavior.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -22,7 +22,8 @@\n import org.apache.wicket.ajax.AbstractDefaultAjaxBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.html.IHeaderResponse;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.JavaScriptHeaderItem;\n \n public class CloseOnESCBehavior extends AbstractDefaultAjaxBehavior {\n \n@@ -33,7 +34,7 @@ public class CloseOnESCBehavior extends AbstractDefaultAjaxBehavior {\n     public CloseOnESCBehavior(ModalWindow modalWindow) {\n         this.modalWindow = modalWindow;\n     }\n-    \n+\n     private static final String PRE_JS = \"$(document).ready(function() {\\n\"\n             + \"$(document).bind('keyup', function(evt) {\\n\"\n             + \"    if (evt.keyCode == 27){\\n\";\n@@ -55,14 +56,14 @@ protected String findIndicatorId() {\n     }\n \n     @Override\n-    public void renderHead(final Component component, final IHeaderResponse response) {\n-        response.renderJavaScript(new StringBuilder(PRE_JS).append(getCallbackScript())\n-                .append(POST_JS).toString(),\n-                \"closeModalOnEsc\");\n+    public void renderHead(Component component, IHeaderResponse response) {\n+        super.renderHead(component, response);\n+        response.render(JavaScriptHeaderItem.forScript(\n+                new StringBuilder(PRE_JS).append(getCallbackScript()).append(POST_JS).toString(),\n+                \"closeModalOnEsc\"));\n     }\n \n     public void setModalWindow(ModalWindow modalWindow) {\n         this.modalWindow = modalWindow;\n     }\n }\n-"},{"sha":"4e9bd4e5f686ce992df9ef213ad3b40ffa539fee","filename":"console/src/main/java/org/apache/syncope/console/commons/SortableDataProviderComparator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -28,9 +28,9 @@\n \n     private static final long serialVersionUID = -8897687699977460543L;\n \n-    protected final SortableDataProvider<T> provider;\n+    protected final SortableDataProvider<T, String> provider;\n \n-    public SortableDataProviderComparator(final SortableDataProvider<T> provider) {\n+    public SortableDataProviderComparator(final SortableDataProvider<T, String> provider) {\n \n         this.provider = provider;\n     }"},{"sha":"f4ebbb093cd4a4366ed7e3336d2049a51e75315a","filename":"console/src/main/java/org/apache/syncope/console/commons/SortableUserProviderComparator.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableUserProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableUserProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FSortableUserProviderComparator.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -22,13 +22,15 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.syncope.client.to.AttributeTO;\n import org.apache.syncope.client.to.UserTO;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n \n public class SortableUserProviderComparator extends SortableDataProviderComparator<UserTO> {\n \n+    private static final long serialVersionUID = 1775967163571699258L;\n+\n     private static final Set<String> inlineProps;\n \n     static {\n@@ -38,7 +40,7 @@ public class SortableUserProviderComparator extends SortableDataProviderComparat\n         inlineProps.add(\"token\");\n     }\n \n-    public SortableUserProviderComparator(final SortableDataProvider<UserTO> provider) {\n+    public SortableUserProviderComparator(final SortableDataProvider<UserTO, String> provider) {\n \n         super(provider);\n     }\n@@ -54,6 +56,8 @@ public int compare(final UserTO o1, final UserTO o2) {\n \n     private class AttrModel extends AbstractReadOnlyModel<Comparable> {\n \n+        private static final long serialVersionUID = 7201800923472498270L;\n+\n         private final Map<String, AttributeTO> attrMap;\n \n         public AttrModel(final Map<String, AttributeTO> attrMap) {"},{"sha":"dea711f8172568273b13a1b82657dbd265cd9b59","filename":"console/src/main/java/org/apache/syncope/console/commons/UserDataProvider.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FUserDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FUserDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FUserDataProvider.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -21,15 +21,15 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.syncope.client.search.NodeCond;\n+import org.apache.syncope.client.to.UserTO;\n+import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.syncope.client.search.NodeCond;\n-import org.apache.syncope.client.to.UserTO;\n-import org.apache.syncope.console.rest.UserRestClient;\n \n-public class UserDataProvider extends SortableDataProvider<UserTO> {\n+public class UserDataProvider extends SortableDataProvider<UserTO, String> {\n \n     private static final long serialVersionUID = 6267494272884913376L;\n \n@@ -62,23 +62,23 @@ public void setSearchCond(final NodeCond searchCond) {\n     }\n \n     @Override\n-    public Iterator<UserTO> iterator(final int first, final int count) {\n+    public Iterator<UserTO> iterator(final long first, final long count) {\n         final List<UserTO> users;\n \n         if (filtered) {\n             users = filter == null\n                     ? Collections.EMPTY_LIST\n-                    : restClient.search(filter, (first / paginatorRows) + 1, paginatorRows);\n+                    : restClient.search(filter, ((int)first / paginatorRows) + 1, paginatorRows);\n         } else {\n-            users = restClient.list((first / paginatorRows) + 1, paginatorRows);\n+            users = restClient.list(((int)first / paginatorRows) + 1, paginatorRows);\n         }\n \n         Collections.sort(users, comparator);\n         return users.iterator();\n     }\n \n     @Override\n-    public int size() {\n+    public long size() {\n         if (filtered) {\n             return filter == null\n                     ? 0"},{"sha":"9e4655a936aa82dcb69b6b43a4c9aa8c2fb2fd71","filename":"console/src/main/java/org/apache/syncope/console/pages/BasePage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -21,7 +21,7 @@\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.console.SyncopeApplication;\n import org.apache.syncope.console.SyncopeSession;\n-import org.apache.syncope.console.rest.UserRequestRestClient;\n+import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.LinkPanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n@@ -53,7 +53,7 @@ public class BasePage extends AbstractBasePage implements IAjaxIndicatorAware {\n     private final static int EDIT_PROFILE_WIN_WIDTH = 800;\n \n     @SpringBean\n-    private UserRequestRestClient profileRestClient;\n+    private UserRestClient userRestClient;\n \n     @SpringBean(name = \"version\")\n     private String version;\n@@ -117,7 +117,7 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n             editProfileFrag = new Fragment(\"editProfile\", \"adminEmptyFrag\", this);\n         } else {\n             final UserTO userTO = SyncopeSession.get().isAuthenticated()\n-                    ? profileRestClient.readProfile()\n+                    ? userRestClient.readProfile()\n                     : new UserTO();\n \n             editProfileFrag = new Fragment(\"editProfile\", \"editProfileFrag\", this);"},{"sha":"de6d1c3e6c2a4c2dd5fb9b8e8ac4138e77954cd7","filename":"console/src/main/java/org/apache/syncope/console/pages/Configuration.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -218,7 +218,7 @@ private void setupSyncopeConf() {\n \n         confColumns.add(new PropertyColumn(new ResourceModel(\"value\"), \"value\", \"value\"));\n \n-        confColumns.add(new AbstractColumn<ConfigurationTO>(new ResourceModel(\"actions\", \"\")) {\n+        confColumns.add(new AbstractColumn<ConfigurationTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -387,7 +387,7 @@ private void setupNotification() {\n         notificationCols.add(new PropertyColumn(new ResourceModel(\"template\"), \"template\", \"template\"));\n         notificationCols.add(new PropertyColumn(new ResourceModel(\"traceLevel\"), \"traceLevel\", \"traceLevel\"));\n \n-        notificationCols.add(new AbstractColumn<NotificationTO>(new ResourceModel(\"actions\", \"\")) {\n+        notificationCols.add(new AbstractColumn<NotificationTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -522,7 +522,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         add(notificationPaginatorForm);\n     }\n \n-    private class SyncopeConfProvider extends SortableDataProvider<ConfigurationTO> {\n+    private class SyncopeConfProvider extends SortableDataProvider<ConfigurationTO, String> {\n \n         private static final long serialVersionUID = -276043813563988590L;\n \n@@ -535,16 +535,16 @@ public SyncopeConfProvider() {\n         }\n \n         @Override\n-        public Iterator<ConfigurationTO> iterator(final int first, final int count) {\n+        public Iterator<ConfigurationTO> iterator(final long first, final long count) {\n             List<ConfigurationTO> list = confRestClient.getAllConfigurations();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return confRestClient.getAllConfigurations().size();\n         }\n \n@@ -563,7 +563,7 @@ public ConfigurationTO getObject() {\n         }\n     }\n \n-    private class NotificationProvider extends SortableDataProvider<NotificationTO> {\n+    private class NotificationProvider extends SortableDataProvider<NotificationTO,String> {\n \n         private static final long serialVersionUID = -276043813563988590L;\n \n@@ -576,16 +576,16 @@ public NotificationProvider() {\n         }\n \n         @Override\n-        public Iterator<NotificationTO> iterator(final int first, final int count) {\n+        public Iterator<NotificationTO> iterator(final long first, final long count) {\n             List<NotificationTO> list = notificationRestClient.getAllNotifications();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return notificationRestClient.getAllNotifications().size();\n         }\n "},{"sha":"467ddd86e3aa2bbe09a0d5266604dadb4cfa0b40","filename":"console/src/main/java/org/apache/syncope/console/pages/EditUserModalPage.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -23,21 +23,23 @@\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.client.util.AttributableOperations;\n+import org.apache.syncope.console.commons.StatusBean;\n+import org.apache.syncope.console.pages.panels.AccountInformationPanel;\n+import org.apache.syncope.console.pages.panels.StatusPanel;\n+import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.apache.syncope.console.commons.StatusBean;\n-import org.apache.syncope.console.pages.panels.AccountInformationPanel;\n-import org.apache.syncope.console.pages.panels.StatusPanel;\n-import org.apache.syncope.console.rest.UserRestClient;\n \n /**\n  * Modal window with User form.\n  */\n public class EditUserModalPage extends UserModalPage {\n \n+    private static final long serialVersionUID = -6479209496805705739L;\n+\n     @SpringBean\n     private UserRestClient userRestClient;\n \n@@ -86,5 +88,5 @@ protected void submitAction(final AjaxRequestTarget target, final Form form) {\n     @Override\n     protected void closeAction(final AjaxRequestTarget target, final Form form) {\n         setResponsePage(new EditUserModalPage(window, userTO));\n-    }\n+    }   \n }"},{"sha":"70340f0092e0b5f2daa317eff82d01f8dd7b8ac2","filename":"console/src/main/java/org/apache/syncope/console/pages/ReportModalPage.java","status":"modified","additions":127,"deletions":78,"changes":205,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -27,16 +27,28 @@\n import org.apache.syncope.client.to.ReportTO;\n import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.commons.CloseOnESCBehavior;\n+import org.apache.syncope.console.commons.DateFormatROModel;\n+import org.apache.syncope.console.commons.HttpResourceStream;\n+import org.apache.syncope.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.console.markup.html.CrontabContainer;\n+import org.apache.syncope.console.rest.ReportRestClient;\n+import org.apache.syncope.console.wicket.ajax.form.AbstractAjaxDownloadBehavior;\n+import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.types.ReportExecStatus;\n+import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.IAjaxCallDecorator;\n-import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n+import org.apache.wicket.ajax.attributes.AjaxCallListener;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n@@ -49,27 +61,17 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.markup.html.form.ListChoice;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.resource.IResourceStream;\n import org.springframework.util.StringUtils;\n-import org.apache.syncope.console.commons.DateFormatROModel;\n-import org.apache.syncope.console.commons.HttpResourceStream;\n-import org.apache.syncope.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.console.markup.html.CrontabContainer;\n-import org.apache.syncope.console.rest.ReportRestClient;\n-import org.apache.syncope.console.wicket.ajax.form.AbstractAjaxDownloadBehavior;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.SingleColumnPalette;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n \n public class ReportModalPage extends BaseModalPage {\n \n@@ -81,6 +83,10 @@ public class ReportModalPage extends BaseModalPage {\n \n     private static final String REMOVE_BUTTON_ID = \"removeButton\";\n \n+    private static final String UP_BUTTON_ID = \"upButton\";\n+\n+    private static final String DOWN_BUTTON_ID = \"downButton\";\n+\n     private static final int EXEC_EXPORT_WIN_HEIGHT = 100;\n \n     private static final int EXEC_EXPORT_WIN_WIDTH = 400;\n@@ -107,6 +113,8 @@ public class ReportModalPage extends BaseModalPage {\n \n     private String modalReportletConfOldName;\n \n+    private ListChoice<ReportletConf> reportlets;\n+\n     public ReportModalPage(final ModalWindow window, final ReportTO reportTO, final PageReference callerPageRef) {\n         this.reportTO = reportTO;\n \n@@ -213,7 +221,7 @@ public void onClose(final AjaxRequestTarget target) {\n                     }\n                 }\n \n-                target.add(profile);\n+                target.add(reportlets);\n             }\n         });\n         add(reportletConfWin);\n@@ -243,8 +251,7 @@ public void onClose(final AjaxRequestTarget target) {\n         nextExec.setEnabled(false);\n         profile.add(nextExec);\n \n-        final SingleColumnPalette<ReportletConf> reportlets = new SingleColumnPalette<ReportletConf>(\"reportlets\",\n-                new PropertyModel<List<? extends ReportletConf>>(reportTO, \"reportletConfs\"),\n+        reportlets = new ListChoice<ReportletConf>(\"reportletConfs\", new Model(), reportTO.getReportletConfs(),\n                 new IChoiceRenderer<ReportletConf>() {\n                     private static final long serialVersionUID = 1048000918946220007L;\n \n@@ -255,43 +262,29 @@ public Object getDisplayValue(final ReportletConf object) {\n \n                     @Override\n                     public String getIdValue(final ReportletConf object, int index) {\n-\n                         return object.getName();\n                     }\n-                }, 5, true);\n-        reportlets.setOutputMarkupId(true);\n-        reportlets.addRecordBehavior(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-            private static final long serialVersionUID = -1107858522700306810L;\n+                }) {\n+            private static final long serialVersionUID = 4022366881854379834L;\n \n             @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n+            protected CharSequence getDefaultChoice(String selectedValue) {\n+                return null;\n             }\n-        });\n-        reportlets.addRecordBehavior(new AjaxFormComponentUpdatingBehavior(\"onselect\") {\n+        };\n+\n+        reportlets.setNullValid(true);\n+        profile.add(reportlets);\n+        reportlets.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                if (target.getLastFocusedElementId() != null\n-                        && target.getLastFocusedElementId().startsWith(EDIT_BUTTON_ID)\n-                        && reportlets.getSelectedItem() != null) {\n-\n-                    reportletConfWin.setPageCreator(new ModalWindow.PageCreator() {\n-                        private static final long serialVersionUID = -7834632442532690940L;\n-\n-                        @Override\n-                        public Page createPage() {\n-                            modalReportletConfOldName = reportlets.getSelectedItem().getName();\n-                            modalReportletConf = null;\n-                            return new ReportletConfModalPage(reportlets.getSelectedItem(), reportletConfWin,\n-                                    ReportModalPage.this.getPageReference());\n-                        }\n-                    });\n-                    reportletConfWin.show(target);\n-                }\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                target.add(reportlets);\n             }\n         });\n-        reportlets.setAddLink(new AjaxLink(ADD_BUTTON_ID) {\n+\n+        profile.add(new AjaxLink(ADD_BUTTON_ID) {\n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n@@ -310,47 +303,103 @@ public Page createPage() {\n                 reportletConfWin.show(target);\n             }\n         });\n-        reportlets.setEditLink(new AjaxLink(EDIT_BUTTON_ID) {\n+\n+        profile.add(new AjaxLink(EDIT_BUTTON_ID) {\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+\n+                if (reportlets.getModelObject() != null) {\n+                    reportletConfWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        private static final long serialVersionUID = -7834632442532690940L;\n+\n+                        @Override\n+                        public Page createPage() {\n+                            modalReportletConfOldName = reportlets.getModelObject().getName();\n+                            modalReportletConf = null;\n+                            return new ReportletConfModalPage(reportlets.getModelObject(), reportletConfWin,\n+                                    ReportModalPage.this.getPageReference());\n+                        }\n+                    });\n+                    reportletConfWin.show(target);\n+                } else {\n+                    target.appendJavaScript(\"alert('\" + getString(\"selectItem\") + \"')\");\n+                }\n+            }\n+        });\n+\n+        profile.add(new AjaxLink(REMOVE_BUTTON_ID) {\n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.focusComponent(this);\n+                reportTO.removeReportletConf(reportlets.getModelObject());\n+                reportlets.setModelObject(null);\n+                target.add(reportlets);\n             }\n \n             @Override\n-            protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n-                    private static final long serialVersionUID = -7927968187160354605L;\n+            protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n \n-                    @Override\n-                    public CharSequence preDecorateScript(final CharSequence script) {\n-                        return script + reportlets.getEditOnClickJS();\n-                    }\n-                };\n+                if (reportlets.getModelObject() != null) {\n+\n+                    super.updateAjaxAttributes(attributes);\n+\n+                    final AjaxCallListener ajaxCallListener = new AjaxCallListener() {\n+                        private static final long serialVersionUID = 7160235486520935153L;\n+\n+                        @Override\n+                        public CharSequence getPrecondition(final Component component) {\n+                            return \"if (!confirm('\" + getString(\"confirmDelete\") + \"')) {return false;}\";\n+                        }\n+                    };\n+                    attributes.getAjaxCallListeners().add(ajaxCallListener);\n+                }\n             }\n         });\n-        reportlets.setRemoveLink(new AjaxLink(REMOVE_BUTTON_ID) {\n+\n+        profile.add(new AjaxLink(UP_BUTTON_ID) {\n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n+                if (reportlets.getModelObject() != null) {\n+                    moveUp(reportlets.getModelObject());\n+                    target.add(reportlets);\n+                }\n             }\n+        });\n \n-            @Override\n-            protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n-                    private static final long serialVersionUID = -7927968187160354605L;\n+        profile.add(new AjaxLink(DOWN_BUTTON_ID) {\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    public CharSequence preDecorateScript(final CharSequence script) {\n-                        return \"if (confirm('\" + getString(\"confirmDelete\") + \"')) {\" + script\n-                                + reportlets.getRemoveOnClickJS() + \"}\";\n-                    }\n-                };\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                if (reportlets.getModelObject() != null) {\n+                    moveDown(reportlets.getModelObject());\n+                    target.add(reportlets);\n+                }\n             }\n         });\n-        profile.add(reportlets);\n+    }\n+\n+    private void moveUp(final ReportletConf item) {\n+        final List<ReportletConf> list = reportTO.getReportletConfs();\n+        int newPosition = list.indexOf(item) - 1;\n+        if (newPosition > -1) {\n+            list.remove(item);\n+            list.add(newPosition, item);\n+        }\n+    }\n+\n+    private void moveDown(final ReportletConf item) {\n+        final List<ReportletConf> list = reportTO.getReportletConfs();\n+        int newPosition = list.indexOf(item) + 1;\n+        if (newPosition < list.size()) {\n+            list.remove(item);\n+            list.add(newPosition, item);\n+        }\n     }\n \n     private void setupExecutions() {\n@@ -386,7 +435,7 @@ public void onClose(final AjaxRequestTarget target) {\n         columns.add(new DatePropertyColumn(new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n         columns.add(new DatePropertyColumn(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n         columns.add(new PropertyColumn(new ResourceModel(\"status\"), \"status\", \"status\"));\n-        columns.add(new AbstractColumn<ReportExecTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<ReportExecTO, String>(new ResourceModel(\"actions\", \"\")) {\n             private static final long serialVersionUID = 2054811145491901166L;\n \n             @Override\n@@ -430,8 +479,8 @@ public void onClick(final AjaxRequestTarget target) {\n                             @Override\n                             public Page createPage() {\n                                 ReportModalPage.this.exportExecId = model.getObject().getId();\n-                                return new ReportExecResultDownloadModalPage(reportExecExportWin, ReportModalPage.this.\n-                                        getPageReference());\n+                                return new ReportExecResultDownloadModalPage(reportExecExportWin,\n+                                        ReportModalPage.this.getPageReference());\n                             }\n                         });\n                         reportExecExportWin.show(target);\n@@ -466,18 +515,18 @@ public void onClick(final AjaxRequestTarget target) {\n         final AjaxFallbackDefaultDataTable table = new AjaxFallbackDefaultDataTable(\"executionsTable\", columns,\n                 new ReportExecutionsProvider(reportTO), 10);\n         executions.add(table);\n-        \n-                final AjaxLink reload = new IndicatingAjaxLink(\"reload\") {\n+\n+        final AjaxLink reload = new IndicatingAjaxLink(\"reload\") {\n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n-                if (target != null) {                \n+                if (target != null) {\n                     final ReportTO currentReportTO = reportTO.getId() == 0\n                             ? reportTO\n                             : restClient.read(reportTO.getId());\n-                    reportTO.setExecutions(currentReportTO.getExecutions());   \n-                    final AjaxFallbackDefaultDataTable currentTable = \n+                    reportTO.setExecutions(currentReportTO.getExecutions());\n+                    final AjaxFallbackDefaultDataTable currentTable =\n                             new AjaxFallbackDefaultDataTable(\"executionsTable\", columns,\n                             new ReportExecutionsProvider(reportTO), 10);\n                     currentTable.setOutputMarkupId(true);\n@@ -498,7 +547,7 @@ public void setModalReportletConf(final ReportletConf modalReportletConf) {\n         this.modalReportletConf = modalReportletConf;\n     }\n \n-    private static class ReportExecutionsProvider extends SortableDataProvider<ReportExecTO> {\n+    private static class ReportExecutionsProvider extends SortableDataProvider<ReportExecTO, String> {\n \n         private static final long serialVersionUID = 2118096121691420539L;\n \n@@ -513,17 +562,17 @@ public ReportExecutionsProvider(final ReportTO reportTO) {\n         }\n \n         @Override\n-        public Iterator<ReportExecTO> iterator(final int first, final int count) {\n+        public Iterator<ReportExecTO> iterator(final long first, final long count) {\n \n             List<ReportExecTO> list = reportTO.getExecutions();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return reportTO.getExecutions().size();\n         }\n "},{"sha":"236c7f6cdb208a21187283660e3ed98836073808","filename":"console/src/main/java/org/apache/syncope/console/pages/Reports.java","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -24,12 +24,28 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.syncope.client.to.ReportTO;\n+import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.apache.syncope.console.commons.Constants;\n+import org.apache.syncope.console.commons.PreferenceManager;\n+import org.apache.syncope.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.console.pages.panels.JQueryTabbedPanel;\n+import org.apache.syncope.console.rest.LoggerRestClient;\n+import org.apache.syncope.console.rest.ReportRestClient;\n+import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.types.AuditElements.Category;\n+import org.apache.syncope.types.AuditElements.Result;\n+import org.apache.syncope.types.AuditLoggerName;\n+import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n@@ -41,6 +57,7 @@\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Check;\n@@ -60,23 +77,6 @@\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.springframework.util.StringUtils;\n-import org.apache.syncope.client.to.ReportTO;\n-import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.commons.PreferenceManager;\n-import org.apache.syncope.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.console.pages.panels.JQueryTabbedPanel;\n-import org.apache.syncope.console.rest.LoggerRestClient;\n-import org.apache.syncope.console.rest.ReportRestClient;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.types.AuditElements.Category;\n-import org.apache.syncope.types.AuditElements.Result;\n-import org.apache.syncope.types.AuditLoggerName;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.behavior.Behavior;\n-import org.apache.wicket.markup.ComponentTag;\n \n /**\n  * Auditing and Reporting.\n@@ -137,7 +137,7 @@ private void setupReport() {\n         columns.add(new DatePropertyColumn(new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n         columns.add(new DatePropertyColumn(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n         columns.add(new PropertyColumn(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n-        columns.add(new AbstractColumn<ReportTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<ReportTO,String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -331,7 +331,7 @@ public WebMarkupContainer getPanel(final String panelId) {\n         form.add(new JQueryTabbedPanel(\"categoriesTabs\", tabs));\n     }\n \n-    private class ReportProvider extends SortableDataProvider<ReportTO> {\n+    private class ReportProvider extends SortableDataProvider<ReportTO, String> {\n \n         private static final long serialVersionUID = -2311716167583335852L;\n \n@@ -344,17 +344,17 @@ public ReportProvider() {\n         }\n \n         @Override\n-        public Iterator<ReportTO> iterator(final int first, final int count) {\n+        public Iterator<ReportTO> iterator(final long first, final long count) {\n \n-            List<ReportTO> list = reportRestClient.list((first / paginatorRows) + 1, paginatorRows);\n+            List<ReportTO> list = reportRestClient.list(((int)first / paginatorRows) + 1, paginatorRows);\n \n             Collections.sort(list, comparator);\n \n             return list.iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return reportRestClient.count();\n         }\n "},{"sha":"23dc20c0f6c06308ea9408d17b08e4d85c8d2496","filename":"console/src/main/java/org/apache/syncope/console/pages/Resources.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -119,7 +119,7 @@ private void setupResources() {\n         columns.add(new PropertyColumn(new ResourceModel(\"propagationPriority\"), \"propagationPriority\",\n                 \"propagationPriority\"));\n \n-        columns.add(new AbstractColumn<ResourceTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<ResourceTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -273,7 +273,7 @@ private void setupConnectors() {\n \n         columns.add(new PropertyColumn(new ResourceModel(\"bundleName\"), \"bundleName\", \"bundleName\"));\n \n-        columns.add(new AbstractColumn<ConnInstanceTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<ConnInstanceTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -415,7 +415,7 @@ protected void onUpdate(AjaxRequestTarget target) {\n         add(paginatorForm);\n     }\n \n-    class ResourcesProvider extends SortableDataProvider<ResourceTO> {\n+    class ResourcesProvider extends SortableDataProvider<ResourceTO, String> {\n \n         private static final long serialVersionUID = -9055916672926643975L;\n \n@@ -428,16 +428,16 @@ public ResourcesProvider() {\n         }\n \n         @Override\n-        public Iterator<ResourceTO> iterator(final int first, final int count) {\n+        public Iterator<ResourceTO> iterator(final long first, final long count) {\n             List<ResourceTO> list = getResourcesListDB();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return getResourcesListDB().size();\n         }\n \n@@ -459,7 +459,7 @@ public List<ResourceTO> getResourcesListDB() {\n         }\n     }\n \n-    class ConnectorsProvider extends SortableDataProvider<ConnInstanceTO> {\n+    class ConnectorsProvider extends SortableDataProvider<ConnInstanceTO, String> {\n \n         private static final long serialVersionUID = 4445909568349448518L;\n \n@@ -472,16 +472,16 @@ public ConnectorsProvider() {\n         }\n \n         @Override\n-        public Iterator<ConnInstanceTO> iterator(int first, int count) {\n+        public Iterator<ConnInstanceTO> iterator(long first, long count) {\n             List<ConnInstanceTO> list = getConnectorsListDB();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return getConnectorsListDB().size();\n         }\n "},{"sha":"8e5486603aac825898c1fcfa67a667c55d3df0d3","filename":"console/src/main/java/org/apache/syncope/console/pages/RoleOwnerSelectModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleOwnerSelectModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleOwnerSelectModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleOwnerSelectModalPage.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -27,8 +27,8 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.html.tree.BaseTree;\n-import org.apache.wicket.markup.html.tree.LinkTree;\n+import org.apache.wicket.extensions.markup.html.tree.BaseTree;\n+import org.apache.wicket.extensions.markup.html.tree.LinkTree;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;"},{"sha":"bc6358ba03a7d716c6e67ef071e2f319308c73b8","filename":"console/src/main/java/org/apache/syncope/console/pages/Roles.java","status":"modified","additions":46,"deletions":2,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoles.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -19,10 +19,10 @@\n package org.apache.syncope.console.pages;\n \n import org.apache.syncope.console.pages.panels.RoleSummaryPanel;\n-import org.apache.syncope.console.pages.panels.RoleSummaryPanel.TreeNodeClickUpdate;\n import org.apache.syncope.console.wicket.markup.html.tree.TreeRolePanel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -62,11 +62,11 @@ public Roles(final PageParameters parameters) {\n \n         final RoleSummaryPanel nodePanel = new RoleSummaryPanel(\"summaryPanel\", createRoleWin,\n                 Roles.this.getPageReference());\n+        \n         nodePanel.setOutputMarkupId(true);\n         container.add(nodePanel);\n \n         createRoleWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n             private static final long serialVersionUID = 8804221891699487139L;\n \n             @Override\n@@ -88,4 +88,48 @@ public void onClose(final AjaxRequestTarget target) {\n \n         container.add(createRoleWin);\n     }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        super.onEvent(event);\n+\n+        if (event.getPayload() instanceof TreeNodeClickUpdate) {\n+\n+            final TreeNodeClickUpdate update = (TreeNodeClickUpdate) event.getPayload();\n+\n+            final RoleSummaryPanel nodePanel = new RoleSummaryPanel(\"summaryPanel\", createRoleWin,\n+                    Roles.this.getPageReference(), update.getSelectedNodeId());\n+            \n+            container.addOrReplace(nodePanel);\n+            update.getTarget().add(this);           \n+        }\n+    }\n+\n+    public static class TreeNodeClickUpdate {\n+\n+        private AjaxRequestTarget target;\n+\n+        private Long selectedNodeId;\n+\n+        public TreeNodeClickUpdate(final AjaxRequestTarget target, final Long selectedNodeId) {\n+\n+            this.target = target;\n+            this.selectedNodeId = selectedNodeId;\n+        }\n+\n+        /**\n+         * @return ajax request target\n+         */\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+\n+        public Long getSelectedNodeId() {\n+            return selectedNodeId;\n+        }\n+\n+        public void setSelectedNodeId(final Long selectedNodeId) {\n+            this.selectedNodeId = selectedNodeId;\n+        }\n+    }\n }"},{"sha":"a6e24ad78bb65819ea0fa1a61a5a9b901a596465","filename":"console/src/main/java/org/apache/syncope/console/pages/Schema.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -541,7 +541,7 @@ columnsMembershipsVir, new VirtualSchemaProvider(SchemaVirtualType.MembershipVir\n                 \"createMembershipVirtualSchemaWin\", allowedCreateRoles));\n     }\n \n-    private class SchemaProvider extends SortableDataProvider<SchemaTO> {\n+    private class SchemaProvider extends SortableDataProvider<SchemaTO, String> {\n \n         private static final long serialVersionUID = 712816496206559637L;\n \n@@ -560,16 +560,16 @@ public SchemaProvider(final SchemaType schemaType) {\n         }\n \n         @Override\n-        public Iterator<SchemaTO> iterator(final int first, final int count) {\n+        public Iterator<SchemaTO> iterator(final long first, final long count) {\n             List<SchemaTO> list = getSchemaDB();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return getSchemaDB().size();\n         }\n \n@@ -601,7 +601,7 @@ private List<SchemaTO> getSchemaDB() {\n         }\n     }\n \n-    private class DerivedSchemaProvider extends SortableDataProvider<DerivedSchemaTO> {\n+    private class DerivedSchemaProvider extends SortableDataProvider<DerivedSchemaTO, String> {\n \n         private static final long serialVersionUID = -8518694430295937917L;\n \n@@ -619,16 +619,16 @@ public DerivedSchemaProvider(final SchemaDerivedType schema) {\n         }\n \n         @Override\n-        public Iterator<DerivedSchemaTO> iterator(int first, int count) {\n+        public Iterator<DerivedSchemaTO> iterator(final long first, final long count) {\n             List<DerivedSchemaTO> list = getDerivedSchemaDB();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return getDerivedSchemaDB().size();\n         }\n \n@@ -653,7 +653,7 @@ private List<DerivedSchemaTO> getDerivedSchemaDB() {\n         }\n     }\n \n-    private class VirtualSchemaProvider extends SortableDataProvider<VirtualSchemaTO> {\n+    private class VirtualSchemaProvider extends SortableDataProvider<VirtualSchemaTO, String> {\n \n         private static final long serialVersionUID = -5431560608852987760L;\n \n@@ -671,16 +671,16 @@ public VirtualSchemaProvider(final SchemaVirtualType schema) {\n         }\n \n         @Override\n-        public Iterator<VirtualSchemaTO> iterator(int first, int count) {\n+        public Iterator<VirtualSchemaTO> iterator(final long first, final long count) {\n             List<VirtualSchemaTO> list = getVirtualSchemaDB();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return getVirtualSchemaDB().size();\n         }\n \n@@ -716,7 +716,7 @@ private <T extends AbstractSchemaModalPage> List<IColumn> getColumnsForSchema(\n             columns.add(new PropertyColumn(new ResourceModel(field), field, field));\n         }\n \n-        columns.add(new AbstractColumn<AbstractBaseBean>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<AbstractBaseBean, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n "},{"sha":"3f049e8f81a8a98d82fa8ac7585d80bd8d84635d","filename":"console/src/main/java/org/apache/syncope/console/pages/TaskModalPage.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -117,7 +117,7 @@ public TaskModalPage(final TaskTO taskTO) {\n \n         columns.add(new PropertyColumn(new ResourceModel(\"status\"), \"status\", \"status\"));\n \n-        columns.add(new AbstractColumn<TaskExecTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<TaskExecTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -201,6 +201,7 @@ public void onClick(AjaxRequestTarget target) {\n         };\n         \n         reload.add(new Behavior() {\n+            private static final long serialVersionUID = 1469628524240283489L;\n \n             @Override\n             public void onComponentTag(final Component component, final ComponentTag tag) {\n@@ -218,7 +219,7 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n         executions.addOrReplace(reload);\n     }\n \n-    protected static class TaskExecutionsProvider extends SortableDataProvider<TaskExecTO> {\n+    protected static class TaskExecutionsProvider extends SortableDataProvider<TaskExecTO, String> {\n \n         private static final long serialVersionUID = 8943636537120648961L;\n \n@@ -234,17 +235,17 @@ public TaskExecutionsProvider(final TaskTO taskTO) {\n         }\n \n         @Override\n-        public Iterator<TaskExecTO> iterator(final int first, final int count) {\n+        public Iterator<TaskExecTO> iterator(final long first, final long count) {\n \n             List<TaskExecTO> list = taskTO.getExecutions();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return taskTO.getExecutions().size();\n         }\n "},{"sha":"c87afd3493afae06624f6fc67ea31111138c1537","filename":"console/src/main/java/org/apache/syncope/console/pages/Tasks.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -62,7 +62,7 @@ public void setWindowClosedCallback(final ModalWindow window, final WebMarkupCon\n         super.setWindowClosedCallback(window, container);\n     }\n \n-    public static class TaskExecutionsProvider extends SortableDataProvider<TaskExecTO> {\n+    public static class TaskExecutionsProvider extends SortableDataProvider<TaskExecTO, String> {\n \n         private static final long serialVersionUID = -5401263348984206145L;\n \n@@ -80,17 +80,17 @@ public TaskExecutionsProvider(final TaskTO taskTO) {\n         }\n \n         @Override\n-        public Iterator<TaskExecTO> iterator(final int first, final int count) {\n+        public Iterator<TaskExecTO> iterator(final long first, final long count) {\n \n             List<TaskExecTO> list = getTaskDB();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return getTaskDB().size();\n         }\n \n@@ -113,7 +113,7 @@ public List<TaskExecTO> getTaskDB() {\n         }\n     }\n \n-    public static class TasksProvider<T extends TaskTO> extends SortableDataProvider<T> {\n+    public static class TasksProvider<T extends TaskTO> extends SortableDataProvider<T, String> {\n \n         private static final long serialVersionUID = -20112718133295756L;\n \n@@ -142,10 +142,10 @@ public TasksProvider(\n         }\n \n         @Override\n-        public Iterator<T> iterator(final int first, final int count) {\n+        public Iterator<T> iterator(final long first, final long count) {\n             final List<T> tasks = new ArrayList<T>();\n \n-            for (T task : (List<T>) restClient.listTasks(reference, (first / paginatorRows) + 1, paginatorRows)) {\n+            for (T task : (List<T>) restClient.listTasks(reference, ((int)first / paginatorRows) + 1, paginatorRows)) {\n \n                 if (task instanceof SchedTaskTO && ((SchedTaskTO) task).getLastExec() == null\n                         && task.getExecutions() != null && !task.getExecutions().isEmpty()) {\n@@ -170,7 +170,7 @@ public int compare(final TaskExecTO left, final TaskExecTO right) {\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return restClient.count(id);\n         }\n \n@@ -189,13 +189,13 @@ public IModel<T> model(final T object) {\n      * @param currentPage current page index.\n      * @return data table.\n      */\n-    public static AjaxFallbackDefaultDataTable<TaskTO> updateTaskTable(\n-            final List<IColumn<TaskTO>> columns,\n+    public static AjaxFallbackDefaultDataTable<TaskTO, String> updateTaskTable(\n+            final List<IColumn<TaskTO, String>> columns,\n             final TasksProvider dataProvider,\n             final WebMarkupContainer container,\n             final int currentPage) {\n \n-        final AjaxFallbackDefaultDataTable<TaskTO> table = new AjaxFallbackDefaultDataTable<TaskTO>(\n+        final AjaxFallbackDefaultDataTable<TaskTO, String> table = new AjaxFallbackDefaultDataTable<TaskTO, String>(\n                 \"datatable\", columns, dataProvider, dataProvider.paginatorRows);\n \n         table.setCurrentPage(currentPage);"},{"sha":"449196813996091fc28db5b6c45d7e09658cfb83","filename":"console/src/main/java/org/apache/syncope/console/pages/Todo.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FTodo.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -121,7 +121,7 @@ private void setupApproval() {\n         columns.add(new DatePropertyColumn(new ResourceModel(\"createTime\"), \"createTime\", \"createTime\"));\n         columns.add(new DatePropertyColumn(new ResourceModel(\"dueDate\"), \"dueDate\", \"dueDate\"));\n         columns.add(new PropertyColumn(new ResourceModel(\"owner\"), \"owner\", \"owner\"));\n-        columns.add(new AbstractColumn<WorkflowFormTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<WorkflowFormTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -233,7 +233,7 @@ private void setupUserRequest() {\n         columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n         columns.add(new PropertyColumn(new ResourceModel(\"type\"), \"type\", \"type\"));\n         columns.add(new UserRequestColumn(\"user\"));\n-        columns.add(new AbstractColumn<UserRequestTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<UserRequestTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -361,7 +361,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         setWindowClosedCallback(editUserRequestWin, userRequestContainer);\n     }\n \n-    private class ApprovalProvider extends SortableDataProvider<WorkflowFormTO> {\n+    private class ApprovalProvider extends SortableDataProvider<WorkflowFormTO, String> {\n \n         private static final long serialVersionUID = -2311716167583335852L;\n \n@@ -374,17 +374,17 @@ public ApprovalProvider() {\n         }\n \n         @Override\n-        public Iterator<WorkflowFormTO> iterator(final int first, final int count) {\n+        public Iterator<WorkflowFormTO> iterator(final long first, final long count) {\n \n             List<WorkflowFormTO> list = approvalRestClient.getForms();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return approvalRestClient.getForms().size();\n         }\n \n@@ -403,7 +403,7 @@ public WorkflowFormTO getObject() {\n         }\n     }\n \n-    private class UserRequestProvider extends SortableDataProvider<UserRequestTO> {\n+    private class UserRequestProvider extends SortableDataProvider<UserRequestTO, String> {\n \n         private static final long serialVersionUID = -2311716167583335852L;\n \n@@ -416,17 +416,17 @@ public UserRequestProvider() {\n         }\n \n         @Override\n-        public Iterator<UserRequestTO> iterator(final int first, final int count) {\n+        public Iterator<UserRequestTO> iterator(final long first, final long count) {\n \n             List<UserRequestTO> list = userRequestRestClient.list();\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return userRequestRestClient.list().size();\n         }\n \n@@ -445,7 +445,7 @@ public UserRequestTO getObject() {\n         }\n     }\n \n-    private class UserRequestColumn extends AbstractColumn<UserRequestTO> {\n+    private class UserRequestColumn extends AbstractColumn<UserRequestTO, String> {\n \n         private static final long serialVersionUID = 8077865338230121496L;\n "},{"sha":"15cbf1ff3da9da167cb2d5c837a657d325cc063d","filename":"console/src/main/java/org/apache/syncope/console/pages/UserModalPage.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -82,11 +82,11 @@ public UserModalPage(final PageReference callerPageRef, final ModalWindow window\n         add(fragment);\n         add(new CloseOnESCBehavior(window));\n     }\n-\n+  \n     public UserModalPage(final ModalWindow window, final UserTO userTO, final Mode mode) {\n \n         super();\n-\n+        \n         this.callerPageRef = null;\n         this.window = window;\n         this.mode = mode;\n@@ -178,7 +178,7 @@ protected Form setupEditPanel() {\n         fragment.add(form);\n         form.add(submit);\n \n-        final IndicatingAjaxButton cancel = new IndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\")) {\n+        final AjaxButton cancel = new AjaxButton(\"cancel\", new ResourceModel(\"cancel\")) {\n             private static final long serialVersionUID = 530608535790823587L;\n \n             @Override"},{"sha":"bd701d93b294ff2ba7e9c6904145a6e1445bcab9","filename":"console/src/main/java/org/apache/syncope/console/pages/UserRequestModalPage.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -22,13 +22,13 @@\n import org.apache.syncope.client.to.UserRequestTO;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.client.util.AttributableOperations;\n+import org.apache.syncope.console.rest.UserRequestRestClient;\n+import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.apache.syncope.console.rest.UserRequestRestClient;\n-import org.apache.syncope.console.rest.UserRestClient;\n \n /**\n  * Modal window with User form.\n@@ -82,7 +82,6 @@ public UserRequestModalPage(final PageReference callerPageRef, final ModalWindow\n     }\n \n     public UserRequestModalPage(final ModalWindow window, final UserTO userTO, final Mode mode) {\n-\n         super(window, userTO, mode);\n     }\n \n@@ -107,8 +106,10 @@ protected void submitAction(final AjaxRequestTarget target, final Form form) {\n                     LOG.warn(\"Invalid mode specified for {}: {}\", getClass().getName(), mode);\n             }\n         } else {\n-            final UserMod userMod = AttributableOperations.diff(updatedUserTO,\n-                    userRestClient.read(updatedUserTO.getId()));\n+            final UserTO originalUserTO = mode == Mode.SELF\n+                    ? userRestClient.read(updatedUserTO.getUsername())\n+                    : userRestClient.read(updatedUserTO.getId());\n+            final UserMod userMod = AttributableOperations.diff(updatedUserTO, originalUserTO);\n \n             // update user only if it has changed\n             if (!userMod.isEmpty()) {"},{"sha":"59506723ca398dcafba68e8704b1866a6340b816","filename":"console/src/main/java/org/apache/syncope/console/pages/Users.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -71,15 +71,15 @@ public void onClick(final AjaxRequestTarget target) {\n                 editModalWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                     private static final long serialVersionUID = -7834632442532690940L;\n-\n+                  \n                     @Override\n                     public Page createPage() {\n                         return new EditUserModalPage(Users.this.getPageReference(), editModalWin, new UserTO());\n                     }\n                 });\n \n                 editModalWin.show(target);\n-            }\n+            }    \n         };\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 createLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\"));"},{"sha":"b2fe7d6aaf139ea3a373547fd60bf00380c26812","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/DerivedAttributesPanel.java","status":"modified","additions":20,"deletions":18,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -19,9 +19,18 @@\n package org.apache.syncope.console.pages.panels;\n \n import java.util.List;\n+import org.apache.syncope.client.to.AbstractAttributableTO;\n+import org.apache.syncope.client.to.AttributeTO;\n+import org.apache.syncope.client.to.RoleTO;\n+import org.apache.syncope.client.to.UserTO;\n+import org.apache.syncope.console.rest.SchemaRestClient;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n+import org.apache.syncope.types.AttributableType;\n+import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.IAjaxCallDecorator;\n-import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n+import org.apache.wicket.ajax.attributes.AjaxCallListener;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n+import org.apache.wicket.ajax.attributes.IAjaxCallListener;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n@@ -40,13 +49,6 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.apache.syncope.client.to.AbstractAttributableTO;\n-import org.apache.syncope.client.to.AttributeTO;\n-import org.apache.syncope.client.to.RoleTO;\n-import org.apache.syncope.client.to.UserTO;\n-import org.apache.syncope.console.rest.SchemaRestClient;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n-import org.apache.syncope.types.AttributableType;\n \n public class DerivedAttributesPanel extends Panel {\n \n@@ -105,7 +107,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         };\n \n         add(addAttributeBtn.setDefaultFormProcessing(Boolean.FALSE));\n-\n+        \n         final ListView<AttributeTO> attributes = new ListView<AttributeTO>(\"attributes\",\n                 new PropertyModel<List<? extends AttributeTO>>(entityTO, \"derivedAttributes\")) {\n \n@@ -115,7 +117,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n             protected void populateItem(final ListItem<AttributeTO> item) {\n                 final AttributeTO attributeTO = item.getModelObject();\n \n-                item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model<Boolean>(Boolean.FALSE)) {\n+                item.add(new  AjaxDecoratedCheckbox(\"toRemove\", new Model<Boolean>(Boolean.FALSE)) {\n \n                     private static final long serialVersionUID = 7170946748485726506L;\n \n@@ -126,18 +128,18 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     }\n \n                     @Override\n-                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                    protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {\n+                        super.updateAjaxAttributes(attributes);\n \n-                            private static final long serialVersionUID = -7927968187160354605L;\n+                        IAjaxCallListener ajaxCallListener = new AjaxCallListener() {\n+                            private static final long serialVersionUID = 7160235486520935153L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(final CharSequence script) {\n-\n-                                return \"if (confirm('\" + getString(\"confirmDelete\") + \"'))\" + \"{\" + script + \"} \"\n-                                        + \"else {this.checked = false;}\";\n+                            public CharSequence getPrecondition(Component component) { \n+                                return \"if (!confirm('\" + getString(\"confirmDelete\") + \"')) return false;\";\n                             }\n                         };\n+                        attributes.getAjaxCallListeners().add(ajaxCallListener);\n                     }\n                 });\n "},{"sha":"9fbe480778724bffa85d34deaaecece2923dd168","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/MembershipsPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FMembershipsPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -32,13 +32,13 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.tree.BaseTree;\n+import org.apache.wicket.extensions.markup.html.tree.LinkTree;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.markup.html.tree.BaseTree;\n-import org.apache.wicket.markup.html.tree.LinkTree;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;"},{"sha":"67f0ddec98eedf56367a05929adf943fb0014663","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/NotificationTasks.java","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -82,9 +82,9 @@ public class NotificationTasks extends Panel {\n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n-    private final List<IColumn<TaskTO>> columns;\n+    private final List<IColumn<TaskTO, String>> columns;\n \n-    private AjaxFallbackDefaultDataTable<TaskTO> table;\n+    private AjaxFallbackDefaultDataTable<TaskTO, String> table;\n \n     public NotificationTasks(String id) {\n         super(id);\n@@ -97,16 +97,17 @@ public NotificationTasks(String id) {\n \n         paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS);\n \n-        columns = new ArrayList<IColumn<TaskTO>>();\n+        columns = new ArrayList<IColumn<TaskTO, String>>();\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"id\"), \"id\", \"id\"));\n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"sender\"), \"sender\", \"sender\"));\n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"recipients\"), \"recipients\", \"recipients\"));\n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"subject\"), \"subject\", \"subject\"));\n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"traceLevel\"), \"traceLevel\", \"traceLevel\"));\n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"sender\"), \"sender\", \"sender\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"recipients\"), \"recipients\", \"recipients\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"subject\"), \"subject\", \"subject\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"traceLevel\"), \"traceLevel\", \"traceLevel\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        columns.add(new AbstractColumn<TaskTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<TaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -255,9 +256,10 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                 table = Tasks.updateTaskTable(\n                         columns,\n-                        new TasksProvider<NotificationTaskTO>(restClient, paginatorRows, getId(), NotificationTaskTO.class),\n+                        new TasksProvider<NotificationTaskTO>(restClient, paginatorRows,\n+                        getId(), NotificationTaskTO.class),\n                         container,\n-                        table == null ? 0 : table.getCurrentPage());\n+                        table == null ? 0 : (int)table.getCurrentPage());\n \n                 target.add(container);\n             }"},{"sha":"bd065b70c2fb6bc9375968e0ffb18755639e5d46","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PoliciesPanel.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -113,13 +113,14 @@ public PoliciesPanel(final String id, final PolicyType policyType) {\n \n         setWindowClosedCallback(mwindow, container);\n \n-        final List<IColumn<PolicyTO>> columns = new ArrayList<IColumn<PolicyTO>>();\n+        final List<IColumn<PolicyTO, String>> columns = new ArrayList<IColumn<PolicyTO, String>>();\n \n-        columns.add(new PropertyColumn<PolicyTO>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn<PolicyTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new PropertyColumn<PolicyTO>(new ResourceModel(\"description\"), \"description\", \"description\"));\n+        columns.add(new PropertyColumn<PolicyTO, String>(\n+                new ResourceModel(\"description\"), \"description\", \"description\"));\n \n-        columns.add(new AbstractColumn<PolicyTO>(new ResourceModel(\"type\")) {\n+        columns.add(new AbstractColumn<PolicyTO, String>(new ResourceModel(\"type\")) {\n \n             private static final long serialVersionUID = 8263694778917279290L;\n \n@@ -131,7 +132,7 @@ public void populateItem(final Item<ICellPopulator<PolicyTO>> cellItem, final St\n             }\n         });\n \n-        columns.add(new AbstractColumn<PolicyTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<PolicyTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -265,7 +266,7 @@ public void onClose(final AjaxRequestTarget target) {\n         });\n     }\n \n-    private class PolicyDataProvider extends SortableDataProvider<PolicyTO> {\n+    private class PolicyDataProvider extends SortableDataProvider<PolicyTO, String> {\n \n         private static final long serialVersionUID = -6976327453925166730L;\n \n@@ -281,18 +282,18 @@ public PolicyDataProvider() {\n         }\n \n         @Override\n-        public int size() {\n+        public long size() {\n             return policyRestClient.getPolicies(policyType).size();\n         }\n \n         @Override\n-        public Iterator<PolicyTO> iterator(final int first, final int count) {\n+        public Iterator<PolicyTO> iterator(final long first, final long count) {\n \n             final List<PolicyTO> policies = policyRestClient.getPolicies(policyType);\n \n             Collections.sort(policies, comparator);\n \n-            return policies.subList(first, first + count).iterator();\n+            return policies.subList((int)first, (int)first + (int)count).iterator();\n         }\n \n         @Override"},{"sha":"da3cff44319df7de120a2f4f69a82cdb204092d6","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PolicyBeanPanel.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -26,6 +26,15 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.annotation.SchemaList;\n+import org.apache.syncope.console.commons.XMLRolesReader;\n+import org.apache.syncope.console.rest.SchemaRestClient;\n+import org.apache.syncope.console.wicket.markup.html.form.AbstractFieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n import org.apache.syncope.types.AbstractPolicySpec;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.ConflictResolutionAction;\n@@ -45,15 +54,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.util.StringUtils;\n-import org.apache.syncope.console.commons.XMLRolesReader;\n-import org.apache.syncope.console.rest.SchemaRestClient;\n-import org.apache.syncope.console.wicket.markup.html.form.AbstractFieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n \n public class PolicyBeanPanel extends Panel {\n \n@@ -210,7 +210,7 @@ private <T extends Serializable> AjaxCheckBoxPanel getActivationControl(final Ab\n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n-            protected void onUpdate(AjaxRequestTarget target) {\n+            protected void onUpdate(final AjaxRequestTarget target) {\n                 if (check.getModelObject()) {\n                     panel.setEnabled(true);\n                     panel.setModelObject(reinitializedValue);"},{"sha":"0ae664ab9b5abe05eee57d95e3d270fc98eff71f","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PropagationTasks.java","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -86,9 +86,9 @@ public class PropagationTasks extends Panel {\n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n-    private final List<IColumn<TaskTO>> columns;\n+    private final List<IColumn<TaskTO, String>> columns;\n \n-    private AjaxFallbackDefaultDataTable<TaskTO> table;\n+    private AjaxFallbackDefaultDataTable<TaskTO, String> table;\n \n     public PropagationTasks(final String id) {\n         super(id);\n@@ -101,26 +101,28 @@ public PropagationTasks(final String id) {\n \n         paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS);\n \n-        columns = new ArrayList<IColumn<TaskTO>>();\n+        columns = new ArrayList<IColumn<TaskTO, String>>();\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"resource\"), \"resource\", \"resource\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"resource\"), \"resource\", \"resource\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"accountId\"), \"accountId\", \"accountId\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"accountId\"), \"accountId\", \"accountId\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"propagationMode\"), \"propagationMode\", \"propagationMode\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new ResourceModel(\"propagationMode\"), \"propagationMode\", \"propagationMode\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"propagationOperation\"), \"propagationOperation\",\n-                \"propagationOperation\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new ResourceModel(\"propagationOperation\"), \"propagationOperation\", \"propagationOperation\"));\n \n         columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n \n         columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        columns.add(new AbstractColumn<TaskTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<TaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -273,7 +275,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         new TasksProvider<PropagationTaskTO>(restClient, paginatorRows,\n                         getId(), PropagationTaskTO.class),\n                         container,\n-                        table == null ? 0 : table.getCurrentPage());\n+                        table == null ? 0 : (int)table.getCurrentPage());\n \n                 target.add(container);\n             }"},{"sha":"e9d5580b5f1376c6377cea86e2607d4fd0ee689d","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceDetailsPanel.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -130,7 +130,7 @@ protected List<ConnInstanceTO> load() {\n         add(deleteTraceLevel);\n \n         final AjaxDropDownChoicePanel<TraceLevel> syncTraceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n-                \"syncTraceLevel\", new ResourceModel(\"syncTraceLevel\", \"syncTraceLevel\").getObject(), \n+                \"syncTraceLevel\", new ResourceModel(\"syncTraceLevel\", \"syncTraceLevel\").getObject(),\n                 new PropertyModel<TraceLevel>(resourceTO, \"syncTraceLevel\"));\n         syncTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n         add(syncTraceLevel);\n@@ -145,14 +145,15 @@ protected List<ConnInstanceTO> load() {\n             @Override\n             protected void onUpdate(final AjaxRequestTarget art) {\n                 if (resetToken.getModelObject()) {\n-                    resourceTO.setSyncToken(null);\n+                    resourceTO.setUsyncToken(null);\n+                    resourceTO.setRsyncToken(null);\n                 }\n             }\n         });\n         add(resetToken);\n \n         final AjaxDropDownChoicePanel<ConnInstanceTO> conn = new AjaxDropDownChoicePanel<ConnInstanceTO>(\"connector\",\n-                new ResourceModel(\"connector\", \"connector\").getObject(), \n+                new ResourceModel(\"connector\", \"connector\").getObject(),\n                 new PropertyModel<ConnInstanceTO>(this, \"connInstanceTO\"));\n         conn.setChoices(connectors.getObject());\n         conn.setChoiceRenderer(new ChoiceRenderer(\"displayName\", \"id\"));"},{"sha":"5fb456b8a20386a8fb75f2723b62e739dff6add6","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -40,8 +40,6 @@\n import org.apache.syncope.types.ConnConfProperty;\n import org.apache.syncope.types.IntMappingType;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.IAjaxCallDecorator;\n-import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.event.IEvent;\n@@ -57,6 +55,9 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.attributes.AjaxCallListener;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n \n /**\n  * Resource mapping panel.\n@@ -244,18 +245,19 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     }\n \n                     @Override\n-                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                    protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {\n+                        super.updateAjaxAttributes(attributes);\n \n-                            private static final long serialVersionUID = -7927968187160354605L;\n+                        final AjaxCallListener ajaxCallListener = new AjaxCallListener() {\n+                            \n+                            private static final long serialVersionUID = 7160235486520935153L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(final CharSequence script) {\n-\n-                                return \"if (confirm('\" + getString(\"confirmDelete\") + \"'))\" + \"{\" + script + \"} \"\n-                                        + \"else {this.checked = false;}\";\n+                            public CharSequence getPrecondition(final Component component) {\n+                                return \"if (!confirm('\" + getString(\"confirmDelete\") + \"')) return false;\";\n                             }\n                         };\n+                        attributes.getAjaxCallListeners().add(ajaxCallListener);\n                     }\n                 });\n \n@@ -266,8 +268,8 @@ public CharSequence preDecorateScript(final CharSequence script) {\n                 intAttrNames.setStyleSheet(fieldStyle);\n                 item.add(intAttrNames);\n \n-                final AjaxDropDownChoicePanel<IntMappingType> typesPanel = new AjaxDropDownChoicePanel<IntMappingType>(\n-                        \"intMappingTypes\",\n+                final AjaxDropDownChoicePanel<IntMappingType> typesPanel =\n+                        new AjaxDropDownChoicePanel<IntMappingType>(\"intMappingTypes\",\n                         new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").getObject(),\n                         new PropertyModel<IntMappingType>(mapItem, \"intMappingType\"));\n "},{"sha":"de53ce3daba118aad46f6a18334b497ed81c6d75","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResultSetPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -158,7 +158,7 @@ public class ResultSetPanel extends Panel implements IEventSource {\n     /**\n      * Result table.\n      */\n-    private AjaxFallbackDefaultDataTable<UserTO> resultTable;\n+    private AjaxFallbackDefaultDataTable<UserTO, String> resultTable;\n \n     /**\n      * Data provider used to search for users.\n@@ -358,11 +358,11 @@ private void updateResultTable(final boolean create, final int rows) {\n \n         final int currentPage = resultTable != null\n                 ? (create\n-                ? resultTable.getPageCount() - 1\n-                : resultTable.getCurrentPage())\n+                ? (int)resultTable.getPageCount() - 1\n+                : (int)resultTable.getCurrentPage())\n                 : 0;\n \n-        resultTable = new AjaxFallbackDefaultDataTable<UserTO>(\"resultTable\", getColumns(), dataProvider, rows);\n+        resultTable = new AjaxFallbackDefaultDataTable<UserTO, String>(\"resultTable\", getColumns(), dataProvider, rows);\n \n         resultTable.setCurrentPage(currentPage);\n \n@@ -371,8 +371,8 @@ private void updateResultTable(final boolean create, final int rows) {\n         container.addOrReplace(resultTable);\n     }\n \n-    protected List<IColumn<UserTO>> getColumns() {\n-        final List<IColumn<UserTO>> columns = new ArrayList<IColumn<UserTO>>();\n+    private List<IColumn<UserTO, String>> getColumns() {\n+        final List<IColumn<UserTO, String>> columns = new ArrayList<IColumn<UserTO, String>>();\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n \n@@ -394,7 +394,7 @@ protected List<IColumn<UserTO>> getColumns() {\n             } else if (field != null && field.getType().equals(Date.class)) {\n                 columns.add(new DatePropertyColumn<UserTO>(new ResourceModel(name, name), name, name));\n             } else {\n-                columns.add(new PropertyColumn<UserTO>(new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n             }\n         }\n \n@@ -413,14 +413,14 @@ protected List<IColumn<UserTO>> getColumns() {\n         // Add defaults in case of no selection\n         if (columns.isEmpty()) {\n             for (String name : DisplayAttributesModalPage.DEFAULT_SELECTION) {\n-                columns.add(new PropertyColumn<UserTO>(new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n             }\n \n             prefMan.setList(getRequest(), getResponse(), Constants.PREF_USERS_DETAILS_VIEW,\n                     DisplayAttributesModalPage.DEFAULT_SELECTION);\n         }\n \n-        columns.add(new AbstractColumn<UserTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<UserTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n "},{"sha":"5659fd2d47b6c761be0ee08f3a31f7624f6a7b2a","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RolePanel.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -41,25 +41,27 @@ public class RolePanel extends Panel {\n     public RolePanel(final String id, final Form form, final RoleTO roleTO) {\n         super(id);\n \n-        this.add(new RoleDetailsPanel(\"details\", roleTO, form));\n+        this.add(new RoleDetailsPanel(\"details\", roleTO, form).setOutputMarkupId(true));\n \n         //--------------------------------\n         // Attributes panel\n-        this.add(new AttributesPanel(\"attributes\", roleTO, form, false));\n+        this.add(new AttributesPanel(\"attributes\", roleTO, form, false).setOutputMarkupId(true));\n \n         final AjaxCheckBoxPanel inhAttributes = new AjaxCheckBoxPanel(\"inheritAttributes\", \"inheritAttributes\",\n                 new PropertyModel<Boolean>(roleTO, \"inheritAttributes\"));\n+        inhAttributes.setOutputMarkupId(true);\n         this.add(inhAttributes);\n         //--------------------------------\n \n         //--------------------------------\n         // Derived attributes container\n         //--------------------------------\n-        this.add(new DerivedAttributesPanel(\"derivedAttributes\", roleTO));\n+        this.add(new DerivedAttributesPanel(\"derivedAttributes\", roleTO).setOutputMarkupId(true));\n \n         final AjaxCheckBoxPanel inhDerivedAttributes = new AjaxCheckBoxPanel(\"inheritDerivedAttributes\",\n                 \"inheritDerivedAttributes\", new PropertyModel<Boolean>(roleTO, \"inheritDerivedAttributes\"));\n         inhDerivedAttributes.setOutputMarkupId(true);\n+        inhDerivedAttributes.setOutputMarkupId(true);\n         this.add(inhDerivedAttributes);\n         //--------------------------------\n \n@@ -71,21 +73,22 @@ public RolePanel(final String id, final Form form, final RoleTO roleTO) {\n         final AjaxCheckBoxPanel inhVirtualAttributes = new AjaxCheckBoxPanel(\"inheritVirtualAttributes\",\n                 \"inheritVirtualAttributes\", new PropertyModel<Boolean>(roleTO, \"inheritVirtualAttributes\"));\n         inhVirtualAttributes.setOutputMarkupId(true);\n+        inhVirtualAttributes.setOutputMarkupId(true);\n         this.add(inhVirtualAttributes);\n         //--------------------------------\n \n         //--------------------------------\n         // Security container\n         //--------------------------------\n \n-        this.add(new RoleSecurityPanel(\"security\", roleTO));\n+        this.add(new RoleSecurityPanel(\"security\", roleTO).setOutputMarkupId(true));\n         //--------------------------------\n \n         //--------------------------------\n         // Resources container\n         //--------------------------------\n \n-        this.add(new ResourcesPanel(\"resources\", roleTO));\n+        this.add(new ResourcesPanel(\"resources\", roleTO).setOutputMarkupId(true));\n         //--------------------------------\n \n         ListModel<String> selectedEntitlements = new ListModel<String>(roleTO.getEntitlements());"},{"sha":"9117bd3cf5adf8dcdb00b40c6803905f139daa07","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleSummaryPanel.java","status":"modified","additions":15,"deletions":69,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -22,12 +22,10 @@\n import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.wicket.markup.html.tree.TreeActionLinkPanel;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n public class RoleSummaryPanel extends Panel {\n@@ -50,89 +48,37 @@ public class RoleSummaryPanel extends Panel {\n     private ModalWindow window;\n \n     public RoleSummaryPanel(final String id, final ModalWindow window, final PageReference callerPageRef) {\n+        this(id, window, callerPageRef, null);\n+    }\n+\n+    public RoleSummaryPanel(final String id,\n+            final ModalWindow window, final PageReference callerPageRef, final Long selectedNodeId) {\n \n         super(id);\n \n         this.callerPageRef = callerPageRef;\n         this.window = window;\n \n-        fragment = new Fragment(\"rolePanel\",\n-                this.selectedNode == null\n-                ? \"fakerootFrag\"\n-                : (this.selectedNode.getId() == 0 ? \"rootPanel\" : \"roleViewPanel\"),\n-                this);\n+        this.selectedNode = selectedNodeId != null && selectedNodeId != 0 ? restClient.read(selectedNodeId) : null;\n \n-        if (this.selectedNode != null) {\n-            if (this.selectedNode.getId() == 0) {\n-                actionLink = new TreeActionLinkPanel(\"actionLink\", this.selectedNode.getId(),\n-                        new CompoundPropertyModel(this.selectedNode), window, callerPageRef);\n+        fragment = new Fragment(\"roleSummaryPanel\", selectedNodeId == null ? \"fakerootFrag\"\n+                : (selectedNodeId == 0 ? \"rootPanel\" : \"roleViewPanel\"), this);\n+\n+        if (selectedNodeId != null) {\n+            if (selectedNodeId == 0) {\n+                actionLink = new TreeActionLinkPanel(\"actionLink\", selectedNodeId, new Model(), window, callerPageRef);\n+                actionLink.setOutputMarkupId(true);\n                 fragment.add(actionLink);\n             } else {\n                 roleTabPanel = new RoleTabPanel(\"nodeViewPanel\", selectedNode, window, callerPageRef);\n                 roleTabPanel.setOutputMarkupId(true);\n                 fragment.add(roleTabPanel);\n             }\n         }\n-\n         add(fragment);\n     }\n \n     public RoleTO getSelectedNode() {\n         return selectedNode;\n     }\n-\n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        super.onEvent(event);\n-\n-        if (event.getPayload() instanceof TreeNodeClickUpdate) {\n-            final TreeNodeClickUpdate update = (TreeNodeClickUpdate) event.getPayload();\n-\n-            fragment = new Fragment(\"rolePanel\", (update.getSelectedNodeId() == 0\n-                    ? \"rootPanel\" : \"roleViewPanel\"), this);\n-\n-            if (update.getSelectedNodeId() == 0) {\n-                actionLink = new TreeActionLinkPanel(\"actionLink\", update.getSelectedNodeId(),\n-                        new CompoundPropertyModel(this.selectedNode), window, callerPageRef);\n-                actionLink.setOutputMarkupId(true);\n-                fragment.addOrReplace(actionLink);\n-            } else {\n-                this.selectedNode = restClient.read(update.getSelectedNodeId());\n-                roleTabPanel = new RoleTabPanel(\"nodeViewPanel\", this.selectedNode, window, callerPageRef);\n-                roleTabPanel.setOutputMarkupId(true);\n-                fragment.addOrReplace(roleTabPanel);\n-            }\n-\n-            replace(fragment);\n-            update.getTarget().add(this);\n-        }\n-    }\n-\n-    public static class TreeNodeClickUpdate {\n-\n-        private AjaxRequestTarget target;\n-\n-        private Long selectedNodeId;\n-\n-        public TreeNodeClickUpdate(final AjaxRequestTarget target, final Long selectedNodeId) {\n-\n-            this.target = target;\n-            this.selectedNodeId = selectedNodeId;\n-        }\n-\n-        /**\n-         * @return ajax request target\n-         */\n-        public AjaxRequestTarget getTarget() {\n-            return target;\n-        }\n-\n-        public Long getSelectedNodeId() {\n-            return selectedNodeId;\n-        }\n-\n-        public void setSelectedNodeId(final Long selectedNodeId) {\n-            this.selectedNodeId = selectedNodeId;\n-        }\n-    }\n-}\n\\ No newline at end of file\n+}"},{"sha":"0c1238410e1b68e3ac6c407d72c78ceb2bcd3278","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleTabPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -18,6 +18,11 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n+import org.apache.syncope.client.search.MembershipCond;\n+import org.apache.syncope.client.search.NodeCond;\n+import org.apache.syncope.client.to.RoleTO;\n+import org.apache.syncope.console.commons.XMLRolesReader;\n+import org.apache.syncope.console.wicket.markup.html.tree.TreeActionLinkPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n@@ -29,16 +34,11 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.apache.syncope.client.search.MembershipCond;\n-import org.apache.syncope.client.search.NodeCond;\n-import org.apache.syncope.client.to.RoleTO;\n-import org.apache.syncope.console.commons.XMLRolesReader;\n-import org.apache.syncope.console.wicket.markup.html.tree.TreeActionLinkPanel;\n \n public class RoleTabPanel extends Panel {\n \n     private static final long serialVersionUID = 859236186975983959L;\n-\n+    \n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n@@ -47,7 +47,7 @@ public RoleTabPanel(final String id, final RoleTO roleTO, final ModalWindow wind\n \n         super(id);\n \n-        final Form form = new Form(\"RoleForm\");\n+        final Form form = new Form(\"roleForm\");\n \n         final TreeActionLinkPanel actionLink = new TreeActionLinkPanel(\"actionLink\", roleTO.getId(),\n                 new CompoundPropertyModel(roleTO), window, callerPageRef);\n@@ -57,7 +57,7 @@ public RoleTabPanel(final String id, final RoleTO roleTO, final ModalWindow wind\n \n         form.setModel(new CompoundPropertyModel(roleTO));\n         form.setOutputMarkupId(true);\n-\n+        \n         final RolePanel rolePanel = new RolePanel(\"rolePanel\", form, roleTO);\n         rolePanel.setEnabled(false);\n         form.add(rolePanel);\n@@ -87,7 +87,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n             }\n         });\n-\n+        \n         form.add(userListContainer);\n         add(form);\n     }"},{"sha":"82b79fd036dc6c30c9d3e685826a4ae91ce4ba33","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SchedTasks.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -83,9 +83,9 @@ public class SchedTasks extends Panel {\n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n-    private final List<IColumn<TaskTO>> columns;\n+    private final List<IColumn<TaskTO, String>> columns;\n \n-    private AjaxFallbackDefaultDataTable<TaskTO> table;\n+    private AjaxFallbackDefaultDataTable<TaskTO, String> table;\n \n     public SchedTasks(final String id, final PageReference callerPageRef) {\n \n@@ -106,23 +106,24 @@ public SchedTasks(final String id, final PageReference callerPageRef) {\n \n         paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_SCHED_TASKS_PAGINATOR_ROWS);\n \n-        columns = new ArrayList<IColumn<TaskTO>>();\n+        columns = new ArrayList<IColumn<TaskTO, String>>();\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"description\"), \"description\", \"description\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"description\"), \"description\", \"description\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"class\"), \"jobClassName\", \"jobClassName\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"class\"), \"jobClassName\", \"jobClassName\"));\n \n         columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n \n         columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        columns.add(new AbstractColumn<TaskTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<TaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -274,7 +275,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         columns,\n                         new TasksProvider<SchedTaskTO>(restClient, paginatorRows, getId(), SchedTaskTO.class),\n                         container,\n-                        table == null ? 0 : table.getCurrentPage());\n+                        table == null ? 0 : (int)table.getCurrentPage());\n \n                 target.add(container);\n             }"},{"sha":"05db6aa33db7c472c296df01b8aa8e5da2073e0b","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SelectOnlyResultSetPanel.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSelectOnlyResultSetPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSelectOnlyResultSetPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSelectOnlyResultSetPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -61,14 +61,13 @@ public <T extends AbstractAttributableTO> SelectOnlyResultSetPanel(final String\n         container.get(\"displayAttrsLink\").setVisible(false);\n     }\n \n-    @Override\n-    protected List<IColumn<UserTO>> getColumns() {\n-        final List<IColumn<UserTO>> columns = new ArrayList<IColumn<UserTO>>();\n+    protected List<IColumn<UserTO, String>> getColumns() {\n+        final List<IColumn<UserTO, String>> columns = new ArrayList<IColumn<UserTO, String>>();\n         for (String name : DisplayAttributesModalPage.DEFAULT_SELECTION) {\n-            columns.add(new PropertyColumn<UserTO>(new ResourceModel(name, name), name, name));\n+            columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n         }\n \n-        columns.add(new AbstractColumn<UserTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<UserTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 8263694778917279290L;\n "},{"sha":"168855a0220bea0a11f0b5bd2846e721c141c2a2","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -84,9 +84,9 @@ public class SyncTasks extends Panel {\n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n-    private final List<IColumn<TaskTO>> columns;\n+    private final List<IColumn<TaskTO, String>> columns;\n \n-    private AjaxFallbackDefaultDataTable<TaskTO> table;\n+    private AjaxFallbackDefaultDataTable<TaskTO, String> table;\n \n     public SyncTasks(String id, final PageReference callerPageRef) {\n         super(id);\n@@ -106,23 +106,24 @@ public SyncTasks(String id, final PageReference callerPageRef) {\n \n         paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_SYNC_TASKS_PAGINATOR_ROWS);\n \n-        columns = new ArrayList<IColumn<TaskTO>>();\n+        columns = new ArrayList<IColumn<TaskTO, String>>();\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"description\"), \"description\", \"description\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"description\"), \"description\", \"description\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"resourceName\"), \"resource\", \"resource\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(new ResourceModel(\"resourceName\"), \"resource\", \"resource\"));\n \n         columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n \n         columns.add(new DatePropertyColumn<TaskTO>(new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n \n-        columns.add(new PropertyColumn<TaskTO>(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new PropertyColumn<TaskTO, String>(\n+                new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        columns.add(new AbstractColumn<TaskTO>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<TaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -295,7 +296,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         columns,\n                         new TasksProvider<SyncTaskTO>(restClient, paginatorRows, getId(), SyncTaskTO.class),\n                         container,\n-                        table == null ? 0 : table.getCurrentPage());\n+                        table == null ? 0 : (int)table.getCurrentPage());\n \n                 target.add(container);\n             }"},{"sha":"6ca6d5fa4188a97eabbdd4be5d3ce43c2865a77d","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -23,11 +23,11 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n+import org.apache.syncope.client.search.AttributableCond;\n import org.apache.syncope.client.search.AttributeCond;\n import org.apache.syncope.client.search.MembershipCond;\n import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.client.search.ResourceCond;\n-import org.apache.syncope.client.search.SyncopeUserCond;\n import org.apache.syncope.client.to.ResourceTO;\n import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.UserTO;\n@@ -321,11 +321,11 @@ private List<SearchCondWrapper> getSearchCondWrappers(final NodeCond searchCond,\n     private SearchCondWrapper getSearchCondWrapper(final NodeCond searchCond) {\n         SearchCondWrapper wrapper = new SearchCondWrapper();\n \n-        if (searchCond.getSyncopeUserCond() != null) {\n+        if (searchCond.getAttributableCond() != null) {\n             wrapper.setFilterType(FilterType.ATTRIBUTE);\n-            wrapper.setFilterName(searchCond.getSyncopeUserCond().getSchema());\n-            wrapper.setType(searchCond.getSyncopeUserCond().getType());\n-            wrapper.setFilterValue(searchCond.getSyncopeUserCond().getExpression());\n+            wrapper.setFilterName(searchCond.getAttributableCond().getSchema());\n+            wrapper.setType(searchCond.getAttributableCond().getType());\n+            wrapper.setFilterValue(searchCond.getAttributableCond().getExpression());\n         }\n         if (searchCond.getAttributeCond() != null) {\n             wrapper.setFilterType(FilterType.ATTRIBUTE);\n@@ -374,10 +374,10 @@ private NodeCond buildSearchCond(final List<SearchCondWrapper> conditions) {\n \n                 final AttributeCond attributeCond;\n                 if (dnames.getObject().contains(schema)) {\n-                    attributeCond = new SyncopeUserCond();\n+                    attributeCond = new AttributableCond();\n                     nodeCond = searchConditionWrapper.isNotOperator()\n-                            ? NodeCond.getNotLeafCond((SyncopeUserCond) attributeCond)\n-                            : NodeCond.getLeafCond((SyncopeUserCond) attributeCond);\n+                            ? NodeCond.getNotLeafCond((AttributableCond) attributeCond)\n+                            : NodeCond.getLeafCond((AttributableCond) attributeCond);\n                 } else {\n                     attributeCond = new AttributeCond();\n                     nodeCond = searchConditionWrapper.isNotOperator()"},{"sha":"7c0af2b345c25896f4c97dfecacea2b5b8041abf","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/VirtualAttributesPanel.java","status":"modified","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -20,8 +20,6 @@\n \n import java.util.List;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.IAjaxCallDecorator;\n-import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n@@ -47,6 +45,9 @@\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n import org.apache.syncope.types.AttributableType;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.attributes.AjaxCallListener;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n \n public class VirtualAttributesPanel extends Panel {\n \n@@ -123,18 +124,19 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     }\n \n                     @Override\n-                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                    protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {\n+                        super.updateAjaxAttributes(attributes);\n \n-                            private static final long serialVersionUID = -7927968187160354605L;\n+                        final AjaxCallListener ajaxCallListener = new AjaxCallListener() {\n+                            \n+                            private static final long serialVersionUID = 7160235486520935153L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(final CharSequence script) {\n-\n-                                return \"if (confirm('\" + getString(\"confirmDelete\") + \"'))\" + \"{\" + script + \"} \"\n-                                        + \"else {this.checked = false;}\";\n+                            public CharSequence getPrecondition(final Component component) {\n+                                return \"if (!confirm('\" + getString(\"confirmDelete\") + \"')) return false;\";\n                             }\n                         };\n+                        attributes.getAjaxCallListeners().add(ajaxCallListener);\n                     }\n                 });\n "},{"sha":"c98234c9b2f7c4cfc96fdf3bfb697771a3245ef9","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRequestRestClient.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -29,10 +29,6 @@\n @Component\n public class UserRequestRestClient extends AbstractBaseRestClient {\n \n-    public UserTO readProfile() {\n-        return SyncopeSession.get().getRestTemplate().getForObject(baseURL + \"user/request/read/self\", UserTO.class);\n-    }\n-\n     public List<UserRequestTO> list() {\n         return Arrays.asList(SyncopeSession.get().getRestTemplate().getForObject(\n                 baseURL + \"user/request/list\", UserRequestTO[].class));"},{"sha":"ebdefa2516c998e7fb767ffb5d99107c2e0cef02","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -80,6 +80,21 @@ public UserTO read(Long id) {\n         return userTO;\n     }\n \n+    public UserTO read(String username) {\n+        UserTO userTO = null;\n+        try {\n+            userTO = SyncopeSession.get().getRestTemplate().getForObject(\n+                    baseURL + \"user/readByUsername/{username}.json\", UserTO.class, username);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While reading a user\", e);\n+        }\n+        return userTO;\n+    }\n+\n+    public UserTO readProfile() {\n+        return SyncopeSession.get().getRestTemplate().getForObject(baseURL + \"user/read/self\", UserTO.class);\n+    }\n+\n     public Integer searchCount(final NodeCond searchCond) {\n         return SyncopeSession.get().getRestTemplate().postForObject(\n                 baseURL + \"user/search/count.json\", searchCond, Integer.class);"},{"sha":"89f6c29cee69b5ed259d6a2651fab12b696254c5","filename":"console/src/main/java/org/apache/syncope/console/wicket/ajax/markup/html/IndicatingDeleteOnConfirmAjaxLink.java","status":"modified","additions":11,"deletions":7,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingDeleteOnConfirmAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingDeleteOnConfirmAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingDeleteOnConfirmAjaxLink.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -18,8 +18,9 @@\n  */\n package org.apache.syncope.console.wicket.ajax.markup.html;\n \n-import org.apache.wicket.ajax.IAjaxCallDecorator;\n-import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.attributes.AjaxCallListener;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.model.IModel;\n \n@@ -36,15 +37,18 @@ public IndicatingDeleteOnConfirmAjaxLink(final String id) {\n     }\n \n     @Override\n-    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+    protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {\n+        super.updateAjaxAttributes(attributes);\n \n-            private static final long serialVersionUID = -7927968187160354605L;\n+        final AjaxCallListener ajaxCallListener = new AjaxCallListener() {\n+            \n+            private static final long serialVersionUID = 7160235486520935153L;\n \n             @Override\n-            public CharSequence preDecorateScript(final CharSequence script) {\n-                return \"if (confirm('\" + getString(\"confirmDelete\") + \"'))\" + \"{\" + script + \"}\";\n+            public CharSequence getPrecondition(final Component component) {\n+                return \"if (!confirm('\" + getString(\"confirmDelete\") + \"')) {return false;} else {return true;}\";\n             }\n         };\n+        attributes.getAjaxCallListeners().add(ajaxCallListener);\n     }\n }"},{"sha":"b420a69606bc68d6a1419085daee615d0851674c","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/DatePropertyColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -29,7 +29,7 @@\n /**\n  * Format column's value as date string.\n  */\n-public class DatePropertyColumn<T> extends PropertyColumn<T> {\n+public class DatePropertyColumn<T> extends PropertyColumn<T, String> {\n \n     private static final long serialVersionUID = 3527840552172947705L;\n "},{"sha":"361dc890a24f4153e4cb5189d512f3188f12694f","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/TokenColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FTokenColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FTokenColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FTokenColumn.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -27,7 +27,7 @@\n import org.springframework.util.StringUtils;\n import org.apache.syncope.client.to.UserTO;\n \n-public class TokenColumn extends AbstractColumn<UserTO> {\n+public class TokenColumn extends AbstractColumn<UserTO, String> {\n \n     private static final long serialVersionUID = 8077865338230121496L;\n "},{"sha":"9d773a0660be765ef0a416f93da2010ff45bf3e5","filename":"console/src/main/java/org/apache/syncope/console/wicket/extensions/markup/html/repeater/data/table/UserAttrColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FUserAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FUserAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FUserAttrColumn.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -27,7 +27,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.syncope.client.to.UserTO;\n \n-public class UserAttrColumn extends AbstractColumn<UserTO> {\n+public class UserAttrColumn extends AbstractColumn<UserTO, String> {\n \n     private static final long serialVersionUID = 2624734332447371372L;\n "},{"sha":"ef2414bfb29429537d4a1db9fc0bc9480d259535","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxDecoratedCheckbox.java","status":"modified","additions":4,"deletions":18,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -20,8 +20,6 @@\n \n import org.apache.wicket.ajax.AjaxEventBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.IAjaxCallDecorator;\n-import org.apache.wicket.ajax.calldecorator.CancelEventIfNoAjaxDecorator;\n import org.apache.wicket.ajax.markup.html.form.AjaxCheckBox;\n import org.apache.wicket.model.IModel;\n \n@@ -40,28 +38,16 @@ public AjaxDecoratedCheckbox(final String id, final IModel<Boolean> model) {\n         super(id, model);\n \n         add(new AjaxEventBehavior(\"onclick\") {\n-\n             private static final long serialVersionUID = -295188647830294610L;\n \n             @Override\n             protected void onEvent(final AjaxRequestTarget target) {\n-                onUpdate(target);\n-            }\n-\n-            @Override\n-            protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                return new CancelEventIfNoAjaxDecorator(AjaxDecoratedCheckbox.this.getAjaxCallDecorator());\n+                refreshComponent(target);\n             }\n         });\n     }\n \n-    /**\n-     * Returns ajax call decorator that will be used to decorate the ajax call.\n-     *\n-     * @return ajax call decorator\n-     */\n-    @Override\n-    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-        return null;\n+    private void refreshComponent(final AjaxRequestTarget target) {\n+        target.add(this);\n     }\n-}\n+}\n\\ No newline at end of file"},{"sha":"067930f22a6f4d67d5cebc9ba8ad88eb21f75aed","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/SelectableRecorder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -185,7 +185,8 @@ private void updateIds() {\n         updateIds(getValue());\n     }\n \n-    private void updateIds(final String value) {\n+    @Override\n+    protected void updateIds(final String value) {\n         if (Strings.isEmpty(value)) {\n             ids = EMPTY_IDS;\n         } else {"},{"sha":"9630462dad43da3e952651e1b5fc4177b9d53698","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/SingleColumnPalette.java","status":"removed","additions":0,"deletions":215,"changes":215,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55631b226c05dd7e2d870b856ab217e5c143c855/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55631b226c05dd7e2d870b856ab217e5c143c855/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.java?ref=55631b226c05dd7e2d870b856ab217e5c143c855","patch":"@@ -1,215 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.console.wicket.markup.html.form;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.behavior.Behavior;\n-import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n-import org.apache.wicket.extensions.markup.html.form.palette.component.Recorder;\n-import org.apache.wicket.extensions.markup.html.form.palette.component.Selection;\n-import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.html.form.IChoiceRenderer;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.util.ListModel;\n-import org.apache.wicket.util.value.IValueMap;\n-\n-/**\n- * SingleColumnPalette is a components that allows the user to easily add, remove and order items in a single select\n- * box.\n- *\n- * @see org.apache.wicket.extensions.markup.html.form.palette.Palette\n- */\n-public class SingleColumnPalette<T> extends Palette<T> {\n-\n-    private static final long serialVersionUID = -1126599052871074501L;\n-\n-    private AjaxLink addLink;\n-\n-    private AjaxLink editLink;\n-\n-    private AjaxLink removeLink;\n-\n-    private List<Behavior> recordBehaviors;\n-\n-    public SingleColumnPalette(final String id, final IModel<? extends List<? extends T>> model,\n-            final IChoiceRenderer<T> choiceRenderer, final int rows, final boolean allowOrder) {\n-\n-        super(id, new ListModel<T>((List<T>) model.getObject()), model, choiceRenderer, rows, allowOrder);\n-        recordBehaviors = new ArrayList<Behavior>();\n-    }\n-\n-    @Override\n-    protected void onBeforeRender() {\n-        super.onBeforeRender();\n-\n-        if (editLink != null) {\n-            add(editLink);\n-        }\n-\n-        for (Behavior behavior : recordBehaviors) {\n-            if (!getRecorderComponent().getBehaviors().contains(behavior)) {\n-                getRecorderComponent().add(behavior);\n-            }\n-        }\n-    }\n-\n-    public AjaxLink getAddLink() {\n-        return addLink;\n-    }\n-\n-    public void setAddLink(final AjaxLink addLink) {\n-        this.addLink = addLink;\n-    }\n-\n-    public AjaxLink getEditLink() {\n-        return editLink;\n-    }\n-\n-    public void setEditLink(final AjaxLink editLink) {\n-        this.editLink = editLink;\n-    }\n-\n-    public AjaxLink getRemoveLink() {\n-        return removeLink;\n-    }\n-\n-    public void setRemoveLink(final AjaxLink removeLink) {\n-        this.removeLink = removeLink;\n-    }\n-\n-    public List<Behavior> getRecordBehaviors() {\n-        return recordBehaviors;\n-    }\n-\n-    public T getSelectedItem() {\n-        return ((SelectableRecorder<T>) getRecorderComponent()).getSelectedItem();\n-    }\n-\n-    public boolean addRecordBehavior(final Behavior behavior) {\n-        return !recordBehaviors.contains(behavior) && recordBehaviors.add(behavior);\n-    }\n-\n-    public boolean removeRecordBehavior(final Behavior behavior) {\n-        return recordBehaviors.remove(behavior);\n-    }\n-\n-    public void setRecordBehaviors(final List<Behavior> recordBehaviors) {\n-        this.recordBehaviors.clear();\n-        if (recordBehaviors != null && !recordBehaviors.isEmpty()) {\n-            this.recordBehaviors.addAll(recordBehaviors);\n-        }\n-    }\n-\n-    @Override\n-    protected Component newAddComponent() {\n-        return addLink == null\n-                ? super.newAddComponent()\n-                : addLink;\n-    }\n-\n-    @Override\n-    protected Component newRemoveComponent() {\n-        return removeLink == null\n-                ? super.newRemoveComponent()\n-                : removeLink;\n-    }\n-\n-    @Override\n-    protected Recorder<T> newRecorderComponent() {\n-        return new SelectableRecorder<T>(\"recorder\", this) {\n-\n-            private static final long serialVersionUID = 3019792558927545591L;\n-\n-            @Override\n-            public void updateModel() {\n-                super.updateModel();\n-                SingleColumnPalette.this.updateModel();\n-            }\n-        };\n-    }\n-\n-    /**\n-     * Overriden from parent with purpose of removing ondblclick event and multiple selection.\n-     *\n-     * @return selected items component\n-     */\n-    @Override\n-    protected Component newSelectionComponent() {\n-        return new Selection<T>(\"selection\", this) {\n-\n-            private static final long serialVersionUID = -4146708301120705199L;\n-\n-            @Override\n-            protected Map<String, String> getAdditionalAttributes(final Object choice) {\n-                return SingleColumnPalette.this.getAdditionalAttributesForSelection(choice);\n-            }\n-\n-            @Override\n-            protected void onComponentTag(final ComponentTag tag) {\n-                super.onComponentTag(tag);\n-                IValueMap attrs = tag.getAttributes();\n-\n-                String onFocus = getPalette().getSelectionOnFocusJS();\n-                if (onFocus != null) {\n-                    attrs.put(\"onfocus\", onFocus);\n-                }\n-\n-                attrs.put(\"ondblclick\", \"\");\n-                attrs.remove(\"multiple\");\n-            }\n-        };\n-    }\n-\n-    @Override\n-    protected Component newAvailableHeader(final String componentId) {\n-        Component availableHeader = super.newAvailableHeader(componentId);\n-        availableHeader.setVisible(false);\n-        return availableHeader;\n-    }\n-\n-    @Override\n-    protected Component newSelectedHeader(final String componentId) {\n-        Component selectedHeader = super.newSelectedHeader(componentId);\n-        selectedHeader.setVisible(false);\n-        return selectedHeader;\n-    }\n-\n-    public String getEditOnClickJS() {\n-        return buildJSCall(\"Syncope.SingleColumnPalette.choicesOnFocus\");\n-    }\n-\n-    @Override\n-    public String getChoicesOnFocusJS() {\n-        return \"\";\n-    }\n-\n-    @Override\n-    public String getSelectionOnFocusJS() {\n-        return \"\";\n-    }\n-\n-    @Override\n-    public String getAddOnClickJS() {\n-        return \"\";\n-    }\n-}"},{"sha":"3736036e171730d724bbce0745b68ef4421c0bd4","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/tree/TreeActionLinkPanel.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -67,8 +67,10 @@ public TreeActionLinkPanel(final String id, final long idRole, final IModel inpu\n         fragment = new Fragment(\"menuPanel\", idRole == 0\n                 ? \"fakerootFrag\"\n                 : \"roleFrag\", this);\n+        \n+        fragment.setOutputMarkupId(true);\n \n-        AjaxLink createRoleLink = new IndicatingAjaxLink(\"createRoleLink\") {\n+        final AjaxLink createRoleLink = new IndicatingAjaxLink(\"createRoleLink\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -94,10 +96,11 @@ public Page createPage() {\n         MetaDataRoleAuthorizationStrategy.authorize(createRoleLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Roles\",\n                 \"create\"));\n \n+        createRoleLink.setOutputMarkupId(true);\n         fragment.add(createRoleLink);\n \n         if (idRole != 0) {\n-            AjaxLink updateRoleLink = new IndicatingAjaxLink(\"updateRoleLink\") {\n+            final AjaxLink updateRoleLink = new IndicatingAjaxLink(\"updateRoleLink\") {\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n@@ -120,9 +123,10 @@ public Page createPage() {\n             MetaDataRoleAuthorizationStrategy.authorize(updateRoleLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n                     \"Roles\", \"read\"));\n \n+            updateRoleLink.setOutputMarkupId(true);\n             fragment.add(updateRoleLink);\n \n-            AjaxLink dropRoleLink = new IndicatingDeleteOnConfirmAjaxLink(\"dropRoleLink\") {\n+            final AjaxLink dropRoleLink = new IndicatingDeleteOnConfirmAjaxLink(\"dropRoleLink\") {\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n@@ -141,6 +145,7 @@ public void onClick(final AjaxRequestTarget target) {\n             MetaDataRoleAuthorizationStrategy.authorize(dropRoleLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n                     \"Roles\", \"delete\"));\n \n+            dropRoleLink.setOutputMarkupId(true);\n             fragment.add(dropRoleLink);\n         }\n "},{"sha":"582be9b202aa5826eaa4ef8895601291924ab44b","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/tree/TreeRolePanel.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRolePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRolePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRolePanel.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -18,22 +18,23 @@\n  */\n package org.apache.syncope.console.wicket.markup.html.tree;\n \n+\n import javax.swing.tree.DefaultMutableTreeNode;\n+import org.apache.syncope.client.to.RoleTO;\n+import org.apache.syncope.console.commons.RoleTreeBuilder;\n+import org.apache.syncope.console.commons.XMLRolesReader;\n+import org.apache.syncope.console.pages.Roles.TreeNodeClickUpdate;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.markup.html.tree.BaseTree;\n+import org.apache.wicket.extensions.markup.html.tree.LinkTree;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.markup.html.tree.BaseTree;\n-import org.apache.wicket.markup.html.tree.LinkTree;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.apache.syncope.client.to.RoleTO;\n-import org.apache.syncope.console.commons.RoleTreeBuilder;\n-import org.apache.syncope.console.commons.XMLRolesReader;\n-import org.apache.syncope.console.pages.panels.RoleSummaryPanel.TreeNodeClickUpdate;\n \n public class TreeRolePanel extends Panel {\n \n@@ -55,10 +56,7 @@ public TreeRolePanel(final String id) {\n         treeContainer = new WebMarkupContainer(\"treeContainer\");\n         treeContainer.setOutputMarkupId(true);\n         add(treeContainer);\n-\n         updateTree();\n-\n-        treeContainer.add(tree);\n     }\n \n     private void updateTree() {\n@@ -73,7 +71,8 @@ protected IModel getNodeTextModel(final IModel model) {\n             }\n \n             @Override\n-            protected void onNodeLinkClicked(final Object node, final BaseTree baseTree, final AjaxRequestTarget target) {\n+            protected void onNodeLinkClicked(\n+                    final Object node, final BaseTree baseTree, final AjaxRequestTarget target) {\n \n                 DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) node;\n                 RoleTO unitObject = (RoleTO) treeNode.getUserObject();"},{"sha":"57ec5be1e8e7d05ba966ca769d55fbe1323df573","filename":"console/src/main/resources/org/apache/syncope/console/pages/BaseModalPage.html","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -27,11 +27,9 @@\n     <link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\" media=\"all\"/>\n     <link rel=\"stylesheet\" type=\"text/css\" href=\"css/fieldstyle.css\" />\n \n-    <script type=\"text/javascript\" src=\"scripts/jquery-1.4.2.min.js\"></script>\n+    <script type=\"text/javascript\" src=\"scripts/jquery-1.8.2.min.js\"></script>\n     <script type=\"text/javascript\" src=\"scripts/jquery-ui-1.8.5.custom.min.js\"></script>\n \n-    <script type=\"text/javascript\" src=\"scripts/singlecolumnpalette.js\"></script>\n-\n     <script type=\"text/javascript\">\n       $(function() {\n         $(\"#tabs\").tabs();"},{"sha":"6d65139d28d2c57088d41e44b89645c9d6329908","filename":"console/src/main/resources/org/apache/syncope/console/pages/BasePage.html","status":"modified","additions":128,"deletions":129,"changes":257,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -14,144 +14,143 @@\n  under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"it\" xml:lang=\"it\">\n-    <head>\n-        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n-        <meta http-equiv=\"Content-Style-Type\" content=\"text/css\"/>\n-        <meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\"/>\n+  <head>\n+    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n+    <meta http-equiv=\"Content-Style-Type\" content=\"text/css\"/>\n+    <meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\"/>\n \n-        <title>Apache Syncope</title>\n+    <title>Apache Syncope</title>\n \n-        <link rel=\"shortcut icon\" href=\"img/favicon.ico\" />\n+    <link rel=\"shortcut icon\" href=\"img/favicon.ico\" />\n \n-        <style type=\"text/css\">\n-            div.wicket-modal div.w_caption {\n-                height: 16px !important;\n-            }\n-        </style>\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.button.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.core.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.dialog.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.resizable.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.tabs.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.theme.css\" />\n+    <style type=\"text/css\">\n+      div.wicket-modal div.w_caption {\n+        height: 16px !important;\n+      }\n+    </style>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.button.css\" />\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.core.css\" />\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.dialog.css\" />\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.resizable.css\" />\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.tabs.css\" />\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.theme.css\" />\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.tabs.css\" media=\"all\"/>\n \n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\" media=\"all\"/>\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/fieldstyle.css\" />\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\" media=\"all\"/>\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/fieldstyle.css\" />\n \n-        <script type=\"text/javascript\" src=\"scripts/jquery-1.4.2.min.js\"></script>\n-        <script type=\"text/javascript\" src=\"scripts/jquery-ui-1.8.5.custom.min.js\"></script>\n-        \n-        <script type=\"text/javascript\" src=\"scripts/singlecolumnpalette.js\"></script>\n+    <script type=\"text/javascript\" src=\"scripts/jquery-1.8.2.min.js\"></script>\n+    <script type=\"text/javascript\" src=\"scripts/jquery-ui-1.8.5.custom.min.js\"></script>\n \n-        <script type=\"text/javascript\">\n-            $(document).ready(function() {\n-                $(\"#tabs\").tabs();\n-                $(\"#user\").tabs();\n-                $(\"#role\").tabs();\n-                $(\"#membership\").tabs();\n-            });\n+    <script type=\"text/javascript\">\n+      $(document).ready(function() {\n+        $(\"#tabs\").tabs();\n+        $(\"#user\").tabs();\n+        $(\"#role\").tabs();\n+        $(\"#membership\").tabs();\n+      });\n+                    \n+      /** Add rollover effect to tables supporting Ajax events (live)*/\n+      $('table.ui-widget.ui-widget-content.table-hover tbody tr')\n+      .live('mouseover mouseout', function(event) {\n+        if (event.type == 'mouseover') {\n+          $(this).addClass('selectedRow');\n+        } else if (event.type == 'mouseout') {\n+          $(this).removeClass('selectedRow');\n+        }\n+      });\n                 \n-            /** Add rollover effect to tables supporting Ajax events (live)*/\n-            $('table.ui-widget.ui-widget-content.table-hover tbody tr')\n-            .live('mouseover mouseout', function(event) {\n-                if (event.type == 'mouseover') {\n-                    $(this).addClass('selectedRow');\n-                } else if (event.type == 'mouseout') {\n-                    $(this).removeClass('selectedRow');\n-                }\n-            });\n-            \n-            $(document).ready(function() {\n-                $(\"#editProfile\").hide();\n-                $(\"#username\").click(function() {\n-                    $(\"#editProfile\").toggle();\n-                });\n-            });\n-        </script>\n-    </head>\n-    <body>\n-        <div id=\"navigationPane\">\n-            <ul>\n-                <li style=\"position: absolute; left: 0px; top: 0px;width:240px;\">\n-                    <img src=\"img/logo.png\" alt=\"logo\"/><br />\n-                    <span style=\"position: absolute; left: 20px;color:#aaaaaa;\">\n-                        <span style=\"font-size:8px;\" wicket:id=\"consoleVersion\"/>\n-                        <br/>\n-                        <span style=\"font-size:8px;\" wicket:id=\"coreVersion\"/>\n-                        &nbsp;\n-                    </span>\n-                </li>\n-                <li><span>\n-                        <a href=\"#\" wicket:id=\"todo\"><img wicket:id=\"todoIcon\" alt=\"TODO\" width=\"80\" height=\"80\" /><br />\n-                            <wicket:message key=\"todo\"/>\n-                        </a>\n-                    </span>\n-                </li>\n-                <li><span>\n-                        <a href=\"#\" wicket:id=\"schema\"><img wicket:id=\"schemaIcon\" alt=\"Schema\" width=\"80\" height=\"80\" /><br />\n-                            <wicket:message key=\"schema\"/>\n-                        </a>\n-                    </span>\n-                </li>\n-                <li><span>\n-                        <a href=\"#\" wicket:id=\"users\"><img wicket:id=\"usersIcon\" alt=\"Users\" width=\"80\" height=\"80\" /><br />\n-                            <wicket:message key=\"users\"/>\n-                        </a>\n-                    </span>\n-                </li>\n-                <li><span>\n-                        <a href=\"#\" wicket:id=\"roles\"><img wicket:id=\"rolesIcon\" alt=\"Roles\" width=\"80\" height=\"80\" /><br />\n-                            <wicket:message key=\"roles\"/>\n-                        </a>\n-                    </span>\n-                </li>\n-                <li><span>\n-                        <a href=\"#\" wicket:id=\"resources\"><img wicket:id=\"resourcesIcon\" alt=\"Resources\" width=\"80\" height=\"80\" /><br />\n-                            <wicket:message key=\"resources\"/>\n-                        </a>\n-                    </span>\n-                </li>\n-                <li><span>\n-                        <a href=\"#\" wicket:id=\"tasks\"><img wicket:id=\"tasksIcon\" alt=\"Tasks\" width=\"80\" height=\"80\" /><br />\n-                            <wicket:message key=\"tasks\"/>\n-                        </a>\n-                    </span>\n-                </li>\n-                <li><span>\n-                        <a href=\"#\" wicket:id=\"reports\"><img wicket:id=\"reportsIcon\" alt=\"Reports\" width=\"80\" height=\"80\" /><br />\n-                            <wicket:message key=\"reports\"/>\n-                        </a>\n-                    </span>\n-                </li>\n-                <li><span>\n-                        <a href=\"#\" wicket:id=\"configuration\"><img wicket:id=\"configurationIcon\" alt=\"Configuration\" width=\"80\" height=\"80\" /><br />\n-                            <wicket:message key=\"configuration\"/>\n-                        </a></span>\n-                </li>\n-                <li style=\"float:right;width:auto;text-align:right;\">\n-                    <a href=\"#\" wicket:id=\"logout\"><img src=\"img/menu/logout.png\" alt=\"Logout\" width=\"80\" height=\"80\" /><br /></a>\n-                    <div>\n-                        <span id=\"username\" wicket:id=\"username\" style=\"padding-right: 9px;cursor: pointer;\"/>\n-                        <span wicket:id=\"editProfile\"/>\n+      $(document).ready(function() {\n+        $(\"#editProfile\").hide();\n+        $(\"#username\").click(function() {\n+          $(\"#editProfile\").toggle();\n+        });\n+      });\n+    </script>\n+  </head>\n+  <body>\n+    <div id=\"navigationPane\">\n+      <ul>\n+        <li style=\"position: absolute; left: 0px; top: 0px;width:240px;\">\n+          <img src=\"img/logo.png\" alt=\"logo\"/><br />\n+          <span style=\"position: absolute; left: 20px;color:#aaaaaa;\">\n+            <span style=\"font-size:8px;\" wicket:id=\"consoleVersion\"/>\n+            <br/>\n+            <span style=\"font-size:8px;\" wicket:id=\"coreVersion\"/>\n+            &nbsp;\n+          </span>\n+        </li>\n+        <li><span>\n+            <a href=\"#\" wicket:id=\"todo\"><img wicket:id=\"todoIcon\" alt=\"TODO\" width=\"80\" height=\"80\" /><br />\n+              <wicket:message key=\"todo\"/>\n+            </a>\n+          </span>\n+        </li>\n+        <li><span>\n+            <a href=\"#\" wicket:id=\"schema\"><img wicket:id=\"schemaIcon\" alt=\"Schema\" width=\"80\" height=\"80\" /><br />\n+              <wicket:message key=\"schema\"/>\n+            </a>\n+          </span>\n+        </li>\n+        <li><span>\n+            <a href=\"#\" wicket:id=\"users\"><img wicket:id=\"usersIcon\" alt=\"Users\" width=\"80\" height=\"80\" /><br />\n+              <wicket:message key=\"users\"/>\n+            </a>\n+          </span>\n+        </li>\n+        <li><span>\n+            <a href=\"#\" wicket:id=\"roles\"><img wicket:id=\"rolesIcon\" alt=\"Roles\" width=\"80\" height=\"80\" /><br />\n+              <wicket:message key=\"roles\"/>\n+            </a>\n+          </span>\n+        </li>\n+        <li><span>\n+            <a href=\"#\" wicket:id=\"resources\"><img wicket:id=\"resourcesIcon\" alt=\"Resources\" width=\"80\" height=\"80\" /><br />\n+              <wicket:message key=\"resources\"/>\n+            </a>\n+          </span>\n+        </li>\n+        <li><span>\n+            <a href=\"#\" wicket:id=\"tasks\"><img wicket:id=\"tasksIcon\" alt=\"Tasks\" width=\"80\" height=\"80\" /><br />\n+              <wicket:message key=\"tasks\"/>\n+            </a>\n+          </span>\n+        </li>\n+        <li><span>\n+            <a href=\"#\" wicket:id=\"reports\"><img wicket:id=\"reportsIcon\" alt=\"Reports\" width=\"80\" height=\"80\" /><br />\n+              <wicket:message key=\"reports\"/>\n+            </a>\n+          </span>\n+        </li>\n+        <li><span>\n+            <a href=\"#\" wicket:id=\"configuration\"><img wicket:id=\"configurationIcon\" alt=\"Configuration\" width=\"80\" height=\"80\" /><br />\n+              <wicket:message key=\"configuration\"/>\n+            </a></span>\n+        </li>\n+        <li style=\"float:right;width:auto;text-align:right;\">\n+          <a href=\"#\" wicket:id=\"logout\"><img src=\"img/menu/logout.png\" alt=\"Logout\" width=\"80\" height=\"80\" /><br /></a>\n+          <div>\n+            <span id=\"username\" wicket:id=\"username\" style=\"padding-right: 9px;cursor: pointer;\"/>\n+            <span wicket:id=\"editProfile\"/>\n \n-                        <wicket:fragment wicket:id=\"adminEmptyFrag\"/>\n-                        <wicket:fragment wicket:id=\"editProfileFrag\">\n-                            <br/>\n-                            <span id=\"editProfile\" wicket:id=\"editProfile\" \n-                                  style=\"cursor: pointer;background-color: #446633;padding-left: 9px;padding-right: 9px;\"/>\n-                        </wicket:fragment>\n-                    </div>\n-                </li>\n-            </ul>\n-            <div wicket:id=\"editProfileModal\" ></div>\n-        </div>\n+            <wicket:fragment wicket:id=\"adminEmptyFrag\"/>\n+            <wicket:fragment wicket:id=\"editProfileFrag\">\n+              <br/>\n+              <span id=\"editProfile\" wicket:id=\"editProfile\" \n+                    style=\"cursor: pointer;background-color: #446633;padding-left: 9px;padding-right: 9px;\"/>\n+            </wicket:fragment>\n+          </div>\n+        </li>\n+      </ul>\n+      <div wicket:id=\"editProfileModal\" ></div>\n+    </div>\n \n-        <div wicket:id=\"feedback\"/>\n+    <div wicket:id=\"feedback\"/>\n \n-        <wicket:child />\n+    <wicket:child />\n \n-        <div id=\"veil\" style=\"display:none;position:absolute;top:0;left:0;z-index:99999;background-color:black;width:100%;height:20000px;color:white;opacity:0.3;filter:alpha(opacity=30);\">\n-            <img src=\"img/busy.gif\" style=\"position:absolute;top:300px;left:50%;margin-left:-75px;width:150px;\"/>\n-        </div>\n-    </body>\n+    <div id=\"veil\" style=\"display:none;position:absolute;top:0;left:0;z-index:99999;background-color:black;width:100%;height:20000px;color:white;opacity:0.3;filter:alpha(opacity=30);\">\n+      <img src=\"img/busy.gif\" style=\"position:absolute;top:300px;left:50%;margin-left:-75px;width:150px;\"/>\n+    </div>\n+  </body>\n </html>"},{"sha":"87e8a4d6223d9ab815c74e921a02bfe22c2634eb","filename":"console/src/main/resources/org/apache/syncope/console/pages/NotificationTaskModalPage.html","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -21,7 +21,7 @@\n       width:10px;\n       text-decoration: none;\n     }\n-    \n+\n     .settingsPosMultiPage{\n       position:relative; \n       top:50px;\n@@ -108,6 +108,11 @@\n                   </div>\n                 </div>\n               </div>\n+              <script type=\"text/javascript\">\n+                $(function() {\n+                  $('#formtable div.tablerow:even').addClass(\"alt\");\n+                });\n+              </script>\n             </span>\n           </div>\n         </div>"},{"sha":"912bea7dcf3286c42bce0a537d9897c3c3402cd6","filename":"console/src/main/resources/org/apache/syncope/console/pages/PropagationTaskModalPage.html","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -21,7 +21,7 @@\n       width:10px;\n       text-decoration: none;\n     }\n-    \n+\n     .settingsPosMultiPage{\n       position:relative; \n       top:50px;\n@@ -71,8 +71,12 @@\n                     <span wicket:id=\"resource\">[resource]</span>\n                   </div>\n                 </div>\n-\n               </div>\n+              <script type=\"text/javascript\">\n+                $(function() {\n+                  $('#formtable div.tablerow:even').addClass(\"alt\");\n+                });\n+              </script>\n             </span>\n           </div>\n         </div>"},{"sha":"ff0e44aa1b44fac07f187cb98da8e8122e7716cb","filename":"console/src/main/resources/org/apache/syncope/console/pages/ReportModalPage.html","status":"modified","additions":25,"deletions":3,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -79,11 +79,33 @@\n                     <label for=\"reportlets\"><wicket:message key=\"reportlets\"/></label>\n                   </div>\n                   <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"reportlets\">[reportlets]</span>\n+                    <div style=\"display: inline-table;\">\n+                      <div id=\"selections\" style=\"display: table-cell;\">\n+                        <select wicket:id=\"reportletConfs\" class=\"selectionSelect\"></select>\t\n+                      </div>\n+                      <div id=\"orderingButtons\" style=\"display: table-cell; width: 30px; vertical-align: middle; padding-left: 5px;\">\n+                        <div style=\"padding-bottom: 5px;\">\n+                          <a wicket:id=\"upButton\"><img src=\"img/up-icon.png\" alt=\"move up icon\"/></a>\n+                        </div>\n+                        <div style=\"padding-top: 5px;\">\n+                          <a wicket:id=\"downButton\"><img src=\"img/down-icon.png\" alt=\"move down icon\"/></a>\n+                        </div>\n+                      </div>\n+                    </div>\n+                    <div id=\"actionButtons\" style=\"padding-top: 5px;\">\n+                      <div style=\"padding-left: 35px;float: left;\">\n+                        <a wicket:id=\"addButton\"><img src=\"img/plus-icon.png\" alt=\"plus icon\"/></a>\n+                      </div>\n+                      <div style=\"padding-left: 15px;float: left;\">\n+                        <a wicket:id=\"editButton\"><img src=\"img/actions/edit.png\" alt=\"edit icon\"/></a>\n+                      </div>\n+                      <div style=\"padding-left: 15px;float: left;\">\n+                        <a wicket:id=\"removeButton\"><img src=\"img/minus-icon.png\" alt=\"minus icon\"/></a>\n+                      </div>\n+                    </div>\n                   </div>\n-                </div>                                \n+                </div>\n               </div>\n-\n               <script type=\"text/javascript\">\n                 $(function() {\n                   $('#formtable div.tablerow:even').addClass(\"alt\");"},{"sha":"115fc492a45acbb799ee3bf61a315d558cb158d5","filename":"console/src/main/resources/org/apache/syncope/console/pages/ReportModalPage.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.properties?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -33,3 +33,4 @@ showMessage=Show\n chooseForTemplate=Use A Template\n reportlets=Reportlets\n create_reportletconf=Add new Reporlet\n+selectItem=Please select an item first"},{"sha":"a8185674c1251627bbe9715978778b3056968c52","filename":"console/src/main/resources/org/apache/syncope/console/pages/ReportModalPage_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage_it.properties?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -33,3 +33,4 @@ showMessage=Mostra\n chooseForTemplate=Usa Un Template\n reportlets=Reportlets\n create_reportletconf=Aggiungi Reporlet\n+selectItem=Seleziona un elemento"},{"sha":"4b9a0bdcecb4c3ac62856358542f4087c6c39d49","filename":"console/src/main/resources/org/apache/syncope/console/pages/RoleModalPage.html","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -49,6 +49,11 @@\n           <li><a href=\"#tabs-7\"><span><wicket:message key=\"tab7\"/></span></a></li>\n         </ul>\n         <div wicket:id=\"rolePanel\"/>\n+        <script type=\"text/javascript\">\n+          $(function() {\n+            $('div #formtable div.tablerow:even').addClass(\"alt\");\n+          });\n+        </script>\n       </div>\n       <div style=\"bottom:0;margin:10px\">\n         <input type=\"submit\""},{"sha":"1a929bdf2b6c8f998420cf97fe2b8476f7154312","filename":"console/src/main/resources/org/apache/syncope/console/pages/UserModalPage.html","status":"modified","additions":103,"deletions":104,"changes":207,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -13,115 +13,114 @@\n  under the License.\n -->\n <wicket:head>\n-    <style type=\"text/css\">\n-        table.palette td.header {\n-            background:url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\")\n-                repeat-x scroll 50% 50% #E6E6E6 !important;\n-        }\n-\n-        div.role-tree table.wicket-tree-content table.icon-panel a{\n-            font-size: 10px;\n-            color:black;\n-        }\n-        .roleTable{\n-            -moz-border-radius: 3px; /* Firefox */\n-            -webkit-border-radius: 3px; /* Safari e Chrome*/\n-            border: 1px solid gray;\n-            border-radius: 3px; /* Standard CSS */\n-        }\n-\n-        #tabs-2 table{\n-            font-size: 1.1em;\n-        }\n-\n-\n-        #tabs-3 table{\n-            font-size: 1.1em;\n-        }\n-\n-        #tabs-4 table{\n-            font-size: 1.1em;\n-        }\n-\n-        #tabs-5 table{\n-            font-size: 1.1em;\n-        }\n-\n-        #tabs-6 table{\n-            font-size: 1.1em;\n-        }\n-    </style>\n+  <style type=\"text/css\">\n+    table.palette td.header {\n+      background:url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\")\n+        repeat-x scroll 50% 50% #E6E6E6 !important;\n+    }\n+\n+    div.role-tree table.wicket-tree-content table.icon-panel a{\n+      font-size: 10px;\n+      color:black;\n+    }\n+    .roleTable{\n+      -moz-border-radius: 3px; /* Firefox */\n+      -webkit-border-radius: 3px; /* Safari e Chrome*/\n+      border: 1px solid gray;\n+      border-radius: 3px; /* Standard CSS */\n+    }\n+\n+    #tabs-2 table{\n+      font-size: 1.1em;\n+    }\n+\n+    #tabs-3 table{\n+      font-size: 1.1em;\n+    }\n+\n+    #tabs-4 table{\n+      font-size: 1.1em;\n+    }\n+\n+    #tabs-5 table{\n+      font-size: 1.1em;\n+    }\n+\n+    #tabs-6 table{\n+      font-size: 1.1em;\n+    }\n+  </style>\n </wicket:head>\n \n <wicket:extend>\n \n-    <span wicket:id=\"userModalFrag\"/>\n-\n-    <wicket:fragment wicket:id=\"userModalEditFrag\">\n-\n-        <div style=\"margin:10px\">\n-            <p class=\"ui-widget ui-corner-all ui-widget-header\">\n-                <span wicket:id=\"new\"/>&nbsp;<wicket:message key=\"title\"/>&nbsp;<span wicket:id=\"id\"/>\n-            </p>\n-\n-            <form wicket:id=\"UserForm\">\n-                <div id=\"tabs\">\n-                    <ul>\n-                        <li  class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n-                        <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n-                        <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n-                        <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n-                        <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n-                        <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n-                    </ul>\n-                    <div id=\"tabs-1\">\n-                        <span wicket:id=\"details\">[user details]</span>\n-                        <span wicket:id=\"statuspanel\">[Sattus Panel]</span>\n-                        <span wicket:id=\"accountinformation\">[Account Information]</span>\n-                    </div>\n-                    <div id=\"tabs-2\">\n-                        <div id=\"formtable\">\n-                            <span wicket:id=\"attributes\">[user attributes]</span>\n-                        </div>\n-                    </div>\n-\n-                    <div id=\"tabs-3\">\n-                        <span wicket:id=\"derivedAttributes\">[user derived attributes]</span>\n-                    </div>\n-\n-                    <div id=\"tabs-4\">\n-                        <span wicket:id=\"virtualAttributes\">[user virtual attributes]</span>\n-                    </div>\n-\n-                    <div id=\"tabs-5\">\n-                        <span wicket:id=\"resources\">[resources]</span>\n-                    </div>\n-\n-                    <div id=\"tabs-6\">\n-                        <span wicket:id=\"memberships\">[memberships]</span>\n-                    </div>\n-                </div>\n-\n-                <script type=\"text/javascript\">\n-                    $(function() {\n-                        $('#formtable div.tablerow:even').addClass(\"alt\");\n-                    });\n-                </script>\n-\n-                <div style=\"margin: 20px 10px 0\">\n-                    <input type=\"submit\"\n-                           class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                           wicket:id=\"apply\"/>\n-                    <input type=\"button\"\n-                           class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                           wicket:id=\"cancel\"/>\n-                </div>\n-            </form>\n+  <span wicket:id=\"userModalFrag\"/>\n+\n+  <wicket:fragment wicket:id=\"userModalEditFrag\">\n+\n+    <div style=\"margin:10px\">\n+      <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+        <span wicket:id=\"new\"/>&nbsp;<wicket:message key=\"title\"/>&nbsp;<span wicket:id=\"id\"/>\n+      </p>\n+\n+      <form wicket:id=\"UserForm\">\n+        <div id=\"tabs\">\n+          <ul>\n+            <li  class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n+            <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n+            <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n+            <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n+            <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n+            <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n+          </ul>\n+          <div id=\"tabs-1\">\n+            <span wicket:id=\"details\">[user details]</span>\n+            <span wicket:id=\"statuspanel\">[Sattus Panel]</span>\n+            <span wicket:id=\"accountinformation\">[Account Information]</span>\n+          </div>\n+          <div id=\"tabs-2\">\n+            <div id=\"formtable\">\n+              <span wicket:id=\"attributes\">[user attributes]</span>\n+            </div>\n+          </div>\n+\n+          <div id=\"tabs-3\">\n+            <span wicket:id=\"derivedAttributes\">[user derived attributes]</span>\n+          </div>\n+\n+          <div id=\"tabs-4\">\n+            <span wicket:id=\"virtualAttributes\">[user virtual attributes]</span>\n+          </div>\n+\n+          <div id=\"tabs-5\">\n+            <span wicket:id=\"resources\">[resources]</span>\n+          </div>\n+\n+          <div id=\"tabs-6\">\n+            <span wicket:id=\"memberships\">[memberships]</span>\n+          </div>\n         </div>\n-    </wicket:fragment>\n \n-    <wicket:fragment wicket:id=\"userModalResultFrag\">\n-        <span wicket:id=\"userModalPageResult\"/>\n-    </wicket:fragment>\n+        <script type=\"text/javascript\">\n+          $(function() {\n+            $('div #formtable div.tablerow:even').addClass(\"alt\");\n+          });\n+        </script>\n+\n+        <div style=\"margin: 20px 10px 0\">\n+          <input type=\"submit\"\n+                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                 wicket:id=\"apply\"/>\n+          <input type=\"button\"\n+                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                 wicket:id=\"cancel\"/>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:fragment>\n+\n+  <wicket:fragment wicket:id=\"userModalResultFrag\">\n+    <span wicket:id=\"userModalPageResult\"/>\n+  </wicket:fragment>\n \n </wicket:extend>"},{"sha":"db56f08b4348f3e529aed983d70a4a2ac8b50d1f","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/AttributesPanel.html","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -13,16 +13,16 @@\n  under the License.\n -->\n <html>\n-    <wicket:panel>\n-        <div class=\"tablerow\" wicket:id=\"schemas\">\n-            <div class=\"tablecolumn_label short_dynamicsize\">\n-                <span wicket:id=\"name\"/>\n-            </div>\n-            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                <span wicket:id=\"panel\">\n-                    [panel for dynamic input type markup]\n-                </span>\n-            </div>\n+  <wicket:panel>\n+      <div class=\"tablerow\" wicket:id=\"schemas\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <span wicket:id=\"name\"/>\n         </div>\n-    </wicket:panel>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"panel\">\n+            [panel for dynamic input type markup]\n+          </span>\n+        </div>\n+      </div>\n+  </wicket:panel>\n </html>"},{"sha":"12721d734aa8929597331818bb064e6e629503d5","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RolePanel.html","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolePanel.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -72,4 +72,9 @@\n   <div id=\"tabs-7\">\n     <span wicket:id=\"security\">[security]</span>\n   </div>\n+  <script type=\"text/javascript\">\n+    $(function() {\n+      $('div #formtable div.tablerow:even').addClass(\"alt\");\n+    });\n+  </script>\n </wicket:panel>"},{"sha":"a0dd17094b61af1c2965fd4df7952a5dc579e55a","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleSecurityPanel.html","status":"modified","additions":44,"deletions":44,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -13,50 +13,50 @@\n  under the License.\n -->\n <html>\n-    <wicket:panel>\n-        <div id=\"formtable\" wicket:id=\"security\">\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"inheritPasswordPolicy\"><wicket:message key=\"inheritPasswordPolicy\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"inheritPasswordPolicy\">\n-                        [panel for dynamic input type markup]\n-                    </span>\n-                </div>\n-            </div>\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"passwordPolicy\"><wicket:message key=\"passwordPolicy\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"passwordPolicy\">\n-                        [panel for dynamic input type markup]\n-                    </span>\n-                </div>\n-            </div>\n+  <wicket:panel>\n+    <div id=\"formtable\" wicket:id=\"security\">\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"inheritPasswordPolicy\"><wicket:message key=\"inheritPasswordPolicy\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"inheritPasswordPolicy\">\n+            [panel for dynamic input type markup]\n+          </span>\n+        </div>\n+      </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"passwordPolicy\"><wicket:message key=\"passwordPolicy\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"passwordPolicy\">\n+            [panel for dynamic input type markup]\n+          </span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"inheritAccountPolicy\"><wicket:message key=\"inheritAccountPolicy\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"inheritAccountPolicy\">\n-                        [panel for dynamic input type markup]\n-                    </span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"inheritAccountPolicy\"><wicket:message key=\"inheritAccountPolicy\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"inheritAccountPolicy\">\n+            [panel for dynamic input type markup]\n+          </span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"accountPolicy\"><wicket:message key=\"accountPolicy\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"accountPolicy\">\n-                        [panel for dynamic input type markup]\n-                    </span>\n-                </div>\n-            </div>\n-        </div>\n-    </wicket:panel>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"accountPolicy\"><wicket:message key=\"accountPolicy\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"accountPolicy\">\n+            [panel for dynamic input type markup]\n+          </span>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n </html>"},{"sha":"99cacf7cc5df5f1139e1f4b9ef8ada0de6874fc7","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleSummaryPanel.html","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -14,21 +14,21 @@\n -->\n <wicket:panel>\n \n-    <span wicket:id=\"rolePanel\"/>\n+  <span wicket:id=\"roleSummaryPanel\"/>\n \n-    <wicket:fragment wicket:id=\"roleViewPanel\">\n-        <span wicket:id=\"nodeViewPanel\"></span>\n-    </wicket:fragment>\n+  <wicket:fragment wicket:id=\"roleViewPanel\">\n+    <span wicket:id=\"nodeViewPanel\"></span>\n+  </wicket:fragment>\n \n-    <wicket:fragment wicket:id=\"rootPanel\">\n-        <div style=\"float:left;width:60%\">\n-            <p style=\"height:15px\" class=\"ui-widget ui-corner-all ui-widget-header\">\n-                <span wicket:id=\"actionLink\"/>\n-            </p>\n-        </div>\n-    </wicket:fragment>\n+  <wicket:fragment wicket:id=\"rootPanel\">\n+    <div style=\"float:left;width:60%\">\n+      <p style=\"height:15px\" class=\"ui-widget ui-corner-all ui-widget-header\">\n+        <span wicket:id=\"actionLink\"/>\n+      </p>\n+    </div>\n+  </wicket:fragment>\n \n-    <wicket:fragment wicket:id=\"fakerootFrag\">\n-    </wicket:fragment>\n+  <wicket:fragment wicket:id=\"fakerootFrag\">\n+  </wicket:fragment>\n \n-</wicket:panel>\n\\ No newline at end of file\n+</wicket:panel>"},{"sha":"19b33226e59ec4fc73dae2678eabc146101df53a","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/RoleTabPanel.html","status":"modified","additions":42,"deletions":42,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -13,49 +13,49 @@\n  under the License.\n -->\n <wicket:panel>\n-    <div style=\"margin:10px;float:left;width:60%\">\n-        <p class=\"ui-widget ui-corner-all ui-widget-header\">\n-        <wicket:message key=\"title\"/>\n-        <span wicket:id=\"displayName\"/>\n-        <span wicket:id=\"actionLink\"/>\n-        </p>\n+  <div style=\"margin:10px;float:left;width:60%\">\n+    <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+    <wicket:message key=\"title\"/>\n+    <span wicket:id=\"displayName\"/>\n+    <span wicket:id=\"actionLink\"/>\n+    </p>\n \n-        <form wicket:id=\"RoleForm\">\n-            <div id=\"tabs\">\n-                <ul>\n-                    <li><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n-                    <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n-                    <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n-                    <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n-                    <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n-                    <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n-                    <li><a href=\"#tabs-7\"><span><wicket:message key=\"tab7\"/></span></a></li>\n-                    <li><a href=\"#tabs-8\"><span><wicket:message key=\"tab8\"/></span></a></li>\n-                </ul>\n-                <div wicket:id=\"rolePanel\">\n-                </div>\n-                <div id=\"tabs-8\">\n-                    <div wicket:id=\"userListContainer\">\n-                        <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                               wicket:id=\"search\"/>\n-                        <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n-                            <span wicket:id=\"userList\"> [userList] </span>\n-                        </div>\n-                        <script type=\"text/javascript\">\n-                            $(function() {\n-                                $('#formtable div.tablerow:even').addClass(\"alt\");\n-                                $(\"#tabs\").tabs();\n-                            });\n-                        </script>\n-                    </div>\n-                </div>\n+    <form wicket:id=\"roleForm\">\n+      <div id=\"tabs\">\n+        <ul>\n+          <li><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n+          <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n+          <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n+          <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n+          <li><a href=\"#tabs-5\"><span><wicket:message key=\"tab5\"/></span></a></li>\n+          <li><a href=\"#tabs-6\"><span><wicket:message key=\"tab6\"/></span></a></li>\n+          <li><a href=\"#tabs-7\"><span><wicket:message key=\"tab7\"/></span></a></li>\n+          <li><a href=\"#tabs-8\"><span><wicket:message key=\"tab8\"/></span></a></li>\n+        </ul>\n+        <div wicket:id=\"rolePanel\">\n+        </div>\n+        <div id=\"tabs-8\">\n+          <div wicket:id=\"userListContainer\">\n+            <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                   wicket:id=\"search\"/>\n+            <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n+              <span wicket:id=\"userList\"> [userList] </span>\n             </div>\n-        </form>\n-        <script type=\"text/javascript\">\n-            $(function() {\n+            <script type=\"text/javascript\">\n+              $(function() {\n                 $('#formtable div.tablerow:even').addClass(\"alt\");\n                 $(\"#tabs\").tabs();\n-            });\n-        </script>\n-    </div>\n-</wicket:panel>\n\\ No newline at end of file\n+              });\n+            </script>\n+          </div>\n+        </div>\n+      </div>\n+    </form>\n+    <script type=\"text/javascript\">\n+      $(function() {\n+        $('#formtable div.tablerow:even').addClass(\"alt\");\n+        $(\"#tabs\").tabs();\n+      });\n+    </script>\n+  </div>\n+</wicket:panel>"},{"sha":"86832efb139c1aac245abd7b4b6b0ae777a2625a","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/SingleColumnPalette.html","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55631b226c05dd7e2d870b856ab217e5c143c855/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55631b226c05dd7e2d870b856ab217e5c143c855/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.html?ref=55631b226c05dd7e2d870b856ab217e5c143c855","patch":"@@ -1,56 +0,0 @@\n-<!--\n-   Licensed to the Apache Software Foundation (ASF) under one or more\n-   contributor license agreements.  See the NOTICE file distributed with\n-   this work for additional information regarding copyright ownership.\n-   The ASF licenses this file to You under the Apache License, Version 2.0\n-   (the \"License\"); you may not use this file except in compliance with\n-   the License.  You may obtain a copy of the License at\n-\n-        http://www.apache.org/licenses/LICENSE-2.0\n-\n-   Unless required by applicable law or agreed to in writing, software\n-   distributed under the License is distributed on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-   See the License for the specific language governing permissions and\n-   limitations under the License.\n--->\n-<html xmlns:wicket=\"http://wicket.apache.org\">\n-    <body>\n-    <wicket:panel>\n-\n-        <div style=\"display: inline-table;\">\n-            <input type=\"hidden\" wicket:id=\"recorder\"/>\n-            <span wicket:id=\"availableHeader\"/>\n-            <span wicket:id=\"availableHeader\"/>\n-\n-            <div id=\"choices\">\n-                <select wicket:id=\"choices\" class=\"choicesSelect\" style=\"visibility: hidden;width: 0px;\">[choices]</select>\n-            </div>\n-            <div id=\"selections\" style=\"display: table-cell;\">\n-                <select class=\"selectionSelect\" wicket:id=\"selection\">[selection]</select>\t\n-            </div>\n-\n-            <div id=\"orderingButtons\" style=\"display: table-cell; width: 30px; vertical-align: middle; padding-left: 5px;\">\n-                <div style=\"padding-bottom: 5px;\">\n-                    <a wicket:id=\"moveUpButton\"><img src=\"img/up-icon.png\" alt=\"move up icon\"/></a>\n-                </div>\n-                <div style=\"padding-top: 5px;\">\n-                    <a wicket:id=\"moveDownButton\"><img src=\"img/down-icon.png\" alt=\"move down icon\"/></a>\n-                </div>\n-            </div>\n-        </div>\n-\n-        <div id=\"actionButtons\" style=\"padding-top: 5px;\">\n-            <div style=\"padding-left: 35px;float: left;\">\n-                <a wicket:id=\"addButton\"><img src=\"img/plus-icon.png\" alt=\"plus icon\"/></a>\n-            </div>\n-            <div style=\"padding-left: 15px;float: left;\">\n-                <a wicket:id=\"editButton\"><img src=\"img/actions/edit.png\" alt=\"edit icon\"/></a>\n-            </div>\n-            <div style=\"padding-left: 15px;float: left;\">\n-                <a wicket:id=\"removeButton\"><img src=\"img/minus-icon.png\" alt=\"minus icon\"/></a>\n-            </div>\n-        </div>\n-    </wicket:panel>\n-</body>\n-</html>\n\\ No newline at end of file"},{"sha":"579b4b6dd373602287ca57c39aabd3bdc712eee0","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/tree/TreeRolePanel.html","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRolePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRolePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRolePanel.html?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -12,11 +12,9 @@\n  limitations under the License.\n  under the License.\n -->\n-<html>\n-    <wicket:panel>\n-        <div class=\"roleTable\" wicket:id=\"treeContainer\">\n-            <div wicket:id=\"treeTable\"\n-                 style=\"width: 30%;display:block;margin:10px;float:left;\" class=\"role-tree\"/>\n-        </div>\n-    </wicket:panel>\n-</html>\n+<wicket:panel>\n+  <div class=\"roleTable\" wicket:id=\"treeContainer\">\n+    <div wicket:id=\"treeTable\"\n+         style=\"width: 30%;display:block;margin:10px;float:left;\" class=\"role-tree\"/>\n+  </div>\n+</wicket:panel>"},{"sha":"7c243080233761859937d52195b670602731a379","filename":"console/src/main/webapp/scripts/jquery-1.4.2.min.js","status":"removed","additions":0,"deletions":154,"changes":154,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55631b226c05dd7e2d870b856ab217e5c143c855/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fjquery-1.4.2.min.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55631b226c05dd7e2d870b856ab217e5c143c855/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fjquery-1.4.2.min.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fjquery-1.4.2.min.js?ref=55631b226c05dd7e2d870b856ab217e5c143c855","patch":"@@ -1,154 +0,0 @@\n-/*!\n- * jQuery JavaScript Library v1.4.2\n- * http://jquery.com/\n- *\n- * Copyright 2010, John Resig\n- * Dual licensed under the MIT or GPL Version 2 licenses.\n- * http://jquery.org/license\n- *\n- * Includes Sizzle.js\n- * http://sizzlejs.com/\n- * Copyright 2010, The Dojo Foundation\n- * Released under the MIT, BSD, and GPL Licenses.\n- *\n- * Date: Sat Feb 13 22:33:48 2010 -0500\n- */\n-(function(A,w){function ma(){if(!c.isReady){try{s.documentElement.doScroll(\"left\")}catch(a){setTimeout(ma,1);return}c.ready()}}function Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:\"script\"}):c.globalEval(b.text||b.textContent||b.innerHTML||\"\");b.parentNode&&b.parentNode.removeChild(b)}function X(a,b,d,f,e,j){var i=a.length;if(typeof b===\"object\"){for(var o in b)X(a,o,b[o],f,e,d);return a}if(d!==w){f=!j&&f&&c.isFunction(d);for(o=0;o<i;o++)e(a[o],b,f?d.call(a[o],o,e(a[o],b)):d,j);return a}return i?\n-e(a[0],b):w}function J(){return(new Date).getTime()}function Y(){return false}function Z(){return true}function na(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function oa(a){var b,d=[],f=[],e=arguments,j,i,o,k,n,r;i=c.data(this,\"events\");if(!(a.liveFired===this||!i||!i.live||a.button&&a.type===\"click\")){a.liveFired=this;var u=i.live.slice(0);for(k=0;k<u.length;k++){i=u[k];i.origType.replace(O,\"\")===a.type?f.push(i.selector):u.splice(k--,1)}j=c(a.target).closest(f,a.currentTarget);n=0;for(r=\n-j.length;n<r;n++)for(k=0;k<u.length;k++){i=u[k];if(j[n].selector===i.selector){o=j[n].elem;f=null;if(i.preType===\"mouseenter\"||i.preType===\"mouseleave\")f=c(a.relatedTarget).closest(i.selector)[0];if(!f||f!==o)d.push({elem:o,handleObj:i})}}n=0;for(r=d.length;n<r;n++){j=d[n];a.currentTarget=j.elem;a.data=j.handleObj.data;a.handleObj=j.handleObj;if(j.handleObj.origHandler.apply(j.elem,e)===false){b=false;break}}return b}}function pa(a,b){return\"live.\"+(a&&a!==\"*\"?a+\".\":\"\")+b.replace(/\\./g,\"`\").replace(/ /g,\n-\"&\")}function qa(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function ra(a,b){var d=0;b.each(function(){if(this.nodeName===(a[d]&&a[d].nodeName)){var f=c.data(a[d++]),e=c.data(this,f);if(f=f&&f.events){delete e.handle;e.events={};for(var j in f)for(var i in f[j])c.event.add(this,j,f[j][i],f[j][i].data)}}})}function sa(a,b,d){var f,e,j;b=b&&b[0]?b[0].ownerDocument||b[0]:s;if(a.length===1&&typeof a[0]===\"string\"&&a[0].length<512&&b===s&&!ta.test(a[0])&&(c.support.checkClone||!ua.test(a[0]))){e=\n-true;if(j=c.fragments[a[0]])if(j!==1)f=j}if(!f){f=b.createDocumentFragment();c.clean(a,b,f,d)}if(e)c.fragments[a[0]]=j?f:1;return{fragment:f,cacheable:e}}function K(a,b){var d={};c.each(va.concat.apply([],va.slice(0,b)),function(){d[this]=a});return d}function wa(a){return\"scrollTo\"in a&&a.document?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var c=function(a,b){return new c.fn.init(a,b)},Ra=A.jQuery,Sa=A.$,s=A.document,T,Ta=/^[^<]*(<[\\w\\W]+>)[^>]*$|^#([\\w-]+)$/,Ua=/^.[^:#\\[\\.,]*$/,Va=/\\S/,\n-Wa=/^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g,Xa=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/,P=navigator.userAgent,xa=false,Q=[],L,$=Object.prototype.toString,aa=Object.prototype.hasOwnProperty,ba=Array.prototype.push,R=Array.prototype.slice,ya=Array.prototype.indexOf;c.fn=c.prototype={init:function(a,b){var d,f;if(!a)return this;if(a.nodeType){this.context=this[0]=a;this.length=1;return this}if(a===\"body\"&&!b){this.context=s;this[0]=s.body;this.selector=\"body\";this.length=1;return this}if(typeof a===\"string\")if((d=Ta.exec(a))&&\n-(d[1]||!b))if(d[1]){f=b?b.ownerDocument||b:s;if(a=Xa.exec(a))if(c.isPlainObject(b)){a=[s.createElement(a[1])];c.fn.attr.call(a,b,true)}else a=[f.createElement(a[1])];else{a=sa([d[1]],[f]);a=(a.cacheable?a.fragment.cloneNode(true):a.fragment).childNodes}return c.merge(this,a)}else{if(b=s.getElementById(d[2])){if(b.id!==d[2])return T.find(a);this.length=1;this[0]=b}this.context=s;this.selector=a;return this}else if(!b&&/^\\w+$/.test(a)){this.selector=a;this.context=s;a=s.getElementsByTagName(a);return c.merge(this,\n-a)}else return!b||b.jquery?(b||T).find(a):c(b).find(a);else if(c.isFunction(a))return T.ready(a);if(a.selector!==w){this.selector=a.selector;this.context=a.context}return c.makeArray(a,this)},selector:\"\",jquery:\"1.4.2\",length:0,size:function(){return this.length},toArray:function(){return R.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this.slice(a)[0]:this[a]},pushStack:function(a,b,d){var f=c();c.isArray(a)?ba.apply(f,a):c.merge(f,a);f.prevObject=this;f.context=this.context;if(b===\n-\"find\")f.selector=this.selector+(this.selector?\" \":\"\")+d;else if(b)f.selector=this.selector+\".\"+b+\"(\"+d+\")\";return f},each:function(a,b){return c.each(this,a,b)},ready:function(a){c.bindReady();if(c.isReady)a.call(s,c);else Q&&Q.push(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(R.apply(this,arguments),\"slice\",R.call(arguments).join(\",\"))},map:function(a){return this.pushStack(c.map(this,\n-function(b,d){return a.call(b,d,b)}))},end:function(){return this.prevObject||c(null)},push:ba,sort:[].sort,splice:[].splice};c.fn.init.prototype=c.fn;c.extend=c.fn.extend=function(){var a=arguments[0]||{},b=1,d=arguments.length,f=false,e,j,i,o;if(typeof a===\"boolean\"){f=a;a=arguments[1]||{};b=2}if(typeof a!==\"object\"&&!c.isFunction(a))a={};if(d===b){a=this;--b}for(;b<d;b++)if((e=arguments[b])!=null)for(j in e){i=a[j];o=e[j];if(a!==o)if(f&&o&&(c.isPlainObject(o)||c.isArray(o))){i=i&&(c.isPlainObject(i)||\n-c.isArray(i))?i:c.isArray(o)?[]:{};a[j]=c.extend(f,i,o)}else if(o!==w)a[j]=o}return a};c.extend({noConflict:function(a){A.$=Sa;if(a)A.jQuery=Ra;return c},isReady:false,ready:function(){if(!c.isReady){if(!s.body)return setTimeout(c.ready,13);c.isReady=true;if(Q){for(var a,b=0;a=Q[b++];)a.call(s,c);Q=null}c.fn.triggerHandler&&c(s).triggerHandler(\"ready\")}},bindReady:function(){if(!xa){xa=true;if(s.readyState===\"complete\")return c.ready();if(s.addEventListener){s.addEventListener(\"DOMContentLoaded\",\n-L,false);A.addEventListener(\"load\",c.ready,false)}else if(s.attachEvent){s.attachEvent(\"onreadystatechange\",L);A.attachEvent(\"onload\",c.ready);var a=false;try{a=A.frameElement==null}catch(b){}s.documentElement.doScroll&&a&&ma()}}},isFunction:function(a){return $.call(a)===\"[object Function]\"},isArray:function(a){return $.call(a)===\"[object Array]\"},isPlainObject:function(a){if(!a||$.call(a)!==\"[object Object]\"||a.nodeType||a.setInterval)return false;if(a.constructor&&!aa.call(a,\"constructor\")&&!aa.call(a.constructor.prototype,\n-\"isPrototypeOf\"))return false;var b;for(b in a);return b===w||aa.call(a,b)},isEmptyObject:function(a){for(var b in a)return false;return true},error:function(a){throw a;},parseJSON:function(a){if(typeof a!==\"string\"||!a)return null;a=c.trim(a);if(/^[\\],:{}\\s]*$/.test(a.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\"@\").replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\"]\").replace(/(?:^|:|,)(?:\\s*\\[)+/g,\"\")))return A.JSON&&A.JSON.parse?A.JSON.parse(a):(new Function(\"return \"+\n-a))();else c.error(\"Invalid JSON: \"+a)},noop:function(){},globalEval:function(a){if(a&&Va.test(a)){var b=s.getElementsByTagName(\"head\")[0]||s.documentElement,d=s.createElement(\"script\");d.type=\"text/javascript\";if(c.support.scriptEval)d.appendChild(s.createTextNode(a));else d.text=a;b.insertBefore(d,b.firstChild);b.removeChild(d)}},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,b,d){var f,e=0,j=a.length,i=j===w||c.isFunction(a);if(d)if(i)for(f in a){if(b.apply(a[f],\n-d)===false)break}else for(;e<j;){if(b.apply(a[e++],d)===false)break}else if(i)for(f in a){if(b.call(a[f],f,a[f])===false)break}else for(d=a[0];e<j&&b.call(d,e,d)!==false;d=a[++e]);return a},trim:function(a){return(a||\"\").replace(Wa,\"\")},makeArray:function(a,b){b=b||[];if(a!=null)a.length==null||typeof a===\"string\"||c.isFunction(a)||typeof a!==\"function\"&&a.setInterval?ba.call(b,a):c.merge(b,a);return b},inArray:function(a,b){if(b.indexOf)return b.indexOf(a);for(var d=0,f=b.length;d<f;d++)if(b[d]===\n-a)return d;return-1},merge:function(a,b){var d=a.length,f=0;if(typeof b.length===\"number\")for(var e=b.length;f<e;f++)a[d++]=b[f];else for(;b[f]!==w;)a[d++]=b[f++];a.length=d;return a},grep:function(a,b,d){for(var f=[],e=0,j=a.length;e<j;e++)!d!==!b(a[e],e)&&f.push(a[e]);return f},map:function(a,b,d){for(var f=[],e,j=0,i=a.length;j<i;j++){e=b(a[j],j,d);if(e!=null)f[f.length]=e}return f.concat.apply([],f)},guid:1,proxy:function(a,b,d){if(arguments.length===2)if(typeof b===\"string\"){d=a;a=d[b];b=w}else if(b&&\n-!c.isFunction(b)){d=b;b=w}if(!b&&a)b=function(){return a.apply(d||this,arguments)};if(a)b.guid=a.guid=a.guid||b.guid||c.guid++;return b},uaMatch:function(a){a=a.toLowerCase();a=/(webkit)[ \\/]([\\w.]+)/.exec(a)||/(opera)(?:.*version)?[ \\/]([\\w.]+)/.exec(a)||/(msie) ([\\w.]+)/.exec(a)||!/compatible/.test(a)&&/(mozilla)(?:.*? rv:([\\w.]+))?/.exec(a)||[];return{browser:a[1]||\"\",version:a[2]||\"0\"}},browser:{}});P=c.uaMatch(P);if(P.browser){c.browser[P.browser]=true;c.browser.version=P.version}if(c.browser.webkit)c.browser.safari=\n-true;if(ya)c.inArray=function(a,b){return ya.call(b,a)};T=c(s);if(s.addEventListener)L=function(){s.removeEventListener(\"DOMContentLoaded\",L,false);c.ready()};else if(s.attachEvent)L=function(){if(s.readyState===\"complete\"){s.detachEvent(\"onreadystatechange\",L);c.ready()}};(function(){c.support={};var a=s.documentElement,b=s.createElement(\"script\"),d=s.createElement(\"div\"),f=\"script\"+J();d.style.display=\"none\";d.innerHTML=\"   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>\";\n-var e=d.getElementsByTagName(\"*\"),j=d.getElementsByTagName(\"a\")[0];if(!(!e||!e.length||!j)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName(\"tbody\").length,htmlSerialize:!!d.getElementsByTagName(\"link\").length,style:/red/.test(j.getAttribute(\"style\")),hrefNormalized:j.getAttribute(\"href\")===\"/a\",opacity:/^0.55$/.test(j.style.opacity),cssFloat:!!j.style.cssFloat,checkOn:d.getElementsByTagName(\"input\")[0].value===\"on\",optSelected:s.createElement(\"select\").appendChild(s.createElement(\"option\")).selected,\n-parentNode:d.removeChild(d.appendChild(s.createElement(\"div\"))).parentNode===null,deleteExpando:true,checkClone:false,scriptEval:false,noCloneEvent:true,boxModel:null};b.type=\"text/javascript\";try{b.appendChild(s.createTextNode(\"window.\"+f+\"=1;\"))}catch(i){}a.insertBefore(b,a.firstChild);if(A[f]){c.support.scriptEval=true;delete A[f]}try{delete b.test}catch(o){c.support.deleteExpando=false}a.removeChild(b);if(d.attachEvent&&d.fireEvent){d.attachEvent(\"onclick\",function k(){c.support.noCloneEvent=\n-false;d.detachEvent(\"onclick\",k)});d.cloneNode(true).fireEvent(\"onclick\")}d=s.createElement(\"div\");d.innerHTML=\"<input type='radio' name='radiotest' checked='checked'/>\";a=s.createDocumentFragment();a.appendChild(d.firstChild);c.support.checkClone=a.cloneNode(true).cloneNode(true).lastChild.checked;c(function(){var k=s.createElement(\"div\");k.style.width=k.style.paddingLeft=\"1px\";s.body.appendChild(k);c.boxModel=c.support.boxModel=k.offsetWidth===2;s.body.removeChild(k).style.display=\"none\"});a=function(k){var n=\n-s.createElement(\"div\");k=\"on\"+k;var r=k in n;if(!r){n.setAttribute(k,\"return;\");r=typeof n[k]===\"function\"}return r};c.support.submitBubbles=a(\"submit\");c.support.changeBubbles=a(\"change\");a=b=d=e=j=null}})();c.props={\"for\":\"htmlFor\",\"class\":\"className\",readonly:\"readOnly\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",rowspan:\"rowSpan\",colspan:\"colSpan\",tabindex:\"tabIndex\",usemap:\"useMap\",frameborder:\"frameBorder\"};var G=\"jQuery\"+J(),Ya=0,za={};c.extend({cache:{},expando:G,noData:{embed:true,object:true,\n-applet:true},data:function(a,b,d){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var f=a[G],e=c.cache;if(!f&&typeof b===\"string\"&&d===w)return null;f||(f=++Ya);if(typeof b===\"object\"){a[G]=f;e[f]=c.extend(true,{},b)}else if(!e[f]){a[G]=f;e[f]={}}a=e[f];if(d!==w)a[b]=d;return typeof b===\"string\"?a[b]:a}},removeData:function(a,b){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var d=a[G],f=c.cache,e=f[d];if(b){if(e){delete e[b];c.isEmptyObject(e)&&c.removeData(a)}}else{if(c.support.deleteExpando)delete a[c.expando];\n-else a.removeAttribute&&a.removeAttribute(c.expando);delete f[d]}}}});c.fn.extend({data:function(a,b){if(typeof a===\"undefined\"&&this.length)return c.data(this[0]);else if(typeof a===\"object\")return this.each(function(){c.data(this,a)});var d=a.split(\".\");d[1]=d[1]?\".\"+d[1]:\"\";if(b===w){var f=this.triggerHandler(\"getData\"+d[1]+\"!\",[d[0]]);if(f===w&&this.length)f=c.data(this[0],a);return f===w&&d[1]?this.data(d[0]):f}else return this.trigger(\"setData\"+d[1]+\"!\",[d[0],b]).each(function(){c.data(this,\n-a,b)})},removeData:function(a){return this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a,b,d){if(a){b=(b||\"fx\")+\"queue\";var f=c.data(a,b);if(!d)return f||[];if(!f||c.isArray(d))f=c.data(a,b,c.makeArray(d));else f.push(d);return f}},dequeue:function(a,b){b=b||\"fx\";var d=c.queue(a,b),f=d.shift();if(f===\"inprogress\")f=d.shift();if(f){b===\"fx\"&&d.unshift(\"inprogress\");f.call(a,function(){c.dequeue(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof a!==\"string\"){b=a;a=\"fx\"}if(b===\n-w)return c.queue(this[0],a);return this.each(function(){var d=c.queue(this,a,b);a===\"fx\"&&d[0]!==\"inprogress\"&&c.dequeue(this,a)})},dequeue:function(a){return this.each(function(){c.dequeue(this,a)})},delay:function(a,b){a=c.fx?c.fx.speeds[a]||a:a;b=b||\"fx\";return this.queue(b,function(){var d=this;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])}});var Aa=/[\\n\\t]/g,ca=/\\s+/,Za=/\\r/g,$a=/href|src|style/,ab=/(button|input)/i,bb=/(button|input|object|select|textarea)/i,\n-cb=/^(a|area)$/i,Ba=/radio|checkbox/;c.fn.extend({attr:function(a,b){return X(this,a,b,true,c.attr)},removeAttr:function(a){return this.each(function(){c.attr(this,a,\"\");this.nodeType===1&&this.removeAttribute(a)})},addClass:function(a){if(c.isFunction(a))return this.each(function(n){var r=c(this);r.addClass(a.call(this,n,r.attr(\"class\")))});if(a&&typeof a===\"string\")for(var b=(a||\"\").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1)if(e.className){for(var j=\" \"+e.className+\" \",\n-i=e.className,o=0,k=b.length;o<k;o++)if(j.indexOf(\" \"+b[o]+\" \")<0)i+=\" \"+b[o];e.className=c.trim(i)}else e.className=a}return this},removeClass:function(a){if(c.isFunction(a))return this.each(function(k){var n=c(this);n.removeClass(a.call(this,k,n.attr(\"class\")))});if(a&&typeof a===\"string\"||a===w)for(var b=(a||\"\").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1&&e.className)if(a){for(var j=(\" \"+e.className+\" \").replace(Aa,\" \"),i=0,o=b.length;i<o;i++)j=j.replace(\" \"+b[i]+\" \",\n-\" \");e.className=c.trim(j)}else e.className=\"\"}return this},toggleClass:function(a,b){var d=typeof a,f=typeof b===\"boolean\";if(c.isFunction(a))return this.each(function(e){var j=c(this);j.toggleClass(a.call(this,e,j.attr(\"class\"),b),b)});return this.each(function(){if(d===\"string\")for(var e,j=0,i=c(this),o=b,k=a.split(ca);e=k[j++];){o=f?o:!i.hasClass(e);i[o?\"addClass\":\"removeClass\"](e)}else if(d===\"undefined\"||d===\"boolean\"){this.className&&c.data(this,\"__className__\",this.className);this.className=\n-this.className||a===false?\"\":c.data(this,\"__className__\")||\"\"}})},hasClass:function(a){a=\" \"+a+\" \";for(var b=0,d=this.length;b<d;b++)if((\" \"+this[b].className+\" \").replace(Aa,\" \").indexOf(a)>-1)return true;return false},val:function(a){if(a===w){var b=this[0];if(b){if(c.nodeName(b,\"option\"))return(b.attributes.value||{}).specified?b.value:b.text;if(c.nodeName(b,\"select\")){var d=b.selectedIndex,f=[],e=b.options;b=b.type===\"select-one\";if(d<0)return null;var j=b?d:0;for(d=b?d+1:e.length;j<d;j++){var i=\n-e[j];if(i.selected){a=c(i).val();if(b)return a;f.push(a)}}return f}if(Ba.test(b.type)&&!c.support.checkOn)return b.getAttribute(\"value\")===null?\"on\":b.value;return(b.value||\"\").replace(Za,\"\")}return w}var o=c.isFunction(a);return this.each(function(k){var n=c(this),r=a;if(this.nodeType===1){if(o)r=a.call(this,k,n.val());if(typeof r===\"number\")r+=\"\";if(c.isArray(r)&&Ba.test(this.type))this.checked=c.inArray(n.val(),r)>=0;else if(c.nodeName(this,\"select\")){var u=c.makeArray(r);c(\"option\",this).each(function(){this.selected=\n-c.inArray(c(this).val(),u)>=0});if(!u.length)this.selectedIndex=-1}else this.value=r}})}});c.extend({attrFn:{val:true,css:true,html:true,text:true,data:true,width:true,height:true,offset:true},attr:function(a,b,d,f){if(!a||a.nodeType===3||a.nodeType===8)return w;if(f&&b in c.attrFn)return c(a)[b](d);f=a.nodeType!==1||!c.isXMLDoc(a);var e=d!==w;b=f&&c.props[b]||b;if(a.nodeType===1){var j=$a.test(b);if(b in a&&f&&!j){if(e){b===\"type\"&&ab.test(a.nodeName)&&a.parentNode&&c.error(\"type property can't be changed\");\n-a[b]=d}if(c.nodeName(a,\"form\")&&a.getAttributeNode(b))return a.getAttributeNode(b).nodeValue;if(b===\"tabIndex\")return(b=a.getAttributeNode(\"tabIndex\"))&&b.specified?b.value:bb.test(a.nodeName)||cb.test(a.nodeName)&&a.href?0:w;return a[b]}if(!c.support.style&&f&&b===\"style\"){if(e)a.style.cssText=\"\"+d;return a.style.cssText}e&&a.setAttribute(b,\"\"+d);a=!c.support.hrefNormalized&&f&&j?a.getAttribute(b,2):a.getAttribute(b);return a===null?w:a}return c.style(a,b,d)}});var O=/\\.(.*)$/,db=function(a){return a.replace(/[^\\w\\s\\.\\|`]/g,\n-function(b){return\"\\\\\"+b})};c.event={add:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){if(a.setInterval&&a!==A&&!a.frameElement)a=A;var e,j;if(d.handler){e=d;d=e.handler}if(!d.guid)d.guid=c.guid++;if(j=c.data(a)){var i=j.events=j.events||{},o=j.handle;if(!o)j.handle=o=function(){return typeof c!==\"undefined\"&&!c.event.triggered?c.event.handle.apply(o.elem,arguments):w};o.elem=a;b=b.split(\" \");for(var k,n=0,r;k=b[n++];){j=e?c.extend({},e):{handler:d,data:f};if(k.indexOf(\".\")>-1){r=k.split(\".\");\n-k=r.shift();j.namespace=r.slice(0).sort().join(\".\")}else{r=[];j.namespace=\"\"}j.type=k;j.guid=d.guid;var u=i[k],z=c.event.special[k]||{};if(!u){u=i[k]=[];if(!z.setup||z.setup.call(a,f,r,o)===false)if(a.addEventListener)a.addEventListener(k,o,false);else a.attachEvent&&a.attachEvent(\"on\"+k,o)}if(z.add){z.add.call(a,j);if(!j.handler.guid)j.handler.guid=d.guid}u.push(j);c.event.global[k]=true}a=null}}},global:{},remove:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){var e,j=0,i,o,k,n,r,u,z=c.data(a),\n-C=z&&z.events;if(z&&C){if(b&&b.type){d=b.handler;b=b.type}if(!b||typeof b===\"string\"&&b.charAt(0)===\".\"){b=b||\"\";for(e in C)c.event.remove(a,e+b)}else{for(b=b.split(\" \");e=b[j++];){n=e;i=e.indexOf(\".\")<0;o=[];if(!i){o=e.split(\".\");e=o.shift();k=new RegExp(\"(^|\\\\.)\"+c.map(o.slice(0).sort(),db).join(\"\\\\.(?:.*\\\\.)?\")+\"(\\\\.|$)\")}if(r=C[e])if(d){n=c.event.special[e]||{};for(B=f||0;B<r.length;B++){u=r[B];if(d.guid===u.guid){if(i||k.test(u.namespace)){f==null&&r.splice(B--,1);n.remove&&n.remove.call(a,u)}if(f!=\n-null)break}}if(r.length===0||f!=null&&r.length===1){if(!n.teardown||n.teardown.call(a,o)===false)Ca(a,e,z.handle);delete C[e]}}else for(var B=0;B<r.length;B++){u=r[B];if(i||k.test(u.namespace)){c.event.remove(a,n,u.handler,B);r.splice(B--,1)}}}if(c.isEmptyObject(C)){if(b=z.handle)b.elem=null;delete z.events;delete z.handle;c.isEmptyObject(z)&&c.removeData(a)}}}}},trigger:function(a,b,d,f){var e=a.type||a;if(!f){a=typeof a===\"object\"?a[G]?a:c.extend(c.Event(e),a):c.Event(e);if(e.indexOf(\"!\")>=0){a.type=\n-e=e.slice(0,-1);a.exclusive=true}if(!d){a.stopPropagation();c.event.global[e]&&c.each(c.cache,function(){this.events&&this.events[e]&&c.event.trigger(a,b,this.handle.elem)})}if(!d||d.nodeType===3||d.nodeType===8)return w;a.result=w;a.target=d;b=c.makeArray(b);b.unshift(a)}a.currentTarget=d;(f=c.data(d,\"handle\"))&&f.apply(d,b);f=d.parentNode||d.ownerDocument;try{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d[\"on\"+e]&&d[\"on\"+e].apply(d,b)===false)a.result=false}catch(j){}if(!a.isPropagationStopped()&&\n-f)c.event.trigger(a,b,f,true);else if(!a.isDefaultPrevented()){f=a.target;var i,o=c.nodeName(f,\"a\")&&e===\"click\",k=c.event.special[e]||{};if((!k._default||k._default.call(d,a)===false)&&!o&&!(f&&f.nodeName&&c.noData[f.nodeName.toLowerCase()])){try{if(f[e]){if(i=f[\"on\"+e])f[\"on\"+e]=null;c.event.triggered=true;f[e]()}}catch(n){}if(i)f[\"on\"+e]=i;c.event.triggered=false}}},handle:function(a){var b,d,f,e;a=arguments[0]=c.event.fix(a||A.event);a.currentTarget=this;b=a.type.indexOf(\".\")<0&&!a.exclusive;\n-if(!b){d=a.type.split(\".\");a.type=d.shift();f=new RegExp(\"(^|\\\\.)\"+d.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\")+\"(\\\\.|$)\")}e=c.data(this,\"events\");d=e[a.type];if(e&&d){d=d.slice(0);e=0;for(var j=d.length;e<j;e++){var i=d[e];if(b||f.test(i.namespace)){a.handler=i.handler;a.data=i.data;a.handleObj=i;i=i.handler.apply(this,arguments);if(i!==w){a.result=i;if(i===false){a.preventDefault();a.stopPropagation()}}if(a.isImmediatePropagationStopped())break}}}return a.result},props:\"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which\".split(\" \"),\n-fix:function(a){if(a[G])return a;var b=a;a=c.Event(b);for(var d=this.props.length,f;d;){f=this.props[--d];a[f]=b[f]}if(!a.target)a.target=a.srcElement||s;if(a.target.nodeType===3)a.target=a.target.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement;if(a.pageX==null&&a.clientX!=null){b=s.documentElement;d=s.body;a.pageX=a.clientX+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft||0);a.pageY=a.clientY+(b&&b.scrollTop||\n-d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(!a.which&&(a.charCode||a.charCode===0?a.charCode:a.keyCode))a.which=a.charCode||a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=a.ctrlKey;if(!a.which&&a.button!==w)a.which=a.button&1?1:a.button&2?3:a.button&4?2:0;return a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.noop},live:{add:function(a){c.event.add(this,a.origType,c.extend({},a,{handler:oa}))},remove:function(a){var b=true,d=a.origType.replace(O,\"\");c.each(c.data(this,\n-\"events\").live||[],function(){if(d===this.origType.replace(O,\"\"))return b=false});b&&c.event.remove(this,a.origType,oa)}},beforeunload:{setup:function(a,b,d){if(this.setInterval)this.onbeforeunload=d;return false},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}};var Ca=s.removeEventListener?function(a,b,d){a.removeEventListener(b,d,false)}:function(a,b,d){a.detachEvent(\"on\"+b,d)};c.Event=function(a){if(!this.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=\n-a;this.type=a.type}else this.type=a;this.timeStamp=J();this[G]=true};c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=Z;var a=this.originalEvent;if(a){a.preventDefault&&a.preventDefault();a.returnValue=false}},stopPropagation:function(){this.isPropagationStopped=Z;var a=this.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.cancelBubble=true}},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=Z;this.stopPropagation()},isDefaultPrevented:Y,isPropagationStopped:Y,\n-isImmediatePropagationStopped:Y};var Da=function(a){var b=a.relatedTarget;try{for(;b&&b!==this;)b=b.parentNode;if(b!==this){a.type=a.data;c.event.handle.apply(this,arguments)}}catch(d){}},Ea=function(a){a.type=a.data;c.event.handle.apply(this,arguments)};c.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(a,b){c.event.special[a]={setup:function(d){c.event.add(this,b,d&&d.selector?Ea:Da,a)},teardown:function(d){c.event.remove(this,b,d&&d.selector?Ea:Da)}}});if(!c.support.submitBubbles)c.event.special.submit=\n-{setup:function(){if(this.nodeName.toLowerCase()!==\"form\"){c.event.add(this,\"click.specialSubmit\",function(a){var b=a.target,d=b.type;if((d===\"submit\"||d===\"image\")&&c(b).closest(\"form\").length)return na(\"submit\",this,arguments)});c.event.add(this,\"keypress.specialSubmit\",function(a){var b=a.target,d=b.type;if((d===\"text\"||d===\"password\")&&c(b).closest(\"form\").length&&a.keyCode===13)return na(\"submit\",this,arguments)})}else return false},teardown:function(){c.event.remove(this,\".specialSubmit\")}};\n-if(!c.support.changeBubbles){var da=/textarea|input|select/i,ea,Fa=function(a){var b=a.type,d=a.value;if(b===\"radio\"||b===\"checkbox\")d=a.checked;else if(b===\"select-multiple\")d=a.selectedIndex>-1?c.map(a.options,function(f){return f.selected}).join(\"-\"):\"\";else if(a.nodeName.toLowerCase()===\"select\")d=a.selectedIndex;return d},fa=function(a,b){var d=a.target,f,e;if(!(!da.test(d.nodeName)||d.readOnly)){f=c.data(d,\"_change_data\");e=Fa(d);if(a.type!==\"focusout\"||d.type!==\"radio\")c.data(d,\"_change_data\",\n-e);if(!(f===w||e===f))if(f!=null||e){a.type=\"change\";return c.event.trigger(a,b,d)}}};c.event.special.change={filters:{focusout:fa,click:function(a){var b=a.target,d=b.type;if(d===\"radio\"||d===\"checkbox\"||b.nodeName.toLowerCase()===\"select\")return fa.call(this,a)},keydown:function(a){var b=a.target,d=b.type;if(a.keyCode===13&&b.nodeName.toLowerCase()!==\"textarea\"||a.keyCode===32&&(d===\"checkbox\"||d===\"radio\")||d===\"select-multiple\")return fa.call(this,a)},beforeactivate:function(a){a=a.target;c.data(a,\n-\"_change_data\",Fa(a))}},setup:function(){if(this.type===\"file\")return false;for(var a in ea)c.event.add(this,a+\".specialChange\",ea[a]);return da.test(this.nodeName)},teardown:function(){c.event.remove(this,\".specialChange\");return da.test(this.nodeName)}};ea=c.event.special.change.filters}s.addEventListener&&c.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){function d(f){f=c.event.fix(f);f.type=b;return c.event.handle.call(this,f)}c.event.special[b]={setup:function(){this.addEventListener(a,\n-d,true)},teardown:function(){this.removeEventListener(a,d,true)}}});c.each([\"bind\",\"one\"],function(a,b){c.fn[b]=function(d,f,e){if(typeof d===\"object\"){for(var j in d)this[b](j,f,d[j],e);return this}if(c.isFunction(f)){e=f;f=w}var i=b===\"one\"?c.proxy(e,function(k){c(this).unbind(k,i);return e.apply(this,arguments)}):e;if(d===\"unload\"&&b!==\"one\")this.one(d,f,e);else{j=0;for(var o=this.length;j<o;j++)c.event.add(this[j],d,i,f)}return this}});c.fn.extend({unbind:function(a,b){if(typeof a===\"object\"&&\n-!a.preventDefault)for(var d in a)this.unbind(d,a[d]);else{d=0;for(var f=this.length;d<f;d++)c.event.remove(this[d],a,b)}return this},delegate:function(a,b,d,f){return this.live(b,d,f,a)},undelegate:function(a,b,d){return arguments.length===0?this.unbind(\"live\"):this.die(b,null,d,a)},trigger:function(a,b){return this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0]){a=c.Event(a);a.preventDefault();a.stopPropagation();c.event.trigger(a,b,this[0]);return a.result}},\n-toggle:function(a){for(var b=arguments,d=1;d<b.length;)c.proxy(a,b[d++]);return this.click(c.proxy(a,function(f){var e=(c.data(this,\"lastToggle\"+a.guid)||0)%d;c.data(this,\"lastToggle\"+a.guid,e+1);f.preventDefault();return b[e].apply(this,arguments)||false}))},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var Ga={focus:\"focusin\",blur:\"focusout\",mouseenter:\"mouseover\",mouseleave:\"mouseout\"};c.each([\"live\",\"die\"],function(a,b){c.fn[b]=function(d,f,e,j){var i,o=0,k,n,r=j||this.selector,\n-u=j?this:c(this.context);if(c.isFunction(f)){e=f;f=w}for(d=(d||\"\").split(\" \");(i=d[o++])!=null;){j=O.exec(i);k=\"\";if(j){k=j[0];i=i.replace(O,\"\")}if(i===\"hover\")d.push(\"mouseenter\"+k,\"mouseleave\"+k);else{n=i;if(i===\"focus\"||i===\"blur\"){d.push(Ga[i]+k);i+=k}else i=(Ga[i]||i)+k;b===\"live\"?u.each(function(){c.event.add(this,pa(i,r),{data:f,selector:r,handler:e,origType:i,origHandler:e,preType:n})}):u.unbind(pa(i,r),e)}}return this}});c.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error\".split(\" \"),\n-function(a,b){c.fn[b]=function(d){return d?this.bind(b,d):this.trigger(b)};if(c.attrFn)c.attrFn[b]=true});A.attachEvent&&!A.addEventListener&&A.attachEvent(\"onunload\",function(){for(var a in c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}catch(b){}});(function(){function a(g){for(var h=\"\",l,m=0;g[m];m++){l=g[m];if(l.nodeType===3||l.nodeType===4)h+=l.nodeValue;else if(l.nodeType!==8)h+=a(l.childNodes)}return h}function b(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];\n-if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1&&!p){t.sizcache=l;t.sizset=q}if(t.nodeName.toLowerCase()===h){y=t;break}t=t[g]}m[q]=y}}}function d(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1){if(!p){t.sizcache=l;t.sizset=q}if(typeof h!==\"string\"){if(t===h){y=true;break}}else if(k.filter(h,[t]).length>0){y=t;break}}t=t[g]}m[q]=y}}}var f=/((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^[\\]]*\\]|['\"][^'\"]*['\"]|[^[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g,\n-e=0,j=Object.prototype.toString,i=false,o=true;[0,0].sort(function(){o=false;return 0});var k=function(g,h,l,m){l=l||[];var q=h=h||s;if(h.nodeType!==1&&h.nodeType!==9)return[];if(!g||typeof g!==\"string\")return l;for(var p=[],v,t,y,S,H=true,M=x(h),I=g;(f.exec(\"\"),v=f.exec(I))!==null;){I=v[3];p.push(v[1]);if(v[2]){S=v[3];break}}if(p.length>1&&r.exec(g))if(p.length===2&&n.relative[p[0]])t=ga(p[0]+p[1],h);else for(t=n.relative[p[0]]?[h]:k(p.shift(),h);p.length;){g=p.shift();if(n.relative[g])g+=p.shift();\n-t=ga(g,t)}else{if(!m&&p.length>1&&h.nodeType===9&&!M&&n.match.ID.test(p[0])&&!n.match.ID.test(p[p.length-1])){v=k.find(p.shift(),h,M);h=v.expr?k.filter(v.expr,v.set)[0]:v.set[0]}if(h){v=m?{expr:p.pop(),set:z(m)}:k.find(p.pop(),p.length===1&&(p[0]===\"~\"||p[0]===\"+\")&&h.parentNode?h.parentNode:h,M);t=v.expr?k.filter(v.expr,v.set):v.set;if(p.length>0)y=z(t);else H=false;for(;p.length;){var D=p.pop();v=D;if(n.relative[D])v=p.pop();else D=\"\";if(v==null)v=h;n.relative[D](y,v,M)}}else y=[]}y||(y=t);y||k.error(D||\n-g);if(j.call(y)===\"[object Array]\")if(H)if(h&&h.nodeType===1)for(g=0;y[g]!=null;g++){if(y[g]&&(y[g]===true||y[g].nodeType===1&&E(h,y[g])))l.push(t[g])}else for(g=0;y[g]!=null;g++)y[g]&&y[g].nodeType===1&&l.push(t[g]);else l.push.apply(l,y);else z(y,l);if(S){k(S,q,l,m);k.uniqueSort(l)}return l};k.uniqueSort=function(g){if(B){i=o;g.sort(B);if(i)for(var h=1;h<g.length;h++)g[h]===g[h-1]&&g.splice(h--,1)}return g};k.matches=function(g,h){return k(g,null,null,h)};k.find=function(g,h,l){var m,q;if(!g)return[];\n-for(var p=0,v=n.order.length;p<v;p++){var t=n.order[p];if(q=n.leftMatch[t].exec(g)){var y=q[1];q.splice(1,1);if(y.substr(y.length-1)!==\"\\\\\"){q[1]=(q[1]||\"\").replace(/\\\\/g,\"\");m=n.find[t](q,h,l);if(m!=null){g=g.replace(n.match[t],\"\");break}}}}m||(m=h.getElementsByTagName(\"*\"));return{set:m,expr:g}};k.filter=function(g,h,l,m){for(var q=g,p=[],v=h,t,y,S=h&&h[0]&&x(h[0]);g&&h.length;){for(var H in n.filter)if((t=n.leftMatch[H].exec(g))!=null&&t[2]){var M=n.filter[H],I,D;D=t[1];y=false;t.splice(1,1);if(D.substr(D.length-\n-1)!==\"\\\\\"){if(v===p)p=[];if(n.preFilter[H])if(t=n.preFilter[H](t,v,l,p,m,S)){if(t===true)continue}else y=I=true;if(t)for(var U=0;(D=v[U])!=null;U++)if(D){I=M(D,t,U,v);var Ha=m^!!I;if(l&&I!=null)if(Ha)y=true;else v[U]=false;else if(Ha){p.push(D);y=true}}if(I!==w){l||(v=p);g=g.replace(n.match[H],\"\");if(!y)return[];break}}}if(g===q)if(y==null)k.error(g);else break;q=g}return v};k.error=function(g){throw\"Syntax error, unrecognized expression: \"+g;};var n=k.selectors={order:[\"ID\",\"NAME\",\"TAG\"],match:{ID:/#((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)/,\n-CLASS:/\\.((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)/,NAME:/\\[name=['\"]*((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)['\"]*\\]/,ATTR:/\\[\\s*((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(['\"]*)(.*?)\\3|)\\s*\\]/,TAG:/^((?:[\\w\\u00c0-\\uFFFF\\*-]|\\\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\\((even|odd|[\\dn+-]*)\\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^-]|$)/,PSEUDO:/:((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)(?:\\((['\"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/},leftMatch:{},attrMap:{\"class\":\"className\",\"for\":\"htmlFor\"},attrHandle:{href:function(g){return g.getAttribute(\"href\")}},\n-relative:{\"+\":function(g,h){var l=typeof h===\"string\",m=l&&!/\\W/.test(h);l=l&&!m;if(m)h=h.toLowerCase();m=0;for(var q=g.length,p;m<q;m++)if(p=g[m]){for(;(p=p.previousSibling)&&p.nodeType!==1;);g[m]=l||p&&p.nodeName.toLowerCase()===h?p||false:p===h}l&&k.filter(h,g,true)},\">\":function(g,h){var l=typeof h===\"string\";if(l&&!/\\W/.test(h)){h=h.toLowerCase();for(var m=0,q=g.length;m<q;m++){var p=g[m];if(p){l=p.parentNode;g[m]=l.nodeName.toLowerCase()===h?l:false}}}else{m=0;for(q=g.length;m<q;m++)if(p=g[m])g[m]=\n-l?p.parentNode:p.parentNode===h;l&&k.filter(h,g,true)}},\"\":function(g,h,l){var m=e++,q=d;if(typeof h===\"string\"&&!/\\W/.test(h)){var p=h=h.toLowerCase();q=b}q(\"parentNode\",h,m,g,p,l)},\"~\":function(g,h,l){var m=e++,q=d;if(typeof h===\"string\"&&!/\\W/.test(h)){var p=h=h.toLowerCase();q=b}q(\"previousSibling\",h,m,g,p,l)}},find:{ID:function(g,h,l){if(typeof h.getElementById!==\"undefined\"&&!l)return(g=h.getElementById(g[1]))?[g]:[]},NAME:function(g,h){if(typeof h.getElementsByName!==\"undefined\"){var l=[];\n-h=h.getElementsByName(g[1]);for(var m=0,q=h.length;m<q;m++)h[m].getAttribute(\"name\")===g[1]&&l.push(h[m]);return l.length===0?null:l}},TAG:function(g,h){return h.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,h,l,m,q,p){g=\" \"+g[1].replace(/\\\\/g,\"\")+\" \";if(p)return g;p=0;for(var v;(v=h[p])!=null;p++)if(v)if(q^(v.className&&(\" \"+v.className+\" \").replace(/[\\t\\n]/g,\" \").indexOf(g)>=0))l||m.push(v);else if(l)h[p]=false;return false},ID:function(g){return g[1].replace(/\\\\/g,\"\")},TAG:function(g){return g[1].toLowerCase()},\n-CHILD:function(g){if(g[1]===\"nth\"){var h=/(-?)(\\d*)n((?:\\+|-)?\\d*)/.exec(g[2]===\"even\"&&\"2n\"||g[2]===\"odd\"&&\"2n+1\"||!/\\D/.test(g[2])&&\"0n+\"+g[2]||g[2]);g[2]=h[1]+(h[2]||1)-0;g[3]=h[3]-0}g[0]=e++;return g},ATTR:function(g,h,l,m,q,p){h=g[1].replace(/\\\\/g,\"\");if(!p&&n.attrMap[h])g[1]=n.attrMap[h];if(g[2]===\"~=\")g[4]=\" \"+g[4]+\" \";return g},PSEUDO:function(g,h,l,m,q){if(g[1]===\"not\")if((f.exec(g[3])||\"\").length>1||/^\\w/.test(g[3]))g[3]=k(g[3],null,null,h);else{g=k.filter(g[3],h,l,true^q);l||m.push.apply(m,\n-g);return false}else if(n.match.POS.test(g[0])||n.match.CHILD.test(g[0]))return true;return g},POS:function(g){g.unshift(true);return g}},filters:{enabled:function(g){return g.disabled===false&&g.type!==\"hidden\"},disabled:function(g){return g.disabled===true},checked:function(g){return g.checked===true},selected:function(g){return g.selected===true},parent:function(g){return!!g.firstChild},empty:function(g){return!g.firstChild},has:function(g,h,l){return!!k(l[3],g).length},header:function(g){return/h\\d/i.test(g.nodeName)},\n-text:function(g){return\"text\"===g.type},radio:function(g){return\"radio\"===g.type},checkbox:function(g){return\"checkbox\"===g.type},file:function(g){return\"file\"===g.type},password:function(g){return\"password\"===g.type},submit:function(g){return\"submit\"===g.type},image:function(g){return\"image\"===g.type},reset:function(g){return\"reset\"===g.type},button:function(g){return\"button\"===g.type||g.nodeName.toLowerCase()===\"button\"},input:function(g){return/input|select|textarea|button/i.test(g.nodeName)}},\n-setFilters:{first:function(g,h){return h===0},last:function(g,h,l,m){return h===m.length-1},even:function(g,h){return h%2===0},odd:function(g,h){return h%2===1},lt:function(g,h,l){return h<l[3]-0},gt:function(g,h,l){return h>l[3]-0},nth:function(g,h,l){return l[3]-0===h},eq:function(g,h,l){return l[3]-0===h}},filter:{PSEUDO:function(g,h,l,m){var q=h[1],p=n.filters[q];if(p)return p(g,l,h,m);else if(q===\"contains\")return(g.textContent||g.innerText||a([g])||\"\").indexOf(h[3])>=0;else if(q===\"not\"){h=\n-h[3];l=0;for(m=h.length;l<m;l++)if(h[l]===g)return false;return true}else k.error(\"Syntax error, unrecognized expression: \"+q)},CHILD:function(g,h){var l=h[1],m=g;switch(l){case \"only\":case \"first\":for(;m=m.previousSibling;)if(m.nodeType===1)return false;if(l===\"first\")return true;m=g;case \"last\":for(;m=m.nextSibling;)if(m.nodeType===1)return false;return true;case \"nth\":l=h[2];var q=h[3];if(l===1&&q===0)return true;h=h[0];var p=g.parentNode;if(p&&(p.sizcache!==h||!g.nodeIndex)){var v=0;for(m=p.firstChild;m;m=\n-m.nextSibling)if(m.nodeType===1)m.nodeIndex=++v;p.sizcache=h}g=g.nodeIndex-q;return l===0?g===0:g%l===0&&g/l>=0}},ID:function(g,h){return g.nodeType===1&&g.getAttribute(\"id\")===h},TAG:function(g,h){return h===\"*\"&&g.nodeType===1||g.nodeName.toLowerCase()===h},CLASS:function(g,h){return(\" \"+(g.className||g.getAttribute(\"class\"))+\" \").indexOf(h)>-1},ATTR:function(g,h){var l=h[1];g=n.attrHandle[l]?n.attrHandle[l](g):g[l]!=null?g[l]:g.getAttribute(l);l=g+\"\";var m=h[2];h=h[4];return g==null?m===\"!=\":m===\n-\"=\"?l===h:m===\"*=\"?l.indexOf(h)>=0:m===\"~=\"?(\" \"+l+\" \").indexOf(h)>=0:!h?l&&g!==false:m===\"!=\"?l!==h:m===\"^=\"?l.indexOf(h)===0:m===\"$=\"?l.substr(l.length-h.length)===h:m===\"|=\"?l===h||l.substr(0,h.length+1)===h+\"-\":false},POS:function(g,h,l,m){var q=n.setFilters[h[2]];if(q)return q(g,l,h,m)}}},r=n.match.POS;for(var u in n.match){n.match[u]=new RegExp(n.match[u].source+/(?![^\\[]*\\])(?![^\\(]*\\))/.source);n.leftMatch[u]=new RegExp(/(^(?:.|\\r|\\n)*?)/.source+n.match[u].source.replace(/\\\\(\\d+)/g,function(g,\n-h){return\"\\\\\"+(h-0+1)}))}var z=function(g,h){g=Array.prototype.slice.call(g,0);if(h){h.push.apply(h,g);return h}return g};try{Array.prototype.slice.call(s.documentElement.childNodes,0)}catch(C){z=function(g,h){h=h||[];if(j.call(g)===\"[object Array]\")Array.prototype.push.apply(h,g);else if(typeof g.length===\"number\")for(var l=0,m=g.length;l<m;l++)h.push(g[l]);else for(l=0;g[l];l++)h.push(g[l]);return h}}var B;if(s.documentElement.compareDocumentPosition)B=function(g,h){if(!g.compareDocumentPosition||\n-!h.compareDocumentPosition){if(g==h)i=true;return g.compareDocumentPosition?-1:1}g=g.compareDocumentPosition(h)&4?-1:g===h?0:1;if(g===0)i=true;return g};else if(\"sourceIndex\"in s.documentElement)B=function(g,h){if(!g.sourceIndex||!h.sourceIndex){if(g==h)i=true;return g.sourceIndex?-1:1}g=g.sourceIndex-h.sourceIndex;if(g===0)i=true;return g};else if(s.createRange)B=function(g,h){if(!g.ownerDocument||!h.ownerDocument){if(g==h)i=true;return g.ownerDocument?-1:1}var l=g.ownerDocument.createRange(),m=\n-h.ownerDocument.createRange();l.setStart(g,0);l.setEnd(g,0);m.setStart(h,0);m.setEnd(h,0);g=l.compareBoundaryPoints(Range.START_TO_END,m);if(g===0)i=true;return g};(function(){var g=s.createElement(\"div\"),h=\"script\"+(new Date).getTime();g.innerHTML=\"<a name='\"+h+\"'/>\";var l=s.documentElement;l.insertBefore(g,l.firstChild);if(s.getElementById(h)){n.find.ID=function(m,q,p){if(typeof q.getElementById!==\"undefined\"&&!p)return(q=q.getElementById(m[1]))?q.id===m[1]||typeof q.getAttributeNode!==\"undefined\"&&\n-q.getAttributeNode(\"id\").nodeValue===m[1]?[q]:w:[]};n.filter.ID=function(m,q){var p=typeof m.getAttributeNode!==\"undefined\"&&m.getAttributeNode(\"id\");return m.nodeType===1&&p&&p.nodeValue===q}}l.removeChild(g);l=g=null})();(function(){var g=s.createElement(\"div\");g.appendChild(s.createComment(\"\"));if(g.getElementsByTagName(\"*\").length>0)n.find.TAG=function(h,l){l=l.getElementsByTagName(h[1]);if(h[1]===\"*\"){h=[];for(var m=0;l[m];m++)l[m].nodeType===1&&h.push(l[m]);l=h}return l};g.innerHTML=\"<a href='#'></a>\";\n-if(g.firstChild&&typeof g.firstChild.getAttribute!==\"undefined\"&&g.firstChild.getAttribute(\"href\")!==\"#\")n.attrHandle.href=function(h){return h.getAttribute(\"href\",2)};g=null})();s.querySelectorAll&&function(){var g=k,h=s.createElement(\"div\");h.innerHTML=\"<p class='TEST'></p>\";if(!(h.querySelectorAll&&h.querySelectorAll(\".TEST\").length===0)){k=function(m,q,p,v){q=q||s;if(!v&&q.nodeType===9&&!x(q))try{return z(q.querySelectorAll(m),p)}catch(t){}return g(m,q,p,v)};for(var l in g)k[l]=g[l];h=null}}();\n-(function(){var g=s.createElement(\"div\");g.innerHTML=\"<div class='test e'></div><div class='test'></div>\";if(!(!g.getElementsByClassName||g.getElementsByClassName(\"e\").length===0)){g.lastChild.className=\"e\";if(g.getElementsByClassName(\"e\").length!==1){n.order.splice(1,0,\"CLASS\");n.find.CLASS=function(h,l,m){if(typeof l.getElementsByClassName!==\"undefined\"&&!m)return l.getElementsByClassName(h[1])};g=null}}})();var E=s.compareDocumentPosition?function(g,h){return!!(g.compareDocumentPosition(h)&16)}:\n-function(g,h){return g!==h&&(g.contains?g.contains(h):true)},x=function(g){return(g=(g?g.ownerDocument||g:0).documentElement)?g.nodeName!==\"HTML\":false},ga=function(g,h){var l=[],m=\"\",q;for(h=h.nodeType?[h]:h;q=n.match.PSEUDO.exec(g);){m+=q[0];g=g.replace(n.match.PSEUDO,\"\")}g=n.relative[g]?g+\"*\":g;q=0;for(var p=h.length;q<p;q++)k(g,h[q],l);return k.filter(m,l)};c.find=k;c.expr=k.selectors;c.expr[\":\"]=c.expr.filters;c.unique=k.uniqueSort;c.text=a;c.isXMLDoc=x;c.contains=E})();var eb=/Until$/,fb=/^(?:parents|prevUntil|prevAll)/,\n-gb=/,/;R=Array.prototype.slice;var Ia=function(a,b,d){if(c.isFunction(b))return c.grep(a,function(e,j){return!!b.call(e,j,e)===d});else if(b.nodeType)return c.grep(a,function(e){return e===b===d});else if(typeof b===\"string\"){var f=c.grep(a,function(e){return e.nodeType===1});if(Ua.test(b))return c.filter(b,f,!d);else b=c.filter(b,f)}return c.grep(a,function(e){return c.inArray(e,b)>=0===d})};c.fn.extend({find:function(a){for(var b=this.pushStack(\"\",\"find\",a),d=0,f=0,e=this.length;f<e;f++){d=b.length;\n-c.find(a,this[f],b);if(f>0)for(var j=d;j<b.length;j++)for(var i=0;i<d;i++)if(b[i]===b[j]){b.splice(j--,1);break}}return b},has:function(a){var b=c(a);return this.filter(function(){for(var d=0,f=b.length;d<f;d++)if(c.contains(this,b[d]))return true})},not:function(a){return this.pushStack(Ia(this,a,false),\"not\",a)},filter:function(a){return this.pushStack(Ia(this,a,true),\"filter\",a)},is:function(a){return!!a&&c.filter(a,this).length>0},closest:function(a,b){if(c.isArray(a)){var d=[],f=this[0],e,j=\n-{},i;if(f&&a.length){e=0;for(var o=a.length;e<o;e++){i=a[e];j[i]||(j[i]=c.expr.match.POS.test(i)?c(i,b||this.context):i)}for(;f&&f.ownerDocument&&f!==b;){for(i in j){e=j[i];if(e.jquery?e.index(f)>-1:c(f).is(e)){d.push({selector:i,elem:f});delete j[i]}}f=f.parentNode}}return d}var k=c.expr.match.POS.test(a)?c(a,b||this.context):null;return this.map(function(n,r){for(;r&&r.ownerDocument&&r!==b;){if(k?k.index(r)>-1:c(r).is(a))return r;r=r.parentNode}return null})},index:function(a){if(!a||typeof a===\n-\"string\")return c.inArray(this[0],a?c(a):this.parent().children());return c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){a=typeof a===\"string\"?c(a,b||this.context):c.makeArray(a);b=c.merge(this.get(),a);return this.pushStack(qa(a[0])||qa(b[0])?b:c.unique(b))},andSelf:function(){return this.add(this.prevObject)}});c.each({parent:function(a){return(a=a.parentNode)&&a.nodeType!==11?a:null},parents:function(a){return c.dir(a,\"parentNode\")},parentsUntil:function(a,b,d){return c.dir(a,\"parentNode\",\n-d)},next:function(a){return c.nth(a,2,\"nextSibling\")},prev:function(a){return c.nth(a,2,\"previousSibling\")},nextAll:function(a){return c.dir(a,\"nextSibling\")},prevAll:function(a){return c.dir(a,\"previousSibling\")},nextUntil:function(a,b,d){return c.dir(a,\"nextSibling\",d)},prevUntil:function(a,b,d){return c.dir(a,\"previousSibling\",d)},siblings:function(a){return c.sibling(a.parentNode.firstChild,a)},children:function(a){return c.sibling(a.firstChild)},contents:function(a){return c.nodeName(a,\"iframe\")?\n-a.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},function(a,b){c.fn[a]=function(d,f){var e=c.map(this,b,d);eb.test(a)||(f=d);if(f&&typeof f===\"string\")e=c.filter(f,e);e=this.length>1?c.unique(e):e;if((this.length>1||gb.test(f))&&fb.test(a))e=e.reverse();return this.pushStack(e,a,R.call(arguments).join(\",\"))}});c.extend({filter:function(a,b,d){if(d)a=\":not(\"+a+\")\";return c.find.matches(a,b)},dir:function(a,b,d){var f=[];for(a=a[b];a&&a.nodeType!==9&&(d===w||a.nodeType!==1||!c(a).is(d));){a.nodeType===\n-1&&f.push(a);a=a[b]}return f},nth:function(a,b,d){b=b||1;for(var f=0;a;a=a[d])if(a.nodeType===1&&++f===b)break;return a},sibling:function(a,b){for(var d=[];a;a=a.nextSibling)a.nodeType===1&&a!==b&&d.push(a);return d}});var Ja=/ jQuery\\d+=\"(?:\\d+|null)\"/g,V=/^\\s+/,Ka=/(<([\\w:]+)[^>]*?)\\/>/g,hb=/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,La=/<([\\w:]+)/,ib=/<tbody/i,jb=/<|&#?\\w+;/,ta=/<script|<object|<embed|<option|<style/i,ua=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Ma=function(a,b,d){return hb.test(d)?\n-a:b+\"></\"+d+\">\"},F={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],area:[1,\"<map>\",\"</map>\"],_default:[0,\"\",\"\"]};F.optgroup=F.option;F.tbody=F.tfoot=F.colgroup=F.caption=F.thead;F.th=F.td;if(!c.support.htmlSerialize)F._default=[1,\"div<div>\",\"</div>\"];c.fn.extend({text:function(a){if(c.isFunction(a))return this.each(function(b){var d=\n-c(this);d.text(a.call(this,b,d.text()))});if(typeof a!==\"object\"&&a!==w)return this.empty().append((this[0]&&this[0].ownerDocument||s).createTextNode(a));return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var b=c(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.insertBefore(this[0]);b.map(function(){for(var d=this;d.firstChild&&d.firstChild.nodeType===1;)d=d.firstChild;return d}).append(this)}return this},\n-wrapInner:function(a){if(c.isFunction(a))return this.each(function(b){c(this).wrapInner(a.call(this,b))});return this.each(function(){var b=c(this),d=b.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){c.nodeName(this,\"body\")||c(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.appendChild(a)})},\n-prepend:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,this)});else if(arguments.length){var a=c(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,\"before\",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,\n-this.nextSibling)});else if(arguments.length){var a=this.pushStack(this,\"after\",arguments);a.push.apply(a,c(arguments[0]).toArray());return a}},remove:function(a,b){for(var d=0,f;(f=this[d])!=null;d++)if(!a||c.filter(a,[f]).length){if(!b&&f.nodeType===1){c.cleanData(f.getElementsByTagName(\"*\"));c.cleanData([f])}f.parentNode&&f.parentNode.removeChild(f)}return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++)for(b.nodeType===1&&c.cleanData(b.getElementsByTagName(\"*\"));b.firstChild;)b.removeChild(b.firstChild);\n-return this},clone:function(a){var b=this.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){var d=this.outerHTML,f=this.ownerDocument;if(!d){d=f.createElement(\"div\");d.appendChild(this.cloneNode(true));d=d.innerHTML}return c.clean([d.replace(Ja,\"\").replace(/=([^=\"'>\\s]+\\/)>/g,'=\"$1\">').replace(V,\"\")],f)[0]}else return this.cloneNode(true)});if(a===true){ra(this,b);ra(this.find(\"*\"),b.find(\"*\"))}return b},html:function(a){if(a===w)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(Ja,\n-\"\"):null;else if(typeof a===\"string\"&&!ta.test(a)&&(c.support.leadingWhitespace||!V.test(a))&&!F[(La.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(Ka,Ma);try{for(var b=0,d=this.length;b<d;b++)if(this[b].nodeType===1){c.cleanData(this[b].getElementsByTagName(\"*\"));this[b].innerHTML=a}}catch(f){this.empty().append(a)}}else c.isFunction(a)?this.each(function(e){var j=c(this),i=j.html();j.empty().append(function(){return a.call(this,e,i)})}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&\n-this[0].parentNode){if(c.isFunction(a))return this.each(function(b){var d=c(this),f=d.html();d.replaceWith(a.call(this,b,f))});if(typeof a!==\"string\")a=c(a).detach();return this.each(function(){var b=this.nextSibling,d=this.parentNode;c(this).remove();b?c(b).before(a):c(d).append(a)})}else return this.pushStack(c(c.isFunction(a)?a():a),\"replaceWith\",a)},detach:function(a){return this.remove(a,true)},domManip:function(a,b,d){function f(u){return c.nodeName(u,\"table\")?u.getElementsByTagName(\"tbody\")[0]||\n-u.appendChild(u.ownerDocument.createElement(\"tbody\")):u}var e,j,i=a[0],o=[],k;if(!c.support.checkClone&&arguments.length===3&&typeof i===\"string\"&&ua.test(i))return this.each(function(){c(this).domManip(a,b,d,true)});if(c.isFunction(i))return this.each(function(u){var z=c(this);a[0]=i.call(this,u,b?z.html():w);z.domManip(a,b,d)});if(this[0]){e=i&&i.parentNode;e=c.support.parentNode&&e&&e.nodeType===11&&e.childNodes.length===this.length?{fragment:e}:sa(a,this,o);k=e.fragment;if(j=k.childNodes.length===\n-1?(k=k.firstChild):k.firstChild){b=b&&c.nodeName(j,\"tr\");for(var n=0,r=this.length;n<r;n++)d.call(b?f(this[n],j):this[n],n>0||e.cacheable||this.length>1?k.cloneNode(true):k)}o.length&&c.each(o,Qa)}return this}});c.fragments={};c.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){c.fn[a]=function(d){var f=[];d=c(d);var e=this.length===1&&this[0].parentNode;if(e&&e.nodeType===11&&e.childNodes.length===1&&d.length===1){d[b](this[0]);\n-return this}else{e=0;for(var j=d.length;e<j;e++){var i=(e>0?this.clone(true):this).get();c.fn[b].apply(c(d[e]),i);f=f.concat(i)}return this.pushStack(f,a,d.selector)}}});c.extend({clean:function(a,b,d,f){b=b||s;if(typeof b.createElement===\"undefined\")b=b.ownerDocument||b[0]&&b[0].ownerDocument||s;for(var e=[],j=0,i;(i=a[j])!=null;j++){if(typeof i===\"number\")i+=\"\";if(i){if(typeof i===\"string\"&&!jb.test(i))i=b.createTextNode(i);else if(typeof i===\"string\"){i=i.replace(Ka,Ma);var o=(La.exec(i)||[\"\",\n-\"\"])[1].toLowerCase(),k=F[o]||F._default,n=k[0],r=b.createElement(\"div\");for(r.innerHTML=k[1]+i+k[2];n--;)r=r.lastChild;if(!c.support.tbody){n=ib.test(i);o=o===\"table\"&&!n?r.firstChild&&r.firstChild.childNodes:k[1]===\"<table>\"&&!n?r.childNodes:[];for(k=o.length-1;k>=0;--k)c.nodeName(o[k],\"tbody\")&&!o[k].childNodes.length&&o[k].parentNode.removeChild(o[k])}!c.support.leadingWhitespace&&V.test(i)&&r.insertBefore(b.createTextNode(V.exec(i)[0]),r.firstChild);i=r.childNodes}if(i.nodeType)e.push(i);else e=\n-c.merge(e,i)}}if(d)for(j=0;e[j];j++)if(f&&c.nodeName(e[j],\"script\")&&(!e[j].type||e[j].type.toLowerCase()===\"text/javascript\"))f.push(e[j].parentNode?e[j].parentNode.removeChild(e[j]):e[j]);else{e[j].nodeType===1&&e.splice.apply(e,[j+1,0].concat(c.makeArray(e[j].getElementsByTagName(\"script\"))));d.appendChild(e[j])}return e},cleanData:function(a){for(var b,d,f=c.cache,e=c.event.special,j=c.support.deleteExpando,i=0,o;(o=a[i])!=null;i++)if(d=o[c.expando]){b=f[d];if(b.events)for(var k in b.events)e[k]?\n-c.event.remove(o,k):Ca(o,k,b.handle);if(j)delete o[c.expando];else o.removeAttribute&&o.removeAttribute(c.expando);delete f[d]}}});var kb=/z-?index|font-?weight|opacity|zoom|line-?height/i,Na=/alpha\\([^)]*\\)/,Oa=/opacity=([^)]*)/,ha=/float/i,ia=/-([a-z])/ig,lb=/([A-Z])/g,mb=/^-?\\d+(?:px)?$/i,nb=/^-?\\d/,ob={position:\"absolute\",visibility:\"hidden\",display:\"block\"},pb=[\"Left\",\"Right\"],qb=[\"Top\",\"Bottom\"],rb=s.defaultView&&s.defaultView.getComputedStyle,Pa=c.support.cssFloat?\"cssFloat\":\"styleFloat\",ja=\n-function(a,b){return b.toUpperCase()};c.fn.css=function(a,b){return X(this,a,b,true,function(d,f,e){if(e===w)return c.curCSS(d,f);if(typeof e===\"number\"&&!kb.test(f))e+=\"px\";c.style(d,f,e)})};c.extend({style:function(a,b,d){if(!a||a.nodeType===3||a.nodeType===8)return w;if((b===\"width\"||b===\"height\")&&parseFloat(d)<0)d=w;var f=a.style||a,e=d!==w;if(!c.support.opacity&&b===\"opacity\"){if(e){f.zoom=1;b=parseInt(d,10)+\"\"===\"NaN\"?\"\":\"alpha(opacity=\"+d*100+\")\";a=f.filter||c.curCSS(a,\"filter\")||\"\";f.filter=\n-Na.test(a)?a.replace(Na,b):b}return f.filter&&f.filter.indexOf(\"opacity=\")>=0?parseFloat(Oa.exec(f.filter)[1])/100+\"\":\"\"}if(ha.test(b))b=Pa;b=b.replace(ia,ja);if(e)f[b]=d;return f[b]},css:function(a,b,d,f){if(b===\"width\"||b===\"height\"){var e,j=b===\"width\"?pb:qb;function i(){e=b===\"width\"?a.offsetWidth:a.offsetHeight;f!==\"border\"&&c.each(j,function(){f||(e-=parseFloat(c.curCSS(a,\"padding\"+this,true))||0);if(f===\"margin\")e+=parseFloat(c.curCSS(a,\"margin\"+this,true))||0;else e-=parseFloat(c.curCSS(a,\n-\"border\"+this+\"Width\",true))||0})}a.offsetWidth!==0?i():c.swap(a,ob,i);return Math.max(0,Math.round(e))}return c.curCSS(a,b,d)},curCSS:function(a,b,d){var f,e=a.style;if(!c.support.opacity&&b===\"opacity\"&&a.currentStyle){f=Oa.test(a.currentStyle.filter||\"\")?parseFloat(RegExp.$1)/100+\"\":\"\";return f===\"\"?\"1\":f}if(ha.test(b))b=Pa;if(!d&&e&&e[b])f=e[b];else if(rb){if(ha.test(b))b=\"float\";b=b.replace(lb,\"-$1\").toLowerCase();e=a.ownerDocument.defaultView;if(!e)return null;if(a=e.getComputedStyle(a,null))f=\n-a.getPropertyValue(b);if(b===\"opacity\"&&f===\"\")f=\"1\"}else if(a.currentStyle){d=b.replace(ia,ja);f=a.currentStyle[b]||a.currentStyle[d];if(!mb.test(f)&&nb.test(f)){b=e.left;var j=a.runtimeStyle.left;a.runtimeStyle.left=a.currentStyle.left;e.left=d===\"fontSize\"?\"1em\":f||0;f=e.pixelLeft+\"px\";e.left=b;a.runtimeStyle.left=j}}return f},swap:function(a,b,d){var f={};for(var e in b){f[e]=a.style[e];a.style[e]=b[e]}d.call(a);for(e in b)a.style[e]=f[e]}});if(c.expr&&c.expr.filters){c.expr.filters.hidden=function(a){var b=\n-a.offsetWidth,d=a.offsetHeight,f=a.nodeName.toLowerCase()===\"tr\";return b===0&&d===0&&!f?true:b>0&&d>0&&!f?false:c.curCSS(a,\"display\")===\"none\"};c.expr.filters.visible=function(a){return!c.expr.filters.hidden(a)}}var sb=J(),tb=/<script(.|\\s)*?\\/script>/gi,ub=/select|textarea/i,vb=/color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week/i,N=/=\\?(&|$)/,ka=/\\?/,wb=/(\\?|&)_=.*?(&|$)/,xb=/^(\\w+:)?\\/\\/([^\\/?#]+)/,yb=/%20/g,zb=c.fn.load;c.fn.extend({load:function(a,b,d){if(typeof a!==\n-\"string\")return zb.call(this,a);else if(!this.length)return this;var f=a.indexOf(\" \");if(f>=0){var e=a.slice(f,a.length);a=a.slice(0,f)}f=\"GET\";if(b)if(c.isFunction(b)){d=b;b=null}else if(typeof b===\"object\"){b=c.param(b,c.ajaxSettings.traditional);f=\"POST\"}var j=this;c.ajax({url:a,type:f,dataType:\"html\",data:b,complete:function(i,o){if(o===\"success\"||o===\"notmodified\")j.html(e?c(\"<div />\").append(i.responseText.replace(tb,\"\")).find(e):i.responseText);d&&j.each(d,[i.responseText,o,i])}});return this},\n-serialize:function(){return c.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?c.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ub.test(this.nodeName)||vb.test(this.type))}).map(function(a,b){a=c(this).val();return a==null?null:c.isArray(a)?c.map(a,function(d){return{name:b.name,value:d}}):{name:b.name,value:a}}).get()}});c.each(\"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split(\" \"),\n-function(a,b){c.fn[b]=function(d){return this.bind(b,d)}});c.extend({get:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b=null}return c.ajax({type:\"GET\",url:a,data:b,success:d,dataType:f})},getScript:function(a,b){return c.get(a,null,b,\"script\")},getJSON:function(a,b,d){return c.get(a,b,d,\"json\")},post:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b={}}return c.ajax({type:\"POST\",url:a,data:b,success:d,dataType:f})},ajaxSetup:function(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,\n-global:true,type:\"GET\",contentType:\"application/x-www-form-urlencoded\",processData:true,async:true,xhr:A.XMLHttpRequest&&(A.location.protocol!==\"file:\"||!A.ActiveXObject)?function(){return new A.XMLHttpRequest}:function(){try{return new A.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(a){}},accepts:{xml:\"application/xml, text/xml\",html:\"text/html\",script:\"text/javascript, application/javascript\",json:\"application/json, text/javascript\",text:\"text/plain\",_default:\"*/*\"}},lastModified:{},etag:{},ajax:function(a){function b(){e.success&&\n-e.success.call(k,o,i,x);e.global&&f(\"ajaxSuccess\",[x,e])}function d(){e.complete&&e.complete.call(k,x,i);e.global&&f(\"ajaxComplete\",[x,e]);e.global&&!--c.active&&c.event.trigger(\"ajaxStop\")}function f(q,p){(e.context?c(e.context):c.event).trigger(q,p)}var e=c.extend(true,{},c.ajaxSettings,a),j,i,o,k=a&&a.context||e,n=e.type.toUpperCase();if(e.data&&e.processData&&typeof e.data!==\"string\")e.data=c.param(e.data,e.traditional);if(e.dataType===\"jsonp\"){if(n===\"GET\")N.test(e.url)||(e.url+=(ka.test(e.url)?\n-\"&\":\"?\")+(e.jsonp||\"callback\")+\"=?\");else if(!e.data||!N.test(e.data))e.data=(e.data?e.data+\"&\":\"\")+(e.jsonp||\"callback\")+\"=?\";e.dataType=\"json\"}if(e.dataType===\"json\"&&(e.data&&N.test(e.data)||N.test(e.url))){j=e.jsonpCallback||\"jsonp\"+sb++;if(e.data)e.data=(e.data+\"\").replace(N,\"=\"+j+\"$1\");e.url=e.url.replace(N,\"=\"+j+\"$1\");e.dataType=\"script\";A[j]=A[j]||function(q){o=q;b();d();A[j]=w;try{delete A[j]}catch(p){}z&&z.removeChild(C)}}if(e.dataType===\"script\"&&e.cache===null)e.cache=false;if(e.cache===\n-false&&n===\"GET\"){var r=J(),u=e.url.replace(wb,\"$1_=\"+r+\"$2\");e.url=u+(u===e.url?(ka.test(e.url)?\"&\":\"?\")+\"_=\"+r:\"\")}if(e.data&&n===\"GET\")e.url+=(ka.test(e.url)?\"&\":\"?\")+e.data;e.global&&!c.active++&&c.event.trigger(\"ajaxStart\");r=(r=xb.exec(e.url))&&(r[1]&&r[1]!==location.protocol||r[2]!==location.host);if(e.dataType===\"script\"&&n===\"GET\"&&r){var z=s.getElementsByTagName(\"head\")[0]||s.documentElement,C=s.createElement(\"script\");C.src=e.url;if(e.scriptCharset)C.charset=e.scriptCharset;if(!j){var B=\n-false;C.onload=C.onreadystatechange=function(){if(!B&&(!this.readyState||this.readyState===\"loaded\"||this.readyState===\"complete\")){B=true;b();d();C.onload=C.onreadystatechange=null;z&&C.parentNode&&z.removeChild(C)}}}z.insertBefore(C,z.firstChild);return w}var E=false,x=e.xhr();if(x){e.username?x.open(n,e.url,e.async,e.username,e.password):x.open(n,e.url,e.async);try{if(e.data||a&&a.contentType)x.setRequestHeader(\"Content-Type\",e.contentType);if(e.ifModified){c.lastModified[e.url]&&x.setRequestHeader(\"If-Modified-Since\",\n-c.lastModified[e.url]);c.etag[e.url]&&x.setRequestHeader(\"If-None-Match\",c.etag[e.url])}r||x.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");x.setRequestHeader(\"Accept\",e.dataType&&e.accepts[e.dataType]?e.accepts[e.dataType]+\", */*\":e.accepts._default)}catch(ga){}if(e.beforeSend&&e.beforeSend.call(k,x,e)===false){e.global&&!--c.active&&c.event.trigger(\"ajaxStop\");x.abort();return false}e.global&&f(\"ajaxSend\",[x,e]);var g=x.onreadystatechange=function(q){if(!x||x.readyState===0||q===\"abort\"){E||\n-d();E=true;if(x)x.onreadystatechange=c.noop}else if(!E&&x&&(x.readyState===4||q===\"timeout\")){E=true;x.onreadystatechange=c.noop;i=q===\"timeout\"?\"timeout\":!c.httpSuccess(x)?\"error\":e.ifModified&&c.httpNotModified(x,e.url)?\"notmodified\":\"success\";var p;if(i===\"success\")try{o=c.httpData(x,e.dataType,e)}catch(v){i=\"parsererror\";p=v}if(i===\"success\"||i===\"notmodified\")j||b();else c.handleError(e,x,i,p);d();q===\"timeout\"&&x.abort();if(e.async)x=null}};try{var h=x.abort;x.abort=function(){x&&h.call(x);\n-g(\"abort\")}}catch(l){}e.async&&e.timeout>0&&setTimeout(function(){x&&!E&&g(\"timeout\")},e.timeout);try{x.send(n===\"POST\"||n===\"PUT\"||n===\"DELETE\"?e.data:null)}catch(m){c.handleError(e,x,null,m);d()}e.async||g();return x}},handleError:function(a,b,d,f){if(a.error)a.error.call(a.context||a,b,d,f);if(a.global)(a.context?c(a.context):c.event).trigger(\"ajaxError\",[b,a,f])},active:0,httpSuccess:function(a){try{return!a.status&&location.protocol===\"file:\"||a.status>=200&&a.status<300||a.status===304||a.status===\n-1223||a.status===0}catch(b){}return false},httpNotModified:function(a,b){var d=a.getResponseHeader(\"Last-Modified\"),f=a.getResponseHeader(\"Etag\");if(d)c.lastModified[b]=d;if(f)c.etag[b]=f;return a.status===304||a.status===0},httpData:function(a,b,d){var f=a.getResponseHeader(\"content-type\")||\"\",e=b===\"xml\"||!b&&f.indexOf(\"xml\")>=0;a=e?a.responseXML:a.responseText;e&&a.documentElement.nodeName===\"parsererror\"&&c.error(\"parsererror\");if(d&&d.dataFilter)a=d.dataFilter(a,b);if(typeof a===\"string\")if(b===\n-\"json\"||!b&&f.indexOf(\"json\")>=0)a=c.parseJSON(a);else if(b===\"script\"||!b&&f.indexOf(\"javascript\")>=0)c.globalEval(a);return a},param:function(a,b){function d(i,o){if(c.isArray(o))c.each(o,function(k,n){b||/\\[\\]$/.test(i)?f(i,n):d(i+\"[\"+(typeof n===\"object\"||c.isArray(n)?k:\"\")+\"]\",n)});else!b&&o!=null&&typeof o===\"object\"?c.each(o,function(k,n){d(i+\"[\"+k+\"]\",n)}):f(i,o)}function f(i,o){o=c.isFunction(o)?o():o;e[e.length]=encodeURIComponent(i)+\"=\"+encodeURIComponent(o)}var e=[];if(b===w)b=c.ajaxSettings.traditional;\n-if(c.isArray(a)||a.jquery)c.each(a,function(){f(this.name,this.value)});else for(var j in a)d(j,a[j]);return e.join(\"&\").replace(yb,\"+\")}});var la={},Ab=/toggle|show|hide/,Bb=/^([+-]=)?([\\d+-.]+)(.*)$/,W,va=[[\"height\",\"marginTop\",\"marginBottom\",\"paddingTop\",\"paddingBottom\"],[\"width\",\"marginLeft\",\"marginRight\",\"paddingLeft\",\"paddingRight\"],[\"opacity\"]];c.fn.extend({show:function(a,b){if(a||a===0)return this.animate(K(\"show\",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],\"olddisplay\");\n-this[a].style.display=d||\"\";if(c.css(this[a],\"display\")===\"none\"){d=this[a].nodeName;var f;if(la[d])f=la[d];else{var e=c(\"<\"+d+\" />\").appendTo(\"body\");f=e.css(\"display\");if(f===\"none\")f=\"block\";e.remove();la[d]=f}c.data(this[a],\"olddisplay\",f)}}a=0;for(b=this.length;a<b;a++)this[a].style.display=c.data(this[a],\"olddisplay\")||\"\";return this}},hide:function(a,b){if(a||a===0)return this.animate(K(\"hide\",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],\"olddisplay\");!d&&d!==\"none\"&&c.data(this[a],\n-\"olddisplay\",c.css(this[a],\"display\"))}a=0;for(b=this.length;a<b;a++)this[a].style.display=\"none\";return this}},_toggle:c.fn.toggle,toggle:function(a,b){var d=typeof a===\"boolean\";if(c.isFunction(a)&&c.isFunction(b))this._toggle.apply(this,arguments);else a==null||d?this.each(function(){var f=d?a:c(this).is(\":hidden\");c(this)[f?\"show\":\"hide\"]()}):this.animate(K(\"toggle\",3),a,b);return this},fadeTo:function(a,b,d){return this.filter(\":hidden\").css(\"opacity\",0).show().end().animate({opacity:b},a,d)},\n-animate:function(a,b,d,f){var e=c.speed(b,d,f);if(c.isEmptyObject(a))return this.each(e.complete);return this[e.queue===false?\"each\":\"queue\"](function(){var j=c.extend({},e),i,o=this.nodeType===1&&c(this).is(\":hidden\"),k=this;for(i in a){var n=i.replace(ia,ja);if(i!==n){a[n]=a[i];delete a[i];i=n}if(a[i]===\"hide\"&&o||a[i]===\"show\"&&!o)return j.complete.call(this);if((i===\"height\"||i===\"width\")&&this.style){j.display=c.css(this,\"display\");j.overflow=this.style.overflow}if(c.isArray(a[i])){(j.specialEasing=\n-j.specialEasing||{})[i]=a[i][1];a[i]=a[i][0]}}if(j.overflow!=null)this.style.overflow=\"hidden\";j.curAnim=c.extend({},a);c.each(a,function(r,u){var z=new c.fx(k,j,r);if(Ab.test(u))z[u===\"toggle\"?o?\"show\":\"hide\":u](a);else{var C=Bb.exec(u),B=z.cur(true)||0;if(C){u=parseFloat(C[2]);var E=C[3]||\"px\";if(E!==\"px\"){k.style[r]=(u||1)+E;B=(u||1)/z.cur(true)*B;k.style[r]=B+E}if(C[1])u=(C[1]===\"-=\"?-1:1)*u+B;z.custom(B,u,E)}else z.custom(B,u,\"\")}});return true})},stop:function(a,b){var d=c.timers;a&&this.queue([]);\n-this.each(function(){for(var f=d.length-1;f>=0;f--)if(d[f].elem===this){b&&d[f](true);d.splice(f,1)}});b||this.dequeue();return this}});c.each({slideDown:K(\"show\",1),slideUp:K(\"hide\",1),slideToggle:K(\"toggle\",1),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"}},function(a,b){c.fn[a]=function(d,f){return this.animate(b,d,f)}});c.extend({speed:function(a,b,d){var f=a&&typeof a===\"object\"?a:{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,easing:d&&b||b&&!c.isFunction(b)&&b};f.duration=c.fx.off?0:typeof f.duration===\n-\"number\"?f.duration:c.fx.speeds[f.duration]||c.fx.speeds._default;f.old=f.complete;f.complete=function(){f.queue!==false&&c(this).dequeue();c.isFunction(f.old)&&f.old.call(this)};return f},easing:{linear:function(a,b,d,f){return d+f*a},swing:function(a,b,d,f){return(-Math.cos(a*Math.PI)/2+0.5)*f+d}},timers:[],fx:function(a,b,d){this.options=b;this.elem=a;this.prop=d;if(!b.orig)b.orig={}}});c.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this);(c.fx.step[this.prop]||\n-c.fx.step._default)(this);if((this.prop===\"height\"||this.prop===\"width\")&&this.elem.style)this.elem.style.display=\"block\"},cur:function(a){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];return(a=parseFloat(c.css(this.elem,this.prop,a)))&&a>-10000?a:parseFloat(c.curCSS(this.elem,this.prop))||0},custom:function(a,b,d){function f(j){return e.step(j)}this.startTime=J();this.start=a;this.end=b;this.unit=d||this.unit||\"px\";this.now=this.start;\n-this.pos=this.state=0;var e=this;f.elem=this.elem;if(f()&&c.timers.push(f)&&!W)W=setInterval(c.fx.tick,13)},show:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.show=true;this.custom(this.prop===\"width\"||this.prop===\"height\"?1:0,this.cur());c(this.elem).show()},hide:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.hide=true;this.custom(this.cur(),0)},step:function(a){var b=J(),d=true;if(a||b>=this.options.duration+this.startTime){this.now=\n-this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;for(var f in this.options.curAnim)if(this.options.curAnim[f]!==true)d=false;if(d){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;a=c.data(this.elem,\"olddisplay\");this.elem.style.display=a?a:this.options.display;if(c.css(this.elem,\"display\")===\"none\")this.elem.style.display=\"block\"}this.options.hide&&c(this.elem).hide();if(this.options.hide||this.options.show)for(var e in this.options.curAnim)c.style(this.elem,\n-e,this.options.orig[e]);this.options.complete.call(this.elem)}return false}else{e=b-this.startTime;this.state=e/this.options.duration;a=this.options.easing||(c.easing.swing?\"swing\":\"linear\");this.pos=c.easing[this.options.specialEasing&&this.options.specialEasing[this.prop]||a](this.state,e,0,1,this.options.duration);this.now=this.start+(this.end-this.start)*this.pos;this.update()}return true}};c.extend(c.fx,{tick:function(){for(var a=c.timers,b=0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||\n-c.fx.stop()},stop:function(){clearInterval(W);W=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,\"opacity\",a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=null)a.elem.style[a.prop]=(a.prop===\"width\"||a.prop===\"height\"?Math.max(0,a.now):a.now)+a.unit;else a.elem[a.prop]=a.now}}});if(c.expr&&c.expr.filters)c.expr.filters.animated=function(a){return c.grep(c.timers,function(b){return a===b.elem}).length};c.fn.offset=\"getBoundingClientRect\"in s.documentElement?\n-function(a){var b=this[0];if(a)return this.each(function(e){c.offset.setOffset(this,a,e)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);var d=b.getBoundingClientRect(),f=b.ownerDocument;b=f.body;f=f.documentElement;return{top:d.top+(self.pageYOffset||c.support.boxModel&&f.scrollTop||b.scrollTop)-(f.clientTop||b.clientTop||0),left:d.left+(self.pageXOffset||c.support.boxModel&&f.scrollLeft||b.scrollLeft)-(f.clientLeft||b.clientLeft||0)}}:function(a){var b=\n-this[0];if(a)return this.each(function(r){c.offset.setOffset(this,a,r)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);c.offset.initialize();var d=b.offsetParent,f=b,e=b.ownerDocument,j,i=e.documentElement,o=e.body;f=(e=e.defaultView)?e.getComputedStyle(b,null):b.currentStyle;for(var k=b.offsetTop,n=b.offsetLeft;(b=b.parentNode)&&b!==o&&b!==i;){if(c.offset.supportsFixedPosition&&f.position===\"fixed\")break;j=e?e.getComputedStyle(b,null):b.currentStyle;\n-k-=b.scrollTop;n-=b.scrollLeft;if(b===d){k+=b.offsetTop;n+=b.offsetLeft;if(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(b.nodeName))){k+=parseFloat(j.borderTopWidth)||0;n+=parseFloat(j.borderLeftWidth)||0}f=d;d=b.offsetParent}if(c.offset.subtractsBorderForOverflowNotVisible&&j.overflow!==\"visible\"){k+=parseFloat(j.borderTopWidth)||0;n+=parseFloat(j.borderLeftWidth)||0}f=j}if(f.position===\"relative\"||f.position===\"static\"){k+=o.offsetTop;n+=o.offsetLeft}if(c.offset.supportsFixedPosition&&\n-f.position===\"fixed\"){k+=Math.max(i.scrollTop,o.scrollTop);n+=Math.max(i.scrollLeft,o.scrollLeft)}return{top:k,left:n}};c.offset={initialize:function(){var a=s.body,b=s.createElement(\"div\"),d,f,e,j=parseFloat(c.curCSS(a,\"marginTop\",true))||0;c.extend(b.style,{position:\"absolute\",top:0,left:0,margin:0,border:0,width:\"1px\",height:\"1px\",visibility:\"hidden\"});b.innerHTML=\"<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>\";\n-a.insertBefore(b,a.firstChild);d=b.firstChild;f=d.firstChild;e=d.nextSibling.firstChild.firstChild;this.doesNotAddBorder=f.offsetTop!==5;this.doesAddBorderForTableAndCells=e.offsetTop===5;f.style.position=\"fixed\";f.style.top=\"20px\";this.supportsFixedPosition=f.offsetTop===20||f.offsetTop===15;f.style.position=f.style.top=\"\";d.style.overflow=\"hidden\";d.style.position=\"relative\";this.subtractsBorderForOverflowNotVisible=f.offsetTop===-5;this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==j;a.removeChild(b);\n-c.offset.initialize=c.noop},bodyOffset:function(a){var b=a.offsetTop,d=a.offsetLeft;c.offset.initialize();if(c.offset.doesNotIncludeMarginInBodyOffset){b+=parseFloat(c.curCSS(a,\"marginTop\",true))||0;d+=parseFloat(c.curCSS(a,\"marginLeft\",true))||0}return{top:b,left:d}},setOffset:function(a,b,d){if(/static/.test(c.curCSS(a,\"position\")))a.style.position=\"relative\";var f=c(a),e=f.offset(),j=parseInt(c.curCSS(a,\"top\",true),10)||0,i=parseInt(c.curCSS(a,\"left\",true),10)||0;if(c.isFunction(b))b=b.call(a,\n-d,e);d={top:b.top-e.top+j,left:b.left-e.left+i};\"using\"in b?b.using.call(a,d):f.css(d)}};c.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),d=this.offset(),f=/^body|html$/i.test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=parseFloat(c.curCSS(a,\"marginTop\",true))||0;d.left-=parseFloat(c.curCSS(a,\"marginLeft\",true))||0;f.top+=parseFloat(c.curCSS(b[0],\"borderTopWidth\",true))||0;f.left+=parseFloat(c.curCSS(b[0],\"borderLeftWidth\",true))||0;return{top:d.top-\n-f.top,left:d.left-f.left}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||s.body;a&&!/^body|html$/i.test(a.nodeName)&&c.css(a,\"position\")===\"static\";)a=a.offsetParent;return a})}});c.each([\"Left\",\"Top\"],function(a,b){var d=\"scroll\"+b;c.fn[d]=function(f){var e=this[0],j;if(!e)return null;if(f!==w)return this.each(function(){if(j=wa(this))j.scrollTo(!a?f:c(j).scrollLeft(),a?f:c(j).scrollTop());else this[d]=f});else return(j=wa(e))?\"pageXOffset\"in j?j[a?\"pageYOffset\":\n-\"pageXOffset\"]:c.support.boxModel&&j.document.documentElement[d]||j.document.body[d]:e[d]}});c.each([\"Height\",\"Width\"],function(a,b){var d=b.toLowerCase();c.fn[\"inner\"+b]=function(){return this[0]?c.css(this[0],d,false,\"padding\"):null};c.fn[\"outer\"+b]=function(f){return this[0]?c.css(this[0],d,false,f?\"margin\":\"border\"):null};c.fn[d]=function(f){var e=this[0];if(!e)return f==null?null:this;if(c.isFunction(f))return this.each(function(j){var i=c(this);i[d](f.call(this,j,i[d]()))});return\"scrollTo\"in\n-e&&e.document?e.document.compatMode===\"CSS1Compat\"&&e.document.documentElement[\"client\"+b]||e.document.body[\"client\"+b]:e.nodeType===9?Math.max(e.documentElement[\"client\"+b],e.body[\"scroll\"+b],e.documentElement[\"scroll\"+b],e.body[\"offset\"+b],e.documentElement[\"offset\"+b]):f===w?c.css(e,d):this.css(d,typeof f===\"string\"?f:f+\"px\")}});A.jQuery=A.$=c})(window);"},{"sha":"63174a0d6dee029d8355a45f26ba4fd188e35e7d","filename":"console/src/main/webapp/scripts/jquery-1.8.2.min.js","status":"added","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fjquery-1.8.2.min.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fjquery-1.8.2.min.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fjquery-1.8.2.min.js?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -0,0 +1,2 @@\n+/*! jQuery v1.8.2 jquery.com | jquery.org/license */\n+(function(a,b){function G(a){var b=F[a]={};return p.each(a.split(s),function(a,c){b[c]=!0}),b}function J(a,c,d){if(d===b&&a.nodeType===1){var e=\"data-\"+c.replace(I,\"-$1\").toLowerCase();d=a.getAttribute(e);if(typeof d==\"string\"){try{d=d===\"true\"?!0:d===\"false\"?!1:d===\"null\"?null:+d+\"\"===d?+d:H.test(d)?p.parseJSON(d):d}catch(f){}p.data(a,c,d)}else d=b}return d}function K(a){var b;for(b in a){if(b===\"data\"&&p.isEmptyObject(a[b]))continue;if(b!==\"toJSON\")return!1}return!0}function ba(){return!1}function bb(){return!0}function bh(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function bi(a,b){do a=a[b];while(a&&a.nodeType!==1);return a}function bj(a,b,c){b=b||0;if(p.isFunction(b))return p.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return p.grep(a,function(a,d){return a===b===c});if(typeof b==\"string\"){var d=p.grep(a,function(a){return a.nodeType===1});if(be.test(b))return p.filter(b,d,!c);b=p.filter(b,d)}return p.grep(a,function(a,d){return p.inArray(a,b)>=0===c})}function bk(a){var b=bl.split(\"|\"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function bC(a,b){return a.getElementsByTagName(b)[0]||a.appendChild(a.ownerDocument.createElement(b))}function bD(a,b){if(b.nodeType!==1||!p.hasData(a))return;var c,d,e,f=p._data(a),g=p._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;d<e;d++)p.event.add(b,c,h[c][d])}g.data&&(g.data=p.extend({},g.data))}function bE(a,b){var c;if(b.nodeType!==1)return;b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c===\"object\"?(b.parentNode&&(b.outerHTML=a.outerHTML),p.support.html5Clone&&a.innerHTML&&!p.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):c===\"input\"&&bv.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):c===\"option\"?b.selected=a.defaultSelected:c===\"input\"||c===\"textarea\"?b.defaultValue=a.defaultValue:c===\"script\"&&b.text!==a.text&&(b.text=a.text),b.removeAttribute(p.expando)}function bF(a){return typeof a.getElementsByTagName!=\"undefined\"?a.getElementsByTagName(\"*\"):typeof a.querySelectorAll!=\"undefined\"?a.querySelectorAll(\"*\"):[]}function bG(a){bv.test(a.type)&&(a.defaultChecked=a.checked)}function bY(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=bW.length;while(e--){b=bW[e]+c;if(b in a)return b}return d}function bZ(a,b){return a=b||a,p.css(a,\"display\")===\"none\"||!p.contains(a.ownerDocument,a)}function b$(a,b){var c,d,e=[],f=0,g=a.length;for(;f<g;f++){c=a[f];if(!c.style)continue;e[f]=p._data(c,\"olddisplay\"),b?(!e[f]&&c.style.display===\"none\"&&(c.style.display=\"\"),c.style.display===\"\"&&bZ(c)&&(e[f]=p._data(c,\"olddisplay\",cc(c.nodeName)))):(d=bH(c,\"display\"),!e[f]&&d!==\"none\"&&p._data(c,\"olddisplay\",d))}for(f=0;f<g;f++){c=a[f];if(!c.style)continue;if(!b||c.style.display===\"none\"||c.style.display===\"\")c.style.display=b?e[f]||\"\":\"none\"}return a}function b_(a,b,c){var d=bP.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function ca(a,b,c,d){var e=c===(d?\"border\":\"content\")?4:b===\"width\"?1:0,f=0;for(;e<4;e+=2)c===\"margin\"&&(f+=p.css(a,c+bV[e],!0)),d?(c===\"content\"&&(f-=parseFloat(bH(a,\"padding\"+bV[e]))||0),c!==\"margin\"&&(f-=parseFloat(bH(a,\"border\"+bV[e]+\"Width\"))||0)):(f+=parseFloat(bH(a,\"padding\"+bV[e]))||0,c!==\"padding\"&&(f+=parseFloat(bH(a,\"border\"+bV[e]+\"Width\"))||0));return f}function cb(a,b,c){var d=b===\"width\"?a.offsetWidth:a.offsetHeight,e=!0,f=p.support.boxSizing&&p.css(a,\"boxSizing\")===\"border-box\";if(d<=0||d==null){d=bH(a,b);if(d<0||d==null)d=a.style[b];if(bQ.test(d))return d;e=f&&(p.support.boxSizingReliable||d===a.style[b]),d=parseFloat(d)||0}return d+ca(a,b,c||(f?\"border\":\"content\"),e)+\"px\"}function cc(a){if(bS[a])return bS[a];var b=p(\"<\"+a+\">\").appendTo(e.body),c=b.css(\"display\");b.remove();if(c===\"none\"||c===\"\"){bI=e.body.appendChild(bI||p.extend(e.createElement(\"iframe\"),{frameBorder:0,width:0,height:0}));if(!bJ||!bI.createElement)bJ=(bI.contentWindow||bI.contentDocument).document,bJ.write(\"<!doctype html><html><body>\"),bJ.close();b=bJ.body.appendChild(bJ.createElement(a)),c=bH(b,\"display\"),e.body.removeChild(bI)}return bS[a]=c,c}function ci(a,b,c,d){var e;if(p.isArray(b))p.each(b,function(b,e){c||ce.test(a)?d(a,e):ci(a+\"[\"+(typeof e==\"object\"?b:\"\")+\"]\",e,c,d)});else if(!c&&p.type(b)===\"object\")for(e in b)ci(a+\"[\"+e+\"]\",b[e],c,d);else d(a,b)}function cz(a){return function(b,c){typeof b!=\"string\"&&(c=b,b=\"*\");var d,e,f,g=b.toLowerCase().split(s),h=0,i=g.length;if(p.isFunction(c))for(;h<i;h++)d=g[h],f=/^\\+/.test(d),f&&(d=d.substr(1)||\"*\"),e=a[d]=a[d]||[],e[f?\"unshift\":\"push\"](c)}}function cA(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h,i=a[f],j=0,k=i?i.length:0,l=a===cv;for(;j<k&&(l||!h);j++)h=i[j](c,d,e),typeof h==\"string\"&&(!l||g[h]?h=b:(c.dataTypes.unshift(h),h=cA(a,c,d,e,h,g)));return(l||!h)&&!g[\"*\"]&&(h=cA(a,c,d,e,\"*\",g)),h}function cB(a,c){var d,e,f=p.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((f[d]?a:e||(e={}))[d]=c[d]);e&&p.extend(!0,a,e)}function cC(a,c,d){var e,f,g,h,i=a.contents,j=a.dataTypes,k=a.responseFields;for(f in k)f in d&&(c[k[f]]=d[f]);while(j[0]===\"*\")j.shift(),e===b&&(e=a.mimeType||c.getResponseHeader(\"content-type\"));if(e)for(f in i)if(i[f]&&i[f].test(e)){j.unshift(f);break}if(j[0]in d)g=j[0];else{for(f in d){if(!j[0]||a.converters[f+\" \"+j[0]]){g=f;break}h||(h=f)}g=g||h}if(g)return g!==j[0]&&j.unshift(g),d[g]}function cD(a,b){var c,d,e,f,g=a.dataTypes.slice(),h=g[0],i={},j=0;a.dataFilter&&(b=a.dataFilter(b,a.dataType));if(g[1])for(c in a.converters)i[c.toLowerCase()]=a.converters[c];for(;e=g[++j];)if(e!==\"*\"){if(h!==\"*\"&&h!==e){c=i[h+\" \"+e]||i[\"* \"+e];if(!c)for(d in i){f=d.split(\" \");if(f[1]===e){c=i[h+\" \"+f[0]]||i[\"* \"+f[0]];if(c){c===!0?c=i[d]:i[d]!==!0&&(e=f[0],g.splice(j--,0,e));break}}}if(c!==!0)if(c&&a[\"throws\"])b=c(b);else try{b=c(b)}catch(k){return{state:\"parsererror\",error:c?k:\"No conversion from \"+h+\" to \"+e}}}h=e}return{state:\"success\",data:b}}function cL(){try{return new a.XMLHttpRequest}catch(b){}}function cM(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}function cU(){return setTimeout(function(){cN=b},0),cN=p.now()}function cV(a,b){p.each(b,function(b,c){var d=(cT[b]||[]).concat(cT[\"*\"]),e=0,f=d.length;for(;e<f;e++)if(d[e].call(a,b,c))return})}function cW(a,b,c){var d,e=0,f=0,g=cS.length,h=p.Deferred().always(function(){delete i.elem}),i=function(){var b=cN||cU(),c=Math.max(0,j.startTime+j.duration-b),d=1-(c/j.duration||0),e=0,f=j.tweens.length;for(;e<f;e++)j.tweens[e].run(d);return h.notifyWith(a,[j,d,c]),d<1&&f?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:p.extend({},b),opts:p.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:cN||cU(),duration:c.duration,tweens:[],createTween:function(b,c,d){var e=p.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(e),e},stop:function(b){var c=0,d=b?j.tweens.length:0;for(;c<d;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;cX(k,j.opts.specialEasing);for(;e<g;e++){d=cS[e].call(j,a,k,j.opts);if(d)return d}return cV(j,k),p.isFunction(j.opts.start)&&j.opts.start.call(a,j),p.fx.timer(p.extend(i,{anim:j,queue:j.opts.queue,elem:a})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}function cX(a,b){var c,d,e,f,g;for(c in a){d=p.camelCase(c),e=b[d],f=a[c],p.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=p.cssHooks[d];if(g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}}function cY(a,b,c){var d,e,f,g,h,i,j,k,l=this,m=a.style,n={},o=[],q=a.nodeType&&bZ(a);c.queue||(j=p._queueHooks(a,\"fx\"),j.unqueued==null&&(j.unqueued=0,k=j.empty.fire,j.empty.fire=function(){j.unqueued||k()}),j.unqueued++,l.always(function(){l.always(function(){j.unqueued--,p.queue(a,\"fx\").length||j.empty.fire()})})),a.nodeType===1&&(\"height\"in b||\"width\"in b)&&(c.overflow=[m.overflow,m.overflowX,m.overflowY],p.css(a,\"display\")===\"inline\"&&p.css(a,\"float\")===\"none\"&&(!p.support.inlineBlockNeedsLayout||cc(a.nodeName)===\"inline\"?m.display=\"inline-block\":m.zoom=1)),c.overflow&&(m.overflow=\"hidden\",p.support.shrinkWrapBlocks||l.done(function(){m.overflow=c.overflow[0],m.overflowX=c.overflow[1],m.overflowY=c.overflow[2]}));for(d in b){f=b[d];if(cP.exec(f)){delete b[d];if(f===(q?\"hide\":\"show\"))continue;o.push(d)}}g=o.length;if(g){h=p._data(a,\"fxshow\")||p._data(a,\"fxshow\",{}),q?p(a).show():l.done(function(){p(a).hide()}),l.done(function(){var b;p.removeData(a,\"fxshow\",!0);for(b in n)p.style(a,b,n[b])});for(d=0;d<g;d++)e=o[d],i=l.createTween(e,q?h[e]:0),n[e]=h[e]||p.style(a,e),e in h||(h[e]=i.start,q&&(i.end=i.start,i.start=e===\"width\"||e===\"height\"?1:0))}}function cZ(a,b,c,d,e){return new cZ.prototype.init(a,b,c,d,e)}function c$(a,b){var c,d={height:a},e=0;b=b?1:0;for(;e<4;e+=2-b)c=bV[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}function da(a){return p.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}var c,d,e=a.document,f=a.location,g=a.navigator,h=a.jQuery,i=a.$,j=Array.prototype.push,k=Array.prototype.slice,l=Array.prototype.indexOf,m=Object.prototype.toString,n=Object.prototype.hasOwnProperty,o=String.prototype.trim,p=function(a,b){return new p.fn.init(a,b,c)},q=/[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source,r=/\\S/,s=/\\s+/,t=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,u=/^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^[\\],:{}\\s]*$/,x=/(?:^|:|,)(?:\\s*\\[)+/g,y=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,z=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/g,A=/^-ms-/,B=/-([\\da-z])/gi,C=function(a,b){return(b+\"\").toUpperCase()},D=function(){e.addEventListener?(e.removeEventListener(\"DOMContentLoaded\",D,!1),p.ready()):e.readyState===\"complete\"&&(e.detachEvent(\"onreadystatechange\",D),p.ready())},E={};p.fn=p.prototype={constructor:p,init:function(a,c,d){var f,g,h,i;if(!a)return this;if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if(typeof a==\"string\"){a.charAt(0)===\"<\"&&a.charAt(a.length-1)===\">\"&&a.length>=3?f=[null,a,null]:f=u.exec(a);if(f&&(f[1]||!c)){if(f[1])return c=c instanceof p?c[0]:c,i=c&&c.nodeType?c.ownerDocument||c:e,a=p.parseHTML(f[1],i,!0),v.test(f[1])&&p.isPlainObject(c)&&this.attr.call(a,c,!0),p.merge(this,a);g=e.getElementById(f[2]);if(g&&g.parentNode){if(g.id!==f[2])return d.find(a);this.length=1,this[0]=g}return this.context=e,this.selector=a,this}return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)}return p.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),p.makeArray(a,this))},selector:\"\",jquery:\"1.8.2\",length:0,size:function(){return this.length},toArray:function(){return k.call(this)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=p.merge(this.constructor(),a);return d.prevObject=this,d.context=this.context,b===\"find\"?d.selector=this.selector+(this.selector?\" \":\"\")+c:b&&(d.selector=this.selector+\".\"+b+\"(\"+c+\")\"),d},each:function(a,b){return p.each(this,a,b)},ready:function(a){return p.ready.promise().done(a),this},eq:function(a){return a=+a,a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(k.apply(this,arguments),\"slice\",k.call(arguments).join(\",\"))},map:function(a){return this.pushStack(p.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:j,sort:[].sort,splice:[].splice},p.fn.init.prototype=p.fn,p.extend=p.fn.extend=function(){var a,c,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;typeof h==\"boolean\"&&(k=h,h=arguments[1]||{},i=2),typeof h!=\"object\"&&!p.isFunction(h)&&(h={}),j===i&&(h=this,--i);for(;i<j;i++)if((a=arguments[i])!=null)for(c in a){d=h[c],e=a[c];if(h===e)continue;k&&e&&(p.isPlainObject(e)||(f=p.isArray(e)))?(f?(f=!1,g=d&&p.isArray(d)?d:[]):g=d&&p.isPlainObject(d)?d:{},h[c]=p.extend(k,g,e)):e!==b&&(h[c]=e)}return h},p.extend({noConflict:function(b){return a.$===p&&(a.$=i),b&&a.jQuery===p&&(a.jQuery=h),p},isReady:!1,readyWait:1,holdReady:function(a){a?p.readyWait++:p.ready(!0)},ready:function(a){if(a===!0?--p.readyWait:p.isReady)return;if(!e.body)return setTimeout(p.ready,1);p.isReady=!0;if(a!==!0&&--p.readyWait>0)return;d.resolveWith(e,[p]),p.fn.trigger&&p(e).trigger(\"ready\").off(\"ready\")},isFunction:function(a){return p.type(a)===\"function\"},isArray:Array.isArray||function(a){return p.type(a)===\"array\"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):E[m.call(a)]||\"object\"},isPlainObject:function(a){if(!a||p.type(a)!==\"object\"||a.nodeType||p.isWindow(a))return!1;try{if(a.constructor&&!n.call(a,\"constructor\")&&!n.call(a.constructor.prototype,\"isPrototypeOf\"))return!1}catch(c){return!1}var d;for(d in a);return d===b||n.call(a,d)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},error:function(a){throw new Error(a)},parseHTML:function(a,b,c){var d;return!a||typeof a!=\"string\"?null:(typeof b==\"boolean\"&&(c=b,b=0),b=b||e,(d=v.exec(a))?[b.createElement(d[1])]:(d=p.buildFragment([a],b,c?null:[]),p.merge([],(d.cacheable?p.clone(d.fragment):d.fragment).childNodes)))},parseJSON:function(b){if(!b||typeof b!=\"string\")return null;b=p.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(w.test(b.replace(y,\"@\").replace(z,\"]\").replace(x,\"\")))return(new Function(\"return \"+b))();p.error(\"Invalid JSON: \"+b)},parseXML:function(c){var d,e;if(!c||typeof c!=\"string\")return null;try{a.DOMParser?(e=new DOMParser,d=e.parseFromString(c,\"text/xml\")):(d=new ActiveXObject(\"Microsoft.XMLDOM\"),d.async=\"false\",d.loadXML(c))}catch(f){d=b}return(!d||!d.documentElement||d.getElementsByTagName(\"parsererror\").length)&&p.error(\"Invalid XML: \"+c),d},noop:function(){},globalEval:function(b){b&&r.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(A,\"ms-\").replace(B,C)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,c,d){var e,f=0,g=a.length,h=g===b||p.isFunction(a);if(d){if(h){for(e in a)if(c.apply(a[e],d)===!1)break}else for(;f<g;)if(c.apply(a[f++],d)===!1)break}else if(h){for(e in a)if(c.call(a[e],e,a[e])===!1)break}else for(;f<g;)if(c.call(a[f],f,a[f++])===!1)break;return a},trim:o&&!o.call(\"﻿ \")?function(a){return a==null?\"\":o.call(a)}:function(a){return a==null?\"\":(a+\"\").replace(t,\"\")},makeArray:function(a,b){var c,d=b||[];return a!=null&&(c=p.type(a),a.length==null||c===\"string\"||c===\"function\"||c===\"regexp\"||p.isWindow(a)?j.call(d,a):p.merge(d,a)),d},inArray:function(a,b,c){var d;if(b){if(l)return l.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=c.length,e=a.length,f=0;if(typeof d==\"number\")for(;f<d;f++)a[e++]=c[f];else while(c[f]!==b)a[e++]=c[f++];return a.length=e,a},grep:function(a,b,c){var d,e=[],f=0,g=a.length;c=!!c;for(;f<g;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);return e},map:function(a,c,d){var e,f,g=[],h=0,i=a.length,j=a instanceof p||i!==b&&typeof i==\"number\"&&(i>0&&a[0]&&a[i-1]||i===0||p.isArray(a));if(j)for(;h<i;h++)e=c(a[h],h,d),e!=null&&(g[g.length]=e);else for(f in a)e=c(a[f],f,d),e!=null&&(g[g.length]=e);return g.concat.apply([],g)},guid:1,proxy:function(a,c){var d,e,f;return typeof c==\"string\"&&(d=a[c],c=a,a=d),p.isFunction(a)?(e=k.call(arguments,2),f=function(){return a.apply(c,e.concat(k.call(arguments)))},f.guid=a.guid=a.guid||p.guid++,f):b},access:function(a,c,d,e,f,g,h){var i,j=d==null,k=0,l=a.length;if(d&&typeof d==\"object\"){for(k in d)p.access(a,c,k,d[k],1,g,e);f=1}else if(e!==b){i=h===b&&p.isFunction(e),j&&(i?(i=c,c=function(a,b,c){return i.call(p(a),c)}):(c.call(a,e),c=null));if(c)for(;k<l;k++)c(a[k],d,i?e.call(a[k],k,c(a[k],d)):e,h);f=1}return f?a:j?c.call(a):l?c(a[0],d):g},now:function(){return(new Date).getTime()}}),p.ready.promise=function(b){if(!d){d=p.Deferred();if(e.readyState===\"complete\")setTimeout(p.ready,1);else if(e.addEventListener)e.addEventListener(\"DOMContentLoaded\",D,!1),a.addEventListener(\"load\",p.ready,!1);else{e.attachEvent(\"onreadystatechange\",D),a.attachEvent(\"onload\",p.ready);var c=!1;try{c=a.frameElement==null&&e.documentElement}catch(f){}c&&c.doScroll&&function g(){if(!p.isReady){try{c.doScroll(\"left\")}catch(a){return setTimeout(g,50)}p.ready()}}()}}return d.promise(b)},p.each(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"),function(a,b){E[\"[object \"+b+\"]\"]=b.toLowerCase()}),c=p(e);var F={};p.Callbacks=function(a){a=typeof a==\"string\"?F[a]||G(a):p.extend({},a);var c,d,e,f,g,h,i=[],j=!a.once&&[],k=function(b){c=a.memory&&b,d=!0,h=f||0,f=0,g=i.length,e=!0;for(;i&&h<g;h++)if(i[h].apply(b[0],b[1])===!1&&a.stopOnFalse){c=!1;break}e=!1,i&&(j?j.length&&k(j.shift()):c?i=[]:l.disable())},l={add:function(){if(i){var b=i.length;(function d(b){p.each(b,function(b,c){var e=p.type(c);e===\"function\"&&(!a.unique||!l.has(c))?i.push(c):c&&c.length&&e!==\"string\"&&d(c)})})(arguments),e?g=i.length:c&&(f=b,k(c))}return this},remove:function(){return i&&p.each(arguments,function(a,b){var c;while((c=p.inArray(b,i,c))>-1)i.splice(c,1),e&&(c<=g&&g--,c<=h&&h--)}),this},has:function(a){return p.inArray(a,i)>-1},empty:function(){return i=[],this},disable:function(){return i=j=c=b,this},disabled:function(){return!i},lock:function(){return j=b,c||l.disable(),this},locked:function(){return!j},fireWith:function(a,b){return b=b||[],b=[a,b.slice?b.slice():b],i&&(!d||j)&&(e?j.push(b):k(b)),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!d}};return l},p.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",p.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",p.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",p.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return p.Deferred(function(c){p.each(b,function(b,d){var f=d[0],g=a[b];e[d[1]](p.isFunction(g)?function(){var a=g.apply(this,arguments);a&&p.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f+\"With\"](this===e?c:this,[a])}:c[f])}),a=null}).promise()},promise:function(a){return a!=null?p.extend(a,d):d}},e={};return d.pipe=d.then,p.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[a^1][2].disable,b[2][2].lock),e[f[0]]=g.fire,e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=k.call(arguments),d=c.length,e=d!==1||a&&p.isFunction(a.promise)?d:0,f=e===1?a:p.Deferred(),g=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?k.call(arguments):d,c===h?f.notifyWith(b,c):--e||f.resolveWith(b,c)}},h,i,j;if(d>1){h=new Array(d),i=new Array(d),j=new Array(d);for(;b<d;b++)c[b]&&p.isFunction(c[b].promise)?c[b].promise().done(g(b,j,c)).fail(f.reject).progress(g(b,i,h)):--e}return e||f.resolveWith(j,c),f.promise()}}),p.support=function(){var b,c,d,f,g,h,i,j,k,l,m,n=e.createElement(\"div\");n.setAttribute(\"className\",\"t\"),n.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",c=n.getElementsByTagName(\"*\"),d=n.getElementsByTagName(\"a\")[0],d.style.cssText=\"top:1px;float:left;opacity:.5\";if(!c||!c.length)return{};f=e.createElement(\"select\"),g=f.appendChild(e.createElement(\"option\")),h=n.getElementsByTagName(\"input\")[0],b={leadingWhitespace:n.firstChild.nodeType===3,tbody:!n.getElementsByTagName(\"tbody\").length,htmlSerialize:!!n.getElementsByTagName(\"link\").length,style:/top/.test(d.getAttribute(\"style\")),hrefNormalized:d.getAttribute(\"href\")===\"/a\",opacity:/^0.5/.test(d.style.opacity),cssFloat:!!d.style.cssFloat,checkOn:h.value===\"on\",optSelected:g.selected,getSetAttribute:n.className!==\"t\",enctype:!!e.createElement(\"form\").enctype,html5Clone:e.createElement(\"nav\").cloneNode(!0).outerHTML!==\"<:nav></:nav>\",boxModel:e.compatMode===\"CSS1Compat\",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},h.checked=!0,b.noCloneChecked=h.cloneNode(!0).checked,f.disabled=!0,b.optDisabled=!g.disabled;try{delete n.test}catch(o){b.deleteExpando=!1}!n.addEventListener&&n.attachEvent&&n.fireEvent&&(n.attachEvent(\"onclick\",m=function(){b.noCloneEvent=!1}),n.cloneNode(!0).fireEvent(\"onclick\"),n.detachEvent(\"onclick\",m)),h=e.createElement(\"input\"),h.value=\"t\",h.setAttribute(\"type\",\"radio\"),b.radioValue=h.value===\"t\",h.setAttribute(\"checked\",\"checked\"),h.setAttribute(\"name\",\"t\"),n.appendChild(h),i=e.createDocumentFragment(),i.appendChild(n.lastChild),b.checkClone=i.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=h.checked,i.removeChild(h),i.appendChild(n);if(n.attachEvent)for(k in{submit:!0,change:!0,focusin:!0})j=\"on\"+k,l=j in n,l||(n.setAttribute(j,\"return;\"),l=typeof n[j]==\"function\"),b[k+\"Bubbles\"]=l;return p(function(){var c,d,f,g,h=\"padding:0;margin:0;border:0;display:block;overflow:hidden;\",i=e.getElementsByTagName(\"body\")[0];if(!i)return;c=e.createElement(\"div\"),c.style.cssText=\"visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px\",i.insertBefore(c,i.firstChild),d=e.createElement(\"div\"),c.appendChild(d),d.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",f=d.getElementsByTagName(\"td\"),f[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",l=f[0].offsetHeight===0,f[0].style.display=\"\",f[1].style.display=\"none\",b.reliableHiddenOffsets=l&&f[0].offsetHeight===0,d.innerHTML=\"\",d.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",b.boxSizing=d.offsetWidth===4,b.doesNotIncludeMarginInBodyOffset=i.offsetTop!==1,a.getComputedStyle&&(b.pixelPosition=(a.getComputedStyle(d,null)||{}).top!==\"1%\",b.boxSizingReliable=(a.getComputedStyle(d,null)||{width:\"4px\"}).width===\"4px\",g=e.createElement(\"div\"),g.style.cssText=d.style.cssText=h,g.style.marginRight=g.style.width=\"0\",d.style.width=\"1px\",d.appendChild(g),b.reliableMarginRight=!parseFloat((a.getComputedStyle(g,null)||{}).marginRight)),typeof d.style.zoom!=\"undefined\"&&(d.innerHTML=\"\",d.style.cssText=h+\"width:1px;padding:1px;display:inline;zoom:1\",b.inlineBlockNeedsLayout=d.offsetWidth===3,d.style.display=\"block\",d.style.overflow=\"visible\",d.innerHTML=\"<div></div>\",d.firstChild.style.width=\"5px\",b.shrinkWrapBlocks=d.offsetWidth!==3,c.style.zoom=1),i.removeChild(c),c=d=f=g=null}),i.removeChild(n),c=d=f=g=h=i=n=null,b}();var H=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,I=/([A-Z])/g;p.extend({cache:{},deletedIds:[],uuid:0,expando:\"jQuery\"+(p.fn.jquery+Math.random()).replace(/\\D/g,\"\"),noData:{embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",applet:!0},hasData:function(a){return a=a.nodeType?p.cache[a[p.expando]]:a[p.expando],!!a&&!K(a)},data:function(a,c,d,e){if(!p.acceptData(a))return;var f,g,h=p.expando,i=typeof c==\"string\",j=a.nodeType,k=j?p.cache:a,l=j?a[h]:a[h]&&h;if((!l||!k[l]||!e&&!k[l].data)&&i&&d===b)return;l||(j?a[h]=l=p.deletedIds.pop()||p.guid++:l=h),k[l]||(k[l]={},j||(k[l].toJSON=p.noop));if(typeof c==\"object\"||typeof c==\"function\")e?k[l]=p.extend(k[l],c):k[l].data=p.extend(k[l].data,c);return f=k[l],e||(f.data||(f.data={}),f=f.data),d!==b&&(f[p.camelCase(c)]=d),i?(g=f[c],g==null&&(g=f[p.camelCase(c)])):g=f,g},removeData:function(a,b,c){if(!p.acceptData(a))return;var d,e,f,g=a.nodeType,h=g?p.cache:a,i=g?a[p.expando]:p.expando;if(!h[i])return;if(b){d=c?h[i]:h[i].data;if(d){p.isArray(b)||(b in d?b=[b]:(b=p.camelCase(b),b in d?b=[b]:b=b.split(\" \")));for(e=0,f=b.length;e<f;e++)delete d[b[e]];if(!(c?K:p.isEmptyObject)(d))return}}if(!c){delete h[i].data;if(!K(h[i]))return}g?p.cleanData([a],!0):p.support.deleteExpando||h!=h.window?delete h[i]:h[i]=null},_data:function(a,b,c){return p.data(a,b,c,!0)},acceptData:function(a){var b=a.nodeName&&p.noData[a.nodeName.toLowerCase()];return!b||b!==!0&&a.getAttribute(\"classid\")===b}}),p.fn.extend({data:function(a,c){var d,e,f,g,h,i=this[0],j=0,k=null;if(a===b){if(this.length){k=p.data(i);if(i.nodeType===1&&!p._data(i,\"parsedAttrs\")){f=i.attributes;for(h=f.length;j<h;j++)g=f[j].name,g.indexOf(\"data-\")||(g=p.camelCase(g.substring(5)),J(i,g,k[g]));p._data(i,\"parsedAttrs\",!0)}}return k}return typeof a==\"object\"?this.each(function(){p.data(this,a)}):(d=a.split(\".\",2),d[1]=d[1]?\".\"+d[1]:\"\",e=d[1]+\"!\",p.access(this,function(c){if(c===b)return k=this.triggerHandler(\"getData\"+e,[d[0]]),k===b&&i&&(k=p.data(i,a),k=J(i,a,k)),k===b&&d[1]?this.data(d[0]):k;d[1]=c,this.each(function(){var b=p(this);b.triggerHandler(\"setData\"+e,d),p.data(this,a,c),b.triggerHandler(\"changeData\"+e,d)})},null,c,arguments.length>1,null,!1))},removeData:function(a){return this.each(function(){p.removeData(this,a)})}}),p.extend({queue:function(a,b,c){var d;if(a)return b=(b||\"fx\")+\"queue\",d=p._data(a,b),c&&(!d||p.isArray(c)?d=p._data(a,b,p.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\"fx\";var c=p.queue(a,b),d=c.length,e=c.shift(),f=p._queueHooks(a,b),g=function(){p.dequeue(a,b)};e===\"inprogress\"&&(e=c.shift(),d--),e&&(b===\"fx\"&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return p._data(a,c)||p._data(a,c,{empty:p.Callbacks(\"once memory\").add(function(){p.removeData(a,b+\"queue\",!0),p.removeData(a,c,!0)})})}}),p.fn.extend({queue:function(a,c){var d=2;return typeof a!=\"string\"&&(c=a,a=\"fx\",d--),arguments.length<d?p.queue(this[0],a):c===b?this:this.each(function(){var b=p.queue(this,a,c);p._queueHooks(this,a),a===\"fx\"&&b[0]!==\"inprogress\"&&p.dequeue(this,a)})},dequeue:function(a){return this.each(function(){p.dequeue(this,a)})},delay:function(a,b){return a=p.fx?p.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,c){var d,e=1,f=p.Deferred(),g=this,h=this.length,i=function(){--e||f.resolveWith(g,[g])};typeof a!=\"string\"&&(c=a,a=b),a=a||\"fx\";while(h--)d=p._data(g[h],a+\"queueHooks\"),d&&d.empty&&(e++,d.empty.add(i));return i(),f.promise(c)}});var L,M,N,O=/[\\t\\r\\n]/g,P=/\\r/g,Q=/^(?:button|input)$/i,R=/^(?:button|input|object|select|textarea)$/i,S=/^a(?:rea|)$/i,T=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,U=p.support.getSetAttribute;p.fn.extend({attr:function(a,b){return p.access(this,p.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){p.removeAttr(this,a)})},prop:function(a,b){return p.access(this,p.prop,a,b,arguments.length>1)},removeProp:function(a){return a=p.propFix[a]||a,this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,f,g,h;if(p.isFunction(a))return this.each(function(b){p(this).addClass(a.call(this,b,this.className))});if(a&&typeof a==\"string\"){b=a.split(s);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{f=\" \"+e.className+\" \";for(g=0,h=b.length;g<h;g++)f.indexOf(\" \"+b[g]+\" \")<0&&(f+=b[g]+\" \");e.className=p.trim(f)}}}return this},removeClass:function(a){var c,d,e,f,g,h,i;if(p.isFunction(a))return this.each(function(b){p(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a==\"string\"||a===b){c=(a||\"\").split(s);for(h=0,i=this.length;h<i;h++){e=this[h];if(e.nodeType===1&&e.className){d=(\" \"+e.className+\" \").replace(O,\" \");for(f=0,g=c.length;f<g;f++)while(d.indexOf(\" \"+c[f]+\" \")>=0)d=d.replace(\" \"+c[f]+\" \",\" \");e.className=a?p.trim(d):\"\"}}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b==\"boolean\";return p.isFunction(a)?this.each(function(c){p(this).toggleClass(a.call(this,c,this.className,b),b)}):this.each(function(){if(c===\"string\"){var e,f=0,g=p(this),h=b,i=a.split(s);while(e=i[f++])h=d?h:!g.hasClass(e),g[h?\"addClass\":\"removeClass\"](e)}else if(c===\"undefined\"||c===\"boolean\")this.className&&p._data(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":p._data(this,\"__className__\")||\"\"})},hasClass:function(a){var b=\" \"+a+\" \",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(\" \"+this[c].className+\" \").replace(O,\" \").indexOf(b)>=0)return!0;return!1},val:function(a){var c,d,e,f=this[0];if(!arguments.length){if(f)return c=p.valHooks[f.type]||p.valHooks[f.nodeName.toLowerCase()],c&&\"get\"in c&&(d=c.get(f,\"value\"))!==b?d:(d=f.value,typeof d==\"string\"?d.replace(P,\"\"):d==null?\"\":d);return}return e=p.isFunction(a),this.each(function(d){var f,g=p(this);if(this.nodeType!==1)return;e?f=a.call(this,d,g.val()):f=a,f==null?f=\"\":typeof f==\"number\"?f+=\"\":p.isArray(f)&&(f=p.map(f,function(a){return a==null?\"\":a+\"\"})),c=p.valHooks[this.type]||p.valHooks[this.nodeName.toLowerCase()];if(!c||!(\"set\"in c)||c.set(this,f,\"value\")===b)this.value=f})}}),p.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,f=a.selectedIndex,g=[],h=a.options,i=a.type===\"select-one\";if(f<0)return null;c=i?f:0,d=i?f+1:h.length;for(;c<d;c++){e=h[c];if(e.selected&&(p.support.optDisabled?!e.disabled:e.getAttribute(\"disabled\")===null)&&(!e.parentNode.disabled||!p.nodeName(e.parentNode,\"optgroup\"))){b=p(e).val();if(i)return b;g.push(b)}}return i&&!g.length&&h.length?p(h[f]).val():g},set:function(a,b){var c=p.makeArray(b);return p(a).find(\"option\").each(function(){this.selected=p.inArray(p(this).val(),c)>=0}),c.length||(a.selectedIndex=-1),c}}},attrFn:{},attr:function(a,c,d,e){var f,g,h,i=a.nodeType;if(!a||i===3||i===8||i===2)return;if(e&&p.isFunction(p.fn[c]))return p(a)[c](d);if(typeof a.getAttribute==\"undefined\")return p.prop(a,c,d);h=i!==1||!p.isXMLDoc(a),h&&(c=c.toLowerCase(),g=p.attrHooks[c]||(T.test(c)?M:L));if(d!==b){if(d===null){p.removeAttr(a,c);return}return g&&\"set\"in g&&h&&(f=g.set(a,d,c))!==b?f:(a.setAttribute(c,d+\"\"),d)}return g&&\"get\"in g&&h&&(f=g.get(a,c))!==null?f:(f=a.getAttribute(c),f===null?b:f)},removeAttr:function(a,b){var c,d,e,f,g=0;if(b&&a.nodeType===1){d=b.split(s);for(;g<d.length;g++)e=d[g],e&&(c=p.propFix[e]||e,f=T.test(e),f||p.attr(a,e,\"\"),a.removeAttribute(U?e:c),f&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(Q.test(a.nodeName)&&a.parentNode)p.error(\"type property can't be changed\");else if(!p.support.radioValue&&b===\"radio\"&&p.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}},value:{get:function(a,b){return L&&p.nodeName(a,\"button\")?L.get(a,b):b in a?a.value:null},set:function(a,b,c){if(L&&p.nodeName(a,\"button\"))return L.set(a,b,c);a.value=b}}},propFix:{tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},prop:function(a,c,d){var e,f,g,h=a.nodeType;if(!a||h===3||h===8||h===2)return;return g=h!==1||!p.isXMLDoc(a),g&&(c=p.propFix[c]||c,f=p.propHooks[c]),d!==b?f&&\"set\"in f&&(e=f.set(a,d,c))!==b?e:a[c]=d:f&&\"get\"in f&&(e=f.get(a,c))!==null?e:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode(\"tabindex\");return c&&c.specified?parseInt(c.value,10):R.test(a.nodeName)||S.test(a.nodeName)&&a.href?0:b}}}}),M={get:function(a,c){var d,e=p.prop(a,c);return e===!0||typeof e!=\"boolean\"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;return b===!1?p.removeAttr(a,c):(d=p.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase())),c}},U||(N={name:!0,id:!0,coords:!0},L=p.valHooks.button={get:function(a,c){var d;return d=a.getAttributeNode(c),d&&(N[c]?d.value!==\"\":d.specified)?d.value:b},set:function(a,b,c){var d=a.getAttributeNode(c);return d||(d=e.createAttribute(c),a.setAttributeNode(d)),d.value=b+\"\"}},p.each([\"width\",\"height\"],function(a,b){p.attrHooks[b]=p.extend(p.attrHooks[b],{set:function(a,c){if(c===\"\")return a.setAttribute(b,\"auto\"),c}})}),p.attrHooks.contenteditable={get:L.get,set:function(a,b,c){b===\"\"&&(b=\"false\"),L.set(a,b,c)}}),p.support.hrefNormalized||p.each([\"href\",\"src\",\"width\",\"height\"],function(a,c){p.attrHooks[c]=p.extend(p.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),p.support.style||(p.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=b+\"\"}}),p.support.optSelected||(p.propHooks.selected=p.extend(p.propHooks.selected,{get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}})),p.support.enctype||(p.propFix.enctype=\"encoding\"),p.support.checkOn||p.each([\"radio\",\"checkbox\"],function(){p.valHooks[this]={get:function(a){return a.getAttribute(\"value\")===null?\"on\":a.value}}}),p.each([\"radio\",\"checkbox\"],function(){p.valHooks[this]=p.extend(p.valHooks[this],{set:function(a,b){if(p.isArray(b))return a.checked=p.inArray(p(a).val(),b)>=0}})});var V=/^(?:textarea|input|select)$/i,W=/^([^\\.]*|)(?:\\.(.+)|)$/,X=/(?:^|\\s)hover(\\.\\S+|)\\b/,Y=/^key/,Z=/^(?:mouse|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=function(a){return p.event.special.hover?a:a.replace(X,\"mouseenter$1 mouseleave$1\")};p.event={add:function(a,c,d,e,f){var g,h,i,j,k,l,m,n,o,q,r;if(a.nodeType===3||a.nodeType===8||!c||!d||!(g=p._data(a)))return;d.handler&&(o=d,d=o.handler,f=o.selector),d.guid||(d.guid=p.guid++),i=g.events,i||(g.events=i={}),h=g.handle,h||(g.handle=h=function(a){return typeof p!=\"undefined\"&&(!a||p.event.triggered!==a.type)?p.event.dispatch.apply(h.elem,arguments):b},h.elem=a),c=p.trim(_(c)).split(\" \");for(j=0;j<c.length;j++){k=W.exec(c[j])||[],l=k[1],m=(k[2]||\"\").split(\".\").sort(),r=p.event.special[l]||{},l=(f?r.delegateType:r.bindType)||l,r=p.event.special[l]||{},n=p.extend({type:l,origType:k[1],data:e,handler:d,guid:d.guid,selector:f,needsContext:f&&p.expr.match.needsContext.test(f),namespace:m.join(\".\")},o),q=i[l];if(!q){q=i[l]=[],q.delegateCount=0;if(!r.setup||r.setup.call(a,e,m,h)===!1)a.addEventListener?a.addEventListener(l,h,!1):a.attachEvent&&a.attachEvent(\"on\"+l,h)}r.add&&(r.add.call(a,n),n.handler.guid||(n.handler.guid=d.guid)),f?q.splice(q.delegateCount++,0,n):q.push(n),p.event.global[l]=!0}a=null},global:{},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,q,r=p.hasData(a)&&p._data(a);if(!r||!(m=r.events))return;b=p.trim(_(b||\"\")).split(\" \");for(f=0;f<b.length;f++){g=W.exec(b[f])||[],h=i=g[1],j=g[2];if(!h){for(h in m)p.event.remove(a,h+b[f],c,d,!0);continue}n=p.event.special[h]||{},h=(d?n.delegateType:n.bindType)||h,o=m[h]||[],k=o.length,j=j?new RegExp(\"(^|\\\\.)\"+j.split(\".\").sort().join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null;for(l=0;l<o.length;l++)q=o[l],(e||i===q.origType)&&(!c||c.guid===q.guid)&&(!j||j.test(q.namespace))&&(!d||d===q.selector||d===\"**\"&&q.selector)&&(o.splice(l--,1),q.selector&&o.delegateCount--,n.remove&&n.remove.call(a,q));o.length===0&&k!==o.length&&((!n.teardown||n.teardown.call(a,j,r.handle)===!1)&&p.removeEvent(a,h,r.handle),delete m[h])}p.isEmptyObject(m)&&(delete r.handle,p.removeData(a,\"events\",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,f,g){if(!f||f.nodeType!==3&&f.nodeType!==8){var h,i,j,k,l,m,n,o,q,r,s=c.type||c,t=[];if($.test(s+p.event.triggered))return;s.indexOf(\"!\")>=0&&(s=s.slice(0,-1),i=!0),s.indexOf(\".\")>=0&&(t=s.split(\".\"),s=t.shift(),t.sort());if((!f||p.event.customEvent[s])&&!p.event.global[s])return;c=typeof c==\"object\"?c[p.expando]?c:new p.Event(s,c):new p.Event(s),c.type=s,c.isTrigger=!0,c.exclusive=i,c.namespace=t.join(\".\"),c.namespace_re=c.namespace?new RegExp(\"(^|\\\\.)\"+t.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,m=s.indexOf(\":\")<0?\"on\"+s:\"\";if(!f){h=p.cache;for(j in h)h[j].events&&h[j].events[s]&&p.event.trigger(c,d,h[j].handle.elem,!0);return}c.result=b,c.target||(c.target=f),d=d!=null?p.makeArray(d):[],d.unshift(c),n=p.event.special[s]||{};if(n.trigger&&n.trigger.apply(f,d)===!1)return;q=[[f,n.bindType||s]];if(!g&&!n.noBubble&&!p.isWindow(f)){r=n.delegateType||s,k=$.test(r+s)?f:f.parentNode;for(l=f;k;k=k.parentNode)q.push([k,r]),l=k;l===(f.ownerDocument||e)&&q.push([l.defaultView||l.parentWindow||a,r])}for(j=0;j<q.length&&!c.isPropagationStopped();j++)k=q[j][0],c.type=q[j][1],o=(p._data(k,\"events\")||{})[c.type]&&p._data(k,\"handle\"),o&&o.apply(k,d),o=m&&k[m],o&&p.acceptData(k)&&o.apply&&o.apply(k,d)===!1&&c.preventDefault();return c.type=s,!g&&!c.isDefaultPrevented()&&(!n._default||n._default.apply(f.ownerDocument,d)===!1)&&(s!==\"click\"||!p.nodeName(f,\"a\"))&&p.acceptData(f)&&m&&f[s]&&(s!==\"focus\"&&s!==\"blur\"||c.target.offsetWidth!==0)&&!p.isWindow(f)&&(l=f[m],l&&(f[m]=null),p.event.triggered=s,f[s](),p.event.triggered=b,l&&(f[m]=l)),c.result}return},dispatch:function(c){c=p.event.fix(c||a.event);var d,e,f,g,h,i,j,l,m,n,o=(p._data(this,\"events\")||{})[c.type]||[],q=o.delegateCount,r=k.call(arguments),s=!c.exclusive&&!c.namespace,t=p.event.special[c.type]||{},u=[];r[0]=c,c.delegateTarget=this;if(t.preDispatch&&t.preDispatch.call(this,c)===!1)return;if(q&&(!c.button||c.type!==\"click\"))for(f=c.target;f!=this;f=f.parentNode||this)if(f.disabled!==!0||c.type!==\"click\"){h={},j=[];for(d=0;d<q;d++)l=o[d],m=l.selector,h[m]===b&&(h[m]=l.needsContext?p(m,this).index(f)>=0:p.find(m,this,null,[f]).length),h[m]&&j.push(l);j.length&&u.push({elem:f,matches:j})}o.length>q&&u.push({elem:this,matches:o.slice(q)});for(d=0;d<u.length&&!c.isPropagationStopped();d++){i=u[d],c.currentTarget=i.elem;for(e=0;e<i.matches.length&&!c.isImmediatePropagationStopped();e++){l=i.matches[e];if(s||!c.namespace&&!l.namespace||c.namespace_re&&c.namespace_re.test(l.namespace))c.data=l.data,c.handleObj=l,g=((p.event.special[l.origType]||{}).handle||l.handler).apply(i.elem,r),g!==b&&(c.result=g,g===!1&&(c.preventDefault(),c.stopPropagation()))}}return t.postDispatch&&t.postDispatch.call(this,c),c.result},props:\"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,c){var d,f,g,h=c.button,i=c.fromElement;return a.pageX==null&&c.clientX!=null&&(d=a.target.ownerDocument||e,f=d.documentElement,g=d.body,a.pageX=c.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=c.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?c.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0),a}},fix:function(a){if(a[p.expando])return a;var b,c,d=a,f=p.event.fixHooks[a.type]||{},g=f.props?this.props.concat(f.props):this.props;a=p.Event(d);for(b=g.length;b;)c=g[--b],a[c]=d[c];return a.target||(a.target=d.srcElement||e),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,f.filter?f.filter(a,d):a},special:{load:{noBubble:!0},focus:{delegateType:\"focusin\"},blur:{delegateType:\"focusout\"},beforeunload:{setup:function(a,b,c){p.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=p.extend(new p.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?p.event.trigger(e,null,b):p.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},p.event.handle=p.event.dispatch,p.removeEvent=e.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d=\"on\"+b;a.detachEvent&&(typeof a[d]==\"undefined\"&&(a[d]=null),a.detachEvent(d,c))},p.Event=function(a,b){if(this instanceof p.Event)a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?bb:ba):this.type=a,b&&p.extend(this,b),this.timeStamp=a&&a.timeStamp||p.now(),this[p.expando]=!0;else return new p.Event(a,b)},p.Event.prototype={preventDefault:function(){this.isDefaultPrevented=bb;var a=this.originalEvent;if(!a)return;a.preventDefault?a.preventDefault():a.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=bb;var a=this.originalEvent;if(!a)return;a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()},isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba},p.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(a,b){p.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj,g=f.selector;if(!e||e!==d&&!p.contains(d,e))a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b;return c}}}),p.support.submitBubbles||(p.event.special.submit={setup:function(){if(p.nodeName(this,\"form\"))return!1;p.event.add(this,\"click._submit keypress._submit\",function(a){var c=a.target,d=p.nodeName(c,\"input\")||p.nodeName(c,\"button\")?c.form:b;d&&!p._data(d,\"_submit_attached\")&&(p.event.add(d,\"submit._submit\",function(a){a._submit_bubble=!0}),p._data(d,\"_submit_attached\",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&p.event.simulate(\"submit\",this.parentNode,a,!0))},teardown:function(){if(p.nodeName(this,\"form\"))return!1;p.event.remove(this,\"._submit\")}}),p.support.changeBubbles||(p.event.special.change={setup:function(){if(V.test(this.nodeName)){if(this.type===\"checkbox\"||this.type===\"radio\")p.event.add(this,\"propertychange._change\",function(a){a.originalEvent.propertyName===\"checked\"&&(this._just_changed=!0)}),p.event.add(this,\"click._change\",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),p.event.simulate(\"change\",this,a,!0)});return!1}p.event.add(this,\"beforeactivate._change\",function(a){var b=a.target;V.test(b.nodeName)&&!p._data(b,\"_change_attached\")&&(p.event.add(b,\"change._change\",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&p.event.simulate(\"change\",this.parentNode,a,!0)}),p._data(b,\"_change_attached\",!0))})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!==\"radio\"&&b.type!==\"checkbox\")return a.handleObj.handler.apply(this,arguments)},teardown:function(){return p.event.remove(this,\"._change\"),!V.test(this.nodeName)}}),p.support.focusinBubbles||p.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=0,d=function(a){p.event.simulate(b,a.target,p.event.fix(a),!0)};p.event.special[b]={setup:function(){c++===0&&e.addEventListener(a,d,!0)},teardown:function(){--c===0&&e.removeEventListener(a,d,!0)}}}),p.fn.extend({on:function(a,c,d,e,f){var g,h;if(typeof a==\"object\"){typeof c!=\"string\"&&(d=d||c,c=b);for(h in a)this.on(h,c,d,a[h],f);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c==\"string\"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=ba;else if(!e)return this;return f===1&&(g=e,e=function(a){return p().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=p.guid++)),this.each(function(){p.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){var e,f;if(a&&a.preventDefault&&a.handleObj)return e=a.handleObj,p(a.delegateTarget).off(e.namespace?e.origType+\".\"+e.namespace:e.origType,e.selector,e.handler),this;if(typeof a==\"object\"){for(f in a)this.off(f,c,a[f]);return this}if(c===!1||typeof c==\"function\")d=c,c=b;return d===!1&&(d=ba),this.each(function(){p.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){return p(this.context).on(a,this.selector,b,c),this},die:function(a,b){return p(this.context).off(a,this.selector||\"**\",b),this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length===1?this.off(a,\"**\"):this.off(b,a||\"**\",c)},trigger:function(a,b){return this.each(function(){p.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return p.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||p.guid++,d=0,e=function(c){var e=(p._data(this,\"lastToggle\"+a.guid)||0)%d;return p._data(this,\"lastToggle\"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),p.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){p.fn[b]=function(a,c){return c==null&&(c=a,a=null),arguments.length>0?this.on(b,null,a,c):this.trigger(b)},Y.test(b)&&(p.event.fixHooks[b]=p.event.keyHooks),Z.test(b)&&(p.event.fixHooks[b]=p.event.mouseHooks)}),function(a,b){function bc(a,b,c,d){c=c||[],b=b||r;var e,f,i,j,k=b.nodeType;if(!a||typeof a!=\"string\")return c;if(k!==1&&k!==9)return[];i=g(b);if(!i&&!d)if(e=P.exec(a))if(j=e[1]){if(k===9){f=b.getElementById(j);if(!f||!f.parentNode)return c;if(f.id===j)return c.push(f),c}else if(b.ownerDocument&&(f=b.ownerDocument.getElementById(j))&&h(b,f)&&f.id===j)return c.push(f),c}else{if(e[2])return w.apply(c,x.call(b.getElementsByTagName(a),0)),c;if((j=e[3])&&_&&b.getElementsByClassName)return w.apply(c,x.call(b.getElementsByClassName(j),0)),c}return bp(a.replace(L,\"$1\"),b,c,d,i)}function bd(a){return function(b){var c=b.nodeName.toLowerCase();return c===\"input\"&&b.type===a}}function be(a){return function(b){var c=b.nodeName.toLowerCase();return(c===\"input\"||c===\"button\")&&b.type===a}}function bf(a){return z(function(b){return b=+b,z(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function bg(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}function bh(a,b){var c,d,f,g,h,i,j,k=C[o][a];if(k)return b?0:k.slice(0);h=a,i=[],j=e.preFilter;while(h){if(!c||(d=M.exec(h)))d&&(h=h.slice(d[0].length)),i.push(f=[]);c=!1;if(d=N.exec(h))f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=d[0].replace(L,\" \");for(g in e.filter)(d=W[g].exec(h))&&(!j[g]||(d=j[g](d,r,!0)))&&(f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=g,c.matches=d);if(!c)break}return b?h.length:h?bc.error(a):C(a,i).slice(0)}function bi(a,b,d){var e=b.dir,f=d&&b.dir===\"parentNode\",g=u++;return b.first?function(b,c,d){while(b=b[e])if(f||b.nodeType===1)return a(b,c,d)}:function(b,d,h){if(!h){var i,j=t+\" \"+g+\" \",k=j+c;while(b=b[e])if(f||b.nodeType===1){if((i=b[o])===k)return b.sizset;if(typeof i==\"string\"&&i.indexOf(j)===0){if(b.sizset)return b}else{b[o]=k;if(a(b,d,h))return b.sizset=!0,b;b.sizset=!1}}}else while(b=b[e])if(f||b.nodeType===1)if(a(b,d,h))return b}}function bj(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function bk(a,b,c,d,e){var f,g=[],h=0,i=a.length,j=b!=null;for(;h<i;h++)if(f=a[h])if(!c||c(f,d,e))g.push(f),j&&b.push(h);return g}function bl(a,b,c,d,e,f){return d&&!d[o]&&(d=bl(d)),e&&!e[o]&&(e=bl(e,f)),z(function(f,g,h,i){if(f&&e)return;var j,k,l,m=[],n=[],o=g.length,p=f||bo(b||\"*\",h.nodeType?[h]:h,[],f),q=a&&(f||!b)?bk(p,m,a,h,i):p,r=c?e||(f?a:o||d)?[]:g:q;c&&c(q,r,h,i);if(d){l=bk(r,n),d(l,[],h,i),j=l.length;while(j--)if(k=l[j])r[n[j]]=!(q[n[j]]=k)}if(f){j=a&&r.length;while(j--)if(k=r[j])f[m[j]]=!(g[m[j]]=k)}else r=bk(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):w.apply(g,r)})}function bm(a){var b,c,d,f=a.length,g=e.relative[a[0].type],h=g||e.relative[\" \"],i=g?1:0,j=bi(function(a){return a===b},h,!0),k=bi(function(a){return y.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==l)||((b=c).nodeType?j(a,c,d):k(a,c,d))}];for(;i<f;i++)if(c=e.relative[a[i].type])m=[bi(bj(m),c)];else{c=e.filter[a[i].type].apply(null,a[i].matches);if(c[o]){d=++i;for(;d<f;d++)if(e.relative[a[d].type])break;return bl(i>1&&bj(m),i>1&&a.slice(0,i-1).join(\"\").replace(L,\"$1\"),c,i<d&&bm(a.slice(i,d)),d<f&&bm(a=a.slice(d)),d<f&&a.join(\"\"))}m.push(c)}return bj(m)}function bn(a,b){var d=b.length>0,f=a.length>0,g=function(h,i,j,k,m){var n,o,p,q=[],s=0,u=\"0\",x=h&&[],y=m!=null,z=l,A=h||f&&e.find.TAG(\"*\",m&&i.parentNode||i),B=t+=z==null?1:Math.E;y&&(l=i!==r&&i,c=g.el);for(;(n=A[u])!=null;u++){if(f&&n){for(o=0;p=a[o];o++)if(p(n,i,j)){k.push(n);break}y&&(t=B,c=++g.el)}d&&((n=!p&&n)&&s--,h&&x.push(n))}s+=u;if(d&&u!==s){for(o=0;p=b[o];o++)p(x,q,i,j);if(h){if(s>0)while(u--)!x[u]&&!q[u]&&(q[u]=v.call(k));q=bk(q)}w.apply(k,q),y&&!h&&q.length>0&&s+b.length>1&&bc.uniqueSort(k)}return y&&(t=B,l=z),x};return g.el=0,d?z(g):g}function bo(a,b,c,d){var e=0,f=b.length;for(;e<f;e++)bc(a,b[e],c,d);return c}function bp(a,b,c,d,f){var g,h,j,k,l,m=bh(a),n=m.length;if(!d&&m.length===1){h=m[0]=m[0].slice(0);if(h.length>2&&(j=h[0]).type===\"ID\"&&b.nodeType===9&&!f&&e.relative[h[1].type]){b=e.find.ID(j.matches[0].replace(V,\"\"),b,f)[0];if(!b)return c;a=a.slice(h.shift().length)}for(g=W.POS.test(a)?-1:h.length-1;g>=0;g--){j=h[g];if(e.relative[k=j.type])break;if(l=e.find[k])if(d=l(j.matches[0].replace(V,\"\"),R.test(h[0].type)&&b.parentNode||b,f)){h.splice(g,1),a=d.length&&h.join(\"\");if(!a)return w.apply(c,x.call(d,0)),c;break}}}return i(a,m)(d,b,f,c,R.test(a)),c}function bq(){}var c,d,e,f,g,h,i,j,k,l,m=!0,n=\"undefined\",o=(\"sizcache\"+Math.random()).replace(\".\",\"\"),q=String,r=a.document,s=r.documentElement,t=0,u=0,v=[].pop,w=[].push,x=[].slice,y=[].indexOf||function(a){var b=0,c=this.length;for(;b<c;b++)if(this[b]===a)return b;return-1},z=function(a,b){return a[o]=b==null||b,a},A=function(){var a={},b=[];return z(function(c,d){return b.push(c)>e.cacheLength&&delete a[b.shift()],a[c]=d},a)},B=A(),C=A(),D=A(),E=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",F=\"(?:\\\\\\\\.|[-\\\\w]|[^\\\\x00-\\\\xa0])+\",G=F.replace(\"w\",\"w#\"),H=\"([*^$|!~]?=)\",I=\"\\\\[\"+E+\"*(\"+F+\")\"+E+\"*(?:\"+H+E+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+G+\")|)|)\"+E+\"*\\\\]\",J=\":(\"+F+\")(?:\\\\((?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\2|([^()[\\\\]]*|(?:(?:\"+I+\")|[^:]|\\\\\\\\.)*|.*))\\\\)|)\",K=\":(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+E+\"*((?:-\\\\d)?\\\\d*)\"+E+\"*\\\\)|)(?=[^-]|$)\",L=new RegExp(\"^\"+E+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+E+\"+$\",\"g\"),M=new RegExp(\"^\"+E+\"*,\"+E+\"*\"),N=new RegExp(\"^\"+E+\"*([\\\\x20\\\\t\\\\r\\\\n\\\\f>+~])\"+E+\"*\"),O=new RegExp(J),P=/^(?:#([\\w\\-]+)|(\\w+)|\\.([\\w\\-]+))$/,Q=/^:not/,R=/[\\x20\\t\\r\\n\\f]*[+~]/,S=/:not\\($/,T=/h\\d/i,U=/input|select|textarea|button/i,V=/\\\\(?!\\\\)/g,W={ID:new RegExp(\"^#(\"+F+\")\"),CLASS:new RegExp(\"^\\\\.(\"+F+\")\"),NAME:new RegExp(\"^\\\\[name=['\\\"]?(\"+F+\")['\\\"]?\\\\]\"),TAG:new RegExp(\"^(\"+F.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+I),PSEUDO:new RegExp(\"^\"+J),POS:new RegExp(K,\"i\"),CHILD:new RegExp(\"^:(only|nth|first|last)-child(?:\\\\(\"+E+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+E+\"*(?:([+-]|)\"+E+\"*(\\\\d+)|))\"+E+\"*\\\\)|)\",\"i\"),needsContext:new RegExp(\"^\"+E+\"*[>+~]|\"+K,\"i\")},X=function(a){var b=r.createElement(\"div\");try{return a(b)}catch(c){return!1}finally{b=null}},Y=X(function(a){return a.appendChild(r.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),Z=X(function(a){return a.innerHTML=\"<a href='#'></a>\",a.firstChild&&typeof a.firstChild.getAttribute!==n&&a.firstChild.getAttribute(\"href\")===\"#\"}),$=X(function(a){a.innerHTML=\"<select></select>\";var b=typeof a.lastChild.getAttribute(\"multiple\");return b!==\"boolean\"&&b!==\"string\"}),_=X(function(a){return a.innerHTML=\"<div class='hidden e'></div><div class='hidden'></div>\",!a.getElementsByClassName||!a.getElementsByClassName(\"e\").length?!1:(a.lastChild.className=\"e\",a.getElementsByClassName(\"e\").length===2)}),ba=X(function(a){a.id=o+0,a.innerHTML=\"<a name='\"+o+\"'></a><div name='\"+o+\"'></div>\",s.insertBefore(a,s.firstChild);var b=r.getElementsByName&&r.getElementsByName(o).length===2+r.getElementsByName(o+0).length;return d=!r.getElementById(o),s.removeChild(a),b});try{x.call(s.childNodes,0)[0].nodeType}catch(bb){x=function(a){var b,c=[];for(;b=this[a];a++)c.push(b);return c}}bc.matches=function(a,b){return bc(a,null,null,b)},bc.matchesSelector=function(a,b){return bc(b,null,null,[a]).length>0},f=bc.getText=function(a){var b,c=\"\",d=0,e=a.nodeType;if(e){if(e===1||e===9||e===11){if(typeof a.textContent==\"string\")return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=f(a)}else if(e===3||e===4)return a.nodeValue}else for(;b=a[d];d++)c+=f(b);return c},g=bc.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!==\"HTML\":!1},h=bc.contains=s.contains?function(a,b){var c=a.nodeType===9?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&d.nodeType===1&&c.contains&&c.contains(d))}:s.compareDocumentPosition?function(a,b){return b&&!!(a.compareDocumentPosition(b)&16)}:function(a,b){while(b=b.parentNode)if(b===a)return!0;return!1},bc.attr=function(a,b){var c,d=g(a);return d||(b=b.toLowerCase()),(c=e.attrHandle[b])?c(a):d||$?a.getAttribute(b):(c=a.getAttributeNode(b),c?typeof a[b]==\"boolean\"?a[b]?b:null:c.specified?c.value:null:null)},e=bc.selectors={cacheLength:50,createPseudo:z,match:W,attrHandle:Z?{}:{href:function(a){return a.getAttribute(\"href\",2)},type:function(a){return a.getAttribute(\"type\")}},find:{ID:d?function(a,b,c){if(typeof b.getElementById!==n&&!c){var d=b.getElementById(a);return d&&d.parentNode?[d]:[]}}:function(a,c,d){if(typeof c.getElementById!==n&&!d){var e=c.getElementById(a);return e?e.id===a||typeof e.getAttributeNode!==n&&e.getAttributeNode(\"id\").value===a?[e]:b:[]}},TAG:Y?function(a,b){if(typeof b.getElementsByTagName!==n)return b.getElementsByTagName(a)}:function(a,b){var c=b.getElementsByTagName(a);if(a===\"*\"){var d,e=[],f=0;for(;d=c[f];f++)d.nodeType===1&&e.push(d);return e}return c},NAME:ba&&function(a,b){if(typeof b.getElementsByName!==n)return b.getElementsByName(name)},CLASS:_&&function(a,b,c){if(typeof b.getElementsByClassName!==n&&!c)return b.getElementsByClassName(a)}},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(V,\"\"),a[3]=(a[4]||a[5]||\"\").replace(V,\"\"),a[2]===\"~=\"&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),a[1]===\"nth\"?(a[2]||bc.error(a[0]),a[3]=+(a[3]?a[4]+(a[5]||1):2*(a[2]===\"even\"||a[2]===\"odd\")),a[4]=+(a[6]+a[7]||a[2]===\"odd\")):a[2]&&bc.error(a[0]),a},PSEUDO:function(a){var b,c;if(W.CHILD.test(a[0]))return null;if(a[3])a[2]=a[3];else if(b=a[4])O.test(b)&&(c=bh(b,!0))&&(c=b.indexOf(\")\",b.length-c)-b.length)&&(b=b.slice(0,c),a[0]=a[0].slice(0,c)),a[2]=b;return a.slice(0,3)}},filter:{ID:d?function(a){return a=a.replace(V,\"\"),function(b){return b.getAttribute(\"id\")===a}}:function(a){return a=a.replace(V,\"\"),function(b){var c=typeof b.getAttributeNode!==n&&b.getAttributeNode(\"id\");return c&&c.value===a}},TAG:function(a){return a===\"*\"?function(){return!0}:(a=a.replace(V,\"\").toLowerCase(),function(b){return b.nodeName&&b.nodeName.toLowerCase()===a})},CLASS:function(a){var b=B[o][a];return b||(b=B(a,new RegExp(\"(^|\"+E+\")\"+a+\"(\"+E+\"|$)\"))),function(a){return b.test(a.className||typeof a.getAttribute!==n&&a.getAttribute(\"class\")||\"\")}},ATTR:function(a,b,c){return function(d,e){var f=bc.attr(d,a);return f==null?b===\"!=\":b?(f+=\"\",b===\"=\"?f===c:b===\"!=\"?f!==c:b===\"^=\"?c&&f.indexOf(c)===0:b===\"*=\"?c&&f.indexOf(c)>-1:b===\"$=\"?c&&f.substr(f.length-c.length)===c:b===\"~=\"?(\" \"+f+\" \").indexOf(c)>-1:b===\"|=\"?f===c||f.substr(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d){return a===\"nth\"?function(a){var b,e,f=a.parentNode;if(c===1&&d===0)return!0;if(f){e=0;for(b=f.firstChild;b;b=b.nextSibling)if(b.nodeType===1){e++;if(a===b)break}}return e-=d,e===c||e%c===0&&e/c>=0}:function(b){var c=b;switch(a){case\"only\":case\"first\":while(c=c.previousSibling)if(c.nodeType===1)return!1;if(a===\"first\")return!0;c=b;case\"last\":while(c=c.nextSibling)if(c.nodeType===1)return!1;return!0}}},PSEUDO:function(a,b){var c,d=e.pseudos[a]||e.setFilters[a.toLowerCase()]||bc.error(\"unsupported pseudo: \"+a);return d[o]?d(b):d.length>1?(c=[a,a,\"\",b],e.setFilters.hasOwnProperty(a.toLowerCase())?z(function(a,c){var e,f=d(a,b),g=f.length;while(g--)e=y.call(a,f[g]),a[e]=!(c[e]=f[g])}):function(a){return d(a,0,c)}):d}},pseudos:{not:z(function(a){var b=[],c=[],d=i(a.replace(L,\"$1\"));return d[o]?z(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)if(f=g[h])a[h]=!(b[h]=f)}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:z(function(a){return function(b){return bc(a,b).length>0}}),contains:z(function(a){return function(b){return(b.textContent||b.innerText||f(b)).indexOf(a)>-1}}),enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return b===\"input\"&&!!a.checked||b===\"option\"&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},parent:function(a){return!e.pseudos.empty(a)},empty:function(a){var b;a=a.firstChild;while(a){if(a.nodeName>\"@\"||(b=a.nodeType)===3||b===4)return!1;a=a.nextSibling}return!0},header:function(a){return T.test(a.nodeName)},text:function(a){var b,c;return a.nodeName.toLowerCase()===\"input\"&&(b=a.type)===\"text\"&&((c=a.getAttribute(\"type\"))==null||c.toLowerCase()===b)},radio:bd(\"radio\"),checkbox:bd(\"checkbox\"),file:bd(\"file\"),password:bd(\"password\"),image:bd(\"image\"),submit:be(\"submit\"),reset:be(\"reset\"),button:function(a){var b=a.nodeName.toLowerCase();return b===\"input\"&&a.type===\"button\"||b===\"button\"},input:function(a){return U.test(a.nodeName)},focus:function(a){var b=a.ownerDocument;return a===b.activeElement&&(!b.hasFocus||b.hasFocus())&&(!!a.type||!!a.href)},active:function(a){return a===a.ownerDocument.activeElement},first:bf(function(a,b,c){return[0]}),last:bf(function(a,b,c){return[b-1]}),eq:bf(function(a,b,c){return[c<0?c+b:c]}),even:bf(function(a,b,c){for(var d=0;d<b;d+=2)a.push(d);return a}),odd:bf(function(a,b,c){for(var d=1;d<b;d+=2)a.push(d);return a}),lt:bf(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:bf(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},j=s.compareDocumentPosition?function(a,b){return a===b?(k=!0,0):(!a.compareDocumentPosition||!b.compareDocumentPosition?a.compareDocumentPosition:a.compareDocumentPosition(b)&4)?-1:1}:function(a,b){if(a===b)return k=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,h=b.parentNode,i=g;if(g===h)return bg(a,b);if(!g)return-1;if(!h)return 1;while(i)e.unshift(i),i=i.parentNode;i=h;while(i)f.unshift(i),i=i.parentNode;c=e.length,d=f.length;for(var j=0;j<c&&j<d;j++)if(e[j]!==f[j])return bg(e[j],f[j]);return j===c?bg(a,f[j],-1):bg(e[j],b,1)},[0,0].sort(j),m=!k,bc.uniqueSort=function(a){var b,c=1;k=m,a.sort(j);if(k)for(;b=a[c];c++)b===a[c-1]&&a.splice(c--,1);return a},bc.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},i=bc.compile=function(a,b){var c,d=[],e=[],f=D[o][a];if(!f){b||(b=bh(a)),c=b.length;while(c--)f=bm(b[c]),f[o]?d.push(f):e.push(f);f=D(a,bn(e,d))}return f},r.querySelectorAll&&function(){var a,b=bp,c=/'|\\\\/g,d=/\\=[\\x20\\t\\r\\n\\f]*([^'\"\\]]*)[\\x20\\t\\r\\n\\f]*\\]/g,e=[\":focus\"],f=[\":active\",\":focus\"],h=s.matchesSelector||s.mozMatchesSelector||s.webkitMatchesSelector||s.oMatchesSelector||s.msMatchesSelector;X(function(a){a.innerHTML=\"<select><option selected=''></option></select>\",a.querySelectorAll(\"[selected]\").length||e.push(\"\\\\[\"+E+\"*(?:checked|disabled|ismap|multiple|readonly|selected|value)\"),a.querySelectorAll(\":checked\").length||e.push(\":checked\")}),X(function(a){a.innerHTML=\"<p test=''></p>\",a.querySelectorAll(\"[test^='']\").length&&e.push(\"[*^$]=\"+E+\"*(?:\\\"\\\"|'')\"),a.innerHTML=\"<input type='hidden'/>\",a.querySelectorAll(\":enabled\").length||e.push(\":enabled\",\":disabled\")}),e=new RegExp(e.join(\"|\")),bp=function(a,d,f,g,h){if(!g&&!h&&(!e||!e.test(a))){var i,j,k=!0,l=o,m=d,n=d.nodeType===9&&a;if(d.nodeType===1&&d.nodeName.toLowerCase()!==\"object\"){i=bh(a),(k=d.getAttribute(\"id\"))?l=k.replace(c,\"\\\\$&\"):d.setAttribute(\"id\",l),l=\"[id='\"+l+\"'] \",j=i.length;while(j--)i[j]=l+i[j].join(\"\");m=R.test(a)&&d.parentNode||d,n=i.join(\",\")}if(n)try{return w.apply(f,x.call(m.querySelectorAll(n),0)),f}catch(p){}finally{k||d.removeAttribute(\"id\")}}return b(a,d,f,g,h)},h&&(X(function(b){a=h.call(b,\"div\");try{h.call(b,\"[test!='']:sizzle\"),f.push(\"!=\",J)}catch(c){}}),f=new RegExp(f.join(\"|\")),bc.matchesSelector=function(b,c){c=c.replace(d,\"='$1']\");if(!g(b)&&!f.test(c)&&(!e||!e.test(c)))try{var i=h.call(b,c);if(i||a||b.document&&b.document.nodeType!==11)return i}catch(j){}return bc(c,null,null,[b]).length>0})}(),e.pseudos.nth=e.pseudos.eq,e.filters=bq.prototype=e.pseudos,e.setFilters=new bq,bc.attr=p.attr,p.find=bc,p.expr=bc.selectors,p.expr[\":\"]=p.expr.pseudos,p.unique=bc.uniqueSort,p.text=bc.getText,p.isXMLDoc=bc.isXML,p.contains=bc.contains}(a);var bc=/Until$/,bd=/^(?:parents|prev(?:Until|All))/,be=/^.[^:#\\[\\.,]*$/,bf=p.expr.match.needsContext,bg={children:!0,contents:!0,next:!0,prev:!0};p.fn.extend({find:function(a){var b,c,d,e,f,g,h=this;if(typeof a!=\"string\")return p(a).filter(function(){for(b=0,c=h.length;b<c;b++)if(p.contains(h[b],this))return!0});g=this.pushStack(\"\",\"find\",a);for(b=0,c=this.length;b<c;b++){d=g.length,p.find(a,this[b],g);if(b>0)for(e=d;e<g.length;e++)for(f=0;f<d;f++)if(g[f]===g[e]){g.splice(e--,1);break}}return g},has:function(a){var b,c=p(a,this),d=c.length;return this.filter(function(){for(b=0;b<d;b++)if(p.contains(this,c[b]))return!0})},not:function(a){return this.pushStack(bj(this,a,!1),\"not\",a)},filter:function(a){return this.pushStack(bj(this,a,!0),\"filter\",a)},is:function(a){return!!a&&(typeof a==\"string\"?bf.test(a)?p(a,this.context).index(this[0])>=0:p.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c,d=0,e=this.length,f=[],g=bf.test(a)||typeof a!=\"string\"?p(a,b||this.context):0;for(;d<e;d++){c=this[d];while(c&&c.ownerDocument&&c!==b&&c.nodeType!==11){if(g?g.index(c)>-1:p.find.matchesSelector(c,a)){f.push(c);break}c=c.parentNode}}return f=f.length>1?p.unique(f):f,this.pushStack(f,\"closest\",a)},index:function(a){return a?typeof a==\"string\"?p.inArray(this[0],p(a)):p.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(a,b){var c=typeof a==\"string\"?p(a,b):p.makeArray(a&&a.nodeType?[a]:a),d=p.merge(this.get(),c);return this.pushStack(bh(c[0])||bh(d[0])?d:p.unique(d))},addBack:function(a){return this.add(a==null?this.prevObject:this.prevObject.filter(a))}}),p.fn.andSelf=p.fn.addBack,p.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return p.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return p.dir(a,\"parentNode\",c)},next:function(a){return bi(a,\"nextSibling\")},prev:function(a){return bi(a,\"previousSibling\")},nextAll:function(a){return p.dir(a,\"nextSibling\")},prevAll:function(a){return p.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return p.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return p.dir(a,\"previousSibling\",c)},siblings:function(a){return p.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return p.sibling(a.firstChild)},contents:function(a){return p.nodeName(a,\"iframe\")?a.contentDocument||a.contentWindow.document:p.merge([],a.childNodes)}},function(a,b){p.fn[a]=function(c,d){var e=p.map(this,b,c);return bc.test(a)||(d=c),d&&typeof d==\"string\"&&(e=p.filter(d,e)),e=this.length>1&&!bg[a]?p.unique(e):e,this.length>1&&bd.test(a)&&(e=e.reverse()),this.pushStack(e,a,k.call(arguments).join(\",\"))}}),p.extend({filter:function(a,b,c){return c&&(a=\":not(\"+a+\")\"),b.length===1?p.find.matchesSelector(b[0],a)?[b[0]]:[]:p.find.matches(a,b)},dir:function(a,c,d){var e=[],f=a[c];while(f&&f.nodeType!==9&&(d===b||f.nodeType!==1||!p(f).is(d)))f.nodeType===1&&e.push(f),f=f[c];return e},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var bl=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",bm=/ jQuery\\d+=\"(?:null|\\d+)\"/g,bn=/^\\s+/,bo=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bp=/<([\\w:]+)/,bq=/<tbody/i,br=/<|&#?\\w+;/,bs=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,bu=new RegExp(\"<(?:\"+bl+\")[\\\\s/>]\",\"i\"),bv=/^(?:checkbox|radio)$/,bw=/checked\\s*(?:[^=]|=\\s*.checked.)/i,bx=/\\/(java|ecma)script/i,by=/^\\s*<!(?:\\[CDATA\\[|\\-\\-)|[\\]\\-]{2}>\\s*$/g,bz={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],area:[1,\"<map>\",\"</map>\"],_default:[0,\"\",\"\"]},bA=bk(e),bB=bA.appendChild(e.createElement(\"div\"));bz.optgroup=bz.option,bz.tbody=bz.tfoot=bz.colgroup=bz.caption=bz.thead,bz.th=bz.td,p.support.htmlSerialize||(bz._default=[1,\"X<div>\",\"</div>\"]),p.fn.extend({text:function(a){return p.access(this,function(a){return a===b?p.text(this):this.empty().append((this[0]&&this[0].ownerDocument||e).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(p.isFunction(a))return this.each(function(b){p(this).wrapAll(a.call(this,b))});if(this[0]){var b=p(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return p.isFunction(a)?this.each(function(b){p(this).wrapInner(a.call(this,b))}):this.each(function(){var b=p(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=p.isFunction(a);return this.each(function(c){p(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){p.nodeName(this,\"body\")||p(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(a,this.firstChild)})},before:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(a,this),\"before\",this.selector)}},after:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(this,a),\"after\",this.selector)}},remove:function(a,b){var c,d=0;for(;(c=this[d])!=null;d++)if(!a||p.filter(a,[c]).length)!b&&c.nodeType===1&&(p.cleanData(c.getElementsByTagName(\"*\")),p.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this},empty:function(){var a,b=0;for(;(a=this[b])!=null;b++){a.nodeType===1&&p.cleanData(a.getElementsByTagName(\"*\"));while(a.firstChild)a.removeChild(a.firstChild)}return this},clone:function(a,b){return a=a==null?!1:a,b=b==null?a:b,this.map(function(){return p.clone(this,a,b)})},html:function(a){return p.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(bm,\"\"):b;if(typeof a==\"string\"&&!bs.test(a)&&(p.support.htmlSerialize||!bu.test(a))&&(p.support.leadingWhitespace||!bn.test(a))&&!bz[(bp.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(bo,\"<$1></$2>\");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(p.cleanData(c.getElementsByTagName(\"*\")),c.innerHTML=a);c=0}catch(f){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){return bh(this[0])?this.length?this.pushStack(p(p.isFunction(a)?a():a),\"replaceWith\",a):this:p.isFunction(a)?this.each(function(b){var c=p(this),d=c.html();c.replaceWith(a.call(this,b,d))}):(typeof a!=\"string\"&&(a=p(a).detach()),this.each(function(){var b=this.nextSibling,c=this.parentNode;p(this).remove(),b?p(b).before(a):p(c).append(a)}))},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){a=[].concat.apply([],a);var e,f,g,h,i=0,j=a[0],k=[],l=this.length;if(!p.support.checkClone&&l>1&&typeof j==\"string\"&&bw.test(j))return this.each(function(){p(this).domManip(a,c,d)});if(p.isFunction(j))return this.each(function(e){var f=p(this);a[0]=j.call(this,e,c?f.html():b),f.domManip(a,c,d)});if(this[0]){e=p.buildFragment(a,this,k),g=e.fragment,f=g.firstChild,g.childNodes.length===1&&(g=f);if(f){c=c&&p.nodeName(f,\"tr\");for(h=e.cacheable||l-1;i<l;i++)d.call(c&&p.nodeName(this[i],\"table\")?bC(this[i],\"tbody\"):this[i],i===h?g:p.clone(g,!0,!0))}g=f=null,k.length&&p.each(k,function(a,b){b.src?p.ajax?p.ajax({url:b.src,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0}):p.error(\"no ajax\"):p.globalEval((b.text||b.textContent||b.innerHTML||\"\").replace(by,\"\")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),p.buildFragment=function(a,c,d){var f,g,h,i=a[0];return c=c||e,c=!c.nodeType&&c[0]||c,c=c.ownerDocument||c,a.length===1&&typeof i==\"string\"&&i.length<512&&c===e&&i.charAt(0)===\"<\"&&!bt.test(i)&&(p.support.checkClone||!bw.test(i))&&(p.support.html5Clone||!bu.test(i))&&(g=!0,f=p.fragments[i],h=f!==b),f||(f=c.createDocumentFragment(),p.clean(a,c,f,d),g&&(p.fragments[i]=h&&f)),{fragment:f,cacheable:g}},p.fragments={},p.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){p.fn[a]=function(c){var d,e=0,f=[],g=p(c),h=g.length,i=this.length===1&&this[0].parentNode;if((i==null||i&&i.nodeType===11&&i.childNodes.length===1)&&h===1)return g[b](this[0]),this;for(;e<h;e++)d=(e>0?this.clone(!0):this).get(),p(g[e])[b](d),f=f.concat(d);return this.pushStack(f,a,g.selector)}}),p.extend({clone:function(a,b,c){var d,e,f,g;p.support.html5Clone||p.isXMLDoc(a)||!bu.test(\"<\"+a.nodeName+\">\")?g=a.cloneNode(!0):(bB.innerHTML=a.outerHTML,bB.removeChild(g=bB.firstChild));if((!p.support.noCloneEvent||!p.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!p.isXMLDoc(a)){bE(a,g),d=bF(a),e=bF(g);for(f=0;d[f];++f)e[f]&&bE(d[f],e[f])}if(b){bD(a,g);if(c){d=bF(a),e=bF(g);for(f=0;d[f];++f)bD(d[f],e[f])}}return d=e=null,g},clean:function(a,b,c,d){var f,g,h,i,j,k,l,m,n,o,q,r,s=b===e&&bA,t=[];if(!b||typeof b.createDocumentFragment==\"undefined\")b=e;for(f=0;(h=a[f])!=null;f++){typeof h==\"number\"&&(h+=\"\");if(!h)continue;if(typeof h==\"string\")if(!br.test(h))h=b.createTextNode(h);else{s=s||bk(b),l=b.createElement(\"div\"),s.appendChild(l),h=h.replace(bo,\"<$1></$2>\"),i=(bp.exec(h)||[\"\",\"\"])[1].toLowerCase(),j=bz[i]||bz._default,k=j[0],l.innerHTML=j[1]+h+j[2];while(k--)l=l.lastChild;if(!p.support.tbody){m=bq.test(h),n=i===\"table\"&&!m?l.firstChild&&l.firstChild.childNodes:j[1]===\"<table>\"&&!m?l.childNodes:[];for(g=n.length-1;g>=0;--g)p.nodeName(n[g],\"tbody\")&&!n[g].childNodes.length&&n[g].parentNode.removeChild(n[g])}!p.support.leadingWhitespace&&bn.test(h)&&l.insertBefore(b.createTextNode(bn.exec(h)[0]),l.firstChild),h=l.childNodes,l.parentNode.removeChild(l)}h.nodeType?t.push(h):p.merge(t,h)}l&&(h=l=s=null);if(!p.support.appendChecked)for(f=0;(h=t[f])!=null;f++)p.nodeName(h,\"input\")?bG(h):typeof h.getElementsByTagName!=\"undefined\"&&p.grep(h.getElementsByTagName(\"input\"),bG);if(c){q=function(a){if(!a.type||bx.test(a.type))return d?d.push(a.parentNode?a.parentNode.removeChild(a):a):c.appendChild(a)};for(f=0;(h=t[f])!=null;f++)if(!p.nodeName(h,\"script\")||!q(h))c.appendChild(h),typeof h.getElementsByTagName!=\"undefined\"&&(r=p.grep(p.merge([],h.getElementsByTagName(\"script\")),q),t.splice.apply(t,[f+1,0].concat(r)),f+=r.length)}return t},cleanData:function(a,b){var c,d,e,f,g=0,h=p.expando,i=p.cache,j=p.support.deleteExpando,k=p.event.special;for(;(e=a[g])!=null;g++)if(b||p.acceptData(e)){d=e[h],c=d&&i[d];if(c){if(c.events)for(f in c.events)k[f]?p.event.remove(e,f):p.removeEvent(e,f,c.handle);i[d]&&(delete i[d],j?delete e[h]:e.removeAttribute?e.removeAttribute(h):e[h]=null,p.deletedIds.push(d))}}}}),function(){var a,b;p.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \\/]([\\w.]+)/.exec(a)||/(webkit)[ \\/]([\\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(a)||/(msie) ([\\w.]+)/.exec(a)||a.indexOf(\"compatible\")<0&&/(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(a)||[];return{browser:b[1]||\"\",version:b[2]||\"0\"}},a=p.uaMatch(g.userAgent),b={},a.browser&&(b[a.browser]=!0,b.version=a.version),b.chrome?b.webkit=!0:b.webkit&&(b.safari=!0),p.browser=b,p.sub=function(){function a(b,c){return new a.fn.init(b,c)}p.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function c(c,d){return d&&d instanceof p&&!(d instanceof a)&&(d=a(d)),p.fn.init.call(this,c,d,b)},a.fn.init.prototype=a.fn;var b=a(e);return a}}();var bH,bI,bJ,bK=/alpha\\([^)]*\\)/i,bL=/opacity=([^)]*)/,bM=/^(top|right|bottom|left)$/,bN=/^(none|table(?!-c[ea]).+)/,bO=/^margin/,bP=new RegExp(\"^(\"+q+\")(.*)$\",\"i\"),bQ=new RegExp(\"^(\"+q+\")(?!px)[a-z%]+$\",\"i\"),bR=new RegExp(\"^([-+])=(\"+q+\")\",\"i\"),bS={},bT={position:\"absolute\",visibility:\"hidden\",display:\"block\"},bU={letterSpacing:0,fontWeight:400},bV=[\"Top\",\"Right\",\"Bottom\",\"Left\"],bW=[\"Webkit\",\"O\",\"Moz\",\"ms\"],bX=p.fn.toggle;p.fn.extend({css:function(a,c){return p.access(this,function(a,c,d){return d!==b?p.style(a,c,d):p.css(a,c)},a,c,arguments.length>1)},show:function(){return b$(this,!0)},hide:function(){return b$(this)},toggle:function(a,b){var c=typeof a==\"boolean\";return p.isFunction(a)&&p.isFunction(b)?bX.apply(this,arguments):this.each(function(){(c?a:bZ(this))?p(this).show():p(this).hide()})}}),p.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bH(a,\"opacity\");return c===\"\"?\"1\":c}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":p.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(a,c,d,e){if(!a||a.nodeType===3||a.nodeType===8||!a.style)return;var f,g,h,i=p.camelCase(c),j=a.style;c=p.cssProps[i]||(p.cssProps[i]=bY(j,i)),h=p.cssHooks[c]||p.cssHooks[i];if(d===b)return h&&\"get\"in h&&(f=h.get(a,!1,e))!==b?f:j[c];g=typeof d,g===\"string\"&&(f=bR.exec(d))&&(d=(f[1]+1)*f[2]+parseFloat(p.css(a,c)),g=\"number\");if(d==null||g===\"number\"&&isNaN(d))return;g===\"number\"&&!p.cssNumber[i]&&(d+=\"px\");if(!h||!(\"set\"in h)||(d=h.set(a,d,e))!==b)try{j[c]=d}catch(k){}},css:function(a,c,d,e){var f,g,h,i=p.camelCase(c);return c=p.cssProps[i]||(p.cssProps[i]=bY(a.style,i)),h=p.cssHooks[c]||p.cssHooks[i],h&&\"get\"in h&&(f=h.get(a,!0,e)),f===b&&(f=bH(a,c)),f===\"normal\"&&c in bU&&(f=bU[c]),d||e!==b?(g=parseFloat(f),d||p.isNumeric(g)?g||0:f):f},swap:function(a,b,c){var d,e,f={};for(e in b)f[e]=a.style[e],a.style[e]=b[e];d=c.call(a);for(e in b)a.style[e]=f[e];return d}}),a.getComputedStyle?bH=function(b,c){var d,e,f,g,h=a.getComputedStyle(b,null),i=b.style;return h&&(d=h[c],d===\"\"&&!p.contains(b.ownerDocument,b)&&(d=p.style(b,c)),bQ.test(d)&&bO.test(c)&&(e=i.width,f=i.minWidth,g=i.maxWidth,i.minWidth=i.maxWidth=i.width=d,d=h.width,i.width=e,i.minWidth=f,i.maxWidth=g)),d}:e.documentElement.currentStyle&&(bH=function(a,b){var c,d,e=a.currentStyle&&a.currentStyle[b],f=a.style;return e==null&&f&&f[b]&&(e=f[b]),bQ.test(e)&&!bM.test(b)&&(c=f.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b===\"fontSize\"?\"1em\":e,e=f.pixelLeft+\"px\",f.left=c,d&&(a.runtimeStyle.left=d)),e===\"\"?\"auto\":e}),p.each([\"height\",\"width\"],function(a,b){p.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth===0&&bN.test(bH(a,\"display\"))?p.swap(a,bT,function(){return cb(a,b,d)}):cb(a,b,d)},set:function(a,c,d){return b_(a,c,d?ca(a,b,d,p.support.boxSizing&&p.css(a,\"boxSizing\")===\"border-box\"):0)}}}),p.support.opacity||(p.cssHooks.opacity={get:function(a,b){return bL.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":b?\"1\":\"\"},set:function(a,b){var c=a.style,d=a.currentStyle,e=p.isNumeric(b)?\"alpha(opacity=\"+b*100+\")\":\"\",f=d&&d.filter||c.filter||\"\";c.zoom=1;if(b>=1&&p.trim(f.replace(bK,\"\"))===\"\"&&c.removeAttribute){c.removeAttribute(\"filter\");if(d&&!d.filter)return}c.filter=bK.test(f)?f.replace(bK,e):f+\" \"+e}}),p(function(){p.support.reliableMarginRight||(p.cssHooks.marginRight={get:function(a,b){return p.swap(a,{display:\"inline-block\"},function(){if(b)return bH(a,\"marginRight\")})}}),!p.support.pixelPosition&&p.fn.position&&p.each([\"top\",\"left\"],function(a,b){p.cssHooks[b]={get:function(a,c){if(c){var d=bH(a,b);return bQ.test(d)?p(a).position()[b]+\"px\":d}}}})}),p.expr&&p.expr.filters&&(p.expr.filters.hidden=function(a){return a.offsetWidth===0&&a.offsetHeight===0||!p.support.reliableHiddenOffsets&&(a.style&&a.style.display||bH(a,\"display\"))===\"none\"},p.expr.filters.visible=function(a){return!p.expr.filters.hidden(a)}),p.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){p.cssHooks[a+b]={expand:function(c){var d,e=typeof c==\"string\"?c.split(\" \"):[c],f={};for(d=0;d<4;d++)f[a+bV[d]+b]=e[d]||e[d-2]||e[0];return f}},bO.test(a)||(p.cssHooks[a+b].set=b_)});var cd=/%20/g,ce=/\\[\\]$/,cf=/\\r?\\n/g,cg=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,ch=/^(?:select|textarea)/i;p.fn.extend({serialize:function(){return p.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?p.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ch.test(this.nodeName)||cg.test(this.type))}).map(function(a,b){var c=p(this).val();return c==null?null:p.isArray(c)?p.map(c,function(a,c){return{name:b.name,value:a.replace(cf,\"\\r\\n\")}}):{name:b.name,value:c.replace(cf,\"\\r\\n\")}}).get()}}),p.param=function(a,c){var d,e=[],f=function(a,b){b=p.isFunction(b)?b():b==null?\"\":b,e[e.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};c===b&&(c=p.ajaxSettings&&p.ajaxSettings.traditional);if(p.isArray(a)||a.jquery&&!p.isPlainObject(a))p.each(a,function(){f(this.name,this.value)});else for(d in a)ci(d,a[d],c,f);return e.join(\"&\").replace(cd,\"+\")};var cj,ck,cl=/#.*$/,cm=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg,cn=/^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,co=/^(?:GET|HEAD)$/,cp=/^\\/\\//,cq=/\\?/,cr=/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,cs=/([?&])_=[^&]*/,ct=/^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,cu=p.fn.load,cv={},cw={},cx=[\"*/\"]+[\"*\"];try{ck=f.href}catch(cy){ck=e.createElement(\"a\"),ck.href=\"\",ck=ck.href}cj=ct.exec(ck.toLowerCase())||[],p.fn.load=function(a,c,d){if(typeof a!=\"string\"&&cu)return cu.apply(this,arguments);if(!this.length)return this;var e,f,g,h=this,i=a.indexOf(\" \");return i>=0&&(e=a.slice(i,a.length),a=a.slice(0,i)),p.isFunction(c)?(d=c,c=b):c&&typeof c==\"object\"&&(f=\"POST\"),p.ajax({url:a,type:f,dataType:\"html\",data:c,complete:function(a,b){d&&h.each(d,g||[a.responseText,b,a])}}).done(function(a){g=arguments,h.html(e?p(\"<div>\").append(a.replace(cr,\"\")).find(e):a)}),this},p.each(\"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split(\" \"),function(a,b){p.fn[b]=function(a){return this.on(b,a)}}),p.each([\"get\",\"post\"],function(a,c){p[c]=function(a,d,e,f){return p.isFunction(d)&&(f=f||e,e=d,d=b),p.ajax({type:c,url:a,data:d,success:e,dataType:f})}}),p.extend({getScript:function(a,c){return p.get(a,b,c,\"script\")},getJSON:function(a,b,c){return p.get(a,b,c,\"json\")},ajaxSetup:function(a,b){return b?cB(a,p.ajaxSettings):(b=a,a=p.ajaxSettings),cB(a,b),a},ajaxSettings:{url:ck,isLocal:cn.test(cj[1]),global:!0,type:\"GET\",contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",processData:!0,async:!0,accepts:{xml:\"application/xml, text/xml\",html:\"text/html\",text:\"text/plain\",json:\"application/json, text/javascript\",\"*\":cx},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\"},converters:{\"* text\":a.String,\"text html\":!0,\"text json\":p.parseJSON,\"text xml\":p.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:cz(cv),ajaxTransport:cz(cw),ajax:function(a,c){function y(a,c,f,i){var k,s,t,u,w,y=c;if(v===2)return;v=2,h&&clearTimeout(h),g=b,e=i||\"\",x.readyState=a>0?4:0,f&&(u=cC(l,x,f));if(a>=200&&a<300||a===304)l.ifModified&&(w=x.getResponseHeader(\"Last-Modified\"),w&&(p.lastModified[d]=w),w=x.getResponseHeader(\"Etag\"),w&&(p.etag[d]=w)),a===304?(y=\"notmodified\",k=!0):(k=cD(l,u),y=k.state,s=k.data,t=k.error,k=!t);else{t=y;if(!y||a)y=\"error\",a<0&&(a=0)}x.status=a,x.statusText=(c||y)+\"\",k?o.resolveWith(m,[s,y,x]):o.rejectWith(m,[x,y,t]),x.statusCode(r),r=b,j&&n.trigger(\"ajax\"+(k?\"Success\":\"Error\"),[x,l,k?s:t]),q.fireWith(m,[x,y]),j&&(n.trigger(\"ajaxComplete\",[x,l]),--p.active||p.event.trigger(\"ajaxStop\"))}typeof a==\"object\"&&(c=a,a=b),c=c||{};var d,e,f,g,h,i,j,k,l=p.ajaxSetup({},c),m=l.context||l,n=m!==l&&(m.nodeType||m instanceof p)?p(m):p.event,o=p.Deferred(),q=p.Callbacks(\"once memory\"),r=l.statusCode||{},t={},u={},v=0,w=\"canceled\",x={readyState:0,setRequestHeader:function(a,b){if(!v){var c=a.toLowerCase();a=u[c]=u[c]||a,t[a]=b}return this},getAllResponseHeaders:function(){return v===2?e:null},getResponseHeader:function(a){var c;if(v===2){if(!f){f={};while(c=cm.exec(e))f[c[1].toLowerCase()]=c[2]}c=f[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){return v||(l.mimeType=a),this},abort:function(a){return a=a||w,g&&g.abort(a),y(0,a),this}};o.promise(x),x.success=x.done,x.error=x.fail,x.complete=q.add,x.statusCode=function(a){if(a){var b;if(v<2)for(b in a)r[b]=[r[b],a[b]];else b=a[x.status],x.always(b)}return this},l.url=((a||l.url)+\"\").replace(cl,\"\").replace(cp,cj[1]+\"//\"),l.dataTypes=p.trim(l.dataType||\"*\").toLowerCase().split(s),l.crossDomain==null&&(i=ct.exec(l.url.toLowerCase())||!1,l.crossDomain=i&&i.join(\":\")+(i[3]?\"\":i[1]===\"http:\"?80:443)!==cj.join(\":\")+(cj[3]?\"\":cj[1]===\"http:\"?80:443)),l.data&&l.processData&&typeof l.data!=\"string\"&&(l.data=p.param(l.data,l.traditional)),cA(cv,l,c,x);if(v===2)return x;j=l.global,l.type=l.type.toUpperCase(),l.hasContent=!co.test(l.type),j&&p.active++===0&&p.event.trigger(\"ajaxStart\");if(!l.hasContent){l.data&&(l.url+=(cq.test(l.url)?\"&\":\"?\")+l.data,delete l.data),d=l.url;if(l.cache===!1){var z=p.now(),A=l.url.replace(cs,\"$1_=\"+z);l.url=A+(A===l.url?(cq.test(l.url)?\"&\":\"?\")+\"_=\"+z:\"\")}}(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&x.setRequestHeader(\"Content-Type\",l.contentType),l.ifModified&&(d=d||l.url,p.lastModified[d]&&x.setRequestHeader(\"If-Modified-Since\",p.lastModified[d]),p.etag[d]&&x.setRequestHeader(\"If-None-Match\",p.etag[d])),x.setRequestHeader(\"Accept\",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+(l.dataTypes[0]!==\"*\"?\", \"+cx+\"; q=0.01\":\"\"):l.accepts[\"*\"]);for(k in l.headers)x.setRequestHeader(k,l.headers[k]);if(!l.beforeSend||l.beforeSend.call(m,x,l)!==!1&&v!==2){w=\"abort\";for(k in{success:1,error:1,complete:1})x[k](l[k]);g=cA(cw,l,c,x);if(!g)y(-1,\"No Transport\");else{x.readyState=1,j&&n.trigger(\"ajaxSend\",[x,l]),l.async&&l.timeout>0&&(h=setTimeout(function(){x.abort(\"timeout\")},l.timeout));try{v=1,g.send(t,y)}catch(B){if(v<2)y(-1,B);else throw B}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var cE=[],cF=/\\?/,cG=/(=)\\?(?=&|$)|\\?\\?/,cH=p.now();p.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=cE.pop()||p.expando+\"_\"+cH++;return this[a]=!0,a}}),p.ajaxPrefilter(\"json jsonp\",function(c,d,e){var f,g,h,i=c.data,j=c.url,k=c.jsonp!==!1,l=k&&cG.test(j),m=k&&!l&&typeof i==\"string\"&&!(c.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&cG.test(i);if(c.dataTypes[0]===\"jsonp\"||l||m)return f=c.jsonpCallback=p.isFunction(c.jsonpCallback)?c.jsonpCallback():c.jsonpCallback,g=a[f],l?c.url=j.replace(cG,\"$1\"+f):m?c.data=i.replace(cG,\"$1\"+f):k&&(c.url+=(cF.test(j)?\"&\":\"?\")+c.jsonp+\"=\"+f),c.converters[\"script json\"]=function(){return h||p.error(f+\" was not called\"),h[0]},c.dataTypes[0]=\"json\",a[f]=function(){h=arguments},e.always(function(){a[f]=g,c[f]&&(c.jsonpCallback=d.jsonpCallback,cE.push(f)),h&&p.isFunction(g)&&g(h[0]),h=g=b}),\"script\"}),p.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/javascript|ecmascript/},converters:{\"text script\":function(a){return p.globalEval(a),a}}}),p.ajaxPrefilter(\"script\",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\",a.global=!1)}),p.ajaxTransport(\"script\",function(a){if(a.crossDomain){var c,d=e.head||e.getElementsByTagName(\"head\")[0]||e.documentElement;return{send:function(f,g){c=e.createElement(\"script\"),c.async=\"async\",a.scriptCharset&&(c.charset=a.scriptCharset),c.src=a.url,c.onload=c.onreadystatechange=function(a,e){if(e||!c.readyState||/loaded|complete/.test(c.readyState))c.onload=c.onreadystatechange=null,d&&c.parentNode&&d.removeChild(c),c=b,e||g(200,\"success\")},d.insertBefore(c,d.firstChild)},abort:function(){c&&c.onload(0,1)}}}});var cI,cJ=a.ActiveXObject?function(){for(var a in cI)cI[a](0,1)}:!1,cK=0;p.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&cL()||cM()}:cL,function(a){p.extend(p.support,{ajax:!!a,cors:!!a&&\"withCredentials\"in a})}(p.ajaxSettings.xhr()),p.support.ajax&&p.ajaxTransport(function(c){if(!c.crossDomain||p.support.cors){var d;return{send:function(e,f){var g,h,i=c.xhr();c.username?i.open(c.type,c.url,c.async,c.username,c.password):i.open(c.type,c.url,c.async);if(c.xhrFields)for(h in c.xhrFields)i[h]=c.xhrFields[h];c.mimeType&&i.overrideMimeType&&i.overrideMimeType(c.mimeType),!c.crossDomain&&!e[\"X-Requested-With\"]&&(e[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(h in e)i.setRequestHeader(h,e[h])}catch(j){}i.send(c.hasContent&&c.data||null),d=function(a,e){var h,j,k,l,m;try{if(d&&(e||i.readyState===4)){d=b,g&&(i.onreadystatechange=p.noop,cJ&&delete cI[g]);if(e)i.readyState!==4&&i.abort();else{h=i.status,k=i.getAllResponseHeaders(),l={},m=i.responseXML,m&&m.documentElement&&(l.xml=m);try{l.text=i.responseText}catch(a){}try{j=i.statusText}catch(n){j=\"\"}!h&&c.isLocal&&!c.crossDomain?h=l.text?200:404:h===1223&&(h=204)}}}catch(o){e||f(-1,o)}l&&f(h,j,l,k)},c.async?i.readyState===4?setTimeout(d,0):(g=++cK,cJ&&(cI||(cI={},p(a).unload(cJ)),cI[g]=d),i.onreadystatechange=d):d()},abort:function(){d&&d(0,1)}}}});var cN,cO,cP=/^(?:toggle|show|hide)$/,cQ=new RegExp(\"^(?:([-+])=|)(\"+q+\")([a-z%]*)$\",\"i\"),cR=/queueHooks$/,cS=[cY],cT={\"*\":[function(a,b){var c,d,e=this.createTween(a,b),f=cQ.exec(b),g=e.cur(),h=+g||0,i=1,j=20;if(f){c=+f[2],d=f[3]||(p.cssNumber[a]?\"\":\"px\");if(d!==\"px\"&&h){h=p.css(e.elem,a,!0)||c||1;do i=i||\".5\",h=h/i,p.style(e.elem,a,h+d);while(i!==(i=e.cur()/g)&&i!==1&&--j)}e.unit=d,e.start=h,e.end=f[1]?h+(f[1]+1)*c:c}return e}]};p.Animation=p.extend(cW,{tweener:function(a,b){p.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");var c,d=0,e=a.length;for(;d<e;d++)c=a[d],cT[c]=cT[c]||[],cT[c].unshift(b)},prefilter:function(a,b){b?cS.unshift(a):cS.push(a)}}),p.Tween=cZ,cZ.prototype={constructor:cZ,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(p.cssNumber[c]?\"\":\"px\")},cur:function(){var a=cZ.propHooks[this.prop];return a&&a.get?a.get(this):cZ.propHooks._default.get(this)},run:function(a){var b,c=cZ.propHooks[this.prop];return this.options.duration?this.pos=b=p.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):cZ.propHooks._default.set(this),this}},cZ.prototype.init.prototype=cZ.prototype,cZ.propHooks={_default:{get:function(a){var b;return a.elem[a.prop]==null||!!a.elem.style&&a.elem.style[a.prop]!=null?(b=p.css(a.elem,a.prop,!1,\"\"),!b||b===\"auto\"?0:b):a.elem[a.prop]},set:function(a){p.fx.step[a.prop]?p.fx.step[a.prop](a):a.elem.style&&(a.elem.style[p.cssProps[a.prop]]!=null||p.cssHooks[a.prop])?p.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},cZ.propHooks.scrollTop=cZ.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},p.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=p.fn[b];p.fn[b]=function(d,e,f){return d==null||typeof d==\"boolean\"||!a&&p.isFunction(d)&&p.isFunction(e)?c.apply(this,arguments):this.animate(c$(b,!0),d,e,f)}}),p.fn.extend({fadeTo:function(a,b,c,d){return this.filter(bZ).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=p.isEmptyObject(a),f=p.speed(b,c,d),g=function(){var b=cW(this,p.extend({},a),f);e&&b.stop(!0)};return e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,c,d){var e=function(a){var b=a.stop;delete a.stop,b(d)};return typeof a!=\"string\"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,c=a!=null&&a+\"queueHooks\",f=p.timers,g=p._data(this);if(c)g[c]&&g[c].stop&&e(g[c]);else for(c in g)g[c]&&g[c].stop&&cR.test(c)&&e(g[c]);for(c=f.length;c--;)f[c].elem===this&&(a==null||f[c].queue===a)&&(f[c].anim.stop(d),b=!1,f.splice(c,1));(b||!d)&&p.dequeue(this,a)})}}),p.each({slideDown:c$(\"show\"),slideUp:c$(\"hide\"),slideToggle:c$(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){p.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),p.speed=function(a,b,c){var d=a&&typeof a==\"object\"?p.extend({},a):{complete:c||!c&&b||p.isFunction(a)&&a,duration:a,easing:c&&b||b&&!p.isFunction(b)&&b};d.duration=p.fx.off?0:typeof d.duration==\"number\"?d.duration:d.duration in p.fx.speeds?p.fx.speeds[d.duration]:p.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue=\"fx\";return d.old=d.complete,d.complete=function(){p.isFunction(d.old)&&d.old.call(this),d.queue&&p.dequeue(this,d.queue)},d},p.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},p.timers=[],p.fx=cZ.prototype.init,p.fx.tick=function(){var a,b=p.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||p.fx.stop()},p.fx.timer=function(a){a()&&p.timers.push(a)&&!cO&&(cO=setInterval(p.fx.tick,p.fx.interval))},p.fx.interval=13,p.fx.stop=function(){clearInterval(cO),cO=null},p.fx.speeds={slow:600,fast:200,_default:400},p.fx.step={},p.expr&&p.expr.filters&&(p.expr.filters.animated=function(a){return p.grep(p.timers,function(b){return a===b.elem}).length});var c_=/^(?:body|html)$/i;p.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){p.offset.setOffset(this,a,b)});var c,d,e,f,g,h,i,j={top:0,left:0},k=this[0],l=k&&k.ownerDocument;if(!l)return;return(d=l.body)===k?p.offset.bodyOffset(k):(c=l.documentElement,p.contains(c,k)?(typeof k.getBoundingClientRect!=\"undefined\"&&(j=k.getBoundingClientRect()),e=da(l),f=c.clientTop||d.clientTop||0,g=c.clientLeft||d.clientLeft||0,h=e.pageYOffset||c.scrollTop,i=e.pageXOffset||c.scrollLeft,{top:j.top+h-f,left:j.left+i-g}):j)},p.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;return p.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(p.css(a,\"marginTop\"))||0,c+=parseFloat(p.css(a,\"marginLeft\"))||0),{top:b,left:c}},setOffset:function(a,b,c){var d=p.css(a,\"position\");d===\"static\"&&(a.style.position=\"relative\");var e=p(a),f=e.offset(),g=p.css(a,\"top\"),h=p.css(a,\"left\"),i=(d===\"absolute\"||d===\"fixed\")&&p.inArray(\"auto\",[g,h])>-1,j={},k={},l,m;i?(k=e.position(),l=k.top,m=k.left):(l=parseFloat(g)||0,m=parseFloat(h)||0),p.isFunction(b)&&(b=b.call(a,c,f)),b.top!=null&&(j.top=b.top-f.top+l),b.left!=null&&(j.left=b.left-f.left+m),\"using\"in b?b.using.call(a,j):e.css(j)}},p.fn.extend({position:function(){if(!this[0])return;var a=this[0],b=this.offsetParent(),c=this.offset(),d=c_.test(b[0].nodeName)?{top:0,left:0}:b.offset();return c.top-=parseFloat(p.css(a,\"marginTop\"))||0,c.left-=parseFloat(p.css(a,\"marginLeft\"))||0,d.top+=parseFloat(p.css(b[0],\"borderTopWidth\"))||0,d.left+=parseFloat(p.css(b[0],\"borderLeftWidth\"))||0,{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||e.body;while(a&&!c_.test(a.nodeName)&&p.css(a,\"position\")===\"static\")a=a.offsetParent;return a||e.body})}}),p.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(a,c){var d=/Y/.test(c);p.fn[a]=function(e){return p.access(this,function(a,e,f){var g=da(a);if(f===b)return g?c in g?g[c]:g.document.documentElement[e]:a[e];g?g.scrollTo(d?p(g).scrollLeft():f,d?f:p(g).scrollTop()):a[e]=f},a,e,arguments.length,null)}}),p.each({Height:\"height\",Width:\"width\"},function(a,c){p.each({padding:\"inner\"+a,content:c,\"\":\"outer\"+a},function(d,e){p.fn[e]=function(e,f){var g=arguments.length&&(d||typeof e!=\"boolean\"),h=d||(e===!0||f===!0?\"margin\":\"border\");return p.access(this,function(c,d,e){var f;return p.isWindow(c)?c.document.documentElement[\"client\"+a]:c.nodeType===9?(f=c.documentElement,Math.max(c.body[\"scroll\"+a],f[\"scroll\"+a],c.body[\"offset\"+a],f[\"offset\"+a],f[\"client\"+a])):e===b?p.css(c,d,e,h):p.style(c,d,e,h)},c,g?e:b,g,null)}})}),a.jQuery=a.$=p,typeof define==\"function\"&&define.amd&&define.amd.jQuery&&define(\"jquery\",[],function(){return p})})(window);\n\\ No newline at end of file"},{"sha":"5d61ad6eccd48a8409ef8d73543bbb7d6ebff90c","filename":"console/src/main/webapp/scripts/singlecolumnpalette.js","status":"removed","additions":0,"deletions":46,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/55631b226c05dd7e2d870b856ab217e5c143c855/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fsinglecolumnpalette.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/55631b226c05dd7e2d870b856ab217e5c143c855/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fsinglecolumnpalette.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fsinglecolumnpalette.js?ref=55631b226c05dd7e2d870b856ab217e5c143c855","patch":"@@ -1,46 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-if (typeof(Syncope) == \"undefined\") Syncope = { };\n-if (typeof(Syncope.SingleColumnPalette) == \"undefined\") Syncope.SingleColumnPalette = { };\n-\n-Syncope.SingleColumnPalette.choicesOnFocus=function(choicesId, selectionId, recorderId) {\n-    var selection = Wicket.Palette.$(selectionId);\n-    var selected;\n-    for (var i = 0; i < selection.options.length; i++) {\n-        if (selection.options[i].selected) {\n-            selected = selection.options[i].value;\n-        }\n-    }\n-\n-    if (typeof(selected) == \"undefined\") {\n-        alert(\"Please select an item first\");\n-    } else {\n-        var recorder = Wicket.Palette.$(recorderId);  \n-        \n-        recorder.value=selected + \"|\";\n-        for (var i = 0; i < selection.options.length; i++) {\n-            recorder.value=recorder.value+selection.options[i].value;\n-            if (i+1<selection.options.length) {\n-                recorder.value=recorder.value+\",\";\n-            }\n-        }\n-\n-        if (recorder.onselect != null) {\n-            recorder.onselect();\n-        }\n-    }\n-}"},{"sha":"a3b1147b6883e36f14f206391093c5d21ed90895","filename":"console/src/test/java/org/apache/syncope/console/ConfigurationTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -45,7 +45,7 @@ public void browseEditModal() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//tr/td[3]/span/span[7]/a\");\n+        selenium.click(\"//tr/td[3]/div/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='key:textField']\\\");\", \"30000\");\n \n@@ -106,7 +106,7 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//tr[7]/td[3]/span/span[9]/a\");\n+        selenium.click(\"//tr[7]/td[3]/div/span[9]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n "},{"sha":"63565f658a692ff7e3be05d8cbe927693ca84322","filename":"console/src/test/java/org/apache/syncope/console/ConnInstanceTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -78,7 +78,7 @@ public void browseEditModal() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n-        selenium.click(\"//tr[4]/td[6]/span/span[7]/a\");\n+        selenium.click(\"//tr[4]/td[6]/div/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@name='version:textField']\\\");\", \"30000\");\n \n@@ -98,7 +98,7 @@ public void delete() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n-        selenium.click(\"//tr[4]/td[6]/span/span[9]/a\");\n+        selenium.click(\"//tr[4]/td[6]/div/span[9]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n \n@@ -113,7 +113,7 @@ public void checkConnection() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n-        selenium.click(\"//tr[2]/td[6]/span/span[7]/a\");\n+        selenium.click(\"//tr[2]/td[6]/div/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@name='version:textField']\\\");\", \"30000\");\n "},{"sha":"5642895c33e4623dbe5af8ee48a1a9e95a27e5fc","filename":"console/src/test/java/org/apache/syncope/console/ReportTestITCase.java","status":"modified","additions":11,"deletions":6,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FReportTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -27,17 +27,22 @@ public void readReportlet() {\n         selenium.click(\"css=img[alt=\\\"Reports\\\"]\");\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//table/tbody/tr/td[8]/span/span[7]/a\");\n+        selenium.click(\"//table/tbody/tr/td[8]/div/span[7]/a\");\n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/div/span/div/div[5]/div[2]/span/div[2]/div/a\\\");\", \"30000\");\n+                + \"\\\"//div[2]/form/div[2]/div/div/span/div/div/div/span\\\");\", \"30000\");\n \n-        selenium.click(\"css=img[alt=\\\"plus icon\\\"]\");\n+        selenium.click(\"//div[2]/form/div[2]/div/div/span/div/div[5]/div[2]/div/div[2]/div/a\");\n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/div/div[2]/div[2]/span/select\\\");\", \"30000\");\n+                + \"\\\"//div[2]/form/div[2]/div/div/span/div/div[5]/div[2]/div/div/select\\\");\", \"30000\");\n+\n+        selenium.select(\"//div[2]/form/div[2]/div/div/span/div/div[5]/div[2]/div/div/select\", \"testUserReportlet\");\n+        selenium.click(\"//div[2]/form/div[2]/div/div/span/div/div[5]/div[2]/div[2]/div[2]/a\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\"\n+                + \"\\\"//div[2]/form/div[2]/div/div/div/div/label\\\");\", \"30000\");\n \n         selenium.select(\"//form/div[2]/div/div/div[2]/div[2]/span/select\",\n                 \"label=org.apache.syncope.client.report.UserReportletConf\");\n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//form/div[2]/div[2]/div/span/div/div/span\\\")\", \"30000\");\n \n         selenium.click(\"css=a.w_close\");\n         selenium.click(\"css=a.w_close\");\n@@ -49,7 +54,7 @@ public void executeReport() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//table/tbody/tr/td[8]/span/span[3]/a\");\n+        selenium.click(\"//table/tbody/tr/td[8]/div/span[3]/a\");\n \n         selenium.waitForCondition(\"selenium.isTextPresent(\\\"Operation executed successfully\\\");\", \"30000\");\n     }"},{"sha":"13ba18a4a5d61c8a47929a9761cf7d2f6cd34e12","filename":"console/src/test/java/org/apache/syncope/console/ResourceTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FResourceTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -42,7 +42,7 @@ public void browseEditModal() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//td[4]/span/span[7]/a\");\n+        selenium.click(\"//td[4]/div/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");\n@@ -64,7 +64,7 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//tr[3]/td[4]/span/span[9]/a\");\n+        selenium.click(\"//tr[3]/td[4]/div/span[9]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }\n@@ -75,7 +75,7 @@ public void checkSecurityTab() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//td[4]/span/span[7]/a\");\n+        selenium.click(\"//td[4]/div/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");\n@@ -97,7 +97,7 @@ public void checkConnection() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[span=\\\"ws-target-resource-delete\\\"]/../td[4]/span/span[7]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=\\\"ws-target-resource-delete\\\"]/../td[4]/div/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");"},{"sha":"7d3f3085b36c5070a095943b6dbd1d6eae8e3618","filename":"console/src/test/java/org/apache/syncope/console/RoleTestITCase.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FRoleTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -88,12 +88,12 @@ public void browseEditModal() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//div[2]/form/div[2]/ul/li[1]/a/span\\\");\", \"30000\");\n \n-        selenium.click(\"//div[2]/form/div[2]/ul/li[1]/a/span\");\n         selenium.click(\"//div[2]/form/div[2]/ul/li[2]/a/span\");\n         selenium.click(\"//div[2]/form/div[2]/ul/li[3]/a/span\");\n         selenium.click(\"//div[2]/form/div[2]/ul/li[4]/a/span\");\n         selenium.click(\"//div[2]/form/div[2]/ul/li[5]/a/span\");\n         selenium.click(\"//div[2]/form/div[2]/ul/li[6]/a/span\");\n+        selenium.click(\"//div[2]/form/div[2]/ul/li[7]/a/span\");\n \n         selenium.click(\"css=a.w_close\");\n     }\n@@ -111,7 +111,7 @@ public void checkSecurityTab() {\n         selenium.click(\"//div/form/div[2]/ul/li[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/div[7]/span/div/div[2]/div/label\\\");\", \"30000\");\n+                + \"\\\"//form/div[2]/div/div[7]/span/div/div/div/label\\\");\", \"30000\");\n     }\n \n     @Test\n@@ -122,17 +122,16 @@ public void browseUserEditModal() {\n \n         selenium.click(\"//div[3]/span/div/div/table[2]/tbody/tr/td[3]/table/tbody/tr/td[2]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div/form/div[2]/ul/li[7]/a\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div/form/div[2]/ul/li[7]/a\\\");\", \"50000\");\n \n         selenium.click(\"//div/form/div[2]/ul/li[7]/a\");\n \n         selenium.click(\"//input[@name=\\\"userListContainer:search\\\"]\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//table/tbody/tr/td[4]/span/span[7]/a\\\");\", \"30000\");\n-\n-        selenium.click(\"//div[3]/span[2]/span/span/div/form/div\"\n-                + \"[2]/div[2]/div/div/span/div/table/tbody/tr/td[4]/span/span[7]/a\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//table/tbody/tr/td[4]/div/span[7]/a\\\");\", \"30000\");\n \n+        selenium.click(\"//table/tbody/tr/td[4]/div/span[7]/a\");\n+        \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[2]/div/span/div/div/div[contains(text(),'Username')]\\\");\", \"30000\");\n \n@@ -156,8 +155,7 @@ public void deleteUser() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//span[9]/a\\\");\", \"30000\");\n \n-        selenium.click(\"//div[3]/span[2]/span/span/div/form/div\"\n-                + \"[2]/div[2]/div/div/span/div/table/tbody/tr[2]/td[4]/span/span[9]/a\");\n+        selenium.click(\"//span[9]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }"},{"sha":"7d6fcfdbabf8d82ed42587baf0efe57a221df9d8","filename":"console/src/test/java/org/apache/syncope/console/SchemaTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSchemaTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -51,7 +51,7 @@ public void delete() {\n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n         selenium.click(\"//div[@id='membership']/ul/li[3]/a/span\");\n \n-        selenium.click(\"//table/tbody/tr/td[3]/span/span[9]/a\");\n+        selenium.click(\"//table/tbody/tr/td[3]/div/span[9]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }"},{"sha":"14fefbf543368e0442c3c891136fe93de67cdd72","filename":"console/src/test/java/org/apache/syncope/console/TaskTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -29,11 +29,11 @@ public void execute() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[4]/a\");\n-        selenium.click(\"//*[span=1]/../td[9]/span/span[3]/a\");\n+        selenium.click(\"//*[div=1]/../td[9]/div/span[3]/a\");\n \n         selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Operation executed successfully\\\");\", \"30000\");\n \n-        selenium.click(\"//*[span=1]/../td[9]/span/span[7]/a\");\n+        selenium.click(\"//*[div=1]/../td[9]/div/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[2]/div/div/span/div/div/div[2]/span/input\\\");\", \"30000\");\n@@ -50,7 +50,7 @@ public void delete() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n-        selenium.click(\"//table/tbody/tr/td[7]/span/span[9]/a\");\n+        selenium.click(\"//table/tbody/tr/td[7]/div/span[9]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n "},{"sha":"b87e150e10903c637df73ac8b79874c1ad03045d","filename":"console/src/test/java/org/apache/syncope/console/UserTestITCase.java","status":"modified","additions":12,"deletions":6,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -31,7 +31,8 @@ public void browseCreateModal() {\n \n         selenium.click(\"//a[contains(text(),'Create new user')]\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n+        selenium\n+                .waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n@@ -49,7 +50,7 @@ public void browseEditModal() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         //Edit user3\n-        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[span=3]/../td[4]/span/span[7]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=3]/../td[4]/div/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@value='testUsername']\\\");\", \"30000\");\n \n@@ -72,12 +73,14 @@ public void search() {\n         selenium.click(\"link=Search\");\n         selenium.select(\"//td[3]/select\", \"label=MEMBERSHIP\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//td[4]/select[option='8 otherchild']\\\");\", \"30000\");\n+        selenium\n+                .waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//td[4]/select[option='3 citizen']\\\");\", \"30000\");\n \n-        selenium.select(\"//td[4]/select\", \"label=8 otherchild\");\n+        selenium.select(\"//td[4]/select\", \"label=3 citizen\");\n         selenium.click(\"name=search\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//*[@id='users-contain']//*[span=1]\\\");\", \"30000\");\n+        selenium.waitForCondition(\n+                \"selenium.isElementPresent(\\\"//*[@id='users-contain']//*[div=2]\\\");\", \"30000\");\n     }\n \n     @Test\n@@ -86,14 +89,17 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[span=4]/../td[4]/span/span[9]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=4]/../td[4]/div/span[9]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//div[@id='propagation']/span\\\");\", \"30000\");\n \n         selenium.click(\"//span/span/div/a\");\n \n+        // it depends on the execution order of tests: resources\n+        // 'ws-target-resource-delete' could have been deleted from\n+        // ResourceTestITCase#delete\n         selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Operation executed successfully\\\");\", \"30000\");\n     }\n }"},{"sha":"84f741c14fa28509f356bdffbb33555bff8a4140","filename":"core/pom.xml","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -637,7 +637,6 @@ under the License.\n         <includes>\n           <include>LICENSE</include>\n           <include>NOTICE</include>\n-          <include>DISCLAIMER</include>\n         </includes>\n       </resource>\n     </resources>\n@@ -674,7 +673,7 @@ under the License.\n             <artifactId>maven-surefire-plugin</artifactId>\n             <inherited>true</inherited>\n             <configuration>\n-              <skip>true</skip>\n+              <skipTests>true</skipTests>\n             </configuration>\n           </plugin>\n "},{"sha":"2ce394ff1db350e3f3c69f40ee21cb46b6a9deed","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -24,6 +24,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.Notification;\n import org.apache.syncope.core.persistence.beans.NotificationTask;\n import org.apache.syncope.core.persistence.beans.SyncopeConf;\n@@ -32,16 +33,18 @@\n import org.apache.syncope.core.persistence.beans.user.UAttr;\n import org.apache.syncope.core.persistence.beans.user.UDerAttr;\n import org.apache.syncope.core.persistence.beans.user.UVirAttr;\n+import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.NotificationDAO;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.persistence.dao.UserSearchDAO;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.ConnObjectUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.NotFoundException;\n+import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.IntMappingType;\n import org.apache.velocity.app.VelocityEngine;\n import org.apache.velocity.exception.VelocityException;\n@@ -89,7 +92,7 @@ public class NotificationManager {\n      * User Search DAO.\n      */\n     @Autowired\n-    private UserSearchDAO searchDAO;\n+    private AttributableSearchDAO searchDAO;\n \n     /**\n      * Task DAO.\n@@ -124,11 +127,11 @@ private NotificationTask getNotificationTask(final Notification notification, fi\n \n         connObjectUtil.retrieveVirAttrValues(user);\n \n-        final List<SyncopeUser> recipients = new ArrayList<SyncopeUser>();\n+        final List<AbstractAttributable> recipients = new ArrayList<AbstractAttributable>();\n \n         if (notification.getRecipients() != null) {\n-            recipients.addAll(searchDAO.search(EntitlementUtil.getRoleIds(\n-                    entitlementDAO.findAll()), notification.getRecipients()));\n+            recipients.addAll(searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n+                    notification.getRecipients(), AttributableUtil.getInstance(AttributableType.USER)));\n         }\n \n         if (notification.isSelfAsRecipient()) {\n@@ -137,13 +140,11 @@ private NotificationTask getNotificationTask(final Notification notification, fi\n \n         Set<String> recipientEmails = new HashSet<String>();\n \n-        for (SyncopeUser recipient : recipients) {\n-\n+        for (AbstractAttributable recipient : recipients) {\n             connObjectUtil.retrieveVirAttrValues(recipient);\n \n-            String email = getRecipientEmail(\n-                    notification.getRecipientAttrType(), notification.getRecipientAttrName(), recipient);\n-\n+            String email = getRecipientEmail(notification.getRecipientAttrType(),\n+                    notification.getRecipientAttrName(), (SyncopeUser) recipient);\n             if (email == null) {\n                 LOG.warn(\"{} cannot be notified: {} not found\", recipient, notification.getRecipientAttrName());\n             } else {\n@@ -196,15 +197,15 @@ public void createTasks(final Long userId, final Set<String> performedTasks)\n         }\n \n         for (Notification notification : notificationDAO.findAll()) {\n-            if (searchDAO.matches(user, notification.getAbout())) {\n+            if (searchDAO.matches(user, notification.getAbout(), AttributableUtil.getInstance(AttributableType.USER))) {\n                 Set<String> events = new HashSet<String>(notification.getEvents());\n                 events.retainAll(performedTasks);\n \n-                if (!events.isEmpty()) {\n+                if (events.isEmpty()) {\n+                    LOG.debug(\"No events found about {}\", user);\n+                } else {\n                     LOG.debug(\"Creating notification task for events {} about {}\", events, user);\n                     taskDAO.save(getNotificationTask(notification, user));\n-                } else {\n-                    LOG.debug(\"No events found about {}\", user);\n                 }\n             }\n         }"},{"sha":"2345ab877e56ac377b8895278d53cd760192ee09","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":35,"deletions":11,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -139,10 +139,16 @@ public class ExternalResource extends AbstractBaseBean {\n     private String xmlConfiguration;\n \n     /**\n-     * SyncToken for calling ConnId's sync().\n+     * SyncToken for calling ConnId's sync() on users.\n      */\n     @Lob\n-    private String serializedSyncToken;\n+    private String userializedSyncToken;\n+\n+    /**\n+     * SyncToken for calling ConnId's sync() on roles.\n+     */\n+    @Lob\n+    private String rserializedSyncToken;\n \n     /**\n      * (Optional) class for PropagationAction.\n@@ -307,22 +313,40 @@ public Set<ConnConfProperty> getConfiguration() {\n         return result;\n     }\n \n-    public String getSerializedSyncToken() {\n-        return serializedSyncToken;\n+    public String getUserializedSyncToken() {\n+        return userializedSyncToken;\n+    }\n+\n+    public SyncToken getUsyncToken() {\n+        return userializedSyncToken == null\n+                ? null\n+                : XMLSerializer.<SyncToken>deserialize(userializedSyncToken);\n+    }\n+\n+    public void setUserializedSyncToken(final String serializedSyncToken) {\n+        this.userializedSyncToken = serializedSyncToken;\n+    }\n+\n+    public void setUsyncToken(final SyncToken syncToken) {\n+        userializedSyncToken = XMLSerializer.serialize(syncToken);\n+    }\n+\n+    public String getRserializedSyncToken() {\n+        return rserializedSyncToken;\n     }\n \n-    public SyncToken getSyncToken() {\n-        return serializedSyncToken == null\n+    public SyncToken getRsyncToken() {\n+        return rserializedSyncToken == null\n                 ? null\n-                : XMLSerializer.<SyncToken>deserialize(serializedSyncToken);\n+                : XMLSerializer.<SyncToken>deserialize(rserializedSyncToken);\n     }\n \n-    public void setSerializedSyncToken(final String serializedSyncToken) {\n-        this.serializedSyncToken = serializedSyncToken;\n+    public void setRserializedSyncToken(final String serializedSyncToken) {\n+        this.rserializedSyncToken = serializedSyncToken;\n     }\n \n-    public void setSyncToken(final SyncToken syncToken) {\n-        serializedSyncToken = XMLSerializer.serialize(syncToken);\n+    public void setRsyncToken(final SyncToken syncToken) {\n+        rserializedSyncToken = XMLSerializer.serialize(syncToken);\n     }\n \n     public String getActionsClassName() {"},{"sha":"1ebf7b16ed15b33c84c9e01aa41bd30f5cd0cad6","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/SyncTask.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -24,6 +24,7 @@\n import javax.persistence.ManyToOne;\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n+import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.client.util.XMLSerializer;\n import org.apache.syncope.core.persistence.validation.entity.SyncTaskCheck;\n@@ -44,6 +45,9 @@ public class SyncTask extends SchedTask {\n     @Lob\n     private String userTemplate;\n \n+    @Lob\n+    private String roleTemplate;\n+\n     @Basic\n     @Min(0)\n     @Max(1)\n@@ -102,6 +106,16 @@ public void setUserTemplate(final UserTO userTemplate) {\n         this.userTemplate = XMLSerializer.serialize(userTemplate);\n     }\n \n+    public RoleTO getRoleTemplate() {\n+        return userTemplate == null\n+                ? new RoleTO()\n+                : XMLSerializer.<RoleTO>deserialize(roleTemplate);\n+    }\n+\n+    public void setUserTemplate(final RoleTO roleTemplate) {\n+        this.roleTemplate = XMLSerializer.serialize(roleTemplate);\n+    }\n+\n     public boolean isPerformCreate() {\n         return isBooleanAsInteger(performCreate);\n     }"},{"sha":"5525d183bec5f11a9d7157c502968f95fc370eb8","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/AttributableDAO.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableDAO.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.dao;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n+import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.rest.controller.InvalidSearchConditionException;\n+import org.apache.syncope.core.util.AttributableUtil;\n+\n+public interface AttributableDAO extends DAO {\n+\n+    <T extends AbstractAttributable> List<T> findByAttrValue(String schemaName,\n+            AbstractAttrValue attrValue, AttributableUtil attrUtil);\n+\n+    <T extends AbstractAttributable> AbstractAttributable findByAttrUniqueValue(String schemaName,\n+            AbstractAttrValue attrUniqueValue, AttributableUtil attrUtil);\n+\n+    <T extends AbstractAttributable> List<T> findByDerAttrValue(String schemaName, String value,\n+            AttributableUtil attrUtil) throws InvalidSearchConditionException;\n+\n+    <T extends AbstractAttributable> List<T> findByResource(ExternalResource resource, Class<T> reference);\n+}"},{"sha":"15492edb840ae8bac45a25f6058ecdc2cd565fb4","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/AttributableSearchDAO.java","status":"renamed","additions":21,"deletions":11,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchDAO.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -21,39 +21,49 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.client.search.NodeCond;\n-import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.util.AttributableUtil;\n \n-public interface UserSearchDAO extends DAO {\n+public interface AttributableSearchDAO extends DAO {\n \n     /**\n      * @param adminRoles the set of admin roles owned by the caller\n      * @param searchCondition the search condition\n+     * @param attrUtil AttributeUtil\n      * @return size of search result\n      */\n-    int count(Set<Long> adminRoles, NodeCond searchCondition);\n+    int count(Set<Long> adminRoles, NodeCond searchCondition, AttributableUtil attrUtil);\n \n     /**\n      * @param adminRoles the set of admin roles owned by the caller\n      * @param searchCondition the search condition\n-     * @return the list of users matching the given search condition\n+     * @param attrUtil AttributeUtil\n+     * @param <T> user/role\n+     * @return the list of users/roles matching the given search condition\n      */\n-    List<SyncopeUser> search(Set<Long> adminRoles, NodeCond searchCondition);\n+    <T extends AbstractAttributable> List<T> search(Set<Long> adminRoles, NodeCond searchCondition,\n+            AttributableUtil attrUtil);\n \n     /**\n      * @param adminRoles the set of admin roles owned by the caller\n      * @param searchCondition the search condition\n      * @param page position of the first result, start from 1\n      * @param itemsPerPage number of results per page\n-     * @return the list of users matching the given search condition\n+     * @param attrUtil AttributeUtil\n+     * @param <T> user/role\n+     * @return the list of users/roles matching the given search condition (in the given page)\n      */\n-    List<SyncopeUser> search(Set<Long> adminRoles, NodeCond searchCondition, int page, int itemsPerPage);\n+    <T extends AbstractAttributable> List<T> search(Set<Long> adminRoles, NodeCond searchCondition,\n+            int page, int itemsPerPage, AttributableUtil attrUtil);\n \n     /**\n-     * Verify if user matched the given search condition.\n+     * Verify if user/role matches the given search condition.\n      *\n-     * @param user to be checked\n+     * @param subject to be checked\n      * @param searchCondition to be verified\n-     * @return true if user matched searchCondition\n+     * @param attrUtil AttributeUtil\n+     * @param <T> user/role\n+     * @return true if user/role matches searchCondition\n      */\n-    boolean matches(SyncopeUser user, NodeCond searchCondition);\n+    <T extends AbstractAttributable> boolean matches(T subject, NodeCond searchCondition, AttributableUtil attrUtil);\n }","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/UserSearchDAO.java"},{"sha":"262bc102b7d628cc2ffcaeb51f32fc425f094dee","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/RoleDAO.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -24,9 +24,11 @@\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n+import org.apache.syncope.core.rest.controller.InvalidSearchConditionException;\n \n-public interface RoleDAO extends DAO {\n+public interface RoleDAO extends AttributableDAO {\n \n     SyncopeRole find(Long id);\n \n@@ -38,14 +40,20 @@ public interface RoleDAO extends DAO {\n \n     List<SyncopeRole> findByEntitlement(final Entitlement entitlement);\n \n-    List<SyncopeRole> findByResource(ExternalResource resource);\n-\n     List<SyncopeRole> findAncestors(SyncopeRole role);\n \n     List<SyncopeRole> findChildren(SyncopeRole role);\n \n     List<SyncopeRole> findDescendants(SyncopeRole role);\n \n+    List<SyncopeRole> findByDerAttrValue(String schemaName, String value) throws InvalidSearchConditionException;\n+\n+    List<SyncopeRole> findByAttrValue(String schemaName, UAttrValue attrValue);\n+\n+    SyncopeRole findByAttrUniqueValue(String schemaName, UAttrValue attrUniqueValue);\n+\n+    List<SyncopeRole> findByResource(ExternalResource resource);\n+\n     List<SyncopeRole> findAll();\n \n     List<Membership> findMemberships(SyncopeRole role);"},{"sha":"bcec899c519f1c5b9ead734f2ca2634739fd6998","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/UserDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -26,7 +26,7 @@\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.apache.syncope.core.rest.controller.InvalidSearchConditionException;\n \n-public interface UserDAO extends DAO {\n+public interface UserDAO extends AttributableDAO {\n \n     SyncopeUser find(Long id);\n "},{"sha":"6408a6ccd6d499d5c194f8304f8e1f2bf0732513","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AbstractAttributableDAOImpl.java","status":"added","additions":341,"deletions":0,"changes":341,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractAttributableDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractAttributableDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractAttributableDAOImpl.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -0,0 +1,341 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.dao.impl;\n+\n+import java.io.StringReader;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+import javax.persistence.Query;\n+import javax.persistence.TemporalType;\n+import org.apache.commons.jexl2.parser.Parser;\n+import org.apache.commons.jexl2.parser.ParserConstants;\n+import org.apache.commons.jexl2.parser.Token;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n+import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.dao.AttributableDAO;\n+import org.apache.syncope.core.persistence.dao.DerSchemaDAO;\n+import org.apache.syncope.core.persistence.dao.SchemaDAO;\n+import org.apache.syncope.core.rest.controller.InvalidSearchConditionException;\n+import org.apache.syncope.core.util.AttributableUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.util.StringUtils;\n+\n+public abstract class AbstractAttributableDAOImpl extends AbstractDAOImpl implements AttributableDAO {\n+\n+    @Autowired\n+    protected SchemaDAO schemaDAO;\n+\n+    @Autowired\n+    protected DerSchemaDAO derSchemaDAO;\n+\n+    /**\n+     * Split an attribute value recurring on provided literals/tokens.\n+     *\n+     * @param attrValue value to be split\n+     * @param literals literals/tokens\n+     * @return\n+     */\n+    private List<String> split(final String attrValue, final List<String> literals) {\n+        final List<String> attrValues = new ArrayList<String>();\n+\n+        if (literals.isEmpty()) {\n+            attrValues.add(attrValue);\n+        } else {\n+            for (String token : attrValue.split(Pattern.quote(literals.get(0)))) {\n+                attrValues.addAll(split(token, literals.subList(1, literals.size())));\n+            }\n+        }\n+\n+        return attrValues;\n+    }\n+\n+    /**\n+     * Generate one where clause for each different attribute schema into the derived schema expression provided.\n+     *\n+     * @param expression derived schema expression\n+     * @param value derived attribute value\n+     * @return where clauses to use to build the query\n+     * @throws InvalidSearchConditionException in case of errors retrieving identifiers\n+     */\n+    private Set<String> getWhereClause(final String expression, final String value, final AttributableUtil attrUtil)\n+            throws InvalidSearchConditionException {\n+\n+        final Parser parser = new Parser(new StringReader(expression));\n+\n+        // Schema names\n+        final List<String> identifiers = new ArrayList<String>();\n+\n+        // Literals\n+        final List<String> literals = new ArrayList<String>();\n+\n+        // Get schema names and literals\n+        Token token;\n+        while ((token = parser.getNextToken()) != null && StringUtils.hasText(token.toString())) {\n+\n+            if (token.kind == ParserConstants.STRING_LITERAL) {\n+                literals.add(token.toString().substring(1, token.toString().length() - 1));\n+            }\n+\n+            if (token.kind == ParserConstants.IDENTIFIER) {\n+                identifiers.add(token.toString());\n+            }\n+        }\n+\n+        // Sort literals in order to process later literals included into others\n+        Collections.sort(literals, new Comparator<String>() {\n+\n+            @Override\n+            public int compare(String t, String t1) {\n+                if (t == null && t1 == null) {\n+                    return 0;\n+                } else if (t != null && t1 == null) {\n+                    return -1;\n+                } else if (t == null && t1 != null) {\n+                    return 1;\n+                } else if (t.length() == t1.length()) {\n+                    return 0;\n+                } else if (t.length() > t1.length()) {\n+                    return -1;\n+                } else {\n+                    return 1;\n+                }\n+            }\n+        });\n+\n+        // Split value on provided literals\n+        final List<String> attrValues = split(value, literals);\n+\n+        if (attrValues.size() != identifiers.size()) {\n+            LOG.error(\"Ambiguous jexl expression resolution.\");\n+            throw new InvalidSearchConditionException(\"literals and values have different size\");\n+        }\n+\n+        // clauses to be used with INTERSECTed queries\n+        final Set<String> clauses = new HashSet<String>();\n+\n+        // builder to build the clauses\n+        final StringBuilder bld = new StringBuilder();\n+\n+        // Contains used identifiers in order to avoid replications\n+        final Set<String> used = new HashSet<String>();\n+\n+        // Create several clauses: one for eanch identifiers\n+        for (int i = 0; i < identifiers.size(); i++) {\n+            if (!used.contains(identifiers.get(i))) {\n+\n+                // verify schema existence and get schema type\n+                AbstractSchema schema = schemaDAO.find(identifiers.get(i), attrUtil.schemaClass());\n+                if (schema == null) {\n+                    LOG.error(\"Invalid schema name '{}'\", identifiers.get(i));\n+                    throw new InvalidSearchConditionException(\"Invalid schema name \" + identifiers.get(i));\n+                }\n+\n+                // clear builder\n+                bld.delete(0, bld.length());\n+\n+                bld.append(\"(\");\n+\n+                // set schema name\n+                bld.append(\"s.name = '\").append(identifiers.get(i)).append(\"'\");\n+\n+                bld.append(\" AND \");\n+\n+                bld.append(\"s.name = a.schema_name\").append(\" AND \");\n+\n+                bld.append(\"a.id = v.attribute_id\");\n+\n+                bld.append(\" AND \");\n+\n+                // use a value clause different for eanch different schema type\n+                switch (schema.getType()) {\n+                    case Boolean:\n+                        bld.append(\"v.booleanValue = '\").append(attrValues.get(i)).append(\"'\");\n+                        break;\n+                    case Long:\n+                        bld.append(\"v.longValue = \").append(attrValues.get(i));\n+                        break;\n+                    case Double:\n+                        bld.append(\"v.doubleValue = \").append(attrValues.get(i));\n+                        break;\n+                    case Date:\n+                        bld.append(\"v.dateValue = '\").append(attrValues.get(i)).append(\"'\");\n+                        break;\n+                    default:\n+                        bld.append(\"v.stringValue = '\").append(attrValues.get(i)).append(\"'\");\n+                }\n+\n+                bld.append(\")\");\n+\n+                used.add(identifiers.get(i));\n+\n+                clauses.add(bld.toString());\n+            }\n+        }\n+\n+        LOG.debug(\"Generated where clauses {}\", clauses);\n+\n+        return clauses;\n+    }\n+\n+    protected abstract <T extends AbstractAttributable> T find(final Long id);\n+\n+    @Override\n+    public <T extends AbstractAttributable> List<T> findByAttrValue(final String schemaName,\n+            final AbstractAttrValue attrValue, final AttributableUtil attrUtil) {\n+\n+        AbstractSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n+        if (schema == null) {\n+            LOG.error(\"Invalid schema name '{}'\", schemaName);\n+            return Collections.EMPTY_LIST;\n+        }\n+\n+        final String entityName = schema.isUniqueConstraint()\n+                ? attrUtil.attrUniqueValueClass().getName()\n+                : attrUtil.attrValueClass().getName();\n+\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + entityName + \" e\"\n+                + \" WHERE e.attribute.schema.name = :schemaName \" + \" AND (e.stringValue IS NOT NULL\"\n+                + \" AND e.stringValue = :stringValue)\" + \" OR (e.booleanValue IS NOT NULL\"\n+                + \" AND e.booleanValue = :booleanValue)\" + \" OR (e.dateValue IS NOT NULL\"\n+                + \" AND e.dateValue = :dateValue)\" + \" OR (e.longValue IS NOT NULL\" + \" AND e.longValue = :longValue)\"\n+                + \" OR (e.doubleValue IS NOT NULL\" + \" AND e.doubleValue = :doubleValue)\");\n+\n+        query.setParameter(\"schemaName\", schemaName);\n+        query.setParameter(\"stringValue\", attrValue.getStringValue());\n+        query.setParameter(\"booleanValue\", attrValue.getBooleanValue() == null\n+                ? null\n+                : attrValue.getBooleanAsInteger(attrValue.getBooleanValue()));\n+        if (attrValue.getDateValue() == null) {\n+            query.setParameter(\"dateValue\", null);\n+        } else {\n+            query.setParameter(\"dateValue\", attrValue.getDateValue(), TemporalType.TIMESTAMP);\n+        }\n+        query.setParameter(\"longValue\", attrValue.getLongValue());\n+        query.setParameter(\"doubleValue\", attrValue.getDoubleValue());\n+\n+        List<T> result = new ArrayList<T>();\n+        for (AbstractAttrValue value : (List<AbstractAttrValue>) query.getResultList()) {\n+            T subject = value.getAttribute().getOwner();\n+            if (!result.contains(subject)) {\n+                result.add(subject);\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public <T extends AbstractAttributable> AbstractAttributable findByAttrUniqueValue(final String schemaName,\n+            final AbstractAttrValue attrUniqueValue, final AttributableUtil attrUtil) {\n+\n+        AbstractSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n+        if (schema == null) {\n+            LOG.error(\"Invalid schema name '{}'\", schemaName);\n+            return null;\n+        }\n+        if (!schema.isUniqueConstraint()) {\n+            LOG.error(\"This schema has not unique constraint: '{}'\", schemaName);\n+            return null;\n+        }\n+\n+        List<T> result = findByAttrValue(schemaName, attrUniqueValue, attrUtil);\n+        return result.isEmpty()\n+                ? null\n+                : result.iterator().next();\n+    }\n+\n+    /**\n+     * Find users / roles by derived attribute value. This method could fail if one or more string literals contained\n+     * into the derived attribute value provided derive from identifier (schema name) replacement. When you are going to\n+     * specify a derived attribute expression you must be quite sure that string literals used to build the expression\n+     * cannot be found into the attribute values used to replace attribute schema names used as identifiers.\n+     *\n+     * @param schemaName derived schema name\n+     * @param value derived attribute value\n+     * @return list of users / roles\n+     * @throws InvalidSearchConditionException in case of errors retrieving schema names used to buid the derived schema\n+     * expression.\n+     */\n+    @Override\n+    public <T extends AbstractAttributable> List<T> findByDerAttrValue(final String schemaName, final String value,\n+            final AttributableUtil attrUtil)\n+            throws InvalidSearchConditionException {\n+\n+        AbstractDerSchema schema = derSchemaDAO.find(schemaName, attrUtil.derSchemaClass());\n+        if (schema == null) {\n+            LOG.error(\"Invalid schema name '{}'\", schemaName);\n+            return Collections.EMPTY_LIST;\n+        }\n+\n+        // query string\n+        final StringBuilder querystring = new StringBuilder();\n+\n+        boolean subquery = false;\n+        for (String clause : getWhereClause(schema.getExpression(), value, attrUtil)) {\n+            if (querystring.length() > 0) {\n+                subquery = true;\n+                querystring.append(\" AND a.owner_id IN ( \");\n+            }\n+\n+            querystring.append(\"SELECT a.owner_id \").\n+                    append(\"FROM \").append(attrUtil.attrClass().getSimpleName()).append(\" a, \").\n+                    append(attrUtil.attrValueClass().getSimpleName()).append(\" v, \").\n+                    append(attrUtil.schemaClass().getSimpleName()).append(\" s \").\n+                    append(\"WHERE \").append(clause);\n+\n+            if (subquery) {\n+                querystring.append(')');\n+            }\n+        }\n+\n+        LOG.debug(\"Execute query {}\", querystring);\n+\n+        final Query query = entityManager.createNativeQuery(querystring.toString());\n+\n+        final List<T> result = new ArrayList<T>();\n+\n+        for (Object userId : query.getResultList()) {\n+            T subject = find(Long.parseLong(userId.toString()));\n+            if (!result.contains(subject)) {\n+                result.add(subject);\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public <T extends AbstractAttributable> List<T> findByResource(final ExternalResource resource,\n+            final Class<T> reference) {\n+\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e \"\n+                + \"WHERE :resource MEMBER OF e.resources\");\n+        query.setParameter(\"resource\", resource);\n+\n+        return query.getResultList();\n+    }\n+}"},{"sha":"90d2c41778f0956f6f91b3c9f22c76efc64b644f","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AttributableSearchDAOImpl.java","status":"renamed","additions":129,"deletions":113,"changes":242,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributableSearchDAOImpl.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -28,26 +28,28 @@\n import javax.persistence.Query;\n import javax.persistence.TemporalType;\n import javax.validation.ValidationException;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Repository;\n+import org.apache.syncope.client.search.AttributableCond;\n import org.apache.syncope.client.search.AttributeCond;\n-import org.apache.syncope.client.search.SyncopeUserCond;\n import org.apache.syncope.client.search.MembershipCond;\n import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.client.search.ResourceCond;\n-import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n-import org.apache.syncope.core.persistence.beans.user.USchema;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n+import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.persistence.beans.AbstractSchema;\n+import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.persistence.dao.UserSearchDAO;\n+import org.apache.syncope.core.util.AttributableUtil;\n+import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.SchemaType;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Repository;\n \n @Repository\n-public class UserSearchDAOImpl extends AbstractDAOImpl implements UserSearchDAO {\n+public class AttributableSearchDAOImpl extends AbstractDAOImpl implements AttributableSearchDAO {\n \n-    static final private String EMPTY_ATTR_QUERY = \"SELECT user_id FROM user_search_attr WHERE 1=2\";\n+    static final private String EMPTY_ATTR_QUERY = \"SELECT subject_id FROM user_search_attr WHERE 1=2\";\n \n     @Autowired\n     private UserDAO userDAO;\n@@ -58,20 +60,18 @@ public class UserSearchDAOImpl extends AbstractDAOImpl implements UserSearchDAO\n     @Autowired\n     private SchemaDAO schemaDAO;\n \n-    public UserSearchDAOImpl() {\n-        super();\n-    }\n-\n-    private String getAdminRolesFilter(final Set<Long> adminRoles) {\n+    private String getAdminRolesFilter(final Set<Long> adminRoles, final AttributableUtil attrUtil) {\n         final StringBuilder adminRolesFilter = new StringBuilder();\n \n-        adminRolesFilter.append(\"SELECT syncopeUser_id AS user_id \").append(\"FROM Membership M1 \").\n-                append(\"WHERE syncopeRole_id IN (\");\n-\n-        adminRolesFilter.append(\"SELECT syncopeRole_id \").append(\"FROM Membership M2 \").\n-                append(\"WHERE M2.syncopeUser_id=M1.syncopeUser_id \").append(\"AND syncopeRole_id NOT IN (\");\n+        if (attrUtil.getType() == AttributableType.USER) {\n+            adminRolesFilter.append(\"SELECT syncopeUser_id AS subject_id FROM Membership M1 WHERE syncopeRole_id IN (\").\n+                    append(\"SELECT syncopeRole_id FROM Membership M2 WHERE M2.syncopeUser_id=M1.syncopeUser_id \").\n+                    append(\"AND syncopeRole_id NOT IN (\");\n+        }\n \n-        adminRolesFilter.append(\"SELECT id AS syncopeRole_id FROM SyncopeRole\");\n+        adminRolesFilter.append(\"SELECT id AS \").\n+                append(attrUtil.getType() == AttributableType.USER ? \"syncopeRole\" : \"subject\").\n+                append(\"_id FROM SyncopeRole\");\n \n         boolean firstRole = true;\n \n@@ -80,32 +80,34 @@ private String getAdminRolesFilter(final Set<Long> adminRoles) {\n                 adminRolesFilter.append(\" WHERE\");\n                 firstRole = false;\n             } else {\n-                adminRolesFilter.append(\" OR\");\n+                adminRolesFilter.append(attrUtil.getType() == AttributableType.USER ? \" OR\" : \" AND\");\n             }\n-            adminRolesFilter.append(\" id=\").append(adminRoleId);\n+            adminRolesFilter.append(attrUtil.getType() == AttributableType.USER\n+                    ? \" id=\" : \" id <>\").append(adminRoleId);\n         }\n \n-        adminRolesFilter.append(\"))\");\n+        if (attrUtil.getType() == AttributableType.USER) {\n+            adminRolesFilter.append(\"))\");\n+        }\n \n         return adminRolesFilter.toString();\n     }\n \n     @Override\n-    public int count(final Set<Long> adminRoles, final NodeCond searchCondition) {\n-\n+    public int count(final Set<Long> adminRoles, final NodeCond searchCondition, final AttributableUtil attrUtil) {\n         List<Object> parameters = Collections.synchronizedList(new ArrayList<Object>());\n \n         // 1. get the query string from the search condition\n-        StringBuilder queryString = getQuery(searchCondition, parameters);\n+        StringBuilder queryString = getQuery(searchCondition, parameters, attrUtil);\n \n         // 2. take into account administrative roles\n-        queryString.insert(0, \"SELECT u.user_id FROM (\");\n-        queryString.append(\") u WHERE user_id NOT IN (\");\n-        queryString.append(getAdminRolesFilter(adminRoles)).append(\")\");\n+        queryString.insert(0, \"SELECT u.subject_id FROM (\");\n+        queryString.append(\") u WHERE subject_id NOT IN (\");\n+        queryString.append(getAdminRolesFilter(adminRoles, attrUtil)).append(\")\");\n \n         // 3. prepare the COUNT query\n-        queryString.insert(0, \"SELECT COUNT(user_id) FROM (\");\n-        queryString.append(\") count_user_id\");\n+        queryString.insert(0, \"SELECT COUNT(subject_id) FROM (\");\n+        queryString.append(\") count_subject_id\");\n \n         Query countQuery = entityManager.createNativeQuery(queryString.toString());\n         fillWithParameters(countQuery, parameters);\n@@ -119,44 +121,47 @@ public int count(final Set<Long> adminRoles, final NodeCond searchCondition) {\n     }\n \n     @Override\n-    public List<SyncopeUser> search(final Set<Long> adminRoles, final NodeCond searchCondition) {\n-        return search(adminRoles, searchCondition, -1, -1);\n+    public <T extends AbstractAttributable> List<T> search(final Set<Long> adminRoles, final NodeCond searchCondition,\n+            final AttributableUtil attrUtil) {\n+\n+        return search(adminRoles, searchCondition, -1, -1, attrUtil);\n     }\n \n     @Override\n-    public List<SyncopeUser> search(\n-            final Set<Long> adminRoles, final NodeCond searchCondition, final int page, final int itemsPerPage) {\n+    public <T extends AbstractAttributable> List<T> search(final Set<Long> adminRoles, final NodeCond searchCondition,\n+            final int page, final int itemsPerPage, final AttributableUtil attrUtil) {\n \n-        List<SyncopeUser> result = Collections.emptyList();\n+        List<T> result = Collections.EMPTY_LIST;\n \n         if (adminRoles != null && (!adminRoles.isEmpty() || roleDAO.findAll().isEmpty())) {\n             LOG.debug(\"Search condition:\\n{}\", searchCondition);\n \n-            if (!searchCondition.checkValidity()) {\n-                LOG.error(\"Invalid search condition:\\n{}\", searchCondition);\n-            } else {\n+            if (searchCondition.checkValidity()) {\n                 try {\n-                    result = doSearch(adminRoles, searchCondition, page, itemsPerPage);\n+                    result = doSearch(adminRoles, searchCondition, page, itemsPerPage, attrUtil);\n                 } catch (Exception e) {\n-                    LOG.error(\"While searching users\", e);\n+                    LOG.error(\"While searching for {}\", attrUtil.getType(), e);\n                 }\n+            } else {\n+                LOG.error(\"Invalid search condition:\\n{}\", searchCondition);\n             }\n         }\n \n         return result;\n     }\n \n     @Override\n-    public boolean matches(final SyncopeUser user, final NodeCond searchCondition) {\n+    public <T extends AbstractAttributable> boolean matches(final T user, final NodeCond searchCondition,\n+            final AttributableUtil attrUtil) {\n \n         List<Object> parameters = Collections.synchronizedList(new ArrayList<Object>());\n \n         // 1. get the query string from the search condition\n-        StringBuilder queryString = getQuery(searchCondition, parameters);\n+        StringBuilder queryString = getQuery(searchCondition, parameters, attrUtil);\n \n         // 2. take into account the passed user\n-        queryString.insert(0, \"SELECT u.user_id FROM (\");\n-        queryString.append(\") u WHERE user_id=?\").append(setParameter(parameters, user.getId()));\n+        queryString.insert(0, \"SELECT u.subject_id FROM (\");\n+        queryString.append(\") u WHERE subject_id=?\").append(setParameter(parameters, user.getId()));\n \n         // 3. prepare the search query\n         Query query = entityManager.createNativeQuery(queryString.toString());\n@@ -165,13 +170,12 @@ public boolean matches(final SyncopeUser user, final NodeCond searchCondition) {\n         fillWithParameters(query, parameters);\n \n         // 5. executes query\n-        List<SyncopeUser> result = query.getResultList();\n+        List<T> result = query.getResultList();\n \n         return !result.isEmpty();\n     }\n \n     private int setParameter(final List<Object> parameters, final Object parameter) {\n-\n         int key;\n         synchronized (parameters) {\n             parameters.add(parameter);\n@@ -182,7 +186,6 @@ private int setParameter(final List<Object> parameters, final Object parameter)\n     }\n \n     private void fillWithParameters(final Query query, final List<Object> parameters) {\n-\n         for (int i = 0; i < parameters.size(); i++) {\n             if (parameters.get(i) instanceof Date) {\n                 query.setParameter(i + 1, (Date) parameters.get(i), TemporalType.TIMESTAMP);\n@@ -196,31 +199,29 @@ private void fillWithParameters(final Query query, final List<Object> parameters\n         }\n     }\n \n-    private List<SyncopeUser> doSearch(\n-            final Set<Long> adminRoles, final NodeCond nodeCond, final int page, final int itemsPerPage) {\n+    private <T extends AbstractAttributable> List<T> doSearch(final Set<Long> adminRoles, final NodeCond nodeCond,\n+            final int page, final int itemsPerPage, final AttributableUtil attrUtil) {\n \n         List<Object> parameters = Collections.synchronizedList(new ArrayList<Object>());\n \n         // 1. get the query string from the search condition\n-        final StringBuilder queryString = getQuery(nodeCond, parameters);\n+        final StringBuilder queryString = getQuery(nodeCond, parameters, attrUtil);\n \n         // 2. take into account administrative roles\n         if (queryString.charAt(0) == '(') {\n-            queryString.insert(0, \"SELECT u.user_id FROM \");\n-            queryString.append(\" u WHERE user_id NOT IN (\");\n+            queryString.insert(0, \"SELECT u.subject_id FROM \");\n+            queryString.append(\" u WHERE subject_id NOT IN (\");\n         } else {\n-            queryString.insert(0, \"SELECT u.user_id FROM (\");\n-            queryString.append(\") u WHERE user_id NOT IN (\");\n+            queryString.insert(0, \"SELECT u.subject_id FROM (\");\n+            queryString.append(\") u WHERE subject_id NOT IN (\");\n         }\n-        queryString.append(getAdminRolesFilter(adminRoles)).append(\")\");\n+        queryString.append(getAdminRolesFilter(adminRoles, attrUtil)).append(\")\");\n \n         // 3. prepare the search query\n         final Query query = entityManager.createNativeQuery(queryString.toString());\n \n         // page starts from 1, while setFirtResult() starts from 0\n-        query.setFirstResult(itemsPerPage * (page <= 0\n-                ? 0\n-                : page - 1));\n+        query.setFirstResult(itemsPerPage * (page <= 0 ? 0 : page - 1));\n \n         if (itemsPerPage >= 0) {\n             query.setMaxResults(itemsPerPage);\n@@ -232,69 +233,77 @@ private List<SyncopeUser> doSearch(\n         LOG.debug(\"Native query\\n{}\\nwith parameters\\n{}\", queryString.toString(), parameters);\n \n         // 5. Prepare the result (avoiding duplicates - set)\n-        final Set<Number> userIds = new HashSet<Number>();\n+        final Set<Number> subjectIds = new HashSet<Number>();\n         final List resultList = query.getResultList();\n \n         //fix for HHH-5902 - bug hibernate\n         if (resultList != null) {\n             for (Object userId : resultList) {\n                 if (userId instanceof Object[]) {\n-                    userIds.add((Number) ((Object[]) userId)[0]);\n+                    subjectIds.add((Number) ((Object[]) userId)[0]);\n                 } else {\n-                    userIds.add((Number) userId);\n+                    subjectIds.add((Number) userId);\n                 }\n             }\n         }\n \n-        final List<SyncopeUser> result = new ArrayList<SyncopeUser>(userIds.size());\n+        final List<T> result = new ArrayList<T>(subjectIds.size());\n \n-        SyncopeUser user;\n-        for (Object userId : userIds) {\n-            user = userDAO.find(((Number) userId).longValue());\n-            if (user == null) {\n-                LOG.error(\"Could not find user with id {}, \" + \"even though returned by the native query\", userId);\n+        for (Object subjectId : subjectIds) {\n+            T subject = attrUtil.getType() == AttributableType.USER\n+                    ? (T) userDAO.find(((Number) subjectId).longValue())\n+                    : (T) roleDAO.find(((Number) subjectId).longValue());\n+            if (subject == null) {\n+                LOG.error(\"Could not find {} with id {}, even though returned by the native query\",\n+                        attrUtil.getType(), subjectId);\n             } else {\n-                result.add(user);\n+                result.add(subject);\n             }\n         }\n \n         return result;\n     }\n \n-    private StringBuilder getQuery(final NodeCond nodeCond, final List<Object> parameters) {\n+    private StringBuilder getQuery(final NodeCond nodeCond, final List<Object> parameters,\n+            final AttributableUtil attrUtil) {\n \n         StringBuilder query = new StringBuilder();\n \n         switch (nodeCond.getType()) {\n \n             case LEAF:\n             case NOT_LEAF:\n-                if (nodeCond.getMembershipCond() != null) {\n+                if (nodeCond.getMembershipCond() != null && AttributableType.USER == attrUtil.getType()) {\n                     query.append(getQuery(nodeCond.getMembershipCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n-                            parameters));\n+                            parameters, attrUtil));\n                 }\n                 if (nodeCond.getResourceCond() != null) {\n                     query.append(getQuery(nodeCond.getResourceCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n-                            parameters));\n+                            parameters, attrUtil));\n                 }\n                 if (nodeCond.getAttributeCond() != null) {\n                     query.append(getQuery(nodeCond.getAttributeCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n-                            parameters));\n+                            parameters, attrUtil));\n                 }\n-                if (nodeCond.getSyncopeUserCond() != null) {\n-                    query.append(getQuery(nodeCond.getSyncopeUserCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n-                            parameters));\n+                if (nodeCond.getAttributableCond() != null) {\n+                    query.append(getQuery(nodeCond.getAttributableCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n+                            parameters, attrUtil));\n                 }\n                 break;\n \n             case AND:\n-                query.append(getQuery(nodeCond.getLeftNodeCond(), parameters)).append(\" AND user_id IN ( \").append(\n-                        getQuery(nodeCond.getRightNodeCond(), parameters).append(\")\"));\n+                query.append(getQuery(nodeCond.getLeftNodeCond(), parameters, attrUtil)).\n+                        append(\" AND subject_id IN ( \").\n+                        append(getQuery(nodeCond.getRightNodeCond(), parameters, attrUtil).\n+                        append(\")\"));\n                 break;\n \n             case OR:\n-                query.append(\"(\").append(getQuery(nodeCond.getLeftNodeCond(), parameters)).append(\" UNION \").append(\n-                        getQuery(nodeCond.getRightNodeCond(), parameters).append(\")\"));\n+                query.append(\"(\").\n+                        append(getQuery(nodeCond.getLeftNodeCond(), parameters, attrUtil)).\n+                        append(\" UNION \").\n+                        append(getQuery(nodeCond.getRightNodeCond(), parameters, attrUtil).\n+                        append(\")\"));\n                 break;\n \n             default:\n@@ -303,17 +312,20 @@ private StringBuilder getQuery(final NodeCond nodeCond, final List<Object> param\n         return query;\n     }\n \n-    private String getQuery(final MembershipCond cond, final boolean not, final List<Object> parameters) {\n+    private String getQuery(final MembershipCond cond, final boolean not, final List<Object> parameters,\n+            final AttributableUtil attrUtil) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT user_id FROM user_search WHERE \");\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT subject_id FROM \").\n+                append(attrUtil.searchView()).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"user_id NOT IN (\");\n+            query.append(\"subject_id NOT IN (\");\n         } else {\n-            query.append(\"user_id IN (\");\n+            query.append(\"subject_id IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT user_id \").append(\"FROM user_search_membership WHERE \");\n+        query.append(\"SELECT DISTINCT subject_id \").append(\"FROM \").\n+                append(attrUtil.searchView()).append(\"_membership WHERE \");\n \n         if (cond.getRoleId() != null) {\n             query.append(\"role_id=?\").append(setParameter(parameters, cond.getRoleId()));\n@@ -326,17 +338,20 @@ private String getQuery(final MembershipCond cond, final boolean not, final List\n         return query.toString();\n     }\n \n-    private String getQuery(final ResourceCond cond, final boolean not, final List<Object> parameters) {\n+    private String getQuery(final ResourceCond cond, final boolean not, final List<Object> parameters,\n+            final AttributableUtil attrUtil) {\n \n-        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT user_id FROM user_search WHERE \");\n+        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT subject_id FROM \").\n+                append(attrUtil.searchView()).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"user_id NOT IN (\");\n+            query.append(\"subject_id NOT IN (\");\n         } else {\n-            query.append(\"user_id IN (\");\n+            query.append(\"subject_id IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT user_id \").append(\"FROM user_search_resource WHERE \");\n+        query.append(\"SELECT DISTINCT subject_id \").append(\"FROM \").\n+                append(attrUtil.searchView()).append(\"_resource WHERE \");\n \n         query.append(\"resource_name=?\").append(setParameter(parameters, cond.getResourceName()));\n \n@@ -345,10 +360,10 @@ private String getQuery(final ResourceCond cond, final boolean not, final List<O\n         return query.toString();\n     }\n \n-    private void fillAttributeQuery(final StringBuilder query, final UAttrValue attrValue, final USchema schema,\n-            final AttributeCond cond, final boolean not, final List<Object> parameters) {\n+    private void fillAttributeQuery(final StringBuilder query, final AbstractAttrValue attrValue,\n+            final AbstractSchema schema, final AttributeCond cond, final boolean not, final List<Object> parameters) {\n \n-        String column = (cond instanceof SyncopeUserCond)\n+        String column = (cond instanceof AttributableCond)\n                 ? cond.getSchema()\n                 : \"' AND \" + getFieldName(schema.getType());\n \n@@ -377,7 +392,7 @@ private void fillAttributeQuery(final StringBuilder query, final UAttrValue attr\n                     query.append(\" LIKE '\").append(cond.getExpression()).append(\"'\");\n \n                 } else {\n-                    if (!(cond instanceof SyncopeUserCond)) {\n+                    if (!(cond instanceof AttributableCond)) {\n                         query.append(\"' AND\");\n                     }\n                     query.append(\" 1=2\");\n@@ -471,15 +486,16 @@ private String getFieldName(final SchemaType type) {\n         return result;\n     }\n \n-    private String getQuery(final AttributeCond cond, final boolean not, final List<Object> parameters) {\n+    private String getQuery(final AttributeCond cond, final boolean not, final List<Object> parameters,\n+            AttributableUtil attrUtil) {\n \n-        USchema schema = schemaDAO.find(cond.getSchema(), USchema.class);\n+        AbstractSchema schema = schemaDAO.find(cond.getSchema(), attrUtil.schemaClass());\n         if (schema == null) {\n             LOG.warn(\"Ignoring invalid schema '{}'\", cond.getSchema());\n             return EMPTY_ATTR_QUERY;\n         }\n \n-        UAttrValue attrValue = new UAttrValue();\n+        AbstractAttrValue attrValue = attrUtil.newAttrValue();\n         try {\n             if (cond.getType() != AttributeCond.Type.LIKE && cond.getType() != AttributeCond.Type.ISNULL\n                     && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n@@ -491,21 +507,21 @@ private String getQuery(final AttributeCond cond, final boolean not, final List<\n             return EMPTY_ATTR_QUERY;\n         }\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT user_id FROM user_search_attr WHERE \").append(\n-                \"schema_name='\").append(schema.getName());\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT subject_id FROM \").\n+                append(attrUtil.searchView()).append(\"_attr WHERE \").append(\"schema_name='\").append(schema.getName());\n         fillAttributeQuery(query, attrValue, schema, cond, not, parameters);\n \n         return query.toString();\n     }\n \n-    private String getQuery(final SyncopeUserCond cond, final boolean not, final List<Object> parameters) {\n-\n-        Field syncopeUserClassField = null;\n-        // loop over SyncopeUser class and all superclasses searching for field\n-        for (Class<?> i = SyncopeUser.class; syncopeUserClassField == null && i != Object.class;) {\n+    private String getQuery(final AttributableCond cond, final boolean not, final List<Object> parameters,\n+            final AttributableUtil attrUtil) {\n \n+        Field attributableClassField = null;\n+        // loop over attributable class and all superclasses searching for field\n+        for (Class i = attrUtil.attributableClass(); attributableClassField == null && i != Object.class;) {\n             try {\n-                syncopeUserClassField = i.getDeclaredField(cond.getSchema());\n+                attributableClassField = i.getDeclaredField(cond.getSchema());\n             } catch (Exception ignore) {\n                 // ignore exception\n                 LOG.debug(\"Field '{}' not found on class '{}'\", new String[]{cond.getSchema(), i.getSimpleName()},\n@@ -514,21 +530,20 @@ private String getQuery(final SyncopeUserCond cond, final boolean not, final Lis\n                 i = i.getSuperclass();\n             }\n         }\n-        if (syncopeUserClassField == null) {\n+        if (attributableClassField == null) {\n             LOG.warn(\"Ignoring invalid schema '{}'\", cond.getSchema());\n             return EMPTY_ATTR_QUERY;\n         }\n \n-        USchema schema = new USchema();\n-        schema.setName(syncopeUserClassField.getName());\n+        AbstractSchema schema = attrUtil.newSchema();\n+        schema.setName(attributableClassField.getName());\n         for (SchemaType type : SchemaType.values()) {\n-            if (syncopeUserClassField.getType().getName().equals(type.getClassName())) {\n-\n+            if (attributableClassField.getType().getName().equals(type.getClassName())) {\n                 schema.setType(type);\n             }\n         }\n \n-        UAttrValue attrValue = new UAttrValue();\n+        AbstractAttrValue attrValue = attrUtil.newAttrValue();\n         try {\n             if (cond.getType() != AttributeCond.Type.LIKE && cond.getType() != AttributeCond.Type.ISNULL\n                     && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n@@ -540,7 +555,8 @@ private String getQuery(final SyncopeUserCond cond, final boolean not, final Lis\n             return EMPTY_ATTR_QUERY;\n         }\n \n-        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT user_id FROM user_search WHERE \");\n+        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT subject_id FROM \").\n+                append(attrUtil.searchView()).append(\" WHERE \");\n \n         fillAttributeQuery(query, attrValue, schema, cond, not, parameters);\n ","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/UserSearchDAOImpl.java"},{"sha":"703ff0f08037070327619a6dff6f55eddb825403","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":28,"deletions":14,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -28,23 +28,23 @@\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n-import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.rest.controller.InvalidSearchConditionException;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n+import org.apache.syncope.types.AttributableType;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class RoleDAOImpl extends AbstractDAOImpl implements RoleDAO {\n+public class RoleDAOImpl extends AbstractAttributableDAOImpl implements RoleDAO {\n \n     @Autowired\n     private UserDAO userDAO;\n \n-    @Autowired\n-    private TaskDAO taskDAO;\n-\n     @Autowired\n     private EntitlementDAO entitlementDAO;\n \n@@ -133,15 +133,6 @@ public List<SyncopeRole> findByEntitlement(final Entitlement entitlement) {\n         return query.getResultList();\n     }\n \n-    @Override\n-    public List<SyncopeRole> findByResource(final ExternalResource resource) {\n-        Query query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeRole.class.getSimpleName() + \" e \"\n-                + \"WHERE :resource MEMBER OF e.resources\");\n-        query.setParameter(\"resource\", resource);\n-\n-        return query.getResultList();\n-    }\n-\n     private void findAncestors(final List<SyncopeRole> result, final SyncopeRole role) {\n         if (role.getParent() != null && !result.contains(role.getParent())) {\n             result.add(role.getParent());\n@@ -180,6 +171,29 @@ public List<SyncopeRole> findDescendants(final SyncopeRole role) {\n         return result;\n     }\n \n+    @Override\n+    public List<SyncopeRole> findByDerAttrValue(final String schemaName, final String value)\n+            throws InvalidSearchConditionException {\n+\n+        return findByDerAttrValue(schemaName, value, AttributableUtil.getInstance(AttributableType.ROLE));\n+    }\n+\n+    @Override\n+    public List<SyncopeRole> findByAttrValue(final String schemaName, final UAttrValue attrValue) {\n+        return findByAttrValue(schemaName, attrValue, AttributableUtil.getInstance(AttributableType.ROLE));\n+    }\n+\n+    @Override\n+    public SyncopeRole findByAttrUniqueValue(final String schemaName, final UAttrValue attrUniqueValue) {\n+        return (SyncopeRole) findByAttrUniqueValue(schemaName, attrUniqueValue,\n+                AttributableUtil.getInstance(AttributableType.ROLE));\n+    }\n+\n+    @Override\n+    public List<SyncopeRole> findByResource(final ExternalResource resource) {\n+        return findByResource(resource, SyncopeRole.class);\n+    }\n+\n     @Override\n     public List<SyncopeRole> findAll() {\n         Query query = entityManager.createQuery(\"SELECT e FROM SyncopeRole e\");"},{"sha":"8bce22ea4746c0e744961eada868db9ef3e0b580","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":10,"deletions":296,"changes":306,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -18,55 +18,31 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n-import java.io.StringReader;\n import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import java.util.regex.Pattern;\n import javax.persistence.NoResultException;\n import javax.persistence.Query;\n-import javax.persistence.TemporalType;\n import javax.persistence.TypedQuery;\n-import org.apache.commons.jexl2.parser.Parser;\n-import org.apache.commons.jexl2.parser.ParserConstants;\n-import org.apache.commons.jexl2.parser.Token;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Repository;\n-import org.springframework.util.StringUtils;\n-import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.beans.user.UAttrUniqueValue;\n import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n-import org.apache.syncope.core.persistence.beans.user.UDerSchema;\n-import org.apache.syncope.core.persistence.beans.user.USchema;\n-import org.apache.syncope.core.persistence.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n-import org.apache.syncope.core.persistence.dao.SchemaDAO;\n-import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.rest.controller.InvalidSearchConditionException;\n+import org.apache.syncope.core.util.AttributableUtil;\n+import org.apache.syncope.types.AttributableType;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Repository;\n \n @Repository\n-public class UserDAOImpl extends AbstractDAOImpl implements UserDAO {\n-\n-    @Autowired\n-    private SchemaDAO schemaDAO;\n-\n-    @Autowired\n-    private DerSchemaDAO derSchemaDAO;\n+public class UserDAOImpl extends AbstractAttributableDAOImpl implements UserDAO {\n \n     @Autowired\n     private RoleDAO roleDAO;\n \n-    @Autowired\n-    private TaskDAO taskDAO;\n-\n     @Override\n     public SyncopeUser find(final Long id) {\n         TypedQuery<SyncopeUser> query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName()\n@@ -106,135 +82,27 @@ public SyncopeUser findByWorkflowId(final String workflowId) {\n         return query.getSingleResult();\n     }\n \n-    /**\n-     * Find users by derived attribute value. This method could fail if one or more string literals contained into the\n-     * derived attribute value provided derive from identifier (schema name) replacement. When you are going to specify\n-     * a derived attribute expression you must be quite sure that string literals used to build the expression cannot be\n-     * found into the attribute values used to replace attribute schema names used as identifiers.\n-     *\n-     * @param schemaName derived schema name.\n-     * @param value derived attribute value.\n-     * @return list of users.\n-     * @throws InvalidSearchConditionException in case of errors retrieving schema names used to buid the derived schema\n-     * expression.\n-     */\n     @Override\n     public List<SyncopeUser> findByDerAttrValue(final String schemaName, final String value)\n             throws InvalidSearchConditionException {\n \n-        UDerSchema schema = derSchemaDAO.find(schemaName, UDerSchema.class);\n-        if (schema == null) {\n-            LOG.error(\"Invalid schema name '{}'\", schemaName);\n-            return Collections.emptyList();\n-        }\n-\n-        // query string\n-        final StringBuilder querystring = new StringBuilder();\n-\n-        boolean subquery = false;\n-        for (String clause : getWhereClause(schema.getExpression(), value)) {\n-            if (querystring.length() > 0) {\n-                subquery = true;\n-                querystring.append(\" AND a.owner_id IN ( \");\n-            }\n-\n-            querystring.append(\"SELECT a.owner_id \").append(\"FROM UAttr a, UAttrValue v, USchema s \").append(\"WHERE \")\n-                    .append(clause);\n-\n-            if (subquery) {\n-                querystring.append(')');\n-            }\n-        }\n-\n-        LOG.debug(\"Execute query {}\", querystring);\n-\n-        final Query query = entityManager.createNativeQuery(querystring.toString());\n-\n-        final List<SyncopeUser> result = new ArrayList<SyncopeUser>();\n-\n-        SyncopeUser user;\n-        for (Object userId : query.getResultList()) {\n-            user = find(Long.parseLong(userId.toString()));\n-            if (!result.contains(user)) {\n-                result.add(user);\n-            }\n-        }\n-\n-        return result;\n+        return findByDerAttrValue(schemaName, value, AttributableUtil.getInstance(AttributableType.USER));\n     }\n \n     @Override\n     public List<SyncopeUser> findByAttrValue(final String schemaName, final UAttrValue attrValue) {\n-\n-        USchema schema = schemaDAO.find(schemaName, USchema.class);\n-        if (schema == null) {\n-            LOG.error(\"Invalid schema name '{}'\", schemaName);\n-            return Collections.emptyList();\n-        }\n-\n-        final String entityName = schema.isUniqueConstraint()\n-                ? UAttrUniqueValue.class.getName()\n-                : UAttrValue.class.getName();\n-\n-        Query query = entityManager.createQuery(\"SELECT e FROM \" + entityName + \" e\"\n-                + \" WHERE e.attribute.schema.name = :schemaName \" + \" AND (e.stringValue IS NOT NULL\"\n-                + \" AND e.stringValue = :stringValue)\" + \" OR (e.booleanValue IS NOT NULL\"\n-                + \" AND e.booleanValue = :booleanValue)\" + \" OR (e.dateValue IS NOT NULL\"\n-                + \" AND e.dateValue = :dateValue)\" + \" OR (e.longValue IS NOT NULL\" + \" AND e.longValue = :longValue)\"\n-                + \" OR (e.doubleValue IS NOT NULL\" + \" AND e.doubleValue = :doubleValue)\");\n-\n-        query.setParameter(\"schemaName\", schemaName);\n-        query.setParameter(\"stringValue\", attrValue.getStringValue());\n-        query.setParameter(\"booleanValue\", attrValue.getBooleanValue() == null\n-                ? null\n-                : attrValue.getBooleanAsInteger(attrValue.getBooleanValue()));\n-        if (attrValue.getDateValue() != null) {\n-            query.setParameter(\"dateValue\", attrValue.getDateValue(), TemporalType.TIMESTAMP);\n-        } else {\n-            query.setParameter(\"dateValue\", null);\n-        }\n-        query.setParameter(\"longValue\", attrValue.getLongValue());\n-        query.setParameter(\"doubleValue\", attrValue.getDoubleValue());\n-\n-        List<SyncopeUser> result = new ArrayList<SyncopeUser>();\n-        SyncopeUser user;\n-        for (AbstractAttrValue value : (List<AbstractAttrValue>) query.getResultList()) {\n-\n-            user = (SyncopeUser) value.getAttribute().getOwner();\n-            if (!result.contains(user)) {\n-                result.add(user);\n-            }\n-        }\n-\n-        return result;\n+        return findByAttrValue(schemaName, attrValue, AttributableUtil.getInstance(AttributableType.USER));\n     }\n \n     @Override\n     public SyncopeUser findByAttrUniqueValue(final String schemaName, final UAttrValue attrUniqueValue) {\n-\n-        USchema schema = schemaDAO.find(schemaName, USchema.class);\n-        if (schema == null) {\n-            LOG.error(\"Invalid schema name '{}'\", schemaName);\n-            return null;\n-        }\n-        if (!schema.isUniqueConstraint()) {\n-            LOG.error(\"This schema has not unique constraint: '{}'\", schemaName);\n-            return null;\n-        }\n-\n-        List<SyncopeUser> result = findByAttrValue(schemaName, attrUniqueValue);\n-        return result.isEmpty()\n-                ? null\n-                : result.iterator().next();\n+        return (SyncopeUser) findByAttrUniqueValue(schemaName, attrUniqueValue,\n+                AttributableUtil.getInstance(AttributableType.USER));\n     }\n \n     @Override\n     public List<SyncopeUser> findByResource(final ExternalResource resource) {\n-        Query query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n-                + \"WHERE :resource MEMBER OF e.resources\");\n-        query.setParameter(\"resource\", resource);\n-\n-        return query.getResultList();\n+        return findByResource(resource, SyncopeUser.class);\n     }\n \n     private StringBuilder getFindAllQuery(final Set<Long> adminRoles) {\n@@ -274,7 +142,6 @@ public final List<SyncopeUser> findAll(final Set<Long> adminRoles) {\n \n     @Override\n     public final List<SyncopeUser> findAll(final Set<Long> adminRoles, final int page, final int itemsPerPage) {\n-\n         final Query query = entityManager.createNativeQuery(getFindAllQuery(adminRoles).toString());\n \n         query.setFirstResult(itemsPerPage * (page <= 0\n@@ -363,157 +230,4 @@ public void delete(final SyncopeUser user) {\n \n         entityManager.remove(user);\n     }\n-\n-    /**\n-     * Generate one where clause for each different attribute schema into the derived schema expression provided.\n-     *\n-     * @param expression derived schema expression.\n-     * @param value derived attribute value.\n-     * @return where clauses to use to build the query.\n-     * @throws InvalidSearchConditionException in case of errors retrieving identifiers.\n-     */\n-    private Set<String> getWhereClause(final String expression, final String value)\n-            throws InvalidSearchConditionException {\n-        final Parser parser = new Parser(new StringReader(expression));\n-\n-        // Schema names\n-        final List<String> identifiers = new ArrayList<String>();\n-\n-        // Literals\n-        final List<String> literals = new ArrayList<String>();\n-\n-        // Get schema names and literals\n-        Token token;\n-        while ((token = parser.getNextToken()) != null && StringUtils.hasText(token.toString())) {\n-\n-            if (token.kind == ParserConstants.STRING_LITERAL) {\n-                literals.add(token.toString().substring(1, token.toString().length() - 1));\n-            }\n-\n-            if (token.kind == ParserConstants.IDENTIFIER) {\n-                identifiers.add(token.toString());\n-            }\n-        }\n-\n-        // Sort literals in order to process later literals included into others\n-        Collections.sort(literals, new Comparator<String>() {\n-\n-            @Override\n-            public int compare(String t, String t1) {\n-                if (t == null && t1 == null) {\n-                    return 0;\n-                } else if (t != null && t1 == null) {\n-                    return -1;\n-                } else if (t == null && t1 != null) {\n-                    return 1;\n-                } else if (t.length() == t1.length()) {\n-                    return 0;\n-                } else if (t.length() > t1.length()) {\n-                    return -1;\n-                } else {\n-                    return 1;\n-                }\n-            }\n-        });\n-\n-        // Split value on provided literals\n-        final List<String> attrValues = split(value, literals);\n-\n-        if (attrValues.size() != identifiers.size()) {\n-            LOG.error(\"Ambiguous jexl expression resolution.\");\n-            throw new InvalidSearchConditionException(\"literals and values have different size\");\n-        }\n-\n-        // clauses to be used with INTERSECTed queries\n-        final Set<String> clauses = new HashSet<String>();\n-\n-        // builder to build the clauses\n-        final StringBuilder bld = new StringBuilder();\n-\n-        // Contains used identifiers in order to avoid replications\n-        final Set<String> used = new HashSet<String>();\n-\n-        USchema schema;\n-\n-        // Create several clauses: one for eanch identifiers\n-        for (int i = 0; i < identifiers.size(); i++) {\n-            if (!used.contains(identifiers.get(i))) {\n-\n-                // verify schema existence and get schema type\n-                schema = schemaDAO.find(identifiers.get(i), USchema.class);\n-                if (schema == null) {\n-                    LOG.error(\"Invalid schema name '{}'\", identifiers.get(i));\n-                    throw new InvalidSearchConditionException(\"Invalid schema name \" + identifiers.get(i));\n-                }\n-\n-                // clear builder\n-                bld.delete(0, bld.length());\n-\n-                bld.append(\"(\");\n-\n-                // set schema name\n-                bld.append(\"s.name = '\").append(identifiers.get(i)).append(\"'\");\n-\n-                bld.append(\" AND \");\n-\n-                bld.append(\"s.name = a.schema_name\").append(\" AND \");\n-\n-                bld.append(\"a.id = v.attribute_id\");\n-\n-                bld.append(\" AND \");\n-\n-                // use a value clause different for eanch different schema type\n-                switch (schema.getType()) {\n-                    case Boolean:\n-                        bld.append(\"v.booleanValue = '\").append(attrValues.get(i)).append(\"'\");\n-                        break;\n-                    case Long:\n-                        bld.append(\"v.longValue = \").append(attrValues.get(i));\n-                        break;\n-                    case Double:\n-                        bld.append(\"v.doubleValue = \").append(attrValues.get(i));\n-                        break;\n-                    case Date:\n-                        bld.append(\"v.dateValue = '\").append(attrValues.get(i)).append(\"'\");\n-                        break;\n-                    default:\n-                        bld.append(\"v.stringValue = '\").append(attrValues.get(i)).append(\"'\");\n-                }\n-\n-                bld.append(\")\");\n-\n-                used.add(identifiers.get(i));\n-\n-                clauses.add(bld.toString());\n-            }\n-        }\n-\n-        LOG.debug(\"Generated where clauses {}\", clauses);\n-\n-        return clauses;\n-    }\n-\n-    /**\n-     * Split an attribute value recurring on provided literals/tokens.\n-     *\n-     * @param attrValue value to be split.\n-     * @param literals literals/tokens.\n-     * @return\n-     */\n-    private List<String> split(final String attrValue, final List<String> literals) {\n-\n-        final List<String> attrValues = new ArrayList<String>();\n-\n-        if (literals.isEmpty()) {\n-            attrValues.add(attrValue);\n-        } else {\n-\n-            for (String token : attrValue.split(Pattern.quote(literals.get(0)))) {\n-\n-                attrValues.addAll(split(token, literals.subList(1, literals.size())));\n-            }\n-        }\n-\n-        return attrValues;\n-    }\n }"},{"sha":"e6443184fda57369d306a6c723487418c29c5973","filename":"core/src/main/java/org/apache/syncope/core/report/UserReportlet.java","status":"modified","additions":25,"deletions":17,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -22,7 +22,6 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.apache.syncope.client.report.UserReportletConf;\n import org.apache.syncope.client.report.UserReportletConf.Feature;\n import org.apache.syncope.client.to.AbstractAttributableTO;\n@@ -31,21 +30,24 @@\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.persistence.dao.UserSearchDAO;\n+import static org.apache.syncope.core.report.ReportXMLConst.*;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n-import static org.apache.syncope.core.report.ReportXMLConst.*;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n+import org.apache.syncope.types.AttributableType;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.xml.sax.ContentHandler;\n import org.xml.sax.SAXException;\n import org.xml.sax.helpers.AttributesImpl;\n \n @ReportletConfClass(UserReportletConf.class)\n public class UserReportlet extends AbstractReportlet<UserReportletConf> {\n \n-    private final static int PAGE_SIZE = 10;\n+    private static final int PAGE_SIZE = 10;\n \n     @Autowired\n     private EntitlementDAO entitlementDAO;\n@@ -54,7 +56,7 @@ public class UserReportlet extends AbstractReportlet<UserReportletConf> {\n     private UserDAO userDAO;\n \n     @Autowired\n-    private UserSearchDAO searchDAO;\n+    private AttributableSearchDAO searchDAO;\n \n     @Autowired\n     private UserDataBinder userDataBinder;\n@@ -63,19 +65,26 @@ public class UserReportlet extends AbstractReportlet<UserReportletConf> {\n     private RoleDataBinder roleDataBinder;\n \n     private List<SyncopeUser> getPagedUsers(final int page) {\n-        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(entitlementDAO.findAll());\n+        final Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(entitlementDAO.findAll());\n \n-        return conf.getMatchingCond() == null\n-                ? userDAO.findAll(adminRoleIds, page, PAGE_SIZE)\n-                : searchDAO.search(adminRoleIds, conf.getMatchingCond(), page, PAGE_SIZE);\n+        final List<SyncopeUser> result;\n+        if (conf.getMatchingCond() == null) {\n+            result = userDAO.findAll(adminRoleIds, page, PAGE_SIZE);\n+        } else {\n+            result = searchDAO.search(adminRoleIds, conf.getMatchingCond(), page, PAGE_SIZE,\n+                    AttributableUtil.getInstance(AttributableType.USER));\n+        }\n+\n+        return result;\n     }\n \n     private int count() {\n         Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(entitlementDAO.findAll());\n \n         return conf.getMatchingCond() == null\n                 ? userDAO.count(adminRoleIds)\n-                : searchDAO.count(adminRoleIds, conf.getMatchingCond());\n+                : searchDAO.count(adminRoleIds, conf.getMatchingCond(),\n+                AttributableUtil.getInstance(AttributableType.USER));\n     }\n \n     private void doExtractResources(final ContentHandler handler, final AbstractAttributableTO attributableTO)\n@@ -122,8 +131,8 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n                         handler.endElement(\"\", \"\", \"value\");\n                     }\n                 } else {\n-                    LOG.debug(\"{} not found for {}[{}]\", new Object[] { attrName,\n-                            attributableTO.getClass().getSimpleName(), attributableTO.getId() });\n+                    LOG.debug(\"{} not found for {}[{}]\", new Object[]{attrName,\n+                                attributableTO.getClass().getSimpleName(), attributableTO.getId()});\n                 }\n \n                 handler.endElement(\"\", \"\", \"attribute\");\n@@ -148,8 +157,8 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n                         handler.endElement(\"\", \"\", \"value\");\n                     }\n                 } else {\n-                    LOG.debug(\"{} not found for {}[{}]\", new Object[] { attrName,\n-                            attributableTO.getClass().getSimpleName(), attributableTO.getId() });\n+                    LOG.debug(\"{} not found for {}[{}]\", new Object[]{attrName,\n+                                attributableTO.getClass().getSimpleName(), attributableTO.getId()});\n                 }\n \n                 handler.endElement(\"\", \"\", \"derivedAttribute\");\n@@ -174,8 +183,8 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n                         handler.endElement(\"\", \"\", \"value\");\n                     }\n                 } else {\n-                    LOG.debug(\"{} not found for {}[{}]\", new Object[] { attrName,\n-                            attributableTO.getClass().getSimpleName(), attributableTO.getId() });\n+                    LOG.debug(\"{} not found for {}[{}]\", new Object[]{attrName,\n+                                attributableTO.getClass().getSimpleName(), attributableTO.getId()});\n                 }\n \n                 handler.endElement(\"\", \"\", \"virtualAttribute\");\n@@ -302,7 +311,6 @@ private void doExtract(final ContentHandler handler, final List<SyncopeUser> use\n \n     @Override\n     protected void doExtract(final ContentHandler handler) throws SAXException, ReportException {\n-\n         for (int i = 1; i <= (count() / PAGE_SIZE) + 1; i++) {\n             doExtract(handler, getPagedUsers(i));\n         }"},{"sha":"d527eb52699e216f67f12ace19de19daa0b60712","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -24,25 +24,30 @@\n import java.util.Set;\n import javax.servlet.http.HttpServletResponse;\n import org.apache.syncope.client.mod.RoleMod;\n+import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.client.to.PropagationTO;\n import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.propagation.DefaultPropagationHandler;\n import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationManager;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.ConnObjectUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.core.workflow.WorkflowException;\n import org.apache.syncope.core.workflow.WorkflowResult;\n import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n+import org.apache.syncope.types.AttributableType;\n+import org.apache.syncope.types.AuditElements;\n import org.apache.syncope.types.AuditElements.Category;\n import org.apache.syncope.types.AuditElements.Result;\n import org.apache.syncope.types.AuditElements.RoleSubCategory;\n@@ -59,6 +64,7 @@\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n+import org.springframework.web.servlet.ModelAndView;\n \n @Controller\n @RequestMapping(\"/role\")\n@@ -73,6 +79,9 @@ public class RoleController extends AbstractController {\n     @Autowired\n     private UserDAO userDAO;\n \n+    @Autowired\n+    private AttributableSearchDAO searchDAO;\n+\n     @Autowired\n     private RoleDataBinder dataBinder;\n \n@@ -191,6 +200,77 @@ public List<RoleTO> children(@PathVariable(\"roleId\") final Long roleId)\n         return childrenTOs;\n     }\n \n+    @PreAuthorize(\"hasRole('ROLE_READ')\")\n+    @RequestMapping(method = RequestMethod.POST, value = \"/search\")\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    public List<RoleTO> search(@RequestBody final NodeCond searchCondition)\n+            throws InvalidSearchConditionException {\n+\n+        LOG.debug(\"Role search called with condition {}\", searchCondition);\n+\n+        if (!searchCondition.checkValidity()) {\n+            LOG.error(\"Invalid search condition: {}\", searchCondition);\n+            throw new InvalidSearchConditionException();\n+        }\n+\n+        List<SyncopeRole> matchingRoles = searchDAO.search(EntitlementUtil.getRoleIds(EntitlementUtil.\n+                getOwnedEntitlementNames()), searchCondition, AttributableUtil.getInstance(AttributableType.ROLE));\n+        List<RoleTO> result = new ArrayList<RoleTO>(matchingRoles.size());\n+        for (SyncopeRole role : matchingRoles) {\n+            result.add(dataBinder.getRoleTO(role));\n+        }\n+\n+        auditManager.audit(Category.role, AuditElements.RoleSubCategory.read, Result.success,\n+                \"Successfully searched for roles: \" + result.size());\n+\n+        return result;\n+    }\n+\n+    @PreAuthorize(\"hasRole('ROLE_READ')\")\n+    @RequestMapping(method = RequestMethod.POST, value = \"/search/{page}/{size}\")\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    public List<RoleTO> search(@RequestBody final NodeCond searchCondition, @PathVariable(\"page\") final int page,\n+            @PathVariable(\"size\") final int size)\n+            throws InvalidSearchConditionException {\n+\n+        LOG.debug(\"Role search called with condition {}\", searchCondition);\n+\n+        if (!searchCondition.checkValidity()) {\n+            LOG.error(\"Invalid search condition: {}\", searchCondition);\n+            throw new InvalidSearchConditionException();\n+        }\n+\n+        final List<SyncopeRole> matchingRoles = searchDAO.search(EntitlementUtil.getRoleIds(EntitlementUtil.\n+                getOwnedEntitlementNames()), searchCondition, page, size,\n+                AttributableUtil.getInstance(AttributableType.ROLE));\n+\n+        final List<RoleTO> result = new ArrayList<RoleTO>(matchingRoles.size());\n+        for (SyncopeRole role : matchingRoles) {\n+            result.add(dataBinder.getRoleTO(role));\n+        }\n+\n+        auditManager.audit(Category.role, AuditElements.RoleSubCategory.read, Result.success,\n+                \"Successfully searched for roles (page=\" + page + \", size=\" + size + \"): \" + result.size());\n+\n+        return result;\n+    }\n+\n+    @PreAuthorize(\"hasRole('ROLE_READ')\")\n+    @RequestMapping(method = RequestMethod.POST, value = \"/search/count\")\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    public ModelAndView searchCount(@RequestBody final NodeCond searchCondition)\n+            throws InvalidSearchConditionException {\n+\n+        if (!searchCondition.checkValidity()) {\n+            LOG.error(\"Invalid search condition: {}\", searchCondition);\n+            throw new InvalidSearchConditionException();\n+        }\n+\n+        final Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n+        return new ModelAndView().addObject(searchDAO.count(adminRoleIds, searchCondition,\n+                AttributableUtil.getInstance(AttributableType.ROLE)));\n+    }\n+\n     @RequestMapping(method = RequestMethod.GET, value = \"/list\")\n     @Transactional(readOnly = true)\n     public List<RoleTO> list() {"},{"sha":"534904bdf5791c00f07857fd522f91b0b2e1e435","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":23,"deletions":8,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -36,19 +36,21 @@\n import org.apache.syncope.core.notification.NotificationManager;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.persistence.dao.UserSearchDAO;\n import org.apache.syncope.core.propagation.DefaultPropagationHandler;\n import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationManager;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.ConnObjectUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.core.workflow.WorkflowException;\n import org.apache.syncope.core.workflow.WorkflowResult;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n+import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.AuditElements.Category;\n import org.apache.syncope.types.AuditElements.Result;\n import org.apache.syncope.types.AuditElements.UserSubCategory;\n@@ -88,7 +90,7 @@ public class UserController {\n     private UserDAO userDAO;\n \n     @Autowired\n-    private UserSearchDAO searchDAO;\n+    private AttributableSearchDAO searchDAO;\n \n     @Autowired\n     private UserDataBinder dataBinder;\n@@ -144,9 +146,9 @@ public ModelAndView searchCount(@RequestBody final NodeCond searchCondition)\n             throw new InvalidSearchConditionException();\n         }\n \n-        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n-\n-        return new ModelAndView().addObject(searchDAO.count(adminRoleIds, searchCondition));\n+        final Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n+        return new ModelAndView().addObject(searchDAO.count(adminRoleIds, searchCondition,\n+                AttributableUtil.getInstance(AttributableType.USER)));\n     }\n \n     @PreAuthorize(\"hasRole('USER_LIST')\")\n@@ -200,7 +202,7 @@ public UserTO read(@PathVariable(\"userId\") final Long userId)\n         return result;\n     }\n \n-    @PreAuthorize(\"hasRole('USER_READ')\")\n+    @PreAuthorize(\"#username == authentication.name or hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/readByUsername/{username}\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public UserTO read(@PathVariable final String username)\n@@ -214,6 +216,18 @@ public UserTO read(@PathVariable final String username)\n         return result;\n     }\n \n+    @PreAuthorize(\"isAuthenticated()\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/read/self\")\n+    @Transactional(readOnly = true)\n+    public UserTO read() throws NotFoundException {\n+        UserTO userTO = dataBinder.getAuthenticatedUserTO();\n+\n+        auditManager.audit(Category.user, UserSubCategory.read, Result.success,\n+                \"Successfully read own data: \" + userTO.getUsername());\n+\n+        return userTO;\n+    }\n+\n     @PreAuthorize(\"hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.POST, value = \"/search\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n@@ -228,7 +242,7 @@ public List<UserTO> search(@RequestBody final NodeCond searchCondition)\n         }\n \n         List<SyncopeUser> matchingUsers = searchDAO.search(EntitlementUtil.getRoleIds(EntitlementUtil.\n-                getOwnedEntitlementNames()), searchCondition);\n+                getOwnedEntitlementNames()), searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n         List<UserTO> result = new ArrayList<UserTO>(matchingUsers.size());\n         for (SyncopeUser user : matchingUsers) {\n             result.add(dataBinder.getUserTO(user));\n@@ -255,7 +269,8 @@ public List<UserTO> search(@RequestBody final NodeCond searchCondition, @PathVar\n         }\n \n         final List<SyncopeUser> matchingUsers = searchDAO.search(EntitlementUtil.getRoleIds(EntitlementUtil.\n-                getOwnedEntitlementNames()), searchCondition, page, size);\n+                getOwnedEntitlementNames()), searchCondition, page, size,\n+                AttributableUtil.getInstance(AttributableType.USER));\n \n         final List<UserTO> result = new ArrayList<UserTO>(matchingUsers.size());\n         for (SyncopeUser user : matchingUsers) {"},{"sha":"1f90ca3a52110ea28c1dab4053c9f8ab6a47d2b7","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserRequestController.java","status":"modified","additions":26,"deletions":42,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserRequestController.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -67,29 +67,15 @@ public class UserRequestController {\n     @Autowired\n     private UserRequestDataBinder dataBinder;\n \n-    @PreAuthorize(\"isAuthenticated()\")\n-    @RequestMapping(method = RequestMethod.GET, value = \"/read/self\")\n-    @Transactional(readOnly = true)\n-    public UserTO read() throws NotFoundException {\n-\n-        UserTO userTO = dataBinder.getAuthUserTO();\n-\n-        auditManager.audit(Category.userRequest, UserRequestSubCategory.read, Result.success,\n-                \"Successfully read self data\");\n-\n-        return userTO;\n-    }\n-\n     private Boolean isCreateAllowedByConf() {\n-        SyncopeConf createRequestAllowed = confDAO.find(\"createRequest.allowed\", \"false\");\n+        final SyncopeConf createRequestAllowed = confDAO.find(\"createRequest.allowed\", \"false\");\n \n         return Boolean.valueOf(createRequestAllowed.getValue());\n     }\n \n     @RequestMapping(method = RequestMethod.GET, value = \"/create/allowed\")\n     @Transactional(readOnly = true)\n     public ModelAndView isCreateAllowed() {\n-\n         auditManager.audit(Category.userRequest, UserRequestSubCategory.isCreateAllowed, Result.success,\n                 \"Successfully checked whether self create is allowed\");\n \n@@ -98,7 +84,6 @@ public ModelAndView isCreateAllowed() {\n \n     @RequestMapping(method = RequestMethod.POST, value = \"/create\")\n     public UserRequestTO create(@RequestBody final UserTO userTO) throws UnauthorizedRoleException {\n-\n         if (!isCreateAllowedByConf()) {\n             LOG.error(\"Create requests are not allowed\");\n \n@@ -146,6 +131,29 @@ public UserRequestTO update(@RequestBody final UserMod userMod)\n         return dataBinder.getUserRequestTO(request);\n     }\n \n+    @PreAuthorize(\"isAuthenticated()\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/delete/{userId}\")\n+    public UserRequestTO delete(@PathVariable(\"userId\") final Long userId) throws NotFoundException,\n+            UnauthorizedRoleException {\n+\n+        LOG.debug(\"Request user delete called with {}\", userId);\n+\n+        try {\n+            dataBinder.testDelete(userId);\n+        } catch (RollbackException e) {\n+            LOG.debug(\"Testing delete - ignore exception\");\n+        }\n+\n+        UserRequest request = new UserRequest();\n+        request.setUserId(userId);\n+        request = userRequestDAO.save(request);\n+\n+        auditManager.audit(Category.userRequest, UserRequestSubCategory.delete, Result.success,\n+                \"Successfully deleted user request for user\" + userId);\n+\n+        return dataBinder.getUserRequestTO(request);\n+    }\n+\n     @PreAuthorize(\"hasRole('USER_REQUEST_LIST')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/list\")\n     @Transactional(readOnly = true)\n@@ -166,7 +174,6 @@ public List<UserRequestTO> list() {\n     @RequestMapping(method = RequestMethod.GET, value = \"/read/{requestId}\")\n     @Transactional(readOnly = true)\n     public UserRequestTO read(@PathVariable(\"requestId\") final Long requestId) throws NotFoundException {\n-\n         UserRequest request = userRequestDAO.find(requestId);\n         if (request == null) {\n             throw new NotFoundException(\"User request \" + requestId);\n@@ -178,44 +185,21 @@ public UserRequestTO read(@PathVariable(\"requestId\") final Long requestId) throw\n         return dataBinder.getUserRequestTO(request);\n     }\n \n-    @PreAuthorize(\"isAuthenticated()\")\n-    @RequestMapping(method = RequestMethod.GET, value = \"/delete/{requestId}\")\n-    public UserRequestTO delete(@PathVariable(\"requestId\") final Long userId) throws NotFoundException, UnauthorizedRoleException {\n-\n-        LOG.debug(\"Request user delete called with {}\", userId);\n-\n-        try {\n-            dataBinder.testDelete(userId);\n-        } catch (RollbackException e) {\n-            LOG.debug(\"Testing delete - ignore exception\");\n-        }\n-\n-        UserRequest request = new UserRequest();\n-        request.setUserId(userId);\n-        request = userRequestDAO.save(request);\n-\n-        auditManager.audit(Category.userRequest, UserRequestSubCategory.delete, Result.success,\n-                \"Successfully deleted user request for user\" + userId);\n-\n-        return dataBinder.getUserRequestTO(request);\n-    }\n-\n     @PreAuthorize(\"hasRole('USER_REQUEST_DELETE')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/deleteRequest/{requestId}\")\n     public UserRequestTO deleteRequest(@PathVariable(\"requestId\") final Long requestId) throws NotFoundException {\n-\n         UserRequest request = userRequestDAO.find(requestId);\n         if (request == null) {\n             throw new NotFoundException(\"User request \" + requestId);\n         }\n-        \n+\n         UserRequestTO requestToDelete = dataBinder.getUserRequestTO(request);\n \n         auditManager.audit(Category.userRequest, UserRequestSubCategory.delete, Result.success,\n                 \"Successfully deleted user request for user\" + request.getUserId());\n \n         userRequestDAO.delete(requestId);\n-        \n+\n         return requestToDelete;\n     }\n }"},{"sha":"f1548dbcab24b71197bd8f7feb2d554a3094b096","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -137,8 +137,11 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n \n         resource.setConnectorConfigurationProperties(new HashSet<ConnConfProperty>(resourceTO.getConnConfProperties()));\n \n-        if (resourceTO.getSyncToken() == null) {\n-            resource.setSerializedSyncToken(null);\n+        if (resourceTO.getUsyncToken() == null) {\n+            resource.setUserializedSyncToken(null);\n+        }\n+        if (resourceTO.getRsyncToken() == null) {\n+            resource.setRserializedSyncToken(null);\n         }\n \n         resource.setActionsClassName(resourceTO.getActionsClassName());\n@@ -240,7 +243,9 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n                 ? null : resource.getSyncPolicy().getId());\n \n         resourceTO.setConnectorConfigurationProperties(resource.getConfiguration());\n-        resourceTO.setSyncToken(resource.getSerializedSyncToken());\n+\n+        resourceTO.setUsyncToken(resource.getUserializedSyncToken());\n+        resourceTO.setRsyncToken(resource.getRserializedSyncToken());\n \n         resourceTO.setActionsClassName(resource.getActionsClassName());\n "},{"sha":"4dcc03c3d20bef606a2451e4ae67a552932d9ff5","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":14,"deletions":5,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -56,6 +56,7 @@\n import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n+import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -82,16 +83,24 @@ public SyncopeUser getUserFromId(final Long userId)\n             throw new NotFoundException(\"User \" + userId);\n         }\n \n-        Set<Long> roleIds = user.getRoleIds();\n-        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n-        roleIds.removeAll(adminRoleIds);\n-        if (!roleIds.isEmpty()) {\n-            throw new UnauthorizedRoleException(roleIds);\n+        if (!user.getUsername().equals(EntitlementUtil.getAuthenticatedUsername())) {\n+            Set<Long> roleIds = user.getRoleIds();\n+            Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n+            roleIds.removeAll(adminRoleIds);\n+            if (!roleIds.isEmpty()) {\n+                throw new UnauthorizedRoleException(roleIds);\n+            }\n         }\n \n         return user;\n     }\n \n+    @Transactional(readOnly = true)\n+    public UserTO getAuthenticatedUserTO() throws NotFoundException {\n+        SyncopeUser authUser = userDAO.find(SecurityContextHolder.getContext().getAuthentication().getName());\n+        return getUserTO(authUser);\n+    }\n+\n     @Transactional(readOnly = true)\n     public boolean verifyPassword(final String username, final String password)\n             throws NotFoundException, UnauthorizedRoleException {"},{"sha":"89e710f71185389ca46598c2c8134061d2b1c0fb","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserRequestDataBinder.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserRequestDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserRequestDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserRequestDataBinder.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -42,9 +42,8 @@ public class UserRequestDataBinder {\n     @Autowired\n     private UserDAO userDAO;\n \n-    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public SyncopeUser getUserFromId(final Long userId) throws NotFoundException, UnauthorizedRoleException {\n-\n         if (userId == null) {\n             throw new NotFoundException(\"Null user id\");\n         }\n@@ -63,9 +62,8 @@ public SyncopeUser getUserFromId(final Long userId) throws NotFoundException, Un\n         return user;\n     }\n \n-    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public UserTO getAuthUserTO() throws NotFoundException {\n-\n         SyncopeUser authUser = userDAO.find(SecurityContextHolder.getContext().getAuthentication().getName());\n         return userDataBinder.getUserTO(authUser);\n     }\n@@ -77,7 +75,7 @@ public UserRequestTO getUserRequestTO(final UserRequest request) {\n         return result;\n     }\n \n-    @Transactional(rollbackFor = { Throwable.class })\n+    @Transactional(rollbackFor = {Throwable.class})\n     public void testCreate(final UserTO userTO) {\n         SyncopeUser user = new SyncopeUser();\n         userDataBinder.create(user, userTO);\n@@ -86,19 +84,17 @@ public void testCreate(final UserTO userTO) {\n         throw new RollbackException();\n     }\n \n-    @Transactional(rollbackFor = { Throwable.class })\n+    @Transactional(rollbackFor = {Throwable.class})\n     public void testUpdate(final UserMod userMod) throws NotFoundException, UnauthorizedRoleException {\n-\n         SyncopeUser user = getUserFromId(userMod.getId());\n         userDataBinder.update(user, userMod);\n         userDAO.save(user);\n \n         throw new RollbackException();\n     }\n \n-    @Transactional(rollbackFor = { Throwable.class })\n+    @Transactional(rollbackFor = {Throwable.class})\n     public void testDelete(final Long userId) throws NotFoundException, UnauthorizedRoleException {\n-\n         SyncopeUser user = getUserFromId(userId);\n         userDAO.delete(user);\n "},{"sha":"961236f235fb77d7ab051357e071f52b45a56e3b","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -114,7 +114,7 @@ public Authentication authenticate(final Authentication authentication)\n         SyncopeUser passwordUser = new SyncopeUser();\n         SyncopeUser user = null;\n \n-        String username = authentication.getPrincipal().toString();\n+        String username = authentication.getName();\n \n         if (adminUser.equals(username)) {\n             authenticated = PasswordEncoder.verifyPassword("},{"sha":"ec46cccf02dca57a96c8bd78d6ec1f321a221293","filename":"core/src/main/java/org/apache/syncope/core/sync/DefaultSyncActions.java","status":"modified","additions":13,"deletions":8,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultSyncActions.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -19,8 +19,8 @@\n package org.apache.syncope.core.sync;\n \n import java.util.List;\n-import org.apache.syncope.client.mod.UserMod;\n-import org.apache.syncope.client.to.UserTO;\n+import org.apache.syncope.client.mod.AbstractAttributableMod;\n+import org.apache.syncope.client.to.AbstractAttributableTO;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n@@ -35,24 +35,29 @@ public void beforeAll(final SyncTask task) throws JobExecutionException {\n     }\n \n     @Override\n-    public SyncDelta beforeCreate(final SyncDelta delta, final UserTO user) throws JobExecutionException {\n+    public <T extends AbstractAttributableTO> SyncDelta beforeCreate(final SyncDelta delta, final T subject)\n+            throws JobExecutionException {\n+\n         return delta;\n     }\n \n     @Override\n-    public SyncDelta beforeUpdate(final SyncDelta delta, final UserTO user, final UserMod userMod)\n-            throws JobExecutionException {\n+    public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta beforeUpdate(\n+            final SyncDelta delta, final T subject, final K subjectMod) throws JobExecutionException {\n+\n         return delta;\n     }\n \n     @Override\n-    public SyncDelta beforeDelete(final SyncDelta delta, final UserTO user) throws JobExecutionException {\n+    public <T extends AbstractAttributableTO> SyncDelta beforeDelete(final SyncDelta delta, final T subject)\n+            throws JobExecutionException {\n+\n         return delta;\n     }\n \n     @Override\n-    public void after(final SyncDelta delta, final UserTO user, final SyncResult result)\n-            throws JobExecutionException {\n+    public <T extends AbstractAttributableTO> void after(final SyncDelta delta, final T subject,\n+            final SyncResult result) throws JobExecutionException {\n     }\n \n     @Override"},{"sha":"345b0407ca251eaf3c908a4bb587712686e0958d","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncActions.java","status":"modified","additions":26,"deletions":23,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -19,8 +19,8 @@\n package org.apache.syncope.core.sync;\n \n import java.util.List;\n-import org.apache.syncope.client.mod.UserMod;\n-import org.apache.syncope.client.to.UserTO;\n+import org.apache.syncope.client.mod.AbstractAttributableMod;\n+import org.apache.syncope.client.to.AbstractAttributableTO;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n@@ -41,51 +41,54 @@ public interface SyncActions {\n     /**\n      * Action to be executed before to create a synchronized user locally.\n      *\n-     * @param delta retrieved synchronization information.\n-     * @param user user to be created.\n+     * @param delta retrieved synchronization information\n+     * @param subject user / role to be created\n      * @return synchronization information used for user status evaluation and to be passed to the 'after' method.\n-     * @throws JobExecutionException in case of generic failure.\n+     * @throws JobExecutionException in case of generic failure\n      */\n-    SyncDelta beforeCreate(final SyncDelta delta, final UserTO user) throws JobExecutionException;\n+    <T extends AbstractAttributableTO> SyncDelta beforeCreate(final SyncDelta delta, final T subject)\n+            throws JobExecutionException;\n \n     /**\n      * Action to be executed before to update a synchronized user locally.\n      *\n-     * @param delta retrieved synchronization information.\n-     * @param user local user information.\n-     * @param userMod modification.\n+     * @param delta retrieved synchronization information\n+     * @param subject local user / role information\n+     * @param subjectMod modification\n      * @return synchronization information used for logging and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure.\n      */\n-    SyncDelta beforeUpdate(final SyncDelta delta, final UserTO user, final UserMod userMod)\n-            throws JobExecutionException;\n+    <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta beforeUpdate(final SyncDelta delta,\n+            final T subject, final K subjectMod) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to delete a synchronized user locally.\n      *\n-     * @param delta retrieved synchronization information.\n-     * @param userlocal user to be deleted.\n+     * @param delta retrieved synchronization information\n+     * @param subject lcao user / role to be deleted\n      * @return synchronization information used for logging and to be passed to the 'after' method.\n-     * @throws JobExecutionException in case of generic failure.\n+     * @throws JobExecutionException in case of generic failure\n      */\n-    SyncDelta beforeDelete(final SyncDelta delta, final UserTO user) throws JobExecutionException;\n+    <T extends AbstractAttributableTO> SyncDelta beforeDelete(final SyncDelta delta, final T subject)\n+            throws JobExecutionException;\n \n     /**\n      * Action to be executed after each local user synchronization.\n      *\n-     * @param delta retrieved synchronization information (may be modified by 'beforeCreate/beforeUpdate/beforeDelete').\n-     * @param user synchronized local user.\n-     * @param result global synchronization results at the current synchronization step.\n-     * @throws JobExecutionException in case of generic failure.\n+     * @param delta retrieved synchronization information (may be modified by 'beforeCreate/beforeUpdate/beforeDelete')\n+     * @param subject synchronized local user / role\n+     * @param result global synchronization results at the current synchronization step\n+     * @throws JobExecutionException in case of generic failure\n      */\n-    void after(final SyncDelta delta, final UserTO user, final SyncResult result) throws JobExecutionException;\n+    <T extends AbstractAttributableTO> void after(final SyncDelta delta, final T subject, final SyncResult result)\n+            throws JobExecutionException;\n \n     /**\n      * Action to be executed after the synchronization task completion.\n      *\n-     * @param task executed synchronization task.\n-     * @param results synchronization result.\n-     * @throws JobExecutionException in case of generic failure.\n+     * @param task executed synchronization task\n+     * @param results synchronization result\n+     * @throws JobExecutionException in case of generic failure\n      */\n     void afterAll(final SyncTask task, final List<SyncResult> results) throws JobExecutionException;\n }"},{"sha":"41e16bc0bdcd3d0f1e9a4bcab7a49c571aa5b115","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncJob.java","status":"modified","additions":32,"deletions":11,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -21,12 +21,13 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.core.init.ConnInstanceLoader;\n-import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.SyncPolicy;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n+import org.apache.syncope.core.persistence.beans.role.RMapping;\n+import org.apache.syncope.core.persistence.beans.user.UMapping;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n@@ -227,12 +228,19 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n             throw new JobExecutionException(msg, e);\n         }\n \n-        final AbstractMappingItem accountIdItem = syncTask.getResource().getUmapping().getAccountIdItem();\n-        if (accountIdItem == null) {\n-            throw new JobExecutionException(\"Invalid account id mapping for resource \" + syncTask.getResource());\n+        UMapping uMapping = syncTask.getResource().getUmapping();\n+        if (uMapping != null && uMapping.getAccountIdItem() == null) {\n+            throw new JobExecutionException(\"Invalid user account id mapping for resource \" + syncTask.getResource());\n+        }\n+        RMapping rMapping = syncTask.getResource().getRmapping();\n+        if (rMapping != null && rMapping.getAccountIdItem() == null) {\n+            throw new JobExecutionException(\"Invalid role account id mapping for resource \" + syncTask.getResource());\n+        }\n+        if (uMapping == null && rMapping == null) {\n+            return \"No mapping configured for both users and roles: aborting...\";\n         }\n \n-        LOG.debug(\"Execute synchronization with token {}\", syncTask.getResource().getSyncToken());\n+        LOG.debug(\"Execute synchronization with token {}\", syncTask.getResource().getUsyncToken());\n \n         final List<SyncResult> results = new ArrayList<SyncResult>();\n \n@@ -255,17 +263,30 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n         actions.beforeAll(syncTask);\n         try {\n             if (syncTask.isFullReconciliation()) {\n-                connector.getAllObjects(ObjectClass.ACCOUNT, handler,\n-                        connector.getOperationOptions(syncTask.getResource().getUmapping().getItems()));\n+                if (uMapping != null) {\n+                    connector.getAllObjects(ObjectClass.ACCOUNT, handler,\n+                            connector.getOperationOptions(uMapping.getItems()));\n+                }\n+                if (rMapping != null) {\n+                    connector.getAllObjects(ObjectClass.GROUP, handler,\n+                            connector.getOperationOptions(rMapping.getItems()));\n+                }\n             } else {\n-                connector.sync(ObjectClass.ACCOUNT, syncTask.getResource().getSyncToken(), handler,\n-                        connector.getOperationOptions(syncTask.getResource().getUmapping().getItems()));\n+                if (uMapping != null) {\n+                    connector.sync(ObjectClass.ACCOUNT, syncTask.getResource().getUsyncToken(), handler,\n+                            connector.getOperationOptions(uMapping.getItems()));\n+                }\n+                if (rMapping != null) {\n+                    connector.sync(ObjectClass.GROUP, syncTask.getResource().getUsyncToken(), handler,\n+                            connector.getOperationOptions(rMapping.getItems()));\n+                }\n             }\n \n             if (!dryRun && !syncTask.isFullReconciliation()) {\n                 try {\n                     ExternalResource resource = resourceDAO.find(syncTask.getResource().getName());\n-                    resource.setSyncToken(connector.getLatestSyncToken(ObjectClass.ACCOUNT));\n+                    resource.setUsyncToken(connector.getLatestSyncToken(ObjectClass.ACCOUNT));\n+                    resource.setRsyncToken(connector.getLatestSyncToken(ObjectClass.GROUP));\n                     resourceDAO.save(resource);\n                 } catch (Exception e) {\n                     throw new JobExecutionException(\"While updating SyncToken\", e);\n@@ -280,7 +301,7 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n \n         LOG.debug(\"Sync result: {}\", result);\n \n-        return result.toString();\n+        return result;\n     }\n \n     @Override"},{"sha":"0aec200a4dc52120860783bc0c07f4d16a5e4a24","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncResult.java","status":"modified","additions":17,"deletions":16,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.sync;\n \n import java.util.Collection;\n-\n import org.apache.commons.lang.StringUtils;\n import org.apache.commons.lang.builder.ReflectionToStringBuilder;\n import org.apache.commons.lang.builder.ToStringStyle;\n@@ -42,9 +41,9 @@ static enum Operation {\n \n     private Operation operation;\n \n-    private Long userId;\n+    private Long id;\n \n-    private String username;\n+    private String name;\n \n     public String getMessage() {\n         return message;\n@@ -54,20 +53,20 @@ public void setMessage(final String message) {\n         this.message = message;\n     }\n \n-    public String getUsername() {\n-        return username;\n+    public String getName() {\n+        return name;\n     }\n \n-    public void setUsername(final String username) {\n-        this.username = username;\n+    public void setName(final String name) {\n+        this.name = name;\n     }\n \n-    public Long getUserId() {\n-        return userId;\n+    public Long getId() {\n+        return id;\n     }\n \n-    public void setUserId(Long userId) {\n-        this.userId = userId;\n+    public void setId(Long id) {\n+        this.id = id;\n     }\n \n     public Status getStatus() {\n@@ -93,6 +92,7 @@ public String toString() {\n \n     /**\n      * Human readable report string, using the given trace level.\n+     *\n      * @param level trace level\n      * @return String for certain levels, null for level NONE\n      */\n@@ -103,24 +103,25 @@ public String getReportString(final TraceLevel level) {\n         } else if (level == TraceLevel.FAILURES && status == Status.FAILURE) {\n \n             // only report failures\n-            return String.format(\"Failed %s (id/name): %d/%s with message: %s\", operation, userId, username, message);\n+            return String.format(\"Failed %s (id/name): %d/%s with message: %s\", operation, id, name, message);\n         } else {\n             // All\n-            return String.format(\"%s %s (id/ name): %d/ %s %s\", operation, status, userId, username, StringUtils\n+            return String.format(\"%s %s (id/ name): %d/ %s %s\", operation, status, id, name, StringUtils\n                     .isEmpty(message)\n                     ? \"\"\n                     : \"with message: \" + message);\n         }\n     }\n \n     /**\n-     * Helper method to invoke logging per synchronization result for the\n-     * given trace level.\n+     * Helper method to invoke logging per synchronization result for the given trace level.\n+     *\n      * @param results synchronization result\n      * @param level trace level\n      * @return report as string\n      */\n-    public static String reportSetOfSynchronizationResult(final Collection<SyncResult> results, final TraceLevel level) {\n+    public static String reportSetOfSynchronizationResult(final Collection<SyncResult> results,\n+            final TraceLevel level) {\n \n         StringBuilder sb = new StringBuilder();\n         for (SyncResult sr : results) {"},{"sha":"dc077a0a58b8b5a5c519548b258b61d3540c2ffa","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncopeSyncResultHandler.java","status":"modified","additions":330,"deletions":205,"changes":535,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -24,35 +24,46 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.syncope.client.mod.AbstractAttributableMod;\n+import org.apache.syncope.client.mod.RoleMod;\n import org.apache.syncope.client.mod.UserMod;\n+import org.apache.syncope.client.search.AttributableCond;\n import org.apache.syncope.client.search.AttributeCond;\n import org.apache.syncope.client.search.NodeCond;\n-import org.apache.syncope.client.search.SyncopeUserCond;\n+import org.apache.syncope.client.to.AbstractAttributableTO;\n+import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.core.notification.NotificationManager;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n+import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n+import org.apache.syncope.core.persistence.beans.AbstractSchema;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n-import org.apache.syncope.core.persistence.beans.user.USchema;\n+import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n+import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.persistence.dao.UserSearchDAO;\n import org.apache.syncope.core.persistence.validation.attrvalue.ParsingValidationException;\n import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationManager;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.quartz.AbstractTaskJob;\n import org.apache.syncope.core.rest.controller.InvalidSearchConditionException;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n+import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.ConnObjectUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.NotFoundException;\n import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n+import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.ConflictResolutionAction;\n import org.apache.syncope.types.SyncPolicySpec;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -71,7 +82,7 @@ public class SyncopeSyncResultHandler implements SyncResultsHandler {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(SyncopeSyncResultHandler.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(SyncopeSyncResultHandler.class);\n \n     /**\n      * Entitlement DAO.\n@@ -91,11 +102,17 @@ public class SyncopeSyncResultHandler implements SyncResultsHandler {\n     @Autowired\n     private UserDAO userDAO;\n \n+    /**\n+     * Role DAO.\n+     */\n+    @Autowired\n+    private RoleDAO roleDAO;\n+\n     /**\n      * User search DAO.\n      */\n     @Autowired\n-    private UserSearchDAO userSearchDAO;\n+    private AttributableSearchDAO searchDAO;\n \n     /**\n      * ConnectorObject util.\n@@ -109,6 +126,12 @@ public class SyncopeSyncResultHandler implements SyncResultsHandler {\n     @Autowired\n     private UserWorkflowAdapter uwfAdapter;\n \n+    /**\n+     * Role workflow adapter.\n+     */\n+    @Autowired\n+    private RoleWorkflowAdapter rwfAdapter;\n+\n     /**\n      * Propagation Manager.\n      */\n@@ -127,6 +150,12 @@ public class SyncopeSyncResultHandler implements SyncResultsHandler {\n     @Autowired\n     private UserDataBinder userDataBinder;\n \n+    /**\n+     * Role data binder.\n+     */\n+    @Autowired\n+    private RoleDataBinder roleDataBinder;\n+\n     /**\n      * Notification Manager.\n      */\n@@ -177,144 +206,172 @@ public boolean handle(final SyncDelta delta) {\n         }\n     }\n \n-    /**\n-     * Find users based on mapped uid value (or previous uid value, if updated).\n-     *\n-     * @param delta sync delta\n-     * @return list of matching users\n-     */\n-    private List<Long> findExistingUsers(final SyncDelta delta) {\n-        final String uid = delta.getPreviousUid() == null\n-                ? delta.getUid().getUidValue()\n-                : delta.getPreviousUid().getUidValue();\n-\n-        // ---------------------------------\n-        // Get sync policy specification\n-        // ---------------------------------\n-        SyncPolicySpec policySpec = null;\n-        if (syncTask.getResource().getSyncPolicy() != null) {\n-            policySpec = (SyncPolicySpec) syncTask.getResource().getSyncPolicy().getSpecification();\n-        }\n-        // ---------------------------------\n-\n+    private List<Long> findByAccountIdItem(final String uid, final AttributableUtil attrUtil) {\n         final List<Long> result = new ArrayList<Long>();\n \n-        if (policySpec == null || policySpec.getAlternativeSearchAttrs().isEmpty()) {\n-            SyncopeUser found;\n-            List<SyncopeUser> users;\n+        final AbstractMappingItem accountIdItem = attrUtil.getAccountIdItem(syncTask.getResource());\n+        switch (accountIdItem.getIntMappingType()) {\n+            case UserSchema:\n+            case RoleSchema:\n+                final AbstractAttrValue value = attrUtil.newAttrValue();\n \n-            final AbstractMappingItem accountIdItem = syncTask.getResource().getUmapping().getAccountIdItem();\n-            switch (accountIdItem.getIntMappingType()) {\n-                case Username:\n-                    found = userDAO.find(uid);\n-                    if (found != null) {\n-                        result.add(found.getId());\n+                AbstractSchema schema = schemaDAO.find(accountIdItem.getIntAttrName(), attrUtil.schemaClass());\n+                if (schema == null) {\n+                    value.setStringValue(uid);\n+                } else {\n+                    try {\n+                        value.parseValue(schema, uid);\n+                    } catch (ParsingValidationException e) {\n+                        LOG.error(\"While parsing provided __UID__ {}\", uid, e);\n+                        value.setStringValue(uid);\n                     }\n-                    break;\n+                }\n+\n+                List<AbstractAttributable> subjects =\n+                        userDAO.findByAttrValue(accountIdItem.getIntAttrName(), value, attrUtil);\n+                for (AbstractAttributable subject : subjects) {\n+                    result.add(subject.getId());\n+                }\n+                break;\n \n-                case UserId:\n-                    found = userDAO.find(Long.parseLong(uid));\n-                    if (found != null) {\n-                        result.add(found.getId());\n+            case UserDerivedSchema:\n+            case RoleDerivedSchema:\n+                try {\n+                    subjects = userDAO.findByDerAttrValue(accountIdItem.getIntAttrName(), uid, attrUtil);\n+                    for (AbstractAttributable subject : subjects) {\n+                        result.add(subject.getId());\n                     }\n-                    break;\n+                } catch (InvalidSearchConditionException e) {\n+                    LOG.error(\"Could not search for matching subjects\", e);\n+                }\n+                break;\n \n-                case UserSchema:\n-                    final UAttrValue value = new UAttrValue();\n+            case Username:\n+                SyncopeUser user = userDAO.find(uid);\n+                if (user != null) {\n+                    result.add(user.getId());\n+                }\n+                break;\n \n-                    USchema schema = schemaDAO.find(accountIdItem.getIntAttrName(), USchema.class);\n-                    if (schema == null) {\n-                        value.setStringValue(uid);\n-                    } else {\n-                        try {\n-                            value.parseValue(schema, uid);\n-                        } catch (ParsingValidationException e) {\n-                            LOG.error(\"While parsing provided __UID__ {}\", uid, e);\n-                            value.setStringValue(uid);\n-                        }\n-                    }\n+            case UserId:\n+                user = userDAO.find(Long.parseLong(uid));\n+                if (user != null) {\n+                    result.add(user.getId());\n+                }\n+                break;\n \n-                    users = userDAO.findByAttrValue(accountIdItem.getIntAttrName(), value);\n-                    for (SyncopeUser user : users) {\n-                        result.add(user.getId());\n-                    }\n-                    break;\n+            case RoleName:\n+                List<SyncopeRole> roles = roleDAO.find(uid);\n+                for (SyncopeRole role : roles) {\n+                    result.add(role.getId());\n+                }\n+                break;\n \n-                case UserDerivedSchema:\n-                    try {\n-                        users = userDAO.findByDerAttrValue(accountIdItem.getIntAttrName(), uid);\n-                        for (SyncopeUser user : users) {\n-                            result.add(user.getId());\n-                        }\n-                    } catch (InvalidSearchConditionException e) {\n-                        LOG.error(\"Could not search for matching users\", e);\n-                    }\n-                    break;\n+            case RoleId:\n+                SyncopeRole role = roleDAO.find(Long.parseLong(uid));\n+                if (role != null) {\n+                    result.add(role.getId());\n+                }\n+                break;\n \n-                default:\n-                    LOG.error(\"Invalid accountId type '{}'\", accountIdItem.getIntMappingType());\n-            }\n-        } else {\n-            // search for external attribute's name/value of each specified name\n+            default:\n+                LOG.error(\"Invalid accountId type '{}'\", accountIdItem.getIntMappingType());\n+        }\n \n-            final Map<String, Attribute> extValues = new HashMap<String, Attribute>();\n+        return result;\n+    }\n \n-            for (AbstractMappingItem item : syncTask.getResource().getUmapping().getItems()) {\n-                extValues.put(item.getIntAttrName(), delta.getObject().getAttributeByName(item.getExtAttrName()));\n-            }\n+    private List<Long> findByAttributableSearch(final SyncDelta delta, final SyncPolicySpec policySpec,\n+            final AttributableUtil attrUtil) {\n \n-            // search for user by attribute(s) specified in the policy\n-            NodeCond searchCond = null;\n+        final List<Long> result = new ArrayList<Long>();\n \n-            for (String schema : policySpec.getAlternativeSearchAttrs()) {\n-                Attribute value = extValues.get(schema);\n+        // search for external attribute's name/value of each specified name\n \n-                AttributeCond.Type type;\n-                String expression = null;\n+        final Map<String, Attribute> extValues = new HashMap<String, Attribute>();\n \n-                if (value == null || value.getValue() == null || value.getValue().isEmpty()) {\n-                    type = AttributeCond.Type.ISNULL;\n-                } else {\n-                    type = AttributeCond.Type.EQ;\n-                    expression = value.getValue().size() > 1\n-                            ? value.getValue().toString()\n-                            : value.getValue().get(0).toString();\n-                }\n+        for (AbstractMappingItem item : attrUtil.getMappingItems(syncTask.getResource())) {\n+            extValues.put(item.getIntAttrName(), delta.getObject().getAttributeByName(item.getExtAttrName()));\n+        }\n \n-                NodeCond nodeCond;\n-                // just Username or UserId can be selected to be used\n-                if (\"id\".equalsIgnoreCase(schema) || \"username\".equalsIgnoreCase(schema)) {\n-                    SyncopeUserCond cond = new SyncopeUserCond();\n-                    cond.setSchema(schema);\n-                    cond.setType(type);\n-                    cond.setExpression(expression);\n+        // search for user/role by attribute(s) specified in the policy\n+        NodeCond searchCond = null;\n \n-                    nodeCond = NodeCond.getLeafCond(cond);\n-                } else {\n-                    AttributeCond cond = new AttributeCond();\n-                    cond.setSchema(schema);\n-                    cond.setType(type);\n-                    cond.setExpression(expression);\n+        for (String schema : attrUtil.getAltSearchSchemas(policySpec)) {\n+            Attribute value = extValues.get(schema);\n \n-                    nodeCond = NodeCond.getLeafCond(cond);\n-                }\n+            AttributeCond.Type type;\n+            String expression = null;\n \n-                searchCond = searchCond == null\n-                        ? nodeCond\n-                        : NodeCond.getAndCond(searchCond, nodeCond);\n+            if (value == null || value.getValue() == null || value.getValue().isEmpty()) {\n+                type = AttributeCond.Type.ISNULL;\n+            } else {\n+                type = AttributeCond.Type.EQ;\n+                expression = value.getValue().size() > 1\n+                        ? value.getValue().toString()\n+                        : value.getValue().get(0).toString();\n             }\n \n-            final List<SyncopeUser> users =\n-                    userSearchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCond);\n-            for (SyncopeUser user : users) {\n-                result.add(user.getId());\n+            NodeCond nodeCond;\n+            // users: just id or username can be selected to be used\n+            // roles: just id or name can be selected to be used\n+            if (\"id\".equalsIgnoreCase(schema) || \"username\".equalsIgnoreCase(schema)\n+                    || \"name\".equalsIgnoreCase(schema)) {\n+\n+                AttributableCond cond = new AttributableCond();\n+                cond.setSchema(schema);\n+                cond.setType(type);\n+                cond.setExpression(expression);\n+\n+                nodeCond = NodeCond.getLeafCond(cond);\n+            } else {\n+                AttributeCond cond = new AttributeCond();\n+                cond.setSchema(schema);\n+                cond.setType(type);\n+                cond.setExpression(expression);\n+\n+                nodeCond = NodeCond.getLeafCond(cond);\n             }\n+\n+            searchCond = searchCond == null\n+                    ? nodeCond\n+                    : NodeCond.getAndCond(searchCond, nodeCond);\n+        }\n+\n+        final List<AbstractAttributable> subjects = searchDAO.search(\n+                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCond, attrUtil);\n+        for (AbstractAttributable subject : subjects) {\n+            result.add(subject.getId());\n         }\n \n         return result;\n     }\n \n-    private List<SyncResult> createUser(SyncDelta delta, final boolean dryRun) throws JobExecutionException {\n+    /**\n+     * Find users / roles based on mapped uid value (or previous uid value, if updated).\n+     *\n+     * @param delta sync delta\n+     * @param attrUtil attributable util\n+     * @return list of matching users / roles\n+     */\n+    protected List<Long> findExisting(final SyncDelta delta, final AttributableUtil attrUtil) {\n+        final String uid = delta.getPreviousUid() == null\n+                ? delta.getUid().getUidValue()\n+                : delta.getPreviousUid().getUidValue();\n+\n+        SyncPolicySpec policySpec = null;\n+        if (syncTask.getResource().getSyncPolicy() != null) {\n+            policySpec = (SyncPolicySpec) syncTask.getResource().getSyncPolicy().getSpecification();\n+        }\n+\n+        return policySpec == null || attrUtil.getAltSearchSchemas(policySpec).isEmpty()\n+                ? findByAccountIdItem(uid, attrUtil)\n+                : findByAttributableSearch(delta, policySpec, attrUtil);\n+    }\n+\n+    protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUtil,\n+            final boolean dryRun) throws JobExecutionException {\n+\n         if (!syncTask.isPerformCreate()) {\n             LOG.debug(\"SyncTask not configured for create\");\n             return Collections.EMPTY_LIST;\n@@ -323,170 +380,233 @@ private List<SyncResult> createUser(SyncDelta delta, final boolean dryRun) throw\n         final SyncResult result = new SyncResult();\n         result.setOperation(SyncResult.Operation.CREATE);\n \n-        UserTO userTO = connObjectUtil.getUserTO(delta.getObject(), syncTask);\n+        AbstractAttributableTO subjectTO = connObjectUtil.getAttributableTO(delta.getObject(), syncTask, attrUtil);\n \n-        delta = actions.beforeCreate(delta, userTO);\n+        delta = actions.beforeCreate(delta, subjectTO);\n \n         if (dryRun) {\n-            result.setUserId(0L);\n-            result.setUsername(userTO.getUsername());\n+            result.setId(0L);\n+            if (subjectTO instanceof UserTO) {\n+                result.setName(((UserTO) subjectTO).getUsername());\n+            }\n+            if (subjectTO instanceof RoleTO) {\n+                result.setName(((RoleTO) subjectTO).getName());\n+            }\n             result.setStatus(AbstractTaskJob.Status.SUCCESS);\n         } else {\n             try {\n-                // --------------------------\n-                // Check for status synchronization ...\n-                // --------------------------\n-                Boolean enabled = null;\n-                if (syncTask.isSyncStatus()) {\n-                    Attribute status = AttributeUtil.find(OperationalAttributes.ENABLE_NAME,\n-                            delta.getObject().getAttributes());\n-                    if (status != null && status.getValue() != null && !status.getValue().isEmpty()) {\n-                        enabled = (Boolean) status.getValue().get(0);\n+                if (AttributableType.USER == attrUtil.getType()) {\n+                    // --------------------------\n+                    // Check for status synchronization ...\n+                    // --------------------------\n+                    Boolean enabled = null;\n+                    if (syncTask.isSyncStatus()) {\n+                        Attribute status = AttributeUtil.find(OperationalAttributes.ENABLE_NAME,\n+                                delta.getObject().getAttributes());\n+                        if (status != null && status.getValue() != null && !status.getValue().isEmpty()) {\n+                            enabled = (Boolean) status.getValue().get(0);\n+                        }\n                     }\n-                }\n-                // --------------------------\n+                    // --------------------------\n \n-                WorkflowResult<Map.Entry<Long, Boolean>> created = uwfAdapter.create(userTO, true, enabled);\n+                    WorkflowResult<Map.Entry<Long, Boolean>> created =\n+                            uwfAdapter.create((UserTO) subjectTO, true, enabled);\n \n-                List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(created, userTO.getPassword(),\n-                        userTO.getVirtualAttributes(), Collections.singleton(syncTask.getResource().getName()));\n+                    List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(created,\n+                            ((UserTO) subjectTO).getPassword(), subjectTO.getVirtualAttributes(),\n+                            Collections.singleton(syncTask.getResource().getName()));\n \n-                taskExecutor.execute(tasks);\n+                    taskExecutor.execute(tasks);\n \n-                notificationManager.createTasks(created.getResult().getKey(), created.getPerformedTasks());\n+                    notificationManager.createTasks(created.getResult().getKey(), created.getPerformedTasks());\n \n-                userTO = userDataBinder.getUserTO(created.getResult().getKey());\n+                    subjectTO = userDataBinder.getUserTO(created.getResult().getKey());\n \n-                result.setUserId(created.getResult().getKey());\n-                result.setUsername(userTO.getUsername());\n+                    result.setId(created.getResult().getKey());\n+                }\n+                if (AttributableType.ROLE == attrUtil.getType()) {\n+                    WorkflowResult<Long> created = rwfAdapter.create((RoleTO) subjectTO);\n+\n+                    List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created,\n+                            subjectTO.getVirtualAttributes(), Collections.singleton(syncTask.getResource().getName()));\n+\n+                    taskExecutor.execute(tasks);\n+\n+                    subjectTO = roleDataBinder.getRoleTO(created.getResult());\n+\n+                    result.setId(created.getResult());\n+                }\n+\n+                if (subjectTO instanceof UserTO) {\n+                    result.setName(((UserTO) subjectTO).getUsername());\n+                }\n+                if (subjectTO instanceof RoleTO) {\n+                    result.setName(((RoleTO) subjectTO).getName());\n+                }\n                 result.setStatus(AbstractTaskJob.Status.SUCCESS);\n             } catch (PropagationException e) {\n-                LOG.error(\"Could not propagate user \" + delta.getUid().getUidValue(), e);\n+                LOG.error(\"Could not propagate {} {}\", attrUtil.getType(), delta.getUid().getUidValue(), e);\n             } catch (Exception e) {\n                 result.setStatus(AbstractTaskJob.Status.FAILURE);\n                 result.setMessage(e.getMessage());\n-                LOG.error(\"Could not create user \" + delta.getUid().getUidValue(), e);\n+                LOG.error(\"Could not create {} {} \", attrUtil.getType(), delta.getUid().getUidValue(), e);\n             }\n         }\n \n-        actions.after(delta, userTO, result);\n+        actions.after(delta, subjectTO, result);\n         return Collections.singletonList(result);\n     }\n \n-    private List<SyncResult> updateUsers(SyncDelta delta, final List<Long> users, final boolean dryRun)\n-            throws JobExecutionException {\n+    protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, final AttributableUtil attrUtil,\n+            final boolean dryRun) throws JobExecutionException {\n \n         if (!syncTask.isPerformUpdate()) {\n             LOG.debug(\"SyncTask not configured for update\");\n             return Collections.EMPTY_LIST;\n         }\n \n-        LOG.debug(\"About to update {}\", users);\n+        LOG.debug(\"About to update {}\", subjects);\n \n-        List<SyncResult> results = new ArrayList<SyncResult>();\n+        List<SyncResult> updResults = new ArrayList<SyncResult>();\n \n-        for (Long userId : users) {\n+        for (Long id : subjects) {\n             final SyncResult result = new SyncResult();\n             result.setOperation(SyncResult.Operation.UPDATE);\n \n             try {\n-                UserTO userTO = userDataBinder.getUserTO(userId);\n+                AbstractAttributableTO subjectTO = AttributableType.USER == attrUtil.getType()\n+                        ? userDataBinder.getUserTO(id)\n+                        : roleDataBinder.getRoleTO(id);\n                 try {\n-\n-                    final UserMod userMod = connObjectUtil.getUserMod(userId, delta.getObject(), syncTask);\n-                    delta = actions.beforeUpdate(delta, userTO, userMod);\n+                    final AbstractAttributableMod mod = connObjectUtil.getAttributableMod(\n+                            id, delta.getObject(), subjectTO, syncTask, attrUtil);\n+                    delta = actions.beforeUpdate(delta, subjectTO, mod);\n \n                     result.setStatus(AbstractTaskJob.Status.SUCCESS);\n-                    result.setUserId(userMod.getId());\n-                    result.setUsername(userMod.getUsername());\n+                    result.setId(mod.getId());\n+                    if (mod instanceof UserMod) {\n+                        result.setName(((UserMod) mod).getUsername());\n+                    }\n+                    if (mod instanceof RoleMod) {\n+                        result.setName(((RoleMod) mod).getName());\n+                    }\n \n                     if (!dryRun) {\n-                        WorkflowResult<Map.Entry<Long, Boolean>> updated = uwfAdapter.update(userMod);\n+                        if (AttributableType.USER == attrUtil.getType()) {\n+                            WorkflowResult<Map.Entry<Long, Boolean>> updated = uwfAdapter.update((UserMod) mod);\n \n-                        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated,\n-                                userMod.getPassword(), userMod.getVirtualAttributesToBeRemoved(),\n-                                userMod.getVirtualAttributesToBeUpdated(),\n-                                Collections.singleton(syncTask.getResource().getName()));\n+                            List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated,\n+                                    ((UserMod) mod).getPassword(), mod.getVirtualAttributesToBeRemoved(),\n+                                    mod.getVirtualAttributesToBeUpdated(),\n+                                    Collections.singleton(syncTask.getResource().getName()));\n \n-                        taskExecutor.execute(tasks);\n+                            taskExecutor.execute(tasks);\n+\n+                            notificationManager.createTasks(updated.getResult().getKey(), updated.getPerformedTasks());\n \n-                        notificationManager.createTasks(updated.getResult().getKey(), updated.getPerformedTasks());\n+                            subjectTO = userDataBinder.getUserTO(updated.getResult().getKey());\n+                        }\n+                        if (AttributableType.ROLE == attrUtil.getType()) {\n+                            WorkflowResult<Long> updated = rwfAdapter.update((RoleMod) mod);\n+\n+                            List<PropagationTask> tasks = propagationManager.getRoleUpdateTaskIds(updated,\n+                                    mod.getVirtualAttributesToBeRemoved(), mod.getVirtualAttributesToBeUpdated(),\n+                                    Collections.singleton(syncTask.getResource().getName()));\n \n-                        userTO = userDataBinder.getUserTO(updated.getResult().getKey());\n+                            taskExecutor.execute(tasks);\n+\n+                            subjectTO = roleDataBinder.getRoleTO(updated.getResult());\n+                        }\n                     }\n                 } catch (PropagationException e) {\n-                    LOG.error(\"Could not propagate user \" + delta.getUid().getUidValue(), e);\n+                    LOG.error(\"Could not propagate {} {}\", attrUtil.getType(), delta.getUid().getUidValue(), e);\n                 } catch (Exception e) {\n                     result.setStatus(AbstractTaskJob.Status.FAILURE);\n                     result.setMessage(e.getMessage());\n-                    LOG.error(\"Could not update user \" + delta.getUid().getUidValue(), e);\n+                    LOG.error(\"Could not update {} {}\", attrUtil.getType(), delta.getUid().getUidValue(), e);\n                 }\n \n-                actions.after(delta, userTO, result);\n-                results.add(result);\n+                actions.after(delta, subjectTO, result);\n+                updResults.add(result);\n             } catch (NotFoundException e) {\n-                LOG.error(\"Could not find user {}\", userId, e);\n+                LOG.error(\"Could not find {} {}\", attrUtil.getType(), id, e);\n             } catch (UnauthorizedRoleException e) {\n-                LOG.error(\"Not allowed to read user {}\", userId, e);\n+                LOG.error(\"Not allowed to read {} {}\", attrUtil.getType(), id, e);\n             }\n         }\n \n-        return results;\n+        return updResults;\n     }\n \n-    private List<SyncResult> deleteUsers(SyncDelta delta, final List<Long> users, final boolean dryRun)\n-            throws JobExecutionException {\n+    protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, final AttributableUtil attrUtil,\n+            final boolean dryRun) throws JobExecutionException {\n \n         if (!syncTask.isPerformDelete()) {\n             LOG.debug(\"SyncTask not configured for delete\");\n             return Collections.EMPTY_LIST;\n         }\n \n-        LOG.debug(\"About to delete {}\", users);\n+        LOG.debug(\"About to delete {}\", subjects);\n \n-        List<SyncResult> results = new ArrayList<SyncResult>();\n+        List<SyncResult> delResults = new ArrayList<SyncResult>();\n \n-        for (Long userId : users) {\n+        for (Long id : subjects) {\n             try {\n-                UserTO userTO = userDataBinder.getUserTO(userId);\n-                delta = actions.beforeDelete(delta, userTO);\n+                AbstractAttributableTO subjectTO = AttributableType.USER == attrUtil.getType()\n+                        ? userDataBinder.getUserTO(id)\n+                        : roleDataBinder.getRoleTO(id);\n+                delta = actions.beforeDelete(delta, subjectTO);\n \n                 final SyncResult result = new SyncResult();\n-                result.setUserId(userId);\n-                result.setUsername(userTO.getUsername());\n+                result.setId(id);\n+                if (subjectTO instanceof UserTO) {\n+                    result.setName(((UserTO) subjectTO).getUsername());\n+                }\n+                if (subjectTO instanceof RoleTO) {\n+                    result.setName(((RoleTO) subjectTO).getName());\n+                }\n                 result.setOperation(SyncResult.Operation.DELETE);\n                 result.setStatus(AbstractTaskJob.Status.SUCCESS);\n \n                 if (!dryRun) {\n                     try {\n-                        List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(userId,\n-                                syncTask.getResource().getName());\n+                        List<PropagationTask> tasks = Collections.EMPTY_LIST;\n+                        if (AttributableType.USER == attrUtil.getType()) {\n+                            tasks = propagationManager.getUserDeleteTaskIds(id, syncTask.getResource().getName());\n+                            notificationManager.createTasks(id, Collections.singleton(\"delete\"));\n+                        }\n+                        if (AttributableType.ROLE == attrUtil.getType()) {\n+                            tasks = propagationManager.getRoleDeleteTaskIds(id, syncTask.getResource().getName());\n+                        }\n                         taskExecutor.execute(tasks);\n-\n-                        notificationManager.createTasks(userId, Collections.singleton(\"delete\"));\n                     } catch (Exception e) {\n-                        LOG.error(\"Could not propagate user \" + userId, e);\n+                        LOG.error(\"Could not propagate user \" + id, e);\n                     }\n \n                     try {\n-                        uwfAdapter.delete(userId);\n+                        if (AttributableType.USER == attrUtil.getType()) {\n+                            uwfAdapter.delete(id);\n+                        }\n+                        if (AttributableType.ROLE == attrUtil.getType()) {\n+                            rwfAdapter.delete(id);\n+                        }\n                     } catch (Exception e) {\n                         result.setStatus(AbstractTaskJob.Status.FAILURE);\n                         result.setMessage(e.getMessage());\n-                        LOG.error(\"Could not delete user \" + userId, e);\n+                        LOG.error(\"Could not delete {} {}\", attrUtil.getType(), id, e);\n                     }\n                 }\n \n-                actions.after(delta, userTO, result);\n-                results.add(result);\n+                actions.after(delta, subjectTO, result);\n+                delResults.add(result);\n             } catch (NotFoundException e) {\n-                LOG.error(\"Could not find user {}\", userId, e);\n+                LOG.error(\"Could not find {} {}\", attrUtil.getType(), id, e);\n             } catch (UnauthorizedRoleException e) {\n-                LOG.error(\"Not allowed to read user {}\", userId, e);\n+                LOG.error(\"Not allowed to read {} {}\", attrUtil.getType(), id, e);\n             }\n         }\n \n-        return results;\n+        return delResults;\n     }\n \n     /**\n@@ -499,31 +619,35 @@ private List<SyncResult> deleteUsers(SyncDelta delta, final List<Long> users, fi\n     protected final List<SyncResult> doHandle(final SyncDelta delta) throws JobExecutionException {\n         final List<SyncResult> results = new ArrayList<SyncResult>();\n \n-        LOG.debug(\"Process '{}' for '{}'\", delta.getDeltaType(), delta.getUid().getUidValue());\n+        LOG.debug(\"Process {} for {} as {}\",\n+                delta.getDeltaType(), delta.getUid().getUidValue(), delta.getObject().getObjectClass());\n+\n+        AttributableUtil attrUtil = AttributableUtil.getInstance(delta.getObject().getObjectClass());\n \n-        final List<Long> users = findExistingUsers(delta);\n+        final List<Long> subjects = findExisting(delta, attrUtil);\n \n         if (SyncDeltaType.CREATE_OR_UPDATE == delta.getDeltaType()) {\n-            if (users.isEmpty()) {\n-                results.addAll(createUser(delta, dryRun));\n-            } else if (users.size() == 1) {\n-                results.addAll(updateUsers(delta, users.subList(0, 1), dryRun));\n+            if (subjects.isEmpty()) {\n+                results.addAll(create(delta, attrUtil, dryRun));\n+            } else if (subjects.size() == 1) {\n+                results.addAll(update(delta, subjects.subList(0, 1), attrUtil, dryRun));\n             } else {\n                 switch (resAct) {\n                     case IGNORE:\n-                        LOG.error(\"More than one match {}\", users);\n+                        LOG.error(\"More than one match {}\", subjects);\n                         break;\n \n                     case FIRSTMATCH:\n-                        results.addAll(updateUsers(delta, users.subList(0, 1), dryRun));\n+                        results.addAll(update(delta, subjects.subList(0, 1), attrUtil, dryRun));\n                         break;\n \n                     case LASTMATCH:\n-                        results.addAll(updateUsers(delta, users.subList(users.size() - 1, users.size()), dryRun));\n+                        results.addAll(update(delta, subjects.subList(subjects.size() - 1, subjects.size()), attrUtil,\n+                                dryRun));\n                         break;\n \n                     case ALL:\n-                        results.addAll(updateUsers(delta, users, dryRun));\n+                        results.addAll(update(delta, subjects, attrUtil, dryRun));\n                         break;\n \n                     default:\n@@ -532,26 +656,27 @@ protected final List<SyncResult> doHandle(final SyncDelta delta) throws JobExecu\n         }\n \n         if (SyncDeltaType.DELETE == delta.getDeltaType()) {\n-            if (users.isEmpty()) {\n+            if (subjects.isEmpty()) {\n                 LOG.debug(\"No match found for deletion\");\n-            } else if (users.size() == 1) {\n-                results.addAll(deleteUsers(delta, users, dryRun));\n+            } else if (subjects.size() == 1) {\n+                results.addAll(delete(delta, subjects, attrUtil, dryRun));\n             } else {\n                 switch (resAct) {\n                     case IGNORE:\n-                        LOG.error(\"More than one match {}\", users);\n+                        LOG.error(\"More than one match {}\", subjects);\n                         break;\n \n                     case FIRSTMATCH:\n-                        results.addAll(deleteUsers(delta, users.subList(0, 1), dryRun));\n+                        results.addAll(delete(delta, subjects.subList(0, 1), attrUtil, dryRun));\n                         break;\n \n                     case LASTMATCH:\n-                        results.addAll(deleteUsers(delta, users.subList(users.size() - 1, users.size()), dryRun));\n+                        results.addAll(delete(delta, subjects.subList(subjects.size() - 1, subjects.size()), attrUtil,\n+                                dryRun));\n                         break;\n \n                     case ALL:\n-                        results.addAll(deleteUsers(delta, users, dryRun));\n+                        results.addAll(delete(delta, subjects, attrUtil, dryRun));\n                         break;\n \n                     default:"},{"sha":"88d72595f56ce3e1968b129ec049c6ebaf7851ed","filename":"core/src/main/java/org/apache/syncope/core/util/AttributableUtil.java","status":"modified","additions":135,"deletions":0,"changes":135,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -20,6 +20,10 @@\n \n import java.util.Collections;\n import java.util.List;\n+import org.apache.syncope.client.to.AbstractAttributableTO;\n+import org.apache.syncope.client.to.MembershipTO;\n+import org.apache.syncope.client.to.RoleTO;\n+import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n@@ -61,6 +65,8 @@\n import org.apache.syncope.core.persistence.beans.user.UVirSchema;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.IntMappingType;\n+import org.apache.syncope.types.SyncPolicySpec;\n+import org.identityconnectors.framework.common.objects.ObjectClass;\n \n public class AttributableUtil {\n \n@@ -74,6 +80,22 @@ public static AttributableUtil valueOf(final String name) {\n         return new AttributableUtil(AttributableType.valueOf(name));\n     }\n \n+    public static AttributableUtil getInstance(final ObjectClass objectClass) {\n+        AttributableType type = null;\n+        if (ObjectClass.ACCOUNT.equals(objectClass)) {\n+            type = AttributableType.USER;\n+        }\n+        if (ObjectClass.GROUP.equals(objectClass)) {\n+            type = AttributableType.ROLE;\n+        }\n+\n+        if (type == null) {\n+            throw new IllegalArgumentException(\"ObjectClass not supported: \" + objectClass);\n+        }\n+\n+        return new AttributableUtil(type);\n+    }\n+\n     public static AttributableUtil getInstance(final AbstractAttributable attributable) {\n         AttributableType type = null;\n         if (attributable instanceof SyncopeUser) {\n@@ -97,6 +119,24 @@ private AttributableUtil(final AttributableType type) {\n         this.type = type;\n     }\n \n+    public <T extends AbstractAttributable> Class<T> attributableClass() {\n+        Class result;\n+\n+        switch (type) {\n+            case ROLE:\n+                result = SyncopeRole.class;\n+                break;\n+            case MEMBERSHIP:\n+                result = Membership.class;\n+            case USER:\n+            default:\n+                result = SyncopeUser.class;\n+                break;\n+        }\n+\n+        return result;\n+    }\n+\n     public AttributableType getType() {\n         return type;\n     }\n@@ -124,6 +164,29 @@ public String getAccountLink(final ExternalResource resource) {\n         return result;\n     }\n \n+    public <T extends AbstractMappingItem> T getAccountIdItem(final ExternalResource resource) {\n+        T result = null;\n+\n+        if (resource != null) {\n+            switch (type) {\n+                case USER:\n+                    if (resource.getUmapping() != null) {\n+                        result = resource.getUmapping().getAccountIdItem();\n+                    }\n+                    break;\n+                case ROLE:\n+                    if (resource.getRmapping() != null) {\n+                        result = resource.getRmapping().getAccountIdItem();\n+                    }\n+                    break;\n+                case MEMBERSHIP:\n+                default:\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n     public <T extends AbstractMappingItem> List<T> getMappingItems(final ExternalResource resource) {\n         List<T> result = Collections.EMPTY_LIST;\n \n@@ -474,6 +537,24 @@ public <T extends AbstractAttrValue> T newAttrValue() {\n         return result;\n     }\n \n+    public <T extends AbstractAttrValue> Class<T> attrUniqueValueClass() {\n+        Class result = null;\n+\n+        switch (type) {\n+            case USER:\n+                result = UAttrUniqueValue.class;\n+                break;\n+            case ROLE:\n+                result = RAttrUniqueValue.class;\n+                break;\n+            case MEMBERSHIP:\n+                result = MAttrUniqueValue.class;\n+                break;\n+        }\n+\n+        return result;\n+    }\n+\n     public <T extends AbstractAttrValue> T newAttrUniqueValue() {\n         T result = null;\n \n@@ -491,4 +572,58 @@ public <T extends AbstractAttrValue> T newAttrUniqueValue() {\n \n         return result;\n     }\n+\n+    public List<String> getAltSearchSchemas(final SyncPolicySpec policySpec) {\n+        List<String> result = Collections.EMPTY_LIST;\n+\n+        if (policySpec != null) {\n+            switch (type) {\n+                case USER:\n+                    result = policySpec.getuAltSearchSchemas();\n+                    break;\n+                case ROLE:\n+                    result = policySpec.getrAltSearchSchemas();\n+                    break;\n+                case MEMBERSHIP:\n+                default:\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    public String searchView() {\n+        String result = \"\";\n+\n+        switch (type) {\n+            case USER:\n+                result = \"user_search\";\n+                break;\n+            case ROLE:\n+                result = \"role_search\";\n+                break;\n+            case MEMBERSHIP:\n+            default:\n+        }\n+\n+        return result;\n+    }\n+\n+    public <T extends AbstractAttributableTO> T newAttributableTO() {\n+        T result = null;\n+\n+        switch (type) {\n+            case USER:\n+                result = (T) new UserTO();\n+                break;\n+            case ROLE:\n+                result = (T) new RoleTO();\n+                break;\n+            case MEMBERSHIP:\n+                result = (T) new MembershipTO();\n+                break;\n+        }\n+\n+        return result;\n+    }\n }"},{"sha":"d818429c59708974f5b6f9260cf6008d5d89f533","filename":"core/src/main/java/org/apache/syncope/core/util/ConnObjectUtil.java","status":"modified","additions":97,"deletions":59,"changes":156,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -28,11 +28,12 @@\n import java.util.Set;\n import org.apache.commons.lang.RandomStringUtils;\n import org.apache.commons.lang.StringUtils;\n-import org.apache.syncope.client.mod.UserMod;\n+import org.apache.syncope.client.mod.AbstractAttributableMod;\n import org.apache.syncope.client.to.AbstractAttributableTO;\n import org.apache.syncope.client.to.AttributeTO;\n import org.apache.syncope.client.to.ConnObjectTO;\n import org.apache.syncope.client.to.MembershipTO;\n+import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.client.util.AttributableOperations;\n import org.apache.syncope.core.init.ConnInstanceLoader;\n@@ -49,6 +50,7 @@\n import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n+import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.IntMappingType;\n import org.apache.syncope.types.PasswordPolicySpec;\n import org.identityconnectors.common.security.GuardedByteArray;\n@@ -120,26 +122,30 @@ public ObjectClass fromAttributable(final AbstractAttributable attributable) {\n      *\n      * @param obj connector object\n      * @param syncTask synchronization task\n+     * @param attrUtil AttributableUtil\n+     * @param <T> user/role\n      * @return UserTO for the user to be created\n      */\n     @Transactional(readOnly = true)\n-    public UserTO getUserTO(final ConnectorObject obj, final SyncTask syncTask) {\n-        UserTO userTO = getUserTOFromConnObject(obj, syncTask);\n+    public <T extends AbstractAttributableTO> T getAttributableTO(final ConnectorObject obj, final SyncTask syncTask,\n+            final AttributableUtil attrUtil) {\n+\n+        T subjectTO = getAttributableTOFromConnObject(obj, syncTask, attrUtil);\n \n         // if password was not set above, generate\n-        if (StringUtils.isBlank(userTO.getPassword())) {\n+        if (AttributableType.USER == attrUtil.getType() && StringUtils.isBlank(((UserTO) subjectTO).getPassword())) {\n             List<PasswordPolicySpec> ppSpecs = new ArrayList<PasswordPolicySpec>();\n             ppSpecs.add((PasswordPolicySpec) policyDAO.getGlobalPasswordPolicy().getSpecification());\n \n-            for (MembershipTO memb : userTO.getMemberships()) {\n+            for (MembershipTO memb : ((UserTO) subjectTO).getMemberships()) {\n                 SyncopeRole role = roleDAO.find(memb.getRoleId());\n                 if (role != null && role.getPasswordPolicy() != null\n                         && role.getPasswordPolicy().getSpecification() != null) {\n \n                     ppSpecs.add((PasswordPolicySpec) role.getPasswordPolicy().getSpecification());\n                 }\n             }\n-            for (String resName : userTO.getResources()) {\n+            for (String resName : subjectTO.getResources()) {\n                 ExternalResource resource = resourceDAO.find(resName);\n                 if (resource != null && resource.getPasswordPolicy() != null\n                         && resource.getPasswordPolicy().getSpecification() != null) {\n@@ -152,142 +158,174 @@ public UserTO getUserTO(final ConnectorObject obj, final SyncTask syncTask) {\n             try {\n                 password = pwdGen.generatePasswordFromPwdSpec(ppSpecs);\n             } catch (IncompatiblePolicyException e) {\n-                LOG.error(\"Could not generate policy-compliant random password for {}\", userTO, e);\n+                LOG.error(\"Could not generate policy-compliant random password for {}\", subjectTO, e);\n \n                 password = RandomStringUtils.randomAlphanumeric(16);\n             }\n-            userTO.setPassword(password);\n+            ((UserTO) subjectTO).setPassword(password);\n         }\n \n-        return userTO;\n+        return subjectTO;\n     }\n \n     /**\n      * Build an UserMod out of connector object attributes and schema mapping.\n      *\n-     * @param userId user to be updated\n+     * @param id user to be updated\n      * @param obj connector object\n+     * @param original subject to get diff from\n      * @param syncTask synchronization task\n-     * @return UserMod for the user to be updated\n+     * @param attrUtil AttributableUtil\n+     * @param <T> user/role\n+     * @return modifications for the user/role to be updated\n      */\n     @Transactional(readOnly = true)\n-    public UserMod getUserMod(final Long userId, final ConnectorObject obj, final SyncTask syncTask)\n+    public <T extends AbstractAttributableMod> T getAttributableMod(final Long id, final ConnectorObject obj,\n+            final AbstractAttributableTO original, final SyncTask syncTask, final AttributableUtil attrUtil)\n             throws NotFoundException, UnauthorizedRoleException {\n \n-        final SyncopeUser user = userDataBinder.getUserFromId(userId);\n-        final UserTO original = userDataBinder.getUserTO(user);\n+        final AbstractAttributableTO updated = getAttributableTOFromConnObject(obj, syncTask, attrUtil);\n+        updated.setId(id);\n \n-        final UserTO updated = getUserTOFromConnObject(obj, syncTask);\n-        updated.setId(userId);\n+        if (AttributableType.USER == attrUtil.getType()) {\n+            // update password if and only if password is really changed\n+            final SyncopeUser user = userDataBinder.getUserFromId(id);\n+            if (StringUtils.isBlank(((UserTO) updated).getPassword())\n+                    || userDataBinder.verifyPassword(user, ((UserTO) updated).getPassword())) {\n \n-        // update password if and only if password is really changed\n-        if (StringUtils.isBlank(updated.getPassword()) || userDataBinder.verifyPassword(user, updated.getPassword())) {\n-            updated.setPassword(null);\n-        }\n+                ((UserTO) updated).setPassword(null);\n+            }\n \n-        final UserMod userMod = AttributableOperations.diff(updated, original, true);\n+            return (T) AttributableOperations.diff(((UserTO) updated), ((UserTO) original), true);\n+        }\n+        if (AttributableType.ROLE == attrUtil.getType()) {\n+            return (T) AttributableOperations.diff(((RoleTO) updated), ((RoleTO) original), true);\n+        }\n \n-        return userMod;\n+        return null;\n     }\n \n-    private UserTO getUserTOFromConnObject(final ConnectorObject obj, final SyncTask syncTask) {\n-        final UserTO userTO = new UserTO();\n+    private <T extends AbstractAttributableTO> T getAttributableTOFromConnObject(final ConnectorObject obj,\n+            final SyncTask syncTask, final AttributableUtil attrUtil) {\n+\n+        final T attributableTO = attrUtil.newAttributableTO();\n \n         // 1. fill with data from connector object\n-        for (AbstractMappingItem item : syncTask.getResource().getUmapping().getItems()) {\n+        for (AbstractMappingItem item : attrUtil.getMappingItems(syncTask.getResource())) {\n             Attribute attribute = obj.getAttributeByName(item.getExtAttrName());\n \n             AttributeTO attributeTO;\n             switch (item.getIntMappingType()) {\n                 case UserId:\n+                case RoleId:\n                     break;\n \n                 case Password:\n-                    if (attribute != null && attribute.getValue() != null && !attribute.getValue().isEmpty()) {\n-                        userTO.setPassword(getPassword(attribute.getValue().get(0)));\n+                    if (attributableTO instanceof UserTO && attribute != null && attribute.getValue() != null\n+                            && !attribute.getValue().isEmpty()) {\n+\n+                        ((UserTO) attributableTO).setPassword(getPassword(attribute.getValue().get(0)));\n                     }\n                     break;\n \n                 case Username:\n-                    userTO.setUsername(attribute == null || attribute.getValue().isEmpty()\n-                            ? null\n-                            : attribute.getValue().get(0).toString());\n+                    if (attributableTO instanceof UserTO) {\n+                        ((UserTO) attributableTO).setUsername(attribute == null || attribute.getValue().isEmpty()\n+                                ? null\n+                                : attribute.getValue().get(0).toString());\n+                    }\n+                    break;\n+\n+                case RoleName:\n+                    if (attributableTO instanceof RoleTO) {\n+                        ((RoleTO) attributableTO).setName(attribute == null || attribute.getValue().isEmpty()\n+                                ? null\n+                                : attribute.getValue().get(0).toString());\n+                    }\n                     break;\n \n                 case UserSchema:\n+                case RoleSchema:\n                     attributeTO = new AttributeTO();\n                     attributeTO.setSchema(item.getIntAttrName());\n \n                     for (Object value : attribute == null || attribute.getValue() == null\n                             ? Collections.emptyList()\n                             : attribute.getValue()) {\n+\n                         attributeTO.addValue(value.toString());\n                     }\n \n-                    userTO.addAttribute(attributeTO);\n+                    attributableTO.addAttribute(attributeTO);\n                     break;\n \n                 case UserDerivedSchema:\n+                case RoleDerivedSchema:\n                     attributeTO = new AttributeTO();\n                     attributeTO.setSchema(item.getIntAttrName());\n-                    userTO.addDerivedAttribute(attributeTO);\n+                    attributableTO.addDerivedAttribute(attributeTO);\n                     break;\n \n                 case UserVirtualSchema:\n+                case RoleVirtualSchema:\n                     attributeTO = new AttributeTO();\n                     attributeTO.setSchema(item.getIntAttrName());\n \n                     for (Object value : attribute == null || attribute.getValue() == null\n                             ? Collections.emptyList()\n                             : attribute.getValue()) {\n+\n                         attributeTO.addValue(value.toString());\n                     }\n \n-                    userTO.addVirtualAttribute(attributeTO);\n+                    attributableTO.addVirtualAttribute(attributeTO);\n                     break;\n \n                 default:\n             }\n         }\n \n         // 2. add data from defined template (if any)\n-        UserTO template = syncTask.getUserTemplate();\n+        AbstractAttributableTO template = AttributableType.USER == attrUtil.getType()\n+                ? syncTask.getUserTemplate() : syncTask.getRoleTemplate();\n         if (template != null) {\n-            if (StringUtils.isNotBlank(template.getUsername())) {\n-                String evaluated = jexlUtil.evaluate(template.getUsername(), userTO);\n-                if (StringUtils.isNotBlank(evaluated)) {\n-                    userTO.setUsername(evaluated);\n+            if (template instanceof UserTO) {\n+                if (StringUtils.isNotBlank(((UserTO) template).getUsername())) {\n+                    String evaluated = jexlUtil.evaluate(((UserTO) template).getUsername(), attributableTO);\n+                    if (StringUtils.isNotBlank(evaluated)) {\n+                        ((UserTO) attributableTO).setUsername(evaluated);\n+                    }\n                 }\n-            }\n \n-            if (StringUtils.isNotBlank(template.getPassword())) {\n-                String evaluated = jexlUtil.evaluate(template.getPassword(), userTO);\n-                if (StringUtils.isNotBlank(evaluated)) {\n-                    userTO.setPassword(evaluated);\n+                if (StringUtils.isNotBlank(((UserTO) template).getPassword())) {\n+                    String evaluated = jexlUtil.evaluate(((UserTO) template).getPassword(), attributableTO);\n+                    if (StringUtils.isNotBlank(evaluated)) {\n+                        ((UserTO) attributableTO).setPassword(evaluated);\n+                    }\n+                }\n+\n+                Map<Long, MembershipTO> currentMembs = ((UserTO) attributableTO).getMembershipMap();\n+                for (MembershipTO membTO : ((UserTO) template).getMemberships()) {\n+                    MembershipTO membTBU;\n+                    if (currentMembs.containsKey(membTO.getRoleId())) {\n+                        membTBU = currentMembs.get(membTO.getRoleId());\n+                    } else {\n+                        membTBU = new MembershipTO();\n+                        membTBU.setRoleId(membTO.getRoleId());\n+                        ((UserTO) attributableTO).addMembership(membTBU);\n+                    }\n+                    fillFromTemplate(membTBU, membTO);\n                 }\n             }\n \n-            fillFromTemplate(userTO, template);\n+            fillFromTemplate(attributableTO, template);\n \n             for (String resource : template.getResources()) {\n-                userTO.addResource(resource);\n-            }\n-\n-            Map<Long, MembershipTO> currentMembs = userTO.getMembershipMap();\n-            for (MembershipTO membTO : template.getMemberships()) {\n-                MembershipTO membTBU;\n-                if (currentMembs.containsKey(membTO.getRoleId())) {\n-                    membTBU = currentMembs.get(membTO.getRoleId());\n-                } else {\n-                    membTBU = new MembershipTO();\n-                    membTBU.setRoleId(membTO.getRoleId());\n-                    userTO.addMembership(membTBU);\n-                }\n-                fillFromTemplate(membTBU, membTO);\n+                attributableTO.addResource(resource);\n             }\n         }\n \n-        return userTO;\n+        return attributableTO;\n     }\n \n     /**"},{"sha":"faefada77091615f7cd1e02125cbdc84ac301515","filename":"core/src/main/java/org/apache/syncope/core/util/EntitlementUtil.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -38,6 +38,10 @@ public final class EntitlementUtil {\n \n     private static final Logger LOG = LoggerFactory.getLogger(EntitlementUtil.class);\n \n+    public static String getAuthenticatedUsername() {\n+        return SecurityContextHolder.getContext().getAuthentication().getName();\n+    }\n+\n     public static Set<String> getOwnedEntitlementNames() {\n         final Set<String> result = new HashSet<String>();\n "},{"sha":"5be6063a48fc10523de12b3831417a03461d92eb","filename":"core/src/main/resources/views.xml","status":"modified","additions":56,"deletions":7,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -24,12 +24,12 @@ under the License.\n   <entry key=\"user_search\">\n     CREATE VIEW user_search AS\n  \n-    SELECT u.id as user_id, u.* FROM SyncopeUser u\n+    SELECT u.id as subject_id, u.* FROM SyncopeUser u\n   </entry>\n   <entry key=\"user_search_attr\">\n     CREATE VIEW user_search_attr AS\n \n-    SELECT ua.owner_id AS user_id,\n+    SELECT ua.owner_id AS subject_id,\n     ua.schema_name AS schema_name,\n     uav.booleanvalue AS booleanvalue,\n     uav.datevalue AS datevalue,\n@@ -41,7 +41,7 @@ under the License.\n \n     UNION ALL\n \n-    SELECT ua.owner_id AS user_id,\n+    SELECT ua.owner_id AS subject_id,\n     ua.schema_name AS schema_name,\n     uav.booleanvalue AS booleanvalue,\n     uav.datevalue AS datevalue,\n@@ -53,7 +53,7 @@ under the License.\n \n     UNION ALL\n \n-    SELECT u.id AS user_id,\n+    SELECT u.id AS subject_id,\n     USchema.name AS schema_name,\n     NULL AS booleanvalue,\n     NULL AS datevalue,\n@@ -67,20 +67,69 @@ under the License.\n   <entry key=\"user_search_membership\">\n     CREATE VIEW user_search_membership AS\n \n-    SELECT m.syncopeuser_id AS user_id, r.id AS role_id, r.name AS role_name\n+    SELECT m.syncopeuser_id AS subject_id, r.id AS role_id, r.name AS role_name\n     FROM Membership m, SyncopeRole r\n     WHERE m.syncoperole_id = r.id\n   </entry>\n   <entry key=\"user_search_resource\">\n     CREATE VIEW user_search_resource AS\n \n-    SELECT st.user_id AS user_id, st.resource_name AS resource_name\n+    SELECT st.user_id AS subject_id, st.resource_name AS resource_name\n     FROM SyncopeUser_ExternalResource st\n \n     UNION ALL\n \n-    SELECT m.syncopeuser_id AS user_id, st.resource_name AS resource_name\n+    SELECT m.syncopeuser_id AS subject_id, st.resource_name AS resource_name\n     FROM Membership m, SyncopeRole r, SyncopeRole_ExternalResource st\n     WHERE m.syncoperole_id = r.id AND st.role_id = r.id\n   </entry>\n+  <entry key=\"role_search\">\n+    CREATE VIEW role_search AS\n+ \n+    SELECT r.id as subject_id, r.* FROM SyncopeRole r\n+  </entry>\n+  <entry key=\"role_search_attr\">\n+    CREATE VIEW role_search_attr AS\n+\n+    SELECT ra.owner_id AS subject_id,\n+    ra.schema_name AS schema_name,\n+    rav.booleanvalue AS booleanvalue,\n+    rav.datevalue AS datevalue,\n+    rav.doublevalue AS doublevalue,\n+    rav.longvalue AS longvalue,\n+    rav.stringvalue AS stringvalue\n+    FROM RAttrUniqueValue rav, RAttr ra\n+    WHERE rav.attribute_id = ra.id\n+\n+    UNION ALL\n+\n+    SELECT ra.owner_id AS subject_id,\n+    ra.schema_name AS schema_name,\n+    rav.booleanvalue AS booleanvalue,\n+    rav.datevalue AS datevalue,\n+    rav.doublevalue AS doublevalue,\n+    rav.longvalue AS longvalue,\n+    rav.stringvalue AS stringvalue\n+    FROM RAttrValue rav, RAttr ra\n+    WHERE rav.attribute_id = ra.id\n+\n+    UNION ALL\n+\n+    SELECT r.id AS subject_id,\n+    RSchema.name AS schema_name,\n+    NULL AS booleanvalue,\n+    NULL AS datevalue,\n+    NULL AS doublevalue,\n+    NULL AS longvalue,\n+    NULL AS stringvalue\n+    FROM SyncopeRole r CROSS JOIN RSchema\n+    LEFT OUTER JOIN RAttr ra ON (RSchema.name = ra.schema_name AND ra.owner_id = r.id)\n+    WHERE ra.id IS NULL\n+  </entry>\n+  <entry key=\"role_search_resource\">\n+    CREATE VIEW role_search_resource AS\n+\n+    SELECT st.role_id AS subject_id, st.resource_name AS resource_name\n+    FROM SyncopeRole_ExternalResource st\n+  </entry>\n </properties>"},{"sha":"00f34b0167328bf1b2663759a77872fc31fdca75","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/AttributableSearchTest.java","status":"renamed","additions":89,"deletions":34,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchTest.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.dao;\n \n-import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n-import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.persistence.dao.UserSearchDAO;\n import static org.junit.Assert.*;\n \n import java.util.HashSet;\n@@ -36,38 +33,59 @@\n import org.apache.syncope.client.search.MembershipCond;\n import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.client.search.ResourceCond;\n-import org.apache.syncope.client.search.SyncopeUserCond;\n+import org.apache.syncope.client.search.AttributableCond;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n+import org.apache.syncope.types.AttributableType;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n @ContextConfiguration(locations = {\"classpath:syncopeContext.xml\", \"classpath:persistenceContext.xml\",\n     \"classpath:schedulingContext.xml\", \"classpath:workflowContext.xml\"})\n @Transactional\n-public class UserSearchTest {\n+public class AttributableSearchTest {\n \n     @Autowired\n     private UserDAO userDAO;\n \n     @Autowired\n-    private UserSearchDAO searchDAO;\n+    private RoleDAO roleDAO;\n+\n+    @Autowired\n+    private AttributableSearchDAO searchDAO;\n \n     @Autowired\n     private EntitlementDAO entitlementDAO;\n \n     @Test\n-    public void matches() {\n+    public void userMatch() {\n         SyncopeUser user = userDAO.find(1L);\n         assertNotNull(user);\n \n         MembershipCond membershipCond = new MembershipCond();\n         membershipCond.setRoleId(5L);\n \n-        assertFalse(searchDAO.matches(user, NodeCond.getLeafCond(membershipCond)));\n+        assertFalse(searchDAO.matches(user, NodeCond.getLeafCond(membershipCond),\n+                AttributableUtil.getInstance(AttributableType.USER)));\n \n         membershipCond.setRoleId(1L);\n \n-        assertTrue(searchDAO.matches(user, NodeCond.getLeafCond(membershipCond)));\n+        assertTrue(searchDAO.matches(user, NodeCond.getLeafCond(membershipCond),\n+                AttributableUtil.getInstance(AttributableType.USER)));\n+    }\n+\n+    @Test\n+    public void roleMatch() {\n+        SyncopeRole role = roleDAO.find(1L);\n+        assertNotNull(role);\n+\n+        AttributeCond attrCond = new AttributeCond();\n+        attrCond.setSchema(\"show\");\n+        attrCond.setType(AttributeCond.Type.ISNOTNULL);\n+\n+        assertTrue(searchDAO.matches(role, NodeCond.getLeafCond(attrCond),\n+                AttributableUtil.getInstance(AttributableType.ROLE)));\n     }\n \n     @Test\n@@ -92,7 +110,8 @@ public void searchWithLikeCondition() {\n \n         assertTrue(cond.checkValidity());\n \n-        List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond);\n+        List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond,\n+                AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(1, users.size());\n     }\n@@ -106,7 +125,8 @@ public void searchWithNotCondition() {\n         final NodeCond cond = NodeCond.getNotLeafCond(fullnameLeafCond);\n         assertTrue(cond.checkValidity());\n \n-        final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond);\n+        final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond,\n+                AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(2, users.size());\n \n@@ -126,7 +146,8 @@ public void searchByBoolean() {\n         final NodeCond cond = NodeCond.getLeafCond(coolLeafCond);\n         assertTrue(cond.checkValidity());\n \n-        final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond);\n+        final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond,\n+                AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(1, users.size());\n \n@@ -155,11 +176,13 @@ public void searchByPageAndSize() {\n \n         assertTrue(cond.checkValidity());\n \n-        List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond, 1, 2);\n+        List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond, 1, 2,\n+                AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(1, users.size());\n \n-        users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond, 2, 2);\n+        users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond, 2, 2,\n+                AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertTrue(users.isEmpty());\n     }\n@@ -170,15 +193,17 @@ public void searchByMembership() {\n         membershipCond.setRoleId(1L);\n \n         List<SyncopeUser> users = searchDAO.search(\n-                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), NodeCond.getLeafCond(membershipCond));\n+                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), NodeCond.getLeafCond(membershipCond),\n+                AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(2, users.size());\n \n         membershipCond = new MembershipCond();\n         membershipCond.setRoleId(5L);\n \n         users = searchDAO.search(\n-                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), NodeCond.getNotLeafCond(membershipCond));\n+                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), NodeCond.getNotLeafCond(membershipCond),\n+                AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(5, users.size());\n     }\n@@ -189,15 +214,17 @@ public void searchByIsNull() {\n         coolLeafCond.setSchema(\"cool\");\n \n         List<SyncopeUser> users = searchDAO.search(\n-                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), NodeCond.getLeafCond(coolLeafCond));\n+                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), NodeCond.getLeafCond(coolLeafCond),\n+                AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(4, users.size());\n \n         coolLeafCond = new AttributeCond(AttributeCond.Type.ISNOTNULL);\n         coolLeafCond.setSchema(\"cool\");\n \n         users = searchDAO.search(\n-                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), NodeCond.getLeafCond(coolLeafCond));\n+                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), NodeCond.getLeafCond(coolLeafCond),\n+                AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(1, users.size());\n     }\n@@ -215,37 +242,62 @@ public void searchByResource() {\n         assertTrue(searchCondition.checkValidity());\n \n         List<SyncopeUser> users = searchDAO.search(\n-                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition);\n+                EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition,\n+                AttributableUtil.getInstance(AttributableType.USER));\n \n         assertNotNull(users);\n         assertEquals(1, users.size());\n     }\n \n     @Test\n     public void searchByUsernameAndId() {\n-        final SyncopeUserCond usernameLeafCond = new SyncopeUserCond(SyncopeUserCond.Type.EQ);\n+        final AttributableCond usernameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n         usernameLeafCond.setSchema(\"username\");\n         usernameLeafCond.setExpression(\"user1\");\n \n-        final SyncopeUserCond idRightCond = new SyncopeUserCond(SyncopeUserCond.Type.LT);\n+        final AttributableCond idRightCond = new AttributableCond(AttributableCond.Type.LT);\n         idRightCond.setSchema(\"id\");\n         idRightCond.setExpression(\"2\");\n \n         final NodeCond searchCondition = NodeCond.getOrCond(NodeCond.getLeafCond(usernameLeafCond),\n                 NodeCond.getLeafCond(idRightCond));\n \n         final List<SyncopeUser> matchingUsers = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition);\n+                searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n \n         assertNotNull(matchingUsers);\n         assertEquals(1, matchingUsers.size());\n         assertEquals(\"user1\", matchingUsers.iterator().next().getUsername());\n         assertEquals(1L, matchingUsers.iterator().next().getId().longValue());\n     }\n \n+    @Test\n+    public void searchByRolenameAndId() {\n+        final AttributableCond rolenameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n+        rolenameLeafCond.setSchema(\"name\");\n+        rolenameLeafCond.setExpression(\"root\");\n+\n+        final AttributableCond idRightCond = new AttributableCond(AttributableCond.Type.LT);\n+        idRightCond.setSchema(\"id\");\n+        idRightCond.setExpression(\"2\");\n+\n+        final NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(rolenameLeafCond),\n+                NodeCond.getLeafCond(idRightCond));\n+\n+        assertTrue(searchCondition.checkValidity());\n+\n+        final List<SyncopeRole> matchingRoles = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n+                searchCondition, AttributableUtil.getInstance(AttributableType.ROLE));\n+\n+        assertNotNull(matchingRoles);\n+        assertEquals(1, matchingRoles.size());\n+        assertEquals(\"root\", matchingRoles.iterator().next().getName());\n+        assertEquals(1L, matchingRoles.iterator().next().getId().longValue());\n+    }\n+\n     @Test\n     public void searchByUsernameAndFullname() {\n-        final SyncopeUserCond usernameLeafCond = new SyncopeUserCond(SyncopeUserCond.Type.EQ);\n+        final AttributableCond usernameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n         usernameLeafCond.setSchema(\"username\");\n         usernameLeafCond.setExpression(\"user1\");\n \n@@ -257,36 +309,39 @@ public void searchByUsernameAndFullname() {\n                 NodeCond.getLeafCond(idRightCond));\n \n         final List<SyncopeUser> matchingUsers =\n-                searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition);\n+                searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition,\n+                AttributableUtil.getInstance(AttributableType.USER));\n \n         assertNotNull(matchingUsers);\n         assertEquals(2, matchingUsers.size());\n     }\n \n     @Test\n     public void searchById() {\n-        SyncopeUserCond idLeafCond = new SyncopeUserCond(SyncopeUserCond.Type.LT);\n+        AttributableCond idLeafCond = new AttributableCond(AttributableCond.Type.LT);\n         idLeafCond.setSchema(\"id\");\n         idLeafCond.setExpression(\"2\");\n \n         NodeCond searchCondition = NodeCond.getLeafCond(idLeafCond);\n         assertTrue(searchCondition.checkValidity());\n \n         List<SyncopeUser> matchingUsers =\n-                searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition);\n+                searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition,\n+                AttributableUtil.getInstance(AttributableType.USER));\n \n         assertNotNull(matchingUsers);\n         assertEquals(1, matchingUsers.size());\n         assertEquals(1L, matchingUsers.iterator().next().getId().longValue());\n \n-        idLeafCond = new SyncopeUserCond(SyncopeUserCond.Type.LT);\n+        idLeafCond = new AttributableCond(AttributableCond.Type.LT);\n         idLeafCond.setSchema(\"id\");\n         idLeafCond.setExpression(\"4\");\n \n         searchCondition = NodeCond.getNotLeafCond(idLeafCond);\n         assertTrue(searchCondition.checkValidity());\n \n-        matchingUsers = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition);\n+        matchingUsers = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition,\n+                AttributableUtil.getInstance(AttributableType.USER));\n \n         assertNotNull(matchingUsers);\n         assertEquals(2, matchingUsers.size());\n@@ -301,43 +356,43 @@ public void issue202() {\n         final ResourceCond ws1 = new ResourceCond();\n         ws1.setResourceName(\"ws-target-resource-list-mappings-1\");\n \n-        final NodeCond searchCondition = \n+        final NodeCond searchCondition =\n                 NodeCond.getAndCond(NodeCond.getNotLeafCond(ws2), NodeCond.getNotLeafCond(ws1));\n         assertTrue(searchCondition.checkValidity());\n \n         final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition);\n+                searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(2, users.size());\n         assertEquals(4L, users.iterator().next().getId().longValue());\n     }\n \n     @Test\n     public void issue242() {\n-        final SyncopeUserCond cond = new SyncopeUserCond(AttributeCond.Type.LIKE);\n+        final AttributableCond cond = new AttributableCond(AttributeCond.Type.LIKE);\n         cond.setSchema(\"id\");\n         cond.setExpression(\"test%\");\n \n         final NodeCond searchCondition = NodeCond.getLeafCond(cond);\n         assertTrue(searchCondition.checkValidity());\n \n         final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition);\n+                searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertTrue(users.isEmpty());\n     }\n \n     @Test\n     public void issueSYNCOPE46() {\n-        final SyncopeUserCond cond = new SyncopeUserCond(AttributeCond.Type.LIKE);\n+        final AttributableCond cond = new AttributableCond(AttributeCond.Type.LIKE);\n         cond.setSchema(\"username\");\n         cond.setExpression(\"%user%\");\n \n         final NodeCond searchCondition = NodeCond.getLeafCond(cond);\n         assertTrue(searchCondition.checkValidity());\n \n         final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition);\n+                searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(5, users.size());\n     }","previous_filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/UserSearchTest.java"},{"sha":"bb665df9d354bb6c441f8c16dccb3dd2de66bcff","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/AttributableSearchTest.java","status":"renamed","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttributableSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttributableSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttributableSearchTest.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.relationships;\n \n-import org.apache.syncope.core.persistence.dao.*;\n import static org.junit.Assert.*;\n \n import java.util.HashSet;\n@@ -34,19 +33,24 @@\n import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n+import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n+import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n+import org.apache.syncope.types.AttributableType;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n @ContextConfiguration(locations = {\"classpath:syncopeContext.xml\", \"classpath:persistenceContext.xml\",\n     \"classpath:schedulingContext.xml\", \"classpath:workflowContext.xml\"})\n @Transactional\n-public class UserSearchTest {\n+public class AttributableSearchTest {\n \n     @Autowired\n     private RoleDAO roleDAO;\n \n     @Autowired\n-    private UserSearchDAO searchDAO;\n+    private AttributableSearchDAO searchDAO;\n \n     @Autowired\n     private EntitlementDAO entitlementDAO;\n@@ -66,7 +70,8 @@ public void issueSYNCOPE95() {\n         final NodeCond cond = NodeCond.getLeafCond(coolLeafCond);\n         assertTrue(cond.checkValidity());\n \n-        final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond);\n+        final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond,\n+                AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n         assertEquals(1, users.size());\n ","previous_filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/UserSearchTest.java"},{"sha":"32b0a1bb5c9dc82faafabed8f40ee01c8f794316","filename":"core/src/test/java/org/apache/syncope/core/quartz/TestSyncActions.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FTestSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FTestSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FTestSyncActions.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -19,10 +19,10 @@\n package org.apache.syncope.core.quartz;\n \n import java.util.Collections;\n+import org.apache.syncope.client.mod.AbstractAttributableMod;\n import org.apache.syncope.client.mod.AttributeMod;\n-import org.apache.syncope.client.mod.UserMod;\n+import org.apache.syncope.client.to.AbstractAttributableTO;\n import org.apache.syncope.client.to.AttributeTO;\n-import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.core.sync.DefaultSyncActions;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n@@ -32,40 +32,41 @@ public class TestSyncActions extends DefaultSyncActions {\n     private int counter = 0;\n \n     @Override\n-    public SyncDelta beforeCreate(final SyncDelta delta, final UserTO user) throws JobExecutionException {\n+    public <T extends AbstractAttributableTO> SyncDelta beforeCreate(final SyncDelta delta, final T subject)\n+            throws JobExecutionException {\n \n         AttributeTO attrTO = null;\n-        for (int i = 0; i < user.getAttributes().size(); i++) {\n-            if (\"fullname\".equals(user.getAttributes().get(i).getSchema())) {\n-                attrTO = user.getAttributes().get(i);\n+        for (int i = 0; i < subject.getAttributes().size(); i++) {\n+            if (\"fullname\".equals(subject.getAttributes().get(i).getSchema())) {\n+                attrTO = subject.getAttributes().get(i);\n             }\n         }\n         if (attrTO == null) {\n             attrTO = new AttributeTO();\n             attrTO.setSchema(\"fullname\");\n-            user.addAttribute(attrTO);\n+            subject.addAttribute(attrTO);\n         }\n         attrTO.setValues(Collections.singletonList(String.valueOf(counter++)));\n \n         return delta;\n     }\n \n     @Override\n-    public SyncDelta beforeUpdate(final SyncDelta delta, final UserTO user, final UserMod userMod)\n-            throws JobExecutionException {\n+    public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta beforeUpdate(\n+            final SyncDelta delta, final T subject, final K subjectMod) throws JobExecutionException {\n \n-        userMod.addAttributeToBeRemoved(\"fullname\");\n+        subjectMod.addAttributeToBeRemoved(\"fullname\");\n \n         AttributeMod fullnameMod = null;\n-        for (AttributeMod attrMod : userMod.getAttributesToBeUpdated()) {\n+        for (AttributeMod attrMod : subjectMod.getAttributesToBeUpdated()) {\n             if (\"fullname\".equals(attrMod.getSchema())) {\n                 fullnameMod = attrMod;\n             }\n         }\n         if (fullnameMod == null) {\n             fullnameMod = new AttributeMod();\n             fullnameMod.setSchema(\"fullname\");\n-            userMod.addAttributeToBeUpdated(fullnameMod);\n+            subjectMod.addAttributeToBeUpdated(fullnameMod);\n         }\n \n         fullnameMod.setValuesToBeAdded(Collections.singletonList(String.valueOf(counter++)));"},{"sha":"94a1b843e8248bfe038c82fc8f763d2e8bf65f6a","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -328,14 +328,14 @@ public void updateResetSyncToken() {\n         String resourceName = \"ws-target-resource-update-resetsynctoken\";\n         ResourceTO pre = restTemplate.getForObject(BASE_URL + \"/resource/read/{resourceName}.json\", ResourceTO.class,\n                 resourceName);\n-        assertNotNull(pre.getSyncToken());\n+        assertNotNull(pre.getUsyncToken());\n \n-        pre.setSyncToken(null);\n+        pre.setUsyncToken(null);\n \n         ResourceTO actual = restTemplate.postForObject(BASE_URL + \"resource/update.json\", pre, ResourceTO.class);\n \n         // check that the synctoken has been reset\n-        assertNull(actual.getSyncToken());\n+        assertNull(actual.getUsyncToken());\n     }\n \n     @Test"},{"sha":"61c14d063c52bb8a45b5f14481b83458494e67b6","filename":"core/src/test/java/org/apache/syncope/core/rest/SearchTestITCase.java","status":"added","additions":205,"deletions":0,"changes":205,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -0,0 +1,205 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest;\n+\n+import static org.junit.Assert.*;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.client.search.AttributableCond;\n+import org.apache.syncope.client.search.AttributeCond;\n+import org.apache.syncope.client.search.NodeCond;\n+import org.apache.syncope.client.search.ResourceCond;\n+import org.apache.syncope.client.to.RoleTO;\n+import org.apache.syncope.client.to.UserTO;\n+import org.junit.Test;\n+\n+public class SearchTestITCase extends AbstractTest {\n+\n+    @Test\n+    public void searchUser() {\n+        // LIKE\n+        AttributeCond fullnameLeafCond1 = new AttributeCond(AttributeCond.Type.LIKE);\n+        fullnameLeafCond1.setSchema(\"fullname\");\n+        fullnameLeafCond1.setExpression(\"%o%\");\n+\n+        AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n+        fullnameLeafCond2.setSchema(\"fullname\");\n+        fullnameLeafCond2.setExpression(\"%i%\");\n+\n+        NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond.getLeafCond(\n+                fullnameLeafCond2));\n+\n+        assertTrue(searchCondition.checkValidity());\n+\n+        List<UserTO> matchedUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search\", searchCondition,\n+                UserTO[].class));\n+        assertNotNull(matchedUsers);\n+        assertFalse(matchedUsers.isEmpty());\n+        for (UserTO user : matchedUsers) {\n+            assertNotNull(user);\n+        }\n+\n+        // ISNULL\n+        AttributeCond isNullCond = new AttributeCond(AttributeCond.Type.ISNULL);\n+        isNullCond.setSchema(\"loginDate\");\n+        searchCondition = NodeCond.getLeafCond(isNullCond);\n+\n+        matchedUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search\", searchCondition,\n+                UserTO[].class));\n+        assertNotNull(matchedUsers);\n+        assertFalse(matchedUsers.isEmpty());\n+\n+        Set<Long> userIds = new HashSet<Long>(matchedUsers.size());\n+        for (UserTO user : matchedUsers) {\n+            userIds.add(user.getId());\n+        }\n+        assertTrue(userIds.contains(2L));\n+        assertTrue(userIds.contains(3L));\n+    }\n+\n+    @Test\n+    public void searchByUsernameAndId() {\n+        final AttributableCond usernameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n+        usernameLeafCond.setSchema(\"username\");\n+        usernameLeafCond.setExpression(\"user1\");\n+\n+        final AttributableCond idRightCond = new AttributableCond(AttributableCond.Type.LT);\n+        idRightCond.setSchema(\"id\");\n+        idRightCond.setExpression(\"2\");\n+\n+        final NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(usernameLeafCond), NodeCond.\n+                getLeafCond(idRightCond));\n+\n+        assertTrue(searchCondition.checkValidity());\n+\n+        final List<UserTO> matchingUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search\",\n+                searchCondition, UserTO[].class));\n+\n+        assertNotNull(matchingUsers);\n+        assertEquals(1, matchingUsers.size());\n+        assertEquals(\"user1\", matchingUsers.iterator().next().getUsername());\n+        assertEquals(1L, matchingUsers.iterator().next().getId());\n+    }\n+\n+    @Test\n+    public void searchByRolenameAndId() {\n+        final AttributableCond rolenameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n+        rolenameLeafCond.setSchema(\"name\");\n+        rolenameLeafCond.setExpression(\"root\");\n+\n+        final AttributableCond idRightCond = new AttributableCond(AttributableCond.Type.LT);\n+        idRightCond.setSchema(\"id\");\n+        idRightCond.setExpression(\"2\");\n+\n+        final NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(rolenameLeafCond),\n+                NodeCond.getLeafCond(idRightCond));\n+\n+        assertTrue(searchCondition.checkValidity());\n+\n+        final List<RoleTO> matchingRoles = Arrays.asList(restTemplate.postForObject(BASE_URL + \"role/search\",\n+                searchCondition, RoleTO[].class));\n+\n+        assertNotNull(matchingRoles);\n+        assertEquals(1, matchingRoles.size());\n+        assertEquals(\"root\", matchingRoles.iterator().next().getName());\n+        assertEquals(1L, matchingRoles.iterator().next().getId());\n+    }\n+\n+    @Test\n+    public void searchUserByResourceName() {\n+        ResourceCond ws2 = new ResourceCond();\n+        ws2.setResourceName(\"ws-target-resource2\");\n+\n+        ResourceCond ws1 = new ResourceCond();\n+        ws1.setResourceName(\"ws-target-resource-list-mappings-2\");\n+\n+        NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getNotLeafCond(ws2), NodeCond.getLeafCond(ws1));\n+\n+        assertTrue(searchCondition.checkValidity());\n+\n+        List<UserTO> matchedUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search\", searchCondition,\n+                UserTO[].class));\n+        assertNotNull(matchedUsers);\n+        assertFalse(matchedUsers.isEmpty());\n+\n+        Set<Long> userIds = new HashSet<Long>(matchedUsers.size());\n+        for (UserTO user : matchedUsers) {\n+            userIds.add(user.getId());\n+        }\n+\n+        assertEquals(1, userIds.size());\n+        assertTrue(userIds.contains(2L));\n+    }\n+\n+    @Test\n+    public void paginatedSearch() {\n+        // LIKE\n+        AttributeCond fullnameLeafCond1 = new AttributeCond(AttributeCond.Type.LIKE);\n+        fullnameLeafCond1.setSchema(\"fullname\");\n+        fullnameLeafCond1.setExpression(\"%o%\");\n+\n+        AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n+        fullnameLeafCond2.setSchema(\"fullname\");\n+        fullnameLeafCond2.setExpression(\"%i%\");\n+\n+        NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond.getLeafCond(\n+                fullnameLeafCond2));\n+\n+        assertTrue(searchCondition.checkValidity());\n+\n+        List<UserTO> matchedUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search/{page}/{size}\",\n+                searchCondition, UserTO[].class, 1, 2));\n+        assertNotNull(matchedUsers);\n+\n+        assertFalse(matchedUsers.isEmpty());\n+        for (UserTO user : matchedUsers) {\n+            assertNotNull(user);\n+        }\n+\n+        // ISNULL\n+        AttributeCond isNullCond = new AttributeCond(AttributeCond.Type.ISNULL);\n+        isNullCond.setSchema(\"loginDate\");\n+        searchCondition = NodeCond.getLeafCond(isNullCond);\n+\n+        matchedUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search/{page}/{size}\",\n+                searchCondition, UserTO[].class, 1, 2));\n+\n+        assertNotNull(matchedUsers);\n+        assertFalse(matchedUsers.isEmpty());\n+        Set<Long> userIds = new HashSet<Long>(matchedUsers.size());\n+        for (UserTO user : matchedUsers) {\n+            userIds.add(user.getId());\n+        }\n+        assertEquals(2, userIds.size());\n+    }\n+\n+    @Test\n+    public void searchCount() {\n+        AttributeCond isNullCond = new AttributeCond(AttributeCond.Type.ISNULL);\n+        isNullCond.setSchema(\"loginDate\");\n+        NodeCond searchCond = NodeCond.getLeafCond(isNullCond);\n+\n+        Integer count = restTemplate.postForObject(BASE_URL + \"user/search/count.json\", searchCond, Integer.class);\n+        assertNotNull(count);\n+        assertTrue(count > 0);\n+    }\n+}"},{"sha":"cb2b53490bc19fcf91ee6d999b7ccc44074448e5","filename":"core/src/test/java/org/apache/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":3,"deletions":21,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -26,7 +26,6 @@\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n-import org.springframework.web.client.HttpClientErrorException;\n import org.springframework.web.client.HttpStatusCodeException;\n import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.apache.syncope.client.mod.UserMod;\n@@ -41,24 +40,6 @@\n \n public class UserRequestTestITCase extends AbstractTest {\n \n-    @Test\n-    public void selfRead() {\n-        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n-                getRequestFactory());\n-        ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n-                requestFactory.getAuthScope(), new UsernamePasswordCredentials(\"user1\", \"password\"));\n-\n-        try {\n-            restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\", UserTO.class, 1);\n-            fail();\n-        } catch (HttpClientErrorException e) {\n-            assertEquals(HttpStatus.FORBIDDEN, e.getStatusCode());\n-        }\n-\n-        UserTO userTO = restTemplate.getForObject(BASE_URL + \"user/request/read/self\", UserTO.class);\n-        assertEquals(\"user1\", userTO.getUsername());\n-    }\n-\n     @Test\n     public void create() {\n         // 1. set create request not allowed\n@@ -168,7 +149,8 @@ public void update() {\n         assertNotNull(userTO);\n \n         // 9. user password has now changed\n-        verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{username}.json?password=\" + userMod.getPassword(),\n+        verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{username}.json?password=\" + userMod.\n+                getPassword(),\n                 Boolean.class, userTO.getUsername());\n         assertTrue(verify);\n     }\n@@ -199,7 +181,7 @@ public void delete() {\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(userTO.getUsername(), initialPassword));\n \n         // 4. now request user delete works\n-        UserRequestTO request = restTemplate.getForObject(BASE_URL + \"user/request/delete/{userId}\", \n+        UserRequestTO request = restTemplate.getForObject(BASE_URL + \"user/request/delete/{userId}\",\n                 UserRequestTO.class, userTO.getId());\n         assertNotNull(request);\n "},{"sha":"bf95ff25a70dcaee4ff08ce6d23b1d30688cefec","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":19,"deletions":151,"changes":170,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -25,10 +25,8 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.Date;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n@@ -42,11 +40,7 @@\n import org.apache.syncope.client.mod.MembershipMod;\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.to.AttributeTO;\n-import org.apache.syncope.client.search.AttributeCond;\n-import org.apache.syncope.client.search.SyncopeUserCond;\n import org.apache.syncope.client.to.MembershipTO;\n-import org.apache.syncope.client.search.NodeCond;\n-import org.apache.syncope.client.search.ResourceCond;\n import org.apache.syncope.client.to.ConfigurationTO;\n import org.apache.syncope.client.to.ConnObjectTO;\n import org.apache.syncope.client.to.PasswordPolicyTO;\n@@ -67,6 +61,7 @@\n import org.apache.syncope.types.SyncopeClientExceptionType;\n import org.junit.Assume;\n import org.springframework.util.StringUtils;\n+import org.springframework.web.client.HttpClientErrorException;\n \n public class UserTestITCase extends AbstractTest {\n \n@@ -125,6 +120,24 @@ public static UserTO getSampleTO(final String email) {\n         return userTO;\n     }\n \n+    @Test\n+    public void selfRead() {\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n+        ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(), new UsernamePasswordCredentials(\"user1\", \"password\"));\n+\n+        try {\n+            restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\", UserTO.class, 1);\n+            fail();\n+        } catch (HttpClientErrorException e) {\n+            assertEquals(HttpStatus.FORBIDDEN, e.getStatusCode());\n+        }\n+\n+        UserTO userTO = restTemplate.getForObject(BASE_URL + \"user/read/self\", UserTO.class);\n+        assertEquals(\"user1\", userTO.getUsername());\n+    }\n+\n     @Test\n     public void createUserWithNoPropagation() {\n         // get task list\n@@ -872,17 +885,6 @@ public void count() {\n         assertTrue(count > 0);\n     }\n \n-    @Test\n-    public void searchCount() {\n-        AttributeCond isNullCond = new AttributeCond(AttributeCond.Type.ISNULL);\n-        isNullCond.setSchema(\"loginDate\");\n-        NodeCond searchCond = NodeCond.getLeafCond(isNullCond);\n-\n-        Integer count = restTemplate.postForObject(BASE_URL + \"user/search/count.json\", searchCond, Integer.class);\n-        assertNotNull(count);\n-        assertTrue(count > 0);\n-    }\n-\n     @Test\n     public void list() {\n         List<UserTO> users = Arrays.asList(restTemplate.getForObject(BASE_URL + \"user/list.json\", UserTO[].class));\n@@ -929,140 +931,6 @@ public void read() {\n         assertFalse(userTO.getAttributes().isEmpty());\n     }\n \n-    @Test\n-    public void search() {\n-        // LIKE\n-        AttributeCond fullnameLeafCond1 = new AttributeCond(AttributeCond.Type.LIKE);\n-        fullnameLeafCond1.setSchema(\"fullname\");\n-        fullnameLeafCond1.setExpression(\"%o%\");\n-\n-        AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n-        fullnameLeafCond2.setSchema(\"fullname\");\n-        fullnameLeafCond2.setExpression(\"%i%\");\n-\n-        NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond.getLeafCond(\n-                fullnameLeafCond2));\n-\n-        assertTrue(searchCondition.checkValidity());\n-\n-        List<UserTO> matchedUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search\", searchCondition,\n-                UserTO[].class));\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.isEmpty());\n-        for (UserTO user : matchedUsers) {\n-            assertNotNull(user);\n-        }\n-\n-        // ISNULL\n-        AttributeCond isNullCond = new AttributeCond(AttributeCond.Type.ISNULL);\n-        isNullCond.setSchema(\"loginDate\");\n-        searchCondition = NodeCond.getLeafCond(isNullCond);\n-\n-        matchedUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search\", searchCondition,\n-                UserTO[].class));\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.isEmpty());\n-\n-        Set<Long> userIds = new HashSet<Long>(matchedUsers.size());\n-        for (UserTO user : matchedUsers) {\n-            userIds.add(user.getId());\n-        }\n-        assertTrue(userIds.contains(2L));\n-        assertTrue(userIds.contains(3L));\n-    }\n-\n-    @Test\n-    public void searchByUsernameAndId() {\n-        final SyncopeUserCond usernameLeafCond = new SyncopeUserCond(SyncopeUserCond.Type.EQ);\n-        usernameLeafCond.setSchema(\"username\");\n-        usernameLeafCond.setExpression(\"user1\");\n-\n-        final SyncopeUserCond idRightCond = new SyncopeUserCond(SyncopeUserCond.Type.LT);\n-        idRightCond.setSchema(\"id\");\n-        idRightCond.setExpression(\"2\");\n-\n-        final NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(usernameLeafCond), NodeCond.\n-                getLeafCond(idRightCond));\n-\n-        assertTrue(searchCondition.checkValidity());\n-\n-        final List<UserTO> matchingUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search\",\n-                searchCondition, UserTO[].class));\n-\n-        assertNotNull(matchingUsers);\n-        assertEquals(1, matchingUsers.size());\n-        assertEquals(\"user1\", matchingUsers.iterator().next().getUsername());\n-        assertEquals(1L, matchingUsers.iterator().next().getId());\n-    }\n-\n-    @Test\n-    public void searchUserByResourceName() {\n-        ResourceCond ws2 = new ResourceCond();\n-        ws2.setResourceName(\"ws-target-resource2\");\n-\n-        ResourceCond ws1 = new ResourceCond();\n-        ws1.setResourceName(\"ws-target-resource-list-mappings-2\");\n-\n-        NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getNotLeafCond(ws2), NodeCond.getLeafCond(ws1));\n-\n-        assertTrue(searchCondition.checkValidity());\n-\n-        List<UserTO> matchedUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search\", searchCondition,\n-                UserTO[].class));\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.isEmpty());\n-\n-        Set<Long> userIds = new HashSet<Long>(matchedUsers.size());\n-        for (UserTO user : matchedUsers) {\n-            userIds.add(user.getId());\n-        }\n-\n-        assertEquals(1, userIds.size());\n-        assertTrue(userIds.contains(2L));\n-    }\n-\n-    @Test\n-    public void paginatedSearch() {\n-        // LIKE\n-        AttributeCond fullnameLeafCond1 = new AttributeCond(AttributeCond.Type.LIKE);\n-        fullnameLeafCond1.setSchema(\"fullname\");\n-        fullnameLeafCond1.setExpression(\"%o%\");\n-\n-        AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n-        fullnameLeafCond2.setSchema(\"fullname\");\n-        fullnameLeafCond2.setExpression(\"%i%\");\n-\n-        NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond.getLeafCond(\n-                fullnameLeafCond2));\n-\n-        assertTrue(searchCondition.checkValidity());\n-\n-        List<UserTO> matchedUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search/{page}/{size}\",\n-                searchCondition, UserTO[].class, 1, 2));\n-        assertNotNull(matchedUsers);\n-\n-        assertFalse(matchedUsers.isEmpty());\n-        for (UserTO user : matchedUsers) {\n-            assertNotNull(user);\n-        }\n-\n-        // ISNULL\n-        AttributeCond isNullCond = new AttributeCond(AttributeCond.Type.ISNULL);\n-        isNullCond.setSchema(\"loginDate\");\n-        searchCondition = NodeCond.getLeafCond(isNullCond);\n-\n-        matchedUsers = Arrays.asList(restTemplate.postForObject(BASE_URL + \"user/search/{page}/{size}\",\n-                searchCondition, UserTO[].class, 1, 2));\n-\n-        assertNotNull(matchedUsers);\n-        assertFalse(matchedUsers.isEmpty());\n-        Set<Long> userIds = new HashSet<Long>(matchedUsers.size());\n-        for (UserTO user : matchedUsers) {\n-            userIds.add(user.getId());\n-        }\n-        assertEquals(2, userIds.size());\n-    }\n-\n     @Test\n     public void updateWithouPassword() {\n         UserTO userTO = getSampleTO(\"updatewithout@password.com\");"},{"sha":"09af70f02a6df06a317ab0c6756a8c3cea658ae1","filename":"core/src/test/resources/content.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -35,7 +35,7 @@ under the License.\n   <!-- sample policies -->\n   <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"sync policy 1\" type=\"GLOBAL_SYNC\" specification=\"%3Corg.apache.syncope.types.SyncPolicySpec%2F%3E\"/>\n   <Policy DTYPE=\"PasswordPolicy\" id=\"2\" description=\"global password policy\" type=\"GLOBAL_PASSWORD\" specification=\"%3Corg.apache.syncope.types.PasswordPolicySpec%3E%0A++%3ChistoryLength%3E1%3C%2FhistoryLength%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E8%3C%2FminLength%3E%0A++%3CnonAlphanumericRequired%3Efalse%3C%2FnonAlphanumericRequired%3E%0A++%3CalphanumericRequired%3Efalse%3C%2FalphanumericRequired%3E%0A++%3CdigitRequired%3Efalse%3C%2FdigitRequired%3E%0A++%3ClowercaseRequired%3Efalse%3C%2FlowercaseRequired%3E%0A++%3CuppercaseRequired%3Efalse%3C%2FuppercaseRequired%3E%0A++%3CmustStartWithDigit%3Efalse%3C%2FmustStartWithDigit%3E%0A++%3CmustntStartWithDigit%3Efalse%3C%2FmustntStartWithDigit%3E%0A++%3CmustEndWithDigit%3Efalse%3C%2FmustEndWithDigit%3E%0A++%3CmustntEndWithDigit%3Efalse%3C%2FmustntEndWithDigit%3E%0A++%3CmustStartWithNonAlpha%3Efalse%3C%2FmustStartWithNonAlpha%3E%0A++%3CmustStartWithAlpha%3Efalse%3C%2FmustStartWithAlpha%3E%0A++%3CmustntStartWithNonAlpha%3Efalse%3C%2FmustntStartWithNonAlpha%3E%0A++%3CmustntStartWithAlpha%3Efalse%3C%2FmustntStartWithAlpha%3E%0A++%3CmustEndWithNonAlpha%3Efalse%3C%2FmustEndWithNonAlpha%3E%0A++%3CmustEndWithAlpha%3Efalse%3C%2FmustEndWithAlpha%3E%0A++%3CmustntEndWithNonAlpha%3Efalse%3C%2FmustntEndWithNonAlpha%3E%0A++%3CmustntEndWithAlpha%3Efalse%3C%2FmustntEndWithAlpha%3E%0A++%3CprefixesNotPermitted%3E%0A++++%3Cstring%3Enotpermitted1%3C%2Fstring%3E%0A++++%3Cstring%3Enotpermitted2%3C%2Fstring%3E%0A++%3C%2FprefixesNotPermitted%3E%0A%3C%2Forg.apache.syncope.types.PasswordPolicySpec%3E\"/>\n-  <Policy DTYPE=\"SyncPolicy\" id=\"3\" description=\"sync policy 2\" type=\"SYNC\" specification=\"%3Corg.apache.syncope.types.SyncPolicySpec%3E%0A++%3CalternativeSearchAttrs%3E%0A++++%3Cstring%3Eusername%3C%2Fstring%3E%0A++++%3Cstring%3Efirstname%3C%2Fstring%3E%0A++%3C%2FalternativeSearchAttrs%3E%0A++%3CconflictResolutionAction%3EALL%3C%2FconflictResolutionAction%3E%0A%3C%2Forg.apache.syncope.types.SyncPolicySpec%3E\"/>\n+  <Policy DTYPE=\"SyncPolicy\" id=\"3\" description=\"sync policy 2\" type=\"SYNC\" specification=\"%3Corg.apache.syncope.types.SyncPolicySpec%3E%0A++%3CuAltSearchSchemas%3E%0A++++%3Cstring%3Eusername%3C%2Fstring%3E%0A++++%3Cstring%3Efirstname%3C%2Fstring%3E%0A++%3C%2FuAltSearchSchemas%3E%0A++%3CconflictResolutionAction%3EALL%3C%2FconflictResolutionAction%3E%0A%3C%2Forg.apache.syncope.types.SyncPolicySpec%3E\"/>\n   <Policy DTYPE=\"PasswordPolicy\" id=\"4\" description=\"sample password policy\" type=\"PASSWORD\" specification=\"%3Corg.apache.syncope.types.PasswordPolicySpec%3E%0A++%3ChistoryLength%3E0%3C%2FhistoryLength%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E10%3C%2FminLength%3E%0A++%3CnonAlphanumericRequired%3Efalse%3C%2FnonAlphanumericRequired%3E%0A++%3CalphanumericRequired%3Efalse%3C%2FalphanumericRequired%3E%0A++%3CdigitRequired%3Etrue%3C%2FdigitRequired%3E%0A++%3ClowercaseRequired%3Efalse%3C%2FlowercaseRequired%3E%0A++%3CuppercaseRequired%3Efalse%3C%2FuppercaseRequired%3E%0A++%3CmustStartWithDigit%3Efalse%3C%2FmustStartWithDigit%3E%0A++%3CmustntStartWithDigit%3Efalse%3C%2FmustntStartWithDigit%3E%0A++%3CmustEndWithDigit%3Efalse%3C%2FmustEndWithDigit%3E%0A++%3CmustntEndWithDigit%3Efalse%3C%2FmustntEndWithDigit%3E%0A++%3CmustStartWithNonAlpha%3Efalse%3C%2FmustStartWithNonAlpha%3E%0A++%3CmustStartWithAlpha%3Efalse%3C%2FmustStartWithAlpha%3E%0A++%3CmustntStartWithNonAlpha%3Efalse%3C%2FmustntStartWithNonAlpha%3E%0A++%3CmustntStartWithAlpha%3Efalse%3C%2FmustntStartWithAlpha%3E%0A++%3CmustEndWithNonAlpha%3Efalse%3C%2FmustEndWithNonAlpha%3E%0A++%3CmustEndWithAlpha%3Efalse%3C%2FmustEndWithAlpha%3E%0A++%3CmustntEndWithNonAlpha%3Efalse%3C%2FmustntEndWithNonAlpha%3E%0A++%3CmustntEndWithAlpha%3Efalse%3C%2FmustntEndWithAlpha%3E%0A++%3CprefixesNotPermitted%3E%0A++++%3Cstring%3Enotpermitted1%3C%2Fstring%3E%0A++++%3Cstring%3Enotpermitted2%3C%2Fstring%3E%0A++%3C%2FprefixesNotPermitted%3E%0A%3C%2Forg.apache.syncope.types.PasswordPolicySpec%3E\"/>\n   <Policy DTYPE=\"AccountPolicy\" id=\"5\" description=\"global account policy\" type=\"GLOBAL_ACCOUNT\" specification=\"%3Corg.apache.syncope.types.AccountPolicySpec%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E0%3C%2FminLength%3E%0A++%3CallUpperCase%3Efalse%3C%2FallUpperCase%3E%0A++%3CallLowerCase%3Efalse%3C%2FallLowerCase%3E%0A++%3CpropagateSuspension%3Efalse%3C%2FpropagateSuspension%3E%0A++%3CpermittedLoginRetries%3E0%3C%2FpermittedLoginRetries%3E%0A%3C%2Forg.apache.syncope.types.AccountPolicySpec%3E\"/>\n   <Policy DTYPE=\"AccountPolicy\" id=\"6\" description=\"sample account policy\" type=\"ACCOUNT\" specification=\"%3Corg.apache.syncope.types.AccountPolicySpec%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E4%3C%2FminLength%3E%0A++%3CprefixesNotPermitted%3E%0A++++%3Cstring%3Enotpermitted1%3C%2Fstring%3E%0A++++%3Cstring%3Enotpermitted2%3C%2Fstring%3E%0A++%3C%2FprefixesNotPermitted%3E%0A++%3CallUpperCase%3Efalse%3C%2FallUpperCase%3E%0A++%3CallLowerCase%3Efalse%3C%2FallLowerCase%3E%0A++%3CpropagateSuspension%3Efalse%3C%2FpropagateSuspension%3E%0A++%3CpermittedLoginRetries%3E3%3C%2FpermittedLoginRetries%3E%0A%3C%2Forg.apache.syncope.types.AccountPolicySpec%3E\"/>\n@@ -369,7 +369,7 @@ under the License.\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n   <ExternalResource name=\"ws-target-resource-update-resetsynctoken\" connector_id=\"100\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n-                    serializedSyncToken=\"%3Corg.identityconnectors.framework.common.objects.SyncToken%2F%3E\"/>\n+                    userializedSyncToken=\"%3Corg.identityconnectors.framework.common.objects.SyncToken%2F%3E\"/>\n   <ExternalResource name=\"resource-ldap\" connector_id=\"105\"\n                     enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\""},{"sha":"1ebf6fd2180254f342bda02fcd4d52b63159e2ea","filename":"pom.xml","status":"modified","additions":44,"deletions":46,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -33,11 +33,11 @@ under the License.\n   <parent>\n     <groupId>org.apache</groupId>\n     <artifactId>apache</artifactId>\n-    <version>11</version>\n+    <version>12</version>\n     <relativePath />\n   </parent>\n \n-  <url>http://incubator.apache.org/syncope/</url>\n+  <url>http://syncope.apache.org/</url>\n \n   <inceptionYear>2010</inceptionYear>\n \n@@ -50,9 +50,9 @@ under the License.\n   </licenses>\n \n   <scm>\n-    <connection>scm:svn:http://svn.apache.org/repos/asf/incubator/syncope/trunk</connection>\n-    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/incubator/syncope/trunk</developerConnection>\n-    <url>http://svn.apache.org/viewvc/incubator/syncope/trunk</url>\n+    <connection>scm:svn:http://svn.apache.org/repos/asf/syncope/trunk</connection>\n+    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/syncope/trunk</developerConnection>\n+    <url>http://svn.apache.org/viewvc/syncope/trunk</url>\n   </scm>\n   \n   <issueManagement>\n@@ -76,34 +76,34 @@ under the License.\n   <mailingLists>\n     <mailingList>\n       <name>Syncope User List</name>\n-      <subscribe>syncope-user-subscribe@incubator.apache.org</subscribe>\n-      <unsubscribe>syncope-user-unsubscribe@incubator.apache.org</unsubscribe>\n-      <post>syncope-user@incubator.apache.org</post>\n-      <archive>http://mail-archives.apache.org/mod_mbox/incubator-syncope-user/</archive>\n+      <subscribe>user-subscribe@syncope.apache.org</subscribe>\n+      <unsubscribe>user-unsubscribe@syncope.apache.org</unsubscribe>\n+      <post>user@syncope.apache.org</post>\n+      <archive>http://mail-archives.apache.org/mod_mbox/syncope-user/</archive>\n       <otherArchives>\n-        <otherArchive>http://markmail.org/search/+list:org.apache.incubator.syncope-user</otherArchive>\n+        <otherArchive>http://syncope.markmail.org/</otherArchive>\n         <otherArchive>http://syncope-user.1051894.n5.nabble.com/</otherArchive>\n       </otherArchives>\n     </mailingList>\n     <mailingList>\n       <name>Syncope Developer List</name>\n-      <subscribe>syncope-dev-subscribe@incubator.apache.org</subscribe>\n-      <unsubscribe>syncope-dev-unsubscribe@incubator.apache.org</unsubscribe>\n-      <post>syncope-dev@incubator.apache.org</post>\n-      <archive>http://mail-archives.apache.org/mod_mbox/incubator-syncope-dev/</archive>\n+      <subscribe>dev-subscribe@syncope.apache.org</subscribe>\n+      <unsubscribe>dev-unsubscribe@syncope.apache.org</unsubscribe>\n+      <post>dev@syncope.apache.org</post>\n+      <archive>http://mail-archives.apache.org/mod_mbox/syncope-dev/</archive>\n       <otherArchives>\n-        <otherArchive>http://markmail.org/search/+list:org.apache.incubator.syncope-dev</otherArchive>\n+        <otherArchive>http://syncope.markmail.org/</otherArchive>\n         <otherArchive>http://syncope-dev.1063484.n5.nabble.com/</otherArchive>\n       </otherArchives>\n     </mailingList>\n     <mailingList>\n       <name>Syncope Commits List</name>\n-      <subscribe>syncope-commits-subscribe@incubator.apache.org</subscribe>\n-      <unsubscribe>syncope-commits-unsubscribe@incubator.apache.org</unsubscribe>\n-      <post>syncope-commits@incubator.apache.org</post>\n-      <archive>http://mail-archives.apache.org/mod_mbox/incubator-syncope-commits/</archive>\n+      <subscribe>commits-subscribe@syncope.apache.org</subscribe>\n+      <unsubscribe>commits-unsubscribe@syncope.apache.org</unsubscribe>\n+      <post>commits@syncope.apache.org</post>\n+      <archive>http://mail-archives.apache.org/mod_mbox/syncope-commits/</archive>\n       <otherArchives>\n-        <otherArchive>http://markmail.org/search/+list:org.apache.incubator.syncope-commits</otherArchive>\n+        <otherArchive>http://syncope.markmail.org/</otherArchive>\n       </otherArchives>\n     </mailingList>\n   </mailingLists>\n@@ -116,7 +116,8 @@ under the License.\n       <organization>Tirasa</organization>\n       <organizationUrl>http://www.tirasa.net/</organizationUrl>\n       <roles>\n-        <role>PPMC member</role>\n+        <role>ASF member</role>\n+        <role>PMC chair</role>\n       </roles>\n       <url>http://people.apache.org/~ilgrosso/</url>\n     </developer>\n@@ -126,7 +127,7 @@ under the License.\n       <organization>Tirasa</organization>\n       <organizationUrl>http://www.tirasa.net/</organizationUrl>\n       <roles>\n-        <role>PPMC member</role>\n+        <role>PMC member</role>\n       </roles>\n       <url>http://people.apache.org/~fmartelli/</url>\n     </developer>\n@@ -136,7 +137,7 @@ under the License.\n       <organization>Tirasa</organization>\n       <organizationUrl>http://www.tirasa.net/</organizationUrl>\n       <roles>\n-        <role>PPMC member</role>\n+        <role>PMC member</role>\n       </roles>\n       <url>http://people.apache.org/~mdisabatino/</url>\n     </developer>    \n@@ -146,7 +147,7 @@ under the License.\n       <organization>Tirasa</organization>\n       <organizationUrl>http://www.tirasa.net/</organizationUrl>\n       <roles>\n-        <role>PPMC member</role>\n+        <role>PMC member</role>\n       </roles>\n       <url>http://people.apache.org/~massi/</url>\n     </developer>    \n@@ -156,7 +157,7 @@ under the License.\n       <organization>Everett</organization>\n       <organizationUrl>http://www.everett.nl/</organizationUrl>\n       <roles>\n-        <role>PPMC member</role>\n+        <role>committer</role>\n       </roles>\n       <url>http://people.apache.org/~rene/</url>\n     </developer>    \n@@ -166,9 +167,8 @@ under the License.\n       <organization>The Apache Software Foundation</organization>\n       <organizationUrl>http://www.apache.org/</organizationUrl>\n       <roles>\n-        <role>Champion</role>\n-        <role>Mentor</role>\n-        <role>PPMC member</role>\n+        <role>ASF member</role>\n+        <role>PMC member</role>\n       </roles>\n       <url>http://people.apache.org/~simonetripodi/</url>\n     </developer>\n@@ -178,8 +178,8 @@ under the License.\n       <organization>The Apache Software Foundation</organization>\n       <organizationUrl>http://www.apache.org/</organizationUrl>\n       <roles>\n-        <role>Mentor</role>\n-        <role>PPMC member</role>\n+        <role>ASF member</role>\n+        <role>PMC member</role>\n       </roles>\n       <url>http://people.apache.org/~elecharny/</url>\n     </developer>\n@@ -189,7 +189,7 @@ under the License.\n       <organization>Everett Italia</organization>\n       <organizationUrl>http://www.everett.it/</organizationUrl>\n       <roles>\n-        <role>PPMC member</role>\n+        <role>committer</role>\n       </roles>\n       <url>http://people.apache.org/~anzelld/</url>\n     </developer>\n@@ -199,8 +199,8 @@ under the License.\n       <organization>Talend</organization>\n       <organizationUrl>http://www.talend.com/</organizationUrl>\n       <roles>\n-        <role>Mentor</role>\n-        <role>PPMC member</role>\n+        <role>ASF member</role>\n+        <role>PMC member</role>\n       </roles>\n       <url>http://people.apache.org/~coheigea/</url>\n     </developer>\n@@ -210,7 +210,8 @@ under the License.\n       <organization>Talend</organization>\n       <organizationUrl>http://www.talend.com/</organizationUrl>\n       <roles>\n-        <role>PPMC member</role>\n+        <role>ASF member</role>\n+        <role>PMC member</role>\n       </roles>\n       <url>http://people.apache.org/~jbonofre/</url>\n     </developer>\n@@ -220,7 +221,7 @@ under the License.\n       <organization>Talend</organization>\n       <organizationUrl>http://www.talend.com/</organizationUrl>\n       <roles>\n-        <role>PPMC member</role>\n+        <role>PMC member</role>\n       </roles>\n       <url>http://people.apache.org/~jbernhardt/</url>\n     </developer>\n@@ -269,7 +270,7 @@ under the License.\n     <spring.version>3.1.3.RELEASE</spring.version>\n     <spring-security.version>3.1.3.RELEASE</spring-security.version>\n     <aspectj.version>1.7.1</aspectj.version>\n-    <jackson.version>1.9.10</jackson.version>\n+    <jackson.version>1.9.11</jackson.version>\n     <xstream.version>1.4.3</xstream.version>\n     <velocity.version>1.7</velocity.version>\n     <quartz.version>2.1.6</quartz.version>\n@@ -279,7 +280,7 @@ under the License.\n         \n     <cocoon.version>3.0.0-alpha-3</cocoon.version>\n \n-    <wicket.version>1.5.8</wicket.version>\n+    <wicket.version>6.3.0</wicket.version>\n \n     <groovy.version>1.6.9</groovy.version>\n \n@@ -293,7 +294,7 @@ under the License.\n \n     <apacheds.version>1.5.7</apacheds.version>\n \n-    <tomcat.version>7.0.32</tomcat.version>\n+    <tomcat.version>7.0.33</tomcat.version>\n \n     <jasypt.version>1.9.0</jasypt.version>\n  \n@@ -323,7 +324,7 @@ under the License.\n   <dependencyManagement>\n \n     <dependencies>\n-\n+            \n       <dependency>\n         <groupId>javax.servlet</groupId>\n         <artifactId>servlet-api</artifactId>\n@@ -748,7 +749,7 @@ under the License.\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-compiler-plugin</artifactId>\n-          <version>2.5.1</version> \n+          <version>3.0</version> \n           <configuration>\n             <source>${targetJdk}</source>\n             <target>${targetJdk}</target>\n@@ -807,7 +808,6 @@ under the License.\n               <resource>\n                 <directory>${project.build.outputDirectory}</directory>\n                 <includes>\n-                  <include>META-INF/DISCLAIMER*</include>\n                   <include>META-INF/DEPENDENCIES*</include>\n                 </includes>\n               </resource>\n@@ -820,7 +820,7 @@ under the License.\n                 </includes>\n               </resource>\n             </webResources>\n-            <packagingExcludes>WEB-INF/classes/META-INF/LICENSE*,WEB-INF/classes/META-INF/NOTICE*,WEB-INF/classes/META-INF/DISCLAIMER*,WEB-INF/classes/META-INF/DEPENDENCIES*</packagingExcludes>\n+            <packagingExcludes>WEB-INF/classes/META-INF/LICENSE*,WEB-INF/classes/META-INF/NOTICE*,WEB-INF/classes/META-INF/DEPENDENCIES*</packagingExcludes>\n           </configuration>\n         </plugin>\n         <plugin>\n@@ -1042,7 +1042,7 @@ under the License.\n           </execution>\n         </executions>\n       </plugin>\n-      <!-- Put NOTICE, LICENSE and DISCLAIMER files in all javadoc artifacts -->\n+      <!-- Put NOTICE and LICENSE files in all javadoc artifacts -->\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-antrun-plugin</artifactId>\n@@ -1053,13 +1053,12 @@ under the License.\n             </goals>\n             <phase>process-resources</phase>\n             <configuration>\n-              <target name=\"copy-javadoc-files\" description=\"Copy NOTICE/LICENSE/DISCLAIMER files for javadoc jars\">\n+              <target name=\"copy-javadoc-files\" description=\"Copy NOTICE/LICENSE files for javadoc jars\">\n                 <mkdir dir=\"target/apidocs/META-INF\" />\n                 <copy todir=\"target/apidocs/META-INF\">\n                   <fileset dir=\"..\">\n                     <include name=\"NOTICE\" />\n                     <include name=\"LICENSE\" />\n-                    <include name=\"DISCLAIMER\" />\n                   </fileset>\n                 </copy>\n               </target>\n@@ -1080,7 +1079,6 @@ under the License.\n               <requiredFiles>\n                 <requiredFile>LICENSE</requiredFile>\n                 <requiredFile>NOTICE</requiredFile>\n-                <requiredFile>DISCLAIMER</requiredFile>\n               </requiredFiles>\n               <!-- Fail the build if any artifacts are missing legal files -->\n               <strict>true</strict>"},{"sha":"39692f775a518b1d284e309af2d807bfee2af8bc","filename":"src/site/site.xml","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fsite.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fsite.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fsite.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -24,14 +24,9 @@ under the License.\n                              http://maven.apache.org/xsd/decoration-1.1.0.xsd\" \n          name=\"Apache Syncope\">\n              \n-  <bannerRight>\n-    <src>images/apache-incubator-logo.png</src>\n-    <href>http://incubator.apache.org/</href>\n-  </bannerRight>\n-\n   <bannerLeft>\n     <src>images/apache-syncope-logo-small.jpg</src>\n-    <href>http://incubator.apache.org/syncope</href>\n+    <href>http://syncope.apache.org/</href>\n   </bannerLeft>\n \n   <publishDate position=\"right\"/>\n@@ -42,15 +37,20 @@ under the License.\n     <artifactId>maven-fluido-skin</artifactId>\n     <version>1.3.0</version>\n   </skin>\n-\n+  <custom>\n+    <fluidoSkin>\n+      <leftColumnClass>span2</leftColumnClass>\n+      <bodyColumnClass>span10</bodyColumnClass>\n+    </fluidoSkin>\n+  </custom>\n+  \n   <body>\n     <links>\n       <item name=\"Apache\" href=\"http://www.apache.org/\"/>\n-      <item name=\"Apache Incubator\" href=\"http://incubator.apache.org/\"/>\n     </links>\n \n     <breadcrumbs>\n-      <item name=\"Apache Syncope\" href=\"http://incubator.apache.org/syncope/\"/>\n+      <item name=\"Apache Syncope\" href=\"http://syncope.apache.org/\"/>\n     </breadcrumbs>\n         \n     <menu name=\"Overview\">\n@@ -73,6 +73,7 @@ under the License.\n       <item name=\"Source Repository\" href=\"source-repository.html\"/>\n       <item name=\"Continuous Integration\" href=\"integration.html\"/>\n       <item name=\"Issue Tracking\" href=\"issue-tracking.html\"/>\n+      <item name=\"How to contribute?\" href=\"contributing.html\"/>\n       <item name=\"Release Process\" href=\"release-process.html\"/>\n     </menu>\n \n@@ -85,7 +86,7 @@ under the License.\n \n     <footer>\n       <div class=\"row span16\" style=\"width:100%\">\n-        Apache, Syncope, Apache Syncope, the Apache feather logo, the Apache Syncope project logo and the Apache Syncope logo are trademarks of The Apache Software Foundation. All other marks mentioned may be trademarks or registered trademarks of their respective owners.\n+        Apache, Syncope, Apache Syncope, the Apache feather logo and the Apache Syncope project logo are trademarks of The Apache Software Foundation. All other marks mentioned may be trademarks or registered trademarks of their respective owners.\n       </div>\n     </footer>\n   </body>"},{"sha":"176adb5b3e152c7b516160d0ac7e0ef8d0869f1e","filename":"src/site/xdoc/architecture.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Farchitecture.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Farchitecture.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fxdoc%2Farchitecture.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -23,7 +23,7 @@ under the License.\n \n   <properties>\n     <title>Architecture</title>\n-    <author email=\"syncope-dev@incubator.apache.org\">Apache Syncope Documentation Team</author>\n+    <author email=\"dev@syncope.apache.org\">Apache Syncope Documentation Team</author>\n   </properties>\n \n   <body>"},{"sha":"4d36a9dbed3b010a954371621e1efe474611c3c7","filename":"src/site/xdoc/contributing.xml","status":"added","additions":133,"deletions":0,"changes":133,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Fcontributing.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Fcontributing.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fxdoc%2Fcontributing.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -0,0 +1,133 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+\n+-->\n+<document xmlns=\"http://maven.apache.org/XDOC/2.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+          xsi:schemaLocation=\"http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd\">\n+\n+  <properties>\n+    <title>How to contribute?</title>\n+    <author email=\"dev@syncope.apache.org\">Apache Syncope Documentation Team</author>\n+  </properties>\n+\n+  <body>\n+    \n+    <section name=\"How to contribute?\">\n+      <p>\n+        The Apache Syncope™ project is actively seeking new contributors to work on all aspects of the project. \n+        We need and appreciate all contributions, including documentation help, source code development and feedback.\n+      </p>\n+\n+      <subsection name=\"Code\">\n+        <ul>\n+          <li>When you have found an issue or you want to propose a new feature, post a message to Syncope User's list to \n+            discuss it.\n+          </li>\n+          <li>Search existing \n+            <a href=\"https://issues.apache.org/jira/secure/IssueNavigator.jspa\" rel=\"nofollow\">issues</a> to see whether \n+            someone had already encountered the same issue.\n+          </li>\n+          <li>If this issue is never encountered before, create a \n+            <a href=\"http://issues.apache.org/jira/browse/SYNCOPE\">JIRA</a> issue.\n+          </li>\n+          <li>Develop a test case to demonstrate the issue.</li>\n+          <li>Attach the new test to JIRA issue.</li>\n+          <li>If you have also developed a fix for the raised issue, attach a patch to it. Here are some useful \n+            <a href=\"https://commons.apache.org/patches.html\">guidelines</a> about how to correctly generate a patch.\n+          </li>\n+        </ul>\n+      </subsection>\n+\n+      <subsection name=\"Documentation\">\n+        <p>The website is managed via the \n+          <a href=\"http://maven.apache.org/plugins/maven-site-plugin/\">maven-site-plugin</a>, hence contributing site \n+          content is very close to contributing source code: create a new issue on JIRA and attach there a SVN patch.\n+        </p>\n+        <p>The project \n+          <a href=\"http://cwiki.apache.org/confluence/display/SYNCOPE\">wiki</a> is also there to gather any other kind of\n+          documentation or contribution you would like to contribute, and does not require any SVN, Maven or other \n+          technical skills.\n+        </p>\n+      </subsection>\n+    \n+      <subsection name=\"Quick references\">\n+        <ul>\n+          <li>\n+            Discussion occurs on the \n+            <a href=\"mail-lists.html\">mailing lists</a>\n+          </li>\n+          <li>\n+            Information on access to the project source code is \n+            <a href=\"source-repository.html\">available</a>.\n+          </li>\n+          <li>\n+            Bugs and other issues can be posted on \n+            <a href=\"https://issues.apache.org/jira/browse/SYNCOPE\">JIRA</a>\n+          </li>\n+        </ul>\n+      </subsection>\n+    </section>\n+    \n+    <section name=\"How do I become a contributor or a committer?\">\n+      <p>Everyone can contribute to Syncope as a contributor; contributors who build up a history of successful \n+        contributions over time are invited to become committers. The difference is that committers have direct write \n+        access to the project SVN repositories, while contributors post their contributions to JIRA issues where they're\n+        first reviewed, and then committed by a committer to the project's SVN repository. See \n+        <a href=\"http://www.apache.org/dev/contributors.html\">http://www.apache.org/dev/contributors.html</a> for a good\n+        overview of working as a contributor.\n+      </p>\n+      <p>We ask contributors of significant amounts of code to fill out and send into Apache, an \n+        <a href=\"http://www.apache.org/licenses/#clas\">Individual Contributors License Agreement (ICLA)</a> \n+        (and perhaps also a \n+        <a href=\"http://www.apache.org/licenses/#clas\">Corporate Contributors License Agreement (CCLA)</a>).\n+      </p>\n+      <p>If you're interested in committing to the project, you need to establish a history over time of successful \n+        contributions to the project. After that, you can be invited to become a committer.\n+      </p>\n+      <ul>\n+        <li>\n+          You'll need to fill out some legal paperwork and go through a process to get an apache committer account: See \n+          <a rel=\"nofollow\" href=\"http://apache.org/dev/new-committers-guide.html\"> New Committers Guide</a>, \n+          <a rel=\"nofollow\" href=\"http://apache.org/dev/contributors.html\"> Contributors</a>, and \n+          <a rel=\"nofollow\" href=\"http://apache.org/dev/committers.html\"> Committers</a> for more details.\n+        </li>\n+        <li>\n+          After you've received an email from \n+          <a href=\"mailto:root@apache.org\">root@apache.org</a> with your committer account information, change your \n+          initial password at \n+          <a href=\"https://id.apache.org\">Apache Account Utility</a>. For more details see \n+          <a rel=\"nofollow\" href=\"http://apache.org/dev/version-control.html\">Committer Subversion Access</a>.\n+        </li>\n+        <li>\n+          Check out the Syncope sources and test your svn account: \n+          <a href=\"http://svn.apache.org/viewvc/syncope/\">Subversion Repository</a>.\n+        </li>\n+      </ul>\n+      <p>All Contributors and Committers should</p>\n+      <ul>\n+        <li>Sign up for a \n+          <a rel=\"nofollow\" href=\"https://cwiki.apache.org/confluence/signup.action\">WiKi</a> account.\n+        </li>\n+        <li>Sign up for an \n+          <a rel=\"nofollow\" href=\"http://issues.apache.org/jira/\">ASF JIRA</a> account.\n+        </li>\n+      </ul>\n+    </section>\n+  </body>\n+</document>"},{"sha":"d170eca84121162763d558ff3f67aaf50a6d65b8","filename":"src/site/xdoc/downloads.xml","status":"modified","additions":8,"deletions":34,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Fdownloads.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Fdownloads.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fxdoc%2Fdownloads.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -23,7 +23,7 @@ under the License.\n \n   <properties>\n     <title>Downloads</title>\n-    <author email=\"syncope-dev@incubator.apache.org\">Apache Syncope Documentation Team</author>\n+    <author email=\"dev@syncope.apache.org\">Apache Syncope Documentation Team</author>\n   </properties>\n \n   <body>\n@@ -54,8 +54,8 @@ under the License.\n     </section>\n \n     <section name=\"Current Releases\">\n-      <subsection name=\"1.0.2-incubating Espressivo\">\n-        <p>Release date: Oct 2nd, 2012</p>\n+      <subsection name=\"1.0.3-incubating Espressivo\">\n+        <p>Release date: Oct 30th, 2012</p>\n         <p>\n           <a href=\"https://cwiki.apache.org/confluence/display/SYNCOPE/Espressivo\">Release notes</a>\n         </p>\n@@ -69,12 +69,12 @@ under the License.\n           <tbody>\n             <tr>\n               <td>\n-                <a href=\"http://www.apache.org/dyn/closer.cgi/incubator/syncope/1.0.2-incubating/syncope-root-1.0.2-incubating-source-release.zip\">syncope-root-1.0.2-incubating-source-release.zip</a>\n+                <a href=\"http://www.apache.org/dyn/closer.cgi/syncope/1.0.3-incubating/syncope-root-1.0.3-incubating-source-release.zip\">syncope-root-1.0.3-incubating-source-release.zip</a>\n               </td>\n               <td>\n-                <a href=\"http://www.apache.org/dist/incubator/syncope/1.0.2-incubating/syncope-root-1.0.2-incubating-source-release.zip.asc\">asc</a> \n-                <a href=\"http://www.apache.org/dist/incubator/syncope/1.0.2-incubating/syncope-root-1.0.2-incubating-source-release.zip.md5\">md5</a> \n-                <a href=\"http://www.apache.org/dist/incubator/syncope/1.0.2-incubating/syncope-root-1.0.2-incubating-source-release.zip.sha1\">sha1</a>\n+                <a href=\"http://www.apache.org/dist/syncope/1.0.3-incubating/syncope-root-1.0.3-incubating-source-release.zip.asc\">asc</a> \n+                <a href=\"http://www.apache.org/dist/syncope/1.0.3-incubating/syncope-root-1.0.3-incubating-source-release.zip.md5\">md5</a> \n+                <a href=\"http://www.apache.org/dist/syncope/1.0.3-incubating/syncope-root-1.0.3-incubating-source-release.zip.sha1\">sha1</a>\n               </td>\n             </tr>\n           </tbody>\n@@ -83,32 +83,6 @@ under the License.\n     </section>\n \n     <section name=\"Older Releases\">\n-      <subsection name=\"1.0.1-incubating Espressivo\">\n-        <p>Release date: Aug 30th, 2012</p>\n-        <p>\n-          <a href=\"https://cwiki.apache.org/confluence/display/SYNCOPE/Espressivo\">Release notes</a>\n-        </p>\n-        <table>\n-          <thead>\n-            <tr>\n-              <th>Artifact</th>\n-              <th>Signatures</th>\n-            </tr>\n-          </thead>\n-          <tbody>\n-            <tr>\n-              <td>\n-                <a href=\"http://archive.apache.org/dist/incubator/syncope/1.0.1-incubating/syncope-root-1.0.1-incubating-source-release.zip\">syncope-root-1.0.1-incubating-source-release.zip</a>\n-              </td>\n-              <td>\n-                <a href=\"http://archive.apache.org/dist/incubator/syncope/1.0.1-incubating/syncope-root-1.0.1-incubating-source-release.zip.asc\">asc</a> \n-                <a href=\"http://archive.apache.org/dist/incubator/syncope/1.0.1-incubating/syncope-root-1.0.1-incubating-source-release.zip.md5\">md5</a> \n-                <a href=\"http://archive.apache.org/dist/incubator/syncope/1.0.1-incubating/syncope-root-1.0.1-incubating-source-release.zip.sha1\">sha1</a>\n-              </td>\n-            </tr>\n-          </tbody>\n-        </table>\n-      </subsection>\n     </section>\n \n     <section name=\"Verifying Releases\">\n@@ -118,7 +92,7 @@ under the License.\n         <a href=\"http://www.pgpi.org/\">PGP</a> or \n         <a href=\"http://www.gnupg.org/\">GPG</a>. \n         First download the \n-        <a href=\"http://apache.org/dist/incubator/syncope/KEYS\">KEYS</a> as well as the \n+        <a href=\"http://apache.org/dist/syncope/KEYS\">KEYS</a> as well as the \n         <tt>*.asc</tt> signature file for the particular distribution. Make sure you get these files from the main \n         distribution directory, rather than from a mirror. Then verify the signatures using one of the following sets of\n         commands:"},{"sha":"67d9a69af9acf034414ae07513369424b6933314","filename":"src/site/xdoc/features.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Ffeatures.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Ffeatures.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fxdoc%2Ffeatures.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -23,7 +23,7 @@ under the License.\n \n   <properties>\n     <title>Features</title>\n-    <author email=\"syncope-dev@incubator.apache.org\">Apache Syncope Documentation Team</author>\n+    <author email=\"dev@syncope.apache.org\">Apache Syncope Documentation Team</author>\n   </properties>\n \n   <body>    "},{"sha":"6d52d5bb7b01ea87aa8ab668855b92261fb96fce","filename":"src/site/xdoc/index.xml","status":"modified","additions":2,"deletions":20,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Findex.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Findex.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fxdoc%2Findex.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -23,7 +23,7 @@ under the License.\n \n   <properties>\n     <title>Apache Syncope</title>\n-    <author email=\"syncope-dev@incubator.apache.org\">Apache Syncope Documentation Team</author>\n+    <author email=\"dev@syncope.apache.org\">Apache Syncope Documentation Team</author>\n   </properties>\n \n   <body>\n@@ -48,23 +48,5 @@ under the License.\n         <i>Who has access to What, When, How, and Why?</i>\n       </p>\n     </div>\n-\n-    <div class=\"alert-message warning\">\n-      <section name=\"Disclaimer\">\n-        <p>Apache Syncope is an effort undergoing\n-          <a href=\"http://incubator.apache.org/\">incubation</a>\n-          at\n-          The Apache Software Foundation (ASF), sponsored by the Apache Incubator PMC. Incubation is required of all newly\n-          accepted projects until a further review indicates that the infrastructure, communications, and decision making\n-          process have stabilized in a manner consistent with other successful ASF projects.\n-          While incubation status is not necessarily a reflection of the completeness or stability of the code,\n-          it does indicate that the project has yet to be fully endorsed by the ASF.\n-        </p>\n-        <p>You can view our current\n-          <a href=\"http://incubator.apache.org/projects/syncope.html\">incubation status</a>\n-          for more details.\n-        </p>\n-      </section>\n-    </div>\n   </body>\n-</document>\n\\ No newline at end of file\n+</document>"},{"sha":"28664e236faa51b322576ffa2a9fc51e59094ba1","filename":"src/site/xdoc/professional-services.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Fprofessional-services.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Fprofessional-services.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fxdoc%2Fprofessional-services.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -23,7 +23,7 @@ under the License.\n \n   <properties>\n     <title>Professional Services</title>\n-    <author email=\"syncope-dev@incubator.apache.org\">Apache Syncope Documentation Team</author>\n+    <author email=\"dev@syncope.apache.org\">Apache Syncope Documentation Team</author>\n   </properties>\n \n   <body>    "},{"sha":"519eacd5727294092509ec354fd6c1d60e418622","filename":"src/site/xdoc/release-process.xml","status":"modified","additions":32,"deletions":114,"changes":146,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Frelease-process.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca59ef9e22435709703cf34c2f678abd8affa522/src%2Fsite%2Fxdoc%2Frelease-process.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fxdoc%2Frelease-process.xml?ref=ca59ef9e22435709703cf34c2f678abd8affa522","patch":"@@ -23,7 +23,7 @@ under the License.\n \n   <properties>\n     <title>Release Process</title>\n-    <author email=\"syncope-dev@incubator.apache.org\">Apache Syncope Documentation Team</author>\n+    <author email=\"dev@syncope.apache.org\">Apache Syncope Documentation Team</author>\n   </properties>\n \n   <body>\n@@ -119,10 +119,10 @@ under the License.\n             from JIRA.\n           </li>\n           <li>\n-            Update the \n-            <a href=\"downloads.html\">downloads</a> site page by adding the new release artifacts with base \n-            URL <source>http://www.apache.org/dyn/closer.cgi/incubator/syncope/&lt;version&gt;/</source>\n-            and by moving current release artifacts to 'Older Releases' section, also changing base URL to <source>http://archive.apache.org/dist/incubator/syncope/</source>\n+            Update the <a href=\"downloads.html\">downloads</a> site page by adding the new release artifacts with base \n+            URL <source>http://www.apache.org/dyn/closer.cgi/syncope/&lt;version&gt;/</source>\n+            and by moving current release artifacts to 'Older Releases' section, also changing base URL to \n+            <source>http://archive.apache.org/dist/syncope/</source>\n           </li>\n           <li>\n             Commit any changes back to svn:\n@@ -153,7 +153,7 @@ under the License.\n           </li>\n           <li>\n             Checkout a clean copy of the trunk/branch to release using command line svn:\n-            <source>svn checkout https://svn.apache.org/repos/asf/incubator/syncope/trunk/ release</source>\n+            <source>svn checkout https://svn.apache.org/repos/asf/syncope/trunk/ release</source>\n           </li>\n         </ol>\n       </subsection>\n@@ -236,8 +236,8 @@ cd &lt;version&gt;</source>\n         <ol>\n           <li>\n             This step will create the staging site\n-            <source>svn checkout https://svn.apache.org/repos/asf/incubator/syncope/site/ site\n-svn checkout https://svn.apache.org/repos/asf/incubator/syncope/tags/syncope-&lt;version&gt; syncope-&lt;version&gt;\n+            <source>svn checkout https://svn.apache.org/repos/asf/syncope/site/ site\n+svn checkout https://svn.apache.org/repos/asf/syncope/tags/syncope-&lt;version&gt; syncope-&lt;version&gt;\n cd syncope-&lt;version&gt;\n mvn clean install\n mvn -P site -Dsite.deploymentBaseUrl=file:///&lt;absolute path to ../site/&lt;version&gt;&gt;\n@@ -313,17 +313,17 @@ svn commit -m \"staging site for release\"</source>\n           <li>\n             Create a \n             <code>VOTE</code> email thread on \n-            <a href=\"mailto:syncope-dev@incubator.apache.org\">syncope-dev</a> to record votes as replies, e.g.:\n-            <pre>To: syncope-dev@incubator.apache.org\n+            <a href=\"mailto:dev@syncope.apache.org\">syncope-dev</a> to record votes as replies, e.g.:\n+            <pre>To: dev@syncope.apache.org\n Subject: [VOTE] Apache Syncope &lt;version&gt;\n \n I've created a &lt;version&gt; release, with the following artifacts up for a vote:\n \n SVN source tag (r9999999):\n-https://svn.apache.org/repos/asf/incubator/syncope/tags/&lt;version&gt;/\n+https://svn.apache.org/repos/asf/syncope/tags/&lt;version&gt;/\n \n List of changes:\n-https://svn.apache.org/repos/asf/incubator/syncope/tags/&lt;version&gt;/CHANGES\n+https://svn.apache.org/repos/asf/syncope/tags/&lt;version&gt;/CHANGES\n \n Maven staging repo:\n https://repository.apache.org/content/repositories/orgapachesyncope-YYY/\n@@ -332,10 +332,10 @@ Source release (checksums and signatures are available at the same location):\n https://repository.apache.org/content/repositories/orgapachesyncope-YYY/org/apache/syncope/syncope/&lt;version&gt;/syncope-&lt;version&gt;-source-release.zip\n \n Staging site:\n-http://incubator.apache.org/syncope/&lt;version&gt;/\n+http://syncope.apache.org/&lt;version&gt;/\n \n PGP release keys (signed using ABCDEFG):\n-http://www.apache.org/dist/incubator/syncope/KEYS\n+http://www.apache.org/dist/syncope/KEYS\n \n Vote will be open for 72 hours.\n \n@@ -344,9 +344,9 @@ Vote will be open for 72 hours.\n [ ] -1  disapprove (and reason why)</pre>\n           </li>\n           <li>\n-            Create a <code>DISCUSS</code> email thread on <a href=\"mailto:syncope-dev@incubator.apache.org\">syncope-dev</a> for any vote questions, e.g.:\n+            Create a <code>DISCUSS</code> email thread on <a href=\"mailto:dev@syncope.apache.org\">syncope-dev</a> for any vote questions, e.g.:\n             <pre>\n-To: syncope-dev@incubator.apache.org\n+To: dev@syncope.apache.org\n Subject: [DISCUSS] Apache Syncope &lt;version&gt;\n \n Discussion thread for vote on &lt;version&gt; release, with SVN source tag (r9999999).\n@@ -358,7 +358,7 @@ Some of the things to check before voting are:\n  - can you build the contents of source release zip and SVN tag\n  - do all of the staged jars/wars/zips contain the required LICENSE and NOTICE files\n  - are all of the staged jars/wars/zips signed and the signature verifiable\n- - is the signing key in the project's KEYS file and on a public server (i.e. http://www.apache.org/dist/incubator/syncope/)\n+ - is the signing key in the project's KEYS file and on a public server (i.e. http://www.apache.org/dist/syncope/)\n             </pre>\n           </li>\n           <li>\n@@ -369,94 +369,16 @@ Some of the things to check before voting are:\n             however it is usually a good idea to rollback the release if a -1 vote is\n             received (see <a href=\"#Recovering_from_a_vetoed_release\">&quot;Recovering from a vetoed release&quot;</a>).\n           </li>\n-          <!-- <incubator-specific> -->\n           <li>After the vote has been open for at least 72 hours, has at least three\n             +1 PMC votes and no -1 votes, then post the results to the vote thread:\n-            <pre>To: syncope-dev@incubator.apache.org\n+            <pre>To: dev@syncope.apache.org\n Subject: [RESULT] [VOTE] Apache Syncope &lt;version&gt;\n \n Hi all,\n after 72 hours, the vote for Syncope &lt;version&gt; [1] *passes*\n-with ... PPMC + ... non-PPMC votes.\n+with ... PMC + ... non-PMC votes.\n \n-+1 (PPMC / binding)\n-* ...\n-\n-+1 (non binding)\n- * ... (or &lt;none&gt;)\n-\n-0\n- * ... (or &lt;none&gt;)\n-\n--1\n- * ... (or &lt;none&gt;)\n-\n-Thanks to everyone participating.\n-\n-I will now submit the release for voting on the general@incubator.apache.org\n-\n-Best regards.\n-\n-[1] &lt;link to syncope-dev ML archives for the related [VOTE] thread&gt;</pre>\n-          </li>\n-          <li>Once the vote has been approved on <a href=\"mailto:syncope-dev@incubator.apache.org\">syncope-dev</a>, \n-          then the release process should be performed again on \n-          <a href=\"mailto:general@incubator.apache.org\">general@incubator</a> ML.\n-          <pre>To: general@incubator.apache.org\n-Subject: [VOTE] Apache Syncope &lt;version&gt;\n-            \n-I've created a &lt;version&gt; release, with the following artifacts up for a vote:\n-\n-SVN source tag (r9999999):\n-https://svn.apache.org/repos/asf/incubator/syncope/tags/&lt;version&gt;/\n-\n-List of changes:\n-https://svn.apache.org/repos/asf/incubator/syncope/tags/&lt;version&gt;/CHANGES\n-\n-Maven staging repo:\n-https://repository.apache.org/content/repositories/orgapachesyncope-YYY/\n-\n-Source release (checksums and signatures are available at the same location):\n-https://repository.apache.org/content/repositories/orgapachesyncope-YYY/org/apache/syncope/syncope/&lt;version&gt;/syncope-&lt;version&gt;-source-release.zip\n-\n-Staging site:\n-http://incubator.apache.org/syncope/&lt;version&gt;/\n-\n-PGP release keys (signed using ABCDEFG):\n-http://www.apache.org/dist/incubator/syncope/KEYS\n-\n-This has been voted through on the syncope-dev@incubator.apache.org mailing list [1], \n-and now requires a vote on general@incubator.apache.org\n-\n-Votes already cast (on syncope-dev):\n-\n-+1 (binding)\n-* ...\n-\n-+1 (non binding)\n- * ... (or &lt;none&gt;)\n-\n-\n-Vote will be open for 72 hours.\n-\n-[ ] +1  approve\n-[ ] +0  no opinion\n-[ ] -1  disapprove (and reason why)\n-\n-Best regards.\n-\n-[1] &lt;link to syncope-dev ML archives for the related [RESULT] [VOTE] thread&gt;</pre>\n-          </li>\n-          <li>Once the incubator vote has completed, post the results to the \n-          <a href=\"mailto:general@incubator.apache.org\">general@incubator</a> ML:\n-          <pre>To: general@incubator.apache.org\n-Subject: [RESULT] [VOTE] Apache Syncope &lt;version&gt;\n-\n-Hi all,\n-after 72 hours, the vote for Syncope &lt;version&gt; [1] *passes*\n-with ... IPMC + ... non-IPMC votes.\n-\n-+1 (IPMC / binding)\n++1 (PMC / binding)\n * ...\n \n +1 (non binding)\n@@ -474,9 +396,8 @@ I will now copy this release to Syncope' dist directory and promote the artifact\n \n Best regards.\n \n-[1] &lt;link to general incubator ML archives for the related [VOTE] thread&gt;</pre>\n+[1] &lt;link to syncope-dev ML archives for the related [VOTE] thread&gt;</pre>\n           </li>\n-          <!-- </incubator-specific> -->\n         </ol>\n       </subsection>\n       \n@@ -501,19 +422,16 @@ Best regards.\n           </li>\n           <li>\n             Add the distribution artifacts to the distribution area\n-<source>ssh people.apache.org\n-cd /x1/www/www.apache.org/dist/incubator/syncope/\n+<source>\n+svn co https://dist.apache.org/repos/dist/release/syncope syncope-dist\n+cd syncope-dist\n wget -e robots=off -nH --cut-dirs=7 -np --no-check-certificate -m -A *.zip*  -R .asc.sha1,.asc.md5 \\\n https://repository.apache.org/content/repositories/releases/org/apache/syncope/syncope/&lt;version&gt;/\n-chgrp -R incubator &lt;version&gt;\n-chmod 775 &lt;version&gt;\n-chmod 664 &lt;version&gt;/*\n+svn add &lt;version&gt;\n+svn rm &lt;any older release artifact (if present)&gt;\n+svn commit -m \"Promoting the voted release artifacts and cleaning up older releases\"\n </source>\n           </li>\n-          <li>\n-            Remove older distribution artifacts (if present) from the distribution area (i.e. \n-            <tt>people.apache.org:/x1/www/www.apache.org/dist/incubator/syncope/</tt>).\n-          </li>\n           <li>\n             Add appropriate release notes to\n             <a href=\"https://cwiki.apache.org/confluence/display/SYNCOPE/Releases\">Releases</a>\n@@ -531,7 +449,7 @@ chmod 664 &lt;version&gt;/*\n           <li>\n             Promote the staging site\n             <source>\n-svn co https://svn.apache.org/repos/asf/incubator/syncope/site/\n+svn co https://svn.apache.org/repos/asf/syncope/site/\n cd site\n svn rm *.html apidocs css images js\n svn mv &lt;version&gt;/* .\n@@ -543,8 +461,8 @@ svn commit -m \"Promoting the staging site\"</source>\n       \n       <subsection name=\"Announce the release\">\n         After the mirrors have had time to update (24 hours to be on the safe side), make an announcement about the release on the\n-        <a href=\"mailto:syncope-user@incubator.apache.org\">syncope-user</a>,\n-        <a href=\"mailto:syncope-dev@incubator.apache.org\">syncope-dev</a>, and\n+        <a href=\"mailto:user@syncope.apache.org\">user</a>,\n+        <a href=\"mailto:dev@syncope.apache.org\">dev</a>, and\n         <a href=\"mailto:announce@apache.org\">announce@apache.org</a> lists as per\n         <a href=\"http://www.apache.org/foundation/mailinglists.html#foundation-announce\">the Apache Announcement Mailing Lists page</a>\n       </subsection>\n@@ -576,12 +494,12 @@ svn commit -m \"Promoting the staging site\"</source>\n           <p>Delete the svn tag created by the \n             <code>release:perform</code> step:\n           </p>\n-          <source>svn rm https://svn.apache.org/repos/asf/incubator/syncope/tags/&lt;version&gt; -m \"deleting tag from rolled back release\"</source>\n+          <source>svn rm https://svn.apache.org/repos/asf/syncope/tags/&lt;version&gt; -m \"deleting tag from rolled back release\"</source>\n         </li>\n         <li>\n           <p>Delete the staging site:\n           </p>\n-          <source>svn rm https://svn.apache.org/repos/asf/incubator/syncope/site/&lt;version&gt; -m \"deleting staging site from rolled back release\"</source>\n+          <source>svn rm https://svn.apache.org/repos/asf/syncope/site/&lt;version&gt; -m \"deleting staging site from rolled back release\"</source>\n         </li>\n         <li>\n           <p>Drop the nexus staging repo:</p>"}]}