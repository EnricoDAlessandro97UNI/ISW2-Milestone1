{"sha":"d52636ba8e64426a32e23a88d2072c29e4ec1307","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ1MjYzNmJhOGU2NDQyNmEzMmUyM2E4OGQyMDcyYzI5ZTRlYzEzMDc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-15T14:01:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-15T14:01:11Z"},"message":"[SYNCOPE-1282] Fixing size calculation in for PLAIN schemas (excluding conf)","tree":{"sha":"fa5448a532ff12bc2212b5b00850b4a4fae9cbe7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fa5448a532ff12bc2212b5b00850b4a4fae9cbe7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d52636ba8e64426a32e23a88d2072c29e4ec1307","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d52636ba8e64426a32e23a88d2072c29e4ec1307","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d52636ba8e64426a32e23a88d2072c29e4ec1307","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d52636ba8e64426a32e23a88d2072c29e4ec1307/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"425f9b9ed1a26fa016d8799ccb611c24cf25a04a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/425f9b9ed1a26fa016d8799ccb611c24cf25a04a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/425f9b9ed1a26fa016d8799ccb611c24cf25a04a"}],"stats":{"total":30,"additions":14,"deletions":16},"files":[{"sha":"6e8ec7670f1409af37d2c91e64385029a4261a9d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":14,"deletions":16,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d52636ba8e64426a32e23a88d2072c29e4ec1307/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d52636ba8e64426a32e23a88d2072c29e4ec1307/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=d52636ba8e64426a32e23a88d2072c29e4ec1307","patch":"@@ -251,32 +251,30 @@ private SchemaProvider(final int paginatorRows, final SchemaType schemaType) {\n             comparator = new SortableDataProviderComparator<>(this);\n         }\n \n-        @Override\n-        public Iterator<SchemaTO> iterator(final long first, final long count) {\n+        private List<SchemaTO> getSchemas() {\n             List<SchemaTO> schemas = restClient.getSchemas(this.schemaType, keyword);\n-            Collections.sort(schemas, comparator);\n \n             if (SchemaType.PLAIN == this.schemaType) {\n-                final List<String> configurations = confRestClient.list().stream().\n+                List<String> configurations = confRestClient.list().stream().\n                         map(AttrTO::getSchema).collect(Collectors.toList());\n \n-                final List<SchemaTO> res = schemas.stream().\n-                        filter(item -> !configurations.contains(item.getKey())).\n-                        collect(Collectors.toList());\n-                return res.subList((int) first, (int) first + (int) count).iterator();\n-            } else {\n-                return schemas.subList((int) first, (int) first + (int) count).iterator();\n+                schemas.removeIf(schema -> configurations.contains(schema.getKey()));\n             }\n+\n+            return schemas;\n+        }\n+\n+        @Override\n+        public Iterator<SchemaTO> iterator(final long first, final long count) {\n+            List<SchemaTO> schemas = getSchemas();\n+            Collections.sort(schemas, comparator);\n+\n+            return schemas.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override\n         public long size() {\n-            int size = restClient.getSchemas(this.schemaType, keyword).size();\n-            return size > confRestClient.list().size()\n-                    ? (SchemaType.PLAIN == this.schemaType\n-                            ? size - confRestClient.list().size()\n-                            : size)\n-                    : size;\n+            return getSchemas().size();\n         }\n \n         @Override"}]}