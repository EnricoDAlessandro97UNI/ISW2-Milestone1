{"sha":"348f150640e49bec33165e3cd214a1297b783780","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM0OGYxNTA2NDBlNDliZWMzMzE2NWUzY2QyMTRhMTI5N2I3ODM3ODA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-31T14:21:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-31T14:24:19Z"},"message":"Clarifying about default account and password rules with Syncope 2.1 and later","tree":{"sha":"4dfcebbd049953428ee5abfa3b9521918cea03a5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4dfcebbd049953428ee5abfa3b9521918cea03a5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/348f150640e49bec33165e3cd214a1297b783780","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/348f150640e49bec33165e3cd214a1297b783780","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/348f150640e49bec33165e3cd214a1297b783780","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/348f150640e49bec33165e3cd214a1297b783780/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0de2236d6177e17ca778d2ed34246a85310e9bb4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0de2236d6177e17ca778d2ed34246a85310e9bb4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0de2236d6177e17ca778d2ed34246a85310e9bb4"}],"stats":{"total":115,"additions":75,"deletions":40},"files":[{"sha":"9909fcb626f95f5cb36536a732a0aa866972ffa1","filename":"src/main/asciidoc/reference-guide/concepts/policies.adoc","status":"modified","additions":72,"deletions":37,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/348f150640e49bec33165e3cd214a1297b783780/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/348f150640e49bec33165e3cd214a1297b783780/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc?ref=348f150640e49bec33165e3cd214a1297b783780","patch":"@@ -58,6 +58,46 @@ suspended on associated resources or not?\n \n Account rules define constraints to apply to username values.\n \n+Some implementations are provided out-of-the-box, custom ones can be provided on given deployment.\n+\n+[TIP]\n+====\n+As `JAVA` <<implementations,implementation>>, writing custom account rules means:\n+\n+. providing configuration parameters in an implementation of\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/lib/src/main/java/org/apache/syncope/common/lib/policy/AccountRuleConf.java[AccountRuleConf^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/common/lib/src/main/java/org/apache/syncope/common/lib/policy/AccountRuleConf.java[AccountRuleConf^]\n+endif::[]\n+. enforcing in an implementation of\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java[AccountRule^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java[AccountRule^]\n+endif::[]\n+annotated via\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRuleConfClass.java[@AccountRuleConfClass^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRuleConfClass.java[@AccountRuleConfClass^]\n+endif::[]\n+referring to the configuration class.\n+\n+As `GROOVY` <<implementations,implementation>>, writing custom account rules means implementing\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java[AccountRule^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java[AccountRule^]\n+endif::[]\n+====\n+\n+====== Default Account Rule\n+\n The default account rule (enforced by\n ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/DefaultAccountRule.java[DefaultAccountRule^]\n@@ -76,7 +116,7 @@ endif::[]\n \n * maximum length - the maximum length to allow; `0` means no limit set;\n * minimum length - the minimum length to allow; `0` means no limit set;\n-* pattern - http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html[Java regular expression pattern^] to\n+* pattern - http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html[Java regular expression pattern^] to\n match; `NULL` means no match is attempted;\n * all uppercase - are lowercase characters allowed?\n * all lowercase - are uppercase characters allowed?\n@@ -85,33 +125,10 @@ match; `NULL` means no match is attempted;\n * prefixes not permitted - list of strings that cannot be present as a prefix;\n * suffixes not permitted - list of strings that cannot be present as a suffix.\n \n-[TIP]\n-====\n-Writing custom account rules means:\n-\n-. providing configuration parameters in an implementation of\n-ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n-https://github.com/apache/syncope/blob/syncope-{docVersion}/common/lib/src/main/java/org/apache/syncope/common/lib/policy/AccountRuleConf.java[AccountRuleConf^]\n-endif::[]\n-ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n-https://github.com/apache/syncope/blob/master/common/lib/src/main/java/org/apache/syncope/common/lib/policy/AccountRuleConf.java[AccountRuleConf^]\n-endif::[]\n-. implementing enforcement in an implementation of\n-ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n-https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java[AccountRule^]\n-endif::[]\n-ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n-https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java[AccountRule^]\n-endif::[]\n-annotated via\n-ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n-https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRuleConfClass.java[@AccountRuleConfClass^]\n-endif::[]\n-ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n-https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRuleConfClass.java[@AccountRuleConfClass^]\n-endif::[]\n-referring to the configuration class\n-====\n+[NOTE]\n+Before being able to configure the default account rule as mentioned above, you will need to first create a `JAVA`\n+`ACCOUNT_RULE` <<implementations,implementation>> for the `org.apache.syncope.common.lib.policy.DefaultAccountRuleConf`\n+class.\n \n ===== Pass-through Authentication\n \n@@ -149,30 +166,38 @@ Some implementations are provided out-of-the-box, custom ones can be provided on\n \n [TIP]\n ====\n-Writing custom account rules means:\n+As `JAVA` <<implementations,implementation>>, writing custom password rules means:\n \n . providing configuration parameters in an implementation of\n ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n-https://github.com/apache/syncope/blob/syncope-{docVersion}/common/lib/src/main/java/org/apache/syncope/common/lib/policy/AccountRuleConf.java[AccountRuleConf^]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/lib/src/main/java/org/apache/syncope/common/lib/policy/PasswordRuleConf.java[PasswordRuleConf^]\n endif::[]\n ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n-https://github.com/apache/syncope/blob/master/common/lib/src/main/java/org/apache/syncope/common/lib/policy/AccountRuleConf.java[AccountRuleConf^]\n+https://github.com/apache/syncope/blob/master/common/lib/src/main/java/org/apache/syncope/common/lib/policy/PasswordRuleConf.java[PasswordRuleConf^]\n endif::[]\n-. implementing enforcement in an implementation of\n+. enforcing in an implementation of\n ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n-https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java[AccountRule^]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRule.java[PasswordRule^]\n endif::[]\n ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n-https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java[AccountRule^]\n+https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRule.java[PasswordRule^]\n endif::[]\n annotated via\n ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n-https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRuleConfClass.java[@AccountRuleConfClass^]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRuleConfClass.java[@PasswordRuleConfClass^]\n endif::[]\n ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n-https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRuleConfClass.java[@AccountRuleConfClass^]\n+https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRuleConfClass.java[@PasswordRuleConfClass^]\n+endif::[]\n+referring to the configuration class.\n+\n+As `GROOVY` <<implementations,implementation>>, writing custom account rules means implementing\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRule.java[PasswordRule^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRule.java[PasswordRule^]\n endif::[]\n-referring to the configuration class\n ====\n \n ====== Default Password Rule\n@@ -218,6 +243,11 @@ endif::[]\n * prefixes not permitted - list of strings that cannot be present as a prefix;\n * suffixes not permitted - list of strings that cannot be present as a suffix.\n \n+[NOTE]\n+Before being able to configure the default password rule as mentioned above, you will need to first create a `JAVA`\n+`PASSWORD_RULE` <<implementations,implementation>> for the `org.apache.syncope.common.lib.policy.DefaultPasswordRuleConf`\n+class.\n+\n ====== \"Have I Been Pwned?\" Password Rule\n \n This password rule (enforced by\n@@ -237,6 +267,11 @@ endif::[]\n ) checks the provided password values against the popular\n https://haveibeenpwned.com[\"Have I Been Pwned?\"^] service.\n \n+[NOTE]\n+Before being able to configure the \"Have I Been Pwned?\" password rule as mentioned above, you will need to first create\n+a `JAVA` `PASSWORD_RULE` <<implementations,implementation>> for the\n+`org.apache.syncope.common.lib.policy.HaveIBeenPwnedPasswordRuleConf` class.\n+\n [[policies-pull]]\n ==== Pull\n "},{"sha":"ea7f6d617fff55b3569cc6230e5c0da5ed47ce13","filename":"src/main/asciidoc/reference-guide/concepts/typemanagement.adoc","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/348f150640e49bec33165e3cd214a1297b783780/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftypemanagement.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/348f150640e49bec33165e3cd214a1297b783780/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftypemanagement.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Ftypemanagement.adoc?ref=348f150640e49bec33165e3cd214a1297b783780","patch":"@@ -36,12 +36,12 @@ When defining a plain schema, the following information must be provided:\n * Type\n ** `String`\n ** `Long` - allows to specify a _conversion pattern_ to / from string, according to \n-http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html[DecimalFormat^]\n+http://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html[DecimalFormat^]\n ** `Double` - allows to specify a _conversion pattern_ to / from string, according to \n-http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html[DecimalFormat^]\n+http://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html[DecimalFormat^]\n ** `Boolean`\n ** `Date` - allows to specify a _conversion pattern_ to / from string, according to \n-http://docs.oracle.com/javase/7/docs/api/java/text/DateFormat.html[DateFormat^]\n+http://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html[DateFormat^]\n ** `Enum`\n *** enumeration values (mandatory)\n *** enumeration labels (optional, values will be used alternatively)"}]}