{"sha":"95108aaa8c89c4bb27977d01426ec4f513c1bf4d","node_id":"C_kwDOJfYA1toAKDk1MTA4YWFhOGM4OWM0YmIyNzk3N2QwMTQyNmVjNGY1MTNjMWJmNGQ","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-04-24T06:31:32Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-04-24T06:40:50Z"},"message":"Moving CXF JAX-RS container conf from implicit to explicit, to allow REST service impl override","tree":{"sha":"9881b0db1375056905d0c92b81ec9a15dc0a870c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9881b0db1375056905d0c92b81ec9a15dc0a870c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/95108aaa8c89c4bb27977d01426ec4f513c1bf4d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/95108aaa8c89c4bb27977d01426ec4f513c1bf4d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/95108aaa8c89c4bb27977d01426ec4f513c1bf4d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/95108aaa8c89c4bb27977d01426ec4f513c1bf4d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ff7aeb5a6c942c1ced41b3099d3dc490824990a2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ff7aeb5a6c942c1ced41b3099d3dc490824990a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ff7aeb5a6c942c1ced41b3099d3dc490824990a2"}],"stats":{"total":76,"additions":40,"deletions":36},"files":[{"sha":"f1d9eee9f9e524e5fcf8e2be0c08a00f191c86d1","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/IdRepoRESTCXFContext.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95108aaa8c89c4bb27977d01426ec4f513c1bf4d/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FIdRepoRESTCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95108aaa8c89c4bb27977d01426ec4f513c1bf4d/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FIdRepoRESTCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FIdRepoRESTCXFContext.java?ref=95108aaa8c89c4bb27977d01426ec4f513c1bf4d","patch":"@@ -29,6 +29,7 @@\n import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.stream.Collectors;\n import org.apache.cxf.Bus;\n import org.apache.cxf.endpoint.Server;\n import org.apache.cxf.jaxrs.ext.ContextProvider;\n@@ -61,6 +62,7 @@\n import org.apache.syncope.common.rest.api.service.FIQLQueryService;\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.syncope.common.rest.api.service.ImplementationService;\n+import org.apache.syncope.common.rest.api.service.JAXRSService;\n import org.apache.syncope.common.rest.api.service.MailTemplateService;\n import org.apache.syncope.common.rest.api.service.NotificationService;\n import org.apache.syncope.common.rest.api.service.PolicyService;\n@@ -312,6 +314,7 @@ public OpenApiFeature openapiFeature(final OpenApiCustomizer openApiCustomizer,\n     @ConditionalOnMissingBean\n     @Bean\n     public Server restContainer(\n+            final List<JAXRSService> services,\n             final AddETagFilter addETagFilter,\n             final AddDomainFilter addDomainFilter,\n             final ContextProvider<SearchContext> searchContextProvider,\n@@ -325,25 +328,24 @@ public Server restContainer(\n             final GZIPOutInterceptor gzipOutInterceptor,\n             final ThreadLocalCleanupOutInterceptor threadLocalCleanupOutInterceptor,\n             final OpenApiFeature openapiFeature,\n-            final Bus bus,\n-            final ApplicationContext ctx,\n             final CheckDomainFilter checkDomainFilter,\n-            final RestServiceExceptionMapper restServiceExceptionMapper) {\n+            final RestServiceExceptionMapper restServiceExceptionMapper,\n+            final Bus bus,\n+            final ApplicationContext ctx) {\n \n         SpringJAXRSServerFactoryBean restContainer = new SpringJAXRSServerFactoryBean();\n         restContainer.setBus(bus);\n         restContainer.setAddress(\"/\");\n         restContainer.setStaticSubresourceResolution(true);\n-        restContainer.setBasePackages(List.of(\n-                \"org.apache.syncope.common.rest.api.service\",\n-                \"org.apache.syncope.core.rest.cxf.service\"));\n \n         Map<String, Object> properties = new HashMap<>();\n         properties.put(SearchContextImpl.CUSTOM_SEARCH_PARSER_CLASS_PROPERTY, SyncopeFiqlParser.class.getName());\n         properties.put(SearchUtils.LAX_PROPERTY_MATCH, \"true\");\n         properties.put(\"convert.wadl.resources.to.dom\", \"false\");\n         restContainer.setProperties(properties);\n \n+        restContainer.setServiceBeans(services.stream().map(Object.class::cast).collect(Collectors.toList()));\n+\n         restContainer.setProviders(List.of(\n                 dateParamConverterProvider,\n                 jsonProvider,"},{"sha":"06fc6fd0cb7b286ff9918f9fbbef441de7a524c2","filename":"core/self-keymaster-starter/src/main/java/org/apache/syncope/core/starter/SelfKeymasterContext.java","status":"modified","additions":15,"deletions":13,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95108aaa8c89c4bb27977d01426ec4f513c1bf4d/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSelfKeymasterContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95108aaa8c89c4bb27977d01426ec4f513c1bf4d/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSelfKeymasterContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fself-keymaster-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSelfKeymasterContext.java?ref=95108aaa8c89c4bb27977d01426ec4f513c1bf4d","patch":"@@ -94,29 +94,31 @@ public ConditionOutcome getMatchOutcome(final ConditionContext context, final An\n     @Conditional(SelfKeymasterCondition.class)\n     @Bean\n     public Server selfKeymasterContainer(\n+            final ConfParamService confParamService,\n+            final NetworkServiceService networkServiceService,\n+            final DomainService domainService,\n             final JacksonJsonProvider jsonProvider,\n-            final ApplicationContext ctx,\n-            final Bus bus) {\n+            final GZIPInInterceptor gzipInInterceptor,\n+            final GZIPOutInterceptor gzipOutInterceptor,\n+            final JAXRSBeanValidationInInterceptor validationInInterceptor,\n+            final RestServiceExceptionMapper restServiceExceptionMapper,\n+            final Bus bus,\n+            final ApplicationContext ctx) {\n \n         SpringJAXRSServerFactoryBean selfKeymasterContainer = new SpringJAXRSServerFactoryBean();\n         selfKeymasterContainer.setBus(bus);\n         selfKeymasterContainer.setAddress(\"/keymaster\");\n         selfKeymasterContainer.setStaticSubresourceResolution(true);\n-        selfKeymasterContainer.setBasePackages(List.of(\n-                \"org.apache.syncope.common.keymaster.rest.api.service\",\n-                \"org.apache.syncope.core.keymaster.rest.cxf.service\"));\n+\n         selfKeymasterContainer.setProperties(Map.of(\"convert.wadl.resources.to.dom\", \"false\"));\n \n-        selfKeymasterContainer.setInInterceptors(List.of(\n-                ctx.getBean(GZIPInInterceptor.class),\n-                ctx.getBean(JAXRSBeanValidationInInterceptor.class)));\n+        selfKeymasterContainer.setServiceBeans(List.of(confParamService, networkServiceService, domainService));\n+\n+        selfKeymasterContainer.setInInterceptors(List.of(gzipInInterceptor, validationInInterceptor));\n \n-        selfKeymasterContainer.setOutInterceptors(List.of(\n-                ctx.getBean(GZIPOutInterceptor.class)));\n+        selfKeymasterContainer.setOutInterceptors(List.of(gzipOutInterceptor));\n \n-        selfKeymasterContainer.setProviders(List.of(\n-                ctx.getBean(RestServiceExceptionMapper.class),\n-                jsonProvider));\n+        selfKeymasterContainer.setProviders(List.of(restServiceExceptionMapper, jsonProvider));\n \n         selfKeymasterContainer.setApplicationContext(ctx);\n         return selfKeymasterContainer.create();"},{"sha":"e74064f6e47bda806e5b4befe5b3873afd89129d","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/SCIMv2RESTCXFContext.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95108aaa8c89c4bb27977d01426ec4f513c1bf4d/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FSCIMv2RESTCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95108aaa8c89c4bb27977d01426ec4f513c1bf4d/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FSCIMv2RESTCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FSCIMv2RESTCXFContext.java?ref=95108aaa8c89c4bb27977d01426ec4f513c1bf4d","patch":"@@ -72,32 +72,32 @@ public AddETagFilter scimAddETagFilter() {\n     @ConditionalOnMissingBean(name = \"scimv2Container\")\n     @Bean\n     public Server scimv2Container(\n-            final ApplicationContext ctx,\n-            final Bus bus,\n+            final SCIMService scimService,\n+            final SCIMGroupService scimv2GroupService,\n+            final SCIMUserService scimv2UserService,\n+            final GZIPInInterceptor gzipInInterceptor,\n+            final GZIPOutInterceptor gzipOutInterceptor,\n+            final JAXRSBeanValidationInInterceptor validationInInterceptor,\n             final JacksonJsonProvider scimJacksonJsonProvider,\n             final SCIMExceptionMapper scimExceptionMapper,\n-            final AddETagFilter scimAddETagFilter) {\n+            final AddETagFilter scimAddETagFilter,\n+            final Bus bus,\n+            final ApplicationContext ctx) {\n \n         SpringJAXRSServerFactoryBean scimv2Container = new SpringJAXRSServerFactoryBean();\n         scimv2Container.setBus(bus);\n         scimv2Container.setAddress(\"/scim\");\n         scimv2Container.setStaticSubresourceResolution(true);\n-        scimv2Container.setBasePackages(List.of(\n-                \"org.apache.syncope.ext.scimv2.api.service\",\n-                \"org.apache.syncope.ext.scimv2.cxf.service\"));\n+\n         scimv2Container.setProperties(Map.of(\"convert.wadl.resources.to.dom\", \"false\"));\n \n-        scimv2Container.setInInterceptors(List.of(\n-                ctx.getBean(GZIPInInterceptor.class),\n-                ctx.getBean(JAXRSBeanValidationInInterceptor.class)));\n+        scimv2Container.setServiceBeans(List.of(scimService, scimv2GroupService, scimv2UserService));\n+\n+        scimv2Container.setInInterceptors(List.of(gzipInInterceptor, validationInInterceptor));\n \n-        scimv2Container.setOutInterceptors(List.of(\n-                ctx.getBean(GZIPOutInterceptor.class)));\n+        scimv2Container.setOutInterceptors(List.of(gzipOutInterceptor));\n \n-        scimv2Container.setProviders(List.of(\n-                scimJacksonJsonProvider,\n-                scimExceptionMapper,\n-                scimAddETagFilter));\n+        scimv2Container.setProviders(List.of(scimJacksonJsonProvider, scimExceptionMapper, scimAddETagFilter));\n \n         scimv2Container.setApplicationContext(ctx);\n         return scimv2Container.create();"},{"sha":"ec9c0671d34f89d68f257fc2876d6ceebf1784a0","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/SyncopeBuildToolsApplication.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95108aaa8c89c4bb27977d01426ec4f513c1bf4d/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95108aaa8c89c4bb27977d01426ec4f513c1bf4d/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java?ref=95108aaa8c89c4bb27977d01426ec4f513c1bf4d","patch":"@@ -102,8 +102,8 @@ public UserService userService() {\n     public Server restProvisioning(\n             final GreenMailService greenMailService,\n             final UserService userService,\n-            final ApplicationContext ctx,\n-            final Bus bus) {\n+            final Bus bus,\n+            final ApplicationContext ctx) {\n \n         SpringJAXRSServerFactoryBean restProvisioning = new SpringJAXRSServerFactoryBean();\n         restProvisioning.setApplicationContext(ctx);"}]}