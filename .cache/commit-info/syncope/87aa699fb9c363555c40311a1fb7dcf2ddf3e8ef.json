{"sha":"87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg3YWE2OTlmYjljMzYzNTU1YzQwMzExYTFmYjdkY2YyZGRmM2U4ZWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-22T15:54:16Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-22T15:54:16Z"},"message":"Speeding up console IT execution","tree":{"sha":"8f4fa3c9c5cf9a8ad96a15c80851f1079ee80ce9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8f4fa3c9c5cf9a8ad96a15c80851f1079ee80ce9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0e6481eb03c0e1480768d6127a102deb73b30f10","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e6481eb03c0e1480768d6127a102deb73b30f10","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0e6481eb03c0e1480768d6127a102deb73b30f10"}],"stats":{"total":1972,"additions":973,"deletions":999},"files":[{"sha":"97df15e18f2f41c3c73d9f84397ce4be498f56b2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":31,"deletions":36,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -20,7 +20,6 @@\n \n import java.io.Serializable;\n import java.lang.reflect.Method;\n-import java.util.List;\n import javax.servlet.ServletContext;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n@@ -38,45 +37,45 @@\n import org.apache.wicket.util.tester.WicketTester;\n import org.apache.wicket.util.visit.IVisit;\n import org.apache.wicket.util.visit.IVisitor;\n-import org.junit.Before;\n+import org.junit.BeforeClass;\n \n public abstract class AbstractConsoleITCase extends AbstractITCase {\n \n     protected static final String KEY = \"key\";\n \n     protected static final String SCHEMA = \"schema\";\n \n-    protected WicketTester wicketTester;\n+    protected static WicketTester TESTER;\n \n-    protected SyncopeConsoleApplication testApplicaton;\n+    @BeforeClass\n+    public static void setUp() {\n+        synchronized (KEY) {\n+            if (TESTER == null) {\n+                TESTER = new WicketTester(new SyncopeConsoleApplication() {\n \n-    @Before\n-    public void setUp() {\n-        testApplicaton = new SyncopeConsoleApplication() {\n-\n-            @Override\n-            protected void init() {\n-                final ServletContext ctx = getServletContext();\n-                final ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n-                lookup.load();\n-                ctx.setAttribute(ConsoleInitializer.CLASSPATH_LOOKUP, lookup);\n+                    @Override\n+                    protected void init() {\n+                        ServletContext ctx = getServletContext();\n+                        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+                        lookup.load();\n+                        ctx.setAttribute(ConsoleInitializer.CLASSPATH_LOOKUP, lookup);\n \n-                final MIMETypesLoader mimeTypes = new MIMETypesLoader();\n-                mimeTypes.load();\n-                ctx.setAttribute(ConsoleInitializer.MIMETYPES_LOADER, mimeTypes);\n+                        MIMETypesLoader mimeTypes = new MIMETypesLoader();\n+                        mimeTypes.load();\n+                        ctx.setAttribute(ConsoleInitializer.MIMETYPES_LOADER, mimeTypes);\n \n-                super.init();\n+                        super.init();\n+                    }\n+                });\n             }\n-        };\n-\n-        wicketTester = new WicketTester(testApplicaton);\n+        }\n     }\n \n     protected void doLogin(final String user, final String passwd) {\n-        wicketTester.startPage(Login.class);\n-        wicketTester.assertRenderedPage(Login.class);\n+        TESTER.startPage(Login.class);\n+        TESTER.assertRenderedPage(Login.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\"login\");\n+        FormTester formTester = TESTER.newFormTester(\"login\");\n         formTester.setValue(\"username\", user);\n         formTester.setValue(\"password\", passwd);\n         formTester.submit(\"submit\");\n@@ -85,10 +84,9 @@ protected void doLogin(final String user, final String passwd) {\n     protected <V extends Serializable> Component findComponentByProp(\n             final String property, final String searchPath, final V key) {\n \n-        final Component component = wicketTester.getComponentFromLastRenderedPage(searchPath);\n-\n-        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage())\n-                .visitChildren(ListItem.class, new IVisitor<ListItem<?>, Component>() {\n+        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n+        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n+                visitChildren(ListItem.class, new IVisitor<ListItem<?>, Component>() {\n \n                     @Override\n                     public void component(final ListItem<?> object, final IVisit<Component> visit) {\n@@ -105,11 +103,9 @@ public void component(final ListItem<?> object, final IVisit<Component> visit) {\n     }\n \n     protected Component findComponentById(final String searchPath, final String id) {\n-\n-        final Component component = wicketTester.getComponentFromLastRenderedPage(searchPath);\n-\n-        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage())\n-                .visitChildren(Component.class, new IVisitor<Component, Component>() {\n+        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n+        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n+                visitChildren(Component.class, new IVisitor<Component, Component>() {\n \n                     @Override\n                     public void component(final Component object, final IVisit<Component> visit) {\n@@ -121,10 +117,9 @@ public void component(final Component object, final IVisit<Component> visit) {\n     }\n \n     protected void closeCallBack(final Component modal) {\n-        final List<? extends Behavior> behaviors = modal.getBehaviors();\n-        for (Behavior behavior : behaviors) {\n+        for (Behavior behavior : modal.getBehaviors()) {\n             if (behavior instanceof AbstractAjaxBehavior) {\n-                wicketTester.executeBehavior((AbstractAjaxBehavior) behavior);\n+                TESTER.executeBehavior((AbstractAjaxBehavior) behavior);\n             }\n         }\n     }"},{"sha":"6a395ad80a416284b1aa019f8d0591128a96ed14","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractTypesITCase.java","status":"modified","additions":48,"deletions":47,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -28,7 +28,7 @@ public abstract class AbstractTypesITCase extends AbstractConsoleITCase {\n \n     protected static final String PLAIN_DATATABLE_PATH = \"body:content:tabbedPanel:panel:\"\n             + \"accordionPanel:tabs:0:body:content:container:content:searchContainer:resultTable\";\n-    \n+\n     protected static final String VIRTUAL_DATATABLE_PATH = \"body:content:tabbedPanel:panel:\"\n             + \"accordionPanel:tabs:2:body:content:container:content:searchContainer:resultTable\";\n \n@@ -41,124 +41,125 @@ public void login() {\n     }\n \n     protected void browsingToRelationshipType() {\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        wicketTester.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToAnyTypes() {\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        wicketTester.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToAnyTypeClasses() {\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        wicketTester.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToPlainSchemas() {\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n-        wicketTester.assertComponent(PLAIN_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.assertComponent(PLAIN_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n-    \n+\n     protected void browsingToVirtualSchemas() {\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n-        wicketTester.assertComponent(VIRTUAL_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.assertComponent(VIRTUAL_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void createPlainSchema(final String key) {\n         browsingToPlainSchemas();\n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:container:content:add\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        final FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:details:form:key:textField\", key);\n         formTester.setValue(\"content:details:form:type:dropDownChoiceField\", \"3\");\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:\"\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     protected void createAnyTypeClassWithoutSchema(final String name) {\n         browsingToAnyTypeClasses();\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeClassDetailsPanel:form:key:textField\", name);\n \n-        wicketTester.clickLink(\n+        TESTER.clearFeedbackMessages();\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.clearFeedbackMessages();\n+        TESTER.clearFeedbackMessages();\n     }\n \n     protected void createAnyType(final String name) {\n         browsingToAnyTypes();\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:key:textField\", name);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.clearFeedbackMessages();\n+        TESTER.clearFeedbackMessages();\n     }\n \n     protected void createRelationshipType(final String name) {\n         browsingToRelationshipType();\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:relationshipTypeDetails:container:form:key:textField\", name);\n         formTester.setValue(\n                 \"content:relationshipTypeDetails:container:form:description:textField\", \"test relationshipType\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.clearFeedbackMessages();\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.clearFeedbackMessages();\n+        TESTER.assertRenderedPage(Types.class);\n     }\n }"},{"sha":"828e40f20113d622b2d3f09ad55cf562ef0384a7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxPalettePanelITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -46,9 +46,9 @@ public void isRendered() {\n                 new TestPage.Builder<String, AjaxPalettePanel<String>>().build(\n                         new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\n                         TestPage.FIELD, SELECTED, ALL));\n-        wicketTester.startPage(testPage);\n+        TESTER.startPage(testPage);\n \n-        FormTester formTester = wicketTester.newFormTester(testPage.getForm().getId());\n+        FormTester formTester = TESTER.newFormTester(testPage.getForm().getId());\n         formTester.submit();\n \n         Collection<String> list = testPage.getFieldPanel().getModelCollection();"},{"sha":"7b56367c025e5ebec25305cef1059332db2dd028","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxTextFieldITCase.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -41,8 +41,8 @@ public void emptyInputConvertedToNull() {\n         TestPage<String, AjaxTextFieldPanel> testPage =\n                 new TestPage.Builder<String, AjaxTextFieldPanel>().build(\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, textModel));\n-        wicketTester.startPage(testPage);\n-        FormTester formTester = wicketTester.newFormTester(testPage.getForm().getId());\n+        TESTER.startPage(testPage);\n+        FormTester formTester = TESTER.newFormTester(testPage.getForm().getId());\n         formTester.setValue(\"field:textField\", \"\");\n         formTester.submit();\n         assertNull(testPage.getFieldPanel().getField().getDefaultModelObject());\n@@ -55,8 +55,8 @@ public void valueAttribute() {\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, textModel));\n         String text = \"sometext\";\n         textModel.setObject(text);\n-        wicketTester.startPage(testPage);\n-        assertTrue(wicketTester.getLastResponseAsString().contains(Strings.escapeMarkup(text)));\n+        TESTER.startPage(testPage);\n+        assertTrue(TESTER.getLastResponseAsString().contains(Strings.escapeMarkup(text)));\n     }\n \n     @Test\n@@ -66,8 +66,8 @@ public void nullIsNotValidated() {\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, textModel));\n         testPage.getFieldPanel().getField().setRequired(false);\n         testPage.getFieldPanel().getField().add(StringValidator.minimumLength(2));\n-        wicketTester.startPage(testPage);\n-        FormTester formTester = wicketTester.newFormTester(testPage.getForm().getId());\n+        TESTER.startPage(testPage);\n+        FormTester formTester = TESTER.newFormTester(testPage.getForm().getId());\n         formTester.setValue(\"field:textField\", \"\");\n         formTester.submit();\n         assertNull(testPage.getFieldPanel().getDefaultModelObject());\n@@ -81,9 +81,9 @@ public void requiredAttribute() {\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, textModel));\n         testPage.getFieldPanel().setOutputMarkupId(true);\n         testPage.getFieldPanel().getField().setRequired(true);\n-        wicketTester.startPage(testPage);\n-        wicketTester.assertLabel(\"form:field:field-label\", \"field\");\n-        wicketTester.assertVisible(\"form:field:required\");\n-        wicketTester.assertVisible(\"form:field:externalAction\");\n+        TESTER.startPage(testPage);\n+        TESTER.assertLabel(\"form:field:field-label\", \"field\");\n+        TESTER.assertVisible(\"form:field:required\");\n+        TESTER.assertVisible(\"form:field:externalAction\");\n     }\n }"},{"sha":"3b5d163cfef2386ea83224767ece733fd68284e7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyObjectsITCase.java","status":"modified","additions":25,"deletions":25,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -46,81 +46,81 @@ public void login() {\n \n     @Test\n     public void filteredSearch() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n+        TESTER.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n                 + \"searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:searchFormContainer:search:\"\n                 + \"multiValueContainer:innerForm:content:view:0:panel:container:value:textField\", TextField.class);\n     }\n \n     @Test\n     public void clickToClonePrinter() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n \n         Component component = findComponentByProp(\"key\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelClone:cloneLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelClone:cloneLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:cancel\");\n     }\n \n     @Test\n     public void editPrinter() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n \n         Component component = findComponentByProp(\"key\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:status:\"\n                 + \"resources:firstLevelContainer:first:container:content:group:beans:0:fields:0\", ListItem.class);\n \n-        FormTester formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.assertComponent(tabPanel\n+        TESTER.assertComponent(tabPanel\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", Label.class);\n \n-        wicketTester.clickLink(tabPanel + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(tabPanel + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n \n         component = findComponentByProp(\"key\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n@@ -130,15 +130,15 @@ public void editPrinter() {\n \n     @Test\n     public void checkDeletePrinterLink() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n \n         Component component = findComponentByProp(\"key\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        wicketTester.assertComponent(component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\",\n+        TESTER.assertComponent(component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\",\n                 IndicatingOnConfirmAjaxLink.class);\n     }\n }"},{"sha":"690531f9d5ff7dd9b8847905a0da50e374ad675d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypeClassesITCase.java","status":"modified","additions":32,"deletions":32,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -42,15 +42,15 @@ public void read() {\n         browsingToAnyTypeClasses();\n \n         Component result = findComponentByProp(KEY, DATATABLE_PATH, \"csv\");\n-        wicketTester.assertLabel(\n+        TESTER.assertLabel(\n                 result.getPageRelativePath() + \":cells:1:cell\", \"csv\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n-        \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n \n-        wicketTester.assertComponent(\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n     }\n \n@@ -59,33 +59,34 @@ public void create() {\n         browsingToAnyTypeClasses();\n         final String anyTypeClassTest = \"anyTypeClassTest\";\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        final FormTester formTester\n-                = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        FormTester formTester =\n+                TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeClassDetailsPanel:form:key:textField\", anyTypeClassTest);\n         formTester.setValue(\n                 \"content:anyTypeClassDetailsPanel:form:container:derSchemas:paletteField:recorder\", \"mderiveddata\");\n \n-        wicketTester.clickLink(\n+        TESTER.clearFeedbackMessages();\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.clearFeedbackMessages();\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.clearFeedbackMessages();\n+        TESTER.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        wicketTester.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n \n-        wicketTester.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n         Component result = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassTest);\n \n-        wicketTester.assertLabel(result.getPageRelativePath() + \":cells:3:cell\", \"[mderiveddata]\");\n+        TESTER.assertLabel(result.getPageRelativePath() + \":cells:3:cell\", \"[mderiveddata]\");\n     }\n \n     @Test\n@@ -94,49 +95,48 @@ public void update() {\n         createPlainSchema(plainSchema);\n         browsingToAnyTypeClasses();\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:6:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:6:cell:panelEdit:editLink\");\n \n-        final FormTester formTester\n-                = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        final FormTester formTester =\n+                TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:anyTypeClassDetailsPanel:form:container:plainSchemas:paletteField:recorder\", plainSchema);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n     }\n \n     @Test\n     public void delete() {\n         final String anyTypeClassName = \"zStringDelete\";\n         createAnyTypeClassWithoutSchema(anyTypeClassName);\n         browsingToAnyTypeClasses();\n-        wicketTester.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n         Component result = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n \n         assertNotNull(result);\n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\",\n                 IndicatingOnConfirmAjaxLink.class);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\n-                wicketTester.getComponentFromLastRenderedPage(\n-                        result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"));\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+                result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"), \"click\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         result = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n \n         assertNull(result);"},{"sha":"4e5ad5f6f199a3d3908b43533c594fa0f81a6590","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypesITCase.java","status":"modified","additions":29,"deletions":28,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -40,50 +40,51 @@ public class AnyTypesITCase extends AbstractTypesITCase {\n     @Test\n     public void read() {\n         browsingToAnyTypes();\n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 DATATABLE_PATH\n                 + \":tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable:body:rows:1:cells:1:cell\", Label.class);\n \n         Component result = findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n \n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n     }\n \n     @Test\n     public void create() {\n         browsingToAnyTypes();\n         final String anyTypeTest = \"anyTypeTest2\";\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:key:textField\", anyTypeTest);\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:classes:paletteField:recorder\", \"csv\");\n \n-        wicketTester.clickLink(\n+        TESTER.clearFeedbackMessages();\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.clearFeedbackMessages();\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.clearFeedbackMessages();\n+        TESTER.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        wicketTester.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n         Component result = findComponentByProp(KEY, DATATABLE_PATH, anyTypeTest);\n \n-        wicketTester.assertLabel(result.getPageRelativePath() + \":cells:1:cell\", anyTypeTest);\n-        wicketTester.assertLabel(result.getPageRelativePath() + \":cells:3:cell\", \"[csv]\");\n+        TESTER.assertLabel(result.getPageRelativePath() + \":cells:1:cell\", anyTypeTest);\n+        TESTER.assertLabel(result.getPageRelativePath() + \":cells:3:cell\", \"[csv]\");\n     }\n \n     @Test\n@@ -92,23 +93,24 @@ public void update() {\n         createAnyTypeClassWithoutSchema(name);\n         browsingToAnyTypes();\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:4:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:4:cell:panelEdit:editLink\");\n \n-        final FormTester formTester = wicketTester.newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:anyTypeDetailsPanel:container:form:classes:paletteField:recorder\", name + \",minimal group\");\n \n-        wicketTester.clickLink(\n+        TESTER.clearFeedbackMessages();\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n     }\n \n     @Test\n@@ -117,24 +119,23 @@ public void delete() {\n         createAnyType(name);\n         browsingToAnyTypes();\n \n-        wicketTester.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n         Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n \n         assertNotNull(result);\n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\",\n                 IndicatingOnConfirmAjaxLink.class);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\n-                wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                         result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"), \"onclick\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         result = findComponentByProp(KEY, DATATABLE_PATH, name);\n \n         assertNull(result);"},{"sha":"9e57fc992c4993b006745318ac1166b57abc594b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BaseITCase.java","status":"modified","additions":28,"deletions":27,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBaseITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBaseITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBaseITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -39,55 +39,56 @@ public class BaseITCase extends AbstractConsoleITCase {\n \n     @Test\n     public void loginPage() {\n-        wicketTester.startPage(Login.class);\n-        wicketTester.assertRenderedPage(Login.class);\n+        TESTER.startPage(Login.class);\n+        TESTER.assertRenderedPage(Login.class);\n     }\n \n     @Test\n-    public void successfullyLogin() {\n+    public void successfulLogin() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        wicketTester.assertRenderedPage(Dashboard.class);\n+        TESTER.assertRenderedPage(Dashboard.class);\n     }\n \n     @Test\n-    public void unsuccessfullyLogin() {\n+    public void unsuccessfulLogin() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD + 1);\n-        wicketTester.assertRenderedPage(Login.class);\n+        TESTER.assertRenderedPage(Login.class);\n     }\n \n     @Test\n     public void browsingBookmarkablePageLink() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        wicketTester.assertRenderedPage(Dashboard.class);\n \n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.assertRenderedPage(Realms.class);\n+        TESTER.assertRenderedPage(Dashboard.class);\n \n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-        wicketTester.assertRenderedPage(Topology.class);\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.assertRenderedPage(Realms.class);\n \n-        wicketTester.clickLink(\"body:reportsLI:reports\");\n-        wicketTester.assertRenderedPage(Reports.class);\n+        TESTER.clickLink(\"body:topologyLI:topology\");\n+        TESTER.assertRenderedPage(Topology.class);\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:workflowLI:workflow\");\n-        wicketTester.assertRenderedPage(Workflow.class);\n+        TESTER.clickLink(\"body:reportsLI:reports\");\n+        TESTER.assertRenderedPage(Reports.class);\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n-        wicketTester.assertRenderedPage(Logs.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:workflowLI:workflow\");\n+        TESTER.assertRenderedPage(Workflow.class);\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:securityquestionsLI:securityquestions\");\n-        wicketTester.assertRenderedPage(SecurityQuestions.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n+        TESTER.assertRenderedPage(Logs.class);\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:securityquestionsLI:securityquestions\");\n+        TESTER.assertRenderedPage(SecurityQuestions.class);\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:rolesLI:roles\");\n-        wicketTester.assertRenderedPage(Roles.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        TESTER.assertRenderedPage(Types.class);\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n-        wicketTester.assertRenderedPage(Policies.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:rolesLI:roles\");\n+        TESTER.assertRenderedPage(Roles.class);\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n-        wicketTester.assertRenderedPage(Notifications.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n+        TESTER.assertRenderedPage(Policies.class);\n+\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        TESTER.assertRenderedPage(Notifications.class);\n     }\n }"},{"sha":"5870dd31166f6bb0379cea87b24421f9088e29f1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BulkActionITCase.java","status":"modified","additions":52,"deletions":52,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -44,23 +44,23 @@ public void login() {\n \n     @Test\n     public void usersBulkAction() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", searchResultContainer\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        FormTester formTester = wicketTester.newFormTester(searchResultContainer\n+        FormTester formTester = TESTER.newFormTester(searchResultContainer\n                 + \"searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        wicketTester.executeAjaxEvent(searchResultContainer + \"searchContainer:resultTable:tablePanel:bulkActionLink\",\n+        TESTER.executeAjaxEvent(searchResultContainer + \"searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(searchResultContainer\n+        TESTER.assertComponent(searchResultContainer\n                 + \"searchContainer:resultTable:bulkModal:form:content:content:container\", WebMarkupContainer.class);\n \n         assertNotNull(findComponentByProp(\"username\", searchResultContainer\n@@ -69,17 +69,17 @@ public void usersBulkAction() {\n \n     @Test\n     public void userResourceBulkAction() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath()\n+        TESTER.clickLink(component.getPageRelativePath()\n                 + \":cells:6:cell:panelManageResources:manageResourcesLink\");\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n@@ -89,18 +89,18 @@ public void userResourceBulkAction() {\n                 + \"checkgroup:dataTable\", \"resource-csv\");\n         assertNotNull(component);\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        wicketTester.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n         assertNotNull(findComponentByProp(\"resourceName\", tabPanel + \"outerObjectsRepeater:1:outer:\"\n@@ -111,93 +111,93 @@ public void userResourceBulkAction() {\n     public void userStatusBulkAction() {\n         // suspend \n \n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEnable:enableLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEnable:enableLink\");\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        wicketTester.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        wicketTester.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:\"\n+        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:\"\n                 + \"status:secondLevelContainer:second:container:actions:panelSuspend:suspendLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertLabel(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertLabel(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n \n         // re-activate\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n         component = findComponentByProp(\"username\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEnable:enableLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEnable:enableLink\");\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        wicketTester.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        wicketTester.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:\"\n+        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:\"\n                 + \"status:secondLevelContainer:second:container:actions:panelReactivate:reactivateLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertLabel(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertLabel(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:3:cell\", \"SUCCESS\");\n     }\n \n     @Test\n     public void groupResourceBulkAction() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath()\n+        TESTER.clickLink(component.getPageRelativePath()\n                 + \":cells:4:cell:panelManageResources:manageResourcesLink\");\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        wicketTester.clickLink(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:\"\n+        TESTER.clickLink(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:2:header:orderByLink\", true);\n \n@@ -207,18 +207,18 @@ public void groupResourceBulkAction() {\n                 + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n         assertNotNull(component);\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 7);\n \n-        wicketTester.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n         assertNotNull(findComponentByProp(\"resourceName\", tabPanel + \"outerObjectsRepeater:1:outer:\"\n@@ -227,22 +227,22 @@ public void groupResourceBulkAction() {\n \n     @Test\n     public void printerResourceBulkAction() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n \n         Component component = findComponentByProp(\"key\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath()\n+        TESTER.clickLink(component.getPageRelativePath()\n                 + \":cells:4:cell:panelManageResources:manageResourcesLink\");\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        wicketTester.clickLink(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:\"\n+        TESTER.clickLink(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:first:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:2:header:orderByLink\", true);\n \n@@ -252,18 +252,18 @@ public void printerResourceBulkAction() {\n                 + \"checkgroup:dataTable\", \"ws-target-resource-1\");\n         assertNotNull(component);\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 7);\n \n-        wicketTester.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.executeAjaxEvent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n         assertNotNull(findComponentByProp(\"resourceName\", tabPanel + \"outerObjectsRepeater:1:outer:\"\n@@ -272,25 +272,25 @@ public void printerResourceBulkAction() {\n \n     @Test\n     public void executePropagationTask() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n+        TESTER.clickLink(\"body:topologyLI:topology\");\n \n         Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 0);\n \n-        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:bulkActionLink\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n                 + \"second:container:selectedObjects:body:rows:1:cells:1:cell\", Label.class);\n     }\n }"},{"sha":"0c7d4a2b2646af27751c5d135c83b377befbf0b9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/DisplayAttributesITCase.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -32,43 +32,43 @@ public class DisplayAttributesITCase extends AbstractConsoleITCase {\n     @Before\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.assertRenderedPage(Realms.class);\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.assertRenderedPage(Realms.class);\n     }\n \n     @Test\n     public void read() {\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:\"\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:\"\n                 + \"searchResult:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:4:header:label:panelChangeView:changeViewLink\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer\", Modal.class);\n     }\n \n     @Test\n     public void set() {\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:\"\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:\"\n                 + \"searchResult:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:4:header:label:panelChangeView:changeViewLink\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer\", Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\n+        final FormTester formTester = TESTER.newFormTester(\n                 \"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer:form\");\n \n         formTester.setValue(\"content:container:details:paletteField:recorder\", \"status\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer:dialog:footer:\"\n                 + \"inputs:0:submit\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.clearFeedbackMessages();\n+        TESTER.clearFeedbackMessages();\n     }\n }"},{"sha":"137397e0c172751a8eba2fdfee6dea5446671429","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":35,"deletions":35,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -24,12 +24,12 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.util.tester.FormTester;\n-import org.junit.Before;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n+import org.junit.Before;\n \n @FixMethodOrder(MethodSorters.JVM)\n public class GroupsITCase extends AbstractConsoleITCase {\n@@ -45,121 +45,121 @@ public void login() {\n \n     @Test\n     public void read() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"artDirector\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelMembers:membersLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelMembers:membersLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:content:body:tabbedPanel:panel:searchResult:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:body:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:6:outer:container:content:togglePanelContainer:membersForm\");\n \n         formTester.select(\"type:dropDownChoiceField\", 0);\n         formTester.submit(\"changeit\");\n \n-        wicketTester.assertModelValue(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:5:outer:\"\n+        TESTER.assertModelValue(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:5:outer:\"\n                 + \"dialog:header:header-label\", \"USER members of artDirector\");\n \n         assertNotNull(findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:5:outer:form:content:searchResult:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\"));\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:5:\"\n+        TESTER.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:5:\"\n                 + \"outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n     }\n \n     @Test\n     public void filteredSearch() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n+        TESTER.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n                 + \"searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:searchFormContainer:search:\"\n                 + \"multiValueContainer:innerForm:content:view:0:panel:container:value:textField\", TextField.class);\n     }\n \n     @Test\n     public void clickToCloneGroup() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelClone:cloneLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelClone:cloneLink\");\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n                 TextField.class);\n \n-        FormTester formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:cancel\");\n     }\n \n     @Test\n     public void editGroup() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n \n-        wicketTester.assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n+        TESTER.assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n                 TextField.class);\n \n-        FormTester formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.assertComponent(tabPanel\n+        TESTER.assertComponent(tabPanel\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:0:field\", Label.class);\n \n-        wicketTester.clickLink(tabPanel + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(tabPanel + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n \n         component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n@@ -168,14 +168,14 @@ public void editGroup() {\n \n     @Test\n     public void checkDeleteGroupLink() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n-        wicketTester.assertComponent(component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\",\n+        TESTER.assertComponent(component.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\",\n                 IndicatingOnConfirmAjaxLink.class);\n     }\n }"},{"sha":"f50f22f746a7c8984076b9bf784a5547bf237266","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/LogsITCase.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -41,61 +41,61 @@ public class LogsITCase extends AbstractConsoleITCase {\n     @Before\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n-        wicketTester.assertRenderedPage(Logs.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n+        TESTER.assertRenderedPage(Logs.class);\n     }\n \n     @Test\n     public void readCoreLogs() {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        wicketTester.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         assertNotNull(searchLog(KEY, CONTAINER_PATH, \"org.apache.camel\"));\n     }\n \n     @Test\n     public void updateCoreLogs() {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        wicketTester.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         Component result = searchLog(KEY, CONTAINER_PATH, \"org.apache.camel\");\n         assertNotNull(result);\n \n-        wicketTester.getRequest().addParameter(\n+        TESTER.getRequest().addParameter(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", \"6\");\n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", DropDownChoice.class);\n-        wicketTester.executeAjaxEvent(result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", \"onchange\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", \"onchange\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n     }\n \n     @Test\n     public void readConsoleLogs() {\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:tabs-container:tabs:1:link\", AjaxFallbackLink.class);\n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        wicketTester.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:content:tabbedPanel:tabs-container:tabs:1:link\", AjaxFallbackLink.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         assertNotNull(searchLog(KEY, CONTAINER_PATH, \"org.apache.syncope.fit\"));\n     }\n \n     @Test\n     public void updateConsoleLogs() {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        wicketTester.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         Component result = searchLog(KEY, CONTAINER_PATH, \"org.apache.syncope.fit\");\n         assertNotNull(result);\n \n-        wicketTester.getRequest().addParameter(\n+        TESTER.getRequest().addParameter(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", \"6\");\n-        wicketTester.executeAjaxEvent(result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", \"onchange\");\n+        TESTER.executeAjaxEvent(result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", \"onchange\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n     }\n \n     private Component searchLog(final String property, final String searchPath, final String key) {\n-        Component component = wicketTester.getComponentFromLastRenderedPage(searchPath);\n+        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n \n         Component result = component.getPage().\n                 visitChildren(ListItem.class, new IVisitor<ListItem<LoggerTO>, Component>() {"},{"sha":"0402bd51dc6b38a4cf4a4b21037286d7ad5701ce","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/NotificationsITCase.java","status":"modified","additions":48,"deletions":49,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -35,12 +35,19 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class NotificationsITCase extends AbstractConsoleITCase {\n \n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        TESTER.assertRenderedPage(Notifications.class);\n+    }\n+\n     private void createNotification(final String sender, final String subject) {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n \n         formTester.setValue(\"content:form:view:recipientAttrName:textField\", \"email\");\n@@ -49,17 +56,17 @@ private void createNotification(final String sender, final String subject) {\n         formTester.setValue(\"content:form:view:sender:textField\", sender);\n         formTester.setValue(\"content:form:view:subject:textField\", subject);\n \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:next\");\n-        wicketTester.assertNoErrorMessage();\n+        TESTER.assertNoErrorMessage();\n \n-        formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n \n         // -------------------------------\n         // generate event to populate eventsPanel\n         // -------------------------------\n         formTester.setValue(\"content:form:view:eventSelection:categoryContainer:category:dropDownChoiceField\", \"0\");\n-        wicketTester.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:form:view:eventSelection:categoryContainer:category:dropDownChoiceField\",\n                 Constants.ON_CHANGE);\n         // -------------------------------\n@@ -68,44 +75,37 @@ private void createNotification(final String sender, final String subject) {\n         // select event template\n         // -------------------------------\n         formTester.setValue(\"content:form:view:eventSelection:eventsContainer:eventsPanel:successGroup\", \"check0\");\n-        wicketTester.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:\"\n                 + \"form:view:eventSelection:eventsContainer:eventsPanel:successGroup\",\n                 Constants.ON_CLICK);\n         // -------------------------------\n \n         formTester.setValue(\"content:form:view:eventSelection:categoryContainer:category:dropDownChoiceField\", \"0\");\n         formTester.setValue(\"content:form:view:eventSelection:eventsContainer:eventsPanel:successGroup\", \"check0\");\n \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:next\");\n-        wicketTester.assertNoErrorMessage();\n+        TESTER.assertNoErrorMessage();\n \n-        formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n-        wicketTester.cleanupFeedbackMessages();\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        TESTER.cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:next\");\n-        wicketTester.assertNoErrorMessage();\n-        wicketTester.assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n \n-        formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n-        wicketTester.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:form:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:form:\"\n                 + \"view:staticRecipients:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n         formTester.setValue(\"content:form:view:staticRecipients:multiValueContainer:innerForm:content:view:0:panel:\"\n                 + \"textField\", \"recipient@syncope.org\");\n         formTester.setValue(\"content:form:view:selfAsRecipient:checkboxField\", true);\n \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:finish\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.cleanupFeedbackMessages();\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n-    }\n-\n-    @Before\n-    public void login() {\n-        doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n-        wicketTester.assertRenderedPage(Notifications.class);\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n     }\n \n     @Test\n@@ -125,58 +125,58 @@ public void update() {\n         Component result = findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToUpdate\");\n \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:7:cell:panelEdit:editLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:7:cell:panelEdit:editLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void execute() {\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n \n         Component result = findComponentByProp(\"subject\",\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"Password Reset request\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 result.getPageRelativePath() + \":cells:7:cell:panelNotificationTasks:notificationTasksLink\");\n \n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", WebMarkupContainer.class);\n \n         result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\");\n \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:8:cell:panelExecute:executeLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:8:cell:panelExecute:executeLink\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n \n         result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"Password Reset request\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 result.getPageRelativePath() + \":cells:7:cell:panelNotificationTasks:notificationTasksLink\");\n \n         result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\");\n \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:8:cell:panelView:viewLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:8:cell:panelView:viewLink\");\n \n-        wicketTester.assertLabel(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:tasks:\"\n+        TESTER.assertLabel(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:title\", \"Notifications with subject &#039;Notification for SYNCOPE-81&#039;\");\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:tasks:\"\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:back\");\n \n         assertNotNull(findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n@@ -190,16 +190,15 @@ public void delete() {\n         Component result = findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToDelete\");\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\n-                wicketTester.getComponentFromLastRenderedPage(\n-                        result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"));\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+                result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         assertNull(findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToDelete\"));"},{"sha":"82e52d7f4b96c60e7a8cda674514369b8b532ccd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ParametersITCase.java","status":"modified","additions":31,"deletions":35,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -36,92 +36,88 @@ public class ParametersITCase extends AbstractConsoleITCase {\n     @Before\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        browsingToParameters();\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:parametersLI:parameters\");\n+        TESTER.assertRenderedPage(Parameters.class);\n     }\n \n     @Test\n     public void readParameter() {\n-        wicketTester.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n         assertNotNull(findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"token.expireTime\"));\n     }\n \n     @Test\n     public void createParameter() {\n-        wicketTester.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n \n-        wicketTester.clickLink(\"body:content:parametersPanel:container:content:add\");\n-        wicketTester.assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(\"body:content:parametersPanel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester\n-                = wicketTester.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+        FormTester formTester =\n+                TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:next\");\n \n-        formTester = wicketTester.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+        formTester = TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:schema:textField\", \"testParam\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:attrs:0:panel:textField\", \"test\");\n \n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.cleanupFeedbackMessages();\n-        wicketTester.assertRenderedPage(Parameters.class);\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.assertRenderedPage(Parameters.class);\n     }\n \n     @Test\n     public void updateParameter() {\n-        wicketTester.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n \n         Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"token.expireTime\");\n         assertNotNull(result);\n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:parametersPanel:container:content:modalDetails:form\");\n \n         formTester.setValue(\"content:parametersDetailsPanel:container:parametersForm:panel:spinner\", \"70\");\n-        wicketTester.clickLink(\"body:content:parametersPanel:\"\n+        TESTER.clickLink(\"body:content:parametersPanel:\"\n                 + \"container:content:modalDetails:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n-        wicketTester.assertRenderedPage(Parameters.class);\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.assertRenderedPage(Parameters.class);\n     }\n \n     @Test\n     public void deleteParameter() {\n-        wicketTester.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n \n-        wicketTester.clickLink(\"body:content:parametersPanel:container:content:add\");\n-        wicketTester.assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(\"body:content:parametersPanel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester\n-                = wicketTester.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+        FormTester formTester =\n+                TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:next\");\n \n-        formTester = wicketTester.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+        formTester = TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:schema:textField\", \"deleteParam\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:attrs:0:panel:textField\", \"test\");\n \n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        wicketTester.clickLink(\"body:content:parametersPanel:\"\n+        TESTER.clickLink(\"body:content:parametersPanel:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable:bottomToolbars:toolbars:3:span:navigator:last\");\n \n         Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"deleteParam\");\n         assertNotNull(result);\n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n-    }\n-\n-    private void browsingToParameters() {\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:parametersLI:parameters\");\n-        wicketTester.assertRenderedPage(Parameters.class);\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n }"},{"sha":"978e9952f361e8e63177d3d577922b6d848eed9d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":158,"deletions":158,"changes":316,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -34,49 +34,56 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class PoliciesITCase extends AbstractConsoleITCase {\n \n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n+        TESTER.assertRenderedPage(Policies.class);\n+    }\n+\n     private void createAccountPolicy(final String description) {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description);\n         formTester.setValue(\"content:fields:1:field:spinner\", \"1\");\n         formTester.setValue(\"content:fields:2:field:checkboxField\", true);\n         formTester.setValue(\"content:fields:3:field:paletteField:recorder\", \"resource-csv\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         closeCallBack(modal);\n \n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:container:content:\"\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", WebMarkupContainer.class);\n \n         Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelEdit:editLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description);\n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 1);\n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:2:field:checkboxField\", true);\n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:3:field:paletteField:recorder\", \"resource-csv\");\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n@@ -85,42 +92,42 @@ private void createAccountPolicy(final String description) {\n     }\n \n     private void createPasswordPolicy(final String description) {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description);\n         formTester.setValue(\"content:fields:1:field:spinner\", \"1\");\n         formTester.setValue(\"content:fields:2:field:checkboxField\", true);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         closeCallBack(modal);\n \n         Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelEdit:editLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description);\n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 1);\n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:2:field:checkboxField\", true);\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n@@ -129,37 +136,37 @@ private void createPasswordPolicy(final String description) {\n     }\n \n     private void createPullPolicy(final String description) {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description);\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         closeCallBack(modal);\n \n         Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description);\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n@@ -168,77 +175,70 @@ private void createPullPolicy(final String description) {\n     }\n \n     private void deleteAccountPolicy(final String description) {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n         Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 component.getPageRelativePath() + \":cells:9:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 component.getPageRelativePath() + \":cells:9:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         Assert.assertNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     private void deletePasswordPolicy(final String description) {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n         Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\n-                wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\n+                TESTER.getComponentFromLastRenderedPage(\n                         component.getPageRelativePath() + \":cells:8:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 component.getPageRelativePath() + \":cells:8:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         Assert.assertNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     private void deletePullPolicy(final String description) {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n         Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\n-                wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\n+                TESTER.getComponentFromLastRenderedPage(\n                         component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         Assert.assertNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n-    @Before\n-    public void login() {\n-        doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n-        wicketTester.assertRenderedPage(Policies.class);\n-    }\n-\n     @Test\n     public void read() {\n         Assert.assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n@@ -261,21 +261,21 @@ public void cloneDeleteAccountPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelClone:cloneLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelClone:cloneLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + \"2\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         closeCallBack(modal);\n \n@@ -306,21 +306,21 @@ public void cloneDeletePasswordPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelClone:cloneLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelClone:cloneLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + \"2\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         closeCallBack(modal);\n \n@@ -351,21 +351,21 @@ public void cloneDeletePullPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelClone:cloneLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelClone:cloneLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + \"2\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         closeCallBack(modal);\n \n@@ -389,37 +389,37 @@ public void createUpdateDeleteAccountPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelEdit:editLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:1:field:spinner\", \"2\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         closeCallBack(modal);\n \n         component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.assertLabel(component.getPageRelativePath() + \":cells:7:cell\", \"2\");\n+        TESTER.assertLabel(component.getPageRelativePath() + \":cells:7:cell\", \"2\");\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelEdit:editLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 2);\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n@@ -435,38 +435,38 @@ public void createComposeDeleteAccountPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelCompose:composeLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:9:cell:panelCompose:composeLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:container:content:add\");\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"myrule\");\n         formTester.setValue(\"view:configuration:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:\"\n                 + \"container:content:wizard:form:view:bean:propView:1:value:spinner\", 0);\n \n-        formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         component = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n                 + \"content:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"myrule\");\n \n         Assert.assertNotNull(component);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:container:content:exit\");\n \n         closeCallBack(modal);\n@@ -483,37 +483,37 @@ public void createUpdateDeletePasswordPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelEdit:editLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:1:field:spinner\", \"2\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         closeCallBack(modal);\n \n         component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.assertLabel(component.getPageRelativePath() + \":cells:6:cell\", \"2\");\n+        TESTER.assertLabel(component.getPageRelativePath() + \":cells:6:cell\", \"2\");\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelEdit:editLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 2);\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n@@ -529,38 +529,38 @@ public void createComposeDeletePasswordPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelCompose:composeLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:8:cell:panelCompose:composeLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:container:content:add\");\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"myrule\");\n         formTester.setValue(\"view:configuration:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:\"\n                 + \"container:content:wizard:form:view:bean:propView:0:value:spinner\", 0);\n \n-        formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:3:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         component = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:\"\n                 + \"content:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"myrule\");\n \n         Assert.assertNotNull(component);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:3:outer:form:content:container:content:exit\");\n \n         closeCallBack(modal);\n@@ -576,36 +576,36 @@ public void createUpdateDeletePullPolicy() {\n         Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + \"2\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         closeCallBack(modal);\n \n         component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description + \"2\");\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description + \"2\");\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n@@ -621,45 +621,45 @@ public void createComposeDeletePullPolicy() {\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelCompose:composeLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelCompose:composeLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\", Modal.class);\n \n-        Component modal = wicketTester.getComponentFromLastRenderedPage(\n+        Component modal = TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form\");\n \n-        wicketTester.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:\"\n                 + \"correlationRules:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n \n         formTester.setValue(\"content:conflictResolutionAction:dropDownChoiceField\", \"1\");\n         formTester.setValue(\"content:correlationRules:multiValueContainer:innerForm:content:view:0:panel:\"\n                 + \"jsonRule:paletteField:recorder\", \"fullname\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         closeCallBack(modal);\n \n         component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         Assert.assertNotNull(component);\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelCompose:composeLink\");\n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\", Modal.class);\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelCompose:composeLink\");\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\", Modal.class);\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:conflictResolutionAction:dropDownChoiceField\", ConflictResolutionAction.FIRSTMATCH);\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:correlationRules:multiValueContainer:innerForm:content:view:0:panel:\"\n                 + \"jsonRule:paletteField:recorder\", \"fullname\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:dialog:footer:buttons:0:button\");\n \n         closeCallBack(modal);"},{"sha":"2b7b02563aa5121731a629a6f3bbe883d46ea69f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RealmsITCase.java","status":"modified","additions":30,"deletions":30,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -33,79 +33,79 @@ public class RealmsITCase extends AbstractConsoleITCase {\n     @Before\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.assertRenderedPage(Realms.class);\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.assertRenderedPage(Realms.class);\n     }\n \n     @Test\n     public void read() {\n-        wicketTester.assertLabel(\"body:content:body:tabbedPanel:panel:container:name:field-label\", \"Name\");\n+        TESTER.assertLabel(\"body:content:body:tabbedPanel:panel:container:name:field-label\", \"Name\");\n     }\n \n     @Test\n     public void create() {\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelCreate:createLink\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelCreate:createLink\");\n \n-        wicketTester.assertComponent(\"body:content:modal\", Modal.class);\n+        TESTER.assertComponent(\"body:content:modal\", Modal.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:content:modal:form\");\n+        FormTester formTester = TESTER.newFormTester(\"body:content:modal:form\");\n         formTester.setValue(\"content:details:container:name:textField\", \"testRealm\");\n \n-        wicketTester.clickLink(\"body:content:modal:dialog:footer:inputs:0:submit\");\n+        TESTER.clickLink(\"body:content:modal:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void update() {\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n-        wicketTester.assertComponent(\"body:content:modal\", Modal.class);\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:modal\", Modal.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:content:modal:form\");\n-        wicketTester.clickLink(\"body:content:modal:dialog:footer:inputs:0:submit\");\n+        FormTester formTester = TESTER.newFormTester(\"body:content:modal:form\");\n+        TESTER.clickLink(\"body:content:modal:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void addUserTemplate() {\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n-        wicketTester.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n+        TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n         formTester.setValue(\"type:dropDownChoiceField\", \"0\");\n         formTester.submit(\"changeit\");\n \n-        wicketTester.assertComponent(\"body:content:templateModal\", Modal.class);\n+        TESTER.assertComponent(\"body:content:templateModal\", Modal.class);\n \n-        formTester = wicketTester.newFormTester(\"body:content:templateModal:form:content:form\");\n+        formTester = TESTER.newFormTester(\"body:content:templateModal:form:content:form\");\n         formTester.setValue(\"view:username:textField\", \"'k' + firstname\");\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n-        wicketTester.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n+        TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n         formTester.setValue(\"type:dropDownChoiceField\", \"0\");\n         formTester.submit(\"changeit\");\n \n-        wicketTester.assertComponent(\"body:content:templateModal\", Modal.class);\n+        TESTER.assertComponent(\"body:content:templateModal\", Modal.class);\n \n-        wicketTester.assertModelValue(\"body:content:templateModal:form:content:form:view:username:textField\",\n+        TESTER.assertModelValue(\"body:content:templateModal:form:content:form:view:username:textField\",\n                 \"'k' + firstname\");\n \n-        formTester = wicketTester.newFormTester(\"body:content:templateModal:form:content:form\");\n+        formTester = TESTER.newFormTester(\"body:content:templateModal:form:content:form\");\n         formTester.setValue(\"view:username:textField\", \"\");\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n }"},{"sha":"0f9af861c08801e775c65499824c1b8a28f72ddd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RelationshipTypeITCase.java","status":"modified","additions":19,"deletions":20,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypeITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypeITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypeITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -41,16 +41,16 @@ public void read() {\n \n         Component result = findComponentByProp(KEY, DATATABLE_PATH, \"inclusion\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":cells:1:cell\", Label.class);\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n     }\n \n@@ -60,12 +60,12 @@ public void create() {\n         createRelationshipType(name);\n         browsingToRelationshipType();\n \n-        wicketTester.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n         Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n \n-        wicketTester.assertLabel(result.getPageRelativePath() + \":cells:1:cell\", name);\n-        wicketTester.assertLabel(result.getPageRelativePath() + \":cells:2:cell\", \"test relationshipType\");\n+        TESTER.assertLabel(result.getPageRelativePath() + \":cells:1:cell\", name);\n+        TESTER.assertLabel(result.getPageRelativePath() + \":cells:2:cell\", \"test relationshipType\");\n     }\n \n     @Test\n@@ -74,23 +74,23 @@ public void update() {\n         createRelationshipType(name);\n         browsingToRelationshipType();\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:3:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:3:cell:panelEdit:editLink\");\n \n         final FormTester formTester =\n-                wicketTester.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+                TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:relationshipTypeDetails:container:form:description:textField\", \"new description\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n     }\n \n     @Test\n@@ -99,25 +99,24 @@ public void delete() {\n         createRelationshipType(name);\n         browsingToRelationshipType();\n \n-        wicketTester.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n         Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n \n         assertNotNull(result);\n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\",\n                 IndicatingOnConfirmAjaxLink.class);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\n-                wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                         result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"), \"onclick\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         result = findComponentByProp(KEY, DATATABLE_PATH, name);\n \n         assertNull(result);"},{"sha":"2d489cb2d96244dc3170426e6d9ded0bdd0e9ed1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ReportsITCase.java","status":"modified","additions":54,"deletions":55,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -35,92 +35,91 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class ReportsITCase extends AbstractConsoleITCase {\n \n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+        TESTER.clickLink(\"body:reportsLI:reports\");\n+        TESTER.assertRenderedPage(Reports.class);\n+    }\n+\n     private void createReport(final String name) {\n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:container:content:add\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:container:content:add\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:name:textField\", name);\n         formTester.setValue(\"content:form:view:template:dropDownChoiceField\", \"0\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        wicketTester.assertComponent(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater\"\n+        TESTER.assertComponent(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater\"\n                 + \":0:outer:form:content:form:view:schedule:seconds:textField\", TextField.class);\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        wicketTester.clickLink(\"body:reportsLI:reports\");\n+        TESTER.clickLink(\"body:reportsLI:reports\");\n     }\n \n     private void delete(final String name) {\n-        wicketTester.clickLink(\"body:reportsLI:reports\");\n+        TESTER.clickLink(\"body:reportsLI:reports\");\n \n         Component result = findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", name);\n \n         assertNotNull(result);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\n-                wicketTester.getComponentFromLastRenderedPage(\n-                        result.getPageRelativePath() + \":cells:10:cell:panelDelete:deleteLink\"));\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+                result.getPageRelativePath() + \":cells:10:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:10:cell:panelDelete:deleteLink\"), Constants.ON_CLICK);\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         assertNull(findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteReport\"));\n     }\n \n     private void deleteReportlet(final String report, final String reportlet) {\n-        wicketTester.clickLink(\"body:reportsLI:reports\");\n+        TESTER.clickLink(\"body:reportsLI:reports\");\n \n         Component result = findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", report);\n \n         assertNotNull(result);\n \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n \n         result = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", reportlet);\n \n         assertNotNull(result);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         assertNull(findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", reportlet));\n     }\n \n-    @Before\n-    public void login() {\n-        doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        wicketTester.clickLink(\"body:reportsLI:reports\");\n-        wicketTester.assertRenderedPage(Reports.class);\n-    }\n-\n     @Test\n     public void read() {\n         Component result = findComponentByProp(\n@@ -129,21 +128,21 @@ public void read() {\n \n         assertNotNull(result);\n \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelView:viewLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelView:viewLink\");\n \n-        wicketTester.assertModelValue(\n+        TESTER.assertModelValue(\n                 \"body:content:tabbedPanel:panel:secondLevelContainer:title\", \"Executions of report 'test'\");\n         result = findComponentByProp(\"status\", \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"SUCCESS\");\n \n         assertNotNull(result);\n \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:6:cell:panelView:viewLink\");\n-        wicketTester.clickLink(\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:6:cell:panelView:viewLink\");\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:secondLevelContainer:back\");\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:secondLevelContainer:back\");\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:secondLevelContainer:back\");\n \n         assertNotNull(findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n@@ -161,30 +160,30 @@ public void cloneReportlets() {\n \n         assertNotNull(result);\n \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n \n         result = findComponentByProp(\"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"testUserReportlet\");\n \n         assertNotNull(result);\n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:3:cell:panelClone:cloneLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:3:cell:panelClone:cloneLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:container:content:wizard:form\");\n \n         formTester.setValue(\"view:name:textField\", reportlet);\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         deleteReportlet(report, reportlet);\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n                 + \"outer:form:content:container:content:exit\");\n \n-        wicketTester.assertRenderedPage(Reports.class);\n+        TESTER.assertRenderedPage(Reports.class);\n     }\n \n     @Test\n@@ -198,31 +197,31 @@ public void createReportlets() {\n \n         assertNotNull(result);\n \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelCompose:composeLink\");\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n                 + \"outer:form:content:container:content:add\");\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n+        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:container:content:wizard:form\");\n \n         formTester.setValue(\"view:name:textField\", reportlet);\n         formTester.setValue(\"view:configuration:dropDownChoiceField\", \"1\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n+        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         deleteReportlet(report, reportlet);\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:\"\n                 + \"outer:form:content:container:content:exit\");\n \n-        wicketTester.assertRenderedPage(Reports.class);\n+        TESTER.assertRenderedPage(Reports.class);\n     }\n \n     @Test\n@@ -232,21 +231,21 @@ public void update() {\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"updateReport\");\n \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelEdit:editLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:10:cell:panelEdit:editLink\");\n \n-        wicketTester.assertModelValue(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:\"\n+        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:\"\n                 + \"0:outer:dialog:header:header-label\", \"Edit Report updateReport\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:template:dropDownChoiceField\", \"1\");\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         delete(\"updateReport\");\n     }"},{"sha":"80a286b08e7c6f824cf8e1c4ebeefac8386829bc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RolesITCase.java","status":"modified","additions":32,"deletions":33,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -34,53 +34,53 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class RolesITCase extends AbstractConsoleITCase {\n \n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:rolesLI:roles\");\n+        TESTER.assertRenderedPage(Roles.class);\n+    }\n+\n     private void createRole(final String name) {\n-        wicketTester.clickLink(\"body:content:rolesPanel:container:content:add\");\n+        TESTER.clickLink(\"body:content:rolesPanel:container:content:add\");\n \n-        wicketTester.assertComponent(\"body:content:rolesPanel:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:content:rolesPanel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n+        FormTester formTester = TESTER.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:key:textField\", name);\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = wicketTester.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n+        formTester = TESTER.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:entitlements:paletteField:recorder\",\n                 \"WORKFLOW_DEF_READ,NOTIFICATION_UPDATE,RELATIONSHIPTYPE_READ,RELATIONSHIPTYPE_LIST\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = wicketTester.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n+        formTester = TESTER.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:rolesLI:roles\");\n-    }\n-\n-    @Before\n-    public void login() {\n-        doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:rolesLI:roles\");\n-        wicketTester.assertRenderedPage(Roles.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:rolesLI:roles\");\n     }\n \n     @Test\n     public void read() {\n         assertNull(findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"OTHER\"));\n \n-        wicketTester.clickLink(\"body:content:rolesPanel:container:content:searchContainer:resultTable:tablePanel:\"\n+        TESTER.clickLink(\"body:content:rolesPanel:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable:body:rows:1:cells:4:cell:panelMembers:membersLink\");\n \n-        wicketTester.assertModelValue(\n+        TESTER.assertModelValue(\n                 \"body:content:rolesPanel:outerObjectsRepeater:4:outer:dialog:header:header-label\",\n                 \"Role 'Other' members\");\n \n         assertNotNull(findComponentByProp(\"username\", \"body:content:rolesPanel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:searchResult:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"rossini\"));\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:content:rolesPanel:outerObjectsRepeater:4:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n     }\n@@ -96,26 +96,26 @@ public void update() {\n         Component result = findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"updateRole\");\n \n-        wicketTester.assertLabel(\n+        TESTER.assertLabel(\n                 result.getPageRelativePath() + \":cells:1:cell\", \"updateRole\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n+        FormTester formTester = TESTER.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:key:textField\", \"updateRole\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = wicketTester.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n+        formTester = TESTER.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:entitlements:paletteField:recorder\",\n                 \"WORKFLOW_DEF_READ,NOTIFICATION_UPDATE\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = wicketTester.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n+        formTester = TESTER.newFormTester(\"body:content:rolesPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n@@ -124,19 +124,18 @@ public void delete() {\n         Component result = findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteRole\");\n \n-        wicketTester.assertLabel(\n+        TESTER.assertLabel(\n                 result.getPageRelativePath() + \":cells:1:cell\", \"deleteRole\");\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\n-                wicketTester.getComponentFromLastRenderedPage(\n-                        result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+                result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"), \"onclick\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         assertNull(findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteRole\"));"},{"sha":"1b241963fe991861221934fefb84c5cf72e6bbb5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SchemasITCase.java","status":"modified","additions":44,"deletions":45,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -40,22 +40,22 @@ public class SchemasITCase extends AbstractTypesITCase {\n     @Test\n     public void readPlainSchema() {\n         browsingToPlainSchemas();\n-        wicketTester.assertLabel(\n+        TESTER.assertLabel(\n                 PLAIN_DATATABLE_PATH\n                 + \":tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable:body:rows:1:cells:1:cell\", \"aLong\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 PLAIN_DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:7:cell:panelEdit:editLink\", IndicatingAjaxLink.class);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 PLAIN_DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:7:cell:panelEdit:editLink\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:\"\n                 + \"panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:\"\n                 + \"form:content:kindForm:kind:dropDownChoiceField\", DropDownChoice.class);\n@@ -64,25 +64,25 @@ public void readPlainSchema() {\n     @Test\n     public void createPlainSchema() {\n         browsingToPlainSchemas();\n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:container:content:add\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        final FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:details:form:key:textField\", \"zBoolean\");\n         formTester.setValue(\"content:details:form:type:dropDownChoiceField\", \"3\");\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:\"\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.cleanupFeedbackMessages();\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.assertRenderedPage(Types.class);\n     }\n \n     @Test\n@@ -91,93 +91,92 @@ public void updatePlainSchema() {\n \n         Component result = findComponentByProp(KEY, PLAIN_DATATABLE_PATH, \"ctype\");\n \n-        wicketTester.assertLabel(\n+        TESTER.assertLabel(\n                 result.getPageRelativePath() + \":cells:1:cell\", \"ctype\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 result.getPageRelativePath() + \":cells:7:cell:panelEdit:editLink\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:\"\n                 + \"panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:\"\n                 + \"form:content:kindForm:kind:dropDownChoiceField\", DropDownChoice.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:details:form:multivalue:checkboxField\", \"true\");\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:\"\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\",\n                 true);\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n     }\n \n     @Test\n     public void deletePlainSchema() {\n         browsingToPlainSchemas();\n         //create new Plain Schema\n         final String schemaName = \"zStringDelete\";\n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:container:content:add\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        final FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:details:form:key:textField\", schemaName);\n         formTester.setValue(\"content:details:form:type:dropDownChoiceField\", \"0\");\n \n-        wicketTester.clickLink(\"body:content:tabbedPanel:panel:\"\n+        TESTER.clickLink(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");;\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");;\n \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n \n         //delete plain schema\n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 PLAIN_DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:bottomToolbars:toolbars:3:span:navigator:last\");\n \n-        wicketTester.assertComponent(PLAIN_DATATABLE_PATH, AjaxDataTablePanel.class);\n+        TESTER.assertComponent(PLAIN_DATATABLE_PATH, AjaxDataTablePanel.class);\n \n         Component result = findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName);\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\",\n                 IndicatingOnConfirmAjaxLink.class);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\n-                wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                         result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:7:cell:panelDelete:deleteLink\"), \"onclick\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         assertNull(findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName));\n     }\n \n     @Test\n     public void createVirtualSchema() {\n         browsingToVirtualSchemas();\n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:container:content:add\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        final FormTester formTester = wicketTester.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        final FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer:form\");\n \n         formTester.setValue(\"content:details:form:resource:dropDownChoiceField\", \"0\");\n-        wicketTester.executeAjaxEvent(\"body:content:tabbedPanel:panel:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:details:form:resource:dropDownChoiceField\", Constants.ON_CHANGE);\n \n@@ -186,25 +185,25 @@ public void createVirtualSchema() {\n         formTester.setValue(\"content:details:form:anyType:dropDownChoiceField\", \"0\");\n         formTester.setValue(\"content:details:form:extAttrName:textField\", \"virattr\");\n \n-        wicketTester.executeAjaxEvent(\"body:content:tabbedPanel:panel:\"\n+        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n-        wicketTester.assertRenderedPage(Types.class);\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.assertRenderedPage(Types.class);\n \n         Component result = findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\");\n         assertNotNull(result);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\"), \"onclick\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         result = findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\");\n         assertNull(result);"},{"sha":"a9dac3574f36cd695481abd3039cbee59f94fdd4","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SecurityQuestionsITCase.java","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -36,41 +36,41 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class SecurityQuestionsITCase extends AbstractConsoleITCase {\n \n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:securityquestionsLI:securityquestions\");\n+        TESTER.assertRenderedPage(SecurityQuestions.class);\n+    }\n+\n     private void createRealm(final String name) {\n-        wicketTester.clickLink(\"body:content:securityQuestionPanel:container:content:add\");\n+        TESTER.clickLink(\"body:content:securityQuestionPanel:container:content:add\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         FormTester formTester =\n-                wicketTester.newFormTester(\"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer:form\");\n+                TESTER.newFormTester(\"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n                 name);\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:securityquestionsLI:securityquestions\");\n-    }\n-\n-    @Before\n-    public void login() {\n-        doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        wicketTester.clickLink(\"body:configurationLI:configurationUL:securityquestionsLI:securityquestions\");\n-        wicketTester.assertRenderedPage(SecurityQuestions.class);\n+        TESTER.clickLink(\"body:configurationLI:configurationUL:securityquestionsLI:securityquestions\");\n     }\n \n     @Test\n     public void read() {\n-        Label label = (Label) wicketTester.getComponentFromLastRenderedPage(\n+        Label label = (Label) TESTER.getComponentFromLastRenderedPage(\n                 \"body:content:securityQuestionPanel:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:2:cell\");\n         assertTrue(label.getDefaultModelObjectAsString().startsWith(\"What&#039;s your \"));\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:securityQuestionPanel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable:body:rows:\"\n@@ -91,18 +91,18 @@ public void update() {\n \n         assertNotNull(result);\n \n-        wicketTester.clickLink(result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n+        TESTER.clickLink(result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n \n         FormTester formTester =\n-                wicketTester.newFormTester(\"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer:form\");\n+                TESTER.newFormTester(\"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n                 \"What's your preferred car?\");\n \n-        wicketTester.clickLink(\n+        TESTER.clickLink(\n                 \"body:content:securityQuestionPanel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n@@ -115,15 +115,15 @@ public void delete() {\n                 name);\n         assertNotNull(result);\n \n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"));\n \n-        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n                 result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"), \"onclick\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n         assertNull(findComponentByProp(\"content\",\n                 \"body:content:securityQuestionPanel:container:content:\""},{"sha":"93248be370c0da4e23306cca6cf3f411ea694be9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TestPage.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTestPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTestPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTestPage.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -39,7 +39,6 @@\n     private final S fieldPanel;\n \n     private TestPage(S field, final Builder<T, S> builder) {\n-\n         this.form = builder.form;\n         this.fieldPanel = field;\n "},{"sha":"c7ac3db9040dafa9464ff96702be0871f78ad233","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":138,"deletions":152,"changes":290,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -26,6 +26,7 @@\n import java.util.UUID;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.TogglePanel;\n+import org.apache.syncope.client.console.topology.Topology;\n import org.apache.syncope.client.console.wicket.markup.html.form.NonI18nPalette;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.wicket.Component;\n@@ -42,56 +43,54 @@ public class TopologyITCase extends AbstractConsoleITCase {\n     @Before\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n+        TESTER.clickLink(\"body:topologyLI:topology\");\n+        TESTER.assertRenderedPage(Topology.class);\n     }\n \n     @Test\n     public void showTopology() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-        wicketTester.assertComponent(\"body:syncope\", WebMarkupContainer.class);\n-        wicketTester.assertComponent(\"body:resources:1\", WebMarkupContainer.class);\n-        wicketTester.assertComponent(\"body:resources:2:resources:0\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:syncope\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:resources:1\", WebMarkupContainer.class);\n+        TESTER.assertComponent(\"body:resources:2:resources:0\", WebMarkupContainer.class);\n     }\n \n     @Test\n     public void showTopologyToggleMenu() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-        wicketTester.executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n-        wicketTester.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\",\n+        TESTER.executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n+        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\",\n                 AjaxLink.class);\n-        wicketTester.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:edit\",\n+        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:edit\",\n                 AjaxLink.class);\n-        wicketTester.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\",\n+        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\",\n                 AjaxLink.class);\n-        wicketTester.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\",\n+        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\",\n                 AjaxLink.class);\n-        wicketTester.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:push\",\n+        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:push\",\n                 AjaxLink.class);\n-        wicketTester.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n-        wicketTester.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:tasks\",\n+        TESTER.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n+        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:tasks\",\n                 AjaxLink.class);\n-        wicketTester.executeAjaxEvent(\"body:conns:0:conns:3:conn\", Constants.ON_CLICK);\n-        wicketTester.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:create\",\n+        TESTER.executeAjaxEvent(\"body:conns:0:conns:3:conn\", Constants.ON_CLICK);\n+        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:create\",\n                 AjaxLink.class);\n-        wicketTester.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\",\n+        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\",\n                 AjaxLink.class);\n-        wicketTester.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:edit\",\n+        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:edit\",\n                 AjaxLink.class);\n     }\n \n     @Test\n     public void resourceBulkAction() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-\n         Component component = findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n         assertNotNull(component);\n-        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:status\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:status\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer\", Modal.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:1:outer:form\");\n+        FormTester formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:1:outer:form\");\n         formTester.setValue(\"content:type:dropDownChoiceField\", \"2\");\n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:type:dropDownChoiceField\",\n                 Constants.ON_CHANGE);\n         formTester.setValue(\"content:type:dropDownChoiceField\", \"2\");\n@@ -102,102 +101,99 @@ public void resourceBulkAction() {\n \n         assertNotNull(component);\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:1:outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n     }\n \n     @Test\n     public void editProvisioning() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-\n         Component component = findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n         assertNotNull(component);\n-        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:group:beans:0:actions:panelMapping:mappingLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1\", WebMarkupContainer.class);\n \n-        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:view:mapping:mappingContainer:mappings:1:mappingItemTransformers:icon\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:\"\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:\"\n                 + \"wizard:form:view:mapping:mappingContainer:mappings:0:mappingItemTransformers:alertsLink\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:outerObjectsRepeater:0:outer:container:content:togglePanelContainer:\"\n                 + \"form:classes:paletteField\", NonI18nPalette.class);\n     }\n \n     @Test\n     public void createNewResurceAndProvisionRules() {\n         final String res = UUID.randomUUID().toString();\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:conns:0:conns:0:conn\", Constants.ON_CLICK);\n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:create\", Constants.ON_CLICK);\n \n-        FormTester formTester = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n \n         formTester.setValue(\"view:container:key:textField\", res);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.submit(\"buttons:next\");\n \n         // click on finish to create the external resource \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         // ajax event required to retrieve AjaxRequestTarget (used into finish custom event)\n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:0:outer:form:content:form:buttons:finish\", Constants.ON_CLICK);\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.cleanupFeedbackMessages();\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.clickLink(\"body:topologyLI:topology\");\n \n         Component component = findComponentByProp(\"key\", \"body:resources\", res);\n         assertNotNull(component);\n-        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:add\");\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:add\");\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n \n         formTester.setValue(\"view:container:type:dropDownChoiceField\", \"0\");\n         formTester.setValue(\"view:container:class\", \"__ACCOUNT__\");\n         formTester.submit(\"buttons:next\");\n-        wicketTester.assertNoErrorMessage();\n-        wicketTester.assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n-        wicketTester.assertNoErrorMessage();\n-        wicketTester.assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n \n-        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:view:mapping:mappingContainer:addMappingBtn\", Constants.ON_CLICK);\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n \n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\"\n                 + \":view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", Constants.ON_CHANGE);\n \n@@ -206,86 +202,84 @@ public void createNewResurceAndProvisionRules() {\n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n \n         formTester.submit(\"buttons:next\");\n-        wicketTester.assertNoErrorMessage();\n-        wicketTester.assertNoInfoMessage();\n+        TESTER.assertNoErrorMessage();\n+        TESTER.assertNoInfoMessage();\n \n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n         // ajax event required to retrieve AjaxRequestTarget (used into finish custom event)\n-        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:buttons:finish\", Constants.ON_CLICK);\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", AjaxSubmitLink.class);\n \n-        wicketTester.cleanupFeedbackMessages();\n-        wicketTester.executeAjaxEvent(\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:group:beans:0:actions:panelMapping:mappingLink\");\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:0\", WebMarkupContainer.class);\n \n-        wicketTester.executeAjaxEvent(\n+        TESTER.executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:\"\n                 + \"wizard:form:buttons:cancel\", Constants.ON_CLICK);\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:buttons:0:button\");\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:buttons:0:button\");\n \n-        wicketTester.cleanupFeedbackMessages();\n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\");\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n+        TESTER.clickLink(\"body:topologyLI:topology\");\n         component = findComponentByProp(\"key\", \"body:resources\", res);\n         assertNull(component);\n     }\n \n     @Test\n     public void executePullTask() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-\n         Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n \n         component = findComponentByProp(\"name\", \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"TestDB Task\");\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelExecute:executeLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelExecute:executeLink\");\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:startAt:container:content:togglePanelContainer:startAtForm:startAt\");\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n         component = findComponentByProp(\"name\", \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"TestDB Task\");\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelView:viewLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelView:viewLink\");\n \n-        wicketTester.assertLabel(\n+        TESTER.assertLabel(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:title\",\n                 \"Executions of task &#039;TestDB Task&#039;\");\n \n         int iteration = 0;\n         do {\n             try {\n-                wicketTester.assertComponent(\n+                TESTER.assertComponent(\n                         \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:\"\n                         + \"second:executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n                         + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:6:cell:panelView:viewLink\",\n@@ -303,202 +297,194 @@ public void executePullTask() {\n                         + \"executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n                         + \"tablePanel:groupForm:checkgroup:dataTable:topToolbars:toolbars:1:headers\", \"panelReload\");\n \n-                wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":reloadLink\", Constants.ON_CLICK);\n+                TESTER.executeAjaxEvent(component.getPageRelativePath() + \":reloadLink\", Constants.ON_CLICK);\n                 iteration++;\n             }\n         } while (iteration < 10);\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:\"\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:\"\n                 + \"second:executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:6:cell:panelView:viewLink\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:second:executions:secondLevelContainer:title\", Label.class);\n     }\n \n     @Test\n     public void readPropagationTaskExecutions() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-\n         Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 WebMarkupContainer.class);\n \n         component = findComponentByProp(\"operation\", \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", ResourceOperation.CREATE);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelExecute:executeLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelExecute:executeLink\");\n \n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n+        TESTER.clickLink(\"body:topologyLI:topology\");\n \n         component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n \n         component = findComponentByProp(\"operation\", \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", ResourceOperation.CREATE);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelView:viewLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:10:cell:panelView:viewLink\");\n \n-        wicketTester.assertLabel(\n+        TESTER.assertLabel(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:title\",\n                 \"CREATE task about USER\");\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n                 + \"second:executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:6:cell:panelView:viewLink\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:second:executions:secondLevelContainer:title\", Label.class);\n     }\n \n     @Test\n     public void editPushTask() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-\n         Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-ldap\");\n         assertNotNull(component);\n-        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:push\");\n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:push\");\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:9:cell:panelEdit:editLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:\"\n                 + \"tasks:firstLevelContainer:first:container:content:wizard:form\");\n         formTester.setValue(\"view:description:textField\", \"test\");\n         formTester.submit(\"buttons:next\");\n \n-        wicketTester.assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        TESTER.assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form:view:filters:0:filters:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:\"\n                 + \"value:textField\", \"_NO_ONE_\");\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:\"\n                 + \"tasks:firstLevelContainer:first:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void createSchedTask() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-        wicketTester.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:tasks\");\n-        wicketTester.clickLink(\n+        TESTER.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:tasks\");\n+        TESTER.clickLink(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:add\");\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"test\");\n         formTester.select(\"view:jobDelegateClassName:dropDownChoiceField\", 0);\n \n         formTester.submit(\"buttons:next\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:wizard:form\");\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:wizard:form:view:schedule:seconds:textField\", TextField.class);\n \n         formTester.submit(\"buttons:finish\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void addGroupTemplate() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-\n         Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        wicketTester.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n+        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:10:cell:panelTemplate:templateLink\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);\n \n-        FormTester formTester = wicketTester.newFormTester(\n+        FormTester formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:container:\"\n                 + \"content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n \n         formTester.setValue(\"type:dropDownChoiceField\", \"1\");\n         formTester.submit(\"changeit\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n \n-        formTester = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"'k' + name\");\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1:cells:10:cell:panelTemplate:templateLink\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);\n \n-        formTester = wicketTester.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:container:\"\n                 + \"content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n \n         formTester.setValue(\"type:dropDownChoiceField\", \"1\");\n         formTester.submit(\"changeit\");\n \n-        wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n+        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n \n-        wicketTester.assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        TESTER.assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form:view:name:textField\",\n                 \"'k' + name\");\n \n-        formTester = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"\");\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void reloadConnectors() {\n-        wicketTester.clickLink(\"body:topologyLI:topology\");\n-        wicketTester.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n-        wicketTester.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:reload\",\n+        TESTER.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n+        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:reload\",\n                 AjaxLink.class);\n \n-        wicketTester.cleanupFeedbackMessages();\n-        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n-        wicketTester.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:reload\");\n+        TESTER.cleanupFeedbackMessages();\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:reload\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n }"},{"sha":"cdbc51494c217a15c8be61115d14c488a37d8e6c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":70,"deletions":70,"changes":140,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=87aa699fb9c363555c40311a1fb7dcf2ddf3e8ef","patch":"@@ -25,19 +25,19 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.util.tester.FormTester;\n-import org.junit.Before;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n+import org.junit.Before;\n \n @FixMethodOrder(MethodSorters.JVM)\n public class UsersITCase extends AbstractConsoleITCase {\n \n-    private final String tabPanel = \"body:content:body:tabbedPanel:panel:searchResult:\";\n+    private static final String TAB_PANEL = \"body:content:body:tabbedPanel:panel:searchResult:\";\n \n-    private final String searchResultContainer = tabPanel + \"container:content:\";\n+    private static final String SEARCH_RES_CONTAINER = TAB_PANEL + \"container:content:\";\n \n     @Before\n     public void login() {\n@@ -46,209 +46,209 @@ public void login() {\n \n     @Test\n     public void filteredSearch() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n+        TESTER.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n                 + \"searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n \n-        wicketTester.assertComponent(\n+        TESTER.assertComponent(\n                 \"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:searchFormContainer:search:\"\n                 + \"multiValueContainer:innerForm:content:view:0:panel:container:value:textField\", TextField.class);\n     }\n \n     @Test\n     public void forceChangePassword() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", searchResultContainer\n+        Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"verdi\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath()\n+        TESTER.clickLink(component.getPageRelativePath()\n                 + \":cells:6:cell:panelMustChangePassword:MustChangePasswordLink\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n     }\n \n     @Test\n     public void clickToCloneUser() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", searchResultContainer\n+        Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelClone:cloneLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelClone:cloneLink\");\n \n-        wicketTester.\n-                assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+        TESTER.\n+                assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                         TextField.class);\n \n-        FormTester formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:cancel\");\n     }\n \n     @Test\n     public void editUser() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", searchResultContainer\n+        Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n \n-        wicketTester.\n-                assertComponent(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+        TESTER.\n+                assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                         TextField.class);\n \n-        FormTester formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n-        wicketTester.assertComponent(tabPanel\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        wicketTester.clickLink(tabPanel + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n \n-        component = findComponentByProp(\"username\", searchResultContainer\n+        component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n     }\n \n     @Test\n     public void editUserMembership() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n-        wicketTester.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:1:button\",\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:1:button\",\n                 Constants.ON_CLICK);\n \n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", searchResultContainer\n+        Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNull(component);\n \n-        component = findComponentByProp(\"username\", searchResultContainer\n+        component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n \n-        FormTester formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.setValue(\"view:groups:paletteField:recorder\", \"additional,root,otherchild\");\n-        wicketTester.executeAjaxEvent(\n-                tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\n+                TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n-        wicketTester.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n+        TESTER.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n                 Constants.ON_CLICK);\n \n         formTester.setValue(\"view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:0:panel:spinner\", \"1\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        wicketTester.assertComponent(tabPanel\n+        TESTER.assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        wicketTester.clickLink(tabPanel + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n+        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\");\n \n-        component = findComponentByProp(\"username\", searchResultContainer\n+        component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         // reset ....\n-        wicketTester.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n+        TESTER.clickLink(component.getPageRelativePath() + \":cells:6:cell:panelEdit:editLink\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = wicketTester.newFormTester(tabPanel + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.setValue(\"view:groups:paletteField:recorder\", \"root,otherchild\");\n-        wicketTester.executeAjaxEvent(\n-                tabPanel + \"outerObjectsRepeater:0:outer:form:content:form:buttons:finish\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\n+                TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:finish\", Constants.ON_CLICK);\n \n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void checkDeleteUsrLink() {\n-        wicketTester.clickLink(\"body:realmsLI:realms\");\n-        wicketTester.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n+        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", searchResultContainer\n+        Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        wicketTester.assertComponent(component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\",\n+        TESTER.assertComponent(component.getPageRelativePath() + \":cells:6:cell:panelDelete:deleteLink\",\n                 IndicatingOnConfirmAjaxLink.class);\n     }\n }"}]}