{"sha":"729cf5b3206435a2526e92cea759f249e964ce9d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjcyOWNmNWIzMjA2NDM1YTI1MjZlOTJjZWE3NTlmMjQ5ZTk2NGNlOWQ=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-14T13:07:25Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-14T13:07:25Z"},"message":"refactoring to manage the command line parameters without external library, SYNCOPE-158","tree":{"sha":"6c0a41c269fa4ef11f9c67adb7c30668573db4d2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6c0a41c269fa4ef11f9c67adb7c30668573db4d2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/729cf5b3206435a2526e92cea759f249e964ce9d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/729cf5b3206435a2526e92cea759f249e964ce9d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/729cf5b3206435a2526e92cea759f249e964ce9d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/729cf5b3206435a2526e92cea759f249e964ce9d/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"009a87e08da8fd62ffff22f6683bb5726220d7c2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/009a87e08da8fd62ffff22f6683bb5726220d7c2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/009a87e08da8fd62ffff22f6683bb5726220d7c2"}],"stats":{"total":646,"additions":492,"deletions":154},"files":[{"sha":"d68c6a138d3bed910c80a4129aee86d7bab73293","filename":"client/cli/pom.xml","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fpom.xml?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -40,17 +40,22 @@ under the License.\n   </properties>\n   \n   <dependencies>\n-    <dependency>\n-      <groupId>com.beust</groupId>\n-      <artifactId>jcommander</artifactId>\n-    </dependency>\n     \n     <dependency>\n       <groupId>org.apache.syncope.client</groupId>\n       <artifactId>syncope-client-lib</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>org.jasypt</groupId>\n+      <artifactId>jasypt</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-context</artifactId>\n+    </dependency>\n+    \n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-api</artifactId>\n@@ -117,7 +122,7 @@ under the License.\n               <transformers>\n                 <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n                   <manifestEntries>\n-                    <Main-Class>org.apache.syncope.cli.SyncopeAdm</Main-Class>\n+                    <Main-Class>org.apache.syncope.client.cli.SyncopeAdm</Main-Class>\n                   </manifestEntries>\n                 </transformer>\n                 <transformer implementation=\"org.apache.maven.plugins.shade.resource.IncludeResourceTransformer\">"},{"sha":"f323dce7bc77946a1e88378dcec16e058f77e082","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/ArgsManager.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FArgsManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FArgsManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FArgsManager.java?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli;\n+\n+import java.io.File;\n+import org.apache.syncope.client.cli.commands.install.InstallConfigFileTemplate;\n+\n+public final class ArgsManager {\n+\n+    public static void validator(final String[] args) throws IllegalArgumentException {\n+        if (args.length == 0) {\n+            throw new IllegalArgumentException();\n+        } else if (!\"install\".equalsIgnoreCase(args[0])) {\n+            final File configFile = new File(InstallConfigFileTemplate.FILE_PATH);\n+            if (!configFile.exists()) {\n+                throw new IllegalArgumentException(\n+                        \"It seems you need to setup the CLI client before. Run install --setup.\");\n+            }\n+        }\n+    }\n+\n+    public static String[] operands(final String[] args) {\n+        final String[] operands = new String[args.length - 1];\n+        for (int i = 1; i < args.length; i++) {\n+            operands[i - 1] = args[i];\n+        }\n+        return operands;\n+    }\n+\n+    private ArgsManager() {\n+        // private constructor for static utility class\n+    }\n+\n+}"},{"sha":"7d326a861e9137df0cb4611a27ec1fef491ee7ff","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/AvailableServices.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FAvailableServices.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FAvailableServices.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FAvailableServices.java?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli;\n+\n+public enum AvailableServices {\n+\n+    logger,\n+    config,\n+    notification,\n+    report,\n+    policy,\n+    entitlement,\n+    schema;\n+\n+}"},{"sha":"2c36dd8423d0c962fd41bf9bbc66296a01d705af","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/Command.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommand.java?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(value = RetentionPolicy.RUNTIME)\n+@Target(value = ElementType.TYPE)\n+public @interface Command {\n+\n+    String name();\n+\n+}"},{"sha":"e19f02455add499b325a4e83fac7837866c8c7b0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/CommandClassScanner.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommandClassScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommandClassScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FCommandClassScanner.java?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli;\n+\n+import org.springframework.core.type.filter.AnnotationTypeFilter;\n+\n+public class CommandClassScanner extends ComponentClassScanner {\n+\n+    public CommandClassScanner() {\n+        super();\n+        addIncludeFilter(new AnnotationTypeFilter(Command.class));\n+    }\n+}"},{"sha":"c344596066afda7ea74df78fa77edec3fb3a81f1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/ComponentClassScanner.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FComponentClassScanner.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FComponentClassScanner.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FComponentClassScanner.java?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n+import org.springframework.util.ClassUtils;\n+\n+public abstract class ComponentClassScanner<T> extends ClassPathScanningCandidateComponentProvider {\n+\n+    public ComponentClassScanner() {\n+        super(false);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public final List<Class<? extends T>> getComponentClasses() throws IllegalArgumentException {\n+        final String basePackage = \"org.apache.syncope.client.cli.commands\";\n+        List<Class<? extends T>> classes = new ArrayList<>();\n+        for (final BeanDefinition candidate : findCandidateComponents(basePackage)) {\n+            final Class cls = ClassUtils.\n+                    resolveClassName(candidate.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n+            classes.add((Class) cls);\n+        }\n+        return classes;\n+    }\n+}"},{"sha":"a7092e72f2d89d100304922a52eac47aad172012","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/Input.java","status":"added","additions":134,"deletions":0,"changes":134,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -0,0 +1,134 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+public class Input {\n+\n+    private boolean ssl = false;\n+\n+    private String host = \"localhost\";\n+\n+    private String port = \"9080\";\n+\n+    private String username = \"admin\";\n+\n+    private String password = \"password\";\n+\n+    private final AbstractCommand command;\n+\n+    private String option;\n+\n+    private final String[] parameters;\n+\n+    public Input(final String[] args)\n+            throws InstantiationException, IllegalAccessException, IllegalArgumentException {\n+\n+        command = fromArgs(args[0]);\n+\n+        if (args.length > 1) {\n+            option = args[1];\n+        }\n+\n+        if (args.length > 2) {\n+            parameters = new String[args.length - 2];\n+            for (int i = 0; i < parameters.length; i++) {\n+                parameters[i] = args[i + 2];\n+            }\n+        } else {\n+            parameters = new String[0];\n+        }\n+    }\n+\n+    public AbstractCommand getCommand() {\n+        return command;\n+    }\n+\n+    public void setOption(final String option) {\n+        this.option = option;\n+    }\n+\n+    public String getOption() {\n+        return option;\n+    }\n+\n+    public String[] getParameters() {\n+        return parameters;\n+    }\n+\n+    public String firstParameter() {\n+        return parameters[0];\n+    }\n+    \n+    public String lastParameter() {\n+        return parameters[parameters.length - 1];\n+    }\n+\n+    public PairParameter toPairParameter(final String parameter) throws IllegalArgumentException {\n+        if (!parameter.contains(\"=\")) {\n+            throw new IllegalArgumentException(\"Parameter syntax error!\");\n+        }\n+        final String[] pairParameterArray = parameter.split(\"=\");\n+        return new PairParameter(pairParameterArray[0], pairParameterArray[1]);\n+    }\n+\n+    private AbstractCommand fromArgs(final String arg)\n+            throws InstantiationException, IllegalAccessException, IllegalArgumentException {\n+\n+        final CommandClassScanner ccs = new CommandClassScanner();\n+        final List<Class<? extends AbstractCommand>> commands = ccs.getComponentClasses();\n+\n+        Class<? extends AbstractCommand> commandClass = null;\n+        for (Class<? extends AbstractCommand> cmd : commands) {\n+            if (arg.equals(cmd.getAnnotation(Command.class).name())) {\n+                commandClass = cmd;\n+            }\n+        }\n+\n+        if (commandClass == null) {\n+            throw new IllegalArgumentException();\n+        }\n+\n+        return commandClass.newInstance();\n+\n+    }\n+\n+    public class PairParameter {\n+\n+        private final String key;\n+\n+        private final String value;\n+\n+        public PairParameter(final String key, final String value) {\n+            this.key = key;\n+            this.value = value;\n+        }\n+\n+        public String getKey() {\n+            return key;\n+        }\n+\n+        public String getValue() {\n+            return value;\n+        }\n+\n+    }\n+}"},{"sha":"2f762e7d30f3a83e21a68d1a46314711de36305d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeAdm.java","status":"modified","additions":16,"deletions":70,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -18,13 +18,7 @@\n  */\n package org.apache.syncope.client.cli;\n \n-import com.beust.jcommander.JCommander;\n-import com.beust.jcommander.ParameterException;\n-import org.apache.syncope.client.cli.commands.ConfigurationCommand;\n-import org.apache.syncope.client.cli.commands.LoggerCommand;\n-import org.apache.syncope.client.cli.commands.NotificationCommand;\n-import org.apache.syncope.client.cli.commands.PolicyCommand;\n-import org.apache.syncope.client.cli.commands.ReportCommand;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -39,80 +33,32 @@ public final class SyncopeAdm {\n             + \"    notification --help \\n\"\n             + \"    report --help \\n\"\n             + \"    policy --help \\n\"\n-            + \"    entitlement --help \\n\";\n-\n-    private static final JCommander JCOMMANDER = new JCommander();\n-\n-    private static LoggerCommand LOGGER_COMMAND;\n-\n-    private static ConfigurationCommand CONFIGURATION_COMMAND;\n-\n-    private static NotificationCommand NOTIFICATION_COMMAND;\n-\n-    private static ReportCommand REPORT_COMMAND;\n-\n-    private static PolicyCommand POLICY_COMMAND;\n+            + \"    entitlement --help \\n\"\n+            + \"    schema --help \\n\";\n \n     public static void main(final String[] args) {\n         LOG.debug(\"Starting with args \\n\");\n \n-        for (final String arg : args) {\n-            LOG.debug(\"Arg: {}\", arg);\n-        }\n-\n-        instantiateCommands();\n-\n-        if (args.length == 0) {\n+        try {\n+            ArgsManager.validator(args);\n+            final Input input = new Input(args);\n+            final AbstractCommand command = input.getCommand();\n+            command.execute(input);\n+        } catch (final IllegalAccessException | InstantiationException e) {\n+            LOG.error(\"Error in main\", e);\n+            e.printStackTrace();\n             System.out.println(HELP_MESSAGE);\n-        } else {\n-            try {\n-                JCOMMANDER.parse(args);\n-            } catch (final ParameterException ioe) {\n+        } catch (final IllegalArgumentException ex) {\n+            LOG.error(\"Error in main\", ex);\n+            if (ex.getMessage().startsWith(\"It seems you need to setup\")) {\n+                System.out.println(ex.getMessage());\n+            } else {\n                 System.out.println(HELP_MESSAGE);\n-                LOG.error(\"Parameter exception\", ioe);\n             }\n-            executeCommand();\n         }\n \n     }\n \n-    private static void instantiateCommands() {\n-        LOG.debug(\"Init JCommander\");\n-        LOGGER_COMMAND = new LoggerCommand();\n-        JCOMMANDER.addCommand(LOGGER_COMMAND);\n-        LOG.debug(\"Added LoggerCommand\");\n-        CONFIGURATION_COMMAND = new ConfigurationCommand();\n-        JCOMMANDER.addCommand(CONFIGURATION_COMMAND);\n-        LOG.debug(\"Added ConfigurationCommand\");\n-        NOTIFICATION_COMMAND = new NotificationCommand();\n-        JCOMMANDER.addCommand(NOTIFICATION_COMMAND);\n-        LOG.debug(\"Added NotificationCommand\");\n-        REPORT_COMMAND = new ReportCommand();\n-        JCOMMANDER.addCommand(REPORT_COMMAND);\n-        LOG.debug(\"Added ReportCommand\");\n-        POLICY_COMMAND = new PolicyCommand();\n-        JCOMMANDER.addCommand(POLICY_COMMAND);\n-        LOG.debug(\"Added PolicyCommand\");\n-    }\n-\n-    private static void executeCommand() {\n-        final String command = JCOMMANDER.getParsedCommand();\n-\n-        LOG.debug(\"Called command {}\", command);\n-\n-        if (\"logger\".equalsIgnoreCase(command)) {\n-            LOGGER_COMMAND.execute();\n-        } else if (\"config\".equalsIgnoreCase(command)) {\n-            CONFIGURATION_COMMAND.execute();\n-        } else if (\"notification\".equalsIgnoreCase(command)) {\n-            NOTIFICATION_COMMAND.execute();\n-        } else if (\"report\".equalsIgnoreCase(command)) {\n-            REPORT_COMMAND.execute();\n-        } else if (\"policy\".equalsIgnoreCase(command)) {\n-            POLICY_COMMAND.execute();\n-        }\n-    }\n-\n     private SyncopeAdm() {\n         // private constructor for static utility class\n     }"},{"sha":"0fc5b3324fbfcbf6c371174322fe7fecaae22cce","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeServices.java","status":"modified","additions":25,"deletions":7,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -18,7 +18,11 @@\n  */\n package org.apache.syncope.client.cli;\n \n-import java.util.ResourceBundle;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.Properties;\n+import org.apache.syncope.client.cli.commands.install.InstallConfigFileTemplate;\n+import org.apache.syncope.client.cli.util.JasyptUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.slf4j.Logger;\n@@ -28,15 +32,29 @@ public final class SyncopeServices {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeServices.class);\n \n-    private static final ResourceBundle SYNCOPE_PROPS = ResourceBundle.getBundle(\"syncope\");\n-\n-    private static final SyncopeClient CLIENT = new SyncopeClientFactoryBean()\n-            .setAddress(SYNCOPE_PROPS.getString(\"syncope.rest.services\"))\n-            .create(SYNCOPE_PROPS.getString(\"syncope.user\"), SYNCOPE_PROPS.getString(\"syncope.password\"));\n+    private static String SYNCOPE_ADDRESS;\n \n     public static <T> T get(final Class<T> claz) {\n+        final Properties properties = new Properties();\n+        try {\n+            properties.load(new FileInputStream(InstallConfigFileTemplate.FILE_PATH));\n+        } catch (final IOException e) {\n+            LOG.error(\"Error opening properties file\", e);\n+        }\n+\n+        final String syncopeAdminPassword = JasyptUtils.getJasyptUtils().decrypt(properties.getProperty(\n+                \"syncope.admin.password\"));\n+        SYNCOPE_ADDRESS = properties.getProperty(\"syncope.rest.services\");\n+        final SyncopeClient syncopeClient = new SyncopeClientFactoryBean()\n+                .setAddress(SYNCOPE_ADDRESS)\n+                .create(properties.getProperty(\"syncope.admin.user\"), syncopeAdminPassword);\n+\n         LOG.debug(\"Creting service for {}\", claz.getName());\n-        return CLIENT.getService(claz);\n+        return syncopeClient.getService(claz);\n+    }\n+\n+    public static String getAddress() {\n+        return SYNCOPE_ADDRESS;\n     }\n \n     private SyncopeServices() {"},{"sha":"355e69c84d51e9af65354f92a738a0586381f75c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/FileSystemUtils.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.util;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.PrintWriter;\n+import java.io.UnsupportedEncodingException;\n+\n+public final class FileSystemUtils {\n+\n+    public static void createNewDirectory(final String directoryToCreate) {\n+        final File directory = new File(directoryToCreate);\n+        directory.mkdirs();\n+    }\n+\n+    public static void createFileWith(final String filePath, final String content)\n+            throws FileNotFoundException, UnsupportedEncodingException {\n+        try (PrintWriter writer = new PrintWriter(filePath, \"UTF-8\")) {\n+            writer.println(content);\n+        }\n+    }\n+\n+    public static boolean canWrite(final String path) {\n+        final File installationDirectory = new File(path);\n+        return installationDirectory.canWrite();\n+    }\n+    \n+    private FileSystemUtils() {\n+        \n+    }\n+}"},{"sha":"4e4551c779a2d2fb094e40bfbf5cc0d5792ea5a3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/JasyptUtils.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.util;\n+\n+import org.jasypt.util.text.StrongTextEncryptor;\n+\n+public final class JasyptUtils {\n+\n+    private final StrongTextEncryptor textEncryptor;\n+\n+    private static JasyptUtils JASYPT_UTILS = null;\n+\n+    public static JasyptUtils getJasyptUtils() {\n+        if (JASYPT_UTILS == null) {\n+            JASYPT_UTILS = new JasyptUtils();\n+        }\n+        return JASYPT_UTILS;\n+    }\n+\n+    private JasyptUtils() {\n+        textEncryptor = new StrongTextEncryptor();\n+        textEncryptor.setPassword(\"Ka9s8yadaisj9mud87ssdaifansy\");\n+    }\n+\n+    public String encrypt(final String password) {\n+        return textEncryptor.encrypt(password);\n+    }\n+\n+    public String decrypt(final String encryptedString) {\n+        return textEncryptor.decrypt(encryptedString);\n+    }\n+\n+}"},{"sha":"1ce85f8dc38901fc3d56f984d305c7e6b30b1a43","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/validators/DebugLevelValidator.java","status":"removed","additions":0,"deletions":60,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/009a87e08da8fd62ffff22f6683bb5726220d7c2/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fvalidators%2FDebugLevelValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/009a87e08da8fd62ffff22f6683bb5726220d7c2/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fvalidators%2FDebugLevelValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fvalidators%2FDebugLevelValidator.java?ref=009a87e08da8fd62ffff22f6683bb5726220d7c2","patch":"@@ -1,60 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.validators;\n-\n-import com.beust.jcommander.IParameterValidator;\n-\n-public class DebugLevelValidator implements IParameterValidator {\n-\n-    @Override\n-    public void validate(final String name, final String value) {\n-        if (!Levels.contains(value)) {\n-            final StringBuilder exceptionMessage = new StringBuilder();\n-            exceptionMessage.append(\"Parameter \")\n-                    .append(name)\n-                    .append(\" should be :\\n\");\n-            for (final Levels l : Levels.values()) {\n-                exceptionMessage.append(l).append(\"\\n\");\n-            }\n-            System.out.println(\">>>> \" + exceptionMessage.toString());\n-        }\n-    }\n-\n-    private enum Levels {\n-\n-        OFF,\n-        FATAL,\n-        ERROR,\n-        WARN,\n-        INFO,\n-        DEBUG,\n-        TRACE,\n-        ALL;\n-\n-        public static boolean contains(final String name) {\n-            for (final Levels c : Levels.values()) {\n-                if (c.name().equals(name)) {\n-                    return true;\n-                }\n-            }\n-            return false;\n-        }\n-    }\n-\n-}"},{"sha":"245a781b7b96d8e4280716517b24dbe9da0af71d","filename":"client/cli/src/main/resources/configuration.properties","status":"renamed","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -14,6 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-syncope.rest.services=http://localhost:9080/syncope/rest/\n-syncope.user=admin\n-syncope.password=password\n+cli.installation.directory=/var/tmp/syncope/conf/\n+cli.installation.filename=cli.properties","previous_filename":"client/cli/src/main/resources/syncope.properties"},{"sha":"fce9c8b79c49113ecca495b978416bbc716bd36c","filename":"client/cli/src/main/resources/log4j2.xml","status":"modified","additions":22,"deletions":2,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -41,15 +41,35 @@ under the License.\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n     \n-    <asyncLogger name=\"org.apache.syncope.cli\" additivity=\"false\" level=\"DEBUG\">\n+    <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"OFF\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.cxf.interceptor\" additivity=\"false\" level=\"OFF\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.http\" additivity=\"false\" level=\"OFF\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.springframework\" additivity=\"false\" level=\"OFF\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.syncope.cli\" additivity=\"false\" level=\"OFF\">\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n     \n     <asyncLogger name=\"org.apache.syncope.client\" additivity=\"false\" level=\"OFF\">\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.syncope.common\" additivity=\"false\" level=\"OFF\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n \n-    <root level=\"DEBUG\">\n+    <root level=\"OFF\">\n       <appender-ref ref=\"main\"/>\n     </root>\n   "},{"sha":"f12e9b5f60002d3d42b176d747bf57482035b4af","filename":"pom.xml","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/729cf5b3206435a2526e92cea759f249e964ce9d/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/729cf5b3206435a2526e92cea759f249e964ce9d/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=729cf5b3206435a2526e92cea759f249e964ce9d","patch":"@@ -999,13 +999,6 @@ under the License.\n         <artifactId>jquery-cookie</artifactId>\n         <version>${jquery-cookie.version}</version>\n       </dependency>\n-\n-            \n-      <dependency>\n-        <groupId>com.beust</groupId>\n-        <artifactId>jcommander</artifactId>\n-        <version>1.47</version>\n-      </dependency>\n       \n       <dependency>\n         <groupId>org.codehaus.izpack</groupId>"}]}