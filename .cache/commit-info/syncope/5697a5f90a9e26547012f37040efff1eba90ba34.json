{"sha":"5697a5f90a9e26547012f37040efff1eba90ba34","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU2OTdhNWY5MGE5ZTI2NTQ3MDEyZjM3MDQwZWZmZjFlYmE5MGJhMzQ=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"marco.disabatino@tirasa.net","date":"2017-10-30T14:41:19Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"marco.disabatino@tirasa.net","date":"2017-10-30T14:44:34Z"},"message":"Improved the reading of the fields of a bean for the building of the form","tree":{"sha":"d5836c7203b3fff6a5462c472b7fb0ef9032db2e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d5836c7203b3fff6a5462c472b7fb0ef9032db2e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5697a5f90a9e26547012f37040efff1eba90ba34","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5697a5f90a9e26547012f37040efff1eba90ba34","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5697a5f90a9e26547012f37040efff1eba90ba34","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5697a5f90a9e26547012f37040efff1eba90ba34/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb"}],"stats":{"total":27,"additions":16,"deletions":11},"files":[{"sha":"cc8d75d840e289b65649d8dc7565441b6db859e5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/BeanPanel.java","status":"modified","additions":16,"deletions":11,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5697a5f90a9e26547012f37040efff1eba90ba34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5697a5f90a9e26547012f37040efff1eba90ba34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java?ref=5697a5f90a9e26547012f37040efff1eba90ba34","patch":"@@ -65,6 +65,9 @@\n import org.springframework.beans.BeanWrapper;\n import org.springframework.beans.PropertyAccessorFactory;\n import org.springframework.util.ClassUtils;\n+import org.springframework.util.ReflectionUtils;\n+import org.springframework.util.ReflectionUtils.FieldCallback;\n+import org.springframework.util.ReflectionUtils.FieldFilter;\n \n public class BeanPanel<T extends Serializable> extends Panel {\n \n@@ -100,16 +103,23 @@ public BeanPanel(\n \n             @Override\n             protected List<String> load() {\n-                List<String> result = new ArrayList<>();\n+                final List<String> result = new ArrayList<>();\n \n                 if (BeanPanel.this.getDefaultModelObject() != null) {\n-                    for (Field field : BeanPanel.this.getDefaultModelObject().getClass().getDeclaredFields()) {\n-                        if (!BeanPanel.this.excluded.contains(field.getName())) {\n+                    ReflectionUtils.doWithFields(BeanPanel.this.getDefaultModelObject().getClass(),\n+                            new FieldCallback() {\n+\n+                        public void doWith(final Field field) throws IllegalArgumentException, IllegalAccessException {\n                             result.add(field.getName());\n                         }\n-                    }\n-                }\n \n+                    }, new FieldFilter() {\n+\n+                        public boolean matches(final Field field) {\n+                            return !BeanPanel.this.excluded.contains(field.getName());\n+                        }\n+                    });\n+                }\n                 return result;\n             }\n         };\n@@ -125,12 +135,7 @@ protected void populateItem(final ListItem<String> item) {\n \n                 item.add(new Label(\"fieldName\", new ResourceModel(fieldName, fieldName)));\n \n-                Field field = null;\n-                try {\n-                    field = bean.getObject().getClass().getDeclaredField(fieldName);\n-                } catch (NoSuchFieldException | SecurityException e) {\n-                    LOG.error(\"Could not find field {} in class {}\", fieldName, bean.getObject().getClass(), e);\n-                }\n+                Field field = ReflectionUtils.findField(bean.getObject().getClass(), fieldName);\n \n                 if (field == null) {\n                     return;"}]}