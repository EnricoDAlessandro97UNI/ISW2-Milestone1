{"sha":"3aa5ceb33c7909acae5191f80c975c1768f445fb","node_id":"C_kwDOJfYA1toAKDNhYTVjZWIzM2M3OTA5YWNhZTUxOTFmODBjOTc1YzE3NjhmNDQ1ZmI","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2023-04-24T12:56:42Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2023-04-24T12:56:42Z"},"message":"Fixing Spring Security 7 deprecations (#445)","tree":{"sha":"35c48e392d8e40c6ef33f9e4436ca5e1f2bce925","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/35c48e392d8e40c6ef33f9e4436ca5e1f2bce925"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3aa5ceb33c7909acae5191f80c975c1768f445fb","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkRnyKCRBK7hj4Ov3rIwAAFdcIAH5RO14YyeYXipATSWLfc3OJ\nS2mLDYJTVuQsgRKhr3wUoNvgTklnaUhhmjttplIpSCUKX9Z2t7ky1ZqyI9H7NAaQ\nK34Q8FEn+3D7d8RtByBJWwCSnn0KTfy+ZisGeKQWF2cEsUVd/ynrapFOyTbyNoTA\n+ycBmI5dMFuyb76RRavvSk9j57UjPliYw3iJj/fWI5H4XSd3eLk+OvenJQ7Sou90\n2nZRJ7h2D0RTU+wxNFTF0+VhWtYKHjtaFP9/T9/t+740dhYpmbDQWlR3vz1R82pY\nOwi5nsysEZQSAEGhsTxXbpDT/1JFBpj2RnztsUgXv/HJsuvAQwueyAIFnpunwMY=\n=dCpR\n-----END PGP SIGNATURE-----\n","payload":"tree 35c48e392d8e40c6ef33f9e4436ca5e1f2bce925\nparent d2b98e4a012ee42a39d4aa5372a930f4f21a5de1\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1682341002 +0200\ncommitter GitHub <noreply@github.com> 1682341002 +0200\n\nFixing Spring Security 7 deprecations (#445)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3aa5ceb33c7909acae5191f80c975c1768f445fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3aa5ceb33c7909acae5191f80c975c1768f445fb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3aa5ceb33c7909acae5191f80c975c1768f445fb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"d2b98e4a012ee42a39d4aa5372a930f4f21a5de1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d2b98e4a012ee42a39d4aa5372a930f4f21a5de1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d2b98e4a012ee42a39d4aa5372a930f4f21a5de1"}],"stats":{"total":126,"additions":72,"deletions":54},"files":[{"sha":"73850f5888019c0e92a606820fa76b001d988754","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SecurityConfig.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aa5ceb33c7909acae5191f80c975c1768f445fb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSecurityConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aa5ceb33c7909acae5191f80c975c1768f445fb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSecurityConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSecurityConfig.java?ref=3aa5ceb33c7909acae5191f80c975c1768f445fb","patch":"@@ -22,8 +22,10 @@\n import org.springframework.boot.actuate.autoconfigure.security.servlet.EndpointRequest;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.security.config.Customizer;\n import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;\n import org.springframework.security.core.userdetails.User;\n import org.springframework.security.core.userdetails.UserDetails;\n import org.springframework.security.core.userdetails.UserDetailsService;\n@@ -38,13 +40,13 @@ public class SecurityConfig {\n     @Bean\n     public SecurityFilterChain filterChain(final HttpSecurity http) throws Exception {\n         EndpointRequest.EndpointRequestMatcher actuatorEndpoints = EndpointRequest.toAnyEndpoint();\n-\n-        http.csrf().disable().\n-                authorizeHttpRequests().\n+        http.authorizeHttpRequests(customizer -> customizer.\n                 requestMatchers(new NegatedRequestMatcher(actuatorEndpoints)).permitAll().\n-                requestMatchers(actuatorEndpoints).authenticated().\n-                and().\n-                httpBasic();\n+                requestMatchers(actuatorEndpoints).authenticated());\n+\n+        http.httpBasic(Customizer.withDefaults());\n+        http.csrf(AbstractHttpConfigurer::disable);\n+\n         return http.build();\n     }\n "},{"sha":"327ced58c9f6d9a68cfecb2864df2b7275264b55","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SecurityConfig.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aa5ceb33c7909acae5191f80c975c1768f445fb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSecurityConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aa5ceb33c7909acae5191f80c975c1768f445fb/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSecurityConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSecurityConfig.java?ref=3aa5ceb33c7909acae5191f80c975c1768f445fb","patch":"@@ -22,8 +22,10 @@\n import org.springframework.boot.actuate.autoconfigure.security.servlet.EndpointRequest;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.security.config.Customizer;\n import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;\n import org.springframework.security.core.userdetails.User;\n import org.springframework.security.core.userdetails.UserDetails;\n import org.springframework.security.core.userdetails.UserDetailsService;\n@@ -38,13 +40,13 @@ public class SecurityConfig {\n     @Bean\n     public SecurityFilterChain filterChain(final HttpSecurity http) throws Exception {\n         EndpointRequest.EndpointRequestMatcher actuatorEndpoints = EndpointRequest.toAnyEndpoint();\n-\n-        http.csrf().disable().\n-                authorizeHttpRequests().\n+        http.authorizeHttpRequests(customizer -> customizer.\n                 requestMatchers(new NegatedRequestMatcher(actuatorEndpoints)).permitAll().\n-                requestMatchers(actuatorEndpoints).authenticated().\n-                and().\n-                httpBasic();\n+                requestMatchers(actuatorEndpoints).authenticated());\n+\n+        http.httpBasic(Customizer.withDefaults());\n+        http.csrf(AbstractHttpConfigurer::disable);\n+\n         return http.build();\n     }\n "},{"sha":"df004da7ef6fcf29b8588bdc26f2608ffc289fea","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/WebSecurityContext.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aa5ceb33c7909acae5191f80c975c1768f445fb/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aa5ceb33c7909acae5191f80c975c1768f445fb/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java?ref=3aa5ceb33c7909acae5191f80c975c1768f445fb","patch":"@@ -42,14 +42,13 @@\n import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n import org.springframework.security.config.annotation.web.configuration.WebSecurityCustomizer;\n-import org.springframework.security.config.http.SessionCreationPolicy;\n+import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;\n import org.springframework.security.core.authority.AuthorityUtils;\n import org.springframework.security.web.SecurityFilterChain;\n import org.springframework.security.web.access.AccessDeniedHandler;\n import org.springframework.security.web.access.intercept.AuthorizationFilter;\n import org.springframework.security.web.authentication.AnonymousAuthenticationFilter;\n import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;\n-import org.springframework.security.web.context.NullSecurityContextRepository;\n import org.springframework.security.web.firewall.DefaultHttpFirewall;\n import org.springframework.security.web.firewall.HttpFirewall;\n \n@@ -76,6 +75,7 @@ public WebSecurityCustomizer webSecurityCustomizer(final HttpFirewall allowUrlEn\n     public SecurityFilterChain filterChain(\n             final HttpSecurity http,\n             final UsernamePasswordAuthenticationProvider usernamePasswordAuthenticationProvider,\n+            final AccessDeniedHandler accessDeniedHandler,\n             final AuthDataAccessor authDataAccessor,\n             final DefaultCredentialChecker defaultCredentialChecker,\n             final SecurityProperties securityProperties) throws Exception {\n@@ -84,6 +84,7 @@ public SecurityFilterChain filterChain(\n                 parentAuthenticationManager(null).\n                 authenticationProvider(usernamePasswordAuthenticationProvider).\n                 build();\n+        http.authenticationManager(authenticationManager);\n \n         SyncopeAuthenticationDetailsSource authenticationDetailsSource =\n                 new SyncopeAuthenticationDetailsSource();\n@@ -96,35 +97,34 @@ public SecurityFilterChain filterChain(\n                         securityProperties.getAnonymousUser(),\n                         AuthorityUtils.createAuthorityList(\"ROLE_ANONYMOUS\"));\n         anonymousAuthenticationFilter.setAuthenticationDetailsSource(authenticationDetailsSource);\n+        http.anonymous(customizer -> customizer.\n+                authenticationProvider(anonymousAuthenticationProvider).\n+                authenticationFilter(anonymousAuthenticationFilter));\n \n         SyncopeBasicAuthenticationEntryPoint basicAuthenticationEntryPoint =\n                 new SyncopeBasicAuthenticationEntryPoint();\n         basicAuthenticationEntryPoint.setRealmName(\"Apache Syncope authentication\");\n+        http.httpBasic(customizer -> customizer.\n+                authenticationEntryPoint(basicAuthenticationEntryPoint).\n+                authenticationDetailsSource(authenticationDetailsSource));\n \n         JWTAuthenticationFilter jwtAuthenticationFilter = new JWTAuthenticationFilter(\n                 authenticationManager,\n                 basicAuthenticationEntryPoint,\n                 authenticationDetailsSource,\n                 authDataAccessor,\n                 defaultCredentialChecker);\n+        http.addFilterBefore(jwtAuthenticationFilter, BasicAuthenticationFilter.class);\n \n         MustChangePasswordFilter mustChangePasswordFilter = new MustChangePasswordFilter();\n-\n-        http.authenticationManager(authenticationManager).\n-                authorizeHttpRequests().\n-                requestMatchers(\"/**\").permitAll().and().\n-                sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().\n-                securityContext().securityContextRepository(new NullSecurityContextRepository()).and().\n-                anonymous().\n-                authenticationProvider(anonymousAuthenticationProvider).\n-                authenticationFilter(anonymousAuthenticationFilter).and().\n-                httpBasic().authenticationEntryPoint(basicAuthenticationEntryPoint).\n-                authenticationDetailsSource(authenticationDetailsSource).and().\n-                exceptionHandling().accessDeniedHandler(accessDeniedHandler()).and().\n-                addFilterBefore(jwtAuthenticationFilter, BasicAuthenticationFilter.class).\n-                addFilterBefore(mustChangePasswordFilter, AuthorizationFilter.class).\n-                headers().disable().\n-                csrf().disable();\n+        http.addFilterBefore(mustChangePasswordFilter, AuthorizationFilter.class);\n+\n+        http.authorizeHttpRequests(customizer -> customizer.requestMatchers(\"/**\").permitAll());\n+        http.securityContext(AbstractHttpConfigurer::disable);\n+        http.sessionManagement(AbstractHttpConfigurer::disable);\n+        http.headers(AbstractHttpConfigurer::disable);\n+        http.csrf(AbstractHttpConfigurer::disable);\n+        http.exceptionHandling(customizer -> customizer.accessDeniedHandler(accessDeniedHandler));\n \n         return http.build();\n     }"},{"sha":"3590bcc0cd00ba0dc948f2be8cc601d9618eb25c","filename":"sra/src/main/java/org/apache/syncope/sra/SecurityConfig.java","status":"modified","additions":28,"deletions":16,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aa5ceb33c7909acae5191f80c975c1768f445fb/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSecurityConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aa5ceb33c7909acae5191f80c975c1768f445fb/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSecurityConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSecurityConfig.java?ref=3aa5ceb33c7909acae5191f80c975c1768f445fb","patch":"@@ -54,6 +54,7 @@\n import org.springframework.core.io.FileUrlResource;\n import org.springframework.core.io.support.ResourcePatternResolver;\n import org.springframework.http.HttpMethod;\n+import org.springframework.security.config.Customizer;\n import org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;\n import org.springframework.security.config.web.server.ServerHttpSecurity;\n import org.springframework.security.core.userdetails.MapReactiveUserDetailsService;\n@@ -88,21 +89,30 @@ public class SecurityConfig {\n     public SecurityWebFilterChain saml2SecurityFilterChain(final ServerHttpSecurity http) {\n         ServerWebExchangeMatcher metadataMatcher =\n                 ServerWebExchangeMatchers.pathMatchers(HttpMethod.GET, SAML2MetadataEndpoint.METADATA_URL);\n-        return http.securityMatcher(metadataMatcher).\n-                authorizeExchange().anyExchange().permitAll().\n-                and().csrf().requireCsrfProtectionMatcher(new NegatedServerWebExchangeMatcher(metadataMatcher)).\n-                and().build();\n+        http.securityMatcher(metadataMatcher);\n+\n+        http.authorizeExchange(customizer -> customizer.anyExchange().permitAll());\n+\n+        http.csrf(customizer -> customizer.\n+                requireCsrfProtectionMatcher(new NegatedServerWebExchangeMatcher(metadataMatcher)));\n+\n+        return http.build();\n     }\n \n     @Bean\n     @Order(1)\n     public SecurityWebFilterChain actuatorSecurityFilterChain(final ServerHttpSecurity http) {\n         ServerWebExchangeMatcher actuatorMatcher = EndpointRequest.toAnyEndpoint();\n-        return http.securityMatcher(actuatorMatcher).\n-                authorizeExchange().anyExchange().authenticated().\n-                and().httpBasic().\n-                and().csrf().requireCsrfProtectionMatcher(new NegatedServerWebExchangeMatcher(actuatorMatcher)).\n-                and().build();\n+        http.securityMatcher(actuatorMatcher);\n+\n+        http.authorizeExchange(customizer -> customizer.anyExchange().authenticated());\n+\n+        http.httpBasic(Customizer.withDefaults());\n+\n+        http.csrf(customizer -> customizer.\n+                requireCsrfProtectionMatcher(new NegatedServerWebExchangeMatcher(actuatorMatcher)));\n+\n+        return http.build();\n     }\n \n     @Bean\n@@ -298,21 +308,22 @@ public SecurityWebFilterChain routesSecurityFilterChain(\n             final CsrfRouteMatcher csrfRouteMatcher,\n             final ConfigurableApplicationContext ctx) {\n \n-        ServerHttpSecurity.AuthorizeExchangeSpec builder = http.authorizeExchange().\n+        http.authorizeExchange(customizer -> customizer.\n                 matchers(publicRouteMatcher).permitAll().\n-                anyExchange().authenticated();\n+                anyExchange().authenticated());\n \n         switch (props.getAmType()) {\n             case OIDC, OAUTH2 -> {\n                 OAuth2SecurityConfigUtils.forLogin(http, props.getAmType(), ctx);\n-                OAuth2SecurityConfigUtils.forLogout(builder, props.getAmType(), cacheManager, logoutRouteMatcher, ctx);\n-                http.oauth2ResourceServer().jwt().jwtDecoder(ctx.getBean(ReactiveJwtDecoder.class));\n+                OAuth2SecurityConfigUtils.forLogout(http, props.getAmType(), cacheManager, logoutRouteMatcher, ctx);\n+                http.oauth2ResourceServer(customizer -> customizer.jwt(\n+                        c -> c.jwtDecoder(ctx.getBean(ReactiveJwtDecoder.class))));\n             }\n \n             case SAML2 ->\n                 saml2Client.ifAvailable(client -> {\n                     SAML2SecurityConfigUtils.forLogin(http, client, publicRouteMatcher);\n-                    SAML2SecurityConfigUtils.forLogout(builder, client, cacheManager, logoutRouteMatcher, ctx);\n+                    SAML2SecurityConfigUtils.forLogout(http, client, cacheManager, logoutRouteMatcher, ctx);\n                 });\n \n             case CAS -> {\n@@ -322,7 +333,7 @@ public SecurityWebFilterChain routesSecurityFilterChain(\n                         props.getCas().getServerPrefix(),\n                         publicRouteMatcher);\n                 CASSecurityConfigUtils.forLogout(\n-                        builder,\n+                        http,\n                         cacheManager,\n                         props.getCas().getServerPrefix(),\n                         logoutRouteMatcher,\n@@ -333,6 +344,7 @@ public SecurityWebFilterChain routesSecurityFilterChain(\n             }\n         }\n \n-        return builder.and().csrf().requireCsrfProtectionMatcher(csrfRouteMatcher).and().build();\n+        http.csrf(customizer -> customizer.requireCsrfProtectionMatcher(csrfRouteMatcher));\n+        return http.build();\n     }\n }"},{"sha":"7d47e60c4420e29c69d22f6ee7dac76736dd1895","filename":"sra/src/main/java/org/apache/syncope/sra/security/cas/CASSecurityConfigUtils.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aa5ceb33c7909acae5191f80c975c1768f445fb/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASSecurityConfigUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aa5ceb33c7909acae5191f80c975c1768f445fb/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASSecurityConfigUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASSecurityConfigUtils.java?ref=3aa5ceb33c7909acae5191f80c975c1768f445fb","patch":"@@ -67,7 +67,7 @@ public static void forLogin(\n     }\n \n     public static void forLogout(\n-            final ServerHttpSecurity.AuthorizeExchangeSpec builder,\n+            final ServerHttpSecurity http,\n             final CacheManager cacheManager,\n             final String casServerUrlPrefix,\n             final LogoutRouteMatcher logoutRouteMatcher,\n@@ -87,7 +87,7 @@ public static void forLogout(\n             LOG.error(\"While creating instance of {}\", CASServerLogoutSuccessHandler.class.getName(), e);\n         }\n \n-        builder.and().addFilterAt(logoutWebFilter, SecurityWebFiltersOrder.LOGOUT);\n+        http.addFilterAt(logoutWebFilter, SecurityWebFiltersOrder.LOGOUT);\n     }\n \n     private CASSecurityConfigUtils() {"},{"sha":"d31d8a9edd270c675b6ec8135e5456508524ce1e","filename":"sra/src/main/java/org/apache/syncope/sra/security/oauth2/OAuth2SecurityConfigUtils.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aa5ceb33c7909acae5191f80c975c1768f445fb/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Foauth2%2FOAuth2SecurityConfigUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aa5ceb33c7909acae5191f80c975c1768f445fb/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Foauth2%2FOAuth2SecurityConfigUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Foauth2%2FOAuth2SecurityConfigUtils.java?ref=3aa5ceb33c7909acae5191f80c975c1768f445fb","patch":"@@ -107,11 +107,12 @@ public static void forLogin(\n         htmlMatcher.setIgnoredMediaTypes(Set.of(MediaType.ALL));\n         ServerAuthenticationEntryPoint entrypoint =\n                 new RedirectServerAuthenticationEntryPoint(\"/oauth2/authorization/\" + amType.name());\n-        http.exceptionHandling().authenticationEntryPoint(new DelegateEntry(htmlMatcher, entrypoint).getEntryPoint());\n+        http.exceptionHandling(customizer -> customizer.authenticationEntryPoint(\n+                new DelegateEntry(htmlMatcher, entrypoint).getEntryPoint()));\n     }\n \n     public static void forLogout(\n-            final ServerHttpSecurity.AuthorizeExchangeSpec builder,\n+            final ServerHttpSecurity http,\n             final SRAProperties.AMType amType,\n             final CacheManager cacheManager,\n             final LogoutRouteMatcher logoutRouteMatcher,\n@@ -134,7 +135,8 @@ public static void forLogout(\n             }\n         }\n \n-        builder.and().logout().disable().addFilterAt(logoutWebFilter, SecurityWebFiltersOrder.LOGOUT);\n+        http.logout(customizer -> customizer.disable());\n+        http.addFilterAt(logoutWebFilter, SecurityWebFiltersOrder.LOGOUT);\n     }\n \n     private OAuth2SecurityConfigUtils() {"},{"sha":"95e2074467e2ac0c9445a0c8afeb62bdd1e3a857","filename":"sra/src/main/java/org/apache/syncope/sra/security/saml2/SAML2SecurityConfigUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3aa5ceb33c7909acae5191f80c975c1768f445fb/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2SecurityConfigUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3aa5ceb33c7909acae5191f80c975c1768f445fb/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2SecurityConfigUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fsaml2%2FSAML2SecurityConfigUtils.java?ref=3aa5ceb33c7909acae5191f80c975c1768f445fb","patch":"@@ -66,7 +66,7 @@ public static void forLogin(\n     }\n \n     public static void forLogout(\n-            final ServerHttpSecurity.AuthorizeExchangeSpec builder,\n+            final ServerHttpSecurity http,\n             final SAML2Client saml2Client,\n             final CacheManager cacheManager,\n             final LogoutRouteMatcher logoutRouteMatcher,\n@@ -85,12 +85,12 @@ public static void forLogout(\n \n             SAML2LogoutResponseWebFilter logoutResponseWebFilter =\n                     new SAML2LogoutResponseWebFilter(saml2Client, logoutSuccessHandler);\n-            builder.and().addFilterAt(logoutResponseWebFilter, SecurityWebFiltersOrder.LOGOUT);\n+            http.addFilterAt(logoutResponseWebFilter, SecurityWebFiltersOrder.LOGOUT);\n         } catch (ClassNotFoundException e) {\n             LOG.error(\"While creating instance of {}\", SAML2ServerLogoutSuccessHandler.class.getName(), e);\n         }\n \n-        builder.and().addFilterAt(logoutWebFilter, SecurityWebFiltersOrder.LOGOUT);\n+        http.addFilterAt(logoutWebFilter, SecurityWebFiltersOrder.LOGOUT);\n     }\n \n     private SAML2SecurityConfigUtils() {"}]}