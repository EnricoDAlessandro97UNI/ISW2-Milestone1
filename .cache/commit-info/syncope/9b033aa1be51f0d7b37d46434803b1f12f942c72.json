{"sha":"9b033aa1be51f0d7b37d46434803b1f12f942c72","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjliMDMzYWExYmU1MWYwZDdiMzdkNDY0MzQ4MDNiMWYxMmY5NDJjNzI=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-19T17:06:13Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-19T17:06:33Z"},"message":"Integration test, SYNCOPE-727","tree":{"sha":"18f94e5a6c2d345d52dbbb653b9158ea80b5e57f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/18f94e5a6c2d345d52dbbb653b9158ea80b5e57f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9b033aa1be51f0d7b37d46434803b1f12f942c72","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9b033aa1be51f0d7b37d46434803b1f12f942c72","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9b033aa1be51f0d7b37d46434803b1f12f942c72","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9b033aa1be51f0d7b37d46434803b1f12f942c72/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"73269550f5c4a9c68a0c9bd64e38b99cdb44ad5d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/73269550f5c4a9c68a0c9bd64e38b99cdb44ad5d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/73269550f5c4a9c68a0c9bd64e38b99cdb44ad5d"}],"stats":{"total":281,"additions":281,"deletions":0},"files":[{"sha":"fb98efe71d45c62f1fe6c6400cf6555dc78853f2","filename":"fit/core-reference/pom.xml","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b033aa1be51f0d7b37d46434803b1f12f942c72/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b033aa1be51f0d7b37d46434803b1f12f942c72/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=9b033aa1be51f0d7b37d46434803b1f12f942c72","patch":"@@ -38,6 +38,7 @@ under the License.\n     <jdbcdriver.artifactId>h2</jdbcdriver.artifactId>\n     \n     <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+    <work.dir>${project.build.directory}/cli-test</work.dir>\n   </properties>\n \n   <dependencies>\n@@ -150,6 +151,26 @@ under the License.\n \n   <build>\n     <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-antrun-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>cli-test</id>\n+            <goals>\n+              <goal>run</goal>\n+            </goals>\n+            <phase>pre-integration-test</phase>\n+            <configuration>\n+              <target>\n+                <mkdir dir=\"${work.dir}\" />\n+                <unzip src=\"../../client/cli/target/syncope-client-cli-${project.version}.zip\" dest=\"${work.dir}\"/>\n+              </target>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+      \n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-war-plugin</artifactId>"},{"sha":"1f9c752e190613ab19768db8bb73e000a4e4ab05","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/CLIITCase.java","status":"added","additions":127,"deletions":0,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b033aa1be51f0d7b37d46434803b1f12f942c72/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b033aa1be51f0d7b37d46434803b1f12f942c72/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java?ref=9b033aa1be51f0d7b37d46434803b1f12f942c72","patch":"@@ -0,0 +1,127 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import org.junit.BeforeClass;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class CLIITCase extends AbstractITCase {\n+\n+    private static final String LINUX_SCRIPT_DIR = \"/target/cli-test/syncope-client-cli-2.0.0-SNAPSHOT\";\n+\n+    private static final String LINUX_SCRIPT_FILENAME = \"syncopeadm.sh\";\n+\n+    private static ProcessBuilder processBuilder;\n+\n+    @BeforeClass\n+    public static void install() {\n+        try {\n+            final File f = new File(\".\");\n+            final File buildDirectory = new File(f.getCanonicalPath() + LINUX_SCRIPT_DIR);\n+            processBuilder = new ProcessBuilder();\n+            processBuilder.directory(buildDirectory);\n+            final String[] command = {\"/bin/bash\", LINUX_SCRIPT_FILENAME, \"install\", \"--setup-debug\"};\n+            processBuilder.command(command);\n+            final Process process = processBuilder.start();\n+            process.waitFor();\n+            final File cliPropertiesFile = new File(buildDirectory + \"/cli.properties\");\n+            assertTrue(cliPropertiesFile.exists());\n+        } catch (final IOException | InterruptedException ex) {\n+            fail(ex.getMessage());\n+        }\n+    }\n+\n+    @Test\n+    public void runScriptWithoutOptions() {\n+        try {\n+            final String[] command = {\"/bin/bash\", LINUX_SCRIPT_FILENAME};\n+            processBuilder.command(command);\n+            final Process process = processBuilder.start();\n+            final String result = readScriptOutput(process.getInputStream());\n+            assertTrue(result.startsWith(\"\\nUsage: Main [options]\"));\n+            assertTrue(result.contains(\"entitlement --help\"));\n+            assertTrue(result.contains(\"group --help\"));\n+            process.destroy();\n+        } catch (IOException ex) {\n+            fail(ex.getMessage());\n+        }\n+    }\n+\n+    @Test\n+    public void entitlementCount() {\n+        try {\n+            final String[] command = {\"/bin/bash\", LINUX_SCRIPT_FILENAME, \"entitlement\", \"--list\"};\n+            processBuilder.command(command);\n+            final Process process = processBuilder.start();\n+            final BufferedReader br = new BufferedReader(new InputStreamReader(process.getInputStream()));\n+            int entitlementsNumber = 0;\n+            String line;\n+            while ((line = br.readLine()) != null) {\n+                if (line.startsWith(\"-\")) {\n+                    entitlementsNumber++;\n+                }\n+            }\n+            assertEquals(112, entitlementsNumber);\n+        } catch (IOException ex) {\n+            fail(ex.getMessage());\n+        }\n+    }\n+\n+    @Test\n+    public void connectorCount() {\n+        try {\n+            final String[] command = {\"/bin/bash\", LINUX_SCRIPT_FILENAME, \"connector\", \"--list-bundles\"};\n+            processBuilder.command(command);\n+            final Process process = processBuilder.start();\n+            final BufferedReader br = new BufferedReader(new InputStreamReader(process.getInputStream()));\n+            int bundlesNumber = 0;\n+            String line;\n+            while ((line = br.readLine()) != null) {\n+                if (line.startsWith(\" > BUNDLE NAME:\")) {\n+                    bundlesNumber++;\n+                }\n+            }\n+            assertEquals(8, bundlesNumber);\n+        } catch (IOException ex) {\n+            fail(ex.getMessage());\n+        }\n+    }\n+\n+    private static String readScriptOutput(final InputStream inputStream) throws IOException {\n+        final BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));\n+        final StringBuilder resultBuilder = new StringBuilder();\n+        String line;\n+        while ((line = br.readLine()) != null) {\n+            resultBuilder.append(line).append(\"\\n\");\n+        }\n+        return resultBuilder.toString();\n+    }\n+}"},{"sha":"4811c94f049e525ba4940ac86704eb9062608082","filename":"fit/core-reference/src/test/resources/log4j2.xml","status":"added","additions":133,"deletions":0,"changes":133,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9b033aa1be51f0d7b37d46434803b1f12f942c72/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9b033aa1be51f0d7b37d46434803b1f12f942c72/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Flog4j2.xml?ref=9b033aa1be51f0d7b37d46434803b1f12f942c72","patch":"@@ -0,0 +1,133 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<configuration status=\"WARN\" shutdownHook=\"disable\">\n+\n+  <appenders>\n+    \n+    <RollingRandomAccessFile name=\"main\" fileName=\"${log.directory}/core.log\"\n+                             filePattern=\"${log.directory}/core-%d{yyyy-MM-dd}.log.gz\"\n+                             immediateFlush=\"false\" append=\"true\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n+      </PatternLayout>\n+      <Policies>\n+        <TimeBasedTriggeringPolicy/>\n+        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n+      </Policies>\n+    </RollingRandomAccessFile>\n+\n+    <RollingRandomAccessFile name=\"persistence\" fileName=\"${log.directory}/core-persistence.log\"\n+                             filePattern=\"${log.directory}/core-persistence-%d{yyyy-MM-dd}.log.gz\"\n+                             immediateFlush=\"false\" append=\"true\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n+      </PatternLayout>\n+      <Policies>\n+        <TimeBasedTriggeringPolicy/>\n+        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n+      </Policies>\n+    </RollingRandomAccessFile>\n+\n+    <RollingRandomAccessFile name=\"rest\" fileName=\"${log.directory}/core-rest.log\"\n+                             filePattern=\"${log.directory}/core-rest-%d{yyyy-MM-dd}.log.gz\"\n+                             immediateFlush=\"false\" append=\"true\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %logger - %msg%n</pattern>\n+      </PatternLayout>\n+      <Policies>\n+        <TimeBasedTriggeringPolicy/>\n+        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n+      </Policies>\n+    </RollingRandomAccessFile>\n+\n+    <RollingRandomAccessFile name=\"connid\" fileName=\"${log.directory}/core-connid.log\"\n+                             filePattern=\"${log.directory}/core-connid-%d{yyyy-MM-dd}.log.gz\"\n+                             immediateFlush=\"false\" append=\"true\">\n+      <PatternLayout>\n+        <pattern>%d{HH:mm:ss.SSS} %-5level %msg%n</pattern>\n+      </PatternLayout>\n+      <Policies>\n+        <TimeBasedTriggeringPolicy/>\n+        <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n+      </Policies>\n+    </RollingRandomAccessFile>\n+    \n+  </appenders>\n+  \n+  <loggers>\n+    \n+    <asyncLogger name=\"org.apache.syncope.core.persistence\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"persistence\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.springframework.orm\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"persistence\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.syncope.core.rest\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.springframework.web\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.http\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.identityconnectors\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"connid\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"net.tirasa.connid\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"connid\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.provisioning.api.ConnIdBundleManager\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"connid\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.syncope\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.provisioning\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.logic\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.springframework\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.quartz\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.activiti\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.camel\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    \n+    <root level=\"INFO\">\n+      <appender-ref ref=\"main\"/>\n+    </root>\n+    \n+  </loggers>\n+</configuration>"}]}