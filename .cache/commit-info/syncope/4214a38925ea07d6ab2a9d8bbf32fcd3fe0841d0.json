{"sha":"4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQyMTRhMzg5MjVlYTA3ZDZhYjJhOWQ4YmJmMzJmY2QzZmUwODQxZDA=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-07-18T10:02:40Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2017-07-18T10:36:21Z"},"message":"SYNCOPE-1168 - Encryptor pads short secret keys with \"0\" instead of random characters","tree":{"sha":"5fca300ebd5f014e7feda75560409bcb921c50be","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5fca300ebd5f014e7feda75560409bcb921c50be"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"eebca673ec43f26c711c5e16495427800180570a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eebca673ec43f26c711c5e16495427800180570a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eebca673ec43f26c711c5e16495427800180570a"}],"stats":{"total":24,"additions":18,"deletions":6},"files":[{"sha":"a97094a3133f7c2eb2304d9e268a2f09239f87a7","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/Encryptor.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java?ref=4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0","patch":"@@ -154,11 +154,14 @@ private Encryptor(final String secretKey) {\n         String actualKey = secretKey;\n         if (actualKey.length() < 16) {\n             StringBuilder actualKeyPadding = new StringBuilder(actualKey);\n-            for (int i = 0; i < 16 - actualKey.length(); i++) {\n-                actualKeyPadding.append('0');\n-            }\n+            int length = 16 - actualKey.length();\n+            String randomChars = SecureRandomUtils.generateRandomPassword(length);\n+\n+            actualKeyPadding.append(randomChars);\n             actualKey = actualKeyPadding.toString();\n-            LOG.debug(\"actualKey too short, adding some random characters\");\n+            LOG.warn(\"The secret key is too short (< 16), adding some random characters. \"\n+                     + \"Passwords encrypted with AES and this key will not be recoverable \"\n+                     + \"as a result if the container is restarted.\");\n         }\n \n         try {"},{"sha":"064d970cb259f621c3e074f25170ab4ded15866e","filename":"core/spring/src/test/java/org/apache/syncope/core/spring/security/EncryptorTest.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptorTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptorTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptorTest.java?ref=4214a38925ea07d6ab2a9d8bbf32fcd3fe0841d0","patch":"@@ -61,7 +61,16 @@ public void testEncoder() throws Exception {\n \n     @Test\n     public void testDecodeDefaultAESKey() throws Exception {\n-        String password = encryptor.decode(\"9Pav+xl+UyHt02H9ZBytiA==\", CipherAlgorithm.AES);\n-        assertEquals(\"password\", password);\n+        String decPassword = encryptor.decode(\"9Pav+xl+UyHt02H9ZBytiA==\", CipherAlgorithm.AES);\n+        assertEquals(password, decPassword);\n     }\n+\n+    @Test\n+    public void testSmallKey() throws Exception {\n+        Encryptor smallKeyEncryptor = Encryptor.getInstance(\"123\");\n+        String encPassword = smallKeyEncryptor.encode(password, CipherAlgorithm.AES);\n+        String decPassword = smallKeyEncryptor.decode(encPassword, CipherAlgorithm.AES);\n+        assertEquals(password, decPassword);\n+    }\n+\n }"}]}