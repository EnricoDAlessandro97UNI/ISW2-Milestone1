{"sha":"68d14f63337d0595c4e238a5c9741ee58b5435be","node_id":"C_kwDOJfYA1toAKDY4ZDE0ZjYzMzM3ZDA1OTVjNGUyMzhhNWM5NzQxZWU1OGI1NDM1YmU","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-04-10T17:07:23Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-04-10T17:07:23Z"},"message":"A few Batch processing improvements (#337)","tree":{"sha":"336e14e258c9720401704c3c8356f130d1e2d9d5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/336e14e258c9720401704c3c8356f130d1e2d9d5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/68d14f63337d0595c4e238a5c9741ee58b5435be","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiUw7LCRBK7hj4Ov3rIwAAuAUIAHUu1bBfn4FytFJwu9T4gGZx\nAvcLZ6pktyHq/0bsloG8TLBRSTsyjswfnJ1EgiMwXtbE9GkA2cTeS9i6prPx8KU5\no5Rng3Qud3ScY858FYIC0DgU1g0kou1TMa1tKWCxXC7bNFm3GaYBc5OU/anr0pQp\nq/P0tRFfCsn7Sc0iYE21XZVmL0paUb4ML6kPrPIFTUkG16YQCTCjGCKQH9M/JTd/\nwl43m2jLDLtgM4ibbvrOErGjdquYPumTLiZx7fXcTFr12Cl7ue7HQLsLkyeaN9c1\nWALI+fLyQEMXI3JhluDP1YXEciV3pCOEKDAr9DjoN/UFhneNpICD7fo7JZqvXwo=\n=8mQO\n-----END PGP SIGNATURE-----\n","payload":"tree 336e14e258c9720401704c3c8356f130d1e2d9d5\nparent 40710978a407d10e35f2b8f776e6872ae31fdbdb\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1649610443 +0200\ncommitter GitHub <noreply@github.com> 1649610443 +0200\n\nA few Batch processing improvements (#337)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/68d14f63337d0595c4e238a5c9741ee58b5435be","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/68d14f63337d0595c4e238a5c9741ee58b5435be","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/68d14f63337d0595c4e238a5c9741ee58b5435be/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"40710978a407d10e35f2b8f776e6872ae31fdbdb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/40710978a407d10e35f2b8f776e6872ae31fdbdb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/40710978a407d10e35f2b8f776e6872ae31fdbdb"}],"stats":{"total":62,"additions":42,"deletions":20},"files":[{"sha":"2c3c2a6f49f493555b81d225c0f60d20cc36bc13","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/batch/BatchItem.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/68d14f63337d0595c4e238a5c9741ee58b5435be/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/68d14f63337d0595c4e238a5c9741ee58b5435be/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchItem.java?ref=68d14f63337d0595c4e238a5c9741ee58b5435be","patch":"@@ -29,9 +29,9 @@ public abstract class BatchItem implements Serializable {\n \n     private static final long serialVersionUID = -1393976266651766259L;\n \n-    private final Map<String, List<Object>> headers = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);\n+    protected final Map<String, List<Object>> headers = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);\n \n-    private String content;\n+    protected String content;\n \n     public Map<String, List<Object>> getHeaders() {\n         return headers;"},{"sha":"5a9739a62f7e5ff4543fc1794542cacb4ed1da82","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/batch/BatchRequestItem.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/68d14f63337d0595c4e238a5c9741ee58b5435be/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchRequestItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/68d14f63337d0595c4e238a5c9741ee58b5435be/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchRequestItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchRequestItem.java?ref=68d14f63337d0595c4e238a5c9741ee58b5435be","patch":"@@ -51,4 +51,15 @@ public String getQueryString() {\n     public void setQueryString(final String queryString) {\n         this.queryString = queryString;\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"BatchRequestItem{\"\n+                + \"method=\" + method + \" ,\"\n+                + \"requestURI=\" + requestURI + \" ,\"\n+                + \"queryString=\" + queryString + \" ,\"\n+                + \"headers=\" + headers + \", \"\n+                + \"content=\" + content + \" ,\"\n+                + '}';\n+    }\n }"},{"sha":"8c6f902d41780070ee7ff3e4e4eab6d2a64a0355","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/batch/BatchResponseItem.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/68d14f63337d0595c4e238a5c9741ee58b5435be/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchResponseItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/68d14f63337d0595c4e238a5c9741ee58b5435be/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchResponseItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchResponseItem.java?ref=68d14f63337d0595c4e238a5c9741ee58b5435be","patch":"@@ -31,4 +31,13 @@ public int getStatus() {\n     public void setStatus(final int status) {\n         this.status = status;\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"BatchResponseItem{\"\n+                + \"status=\" + status + \", \"\n+                + \"headers=\" + headers + \", \"\n+                + \"content=\" + content\n+                + '}';\n+    }\n }"},{"sha":"189c98d538ebe481f0714d4b52986d6427f143c8","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/68d14f63337d0595c4e238a5c9741ee58b5435be/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/68d14f63337d0595c4e238a5c9741ee58b5435be/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=68d14f63337d0595c4e238a5c9741ee58b5435be","patch":"@@ -29,6 +29,7 @@\n import javax.persistence.PersistenceException;\n import javax.persistence.RollbackException;\n import javax.validation.ValidationException;\n+import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.Response.ResponseBuilder;\n@@ -129,17 +130,18 @@ public Response toResponse(final Exception ex) {\n                         header(RESTHeaders.ERROR_CODE, ClientExceptionType.RESTValidation.name()).\n                         header(RESTHeaders.ERROR_INFO, ClientExceptionType.RESTValidation.getInfoHeaderValue(\n                                 ExceptionUtils.getRootCauseMessage(ex)));\n-\n-                ErrorTO error = new ErrorTO();\n-                error.setStatus(ClientExceptionType.RESTValidation.getResponseStatus().getStatusCode());\n-                error.setType(ClientExceptionType.RESTValidation);\n-                error.getElements().add(ExceptionUtils.getRootCauseMessage(ex));\n-\n-                builder.entity(error);\n+            }\n+            // process web application exceptions\n+            if (builder == null && ex instanceof WebApplicationException) {\n+                builder = builder(((WebApplicationException) ex).getResponse()).\n+                        header(RESTHeaders.ERROR_CODE, ClientExceptionType.Unknown.name()).\n+                        header(RESTHeaders.ERROR_INFO, ClientExceptionType.Unknown.getInfoHeaderValue(\n+                                ExceptionUtils.getRootCauseMessage(ex)));\n             }\n             // ...or just report as InternalServerError\n             if (builder == null) {\n                 builder = Response.status(Response.Status.INTERNAL_SERVER_ERROR).\n+                        header(RESTHeaders.ERROR_CODE, ClientExceptionType.Unknown.name()).\n                         header(RESTHeaders.ERROR_INFO, ClientExceptionType.Unknown.getInfoHeaderValue(\n                                 ExceptionUtils.getRootCauseMessage(ex)));\n "},{"sha":"5b9e3fa61e4a537a8e2cae528c9272ab05dde1ee","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/batch/BatchProcess.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/68d14f63337d0595c4e238a5c9741ee58b5435be/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fbatch%2FBatchProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/68d14f63337d0595c4e238a5c9741ee58b5435be/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fbatch%2FBatchProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fbatch%2FBatchProcess.java?ref=68d14f63337d0595c4e238a5c9741ee58b5435be","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import javax.servlet.ServletConfig;\n import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n import org.apache.cxf.transport.http.AbstractHTTPDestination;\n import org.apache.cxf.transport.http.DestinationRegistry;\n import org.apache.syncope.common.rest.api.batch.BatchPayloadGenerator;\n@@ -93,42 +94,41 @@ public void run() {\n         List<BatchResponseItem> batchResponseItems = new ArrayList<>(batchRequestItems.size());\n \n         batchRequestItems.forEach(reqItem -> {\n-            LOG.debug(\"Batch item:\\n{}\", reqItem);\n+            LOG.debug(\"Batch Request item:\\n{}\", reqItem);\n \n             AbstractHTTPDestination dest = destinationRegistry.getDestinationForPath(reqItem.getRequestURI(), true);\n             if (dest == null) {\n                 dest = destinationRegistry.checkRestfulRequest(reqItem.getRequestURI());\n             }\n             LOG.debug(\"Destination found for {}: {}\", reqItem.getRequestURI(), dest);\n \n+            BatchResponseItem resItem = new BatchResponseItem();\n+            batchResponseItems.add(resItem);\n             if (dest == null) {\n-                BatchResponseItem resItem = new BatchResponseItem();\n-                resItem.setStatus(404);\n-                batchResponseItems.add(resItem);\n+                resItem.setStatus(HttpServletResponse.SC_NOT_FOUND);\n             } else {\n                 BatchItemRequest request = new BatchItemRequest(basePath, servletRequest, reqItem);\n                 BatchItemResponse response = new BatchItemResponse();\n                 try {\n                     dest.invoke(servletConfig, servletConfig.getServletContext(), request, response);\n-                    LOG.debug(\"Returned:\\nstatus: {}\\nheaders: {}\\nbody:\\n{}\", response.getStatus(),\n-                            response.getHeaders(), new String(response.getUnderlyingOutputStream().toByteArray()));\n \n-                    BatchResponseItem resItem = new BatchResponseItem();\n                     resItem.setStatus(response.getStatus());\n                     resItem.setHeaders(response.getHeaders());\n                     String output = new String(response.getUnderlyingOutputStream().toByteArray());\n                     if (output.length() > 0) {\n                         resItem.setContent(output);\n                     }\n-                    batchResponseItems.add(resItem);\n+\n+                    LOG.debug(\"Returned:\\nstatus: {}\\nheaders: {}\\nbody:\\n{}\",\n+                            response.getStatus(), response.getHeaders(), output);\n                 } catch (IOException e) {\n                     LOG.error(\"Invocation of {} failed\", dest.getPath(), e);\n \n-                    BatchResponseItem resItem = new BatchResponseItem();\n-                    resItem.setStatus(404);\n-                    batchResponseItems.add(resItem);\n+                    resItem.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n                 }\n             }\n+\n+            LOG.debug(\"Batch Response item:\\n{}\", resItem);\n         });\n \n         String results = BatchPayloadGenerator.generate(batchResponseItems, JAXRSService.DOUBLE_DASH + boundary);"}]}