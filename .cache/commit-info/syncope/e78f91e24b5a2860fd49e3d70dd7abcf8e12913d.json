{"sha":"e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU3OGY5MWUyNGI1YTI4NjBmZDQ5ZTNkNzBkZDdhYmNmOGUxMjkxM2Q=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-01T14:49:10Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-01T15:26:51Z"},"message":"Replace the (apparently now unsupported) wicket-chartjs","tree":{"sha":"febe59d37c42d6fa7b1a056b3eff66e233ad073b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/febe59d37c42d6fa7b1a056b3eff66e233ad073b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"17830e5aa09660be4949589d2c196670a4d57ff7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/17830e5aa09660be4949589d2c196670a4d57ff7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/17830e5aa09660be4949589d2c196670a4d57ff7"}],"stats":{"total":2419,"additions":2231,"deletions":188},"files":[{"sha":"d3103e9b20731fd9479f0d0d5e523c1d8d40fe0c","filename":"client/console/pom.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fpom.xml?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -94,10 +94,6 @@ under the License.\n       <groupId>de.agilecoders.wicket</groupId>\n       <artifactId>wicket-bootstrap-extensions</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>com.pingunaut</groupId>\n-      <artifactId>wicket-chartjs</artifactId>\n-    </dependency>\t\n     \n     <dependency>\n       <groupId>org.apache.syncope.client</groupId>\n@@ -139,6 +135,10 @@ under the License.\n       <groupId>org.webjars</groupId>\n       <artifactId>jsplumb</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.webjars.bower</groupId>\n+      <artifactId>chart.js</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.webjars</groupId>\n       <artifactId>jquery-cookie</artifactId>"},{"sha":"0d3089b2bf9ea5eb55a46deccc68483ea95a8315","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/Bar.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBar.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,45 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+/**\r\n+ * Provides a simple implementation of chart.js bar chart.\r\n+ *\r\n+ * @see <a href=\"http://www.chartjs.org/docs/#barChart\">chart.js docs</a>\r\n+ */\r\n+public class Bar extends DataSetChart<BarChartData<BarDataSet>, BarChartOptions, BarDataSet> {\r\n+\r\n+    private static final long serialVersionUID = -332976997065056554L;\r\n+\r\n+    @Override\r\n+    public BarChartOptions getOptions() {\r\n+        if (options == null) {\r\n+            options = new BarChartOptions();\r\n+        }\r\n+        return options;\r\n+    }\r\n+\r\n+    @Override\r\n+    public BarChartData<BarDataSet> getData() {\r\n+        if (data == null) {\r\n+            data = new BarChartData<>();\r\n+        }\r\n+        return data;\r\n+    }\r\n+}\r"},{"sha":"45608a47ed6b6fc9cc481d793c74de97ac52f706","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/BarChartData.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBarChartData.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBarChartData.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBarChartData.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,30 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+/**\r\n+ * Provides chart data used by bar charts.\r\n+ *\r\n+ * @param <T> the generic type of it's dataset\r\n+ */\r\n+public class BarChartData<T extends BaseDataSet> extends ChartData<T> {\r\n+\r\n+    private static final long serialVersionUID = 9057475640743455047L;\r\n+\r\n+}\r"},{"sha":"6616f2ac9c5b813f4e2f2577159b6a8cb4f15213","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/BarChartOptions.java","status":"added","additions":157,"deletions":0,"changes":157,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBarChartOptions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBarChartOptions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBarChartOptions.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,157 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+/**\r\n+ * Provides options, that are available for {@link Bar}.\r\n+ */\r\n+public class BarChartOptions extends ChartOptions {\r\n+\r\n+    private static final long serialVersionUID = -5356780831848556616L;\r\n+\r\n+    /**\r\n+     * Whether to show horizontal lines (except X axis).\r\n+     */\r\n+    private Boolean scaleShowHorizontalLines = true;\r\n+\r\n+    /**\r\n+     * Whether to show vertical lines (except Y axis).\r\n+     */\r\n+    private Boolean scaleShowVerticalLines = true;\r\n+\r\n+    /**\r\n+     * A legend template.\r\n+     */\r\n+    private String legendTemplate = \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\">\"\r\n+            + \"<% for (var i=0; i<datasets.length; i++){%><li>\"\r\n+            + \"<span style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span>\"\r\n+            + \"<%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\";\r\n+\r\n+    /**\r\n+     * The bar show stroke.\r\n+     */\r\n+    private Boolean barShowStroke;\r\n+\r\n+    /**\r\n+     * The bar stroke width.\r\n+     */\r\n+    private Integer barStrokeWidth;\r\n+\r\n+    /** The bar value spacing. */\r\n+    private Integer barValueSpacing;\r\n+\r\n+    /** The bar dataset spacing. */\r\n+    private Integer barDatasetSpacing;\r\n+\r\n+    public Boolean getScaleShowHorizontalLines() {\r\n+        return scaleShowHorizontalLines;\r\n+    }\r\n+\r\n+    public void setScaleShowHorizontalLines(final Boolean scaleShowHorizontalLines) {\r\n+        this.scaleShowHorizontalLines = scaleShowHorizontalLines;\r\n+    }\r\n+\r\n+    public Boolean getScaleShowVerticalLines() {\r\n+        return scaleShowVerticalLines;\r\n+    }\r\n+\r\n+    public void setScaleShowVerticalLines(final Boolean scaleShowVerticalLines) {\r\n+        this.scaleShowVerticalLines = scaleShowVerticalLines;\r\n+    }\r\n+\r\n+    public String getLegendTemplate() {\r\n+        return legendTemplate;\r\n+    }\r\n+\r\n+    public void setLegendTemplate(final String legendTemplate) {\r\n+        this.legendTemplate = legendTemplate;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the bar show stroke.\r\n+     *\r\n+     * @return the bar show stroke\r\n+     */\r\n+    public Boolean getBarShowStroke() {\r\n+        return barShowStroke;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the bar show stroke.\r\n+     *\r\n+     * @param barShowStroke the new bar show stroke (default is true).\r\n+     */\r\n+    public void setBarShowStroke(final Boolean barShowStroke) {\r\n+        this.barShowStroke = barShowStroke;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the bar stroke width.\r\n+     *\r\n+     * @return the bar stroke width\r\n+     */\r\n+    public Integer getBarStrokeWidth() {\r\n+        return barStrokeWidth;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the bar stroke width.\r\n+     *\r\n+     * @param barStrokeWidth the new bar stroke width (default is 2).\r\n+     */\r\n+    public void setBarStrokeWidth(final Integer barStrokeWidth) {\r\n+        this.barStrokeWidth = barStrokeWidth;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the bar value spacing.\r\n+     *\r\n+     * @return the bar value spacing\r\n+     */\r\n+    public Integer getBarValueSpacing() {\r\n+        return barValueSpacing;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the bar value spacing.\r\n+     *\r\n+     * @param barValueSpacing the spacing between each of the X value sets (default is 5)\r\n+     */\r\n+    public void setBarValueSpacing(final Integer barValueSpacing) {\r\n+        this.barValueSpacing = barValueSpacing;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the bar dataset spacing.\r\n+     *\r\n+     * @return the bar dataset spacing\r\n+     */\r\n+    public Integer getBarDatasetSpacing() {\r\n+        return barDatasetSpacing;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the bar dataset spacing.\r\n+     *\r\n+     * @param barDatasetSpacing the spacing between data sets within X values (default is 1).\r\n+     */\r\n+    public void setBarDatasetSpacing(final Integer barDatasetSpacing) {\r\n+        this.barDatasetSpacing = barDatasetSpacing;\r\n+    }\r\n+}\r"},{"sha":"f561c44e6802ce81a47ba6a738dba56938c7c8e4","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/BarDataSet.java","status":"renamed","additions":48,"deletions":46,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBarDataSet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBarDataSet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBarDataSet.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -1,46 +1,48 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.widgets;\n-\n-import com.pingunaut.wicket.chartjs.data.DoughnutChartData;\n-\n-public class LabeledDoughnutChartData extends DoughnutChartData {\n-\n-    private static final long serialVersionUID = -660949108690472467L;\n-\n-    private String label;\n-\n-    public LabeledDoughnutChartData(final Integer value, final String color) {\n-        super(value, color);\n-    }\n-\n-    public LabeledDoughnutChartData(final Integer value, final String color, final String label) {\n-        super(value, color);\n-        this.label = label;\n-    }\n-\n-    public String getLabel() {\n-        return label;\n-    }\n-\n-    public void setLabel(final String label) {\n-        this.label = label;\n-    }\n-\n-}\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+import java.util.List;\r\n+\r\n+/**\r\n+ * Provides all information needed for {@link BarChartData}.\r\n+ */\r\n+public class BarDataSet extends BaseDataSet {\r\n+\r\n+    private static final long serialVersionUID = 3095383371272813559L;\r\n+\r\n+    private String label;\r\n+\r\n+    /**\r\n+     * Instantiates a new bar data set.\r\n+     *\r\n+     * @param data the values\r\n+     */\r\n+    public BarDataSet(final List<? extends Number> data) {\r\n+        super(data);\r\n+    }\r\n+\r\n+    public String getLabel() {\r\n+        return label;\r\n+    }\r\n+\r\n+    public void setLabel(final String label) {\r\n+        this.label = label;\r\n+    }\r\n+}\r","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/LabeledDoughnutChartData.java"},{"sha":"f4cbba866db082ee4f7af260ef920819cb5a340c","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/BaseDataSet.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBaseDataSet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBaseDataSet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FBaseDataSet.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,93 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+import java.io.Serializable;\r\n+import java.util.List;\r\n+\r\n+/**\r\n+ * Provides the simplest kind of a dataset.\r\n+ * Besides the list of data itself, it contains default values for fill - and stroke color.\r\n+ */\r\n+public abstract class BaseDataSet implements Serializable {\r\n+\r\n+    private static final long serialVersionUID = 1581171902504828797L;\r\n+\r\n+    /** The fill color. */\r\n+    private String fillColor = \"rgba(220,220,220,0.5)\";\r\n+\r\n+    /** The stroke color. */\r\n+    private String strokeColor = \"rgba(220,220,220,1)\";\r\n+\r\n+    /** The data. */\r\n+    private final List<? extends Number> data;\r\n+\r\n+    /**\r\n+     * Instantiates a new abstract base data set.\r\n+     *\r\n+     * @param data the data values\r\n+     */\r\n+    public BaseDataSet(final List<? extends Number> data) {\r\n+        this.data = data;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the fill color.\r\n+     *\r\n+     * @return the fill color\r\n+     */\r\n+    public String getFillColor() {\r\n+        return fillColor;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the fill color.\r\n+     *\r\n+     * @param fillColor the fill color\r\n+     * @return the abstract base data set\r\n+     */\r\n+    public BaseDataSet setFillColor(final String fillColor) {\r\n+        this.fillColor = fillColor;\r\n+        return this;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the stroke color.\r\n+     *\r\n+     * @return the stroke color\r\n+     */\r\n+    public String getStrokeColor() {\r\n+        return strokeColor;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the stroke color.\r\n+     *\r\n+     * @param strokeColor the stroke color\r\n+     * @return the abstract base data set\r\n+     */\r\n+    public BaseDataSet setStrokeColor(final String strokeColor) {\r\n+        this.strokeColor = strokeColor;\r\n+        return this;\r\n+    }\r\n+\r\n+    public List<? extends Number> getData() {\r\n+        return data;\r\n+    }\r\n+}\r"},{"sha":"435b6ddbfba023e9b913031d0f60f83e4928d460","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/Chart.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChart.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChart.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChart.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.chartjs;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Provides chart options and a pojo-json mapper to communicate with javascript.\n+ *\n+ * @param <O> the generic type of options\n+ */\n+public abstract class Chart<O extends ChartOptions> implements Serializable {\n+\n+    private static final long serialVersionUID = 4733939203616971674L;\n+\n+    /** The options. */\n+    protected O options;\n+\n+    public O getOptions() {\n+        return options;\n+    }\n+}"},{"sha":"33510c9243a91dc7ad50dfed529f0985a0bfb6a5","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/ChartData.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartData.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartData.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartData.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,47 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+import java.io.Serializable;\r\n+import java.util.ArrayList;\r\n+import java.util.List;\r\n+\r\n+/**\r\n+ * Provides labels and datasets.\r\n+ *\r\n+ * @param <T> the dataset type\r\n+ */\r\n+abstract class ChartData<T extends BaseDataSet> implements Serializable {\r\n+\r\n+    private static final long serialVersionUID = -5230056951310645070L;\r\n+\r\n+    /** The labels. */\r\n+    private final List<String> labels = new ArrayList<>();\r\n+\r\n+    /** The datasets. */\r\n+    private final List<T> datasets = new ArrayList<>();\r\n+\r\n+    public List<String> getLabels() {\r\n+        return labels;\r\n+    }\r\n+\r\n+    public List<T> getDatasets() {\r\n+        return datasets;\r\n+    }\r\n+}\r"},{"sha":"5ca88cbaae87329c3c693c3f1c80ed302b251602","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/ChartJSBehavior.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartJSBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartJSBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartJSBehavior.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.chartjs;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.AbstractDefaultAjaxBehavior;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n+\n+/**\n+ * Builds the bridge between wicket and chart.js' javascript.\n+ */\n+public class ChartJSBehavior extends AbstractDefaultAjaxBehavior {\n+\n+    private static final long serialVersionUID = 5935294904099227859L;\n+\n+    @Override\n+    protected void respond(final AjaxRequestTarget target) {\n+    }\n+\n+    @Override\n+    public void renderHead(final Component component, final IHeaderResponse response) {\n+        super.renderHead(component, response);\n+\n+        response.render(OnDomReadyHeaderItem.forScript(\n+                \"WicketCharts['\" + component.getMarkupId() + \"']=buildChart('\" + component.getMarkupId() + \"');\"));\n+\n+        if (component.getParent() instanceof ChartJSPanel) {\n+            response.render(OnDomReadyHeaderItem.forScript(((ChartJSPanel) component.getParent()).generateChart()));\n+        }\n+    }\n+}"},{"sha":"a06c6c33233d4578ebab26bf9c05ef9aa6824c47","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/ChartJSPanel.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartJSPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartJSPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartJSPanel.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.chartjs;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ChartJSPanel extends Panel {\n+\n+    private static final long serialVersionUID = -3844680585650585253L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(ChartJSPanel.class);\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper().setSerializationInclusion(Include.NON_NULL);\n+\n+    private final IModel<? extends Chart<?>> model;\n+\n+    private final WebMarkupContainer container;\n+\n+    public ChartJSPanel(\n+            final String id,\n+            final IModel<? extends Chart<?>> model) {\n+\n+        super(id, model);\n+\n+        this.model = model;\n+        this.container = new WebMarkupContainer(\"chart\");\n+    }\n+\n+    @Override\n+    protected void onInitialize() {\n+        super.onInitialize();\n+        add(container);\n+        container.setOutputMarkupId(true);\n+        container.add(new ChartJSBehavior());\n+    }\n+\n+    public Chart<?> getChart() {\n+        return model.getObject();\n+    }\n+\n+    public String generateChart() {\n+        String dataString = null;\n+        String optionString = null;\n+        try {\n+            Object data = (model.getObject() instanceof SimpleChart)\n+                    ? ((SimpleChart) model.getObject()).getData()\n+                    : ((DataSetChart) model.getObject()).getData();\n+            dataString = MAPPER.writeValueAsString(data);\n+            optionString = MAPPER.writeValueAsString(model.getObject().getOptions());\n+        } catch (JsonProcessingException e) {\n+            LOG.error(\"Unexpected error during JSON serialization\", e);\n+        }\n+\n+        return \"var \" + container.getMarkupId() + \" = WicketCharts['\" + container.getMarkupId() + \"'].\"\n+                + model.getObject().getClass().getSimpleName() + \"(\" + dataString + \", \" + optionString + \");\";\n+    }\n+}"},{"sha":"942f6834e6f00bf0510486a7681ec16080212bf7","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/ChartOptions.java","status":"added","additions":641,"deletions":0,"changes":641,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartOptions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartOptions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartOptions.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,641 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+import com.fasterxml.jackson.annotation.JsonRawValue;\r\n+\r\n+import java.io.Serializable;\r\n+\r\n+/**\r\n+ * Provides some basic options, that are available for all kinds of charts.\r\n+ */\r\n+public abstract class ChartOptions implements Serializable {\r\n+\r\n+    private static final long serialVersionUID = 2401861279216541412L;\r\n+\r\n+    /** The animation. */\r\n+    private Boolean animation;\r\n+\r\n+    /** The animation steps. */\r\n+    private Integer animationSteps;\r\n+\r\n+    /** The animation easing. */\r\n+    private String animationEasing;\r\n+\r\n+    /** The on animation complete. */\r\n+    private String onAnimationComplete;\r\n+\r\n+    @JsonRawValue\r\n+    private String customTooltips;\r\n+\r\n+    private Boolean showScale;\r\n+\r\n+    /** The scale override. */\r\n+    private Boolean scaleOverride;\r\n+\r\n+    // ** The next three are required if scaleOverride is true **\r\n+    /** The scale steps. */\r\n+    private Integer scaleSteps;\r\n+\r\n+    /** The scale step width. */\r\n+    private Integer scaleStepWidth;\r\n+\r\n+    /** The scale start value. */\r\n+    private Integer scaleStartValue;\r\n+\r\n+    /** The scale line color. */\r\n+    private String scaleLineColor;\r\n+\r\n+    /** The scale line width. */\r\n+    private Integer scaleLineWidth;\r\n+\r\n+    /** The scale show labels. */\r\n+    private Boolean scaleShowLabels;\r\n+\r\n+    /** The scale label. */\r\n+    private String scaleLabel;\r\n+\r\n+    /** The scale font family. */\r\n+    private String scaleFontFamily;\r\n+\r\n+    /** The scale font size. */\r\n+    private Integer scaleFontSize;\r\n+\r\n+    /** The scale font style. */\r\n+    private String scaleFontStyle;\r\n+\r\n+    /** The scale font color. */\r\n+    private String scaleFontColor;\r\n+\r\n+    private Boolean scaleIntegersOnly;\r\n+\r\n+    private Boolean scaleBeginAtZero;\r\n+\r\n+    private Boolean responsive;\r\n+\r\n+    private Boolean maintainAspectRatio;\r\n+\r\n+    private Boolean showTooltips;\r\n+\r\n+    private String[] tooltipEvents = new String[] { \"mousemove\", \"touchstart\", \"touchmove\" };\r\n+\r\n+    private String tooltipFillColor;\r\n+\r\n+    private String tooltipFontFamily;\r\n+\r\n+    private Integer tooltipFontSize;\r\n+\r\n+    private String tooltipFontStyle;\r\n+\r\n+    private String tooltipFontColor;\r\n+\r\n+    private String tooltipTitleFontFamily;\r\n+\r\n+    private Integer tooltipTitleFontSize;\r\n+\r\n+    private String tooltipTitleFontStyle;\r\n+\r\n+    private String tooltipTitleFontColor;\r\n+\r\n+    private Integer tooltipYPadding;\r\n+\r\n+    private Integer tooltipXPadding;\r\n+\r\n+    private Integer tooltipCaretSize;\r\n+\r\n+    private Integer tooltipCornerRadius;\r\n+\r\n+    private Integer tooltipXOffset;\r\n+\r\n+    private String tooltipTemplate;\r\n+\r\n+    private String multiTooltipTemplate;\r\n+\r\n+    @JsonRawValue\r\n+    private String onAnimationProgress;\r\n+\r\n+    public String getCustomTooltips() {\r\n+        return customTooltips;\r\n+    }\r\n+\r\n+    public void setCustomTooltips(final String customTooltips) {\r\n+        this.customTooltips = customTooltips;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the animation.\r\n+     *\r\n+     * @return the animation\r\n+     */\r\n+    public Boolean getAnimation() {\r\n+        return animation;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the animation.\r\n+     *\r\n+     * @param animation decides whether to animate the chart (default is true)\r\n+     */\r\n+    public void setAnimation(final Boolean animation) {\r\n+        this.animation = animation;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the animation steps.\r\n+     *\r\n+     * @return the animation steps\r\n+     */\r\n+    public Integer getAnimationSteps() {\r\n+        return animationSteps;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the animation steps.\r\n+     *\r\n+     * @param animationSteps the number of animation steps (default is 60)\r\n+     */\r\n+    public void setAnimationSteps(final Integer animationSteps) {\r\n+        this.animationSteps = animationSteps;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the animation easing.\r\n+     *\r\n+     * @return the animation easing\r\n+     */\r\n+    public String getAnimationEasing() {\r\n+        return animationEasing;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the animation easing.\r\n+     *\r\n+     * @param animationEasing the animation easing effect (default is \"easeOutQuart\")\r\n+     */\r\n+    public void setAnimationEasing(final String animationEasing) {\r\n+        this.animationEasing = animationEasing;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the javascript function that fires on animation complete.\r\n+     *\r\n+     * @return the onAnimationComplete javascript function\r\n+     */\r\n+    public String getOnAnimationComplete() {\r\n+        return onAnimationComplete;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the onAnimationComplete javascript function.\r\n+     *\r\n+     * @param onAnimationComplete a function, that fires when the animation is complete\r\n+     */\r\n+    public void setOnAnimationComplete(final String onAnimationComplete) {\r\n+        this.onAnimationComplete = onAnimationComplete;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale override.\r\n+     *\r\n+     * @return the scale override\r\n+     */\r\n+    public Boolean getScaleOverride() {\r\n+        return scaleOverride;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale override.\r\n+     *\r\n+     * @param scaleOverride decides if you want to override with a hard coded scale\r\n+     */\r\n+    public void setScaleOverride(final Boolean scaleOverride) {\r\n+        this.scaleOverride = scaleOverride;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale steps.\r\n+     *\r\n+     * @return the scale steps\r\n+     */\r\n+    public Integer getScaleSteps() {\r\n+        return scaleSteps;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale steps.\r\n+     *\r\n+     * @param scaleSteps the number of steps in a hard coded scale (required if scaleOverride == true, default is null).\r\n+     */\r\n+    public void setScaleSteps(final Integer scaleSteps) {\r\n+        this.scaleSteps = scaleSteps;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale step width.\r\n+     *\r\n+     * @return the scale step width\r\n+     */\r\n+    public Integer getScaleStepWidth() {\r\n+        return scaleStepWidth;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale step width.\r\n+     *\r\n+     * @param scaleStepWidth the value jump in the hard coded scale (required if scaleOverride == true, default is\r\n+     * null).\r\n+     */\r\n+    public void setScaleStepWidth(final Integer scaleStepWidth) {\r\n+        this.scaleStepWidth = scaleStepWidth;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale start value.\r\n+     *\r\n+     * @return the scale start value\r\n+     */\r\n+    public Integer getScaleStartValue() {\r\n+        return scaleStartValue;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale start value.\r\n+     *\r\n+     * @param scaleStartValue the scale starting value (required if scaleOverride == true, default is null).\r\n+     */\r\n+    public void setScaleStartValue(final Integer scaleStartValue) {\r\n+        this.scaleStartValue = scaleStartValue;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale line color.\r\n+     *\r\n+     * @return the scale line color\r\n+     */\r\n+    public String getScaleLineColor() {\r\n+        return scaleLineColor;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale line color.\r\n+     *\r\n+     * @param scaleLineColor\r\n+     * color of the scale line\r\n+     */\r\n+    public void setScaleLineColor(final String scaleLineColor) {\r\n+        this.scaleLineColor = scaleLineColor;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale line width.\r\n+     *\r\n+     * @return the scale line width\r\n+     */\r\n+    public Integer getScaleLineWidth() {\r\n+        return scaleLineWidth;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale line width.\r\n+     *\r\n+     * @param scaleLineWidth the pixel width of the scale line\r\n+     */\r\n+    public void setScaleLineWidth(final Integer scaleLineWidth) {\r\n+        this.scaleLineWidth = scaleLineWidth;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale show labels.\r\n+     *\r\n+     * @return the scale show labels\r\n+     */\r\n+    public Boolean getScaleShowLabels() {\r\n+        return scaleShowLabels;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale show labels.\r\n+     *\r\n+     * @param scaleShowLabels decides whether to show labels on the scale\r\n+     */\r\n+    public void setScaleShowLabels(final Boolean scaleShowLabels) {\r\n+        this.scaleShowLabels = scaleShowLabels;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale label.\r\n+     *\r\n+     * @return the scale label\r\n+     */\r\n+    public String getScaleLabel() {\r\n+        return scaleLabel;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale label.\r\n+     *\r\n+     * @param scaleLabel an interpolated js string that can access value.\r\n+     */\r\n+    public void setScaleLabel(final String scaleLabel) {\r\n+        this.scaleLabel = scaleLabel;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale font family.\r\n+     *\r\n+     * @return the scale font family\r\n+     */\r\n+    public String getScaleFontFamily() {\r\n+        return scaleFontFamily;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale font family.\r\n+     *\r\n+     * @param scaleFontFamily scale label font declaration for the scale label (default is\r\n+     * \"'Arial'\").\r\n+     */\r\n+    public void setScaleFontFamily(final String scaleFontFamily) {\r\n+        this.scaleFontFamily = scaleFontFamily;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale font size.\r\n+     *\r\n+     * @return the scale font size\r\n+     */\r\n+    public Integer getScaleFontSize() {\r\n+        return scaleFontSize;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale font size.\r\n+     *\r\n+     * @param scaleFontSize the scale label font size in pixels\r\n+     */\r\n+    public void setScaleFontSize(final Integer scaleFontSize) {\r\n+        this.scaleFontSize = scaleFontSize;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale font style.\r\n+     *\r\n+     * @return the scale font style\r\n+     */\r\n+    public String getScaleFontStyle() {\r\n+        return scaleFontStyle;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale font style.\r\n+     *\r\n+     * @param scaleFontStyle the scale label font weight style (default is \"normal\").\r\n+     */\r\n+    public void setScaleFontStyle(final String scaleFontStyle) {\r\n+        this.scaleFontStyle = scaleFontStyle;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the scale font color.\r\n+     *\r\n+     * @return the scale font color\r\n+     */\r\n+    public String getScaleFontColor() {\r\n+        return scaleFontColor;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the scale font color.\r\n+     *\r\n+     * @param scaleFontColor the scale label font color (default is \"#666\").\r\n+     */\r\n+    public void setScaleFontColor(final String scaleFontColor) {\r\n+        this.scaleFontColor = scaleFontColor;\r\n+    }\r\n+\r\n+    public Boolean getShowScale() {\r\n+        return showScale;\r\n+    }\r\n+\r\n+    public void setShowScale(final Boolean showScale) {\r\n+        this.showScale = showScale;\r\n+    }\r\n+\r\n+    public Boolean getScaleIntegersOnly() {\r\n+        return scaleIntegersOnly;\r\n+    }\r\n+\r\n+    public void setScaleIntegersOnly(final Boolean scaleIntegersOnly) {\r\n+        this.scaleIntegersOnly = scaleIntegersOnly;\r\n+    }\r\n+\r\n+    public Boolean getScaleBeginAtZero() {\r\n+        return scaleBeginAtZero;\r\n+    }\r\n+\r\n+    public void setScaleBeginAtZero(final Boolean scaleBeginAtZero) {\r\n+        this.scaleBeginAtZero = scaleBeginAtZero;\r\n+    }\r\n+\r\n+    public Boolean getResponsive() {\r\n+        return responsive;\r\n+    }\r\n+\r\n+    public void setResponsive(final Boolean responsive) {\r\n+        this.responsive = responsive;\r\n+    }\r\n+\r\n+    public Boolean getMaintainAspectRatio() {\r\n+        return maintainAspectRatio;\r\n+    }\r\n+\r\n+    public void setMaintainAspectRatio(final Boolean maintainAspectRatio) {\r\n+        this.maintainAspectRatio = maintainAspectRatio;\r\n+    }\r\n+\r\n+    public Boolean getShowTooltips() {\r\n+        return showTooltips;\r\n+    }\r\n+\r\n+    public void setShowTooltips(final Boolean showTooltips) {\r\n+        this.showTooltips = showTooltips;\r\n+    }\r\n+\r\n+    public String[] getTooltipEvents() {\r\n+        return tooltipEvents;\r\n+    }\r\n+\r\n+    public void setTooltipEvents(final String[] tooltipEvents) {\r\n+        this.tooltipEvents = tooltipEvents;\r\n+    }\r\n+\r\n+    public String getTooltipFillColor() {\r\n+        return tooltipFillColor;\r\n+    }\r\n+\r\n+    public void setTooltipFillColor(final String tooltipFillColor) {\r\n+        this.tooltipFillColor = tooltipFillColor;\r\n+    }\r\n+\r\n+    public String getTooltipFontFamily() {\r\n+        return tooltipFontFamily;\r\n+    }\r\n+\r\n+    public void setTooltipFontFamily(final String tooltipFontFamily) {\r\n+        this.tooltipFontFamily = tooltipFontFamily;\r\n+    }\r\n+\r\n+    public Integer getTooltipFontSize() {\r\n+        return tooltipFontSize;\r\n+    }\r\n+\r\n+    public void setTooltipFontSize(final Integer tooltipFontSize) {\r\n+        this.tooltipFontSize = tooltipFontSize;\r\n+    }\r\n+\r\n+    public String getTooltipFontStyle() {\r\n+        return tooltipFontStyle;\r\n+    }\r\n+\r\n+    public void setTooltipFontStyle(final String tooltipFontStyle) {\r\n+        this.tooltipFontStyle = tooltipFontStyle;\r\n+    }\r\n+\r\n+    public String getTooltipFontColor() {\r\n+        return tooltipFontColor;\r\n+    }\r\n+\r\n+    public void setTooltipFontColor(final String tooltipFontColor) {\r\n+        this.tooltipFontColor = tooltipFontColor;\r\n+    }\r\n+\r\n+    public String getTooltipTitleFontFamily() {\r\n+        return tooltipTitleFontFamily;\r\n+    }\r\n+\r\n+    public void setTooltipTitleFontFamily(final String tooltipTitleFontFamily) {\r\n+        this.tooltipTitleFontFamily = tooltipTitleFontFamily;\r\n+    }\r\n+\r\n+    public Integer getTooltipTitleFontSize() {\r\n+        return tooltipTitleFontSize;\r\n+    }\r\n+\r\n+    public void setTooltipTitleFontSize(final Integer tooltipTitleFontSize) {\r\n+        this.tooltipTitleFontSize = tooltipTitleFontSize;\r\n+    }\r\n+\r\n+    public String getTooltipTitleFontStyle() {\r\n+        return tooltipTitleFontStyle;\r\n+    }\r\n+\r\n+    public void setTooltipTitleFontStyle(final String tooltipTitleFontStyle) {\r\n+        this.tooltipTitleFontStyle = tooltipTitleFontStyle;\r\n+    }\r\n+\r\n+    public String getTooltipTitleFontColor() {\r\n+        return tooltipTitleFontColor;\r\n+    }\r\n+\r\n+    public void setTooltipTitleFontColor(final String tooltipTitleFontColor) {\r\n+        this.tooltipTitleFontColor = tooltipTitleFontColor;\r\n+    }\r\n+\r\n+    public Integer getTooltipYPadding() {\r\n+        return tooltipYPadding;\r\n+    }\r\n+\r\n+    public void setTooltipYPadding(final Integer tooltipYPadding) {\r\n+        this.tooltipYPadding = tooltipYPadding;\r\n+    }\r\n+\r\n+    public Integer getTooltipXPadding() {\r\n+        return tooltipXPadding;\r\n+    }\r\n+\r\n+    public void setTooltipXPadding(final Integer tooltipXPadding) {\r\n+        this.tooltipXPadding = tooltipXPadding;\r\n+    }\r\n+\r\n+    public Integer getTooltipCaretSize() {\r\n+        return tooltipCaretSize;\r\n+    }\r\n+\r\n+    public void setTooltipCaretSize(final Integer tooltipCaretSize) {\r\n+        this.tooltipCaretSize = tooltipCaretSize;\r\n+    }\r\n+\r\n+    public Integer getTooltipCornerRadius() {\r\n+        return tooltipCornerRadius;\r\n+    }\r\n+\r\n+    public void setTooltipCornerRadius(final Integer tooltipCornerRadius) {\r\n+        this.tooltipCornerRadius = tooltipCornerRadius;\r\n+    }\r\n+\r\n+    public Integer getTooltipXOffset() {\r\n+        return tooltipXOffset;\r\n+    }\r\n+\r\n+    public void setTooltipXOffset(final Integer tooltipXOffset) {\r\n+        this.tooltipXOffset = tooltipXOffset;\r\n+    }\r\n+\r\n+    public String getTooltipTemplate() {\r\n+        return tooltipTemplate;\r\n+    }\r\n+\r\n+    public void setTooltipTemplate(final String tooltipTemplate) {\r\n+        this.tooltipTemplate = tooltipTemplate;\r\n+    }\r\n+\r\n+    public String getMultiTooltipTemplate() {\r\n+        return multiTooltipTemplate;\r\n+    }\r\n+\r\n+    public void setMultiTooltipTemplate(final String multiTooltipTemplate) {\r\n+        this.multiTooltipTemplate = multiTooltipTemplate;\r\n+    }\r\n+\r\n+    public String getOnAnimationProgress() {\r\n+        return onAnimationProgress;\r\n+    }\r\n+\r\n+    public void setOnAnimationProgress(final String onAnimationProgress) {\r\n+        this.onAnimationProgress = onAnimationProgress;\r\n+    }\r\n+\r\n+    /**\r\n+     * Tests whether this chart is responsive or not.\r\n+     *\r\n+     * @return true if its responsive, false otherwise.\r\n+     */\r\n+    public boolean isResponsive() {\r\n+        return responsive;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the responsive option for this chart.\r\n+     *\r\n+     * @param responsive the responsive option value.\r\n+     */\r\n+    public void setResponsive(final boolean responsive) {\r\n+        this.responsive = responsive;\r\n+    }\r\n+}\r"},{"sha":"cc4d896927f8e841d77ae6c05591cd19014ebef9","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/DataSetChart.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDataSetChart.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDataSetChart.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDataSetChart.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,44 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+/**\r\n+ * Provides chart data and options.\r\n+ *\r\n+ * @param <D> the generic type of chart data\r\n+ * @param <O> the generic type of chart options\r\n+ * @param <S> the generic type of a chart data set\r\n+ */\r\n+abstract class DataSetChart<\r\n+        D extends ChartData<S>, O extends ChartOptions, S extends BaseDataSet>\r\n+        extends Chart<O> {\r\n+\r\n+    private static final long serialVersionUID = 999846601210465414L;\r\n+\r\n+    /** The data. */\r\n+    protected D data;\r\n+\r\n+    public D getData() {\r\n+        return data;\r\n+    }\r\n+\r\n+    public void setData(final D data) {\r\n+        this.data = data;\r\n+    }\r\n+}\r"},{"sha":"6121093cc08f52125199498aa5f0dae1fbfb11c6","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/Doughnut.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnut.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnut.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnut.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,49 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+import java.io.Serializable;\r\n+import java.util.ArrayList;\r\n+import java.util.List;\r\n+\r\n+/**\r\n+ * Provides a simple implementation of chart.js doughnut chart.\r\n+ *\r\n+ * @see <a href=\"http://www.chartjs.org/docs/#doughnutChart\">chart.js docs</a>\r\n+ */\r\n+public class Doughnut extends SimpleChart<DoughnutChartData, DoughnutChartOptions> implements Serializable {\r\n+\r\n+    private static final long serialVersionUID = -6898362145345731457L;\r\n+\r\n+    @Override\r\n+    public DoughnutChartOptions getOptions() {\r\n+        if (options == null) {\r\n+            options = new DoughnutChartOptions();\r\n+        }\r\n+        return options;\r\n+    }\r\n+\r\n+    @Override\r\n+    public List<DoughnutChartData> getData() {\r\n+        if (data == null) {\r\n+            data = new ArrayList<>();\r\n+        }\r\n+        return data;\r\n+    }\r\n+}\r"},{"sha":"5403785ae825d85fc5e3fce64d3621c868307545","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/DoughnutChartData.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnutChartData.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnutChartData.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnutChartData.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,52 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+/**\r\n+ * Provides chart data used by doughnut charts.\r\n+ */\r\n+public class DoughnutChartData extends SimpleColorValueChartData {\r\n+\r\n+    private static final long serialVersionUID = -5122104387810776812L;\r\n+\r\n+    private String label;\r\n+\r\n+    /**\r\n+     * Instantiates a new doughnut chart data.\r\n+     *\r\n+     * @param value the value\r\n+     * @param color the color\r\n+     */\r\n+    public DoughnutChartData(final Integer value, final String color) {\r\n+        super(value, color);\r\n+    }\r\n+\r\n+    public DoughnutChartData(final Number value, final String color, final String label) {\r\n+        super(value, color);\r\n+        this.label = label;\r\n+    }\r\n+\r\n+    public String getLabel() {\r\n+        return label;\r\n+    }\r\n+\r\n+    public void setLabel(final String label) {\r\n+        this.label = label;\r\n+    }\r\n+}\r"},{"sha":"b72dafbe71152033019a351779bf388aaaf2aba6","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/DoughnutChartOptions.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnutChartOptions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnutChartOptions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnutChartOptions.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,49 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+/**\r\n+ * Provides options, that are available for {@link Doughnut}.\r\n+ */\r\n+public class DoughnutChartOptions extends PieChartOptions {\r\n+\r\n+    private static final long serialVersionUID = -5356780831848556616L;\r\n+\r\n+    /** The percentage inner cutout. */\r\n+    private Integer percentageInnerCutout;\r\n+\r\n+    /**\r\n+     * Gets the percentage inner cutout.\r\n+     *\r\n+     * @return the percentage inner cutout\r\n+     */\r\n+    public Integer getPercentageInnerCutout() {\r\n+        return percentageInnerCutout;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the percentage inner cutout.\r\n+     *\r\n+     * @param percentageInnerCutout the percentage of the chart that we cut out of the middle (default is 50).\r\n+     */\r\n+    public void setPercentageInnerCutout(final Integer percentageInnerCutout) {\r\n+        this.percentageInnerCutout = percentageInnerCutout;\r\n+    }\r\n+\r\n+}\r"},{"sha":"ab464854fa1b007c7038a60dd5ac6481aa962329","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/DoughnutDataSet.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnutDataSet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnutDataSet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FDoughnutDataSet.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.chartjs;\n+\n+import java.util.List;\n+\n+/**\n+ * Provides all information needed for {@link DoughnutChartData}.\n+ */\n+public class DoughnutDataSet extends BaseDataSet {\n+\n+    private static final long serialVersionUID = 3095383371272813559L;\n+\n+    /**\n+     * Instantiates a new bar data set.\n+     *\n+     * @param data the values\n+     */\n+    public DoughnutDataSet(final List<? extends Number> data) {\n+        super(data);\n+    }\n+}"},{"sha":"9af958a29e62aa6aff61197639dd8d17be1b5a36","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/Line.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLine.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLine.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLine.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.chartjs;\n+\n+public class Line extends DataSetChart<LineChartData<LineDataSet>, LineChartOptions, LineDataSet> {\n+\n+    private static final long serialVersionUID = -2467327116468783154L;\n+\n+    @Override\n+    public LineChartOptions getOptions() {\n+        if (options == null) {\n+            options = new LineChartOptions();\n+        }\n+        return options;\n+    }\n+\n+    @Override\n+    public LineChartData<LineDataSet> getData() {\n+        if (data == null) {\n+            data = new LineChartData<>();\n+        }\n+        return data;\n+    }\n+}"},{"sha":"f8617d226ef1a404fa2a11d04611b5b819064dec","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/LineChartData.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLineChartData.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLineChartData.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLineChartData.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,30 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+/**\r\n+ * Provides chart data used by line charts.\r\n+ *\r\n+ * @param <T> the generic type of it's dataset\r\n+ */\r\n+public class LineChartData<T extends PointColorDataSet> extends ChartData<T> {\r\n+\r\n+    private static final long serialVersionUID = 9057475640743455047L;\r\n+\r\n+}\r"},{"sha":"1aa824696acfb234de086aa79cefe97f4e0f196a","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/LineChartOptions.java","status":"added","additions":227,"deletions":0,"changes":227,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLineChartOptions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLineChartOptions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLineChartOptions.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,227 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+/**\r\n+ * Provides options for {@link Line}.\r\n+ */\r\n+public class LineChartOptions extends ChartOptions {\r\n+\r\n+    private static final long serialVersionUID = -5356780831848556616L;\r\n+\r\n+    private Boolean scaleShowHorizontalLines = true;\r\n+\r\n+    private Boolean scaleShowVerticalLines = true;\r\n+\r\n+    private Double bezierCurveTension = 0.4;\r\n+\r\n+    private Integer pointHitDetectionRadius = 20;\r\n+\r\n+    private String legendTemplate = \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\">\"\r\n+            + \"<% for (var i=0; i<datasets.length; i++){%><li>\"\r\n+            + \"<span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span>\"\r\n+            + \"<%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\";\r\n+\r\n+    /** The bezier curve. */\r\n+    private Boolean bezierCurve;\r\n+\r\n+    /** The point dot. */\r\n+    private Boolean pointDot;\r\n+\r\n+    /** The point dot radius. */\r\n+    private Integer pointDotRadius;\r\n+\r\n+    /** The point dot stroke width. */\r\n+    private Integer pointDotStrokeWidth;\r\n+\r\n+    /** The dataset stroke. */\r\n+    private Boolean datasetStroke;\r\n+\r\n+    /** The dataset stroke width. */\r\n+    private Integer datasetStrokeWidth;\r\n+\r\n+    /** The dataset fill. */\r\n+    private Boolean datasetFill;\r\n+\r\n+    public Boolean getScaleShowHorizontalLines() {\r\n+        return scaleShowHorizontalLines;\r\n+    }\r\n+\r\n+    public void setScaleShowHorizontalLines(final Boolean scaleShowHorizontalLines) {\r\n+        this.scaleShowHorizontalLines = scaleShowHorizontalLines;\r\n+    }\r\n+\r\n+    public Boolean getScaleShowVerticalLines() {\r\n+        return scaleShowVerticalLines;\r\n+    }\r\n+\r\n+    public void setScaleShowVerticalLines(final Boolean scaleShowVerticalLines) {\r\n+        this.scaleShowVerticalLines = scaleShowVerticalLines;\r\n+    }\r\n+\r\n+    public Double getBezierCurveTension() {\r\n+        return bezierCurveTension;\r\n+    }\r\n+\r\n+    public void setBezierCurveTension(final Double bezierCurveTension) {\r\n+        this.bezierCurveTension = bezierCurveTension;\r\n+    }\r\n+\r\n+    public Integer getPointHitDetectionRadius() {\r\n+        return pointHitDetectionRadius;\r\n+    }\r\n+\r\n+    public void setPointHitDetectionRadius(final Integer pointHitDetectionRadius) {\r\n+        this.pointHitDetectionRadius = pointHitDetectionRadius;\r\n+    }\r\n+\r\n+    public String getLegendTemplate() {\r\n+        return legendTemplate;\r\n+    }\r\n+\r\n+    public void setLegendTemplate(final String legendTemplate) {\r\n+        this.legendTemplate = legendTemplate;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the bezier curve.\r\n+     *\r\n+     * @return the bezier curve\r\n+     */\r\n+    public Boolean getBezierCurve() {\r\n+        return bezierCurve;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the bezier curve.\r\n+     *\r\n+     * @param bezierCurve decides whether the line is curved between points (default is true).\r\n+     */\r\n+    public void setBezierCurve(final Boolean bezierCurve) {\r\n+        this.bezierCurve = bezierCurve;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the point dot.\r\n+     *\r\n+     * @return the point dot\r\n+     */\r\n+    public Boolean getPointDot() {\r\n+        return pointDot;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the point dot.\r\n+     *\r\n+     * @param pointDot decides whether to show a dot for each point (default is true).\r\n+     */\r\n+    public void setPointDot(final Boolean pointDot) {\r\n+        this.pointDot = pointDot;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the point dot radius.\r\n+     *\r\n+     * @return the point dot radius\r\n+     */\r\n+    public Integer getPointDotRadius() {\r\n+        return pointDotRadius;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the point dot radius.\r\n+     *\r\n+     * @param pointDotRadius the new point dot radius (default is 3).\r\n+     */\r\n+    public void setPointDotRadius(final Integer pointDotRadius) {\r\n+        this.pointDotRadius = pointDotRadius;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the point dot stroke width.\r\n+     *\r\n+     * @return the point dot stroke width\r\n+     */\r\n+    public Integer getPointDotStrokeWidth() {\r\n+        return pointDotStrokeWidth;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the point dot stroke width.\r\n+     *\r\n+     * @param pointDotStrokeWidth the new point dot stroke width (default is 1).\r\n+     */\r\n+    public void setPointDotStrokeWidth(final Integer pointDotStrokeWidth) {\r\n+        this.pointDotStrokeWidth = pointDotStrokeWidth;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the dataset stroke.\r\n+     *\r\n+     * @return the dataset stroke\r\n+     */\r\n+    public Boolean getDatasetStroke() {\r\n+        return datasetStroke;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the dataset stroke.\r\n+     *\r\n+     * @param datasetStroke decides whether to show a stroke for datasets (default is true)\r\n+     */\r\n+    public void setDatasetStroke(final Boolean datasetStroke) {\r\n+        this.datasetStroke = datasetStroke;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the dataset stroke width.\r\n+     *\r\n+     * @return the dataset stroke width\r\n+     */\r\n+    public Integer getDatasetStrokeWidth() {\r\n+        return datasetStrokeWidth;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the dataset stroke width.\r\n+     *\r\n+     * @param datasetStrokeWidth the new dataset stroke width (default is 2).\r\n+     */\r\n+    public void setDatasetStrokeWidth(final Integer datasetStrokeWidth) {\r\n+        this.datasetStrokeWidth = datasetStrokeWidth;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the dataset fill.\r\n+     *\r\n+     * @return the dataset fill\r\n+     */\r\n+    public Boolean getDatasetFill() {\r\n+        return datasetFill;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the dataset fill.\r\n+     *\r\n+     * @param datasetFill whether to fill the dataset with a color (default is true)\r\n+     */\r\n+    public void setDatasetFill(final Boolean datasetFill) {\r\n+        this.datasetFill = datasetFill;\r\n+    }\r\n+}\r"},{"sha":"610dccc5418b77a18373c7704036ac39add77195","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/LineDataSet.java","status":"renamed","additions":43,"deletions":42,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLineDataSet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLineDataSet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FLineDataSet.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -1,42 +1,43 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.widgets;\n-\n-import com.pingunaut.wicket.chartjs.data.sets.BarDataSet;\n-import java.util.List;\n-\n-public class LabeledBarDataSet extends BarDataSet {\n-\n-    private static final long serialVersionUID = -6571823370630502272L;\n-\n-    private String label;\n-\n-    public LabeledBarDataSet(final List<? extends Number> values) {\n-        super(values);\n-    }\n-\n-    public String getLabel() {\n-        return label;\n-    }\n-\n-    public void setLabel(final String label) {\n-        this.label = label;\n-    }\n-\n-}\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+import java.util.List;\r\n+\r\n+/**\r\n+ * Provides all information needed for {@link LineChartData}.\r\n+ */\r\n+public class LineDataSet extends PointColorDataSet {\r\n+\r\n+    private static final long serialVersionUID = -3154092519924576329L;\r\n+\r\n+    private String label;\r\n+\r\n+    public LineDataSet(final List<? extends Number> data) {\r\n+        super(data);\r\n+    }\r\n+\r\n+    public String getLabel() {\r\n+        return label;\r\n+    }\r\n+\r\n+    public void setLabel(final String label) {\r\n+        this.label = label;\r\n+    }\r\n+}\r","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/LabeledBarDataSet.java"},{"sha":"9177d8b8e5dd013cb534a2d98bbafc6670760816","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/PieChartOptions.java","status":"added","additions":145,"deletions":0,"changes":145,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FPieChartOptions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FPieChartOptions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FPieChartOptions.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,145 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.chartjs;\n+\n+/**\n+ * Provides options, that are available for {@link Pie}.\n+ */\n+public class PieChartOptions extends ChartOptions {\n+\n+    private static final long serialVersionUID = -5356780831848556616L;\n+\n+    /** The segment show stroke. */\n+    private Boolean segmentShowStroke;\n+\n+    /** The segment stroke color. */\n+    private String segmentStrokeColor;\n+\n+    /** The segment stroke width. */\n+    private Integer segmentStrokeWidth;\n+\n+    /** The animate rotate. */\n+    private Boolean animateRotate;\n+\n+    /** The animate scale. */\n+    private Boolean animateScale;\n+\n+    private String legendTemplate = \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\">\"\n+            + \"<% for (var i=0; i<segments.length; i++){%><li>\"\n+            + \"<span style=\\\"background-color:<%=segments[i].fillColor%>\\\">\"\n+            + \"<%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\";\n+\n+    public String getLegendTemplate() {\n+        return legendTemplate;\n+    }\n+\n+    public void setLegendTemplate(final String legendTemplate) {\n+        this.legendTemplate = legendTemplate;\n+    }\n+\n+    /**\n+     * Gets the segment show stroke.\n+     *\n+     * @return the segment show stroke\n+     */\n+    public Boolean getSegmentShowStroke() {\n+        return segmentShowStroke;\n+    }\n+\n+    /**\n+     * Sets the segment show stroke.\n+     *\n+     * @param segmentShowStroke decides whether we should show a stroke on each segment (default is true)\n+     */\n+    public void setSegmentShowStroke(final Boolean segmentShowStroke) {\n+        this.segmentShowStroke = segmentShowStroke;\n+    }\n+\n+    /**\n+     * Gets the segment stroke color.\n+     *\n+     * @return the segment stroke color\n+     */\n+    public String getSegmentStrokeColor() {\n+        return segmentStrokeColor;\n+    }\n+\n+    /**\n+     * Sets the segment stroke color.\n+     *\n+     * @param segmentStrokeColor the new segment stroke color (default is \"#fff\").\n+     */\n+    public void setSegmentStrokeColor(final String segmentStrokeColor) {\n+        this.segmentStrokeColor = segmentStrokeColor;\n+    }\n+\n+    /**\n+     * Gets the segment stroke width.\n+     *\n+     * @return the segment stroke width\n+     */\n+    public Integer getSegmentStrokeWidth() {\n+        return segmentStrokeWidth;\n+    }\n+\n+    /**\n+     * Sets the segment stroke width.\n+     *\n+     * @param segmentStrokeWidth the new segment stroke width (default is 2).\n+     */\n+    public void setSegmentStrokeWidth(final Integer segmentStrokeWidth) {\n+        this.segmentStrokeWidth = segmentStrokeWidth;\n+    }\n+\n+    /**\n+     * Gets the animate rotate.\n+     *\n+     * @return the animate rotate\n+     */\n+    public Boolean getAnimateRotate() {\n+        return animateRotate;\n+    }\n+\n+    /**\n+     * Sets the animate rotate.\n+     *\n+     * @param animateRotate decides whether we animate the rotation of the pie (default is true).\n+     */\n+    public void setAnimateRotate(final Boolean animateRotate) {\n+        this.animateRotate = animateRotate;\n+    }\n+\n+    /**\n+     * Gets the animate scale.\n+     *\n+     * @return the animate scale\n+     */\n+    public Boolean getAnimateScale() {\n+        return animateScale;\n+    }\n+\n+    /**\n+     * Sets the animate scale.\n+     *\n+     * @param animateScale decides whether we animate scaling the Pie from the center (default is false).\n+     */\n+    public void setAnimateScale(final Boolean animateScale) {\n+        this.animateScale = animateScale;\n+    }\n+}"},{"sha":"7d96b218b4fc1f8e3027a7a7b7fd304afc24c3d9","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/PointColorDataSet.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FPointColorDataSet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FPointColorDataSet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FPointColorDataSet.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,80 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+import java.util.List;\r\n+\r\n+/**\r\n+ * Provides some additional point color and point stroke color information.\r\n+ */\r\n+public abstract class PointColorDataSet extends BaseDataSet {\r\n+\r\n+    private static final long serialVersionUID = 1581171902504828797L;\r\n+\r\n+    /** The point color. */\r\n+    private String pointColor = \"rgba(220,220,220,1)\";\r\n+\r\n+    /** The point stroke color. */\r\n+    private String pointStrokeColor = \"#fff\";\r\n+\r\n+    /**\r\n+     * Instantiates a new abstract point color data set.\r\n+     *\r\n+     * @param data the values\r\n+     */\r\n+    public PointColorDataSet(final List<? extends Number> data) {\r\n+        super(data);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the point color.\r\n+     *\r\n+     * @return the point color\r\n+     */\r\n+    public String getPointColor() {\r\n+        return pointColor;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the point color.\r\n+     *\r\n+     * @param pointColor the point color\r\n+     */\r\n+    public void setPointColor(final String pointColor) {\r\n+        this.pointColor = pointColor;\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the point stroke color.\r\n+     *\r\n+     * @return the point stroke color\r\n+     */\r\n+    public String getPointStrokeColor() {\r\n+        return pointStrokeColor;\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets the point stroke color.\r\n+     *\r\n+     * @param pointStrokeColor the point stroke color\r\n+     */\r\n+    public void setPointStrokeColor(final String pointStrokeColor) {\r\n+        this.pointStrokeColor = pointStrokeColor;\r\n+    }\r\n+}\r"},{"sha":"9af3f2d6bf90ac5c2bfff01abe291af529590d2c","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/SimpleChart.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FSimpleChart.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FSimpleChart.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FSimpleChart.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.chartjs;\n+\n+import java.util.List;\n+\n+/**\n+ * Provides chart data and options.\n+ *\n+ * @param <D> the generic type of chart data\n+ * @param <O> the generic type of chart options\n+ */\n+public abstract class SimpleChart<D extends SimpleColorValueChartData, O extends ChartOptions> extends Chart<O> {\n+\n+    private static final long serialVersionUID = 4176838766615656412L;\n+\n+    /** The data. */\n+    protected List<D> data;\n+\n+    public List<D> getData() {\n+        return data;\n+    }\n+\n+    public void setData(final List<D> data) {\n+        this.data = data;\n+    }\n+}"},{"sha":"d10744c705fba631aa75e9f2baeb33eac87a7c49","filename":"client/console/src/main/java/org/apache/syncope/client/console/chartjs/SimpleColorValueChartData.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FSimpleColorValueChartData.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FSimpleColorValueChartData.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FSimpleColorValueChartData.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,52 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.client.console.chartjs;\r\n+\r\n+import java.io.Serializable;\r\n+\r\n+public class SimpleColorValueChartData implements Serializable {\r\n+\r\n+    private static final long serialVersionUID = 3049771486746243572L;\r\n+\r\n+    public SimpleColorValueChartData(final Number value, final String color) {\r\n+        this.value = value;\r\n+        this.color = color;\r\n+    }\r\n+\r\n+    private Number value;\r\n+\r\n+    private String color;\r\n+\r\n+    public String getColor() {\r\n+        return color;\r\n+    }\r\n+\r\n+    public void setColor(final String color) {\r\n+        this.color = color;\r\n+    }\r\n+\r\n+    public Number getValue() {\r\n+        return value;\r\n+    }\r\n+\r\n+    public void setValue(final Integer value) {\r\n+        this.value = value;\r\n+    }\r\n+\r\n+}\r"},{"sha":"541252dadb025e3ac23f496e1c900e9755dba309","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/AnyByRealmWidget.java","status":"modified","additions":25,"deletions":30,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FAnyByRealmWidget.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -18,16 +18,16 @@\n  */\n package org.apache.syncope.client.console.widgets;\n \n-import com.pingunaut.wicket.chartjs.chart.impl.Bar;\n-import com.pingunaut.wicket.chartjs.core.panel.BarChartPanel;\n-import com.pingunaut.wicket.chartjs.data.sets.BarDataSet;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.chartjs.Bar;\n+import org.apache.syncope.client.console.chartjs.BarDataSet;\n+import org.apache.syncope.client.console.chartjs.ChartJSPanel;\n import org.apache.wicket.model.Model;\n \n public class AnyByRealmWidget extends BaseWidget {\n@@ -48,7 +48,7 @@ public class AnyByRealmWidget extends BaseWidget {\n \n     private Map<String, Integer> any2ByRealm;\n \n-    private final BarChartPanel chart;\n+    private final ChartJSPanel chart;\n \n     public AnyByRealmWidget(\n             final String id,\n@@ -68,7 +68,7 @@ public AnyByRealmWidget(\n         this.any2ByRealm = any2ByRealm;\n         setOutputMarkupId(true);\n \n-        chart = new BarChartPanel(\n+        chart = new ChartJSPanel(\n                 \"chart\",\n                 Model.of(build(usersByRealm, groupsByRealm, anyType1, any1ByRealm, anyType2, any2ByRealm)));\n         add(chart);\n@@ -101,8 +101,19 @@ private Bar build(\n         List<String> realms = new ArrayList<>(realmSet);\n         Collections.sort(realms);\n \n+        Bar bar = new Bar();\n+        bar.getOptions().setScaleBeginAtZero(true);\n+        bar.getOptions().setBarShowStroke(true);\n+        bar.getOptions().setBarStrokeWidth(2);\n+        bar.getOptions().setBarValueSpacing(5);\n+        bar.getOptions().setBarDatasetSpacing(1);\n+        bar.getOptions().setResponsive(true);\n+        bar.getOptions().setMaintainAspectRatio(true);\n+        bar.getOptions().setMultiTooltipTemplate(\"<%= datasetLabel %> - <%= value %>\");\n+\n         for (int i = 0; i < realms.size() && i < MAX_REALMS; i++) {\n-            labels.add(StringUtils.prependIfMissing(StringUtils.substringAfterLast(realms.get(i), \"/\"), \"/\"));\n+            bar.getData().getLabels().add(\n+                    StringUtils.prependIfMissing(StringUtils.substringAfterLast(realms.get(i), \"/\"), \"/\"));\n \n             userValues.add(usersByRealm.get(realms.get(i)));\n             groupValues.add(groupsByRealm.get(realms.get(i)));\n@@ -114,42 +125,26 @@ private Bar build(\n             }\n         }\n \n-        Bar bar = new Bar();\n-        bar.getOptions().setScaleBeginAtZero(true);\n-        bar.getOptions().setScaleShowGridLines(true);\n-        bar.getOptions().setScaleGridLineWidth(1);\n-        bar.getOptions().setBarShowStroke(true);\n-        bar.getOptions().setBarStrokeWidth(2);\n-        bar.getOptions().setBarValueSpacing(5);\n-        bar.getOptions().setBarDatasetSpacing(1);\n-        bar.getOptions().setResponsive(true);\n-        bar.getOptions().setMaintainAspectRatio(true);\n-        bar.getOptions().setMultiTooltipTemplate(\"<%= datasetLabel %> - <%= value %>\");\n-\n-        bar.getData().setLabels(labels);\n-\n-        List<BarDataSet> datasets = new ArrayList<>();\n-        LabeledBarDataSet userDataSet = new LabeledBarDataSet(userValues);\n+        BarDataSet userDataSet = new BarDataSet(userValues);\n         userDataSet.setFillColor(\"orange\");\n         userDataSet.setLabel(getString(\"users\"));\n-        datasets.add(userDataSet);\n-        LabeledBarDataSet groupDataSet = new LabeledBarDataSet(groupValues);\n+        bar.getData().getDatasets().add(userDataSet);\n+        BarDataSet groupDataSet = new BarDataSet(groupValues);\n         groupDataSet.setFillColor(\"red\");\n         groupDataSet.setLabel(getString(\"groups\"));\n-        datasets.add(groupDataSet);\n+        bar.getData().getDatasets().add(groupDataSet);\n         if (anyType1 != null) {\n-            LabeledBarDataSet any1DataSet = new LabeledBarDataSet(any1Values);\n+            BarDataSet any1DataSet = new BarDataSet(any1Values);\n             any1DataSet.setFillColor(\"green\");\n             any1DataSet.setLabel(anyType1);\n-            datasets.add(any1DataSet);\n+            bar.getData().getDatasets().add(any1DataSet);\n         }\n         if (anyType2 != null) {\n-            LabeledBarDataSet any2DataSet = new LabeledBarDataSet(any2Values);\n+            BarDataSet any2DataSet = new BarDataSet(any2Values);\n             any2DataSet.setFillColor(\"aqua\");\n             any2DataSet.setLabel(anyType2);\n-            datasets.add(any2DataSet);\n+            bar.getData().getDatasets().add(any2DataSet);\n         }\n-        bar.getData().setDatasets(datasets);\n \n         return bar;\n     }"},{"sha":"5f26ffda4f7fbb4377907b8318f4924cd5dca2a6","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/CompletenessWidget.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -18,12 +18,13 @@\n  */\n package org.apache.syncope.client.console.widgets;\n \n-import com.pingunaut.wicket.chartjs.chart.impl.Doughnut;\n-import com.pingunaut.wicket.chartjs.core.panel.DoughnutChartPanel;\n import java.util.Map;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n+import org.apache.syncope.client.console.chartjs.ChartJSPanel;\n+import org.apache.syncope.client.console.chartjs.Doughnut;\n+import org.apache.syncope.client.console.chartjs.DoughnutChartData;\n import org.apache.syncope.client.console.pages.Notifications;\n import org.apache.syncope.client.console.pages.Policies;\n import org.apache.syncope.client.console.pages.Security;\n@@ -43,7 +44,7 @@ public class CompletenessWidget extends BaseWidget {\n \n     private Map<String, Boolean> confCompleteness;\n \n-    private final DoughnutChartPanel chart;\n+    private final ChartJSPanel chart;\n \n     private final WebMarkupContainer actions;\n \n@@ -66,7 +67,7 @@ public CompletenessWidget(final String id, final Map<String, Boolean> confComple\n \n         Pair<Doughnut, Integer> built = build(confCompleteness);\n \n-        chart = new DoughnutChartPanel(\"chart\", Model.of(built.getLeft()));\n+        chart = new ChartJSPanel(\"chart\", Model.of(built.getLeft()));\n         add(chart);\n \n         actions = new WebMarkupContainer(\"actions\");\n@@ -136,9 +137,9 @@ private Pair<Doughnut, Integer> build(final Map<String, Boolean> confCompletenes\n         }\n \n         doughnut.getData().add(\n-                new LabeledDoughnutChartData(done, \"blue\", getString(\"done\")));\n+                new DoughnutChartData(done, \"blue\", getString(\"done\")));\n         doughnut.getData().add(\n-                new LabeledDoughnutChartData(100 - done, \"red\", getString(\"todo\") + \": \" + todo));\n+                new DoughnutChartData(100 - done, \"red\", getString(\"todo\") + \": \" + todo));\n \n         return Pair.of(doughnut, todo);\n     }"},{"sha":"a06f5895372c4ccab600a0f3bcbe0ba1a0690fac","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/LoadWidget.java","status":"modified","additions":14,"deletions":20,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FLoadWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FLoadWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FLoadWidget.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -18,43 +18,33 @@\n  */\n package org.apache.syncope.client.console.widgets;\n \n-import com.pingunaut.wicket.chartjs.chart.impl.Line;\n-import com.pingunaut.wicket.chartjs.core.panel.LineChartPanel;\n-import com.pingunaut.wicket.chartjs.data.sets.LineDataSet;\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.lang3.time.DateFormatUtils;\n+import org.apache.syncope.client.console.chartjs.ChartJSPanel;\n+import org.apache.syncope.client.console.chartjs.Line;\n+import org.apache.syncope.client.console.chartjs.LineDataSet;\n import org.apache.syncope.common.lib.info.SystemInfo;\n import org.apache.wicket.model.Model;\n \n public class LoadWidget extends BaseWidget {\n \n     private static final long serialVersionUID = -816175678514035085L;\n \n-    private final LineChartPanel chart;\n+    private final ChartJSPanel chart;\n \n     public LoadWidget(final String id, final SystemInfo systeminfo) {\n         super(id);\n         setOutputMarkupId(true);\n \n-        chart = new LineChartPanel(\"chart\", Model.of(build(systeminfo)));\n+        chart = new ChartJSPanel(\"chart\", Model.of(build(systeminfo)));\n         add(chart);\n     }\n \n     private Line build(final SystemInfo systeminfo) {\n-        List<String> labels = new ArrayList<>();\n-\n         List<Double> cpuValues = new ArrayList<>();\n         List<Long> memValues = new ArrayList<>();\n \n-        for (SystemInfo.LoadInstant instant : systeminfo.getLoad()) {\n-            labels.add(DateFormatUtils.ISO_8601_EXTENDED_DATETIME_FORMAT.\n-                    format(systeminfo.getStartTime() + instant.getUptime()));\n-\n-            cpuValues.add(instant.getSystemLoadAverage() * 1000);\n-            memValues.add(instant.getTotalMemory());\n-        }\n-\n         Line line = new Line();\n         line.getOptions().setPointDot(false);\n         line.getOptions().setDatasetFill(false);\n@@ -63,21 +53,25 @@ private Line build(final SystemInfo systeminfo) {\n         line.getOptions().setShowScale(false);\n         line.getOptions().setMultiTooltipTemplate(\"<%= datasetLabel %>\");\n \n-        line.getData().setLabels(labels);\n+        for (SystemInfo.LoadInstant instant : systeminfo.getLoad()) {\n+            line.getData().getLabels().add(DateFormatUtils.ISO_8601_EXTENDED_DATETIME_FORMAT.\n+                    format(systeminfo.getStartTime() + instant.getUptime()));\n+\n+            cpuValues.add(instant.getSystemLoadAverage() * 1000);\n+            memValues.add(instant.getTotalMemory());\n+        }\n \n-        List<LineDataSet> datasets = new ArrayList<>();\n         LineDataSet cpuDataSet = new LineDataSet(cpuValues);\n         cpuDataSet.setLabel(\"CPU\");\n         cpuDataSet.setPointColor(\"purple\");\n         cpuDataSet.setStrokeColor(\"purple\");\n-        datasets.add(cpuDataSet);\n+        line.getData().getDatasets().add(cpuDataSet);\n \n         LineDataSet memDataSet = new LineDataSet(memValues);\n         memDataSet.setLabel(\"MEM\");\n         memDataSet.setPointColor(\"grey\");\n         memDataSet.setStrokeColor(\"grey\");\n-        datasets.add(memDataSet);\n-        line.getData().setDatasets(datasets);\n+        line.getData().getDatasets().add(memDataSet);\n \n         return line;\n     }"},{"sha":"c84a640e856c966e1303f8c29c7f96b79c1de952","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/UsersByStatusWidget.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUsersByStatusWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUsersByStatusWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FUsersByStatusWidget.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -18,9 +18,10 @@\n  */\n package org.apache.syncope.client.console.widgets;\n \n-import com.pingunaut.wicket.chartjs.chart.impl.Doughnut;\n-import com.pingunaut.wicket.chartjs.core.panel.DoughnutChartPanel;\n import java.util.Map;\n+import org.apache.syncope.client.console.chartjs.ChartJSPanel;\n+import org.apache.syncope.client.console.chartjs.Doughnut;\n+import org.apache.syncope.client.console.chartjs.DoughnutChartData;\n import org.apache.wicket.model.Model;\n \n public class UsersByStatusWidget extends BaseWidget {\n@@ -31,14 +32,14 @@ public class UsersByStatusWidget extends BaseWidget {\n \n     private Map<String, Integer> usersByStatus;\n \n-    private final DoughnutChartPanel chart;\n+    private final ChartJSPanel chart;\n \n     public UsersByStatusWidget(final String id, final Map<String, Integer> usersByStatus) {\n         super(id);\n         this.usersByStatus = usersByStatus;\n         setOutputMarkupId(true);\n \n-        chart = new DoughnutChartPanel(\"chart\", Model.of(build(usersByStatus)));\n+        chart = new ChartJSPanel(\"chart\", Model.of(build(usersByStatus)));\n         add(chart);\n     }\n \n@@ -49,7 +50,7 @@ private Doughnut build(final Map<String, Integer> usersByStatus) {\n \n         int i = 0;\n         for (Map.Entry<String, Integer> entry : usersByStatus.entrySet()) {\n-            doughnut.getData().add(new LabeledDoughnutChartData(entry.getValue(), COLORS[i % 5], entry.getKey()));\n+            doughnut.getData().add(new DoughnutChartData(entry.getValue(), COLORS[i % 5], entry.getKey()));\n             i++;\n         }\n \n@@ -64,5 +65,4 @@ public boolean refresh(final Map<String, Integer> usersByStatus) {\n         }\n         return false;\n     }\n-\n }"},{"sha":"25b29732d1c4e79b8df62e91bd9fda38c47b2bfd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/chartjs/ChartJSPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartJSPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartJSPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fchartjs%2FChartJSPanel.html?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <canvas wicket:id=\"chart\"></canvas>\n+  </wicket:panel>\n+</html>"},{"sha":"a324d8aabf0e62801f6392241cf9cf126631a8bc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Dashboard.html","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.html?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -17,6 +17,17 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n+    <script type=\"text/javascript\" src=\"webjars/chart.js/${chartjs.version}/Chart.min.js\"></script>\n+    <script type=\"text/javascript\">\n+      var WicketCharts = {};\n+      // Get context with jQuery - using jQuery's .get() method.\n+      function buildChart(markupId) {\n+        var ctx = $('#' + markupId).get(0).getContext('2d');\n+        return new Chart(ctx);\n+      }\n+    </script>\n+  </wicket:head>\n   <wicket:extend>\n     <section class=\"content\" wicket:id=\"content\">\n       <div class=\"box\">"},{"sha":"7a98f90199821885c19dbf630cd7939bccc8f37e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -228,20 +228,20 @@ public boolean handle(final String anyKey) {\n             doHandle(any);\n             return true;\n         } catch (IgnoreProvisionException e) {\n-            ProvisioningReport result = profile.getResults().stream()\n-                    .filter(r -> anyKey.equalsIgnoreCase(r.getKey()))\n-                    .findFirst()\n-                    .orElse(null);\n-\n+            ProvisioningReport result = profile.getResults().stream().\n+                    filter(report -> anyKey.equalsIgnoreCase(report.getKey())).\n+                    findFirst().\n+                    orElse(null);\n             if (result == null) {\n                 result = new ProvisioningReport();\n+                result.setKey(anyKey);\n+                result.setAnyType(any == null ? null : any.getType().getKey());\n+\n                 profile.getResults().add(result);\n             }\n \n             result.setOperation(ResourceOperation.NONE);\n-            result.setAnyType(any == null ? null : any.getType().getKey());\n             result.setStatus(ProvisioningReport.Status.IGNORE);\n-            result.setKey(anyKey);\n \n             LOG.warn(\"Ignoring during push\", e);\n             return true;"},{"sha":"1ccc74db9f9627ad590c8e0e66062f4db3fe021d","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/widgets/CamelMetricsWidget.java","status":"modified","additions":7,"deletions":10,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCamelMetricsWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCamelMetricsWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCamelMetricsWidget.java?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -18,14 +18,13 @@\n  */\n package org.apache.syncope.client.console.widgets;\n \n-import com.pingunaut.wicket.chartjs.chart.impl.Bar;\n-import com.pingunaut.wicket.chartjs.core.panel.BarChartPanel;\n-import com.pingunaut.wicket.chartjs.data.sets.BarDataSet;\n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.annotations.ExtWidget;\n+import org.apache.syncope.client.console.chartjs.Bar;\n+import org.apache.syncope.client.console.chartjs.BarDataSet;\n+import org.apache.syncope.client.console.chartjs.ChartJSPanel;\n import org.apache.syncope.client.console.rest.CamelRoutesRestClient;\n import org.apache.syncope.client.console.wicket.ajax.IndicatorAjaxTimerBehavior;\n import org.apache.syncope.common.lib.to.CamelMetrics;\n@@ -42,7 +41,7 @@ public class CamelMetricsWidget extends BaseExtWidget {\n \n     private List<CamelMetrics.MeanRate> meanRates;\n \n-    private final BarChartPanel chart;\n+    private final ChartJSPanel chart;\n \n     private final CamelRoutesRestClient restClient = new CamelRoutesRestClient();\n \n@@ -59,7 +58,7 @@ public CamelMetricsWidget(final String id, final PageReference pageRef) {\n             meanRates.add(metrics.getResponseMeanRates().get(i));\n         }\n \n-        chart = new BarChartPanel(\"chart\", Model.of(build(meanRates)));\n+        chart = new ChartJSPanel(\"chart\", Model.of(build(meanRates)));\n         container.add(chart);\n \n         container.add(new IndicatorAjaxTimerBehavior(Duration.seconds(60)) {\n@@ -84,22 +83,20 @@ protected void onTimer(final AjaxRequestTarget target) {\n     private Bar build(final List<CamelMetrics.MeanRate> meanRates) {\n         Bar bar = new Bar();\n         bar.getOptions().setScaleBeginAtZero(true);\n-        bar.getOptions().setScaleShowGridLines(true);\n-        bar.getOptions().setScaleGridLineWidth(1);\n         bar.getOptions().setBarShowStroke(true);\n         bar.getOptions().setBarStrokeWidth(2);\n         bar.getOptions().setBarValueSpacing(5);\n         bar.getOptions().setBarDatasetSpacing(1);\n         bar.getOptions().setResponsive(true);\n         bar.getOptions().setMaintainAspectRatio(true);\n \n-        bar.getData().setLabels(\n+        bar.getData().getLabels().addAll(\n                 meanRates.stream().map(input -> input.getRouteId()).collect(Collectors.toList()));\n \n         BarDataSet dataset = new BarDataSet(\n                 meanRates.stream().map(input -> input.getValue()).collect(Collectors.toList()));\n         dataset.setFillColor(\"blue\");\n-        bar.getData().setDatasets(Collections.singletonList(dataset));\n+        bar.getData().getDatasets().add(dataset);\n \n         return bar;\n     }"},{"sha":"547ed90cce3222d99c9cee0c2f7a5e056d0f9980","filename":"pom.xml","status":"modified","additions":7,"deletions":17,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e78f91e24b5a2860fd49e3d70dd7abcf8e12913d/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=e78f91e24b5a2860fd49e3d70dd7abcf8e12913d","patch":"@@ -439,11 +439,11 @@ under the License.\n     <codemirror.version>5.33.0</codemirror.version>\n     <googlediffmatchpath.version>20121119-1</googlediffmatchpath.version>\n     <jsplumb.version>2.0.7</jsplumb.version>\n+    <chartjs.version>1.0.2</chartjs.version>\n     \n     <wicket.version>7.10.0</wicket.version>\n     <wicket-jqueryui.version>7.10.2</wicket-jqueryui.version>\n     <wicket-bootstrap.version>0.10.17</wicket-bootstrap.version>\n-    <wicket-chartjs.version>7.0.1</wicket-chartjs.version>\n \n     <angular.version>1.6.10</angular.version>\n     <angular-ui-router.version>0.3.2</angular-ui-router.version>\n@@ -1213,22 +1213,7 @@ under the License.\n             <artifactId>momentjs</artifactId>\n           </exclusion>\n         </exclusions>\n-      </dependency>\n-      <dependency>\n-        <groupId>com.pingunaut</groupId>\n-        <artifactId>wicket-chartjs</artifactId>\n-        <version>${wicket-chartjs.version}</version>\n-        <exclusions>\n-          <exclusion>\n-            <groupId>org.slf4j</groupId>\n-            <artifactId>slf4j-log4j12</artifactId>\n-          </exclusion>\n-          <exclusion>\n-            <groupId>log4j</groupId>\n-            <artifactId>log4j</artifactId>\n-          </exclusion>\n-        </exclusions>\n-      </dependency>\t\t\t\n+      </dependency>\t\t\n       <!-- /Wicket -->\n       \n       <dependency>\n@@ -1354,6 +1339,11 @@ under the License.\n         <artifactId>jsplumb</artifactId>\n         <version>${jsplumb.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>org.webjars.bower</groupId>\n+        <artifactId>chart.js</artifactId>\n+        <version>${chartjs.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.webjars</groupId>\n         <artifactId>jquery-cookie</artifactId>"}]}