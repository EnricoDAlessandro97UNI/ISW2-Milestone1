{"sha":"d38272f61706caf3c075fe0bf426febf5c63f61f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQzODI3MmY2MTcwNmNhZjNjMDc1ZmUwYmY0MjZmZWJmNWM2M2Y2MWY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-09-02T14:45:33Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-09-02T14:45:33Z"},"message":"(Fixes issue 154)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247108 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0ea18e72d0906eeca93bf47ca5b7df11eb6680ae","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0ea18e72d0906eeca93bf47ca5b7df11eb6680ae"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d38272f61706caf3c075fe0bf426febf5c63f61f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d38272f61706caf3c075fe0bf426febf5c63f61f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d38272f61706caf3c075fe0bf426febf5c63f61f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d38272f61706caf3c075fe0bf426febf5c63f61f/comments","author":null,"committer":null,"parents":[{"sha":"cd16eb1446593969b1401f8672efecabb1a06ab4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cd16eb1446593969b1401f8672efecabb1a06ab4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cd16eb1446593969b1401f8672efecabb1a06ab4"}],"stats":{"total":1366,"additions":963,"deletions":403},"files":[{"sha":"8a35d92625d9d64f7bc4f0c96b5fe8dbc8b7572e","filename":"archetype/pom.xml","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -96,4 +96,33 @@\n         </plugins>\n     </build>\n \n+    <reporting>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-checkstyle-plugin</artifactId>\n+                <version>2.7</version>\n+                <configuration>\n+                    <configLocation>org/syncope/checkstyle.xml</configLocation>\n+                    <targetJdk>${targetJdk}</targetJdk>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-pmd-plugin</artifactId>\n+                <version>2.5</version>\n+                <configuration>\n+                    <rulesets>\n+                        <ruleset>org/syncope/pmd.xml</ruleset>\n+                    </rulesets>\n+                    <targetJdk>${targetJdk}</targetJdk>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-jxr-plugin</artifactId>\n+                <version>2.3</version>\n+            </plugin>\n+        </plugins>\n+    </reporting>\n </project>"},{"sha":"591abb97ee4d713b13546f8f41b1dab1828191e8","filename":"build-tools/pom.xml","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/build-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/build-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fpom.xml?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -39,4 +39,33 @@\n         </dependency> \n     </dependencies>\n \n+    <reporting>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-checkstyle-plugin</artifactId>\n+                <version>2.7</version>\n+                <configuration>\n+                    <configLocation>org/syncope/checkstyle.xml</configLocation>\n+                    <targetJdk>${targetJdk}</targetJdk>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-pmd-plugin</artifactId>\n+                <version>2.5</version>\n+                <configuration>\n+                    <rulesets>\n+                        <ruleset>org/syncope/pmd.xml</ruleset>\n+                    </rulesets>\n+                    <targetJdk>${targetJdk}</targetJdk>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-jxr-plugin</artifactId>\n+                <version>2.3</version>\n+            </plugin>\n+        </plugins>\n+    </reporting>\n </project>"},{"sha":"5d4472f5f5536831fcc9082e45e943c64a2ca1ca","filename":"build-tools/src/main/resources/org/syncope/pmd.xml","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/build-tools%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fpmd.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/build-tools%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fpmd.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fpmd.xml?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ruleset name=\"Syncope\"\n+    xmlns=\"http://pmd.sf.net/ruleset/1.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd\"\n+    xsi:noNamespaceSchemaLocation=\"http://pmd.sf.net/ruleset_xml_schema.xsd\">\n+        \n+    <rule ref=\"rulesets/basic.xml\"/>\n+    <rule ref=\"rulesets/naming.xml\"/>\n+    <rule ref=\"rulesets/unusedcode.xml\"/>\n+    <rule ref=\"rulesets/design.xml\"/>\n+    <rule ref=\"rulesets/imports.xml\"/>\n+    <rule ref=\"rulesets/strings.xml\"/>\n+    <rule ref=\"rulesets/braces.xml\"/>\n+    <rule ref=\"rulesets/codesize.xml\"/>\n+    <rule ref=\"rulesets/javabeans.xml\"/>\n+    <rule ref=\"rulesets/coupling.xml\"/>\n+    <rule ref=\"rulesets/controversial.xml\"/>\n+    <rule ref=\"rulesets/strictexception.xml\"/>\n+    <rule ref=\"rulesets/typeresolution.xml\"/>\n+    <rule ref=\"rulesets/optimization.xml\">\n+        <exclude name=\"AvoidInstantiatingObjectsInLoops\"/>\n+    </rule>\n+    \n+</ruleset>"},{"sha":"ff89347c5970431ccbf2cde54c3ecba6b4c0c79e","filename":"client/pom.xml","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/client%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/client%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fpom.xml?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -62,4 +62,33 @@\n \n     </dependencies>\n         \n+    <reporting>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-checkstyle-plugin</artifactId>\n+                <version>2.7</version>\n+                <configuration>\n+                    <configLocation>org/syncope/checkstyle.xml</configLocation>\n+                    <targetJdk>${targetJdk}</targetJdk>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-pmd-plugin</artifactId>\n+                <version>2.5</version>\n+                <configuration>\n+                    <rulesets>\n+                        <ruleset>org/syncope/pmd.xml</ruleset>\n+                    </rulesets>\n+                    <targetJdk>${targetJdk}</targetJdk>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-jxr-plugin</artifactId>\n+                <version>2.3</version>\n+            </plugin>\n+        </plugins>\n+    </reporting>\n </project>"},{"sha":"958d2d5b18394a5abf2732761c0b380933b6cd0f","filename":"console/pom.xml","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -342,6 +342,8 @@\n                             <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>\n                             <cargo.tomcat.ajp.port>8889</cargo.tomcat.ajp.port>\n                             <cargo.rmi.port>8805</cargo.rmi.port>\n+                            \n+<!--                            <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n</cargo.jvmargs>-->\n                         </properties>\n                         <deployables>\n                             <deployable>\n@@ -579,4 +581,33 @@\n         </profile>\n     </profiles>\n \n+    <reporting>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-checkstyle-plugin</artifactId>\n+                <version>2.7</version>\n+                <configuration>\n+                    <configLocation>org/syncope/checkstyle.xml</configLocation>\n+                    <targetJdk>${targetJdk}</targetJdk>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-pmd-plugin</artifactId>\n+                <version>2.5</version>\n+                <configuration>\n+                    <rulesets>\n+                        <ruleset>org/syncope/pmd.xml</ruleset>\n+                    </rulesets>\n+                    <targetJdk>${targetJdk}</targetJdk>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-jxr-plugin</artifactId>\n+                <version>2.3</version>\n+            </plugin>\n+        </plugins>\n+    </reporting>\n </project>"},{"sha":"fa573c4c516607dc2ee5464edcedc1a93a532352","filename":"core/pom.xml","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -799,4 +799,33 @@\n         </profile>\n     </profiles>\n     \n+    <reporting>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-checkstyle-plugin</artifactId>\n+                <version>2.7</version>\n+                <configuration>\n+                    <configLocation>org/syncope/checkstyle.xml</configLocation>\n+                    <targetJdk>${targetJdk}</targetJdk>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-pmd-plugin</artifactId>\n+                <version>2.5</version>\n+                <configuration>\n+                    <rulesets>\n+                        <ruleset>org/syncope/pmd.xml</ruleset>\n+                    </rulesets>\n+                    <targetJdk>${targetJdk}</targetJdk>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-jxr-plugin</artifactId>\n+                <version>2.3</version>\n+            </plugin>\n+        </plugins>\n+    </reporting>\n </project>"},{"sha":"8865e87c92bcb6083a5fc24e00c7da514086b0f9","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ConnectorFacadeProxy.java","status":"modified","additions":103,"deletions":22,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -78,6 +78,7 @@ public class ConnectorFacadeProxy {\n      * be used to make all wrapped calls.\n      *\n      * @param connInstance the connector instance configuration\n+     * @param connInstanceLoader connector instance loader\n      * @throws NotFoundException when not able to fetch all the required data\n      * @see ConnectorKey\n      * @see ConnectorInfo\n@@ -216,25 +217,43 @@ public ConnectorFacadeProxy(final ConnInstance connInstance,\n         this.capabitilies = connInstance.getCapabilities();\n     }\n \n+    /**\n+     * Resolve username to ConnId's Uid.\n+     *\n+     * @param objectClass ConnId's object class\n+     * @param username to resolve\n+     * @param options ConnId's OperationOptions\n+     * @return the resolved Uid (if connector instance is capable); can be null\n+     * if not found\n+     */\n     public Uid resolveUsername(\n             final ObjectClass objectClass,\n             final String username,\n             final OperationOptions options) {\n \n         Uid result = null;\n-\n         if (capabitilies.contains(ConnectorCapability.RESOLVE)) {\n-\n             result = connector.resolveUsername(\n                     objectClass, username, options);\n         }\n \n         return result;\n     }\n \n+    /**\n+     * Create user on a connector instance.\n+     *\n+     * @param propagationMode propagation mode (SYNC / ASYNC)\n+     * @param objectClass ConnId's object class\n+     * @param attrs attributes for creation\n+     * @param options ConnId's OperationOptions\n+     * @param propagationAttempted if creation is actually performed (based on\n+     * connector instance's capabilities)\n+     * @return Uid for created user\n+     */\n     public Uid create(\n             final PropagationMode propagationMode,\n-            final ObjectClass oclass,\n+            final ObjectClass objectClass,\n             final Set<Attribute> attrs,\n             final OperationOptions options,\n             final Set<String> propagationAttempted) {\n@@ -249,16 +268,28 @@ public Uid create(\n \n             propagationAttempted.add(\"create\");\n \n-            result = connector.create(oclass, attrs, options);\n+            result = connector.create(objectClass, attrs, options);\n         }\n \n         return result;\n     }\n \n+    /**\n+     * Update user on a connector instance.\n+     *\n+     * @param propagationMode propagation mode (SYNC / ASYNC)\n+     * @param objectClass ConnId's object class\n+     * @param uid user to be updated\n+     * @param attrs attributes for update\n+     * @param options ConnId's OperationOptions\n+     * @param propagationAttempted if update is actually performed (based on\n+     * connector instance's capabilities)\n+     * @return Uid for created user\n+     */\n     public Uid update(final PropagationMode propagationMode,\n-            final ObjectClass objclass,\n+            final ObjectClass objectClass,\n             final Uid uid,\n-            final Set<Attribute> replaceAttributes,\n+            final Set<Attribute> attrs,\n             final OperationOptions options,\n             final Set<String> propagationAttempted) {\n \n@@ -273,14 +304,24 @@ public Uid update(final PropagationMode propagationMode,\n             propagationAttempted.add(\"update\");\n \n             result = connector.update(\n-                    objclass, uid, replaceAttributes, options);\n+                    objectClass, uid, attrs, options);\n         }\n \n         return result;\n     }\n \n+    /**\n+     * Delete user on a connector instance.\n+     *\n+     * @param propagationMode propagation mode (SYNC / ASYNC)\n+     * @param objectClass ConnId's object class\n+     * @param uid user to be deleted\n+     * @param options ConnId's OperationOptions\n+     * @param propagationAttempted if deletion is actually performed (based on\n+     * connector instance's capabilities)\n+     */\n     public void delete(final PropagationMode propagationMode,\n-            final ObjectClass objClass,\n+            final ObjectClass objectClass,\n             final Uid uid,\n             final OperationOptions options,\n             final Set<String> propagationAttempted) {\n@@ -293,10 +334,16 @@ public void delete(final PropagationMode propagationMode,\n \n             propagationAttempted.add(\"delete\");\n \n-            connector.delete(objClass, uid, options);\n+            connector.delete(objectClass, uid, options);\n         }\n     }\n \n+    /**\n+     * Sync users from a connector instance.\n+     *\n+     * @param token to be passed to the underlying connector\n+     * @return list of sync operations to be performed\n+     */\n     public List<SyncDelta> sync(final SyncToken token) {\n         final List<SyncDelta> result = new ArrayList<SyncDelta>();\n \n@@ -305,7 +352,7 @@ public List<SyncDelta> sync(final SyncToken token) {\n                     new SyncResultsHandler() {\n \n                         @Override\n-                        public boolean handle(SyncDelta delta) {\n+                        public boolean handle(final SyncDelta delta) {\n                             return result.add(delta);\n                         }\n                     }, null);\n@@ -314,6 +361,11 @@ public boolean handle(SyncDelta delta) {\n         return result;\n     }\n \n+    /**\n+     * Read latest sync token from a connector instance.\n+     *\n+     * @return latest sync token\n+     */\n     public SyncToken getLatestSyncToken() {\n         SyncToken result = null;\n \n@@ -326,6 +378,11 @@ public SyncToken getLatestSyncToken() {\n \n     /**\n      * Get remote object.\n+     *\n+     * @param objectClass ConnId's object class\n+     * @param uid ConnId's Uid\n+     * @param options ConnId's OperationOptions\n+     * @return ConnId's connector object for given uid\n      */\n     public ConnectorObject getObject(\n             final ObjectClass objectClass,\n@@ -337,7 +394,14 @@ public ConnectorObject getObject(\n \n     /**\n      * Get remote object used by the propagation manager in order to choose\n-     * for a create (object doesn't exist) or an update (object exists)\n+     * for a create (object doesn't exist) or an update (object exists).\n+     *\n+     * @param propagationMode propagation mode (SYNC / ASYNC)\n+     * @param operationType resource operation type\n+     * @param objectClass ConnId's object class\n+     * @param uid ConnId's Uid\n+     * @param options ConnId's OperationOptions\n+     * @return ConnId's connector object for given uid\n      */\n     public ConnectorObject getObject(\n             final PropagationMode propagationMode,\n@@ -386,12 +450,17 @@ public ConnectorObject getObject(\n         return result;\n     }\n \n-    public void validate() {\n-        connector.validate();\n-    }\n-\n+    /**\n+     * Read attribute for a given connector object.\n+     *\n+     * @param objectClass ConnId's object class\n+     * @param uid ConnId's Uid\n+     * @param options ConnId's OperationOptions\n+     * @param attributeName attribute to read\n+     * @return attribute (if present)\n+     */\n     public Attribute getObjectAttribute(\n-            final ObjectClass objClass,\n+            final ObjectClass objectClass,\n             final Uid uid,\n             final OperationOptions options,\n             final String attributeName) {\n@@ -400,10 +469,9 @@ public Attribute getObjectAttribute(\n \n         try {\n             final ConnectorObject object =\n-                    connector.getObject(objClass, uid, options);\n+                    connector.getObject(objectClass, uid, options);\n \n             attribute = object.getAttributeByName(attributeName);\n-\n         } catch (NullPointerException e) {\n             // ignore exception\n             LOG.debug(\"Object for '{}' not found\", uid.getUidValue());\n@@ -412,23 +480,29 @@ public Attribute getObjectAttribute(\n         return attribute;\n     }\n \n+    /**\n+     * \n+     * @param objectClass ConnId's object class\n+     * @param uid ConnId's Uid\n+     * @param options ConnId's OperationOptions\n+     * @param attributeNames attributes to read\n+     * @return attributes (if present)\n+     */\n     public Set<Attribute> getObjectAttributes(\n-            final ObjectClass objClass,\n+            final ObjectClass objectClass,\n             final Uid uid,\n             final OperationOptions options,\n             final Collection<String> attributeNames) {\n \n         final Set<Attribute> attributes = new HashSet<Attribute>();\n \n         try {\n-\n-            final ConnectorObject object = connector.getObject(objClass, uid,\n+            final ConnectorObject object = connector.getObject(objectClass, uid,\n                     options);\n \n             for (String attribute : attributeNames) {\n                 attributes.add(object.getAttributeByName(attribute));\n             }\n-\n         } catch (NullPointerException e) {\n             // ignore exception\n             LOG.debug(\"Object for '{}' not found\", uid.getUidValue());\n@@ -437,6 +511,13 @@ public Set<Attribute> getObjectAttributes(\n         return attributes;\n     }\n \n+    /**\n+     * Validate a connector instance.\n+     */\n+    public void validate() {\n+        connector.validate();\n+    }\n+\n     @Override\n     public String toString() {\n         return \"ConnectorFacadeProxy{\""},{"sha":"457d1d29428be1a7f132d055772bf958b2de5313","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationException.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationException.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -14,10 +14,23 @@\n  */\n package org.syncope.core.persistence.propagation;\n \n+/**\n+ * Bear stacktrace received during propagation towards a certain resource.\n+ */\n public class PropagationException extends Exception {\n \n+    /**\n+     * The resource involved in this exception.\n+     */\n     private final String resourceName;\n \n+    /**\n+     * Create a new instance based on resource name and original stacktrace\n+     * received during propagation.\n+     *\n+     * @param resourceName name of resource involved in this exception\n+     * @param stackTrace original stacktrace\n+     */\n     public PropagationException(final String resourceName,\n             final String stackTrace) {\n \n@@ -27,6 +40,9 @@ public PropagationException(final String resourceName,\n         this.resourceName = resourceName;\n     }\n \n+    /**\n+     * @return name of resource involved in this exception\n+     */\n     public String getResourceName() {\n         return resourceName;\n     }"},{"sha":"d499d39c8b1ff3f53ad4a304667426d076c1b7df","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":284,"deletions":334,"changes":618,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -19,11 +19,11 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Date;\n-import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.identityconnectors.framework.common.FrameworkUtil;\n import org.identityconnectors.framework.common.exceptions.ConnectorException;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -37,11 +37,10 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.NoSuchBeanDefinitionException;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.util.StringUtils;\n import org.syncope.core.init.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n-import org.syncope.core.persistence.beans.AbstractDerSchema;\n import org.syncope.core.persistence.beans.AbstractSchema;\n-import org.syncope.core.persistence.beans.AbstractVirSchema;\n import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n@@ -55,11 +54,9 @@\n import org.syncope.core.persistence.beans.user.USchema;\n import org.syncope.core.persistence.beans.user.UVirAttr;\n import org.syncope.core.persistence.beans.user.UVirSchema;\n-import org.syncope.core.persistence.dao.DerSchemaDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.TaskDAO;\n import org.syncope.core.persistence.dao.TaskExecDAO;\n-import org.syncope.core.persistence.dao.VirSchemaDAO;\n import org.syncope.core.util.JexlUtil;\n import org.syncope.types.PropagationMode;\n import org.syncope.types.ResourceOperationType;\n@@ -79,26 +76,17 @@ public class PropagationManager {\n     protected static final Logger LOG =\n             LoggerFactory.getLogger(PropagationManager.class);\n \n-    @Autowired\n-    private ConnInstanceLoader connInstanceLoader;\n-\n-    /**\n-     * Schema DAO.\n-     */\n-    @Autowired\n-    private SchemaDAO schemaDAO;\n-\n     /**\n-     * Derived Schema DAO.\n+     * Connector instance loader.\n      */\n     @Autowired\n-    private DerSchemaDAO derSchemaDAO;\n+    private ConnInstanceLoader connLoader;\n \n     /**\n-     * Virtual Schema DAO.\n+     * Schema DAO.\n      */\n     @Autowired\n-    private VirSchemaDAO virSchemaDAO;\n+    private SchemaDAO schemaDAO;\n \n     /**\n      * Task DAO.\n@@ -140,23 +128,19 @@ public void create(final SyncopeUser user, final String password)\n      *\n      * @param user to be created.\n      * @param password to be set.\n-     * @param mandatoryResourceNames to ask for mandatory or optional\n+     * @param mandResNames to ask for mandatory or optional\n      * provisioning.\n-     * @throws PropagationException\n+     * @throws PropagationException when anything goes wrong\n      */\n     public void create(final SyncopeUser user,\n-            final String password, Set<String> mandatoryResourceNames)\n+            final String password, final Set<String> mandResNames)\n             throws PropagationException {\n \n-        if (mandatoryResourceNames == null) {\n-            mandatoryResourceNames = Collections.EMPTY_SET;\n-        }\n-\n-        ResourceOperations resourceOperations = new ResourceOperations();\n-        resourceOperations.set(ResourceOperationType.CREATE,\n-                user.getTargetResources());\n+        final ResourceOperations resOps = new ResourceOperations();\n+        resOps.set(ResourceOperationType.CREATE, user.getTargetResources());\n \n-        provision(user, password, resourceOperations, mandatoryResourceNames);\n+        provision(user, password, resOps,\n+                mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n     }\n \n     /**\n@@ -168,21 +152,18 @@ public void create(final SyncopeUser user,\n      *\n      * @param user to be updated.\n      * @param password to be updated.\n-     * @param affectedResources resources affected by this update\n-     * @param mandatoryResourceNames to ask for mandatory or optional update.\n+     * @param resOps operations to perform on each resource.\n+     * @param mandResNames to ask for mandatory or optional update.\n      * @throws PropagationException if anything goes wrong\n      */\n     public void update(final SyncopeUser user,\n             final String password,\n-            final ResourceOperations resourceOperations,\n-            Set<String> mandatoryResourceNames)\n+            final ResourceOperations resOps,\n+            final Set<String> mandResNames)\n             throws PropagationException {\n \n-        if (mandatoryResourceNames == null) {\n-            mandatoryResourceNames = Collections.EMPTY_SET;\n-        }\n-\n-        provision(user, password, resourceOperations, mandatoryResourceNames);\n+        provision(user, password, resOps,\n+                mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n     }\n \n     /**\n@@ -193,65 +174,62 @@ public void update(final SyncopeUser user,\n      * creation fails onto a mandatory resource.\n      *\n      * @param user to be deleted\n-     * @param mandatoryResourceNames to ask for mandatory or optyional delete\n+     * @param mandResNames to ask for mandatory or optyional delete\n      * @throws PropagationException if anything goes wrong\n      */\n-    public void delete(SyncopeUser user, Set<String> mandatoryResourceNames)\n+    public void delete(final SyncopeUser user,\n+            final Set<String> mandResNames)\n             throws PropagationException {\n \n-        if (mandatoryResourceNames == null) {\n-            mandatoryResourceNames = Collections.EMPTY_SET;\n-        }\n-\n-        ResourceOperations resourceOperations = new ResourceOperations();\n-        resourceOperations.set(ResourceOperationType.DELETE,\n+        final ResourceOperations resOps = new ResourceOperations();\n+        resOps.set(ResourceOperationType.DELETE,\n                 user.getTargetResources());\n \n-        provision(user, null, resourceOperations, mandatoryResourceNames);\n+        provision(user, null, resOps,\n+                mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n     }\n \n     /**\n      * Implementation of the provisioning feature.\n-     * @param user\n-     * @param mandatoryResourceNames\n-     * @param merge\n-     * @throws PropagationException\n+     *\n+     * @param user user to be provisioned\n+     * @param password cleartext password to be provisioned\n+     * @param resOps operation to be performed per resource\n+     * @param mandResNames resources for mandatory propagation\n+     * @throws PropagationException if anything goes wrong\n      */\n     protected void provision(\n             final SyncopeUser user,\n             final String password,\n-            final ResourceOperations resourceOperations,\n-            final Set<String> mandatoryResourceNames)\n+            final ResourceOperations resOps,\n+            final Set<String> mandResNames)\n             throws PropagationException {\n \n-        LOG.debug(\"Provisioning with user {}:\\n{}\", user, resourceOperations);\n+        LOG.debug(\"Provisioning with user {}:\\n{}\", user, resOps);\n \n         // Avoid duplicates - see javadoc\n-        resourceOperations.purge();\n-        LOG.debug(\"After purge: {}\", resourceOperations);\n+        resOps.purge();\n+        LOG.debug(\"After purge: {}\", resOps);\n \n+        Map.Entry<String, Set<Attribute>> preparedAttrs;\n         PropagationTask task;\n         TaskExec execution;\n         for (ResourceOperationType type : ResourceOperationType.values()) {\n-            for (TargetResource resource : resourceOperations.get(type)) {\n+            for (TargetResource resource : resOps.get(type)) {\n \n-                Map<String, Set<Attribute>> preparedAttributes =\n-                        prepareAttributes(user, password, resource);\n-                String accountId =\n-                        preparedAttributes.keySet().iterator().next();\n+                preparedAttrs = prepareAttributes(user, password, resource);\n \n                 task = new PropagationTask();\n                 task.setResource(resource);\n                 task.setResourceOperationType(type);\n                 task.setPropagationMode(\n-                        mandatoryResourceNames.contains(resource.getName())\n+                        mandResNames.contains(resource.getName())\n                         ? PropagationMode.SYNC\n                         : resource.getOptionalPropagationMode());\n-                task.setAccountId(accountId);\n+                task.setAccountId(preparedAttrs.getKey());\n                 task.setOldAccountId(\n-                        resourceOperations.getOldAccountId(resource.getName()));\n-                task.setAttributes(\n-                        preparedAttributes.values().iterator().next());\n+                        resOps.getOldAccountId(resource.getName()));\n+                task.setAttributes(preparedAttrs.getValue());\n \n                 LOG.debug(\"Execution started for {}\", task);\n \n@@ -261,7 +239,7 @@ protected void provision(\n \n                 // Propagation is interrupted as soon as the result of the\n                 // communication with a mandatory resource is in error\n-                if (mandatoryResourceNames.contains(resource.getName())\n+                if (mandResNames.contains(resource.getName())\n                         && !PropagationTaskExecStatus.SUCCESS.toString().\n                         equals(execution.getStatus())) {\n \n@@ -272,8 +250,14 @@ protected void provision(\n         }\n     }\n \n+    /**\n+     * For given source mapping type, return the corresponding Class object.\n+     *\n+     * @param sourceMappingType source mapping type\n+     * @return corresponding Class object, if any (can be null)\n+     */\n     private Class getSourceMappingTypeClass(\n-            SourceMappingType sourceMappingType) {\n+            final SourceMappingType sourceMappingType) {\n \n         Class result;\n \n@@ -297,262 +281,214 @@ private Class getSourceMappingTypeClass(\n         return result;\n     }\n \n-    private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n-            String password, TargetResource resource)\n-            throws PropagationException {\n-\n-        LOG.debug(\"Preparing resource attributes for {}\"\n-                + \" on resource {}\"\n-                + \" with attributes {}\",\n-                new Object[]{user, resource, user.getAttributes()});\n-\n-        // set of user attributes\n-        Set<Attribute> accountAttributes = new HashSet<Attribute>();\n-\n-        // cast to be applied on SchemaValueType\n-        Class castToBeApplied;\n-\n-        // account id\n-        Map<String, Attribute> accountId = new HashMap<String, Attribute>();\n-\n-        // resource field values\n-        Set objValues;\n-\n-        // syncope user attribute\n-        UAttr attr;\n-        UDerAttr derAttr;\n-        UVirAttr virAttr;\n-\n-        AbstractSchema schema;\n-        AbstractDerSchema derSchema;\n-        AbstractVirSchema virSchema;\n+    /**\n+     * Prepare an attribute for sending to a connector instance.\n+     * \n+     * @param mapping schema mapping for the given attribute\n+     * @param user given user\n+     * @param password clear-text password\n+     * @return account link + prepare attributes\n+     * @throws ClassNotFoundException if schema type for given mapping does not\n+     * exists in current class loader\n+     */\n+    private Map.Entry<String, Attribute> prepareAttribute(\n+            final SchemaMapping mapping,\n+            final SyncopeUser user, final String password)\n+            throws ClassNotFoundException {\n \n-        // syncope user attribute schema type\n+        AbstractSchema schema = null;\n         SchemaType schemaType = null;\n-        // syncope user attribute values\n-        List<AbstractAttrValue> values;\n-\n-        for (SchemaMapping mapping : resource.getMappings()) {\n-            LOG.debug(\"Processing schema {}\", mapping.getSourceAttrName());\n-\n-            schema = null;\n-            derSchema = null;\n-            virSchema = null;\n-            values = null;\n-\n-            try {\n-                switch (mapping.getSourceMappingType()) {\n-                    case UserSchema:\n-\n-                        schema = schemaDAO.find(\n-                                mapping.getSourceAttrName(),\n-                                getSourceMappingTypeClass(\n-                                mapping.getSourceMappingType()));\n-\n-\n-                        schemaType = schema.getType();\n-\n-                        attr = user.getAttribute(\n-                                mapping.getSourceAttrName());\n-\n-                        values = attr != null\n-                                ? (schema.isUniqueConstraint()\n-                                ? Collections.singletonList(\n-                                attr.getUniqueValue())\n-                                : attr.getValues())\n-                                : Collections.EMPTY_LIST;\n-\n-                        LOG.debug(\"Retrieved attribute {}\", attr\n-                                + \"\\n* SourceAttrName {}\"\n-                                + \"\\n* SourceMappingType {}\"\n-                                + \"\\n* Attribute values {}\",\n-                                new Object[]{\n-                                    mapping.getSourceAttrName(),\n-                                    mapping.getSourceMappingType(),\n-                                    values});\n-                        break;\n-\n-                    case UserVirtualSchema:\n-\n-                        virSchema = virSchemaDAO.find(\n-                                mapping.getSourceAttrName(),\n-                                getSourceMappingTypeClass(\n-                                mapping.getSourceMappingType()));\n-\n-\n-                        schemaType = SchemaType.String;\n+        List<AbstractAttrValue> values = null;\n+        AbstractAttrValue attrValue;\n+        switch (mapping.getSourceMappingType()) {\n+            case UserSchema:\n+                schema = schemaDAO.find(mapping.getSourceAttrName(),\n+                        getSourceMappingTypeClass(\n+                        mapping.getSourceMappingType()));\n+                schemaType = schema.getType();\n+\n+                UAttr attr = user.getAttribute(mapping.getSourceAttrName());\n+                values = attr != null\n+                        ? (schema.isUniqueConstraint()\n+                        ? Collections.singletonList(attr.getUniqueValue())\n+                        : attr.getValues())\n+                        : Collections.EMPTY_LIST;\n+\n+                LOG.debug(\"Retrieved attribute {}\", attr\n+                        + \"\\n* SourceAttrName {}\"\n+                        + \"\\n* SourceMappingType {}\"\n+                        + \"\\n* Attribute values {}\",\n+                        new Object[]{mapping.getSourceAttrName(),\n+                            mapping.getSourceMappingType(), values});\n+                break;\n \n-                        virAttr = user.getVirtualAttribute(\n-                                mapping.getSourceAttrName());\n+            case UserVirtualSchema:\n+                schemaType = SchemaType.String;\n \n-                        values = new ArrayList<AbstractAttrValue>();\n-                        AbstractAttrValue abstractValue;\n+                UVirAttr virAttr = user.getVirtualAttribute(\n+                        mapping.getSourceAttrName());\n \n-                        if (virAttr != null && virAttr.getValues() != null) {\n-                            for (String value : virAttr.getValues()) {\n-                                abstractValue = new UAttrValue();\n-                                abstractValue.setStringValue(value);\n-                                values.add(abstractValue);\n-                            }\n-                        }\n+                values = new ArrayList<AbstractAttrValue>();\n+                if (virAttr != null && virAttr.getValues() != null) {\n+                    for (String value : virAttr.getValues()) {\n+                        attrValue = new UAttrValue();\n+                        attrValue.setStringValue(value);\n+                        values.add(attrValue);\n+                    }\n+                }\n \n-                        LOG.debug(\"Retrieved virtual attribute {}\", virAttr\n-                                + \"\\n* SourceAttrName {}\"\n-                                + \"\\n* SourceMappingType {}\"\n-                                + \"\\n* Attribute values {}\",\n-                                new Object[]{\n-                                    mapping.getSourceAttrName(),\n-                                    mapping.getSourceMappingType(),\n-                                    values});\n-                        break;\n+                LOG.debug(\"Retrieved virtual attribute {}\", virAttr\n+                        + \"\\n* SourceAttrName {}\"\n+                        + \"\\n* SourceMappingType {}\"\n+                        + \"\\n* Attribute values {}\",\n+                        new Object[]{mapping.getSourceAttrName(),\n+                            mapping.getSourceMappingType(), values});\n+                break;\n \n-                    case UserDerivedSchema:\n+            case UserDerivedSchema:\n+                schemaType = SchemaType.String;\n \n-                        derSchema = derSchemaDAO.find(\n-                                mapping.getSourceAttrName(),\n-                                getSourceMappingTypeClass(\n-                                mapping.getSourceMappingType()));\n+                UDerAttr derAttr = user.getDerivedAttribute(\n+                        mapping.getSourceAttrName());\n+                attrValue = new UAttrValue();\n+                if (derAttr != null) {\n+                    attrValue.setStringValue(\n+                            derAttr.getValue(user.getAttributes()));\n \n-                        schemaType = SchemaType.String;\n+                    values = Collections.singletonList(attrValue);\n+                } else {\n+                    values = Collections.EMPTY_LIST;\n+                }\n \n-                        derAttr = user.getDerivedAttribute(\n-                                mapping.getSourceAttrName());\n+                LOG.debug(\"Retrieved attribute {}\", derAttr\n+                        + \"\\n* SourceAttrName {}\"\n+                        + \"\\n* SourceMappingType {}\"\n+                        + \"\\n* Attribute values {}\",\n+                        new Object[]{mapping.getSourceAttrName(),\n+                            mapping.getSourceMappingType(), values});\n+                break;\n \n-                        if (derAttr != null) {\n-                            AbstractAttrValue value = new UAttrValue();\n-                            value.setStringValue(\n-                                    derAttr.getValue(user.getAttributes()));\n+            case SyncopeUserId:\n+            case Password:\n+                schema = null;\n+                schemaType = SchemaType.String;\n \n-                            values = Collections.singletonList(value);\n-                        } else {\n-                            values = Collections.EMPTY_LIST;\n-                        }\n+                attrValue = new UAttrValue();\n+                if (SourceMappingType.SyncopeUserId\n+                        == mapping.getSourceMappingType()) {\n \n+                    attrValue.setStringValue(user.getId().toString());\n+                }\n+                if (SourceMappingType.Password\n+                        == mapping.getSourceMappingType() && password != null) {\n \n-                        LOG.debug(\"Retrieved attribute {}\", derAttr\n-                                + \"\\n* SourceAttrName {}\"\n-                                + \"\\n* SourceMappingType {}\"\n-                                + \"\\n* Attribute values {}\",\n-                                new Object[]{\n-                                    mapping.getSourceAttrName(),\n-                                    mapping.getSourceMappingType(),\n-                                    values});\n+                    attrValue.setStringValue(password);\n+                }\n \n-                        break;\n+                values = Collections.singletonList(attrValue);\n+                break;\n \n-                    case SyncopeUserId:\n-                    case Password:\n-                        schema = null;\n-                        schemaType = SchemaType.String;\n+            default:\n+        }\n \n-                        AbstractAttrValue uAttrValue = new UAttrValue();\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Define mapping for: \"\n+                    + \"\\n* DestAttrName \" + mapping.getDestAttrName()\n+                    + \"\\n* is accountId \" + mapping.isAccountid()\n+                    + \"\\n* is password \" + (mapping.isPassword()\n+                    || mapping.getSourceMappingType().equals(\n+                    SourceMappingType.Password))\n+                    + \"\\n* mandatory condition \"\n+                    + mapping.getMandatoryCondition()\n+                    + \"\\n* Schema \" + mapping.getSourceAttrName()\n+                    + \"\\n* SourceMappingType \"\n+                    + mapping.getSourceMappingType().toString()\n+                    + \"\\n* ClassType \" + schemaType.getClassName()\n+                    + \"\\n* Values \" + values);\n+        }\n \n-                        if (SourceMappingType.SyncopeUserId\n-                                == mapping.getSourceMappingType()) {\n+        List<Object> objValues = new ArrayList<Object>();\n+        for (AbstractAttrValue value : values) {\n+            if (!FrameworkUtil.isSupportedAttributeType(\n+                    Class.forName(schemaType.getClassName()))) {\n \n-                            uAttrValue.setStringValue(user.getId().toString());\n-                        }\n-                        if (SourceMappingType.Password\n-                                == mapping.getSourceMappingType()\n-                                && password != null) {\n+                objValues.add(value.getValueAsString());\n+            } else {\n+                objValues.add(value.getValue());\n+            }\n+        }\n \n-                            uAttrValue.setStringValue(password);\n-                        }\n+        String accountId = null;\n+        if (mapping.isAccountid()) {\n+            accountId = objValues.iterator().next().toString();\n+        }\n \n-                        values = Collections.singletonList(uAttrValue);\n-                        break;\n+        Attribute attribute = null;\n+        if (mapping.isPassword()) {\n+            attribute = AttributeBuilder.buildPassword(\n+                    objValues.iterator().next().toString().toCharArray());\n+        }\n \n-                    default:\n-                        break;\n-                }\n+        if (!mapping.isPassword() && !mapping.isAccountid()) {\n+            if (schema != null && schema.isMultivalue()) {\n+                attribute = AttributeBuilder.build(mapping.getDestAttrName(),\n+                        objValues);\n+            } else {\n+                attribute = objValues.isEmpty()\n+                        ? AttributeBuilder.build(mapping.getDestAttrName())\n+                        : AttributeBuilder.build(mapping.getDestAttrName(),\n+                        objValues.iterator().next());\n+            }\n+        }\n \n-                if (LOG.isDebugEnabled()) {\n-                    LOG.debug(\"Define mapping for: \"\n-                            + \"\\n* DestAttrName \" + mapping.getDestAttrName()\n-                            + \"\\n* is accountId \" + mapping.isAccountid()\n-                            + \"\\n* is password \" + (mapping.isPassword()\n-                            || mapping.getSourceMappingType().equals(\n-                            SourceMappingType.Password))\n-                            + \"\\n* mandatory condition \"\n-                            + mapping.getMandatoryCondition()\n-                            + \"\\n* Schema \" + mapping.getSourceAttrName()\n-                            + \"\\n* SourceMappingType \"\n-                            + mapping.getSourceMappingType().toString()\n-                            + \"\\n* ClassType \" + schemaType.getClassName()\n-                            + \"\\n* Values \" + values);\n-                }\n+        return new DefaultMapEntry(accountId, attribute);\n+    }\n \n-                // -----------------------------\n-                // Retrieve user attribute values\n-                // -----------------------------\n-                objValues = new HashSet();\n+    /**\n+     * Prepare attributes for sending to a connector instance.\n+     *\n+     * @param user given user\n+     * @param password clear-text password\n+     * @param resource target resource\n+     * @return account link + prepared attributes\n+     * @throws PropagationException if anything goes wrong\n+     */\n+    private Map.Entry<String, Set<Attribute>> prepareAttributes(\n+            final SyncopeUser user, final String password,\n+            final TargetResource resource)\n+            throws PropagationException {\n \n-                for (AbstractAttrValue value : values) {\n-                    castToBeApplied =\n-                            Class.forName(schemaType.getClassName());\n+        LOG.debug(\"Preparing resource attributes for {}\"\n+                + \" on resource {}\"\n+                + \" with attributes {}\",\n+                new Object[]{user, resource, user.getAttributes()});\n \n-                    if (!FrameworkUtil.isSupportedAttributeType(\n-                            castToBeApplied)) {\n+        Set<Attribute> attributes = new HashSet<Attribute>();\n+        String accountId = null;\n \n-                        castToBeApplied = String.class;\n-                        objValues.add(value.getValueAsString());\n-                    } else {\n-                        objValues.add(value.getValue());\n-                    }\n-                }\n-                // -----------------------------\n-\n-                if (mapping.isAccountid()) {\n-                    if (schema != null && schema.isMultivalue()) {\n-                        accountId.put(objValues.iterator().next().toString(),\n-                                AttributeBuilder.build(\n-                                mapping.getDestAttrName(),\n-                                objValues));\n-                    } else {\n-                        accountId.put(objValues.iterator().next().toString(),\n-                                objValues.isEmpty()\n-                                ? AttributeBuilder.build(\n-                                mapping.getDestAttrName())\n-                                : AttributeBuilder.build(\n-                                mapping.getDestAttrName(),\n-                                objValues.iterator().next()));\n-                    }\n-                }\n+        Map.Entry<String, Attribute> preparedAttribute;\n+        for (SchemaMapping mapping : resource.getMappings()) {\n+            LOG.debug(\"Processing schema {}\", mapping.getSourceAttrName());\n \n-                if (mapping.isPassword()) {\n-                    accountAttributes.add(AttributeBuilder.buildPassword(\n-                            objValues.iterator().next().toString().\n-                            toCharArray()));\n+            try {\n+                preparedAttribute = prepareAttribute(mapping, user, password);\n+                if (preparedAttribute.getKey() != null) {\n+                    accountId = preparedAttribute.getKey();\n                 }\n-\n-                if (!mapping.isPassword() && !mapping.isAccountid()) {\n-                    if (schema != null && schema.isMultivalue()) {\n-                        accountAttributes.add(AttributeBuilder.build(\n-                                mapping.getDestAttrName(),\n-                                objValues));\n-                    } else {\n-                        accountAttributes.add(objValues.isEmpty()\n-                                ? AttributeBuilder.build(\n-                                mapping.getDestAttrName())\n-                                : AttributeBuilder.build(\n-                                mapping.getDestAttrName(),\n-                                objValues.iterator().next()));\n-                    }\n+                if (preparedAttribute.getValue() != null) {\n+                    attributes.add(preparedAttribute.getValue());\n                 }\n             } catch (Throwable t) {\n                 LOG.debug(\"Attribute '{}' processing failed\",\n                         mapping.getSourceAttrName(), t);\n             }\n         }\n \n-        if (accountId.isEmpty()) {\n-            throw new PropagationException(\n-                    resource.getName(),\n+        if (!StringUtils.hasText(accountId)) {\n+            throw new PropagationException(resource.getName(),\n                     \"Missing accountId specification\");\n         }\n \n-        final String key = accountId.keySet().iterator().next();\n-\n         // Evaluate AccountLink expression\n         String evaluatedAccountLink =\n                 jexlUtil.evaluate(resource.getAccountLink(), user);\n@@ -561,22 +497,77 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n         // the target resource or the key (depending on the accountLink)\n         if (evaluatedAccountLink.isEmpty()) {\n             // add accountId as __NAME__ attribute ...\n-            LOG.debug(\"Add AccountId [{}] as __NAME__\", key);\n-            accountAttributes.add(new Name(key));\n+            LOG.debug(\"Add AccountId [{}] as __NAME__\", accountId);\n+            attributes.add(new Name(accountId));\n         } else {\n             LOG.debug(\"Add AccountLink [{}] as __NAME__\", evaluatedAccountLink);\n-            accountAttributes.add(new Name(evaluatedAccountLink));\n+            attributes.add(new Name(evaluatedAccountLink));\n \n             // AccountId not propagated: \n             // it will be used to set the value for __UID__ attribute\n             LOG.debug(\"AccountId will be used just as __UID__ attribute\");\n         }\n \n-        return Collections.singletonMap(key, accountAttributes);\n+        return new DefaultMapEntry(accountId, attributes);\n+    }\n+\n+    /**\n+     * Check wether an execution has to be stored, for a given task.\n+     *\n+     * @param task execution's task\n+     * @param execution to be decide wether to store or not\n+     * @return true if execution has to be store, false otherwise\n+     */\n+    private boolean hasToBeregistered(final PropagationTask task,\n+            final TaskExec execution) {\n+\n+        boolean result;\n+\n+        final boolean failed = !PropagationTaskExecStatus.valueOf(\n+                execution.getStatus()).isSuccessful();\n+\n+        switch (task.getResourceOperationType()) {\n+\n+            case CREATE:\n+                result = (failed\n+                        && task.getResource().getCreateTraceLevel().\n+                        ordinal() >= TraceLevel.FAILURES.ordinal())\n+                        || task.getResource().getCreateTraceLevel()\n+                        == TraceLevel.ALL;\n+                break;\n+\n+            case UPDATE:\n+                result = (failed\n+                        && task.getResource().getUpdateTraceLevel().\n+                        ordinal() >= TraceLevel.FAILURES.ordinal())\n+                        || task.getResource().getUpdateTraceLevel()\n+                        == TraceLevel.ALL;\n+                break;\n+\n+            case DELETE:\n+                result = (failed\n+                        && task.getResource().getDeleteTraceLevel().\n+                        ordinal() >= TraceLevel.FAILURES.ordinal())\n+                        || task.getResource().getDeleteTraceLevel()\n+                        == TraceLevel.ALL;\n+                break;\n+\n+            default:\n+                result = false;\n+        }\n \n+        return result;\n     }\n \n-    public TaskExec propagate(PropagationTask task, final Date startDate) {\n+    /**\n+     * Execute a propagation task.\n+     *\n+     * @param task to execute\n+     * @param startDate timestamp for beginning task excecution\n+     * @return TaskExecution\n+     */\n+    public TaskExec propagate(final PropagationTask task,\n+            final Date startDate) {\n \n         TaskExec execution = new TaskExec();\n         execution.setStatus(PropagationTaskExecStatus.CREATED.toString());\n@@ -590,7 +581,7 @@ public TaskExec propagate(PropagationTask task, final Date startDate) {\n             ConnInstance connInstance =\n                     task.getResource().getConnector();\n \n-            ConnectorFacadeProxy connector = connInstanceLoader.getConnector(\n+            ConnectorFacadeProxy connector = connLoader.getConnector(\n                     ConnInstanceLoader.getBeanName(connInstance.getId()));\n \n             if (connector == null) {\n@@ -704,14 +695,14 @@ public TaskExec propagate(PropagationTask task, final Date startDate) {\n             LOG.debug(\"Update execution for {}\", task);\n \n             if (hasToBeregistered(task, execution)) {\n-                task = taskDAO.save(task);\n+                PropagationTask savedTask = taskDAO.save(task);\n \n                 if (!propagationAttempted.isEmpty()) {\n                     execution.setStartDate(startDate);\n                     execution.setMessage(taskExecutionMessage);\n                     execution.setEndDate(new Date());\n \n-                    execution.setTask(task);\n+                    execution.setTask(savedTask);\n                     execution = taskExecDAO.save(execution);\n \n                     LOG.debug(\"Execution finished: {}\", execution);\n@@ -723,45 +714,4 @@ public TaskExec propagate(PropagationTask task, final Date startDate) {\n \n         return execution;\n     }\n-\n-    private boolean hasToBeregistered(final PropagationTask task,\n-            final TaskExec execution) {\n-\n-        boolean result;\n-\n-        final boolean failed = !PropagationTaskExecStatus.valueOf(\n-                execution.getStatus()).isSuccessful();\n-\n-        switch (task.getResourceOperationType()) {\n-\n-            case CREATE:\n-                result = (failed\n-                        && task.getResource().getCreateTraceLevel().\n-                        ordinal() >= TraceLevel.FAILURES.ordinal())\n-                        || task.getResource().getCreateTraceLevel()\n-                        == TraceLevel.ALL;\n-                break;\n-\n-            case UPDATE:\n-                result = (failed\n-                        && task.getResource().getUpdateTraceLevel().\n-                        ordinal() >= TraceLevel.FAILURES.ordinal())\n-                        || task.getResource().getUpdateTraceLevel()\n-                        == TraceLevel.ALL;\n-                break;\n-\n-            case DELETE:\n-                result = (failed\n-                        && task.getResource().getDeleteTraceLevel().\n-                        ordinal() >= TraceLevel.FAILURES.ordinal())\n-                        || task.getResource().getDeleteTraceLevel()\n-                        == TraceLevel.ALL;\n-                break;\n-\n-            default:\n-                result = false;\n-        }\n-\n-        return result;\n-    }\n }"},{"sha":"4109a941b0d1125e8d75208c4e8b0f32426787cd","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ResourceOperations.java","status":"modified","additions":75,"deletions":4,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -22,19 +22,35 @@\n import org.syncope.core.persistence.beans.TargetResource;\n import org.syncope.types.ResourceOperationType;\n \n+/**\n+ * Utility class for encapsulating operations to be performed on various\n+ * resources.\n+ */\n public class ResourceOperations {\n \n+    /**\n+     * Resources for creation.\n+     */\n     private Set<TargetResource> toBeCreated;\n \n+    /**\n+     * Resources for update.\n+     */\n     private Set<TargetResource> toBeUpdated;\n \n+    /**\n+     * Resources for deletion.\n+     */\n     private Set<TargetResource> toBeDeleted;\n \n     /**\n      * Mapping target resource names to old account ids (when applicable).\n      */\n     private Map<String, String> oldAccountIds;\n \n+    /**\n+     * Default constructor.\n+     */\n     public ResourceOperations() {\n         toBeCreated = new HashSet<TargetResource>();\n         toBeUpdated = new HashSet<TargetResource>();\n@@ -58,6 +74,13 @@ public final void purge() {\n         }\n     }\n \n+    /**\n+     * Add an element.\n+     *\n+     * @param type resource operation type\n+     * @param resource target resource\n+     * @return wether the operation was succeful or not\n+     */\n     public final boolean add(final ResourceOperationType type,\n             final TargetResource resource) {\n \n@@ -82,22 +105,29 @@ public final boolean add(final ResourceOperationType type,\n         return result;\n     }\n \n+    /**\n+     * Add some elements.\n+     *\n+     * @param type resource operation type\n+     * @param resources target resources\n+     * @return wether the operation was succeful or not\n+     */\n     public boolean addAll(final ResourceOperationType type,\n-            final Set<TargetResource> resource) {\n+            final Set<TargetResource> resources) {\n \n         boolean result = false;\n \n         switch (type) {\n             case CREATE:\n-                result = toBeCreated.addAll(resource);\n+                result = toBeCreated.addAll(resources);\n                 break;\n \n             case UPDATE:\n-                result = toBeUpdated.addAll(resource);\n+                result = toBeUpdated.addAll(resources);\n                 break;\n \n             case DELETE:\n-                result = toBeDeleted.addAll(resource);\n+                result = toBeDeleted.addAll(resources);\n                 break;\n \n             default:\n@@ -106,6 +136,13 @@ public boolean addAll(final ResourceOperationType type,\n         return result;\n     }\n \n+    /**\n+     * Remove an element.\n+     *\n+     * @param type resource operation type\n+     * @param resource target resource\n+     * @return wether the operation was succeful or not\n+     */\n     public final boolean remove(final ResourceOperationType type,\n             final TargetResource resource) {\n \n@@ -130,6 +167,12 @@ public final boolean remove(final ResourceOperationType type,\n         return result;\n     }\n \n+    /**\n+     * Get resources for a given resource operation type.\n+     *\n+     * @param type resource operation type\n+     * @return resource matching the given type\n+     */\n     public final Set<TargetResource> get(final ResourceOperationType type) {\n         Set<TargetResource> result = Collections.EMPTY_SET;\n \n@@ -152,6 +195,12 @@ public final Set<TargetResource> get(final ResourceOperationType type) {\n         return result;\n     }\n \n+    /**\n+     * Set resources for a given resource operation type.\n+     *\n+     * @param type resource operation type\n+     * @param resources to be set\n+     */\n     public final void set(final ResourceOperationType type,\n             final Set<TargetResource> resources) {\n \n@@ -176,6 +225,11 @@ public final void set(final ResourceOperationType type,\n         }\n     }\n \n+    /**\n+     * Merge another resource operation instance into this instance.\n+     *\n+     * @param resourceOperations to be merged\n+     */\n     public final void merge(final ResourceOperations resourceOperations) {\n         toBeCreated.addAll(\n                 resourceOperations.get(ResourceOperationType.CREATE));\n@@ -185,16 +239,33 @@ public final void merge(final ResourceOperations resourceOperations) {\n                 resourceOperations.get(ResourceOperationType.DELETE));\n     }\n \n+    /**\n+     * Wether no operations are present.\n+     *\n+     * @return true if no operations (create / update / delete) are present\n+     */\n     public final boolean isEmpty() {\n         return toBeCreated.isEmpty()\n                 && toBeUpdated.isEmpty()\n                 && toBeUpdated.isEmpty();\n     }\n \n+    /**\n+     * Fetch old account id for given resource name.\n+     *\n+     * @param resourceName resource name\n+     * @return old account id; can be null\n+     */\n     public String getOldAccountId(final String resourceName) {\n         return oldAccountIds.get(resourceName);\n     }\n \n+    /**\n+     * Add old account id for a given resource name.\n+     *\n+     * @param resourceName resourceName resource name\n+     * @param oldAccountId old account id\n+     */\n     public void addOldAccountId(final String resourceName,\n             final String oldAccountId) {\n "},{"sha":"afbe5d3346a2f19ef4070acde546f7281497362f","filename":"core/src/main/java/org/syncope/core/persistence/propagation/package-info.java","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2Fpackage-info.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -0,0 +1,18 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+/**\n+ * Package for classes involved in propagation.\n+ */\n+package org.syncope.core.persistence.propagation;"},{"sha":"799d5b7c0166c9173233b8139e621d7724c2bdde","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":17,"deletions":3,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -323,10 +323,24 @@ protected ResourceOperations fill(\n                 if (attribute == null) {\n                     LOG.debug(\"No attribute found for schema {}\", schema);\n                 } else {\n-                    attributable.removeAttribute(attribute);\n+                    String newValue = null;\n+                    for (AttributeMod mod : attributableMod.\n+                            getAttributesToBeUpdated()) {\n \n-                    attributeDAO.delete(attribute.getId(),\n-                            attributableUtil.attributeClass());\n+                        if (schema.getName().equals(mod.getSchema())) {\n+                            newValue = mod.getValuesToBeAdded().\n+                                    iterator().next();\n+                        }\n+                    }\n+\n+                    if (!schema.isUniqueConstraint()\n+                            || (!attribute.getUniqueValue().getStringValue().\n+                            equals(newValue))) {\n+\n+                        attributable.removeAttribute(attribute);\n+                        attributeDAO.delete(attribute.getId(),\n+                                attributableUtil.attributeClass());\n+                    }\n                 }\n \n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {"},{"sha":"3dd8be542d013d0299fcca9959b09a8246512130","filename":"core/src/main/java/org/syncope/core/scheduling/AbstractJob.java","status":"modified","additions":35,"deletions":1,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FAbstractJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FAbstractJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FAbstractJob.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -25,6 +25,11 @@\n import org.syncope.core.persistence.dao.TaskDAO;\n import org.syncope.core.persistence.dao.TaskExecDAO;\n \n+/**\n+ * Base job implementation that delegates to concrete implementation the actual\n+ * job execution and provides some background settings (like as the\n+ * corresponding Task, for example).\n+ */\n public abstract class AbstractJob implements Job {\n \n     /**\n@@ -33,21 +38,44 @@ public abstract class AbstractJob implements Job {\n     protected static final Logger LOG = LoggerFactory.getLogger(\n             AbstractJob.class);\n \n+    /**\n+     * Success task execution status.\n+     */\n     protected static final String SUCCESS = \"SUCCESS\";\n \n+    /**\n+     * Faliure task execution status.\n+     */\n     protected static final String FAILURE = \"FAILURE\";\n \n+    /**\n+     * Task DAO.\n+     */\n     @Autowired\n     protected TaskDAO taskDAO;\n \n+    /**\n+     * Task execution DAO.\n+     */\n     @Autowired\n     private TaskExecDAO taskExecDAO;\n \n+    /**\n+     * Id, set by the caller, for identifying the task to be executed.\n+     */\n     protected Long taskId;\n \n+    /**\n+     * The actual task to be executed.\n+     */\n     protected Task task;\n \n-    public void setTaskId(Long taskId) {\n+    /**\n+     * Task id setter.\n+     *\n+     * @param taskId to be set\n+     */\n+    public void setTaskId(final Long taskId) {\n         this.taskId = taskId;\n     }\n \n@@ -83,6 +111,12 @@ public final void execute()\n         taskExecDAO.save(execution);\n     }\n \n+    /**\n+     * The actual execution, delegated to child classes.\n+     *\n+     * @return the task execution status to be set\n+     * @throws JobExecutionException \n+     */\n     protected abstract String doExecute()\n             throws JobExecutionException;\n }"},{"sha":"eabb2cc2cf9f396360704d159493017aa150a3bd","filename":"core/src/main/java/org/syncope/core/scheduling/AppContextMethodInvokingJobDetailFactoryBean.java","status":"modified","additions":71,"deletions":13,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FAppContextMethodInvokingJobDetailFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FAppContextMethodInvokingJobDetailFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FAppContextMethodInvokingJobDetailFactoryBean.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -31,7 +31,6 @@\n import org.springframework.context.ConfigurableApplicationContext;\n import org.springframework.scheduling.quartz.JobMethodInvocationFailedException;\n import org.springframework.scheduling.quartz.QuartzJobBean;\n-import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.util.MethodInvoker;\n import org.syncope.core.util.ApplicationContextManager;\n \n@@ -46,27 +45,50 @@\n         implements FactoryBean<JobDetail>, BeanNameAware, BeanClassLoaderAware,\n         BeanFactoryAware, InitializingBean, Serializable {\n \n+    /**\n+     * Serial version UID.\n+     */\n     private static final long serialVersionUID = -9164669094205867738L;\n \n+    /**\n+     * Scheduler group name (defaults to org.quartz.Scheduler#DEFAULT_GROUP).\n+     */\n     private String group = Scheduler.DEFAULT_GROUP;\n \n+    /**\n+     * Bean name.\n+     */\n     private String beanName;\n \n+    /**\n+     * Job listener names.\n+     */\n     private String[] jobListenerNames;\n \n+    /**\n+     * Job detail.\n+     */\n     private JobDetail jobDetail;\n \n+    /**\n+     * Target bean name.\n+     */\n     private String targetBeanName;\n \n+    /**\n+     * Target method name.\n+     */\n     private String targetMethod;\n \n     /**\n      * Set the group of the job.\n-     * <p>Default is the default group of the Scheduler.\n+     * Default is the default group of the Scheduler.\n+     *\n+     * @param group to be set\n      * @see org.quartz.JobDetail#setGroup\n      * @see org.quartz.Scheduler#DEFAULT_GROUP\n      */\n-    public void setGroup(String group) {\n+    public void setGroup(final String group) {\n         this.group = group;\n     }\n \n@@ -91,34 +113,46 @@ public boolean isSingleton() {\n      * Set a list of JobListener names for this job, referring to\n      * non-global JobListeners registered with the Scheduler.\n      * <p>A JobListener name always refers to the name returned\n-     * by the JobListener implementation.\n+     * by the JobListener implementation.</p>\n+     *\n+     * @param names to be set\n      * @see SchedulerFactoryBean#setJobListeners\n      * @see org.quartz.JobListener#getName\n      */\n-    public void setJobListenerNames(String[] names) {\n+    public void setJobListenerNames(final String[] names) {\n         if (names != null) {\n             this.jobListenerNames = names.clone();\n         }\n     }\n \n     @Override\n-    public void setBeanName(String beanName) {\n+    public void setBeanName(final String beanName) {\n         this.beanName = beanName;\n     }\n \n     @Override\n-    public void setBeanClassLoader(ClassLoader classLoader) {\n+    public void setBeanClassLoader(final ClassLoader classLoader) {\n     }\n \n     @Override\n-    public void setBeanFactory(BeanFactory beanFactory) {\n+    public void setBeanFactory(final BeanFactory beanFactory) {\n     }\n \n-    public void setTargetBeanName(String targetBeanName) {\n+    /**\n+     * Set target bean name.\n+     *\n+     * @param targetBeanName to be set\n+     */\n+    public void setTargetBeanName(final String targetBeanName) {\n         this.targetBeanName = targetBeanName;\n     }\n \n-    public void setTargetMethod(String targetMethod) {\n+    /**\n+     * Set target method name.\n+     *\n+     * @param targetMethod to be set\n+     */\n+    public void setTargetMethod(final String targetMethod) {\n         this.targetMethod = targetMethod;\n     }\n \n@@ -152,23 +186,47 @@ public void afterPropertiesSet()\n         }\n     }\n \n+    /**\n+     * Spring's QuartzJobBean implementation delegating actual operations to\n+     * a bean fetched from application context.<br/>\n+     * Being a StatefulJob, no concurrent executions are allowed.\n+     *\n+     * @see QuartzJobBean\n+     * @see StatefulJob\n+     */\n     public static class MethodInvokingJob extends QuartzJobBean\n             implements StatefulJob {\n \n+        /**\n+         * Target bean name.\n+         */\n         private String targetBeanName;\n \n+        /**\n+         * Target method name.\n+         */\n         private String targetMethod;\n \n-        public void setTargetBeanName(String targetBeanName) {\n+        /**\n+         * Target bean name setter.\n+         *\n+         * @param targetBeanName to be set\n+         */\n+        public void setTargetBeanName(final String targetBeanName) {\n             this.targetBeanName = targetBeanName;\n         }\n \n-        public void setTargetMethod(String targetMethod) {\n+        /**\n+         * Target method setter.\n+         *\n+         * @param targetMethod to be set\n+         */\n+        public void setTargetMethod(final String targetMethod) {\n             this.targetMethod = targetMethod;\n         }\n \n         @Override\n-        protected void executeInternal(JobExecutionContext context)\n+        protected void executeInternal(final JobExecutionContext context)\n                 throws JobExecutionException {\n \n             ConfigurableApplicationContext appContext ="},{"sha":"fce2ad6ea48f23297a1d3f81bb07bb8c62573cf3","filename":"core/src/main/java/org/syncope/core/scheduling/Job.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FJob.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -15,7 +15,17 @@\n \n import org.quartz.JobExecutionException;\n \n+/**\n+ * Interface for jobs to be executed within Syncope, by empowering\n+ * Spring and Quartz.\n+ */\n public interface Job {\n \n-    void execute() throws JobExecutionException;\n+    /**\n+     * The actual execution.\n+     *\n+     * @throws JobExecutionException \n+     */\n+    void execute()\n+            throws JobExecutionException;\n }"},{"sha":"53321276c13bd2981288807d7a4e586f995c211e","filename":"core/src/main/java/org/syncope/core/scheduling/SampleJob.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSampleJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSampleJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSampleJob.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -16,6 +16,11 @@\n import org.quartz.JobExecutionException;\n import org.syncope.core.persistence.beans.SchedTask;\n \n+/**\n+ * Sample implementation for execution a scheduled task.\n+ *\n+ * @see SchedTask\n+ */\n public class SampleJob extends AbstractJob {\n \n     @Override\n@@ -28,7 +33,7 @@ protected String doExecute()\n         }\n         final SchedTask schedTask = (SchedTask) this.task;\n \n-        LOG.info(\"SampleJob running\");\n+        LOG.info(\"SampleJob running [SchedTask {}]\", schedTask.getId());\n \n         return \"RUNNING\";\n     }"},{"sha":"1c1dab9181b2d0b202223112bd9065937d27d76a","filename":"core/src/main/java/org/syncope/core/scheduling/SpringBeanContextAwareJobFactory.java","status":"modified","additions":15,"deletions":3,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSpringBeanContextAwareJobFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSpringBeanContextAwareJobFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSpringBeanContextAwareJobFactory.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -26,20 +26,28 @@\n  */\n public class SpringBeanContextAwareJobFactory extends SpringBeanJobFactory {\n \n+    /**\n+     * Properties to ignore.\n+     */\n     private String[] ignoredUnknownProperties;\n \n+    /**\n+     * Scheduler context.\n+     */\n     private SchedulerContext schedulerContext;\n \n     @Override\n-    public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties) {\n+    public void setIgnoredUnknownProperties(\n+            final String[] ignoredUnknownProperties) {\n+\n         super.setIgnoredUnknownProperties(ignoredUnknownProperties);\n         if (ignoredUnknownProperties != null) {\n             this.ignoredUnknownProperties = ignoredUnknownProperties.clone();\n         }\n     }\n \n     @Override\n-    public void setSchedulerContext(SchedulerContext schedulerContext) {\n+    public void setSchedulerContext(final SchedulerContext schedulerContext) {\n         super.setSchedulerContext(schedulerContext);\n         this.schedulerContext = schedulerContext;\n     }\n@@ -51,9 +59,13 @@ public void setSchedulerContext(SchedulerContext schedulerContext) {\n      * This method is overriden.\n      * @see org.springframework.scheduling.quartz.SpringBeanJobFactory\n      * #createJobInstance(org.quartz.spi.TriggerFiredBundle)\n+     *\n+     * @param bundle Spring's TriggerFiredBundle\n+     * @return the actual JobInstance\n+     * @throws Exception if anything goes wrong\n      */\n     @Override\n-    protected Object createJobInstance(TriggerFiredBundle bundle)\n+    protected Object createJobInstance(final TriggerFiredBundle bundle)\n             throws Exception {\n \n         XmlWebApplicationContext ctx ="},{"sha":"abe189860e25314ab22fc542d0b95d36c7a543ed","filename":"core/src/main/java/org/syncope/core/scheduling/SyncJob.java","status":"modified","additions":76,"deletions":8,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -50,27 +50,57 @@\n import org.syncope.core.rest.controller.InvalidSearchConditionException;\n import org.syncope.core.rest.controller.UserController;\n \n+/**\n+ * Job for executing synchronization tasks.\n+ * @see Job\n+ * @see SyncTask\n+ */\n public class SyncJob extends AbstractJob {\n \n+    /**\n+     * ConnInstance loader.\n+     */\n     @Autowired\n     private ConnInstanceLoader connInstanceLoader;\n \n+    /**\n+     * Connector instance DAO.\n+     */\n+    @Autowired\n+    private ConnInstanceDAO connInstanceDAO;\n+\n+    /**\n+     * Schema DAO.\n+     */\n     @Autowired\n     private SchemaDAO schemaDAO;\n \n+    /**\n+     * Derived schema DAO.\n+     */\n     @Autowired\n     private DerSchemaDAO derSchemaDAO;\n \n+    /**\n+     * User DAO.\n+     */\n     @Autowired\n     private UserDAO userDAO;\n \n+    /**\n+     * User REST controller.\n+     */\n     @Autowired\n     private UserController userController;\n \n-    @Autowired\n-    private ConnInstanceDAO connInstanceDAO;\n-\n-    private String getPassword(List<Object> values) {\n+    /**\n+     * Extract password value from passed values (if instance of GuardedString\n+     * or GuardedByteArray).\n+     *\n+     * @param values list of values received from the underlying connector.\n+     * @return password value\n+     */\n+    private String getPassword(final List<Object> values) {\n         final StringBuilder result = new StringBuilder();\n \n         Object pwd;\n@@ -84,15 +114,15 @@ private String getPassword(List<Object> values) {\n             ((GuardedString) pwd).access(new GuardedString.Accessor() {\n \n                 @Override\n-                public void access(char[] clearChars) {\n+                public void access(final char[] clearChars) {\n                     result.append(clearChars);\n                 }\n             });\n         } else if (pwd instanceof GuardedByteArray) {\n             ((GuardedByteArray) pwd).access(new GuardedByteArray.Accessor() {\n \n                 @Override\n-                public void access(byte[] clearBytes) {\n+                public void access(final byte[] clearBytes) {\n                     result.append(new String(clearBytes));\n                 }\n             });\n@@ -105,6 +135,15 @@ public void access(byte[] clearBytes) {\n         return result.toString();\n     }\n \n+    /**\n+     * Build an UserTO out of connector object attributes and schema mapping.\n+     *\n+     * @param obj connector object\n+     * @param mappings schema mappings\n+     * @param roles default roles to be assigned\n+     * @param resources default resources to be assigned\n+     * @return UserTO for the user to be created\n+     */\n     private UserTO getUserTO(final ConnectorObject obj,\n             final List<SchemaMapping> mappings,\n             final Set<Long> roles, final Set<String> resources) {\n@@ -155,12 +194,24 @@ private UserTO getUserTO(final ConnectorObject obj,\n                     attributeTO.setSchema(mapping.getSourceAttrName());\n                     userTO.addVirtualAttribute(attributeTO);\n                     break;\n+\n+                default:\n             }\n         }\n \n         return userTO;\n     }\n \n+    /**\n+     * Build an UserMod out of connector object attributes and schema mapping.\n+     *\n+     * @param userId user to be updated\n+     * @param obj connector object\n+     * @param mappings schema mappings\n+     * @param roles default roles to be assigned\n+     * @param resources default resources to be assigned\n+     * @return UserMod for the user to be updated\n+     */\n     private UserMod getUserMod(final Long userId, final ConnectorObject obj,\n             final List<SchemaMapping> mappings,\n             final Set<Long> roles, final Set<String> resources) {\n@@ -193,6 +244,9 @@ private UserMod getUserMod(final Long userId, final ConnectorObject obj,\n                     break;\n \n                 case UserSchema:\n+                    userMod.addAttributeToBeRemoved(\n+                            mapping.getSourceAttrName());\n+\n                     attributeMod = new AttributeMod();\n                     attributeMod.setSchema(mapping.getSourceAttrName());\n                     for (Object value : values) {\n@@ -210,12 +264,22 @@ private UserMod getUserMod(final Long userId, final ConnectorObject obj,\n                     userMod.addVirtualAttributeToBeAdded(\n                             mapping.getSourceAttrName());\n                     break;\n+\n+                default:\n             }\n         }\n \n         return userMod;\n     }\n \n+    /**\n+     * Find users based on mapped uid value (or previous uid value, if updated).\n+     *\n+     * @param schemaName schema name mapped as accountId\n+     * @param uidValue Uid value\n+     * @param previousUidValue Uid value before last update (if available)\n+     * @return list of matching users\n+     */\n     private List<SyncopeUser> findExistingUsers(\n             final String schemaName, final String uidValue,\n             final String previousUidValue) {\n@@ -240,7 +304,8 @@ private List<SyncopeUser> findExistingUsers(\n                     LOG.error(\"Could not search for matching users\", e);\n                 }\n             } else {\n-                LOG.warn(\"Invalid account Id source schema name: \" + schemaName);\n+                LOG.warn(\"Invalid account Id source schema name: {}\",\n+                        schemaName);\n             }\n         }\n \n@@ -319,7 +384,8 @@ protected String doExecute()\n                         try {\n                             userController.create(getUserTO(delta.getObject(),\n                                     syncTask.getResource().getMappings(),\n-                                    defaultRoles, defaultResources), null, null);\n+                                    defaultRoles, defaultResources),\n+                                    null, null);\n                             created++;\n                         } catch (Throwable t) {\n                             failCreated++;\n@@ -366,6 +432,8 @@ protected String doExecute()\n                         }\n                     }\n                     break;\n+\n+                default:\n             }\n         }\n "},{"sha":"83cf355e187261288abd46aa762d18c4807e6beb","filename":"core/src/main/java/org/syncope/core/scheduling/package-info.java","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2Fpackage-info.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -0,0 +1,18 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+/**\n+ * Package for classes involved in task scheduling.\n+ */\n+package org.syncope.core.scheduling;"},{"sha":"9a3bebcddc91ec01a92e2ae5c2c2f6ac15848f7a","filename":"core/src/test/java/org/syncope/core/persistence/dao/DerSchemaTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaTest.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -37,7 +37,7 @@ public class DerSchemaTest extends AbstractTest {\n     public final void findAll() {\n         List<UDerSchema> list =\n                 derSchemaDAO.findAll(UDerSchema.class);\n-        assertEquals(2, list.size());\n+        assertEquals(3, list.size());\n     }\n \n     @Test"},{"sha":"77cfbb55ee05bb15657904d3b825d8c9eeb5ab71","filename":"core/src/test/java/org/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -218,6 +218,7 @@ public void sync() {\n                 BASE_URL + \"user/count.json\", Integer.class);\n         assertNotNull(usersPost);\n \n-        assertTrue(\"created users \" + usersPost, usersPost == usersPre + 10);\n+        assertTrue(\"Expected \" + usersPre + 10 + \", found \" + usersPost,\n+                usersPost == usersPre + 10);\n     }\n }"},{"sha":"19a15dc8ecd7ec6c3ad86e4f323b35af7cb8af18","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":12,"deletions":3,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -785,6 +785,7 @@ public final void update() {\n         attributeMod.addValueToBeAdded(\"t.w@spre.net\");\n         userMod.addAttributeToBeUpdated(attributeMod);\n \n+        userMod.addAttributeToBeRemoved(\"username\");\n         attributeMod = new AttributeMod();\n         attributeMod.setSchema(\"username\");\n         attributeMod.addValueToBeAdded(\"g.h@t.com\");\n@@ -806,16 +807,24 @@ public final void update() {\n         assertEquals(1, userTO.getMemberships().iterator().next().\n                 getAttributes().size());\n         assertFalse(userTO.getDerivedAttributes().isEmpty());\n-        boolean attributeFound = false;\n+        boolean userIdFound = false;\n+        boolean usernameFound = false;\n         for (AttributeTO attributeTO : userTO.getAttributes()) {\n             if (\"userId\".equals(attributeTO.getSchema())) {\n-                attributeFound = true;\n+                userIdFound = true;\n \n                 assertEquals(Collections.singletonList(\"t.w@spre.net\"),\n                         attributeTO.getValues());\n             }\n+            if (\"username\".equals(attributeTO.getSchema())) {\n+                usernameFound = true;\n+\n+                assertEquals(Collections.singletonList(\"g.h@t.com\"),\n+                        attributeTO.getValues());\n+            }\n         }\n-        assertTrue(attributeFound);\n+        assertTrue(userIdFound);\n+        assertTrue(usernameFound);\n     }\n \n     @Test"},{"sha":"92b903c645605039a67e300848226e336f2d02bc","filename":"core/src/test/resources/content.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -71,6 +71,8 @@\n                 mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n                 enumerationValues=\"M;F\"/>\n \n+    <UDerSchema name=\"csvuserid\" expression=\"firstname + ',' + surname\"/>\n+\n     <RSchema name=\"icon\" type=\"String\"\n                 mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n                 \n@@ -358,6 +360,10 @@\n     <SchemaMapping id=\"204\" destAttrName=\"email\"\n                    resource_name=\"resource-csv\"\n                    sourceAttrName=\"userId\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   accountid=\"0\" password=\"0\"/>\n+    <SchemaMapping id=\"205\" destAttrName=\"IGNORE\"\n+                   resource_name=\"resource-csv\"\n+                   sourceAttrName=\"csvuserid\" sourceMappingType=\"UserDerivedSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n                    \n     <Task DTYPE=\"PropagationTask\" id=\"1\" propagationMode=\"ASYNC\" resourceOperationType=\"UPDATE\""},{"sha":"bfff21e61c51d5d524502f82a092ab03a6ce6b40","filename":"pom.xml","status":"modified","additions":25,"deletions":8,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d38272f61706caf3c075fe0bf426febf5c63f61f/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d38272f61706caf3c075fe0bf426febf5c63f61f/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=d38272f61706caf3c075fe0bf426febf5c63f61f","patch":"@@ -68,6 +68,7 @@\n     </mailingLists>\n \n     <properties>\n+        <targetJdk>1.6</targetJdk>\n         <maven.version>3.0.3</maven.version>\n         \n         <servlet-api.version>2.5</servlet-api.version>\n@@ -118,7 +119,7 @@\n         <selenium-java-client-driver.version>1.0.2</selenium-java-client-driver.version>\n         <dbunit.version>2.4.8</dbunit.version>\n \n-        <tomcat.version>7.0.20</tomcat.version>\n+        <tomcat.version>7.0.21</tomcat.version>\n \n         <bundles.directory>${project.build.directory}/bundles</bundles.directory>\n         <log.directory>${project.build.directory}/log</log.directory>\n@@ -509,8 +510,8 @@\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-compiler-plugin</artifactId>\n                     <configuration>\n-                        <source>1.6</source>\n-                        <target>1.6</target>\n+                        <source>${targetJdk}</source>\n+                        <target>${targetJdk}</target>\n                     </configuration>\n                 </plugin>\n                 <plugin>\n@@ -600,6 +601,23 @@\n                     </dependency>\n                 </dependencies>\n             </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-pmd-plugin</artifactId>\n+                <version>2.5</version>\n+                <dependencies>    \n+                    <dependency>\n+                        <groupId>org.syncope</groupId>\n+                        <artifactId>syncope-build-tools</artifactId>\n+                        <version>${project.version}</version>\n+                    </dependency>\n+                </dependencies>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-jxr-plugin</artifactId>\n+                <version>2.3</version>\n+            </plugin>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-site-plugin</artifactId>\n@@ -613,7 +631,7 @@\n                             <version>2.7</version>\n                             <configuration>\n                                 <configLocation>org/syncope/checkstyle.xml</configLocation>\n-                                <targetJdk>1.6</targetJdk>\n+                                <targetJdk>${targetJdk}</targetJdk>\n                             </configuration>\n                         </plugin>\n                         <plugin>\n@@ -631,10 +649,9 @@\n                             <artifactId>maven-pmd-plugin</artifactId>\n                             <version>2.5</version>\n                             <configuration>\n-                                <targetJdk>1.6</targetJdk>\n+                                <targetJdk>${targetJdk}</targetJdk>\n                                 <rulesets>\n-                                    <ruleset>/rulesets/basic.xml</ruleset>\n-                                    <ruleset>/rulesets/controversial.xml</ruleset>\n+                                    <ruleset>org/syncope/pmd.xml</ruleset>\n                                 </rulesets>\n                                 <format>xml</format>\n                                 <linkXref>true</linkXref>\n@@ -650,7 +667,7 @@\n                                 <findbugsXmlOutput>true</findbugsXmlOutput>\n                                 <findbugsXmlWithMessages>true</findbugsXmlWithMessages>\n                                 <xmlOutput>true</xmlOutput>\n-                                <targetJdk>1.6</targetJdk>\n+                                <targetJdk>${targetJdk}</targetJdk>\n                             </configuration>\n                         </plugin>\n                     </reportPlugins>"}]}