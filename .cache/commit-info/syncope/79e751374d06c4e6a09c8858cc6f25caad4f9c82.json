{"sha":"79e751374d06c4e6a09c8858cc6f25caad4f9c82","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc5ZTc1MTM3NGQwNmM0ZTZhMDljODg1OGNjNmYyNWNhYWQ0ZjljODI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-07T14:55:56Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-07T14:55:56Z"},"message":"Completing (and verifying) role template features for SyncTask\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/DEV_ROLE_PROVISIONING@1418342 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6dbf4000074d28ba9757f05f34d2a85eabd0aa32","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6dbf4000074d28ba9757f05f34d2a85eabd0aa32"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/79e751374d06c4e6a09c8858cc6f25caad4f9c82","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/79e751374d06c4e6a09c8858cc6f25caad4f9c82","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/79e751374d06c4e6a09c8858cc6f25caad4f9c82","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/79e751374d06c4e6a09c8858cc6f25caad4f9c82/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6d700c2a0274c35b286f575e0c8510ae8b983b9e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d700c2a0274c35b286f575e0c8510ae8b983b9e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6d700c2a0274c35b286f575e0c8510ae8b983b9e"}],"stats":{"total":74,"additions":50,"deletions":24},"files":[{"sha":"db044c7de5c135f8651efc892445945f8abffa2c","filename":"client/src/main/java/org/apache/syncope/client/to/SyncTaskTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79e751374d06c4e6a09c8858cc6f25caad4f9c82/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FSyncTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79e751374d06c4e6a09c8858cc6f25caad4f9c82/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FSyncTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FSyncTaskTO.java?ref=79e751374d06c4e6a09c8858cc6f25caad4f9c82","patch":"@@ -26,6 +26,8 @@ public class SyncTaskTO extends SchedTaskTO {\n \n     private UserTO userTemplate;\n \n+    private RoleTO roleTemplate;\n+\n     private boolean performCreate;\n \n     private boolean performUpdate;\n@@ -46,6 +48,14 @@ public void setUserTemplate(UserTO userTemplate) {\n         this.userTemplate = userTemplate;\n     }\n \n+    public RoleTO getRoleTemplate() {\n+        return roleTemplate;\n+    }\n+\n+    public void setRoleTemplate(RoleTO roleTemplate) {\n+        this.roleTemplate = roleTemplate;\n+    }\n+\n     public String getResource() {\n         return resource;\n     }"},{"sha":"2f86aaec24af23d2332b28fb9c03913c2f1f64c6","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/SyncTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79e751374d06c4e6a09c8858cc6f25caad4f9c82/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79e751374d06c4e6a09c8858cc6f25caad4f9c82/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java?ref=79e751374d06c4e6a09c8858cc6f25caad4f9c82","patch":"@@ -112,7 +112,7 @@ public RoleTO getRoleTemplate() {\n                 : XMLSerializer.<RoleTO>deserialize(roleTemplate);\n     }\n \n-    public void setUserTemplate(final RoleTO roleTemplate) {\n+    public void setRoleTemplate(final RoleTO roleTemplate) {\n         this.roleTemplate = XMLSerializer.serialize(roleTemplate);\n     }\n "},{"sha":"cbd146c2b2d2d1dbcc412d79341612864d065b22","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":28,"deletions":19,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79e751374d06c4e6a09c8858cc6f25caad4f9c82/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79e751374d06c4e6a09c8858cc6f25caad4f9c82/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=79e751374d06c4e6a09c8858cc6f25caad4f9c82","patch":"@@ -22,6 +22,7 @@\n import org.apache.syncope.client.to.AbstractAttributableTO;\n import org.apache.syncope.client.to.AttributeTO;\n import org.apache.syncope.client.to.MembershipTO;\n+import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.SchedTaskTO;\n import org.apache.syncope.client.to.SyncTaskTO;\n import org.apache.syncope.client.to.TaskExecTO;\n@@ -80,34 +81,29 @@ public class TaskDataBinder {\n     private JexlUtil jexlUtil;\n \n     private void checkJexl(final AbstractAttributableTO attributableTO, final SyncopeClientException sce) {\n-\n         for (AttributeTO attrTO : attributableTO.getAttributes()) {\n             if (!attrTO.getValues().isEmpty() && !jexlUtil.isExpressionValid(attrTO.getValues().get(0))) {\n-\n                 sce.addElement(\"Invalid JEXL: \" + attrTO.getValues().get(0));\n             }\n         }\n         for (AttributeTO attrTO : attributableTO.getVirtualAttributes()) {\n             if (!attrTO.getValues().isEmpty() && !jexlUtil.isExpressionValid(attrTO.getValues().get(0))) {\n-\n                 sce.addElement(\"Invalid JEXL: \" + attrTO.getValues().get(0));\n             }\n         }\n     }\n \n     private void fill(final SyncTask task, final SyncTaskTO taskTO) {\n+        SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.InvalidSyncTask);\n+\n+        // 1. validate JEXL expressions in user and role templates\n         if (taskTO.getUserTemplate() != null) {\n             UserTO template = taskTO.getUserTemplate();\n \n-            // 1. validate JEXL expressions in user template\n-            SyncopeClientException sce = new SyncopeClientException(SyncopeClientExceptionType.InvalidSyncTask);\n-\n             if (StringUtils.isNotBlank(template.getUsername()) && !jexlUtil.isExpressionValid(template.getUsername())) {\n-\n                 sce.addElement(\"Invalid JEXL: \" + template.getUsername());\n             }\n             if (StringUtils.isNotBlank(template.getPassword()) && !jexlUtil.isExpressionValid(template.getPassword())) {\n-\n                 sce.addElement(\"Invalid JEXL: \" + template.getPassword());\n             }\n \n@@ -116,18 +112,28 @@ private void fill(final SyncTask task, final SyncTaskTO taskTO) {\n             for (MembershipTO memb : template.getMemberships()) {\n                 checkJexl(memb, sce);\n             }\n+        }\n+        if (taskTO.getRoleTemplate() != null) {\n+            RoleTO template = taskTO.getRoleTemplate();\n \n-            if (!sce.isEmpty()) {\n-                SyncopeClientCompositeErrorException scce = new SyncopeClientCompositeErrorException(\n-                        HttpStatus.BAD_REQUEST);\n-                scce.addException(sce);\n-                throw scce;\n+            if (StringUtils.isNotBlank(template.getName()) && !jexlUtil.isExpressionValid(template.getName())) {\n+                sce.addElement(\"Invalid JEXL: \" + template.getName());\n             }\n+\n+            checkJexl(template, sce);\n+        }\n+        if (!sce.isEmpty()) {\n+            SyncopeClientCompositeErrorException scce = new SyncopeClientCompositeErrorException(\n+                    HttpStatus.BAD_REQUEST);\n+            scce.addException(sce);\n+            throw scce;\n         }\n \n-        // 2. all JEXL expressions are valid: accept user template\n+        // 2. all JEXL expressions are valid: accept user and role templates\n         task.setUserTemplate(taskTO.getUserTemplate());\n+        task.setRoleTemplate(taskTO.getRoleTemplate());\n \n+        // 3. fill the remaining fields\n         task.setPerformCreate(taskTO.isPerformCreate());\n         task.setPerformUpdate(taskTO.isPerformUpdate());\n         task.setPerformDelete(taskTO.isPerformDelete());\n@@ -251,20 +257,23 @@ public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n                 break;\n \n             case SCHED:\n+                if (!(task instanceof SchedTask)) {\n+                    throw new ClassCastException(\"taskUtil is type Sched but task is not SchedTask: \"\n+                            + task.getClass().getName());\n+                }\n                 setExecTime((SchedTaskTO) taskTO, task);\n                 ((SchedTaskTO) taskTO).setName(((SchedTask) task).getName());\n                 ((SchedTaskTO) taskTO).setDescription(((SchedTask) task).getDescription());\n                 break;\n \n             case SYNC:\n+                if (!(task instanceof SyncTask)) {\n+                    throw new ClassCastException(\"taskUtil is type Sync but task is not SyncTask: \"\n+                            + task.getClass().getName());\n+                }\n                 setExecTime((SchedTaskTO) taskTO, task);\n                 ((SyncTaskTO) taskTO).setName(((SyncTask) task).getName());\n                 ((SyncTaskTO) taskTO).setDescription(((SyncTask) task).getDescription());\n-                if (!(task instanceof SyncTask)) {\n-                    throw new ClassCastException(\"taskUtil is type Sync but task is not SyncTask: \" + task.getClass().\n-                            getName());\n-                }\n-\n                 ((SyncTaskTO) taskTO).setResource(((SyncTask) task).getResource().getName());\n                 break;\n "},{"sha":"c1812cbaf7988c3d85343390d900db2c2f7c2765","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":11,"deletions":4,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/79e751374d06c4e6a09c8858cc6f25caad4f9c82/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/79e751374d06c4e6a09c8858cc6f25caad4f9c82/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=79e751374d06c4e6a09c8858cc6f25caad4f9c82","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.client.to.NotificationTaskTO;\n import org.apache.syncope.client.to.TaskExecTO;\n import org.apache.syncope.client.to.PropagationTaskTO;\n+import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.SchedTaskTO;\n import org.apache.syncope.client.to.SyncTaskTO;\n import org.apache.syncope.client.to.TaskTO;\n@@ -71,12 +72,16 @@ public void create() {\n         task.setName(\"Test create Sync\");\n         task.setResource(\"ws-target-resource-2\");\n \n-        UserTO template = new UserTO();\n-        template.addResource(\"ws-target-resource-2\");\n+        UserTO userTemplate = new UserTO();\n+        userTemplate.addResource(\"ws-target-resource-2\");\n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n-        template.addMembership(membershipTO);\n-        task.setUserTemplate(template);\n+        userTemplate.addMembership(membershipTO);\n+        task.setUserTemplate(userTemplate);\n+\n+        RoleTO roleTemplate = new RoleTO();\n+        roleTemplate.addResource(\"resource-ldap\");\n+        task.setRoleTemplate(roleTemplate);\n \n         SyncTaskTO actual = restTemplate.postForObject(BASE_URL + \"task/create/sync\", task, SyncTaskTO.class);\n         assertNotNull(actual);\n@@ -85,6 +90,8 @@ public void create() {\n         assertNotNull(task);\n         assertEquals(actual.getId(), task.getId());\n         assertEquals(actual.getJobClassName(), task.getJobClassName());\n+        assertEquals(userTemplate, task.getUserTemplate());\n+        assertEquals(roleTemplate, task.getRoleTemplate());\n     }\n \n     @Test"}]}