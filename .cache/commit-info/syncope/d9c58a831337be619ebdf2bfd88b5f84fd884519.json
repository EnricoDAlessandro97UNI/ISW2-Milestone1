{"sha":"d9c58a831337be619ebdf2bfd88b5f84fd884519","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ5YzU4YTgzMTMzN2JlNjE5ZWJkZjJiZmQ4OGI1Zjg0ZmQ4ODQ1MTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-29T10:17:18Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-29T10:18:56Z"},"message":"[SYNCOPE-1318] Now using more flexible ThreadPoolTaskExecutor","tree":{"sha":"4931d09b2f804d930f840e691bf3b41bc73c95d7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4931d09b2f804d930f840e691bf3b41bc73c95d7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d9c58a831337be619ebdf2bfd88b5f84fd884519","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d9c58a831337be619ebdf2bfd88b5f84fd884519","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d9c58a831337be619ebdf2bfd88b5f84fd884519","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d9c58a831337be619ebdf2bfd88b5f84fd884519/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b4cb1cdc85d4a7a5081924aaa0c3d3d6e7a86bc3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b4cb1cdc85d4a7a5081924aaa0c3d3d6e7a86bc3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b4cb1cdc85d4a7a5081924aaa0c3d3d6e7a86bc3"}],"stats":{"total":59,"additions":28,"deletions":31},"files":[{"sha":"065e035df04ae41aafbe8c90e193bf5eaf772f1c","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":16,"deletions":23,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9c58a831337be619ebdf2bfd88b5f84fd884519/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9c58a831337be619ebdf2bfd88b5f84fd884519/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=d9c58a831337be619ebdf2bfd88b5f84fd884519","patch":"@@ -27,16 +27,15 @@\n import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.Callable;\n-import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n-import java.util.concurrent.ScheduledExecutorService;\n import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.MediaType;\n import org.apache.commons.collections4.list.SetUniqueList;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n@@ -51,26 +50,14 @@\n import org.apache.wicket.request.Request;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean;\n+import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n \n public class SyncopeConsoleSession extends AuthenticatedWebSession {\n \n     private static final long serialVersionUID = 747562246415852166L;\n \n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeConsoleSession.class);\n \n-    private static final ThreadPoolExecutorFactoryBean THREAD_POOL_FACTORY;\n-\n-    public static final String AUTHENTICATED = \"AUTHENTICATED\";\n-\n-    public static final String MENU_COLLAPSE = \"MENU_COLLAPSE\";\n-\n-    static {\n-        THREAD_POOL_FACTORY = new ThreadPoolExecutorFactoryBean();\n-        THREAD_POOL_FACTORY.setThreadNamePrefix(SyncopeConsoleSession.class.getSimpleName());\n-        THREAD_POOL_FACTORY.setDaemon(true);\n-    }\n-\n     private final SyncopeClientFactoryBean clientFactory;\n \n     private final SyncopeClient anonymousClient;\n@@ -79,11 +66,11 @@ public class SyncopeConsoleSession extends AuthenticatedWebSession {\n \n     private final SystemInfo systemInfo;\n \n-    private String domain;\n-\n     private final Map<Class<?>, Object> services = Collections.synchronizedMap(new HashMap<>());\n \n-    private final ScheduledExecutorService executorService = Executors.newScheduledThreadPool(5, THREAD_POOL_FACTORY);\n+    private final ThreadPoolTaskExecutor executor;\n+\n+    private String domain;\n \n     private SyncopeClient client;\n \n@@ -108,6 +95,12 @@ public SyncopeConsoleSession(final Request request) {\n \n         platformInfo = anonymousClient.getService(SyncopeService.class).platform();\n         systemInfo = anonymousClient.getService(SyncopeService.class).system();\n+\n+        executor = new ThreadPoolTaskExecutor();\n+        executor.setWaitForTasksToCompleteOnShutdown(false);\n+        executor.setCorePoolSize(5);\n+        executor.setMaxPoolSize(10);\n+        executor.setQueueCapacity(50);\n     }\n \n     public MediaType getMediaType() {\n@@ -119,11 +112,11 @@ public SyncopeClient getAnonymousClient() {\n     }\n \n     public void execute(final Runnable command) {\n-        executorService.execute(command);\n+        executor.execute(command);\n     }\n \n     public <T> Future<T> execute(final Callable<T> command) {\n-        return executorService.submit(command);\n+        return executor.submit(command);\n     }\n \n     public PlatformInfo getPlatformInfo() {\n@@ -199,7 +192,7 @@ public void invalidate() {\n             }\n             cleanup();\n         }\n-        executorService.shutdown();\n+        executor.shutdown();\n         super.invalidate();\n     }\n \n@@ -211,7 +204,7 @@ public void invalidateNow() {\n             }\n             cleanup();\n         }\n-        executorService.shutdownNow();\n+        executor.shutdown();\n         super.invalidateNow();\n     }\n \n@@ -252,7 +245,7 @@ public boolean owns(final String entitlements, final String realm) {\n     public Roles getRoles() {\n         if (isSignedIn() && roles == null && auth != null) {\n             roles = new Roles(auth.keySet().toArray(new String[] {}));\n-            roles.add(AUTHENTICATED);\n+            roles.add(Constants.ROLE_AUTHENTICATED);\n         }\n \n         return roles;"},{"sha":"01ea08a01a3569b36bd214e6c2da8eda1eb245fc","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9c58a831337be619ebdf2bfd88b5f84fd884519/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9c58a831337be619ebdf2bfd88b5f84fd884519/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=d9c58a831337be619ebdf2bfd88b5f84fd884519","patch":"@@ -29,6 +29,10 @@ public final class Constants {\n \n     public static final String SYNCOPE = \"syncope\";\n \n+    public static final String ROLE_AUTHENTICATED = \"AUTHENTICATED\";\n+\n+    public static final String MENU_COLLAPSE = \"MENU_COLLAPSE\";\n+\n     public static final String VEIL_INDICATOR_MARKUP_ID = \"veil\";\n \n     public static final String FLOWABLE_MODELER_CONTEXT = \"flowable-modeler\";"},{"sha":"d79cec7a42267794da2b0f906579ca9aed1600a4","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9c58a831337be619ebdf2bfd88b5f84fd884519/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9c58a831337be619ebdf2bfd88b5f84fd884519/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=d9c58a831337be619ebdf2bfd88b5f84fd884519","patch":"@@ -93,7 +93,7 @@ public BasePage(final PageParameters parameters) {\n         super(parameters);\n \n         body = new WebMarkupContainer(\"body\");\n-        Serializable leftMenuCollapse = SyncopeConsoleSession.get().getAttribute(SyncopeConsoleSession.MENU_COLLAPSE);\n+        Serializable leftMenuCollapse = SyncopeConsoleSession.get().getAttribute(Constants.MENU_COLLAPSE);\n         if ((leftMenuCollapse instanceof Boolean) && ((Boolean) leftMenuCollapse)) {\n             body.add(new AttributeAppender(\"class\", \" sidebar-collapse\"));\n         }\n@@ -252,10 +252,10 @@ public void onClick() {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                SyncopeConsoleSession.get().setAttribute(SyncopeConsoleSession.MENU_COLLAPSE,\n-                        SyncopeConsoleSession.get().getAttribute(SyncopeConsoleSession.MENU_COLLAPSE) == null\n+                SyncopeConsoleSession.get().setAttribute(Constants.MENU_COLLAPSE,\n+                        SyncopeConsoleSession.get().getAttribute(Constants.MENU_COLLAPSE) == null\n                         ? true\n-                        : !(Boolean) SyncopeConsoleSession.get().getAttribute(SyncopeConsoleSession.MENU_COLLAPSE));\n+                        : !(Boolean) SyncopeConsoleSession.get().getAttribute(Constants.MENU_COLLAPSE));\n             }\n         });\n         body.add(new Label(\"domain\", SyncopeConsoleSession.get().getDomain()));"},{"sha":"1f14d8f1935627129b6adf88bf2f9de95de2332b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d9c58a831337be619ebdf2bfd88b5f84fd884519/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d9c58a831337be619ebdf2bfd88b5f84fd884519/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=d9c58a831337be619ebdf2bfd88b5f84fd884519","patch":"@@ -379,11 +379,11 @@ public void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n     private Serializable onApply(final AjaxRequestTarget target) throws TimeoutException {\n         try {\n-            final Future<Pair<Serializable, Serializable>> executor\n-                    = SyncopeConsoleSession.get().execute(new ApplyFuture(target));\n+            Future<Pair<Serializable, Serializable>> executor =\n+                    SyncopeConsoleSession.get().execute(new ApplyFuture(target));\n \n-            final Pair<Serializable, Serializable> res\n-                    = executor.get(SyncopeConsoleApplication.get().getMaxWaitTimeInSeconds(), TimeUnit.SECONDS);\n+            Pair<Serializable, Serializable> res =\n+                    executor.get(SyncopeConsoleApplication.get().getMaxWaitTimeInSeconds(), TimeUnit.SECONDS);\n \n             if (res.getLeft() != null) {\n                 send(pageRef.getPage(), Broadcast.BUBBLE, res.getLeft());"}]}