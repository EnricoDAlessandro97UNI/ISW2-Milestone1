{"sha":"c6f998b2af93d9359ea14455d638897d177ee876","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM2Zjk5OGIyYWY5M2Q5MzU5ZWExNDQ1NWQ2Mzg4OTdkMTc3ZWU4NzY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-29T11:19:58Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-06-29T14:29:07Z"},"message":"[SYNCOPE-1327] Build works fine with Java 10 and Java 8","tree":{"sha":"163ba1afc82645993cf614468faade1a9ecc4edb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/163ba1afc82645993cf614468faade1a9ecc4edb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c6f998b2af93d9359ea14455d638897d177ee876","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c6f998b2af93d9359ea14455d638897d177ee876","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c6f998b2af93d9359ea14455d638897d177ee876","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c6f998b2af93d9359ea14455d638897d177ee876/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ea18f558a233b8b80dff4e328f74abb9418a2b58","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ea18f558a233b8b80dff4e328f74abb9418a2b58","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ea18f558a233b8b80dff4e328f74abb9418a2b58"}],"stats":{"total":156,"additions":90,"deletions":66},"files":[{"sha":"0290902f855a80a9697897b85f672c9ac294c34a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/Input.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.cli;\n \n+import java.lang.reflect.InvocationTargetException;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n@@ -44,7 +45,8 @@ public static Pair<String, String> toPairParameter(final String parameter) throw\n     private String option;\n \n     public Input(final String[] args)\n-            throws InstantiationException, IllegalAccessException, IllegalArgumentException {\n+            throws InstantiationException, IllegalAccessException, IllegalArgumentException,\n+            NoSuchMethodException, InvocationTargetException {\n \n         command = CommandUtils.fromArgs(args[0]);\n         commandFields.add(args[0]);"},{"sha":"8a75f757276a903f0144be34b5a11e3f460e290b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeAdm.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.cli;\n \n+import java.lang.reflect.InvocationTargetException;\n import javax.ws.rs.ProcessingException;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n@@ -49,7 +50,9 @@ public static void main(final String[] args) {\n             System.out.println(\"\");\n             System.out.println(\"You are running: \" + input.printCommandFields());\n             command.execute(input);\n-        } catch (final IllegalAccessException | InstantiationException e) {\n+        } catch (IllegalAccessException | InstantiationException | NoSuchMethodException\n+                | InvocationTargetException e) {\n+\n             System.out.println(helpMessage());\n         } catch (final IllegalArgumentException ex) {\n             LOG.error(\"Error in main\", ex);\n@@ -79,9 +82,9 @@ private static String helpMessage() {\n                 }\n                 helpMessageBuilder.append(\"\\n\");\n             }\n-        } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException ex) {\n-            LOG.error(\"Error in main\", ex);\n-            RESULT_MANAGER.genericError(ex.getMessage());\n+        } catch (Exception e) {\n+            LOG.error(\"Error in main\", e);\n+            RESULT_MANAGER.genericError(e.getMessage());\n         }\n \n         return helpMessageBuilder.toString();"},{"sha":"516ad3cfa236f63e968f41ec3259a525cea26572","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/help/Help.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelp.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -42,7 +42,7 @@ public void help() {\n                         .append(\" \\n\");\n             }\n             helpResultManager.toView(generalHelpBuilder.toString());\n-        } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException e) {\n+        } catch (Exception e) {\n             LOG.error(\"Error helping\", e);\n             helpResultManager.genericMessage(e.getMessage());\n         }"},{"sha":"b1b6db410fda19661aec8b4ea0075fb275eee429","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/CommandUtils.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.cli.util;\n \n+import java.lang.reflect.InvocationTargetException;\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.cli.Command;\n@@ -27,7 +28,8 @@\n public final class CommandUtils {\n \n     public static AbstractCommand fromArgs(final String arg)\n-            throws InstantiationException, IllegalAccessException, IllegalArgumentException {\n+            throws NoSuchMethodException, InstantiationException, IllegalAccessException,\n+            IllegalArgumentException, InvocationTargetException {\n \n         final CommandClassScanner ccs = new CommandClassScanner();\n         final List<Class<? extends AbstractCommand>> commands = ccs.getComponentClasses();\n@@ -43,11 +45,12 @@ public static AbstractCommand fromArgs(final String arg)\n             throw new IllegalArgumentException(arg + \" is not a valid command\");\n         }\n \n-        return commandClass.newInstance();\n+        return commandClass.getDeclaredConstructor().newInstance();\n     }\n \n     public static List<AbstractCommand> commands()\n-            throws InstantiationException, IllegalAccessException, IllegalArgumentException {\n+            throws InstantiationException, IllegalAccessException, IllegalArgumentException,\n+            NoSuchMethodException, InvocationTargetException {\n \n         final List<AbstractCommand> listCommands = new ArrayList<>();\n \n@@ -58,7 +61,7 @@ public static List<AbstractCommand> commands()\n             if (cmd == null) {\n                 throw new IllegalArgumentException();\n             }\n-            listCommands.add(cmd.newInstance());\n+            listCommands.add(cmd.getDeclaredConstructor().newInstance());\n         }\n \n         return listCommands;"},{"sha":"558b8028686fb65fe2096310b70e8929a1114ca0","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/util/CommandUtilsTest.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -22,6 +22,7 @@\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n \n+import java.lang.reflect.InvocationTargetException;\n import java.util.List;\n import org.apache.syncope.client.cli.Command;\n import org.apache.syncope.client.cli.commands.AbstractCommand;\n@@ -30,7 +31,9 @@\n public class CommandUtilsTest {\n \n     @Test\n-    public void fromArgs() throws InstantiationException, IllegalAccessException {\n+    public void fromArgs() throws InstantiationException, IllegalAccessException,\n+            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n+\n         String commandName = \"logger\";\n         AbstractCommand command = CommandUtils.fromArgs(commandName);\n         assertEquals(commandName, command.getClass().getAnnotation(Command.class).name());\n@@ -46,7 +49,9 @@ public void fromArgs() throws InstantiationException, IllegalAccessException {\n     }\n \n     @Test\n-    public void commands() throws InstantiationException, IllegalAccessException {\n+    public void commands() throws InstantiationException, IllegalAccessException,\n+            NoSuchMethodException, IllegalArgumentException, InvocationTargetException {\n+\n         List<AbstractCommand> commands = CommandUtils.commands();\n         assertFalse(commands.isEmpty());\n         assertEquals(22, commands.size());"},{"sha":"e26698166a4fbf13f3c2d1f9489e11b4c0386b13","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ImplementationModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -295,7 +295,7 @@ protected void onEvent(final AjaxRequestTarget target) {\n                 if (clazz != null) {\n                     try {\n                         target.appendJavaScript(\"editor.getDoc().setValue('\"\n-                                + MAPPER.writeValueAsString(clazz.newInstance())\n+                                + MAPPER.writeValueAsString(clazz.getDeclaredConstructor().newInstance())\n                                 + \"');\");\n                     } catch (Exception e) {\n                         LOG.error(\"Could not generate a value for {}\", jsonClass.getModelObject(), e);"},{"sha":"1ced1aaf394f47d8f41d34336593b5be496e535b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -89,8 +89,9 @@ public SchemaTypePanel(final String id, final SchemaType schemaType, final PageR\n         disableCheckBoxes();\n \n         try {\n-            addNewItemPanelBuilder(new SchemaTypeWizardBuilder(schemaType.getToClass().newInstance(), pageRef), true);\n-        } catch (IllegalAccessException | InstantiationException e) {\n+            addNewItemPanelBuilder(new SchemaTypeWizardBuilder(\n+                    schemaType.getToClass().getDeclaredConstructor().newInstance(), pageRef), true);\n+        } catch (Exception e) {\n             LOG.error(\"Error creating instance of {}\", schemaType, e);\n         }\n "},{"sha":"70170c2cf26da490262a7068c3eaa26f2d252a28","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -93,8 +93,8 @@ protected SchedTaskDirectoryPanel(\n         this.reference = reference;\n \n         try {\n-            schedTaskTO = reference.newInstance();\n-        } catch (InstantiationException | IllegalAccessException e) {\n+            schedTaskTO = reference.getDeclaredConstructor().newInstance();\n+        } catch (Exception e) {\n             LOG.error(\"Falure instantiating task\", e);\n         }\n "},{"sha":"f1f6b3a8a3eede3e87ab50114e3520c787e59197","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -203,7 +203,7 @@ public void onFileDelete(final File file) {\n                 LOG.debug(\"No @Resource annotation found on {}, ignoring\", resource.getName());\n             } else {\n                 try {\n-                    final AbstractResource instance = resource.newInstance();\n+                    final AbstractResource instance = resource.getDeclaredConstructor().newInstance();\n \n                     mountResource(annotation.path(), new ResourceReference(annotation.key()) {\n "},{"sha":"d34595d27bd46065c2571fc049ac697eb48d136d","filename":"client/lib/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fpom.xml?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -38,11 +38,6 @@ under the License.\n   </properties>\n   \n   <dependencies>\n-    <dependency>\n-      <groupId>javax.ws.rs</groupId>\n-      <artifactId>javax.ws.rs-api</artifactId>\n-    </dependency>\n-\n     <dependency>\n       <groupId>org.apache.cxf</groupId>\n       <artifactId>cxf-rt-rs-client</artifactId>"},{"sha":"7910b5f1f6d87a92caa406e33518160e0c5e9458","filename":"client/lib/src/test/java/org/apache/syncope/client/lib/ConcurrencyTest.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/client%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FConcurrencyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/client%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FConcurrencyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FConcurrencyTest.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -32,20 +32,18 @@ public class ConcurrencyTest {\n \n     private static final int THREAD_NUMBER = 1000;\n \n-    private static final SyncopeClient client = new SyncopeClientFactoryBean().setAddress(\"http://url\").create();\n+    private static final SyncopeClient CLIENT = new SyncopeClientFactoryBean().setAddress(\"http://url\").create();\n \n     @Test\n-    public void multiThreadTest()\n-            throws InterruptedException {\n-\n+    public void multiThreadTest() throws InterruptedException {\n         for (int i = 0; i < THREAD_NUMBER; i++) {\n             Thread execution = new Thread(\"Th-\" + StringUtils.leftPad(String.valueOf(i), 5, '0')) {\n \n                 @Override\n                 public void run() {\n \n                     try {\n-                        client.getService(ResourceService.class);\n+                        CLIENT.getService(ResourceService.class);\n \n                         LOG.info(getName() + \" completed successfully!\");\n                     } catch (Exception e) {\n@@ -67,7 +65,7 @@ public void run() {\n     public void multiCallTest() {\n         try {\n             for (int i = 0; i < THREAD_NUMBER; i++) {\n-                client.getService(ResourceService.class);\n+                CLIENT.getService(ResourceService.class);\n             }\n         } catch (Exception e) {\n             fail(e.getMessage());"},{"sha":"d5c99a90590f4be3c87594885076135ca26913c3","filename":"common/lib/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/common%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/common%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fpom.xml?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -38,11 +38,6 @@ under the License.\n   </properties>\n \n   <dependencies>\n-    <dependency>\n-      <groupId>javax.ws.rs</groupId>\n-      <artifactId>javax.ws.rs-api</artifactId>\n-    </dependency>\n-    \n     <dependency>\n       <groupId>org.apache.cxf</groupId>\n       <artifactId>cxf-rt-rs-extension-search</artifactId>"},{"sha":"fa157368c1c6ab134213beaf689ed795be5ea873","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/SyncopeFiqlParser.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSyncopeFiqlParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSyncopeFiqlParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FSyncopeFiqlParser.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -139,7 +139,7 @@ private T createTemplate(final String setter) throws SearchParseException {\n                     beanspector.instantiate().setValue(setter, tvalue.getObject());\n                     return beanspector.getBean();\n                 } else {\n-                    SearchBean bean = (SearchBean) conditionClass.newInstance();\n+                    SearchBean bean = (SearchBean) conditionClass.getDeclaredConstructor().newInstance();\n                     bean.set(setter, tvalue.getObject().toString());\n                     return (T) bean;\n                 }"},{"sha":"70ea48d6f9f8ea1a779f1784b86716dbf66ca57c","filename":"common/rest-api/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/common%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/common%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fpom.xml?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -43,11 +43,6 @@ under the License.\n       <artifactId>validation-api</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>javax.ws.rs</groupId>\n-      <artifactId>javax.ws.rs-api</artifactId>\n-    </dependency>\n-\n     <dependency>\n       <groupId>org.apache.syncope.common</groupId>\n       <artifactId>syncope-common-lib</artifactId>"},{"sha":"0d8352323f21f9af2a5c8f2bee3c2136adee66ab","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPATaskUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPATaskUtils.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -144,7 +144,7 @@ public <T extends TaskTO> Class<T> taskTOClass() {\n     public <T extends TaskTO> T newTaskTO() {\n         final Class<T> taskClass = taskTOClass();\n         try {\n-            return taskClass == null ? null : taskClass.newInstance();\n+            return taskClass == null ? null : taskClass.getDeclaredConstructor().newInstance();\n         } catch (Exception e) {\n             return null;\n         }"},{"sha":"7f2297ca523b3c6786b87bd9d4af78875558afff","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/XMLContentExporterTest.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FXMLContentExporterTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FXMLContentExporterTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FXMLContentExporterTest.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -55,12 +55,11 @@ public void issueSYNCOPE1128() throws Exception {\n \n         List<String> realms = IOUtils.readLines(\n                 IOUtils.toInputStream(exported, Charset.defaultCharset()), Charset.defaultCharset()).stream().\n-                filter(row -> row.startsWith(\"<REALM\")).collect(Collectors.toList());\n+                filter(row -> row.trim().startsWith(\"<REALM\")).collect(Collectors.toList());\n         assertEquals(4, realms.size());\n         assertTrue(realms.get(0).contains(\"NAME=\\\"/\\\"\"));\n         assertTrue(realms.get(1).contains(\"NAME=\\\"odd\\\"\"));\n         assertTrue(realms.get(2).contains(\"NAME=\\\"even\\\"\"));\n         assertTrue(realms.get(3).contains(\"NAME=\\\"two\\\"\"));\n     }\n-\n }"},{"sha":"6aae0a79e757bfc918e625685c38ed556383eab5","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/producer/StatusProducer.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FStatusProducer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FStatusProducer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fproducer%2FStatusProducer.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -86,7 +86,7 @@ public void process(final Exchange exchange) throws Exception {\n                 }\n             }\n         } else if (getAnyTypeKind() == AnyTypeKind.USER) {\n-            WorkflowResult<Long> updated = (WorkflowResult<Long>) exchange.getIn().getBody();\n+            WorkflowResult<String> updated = (WorkflowResult<String>) exchange.getIn().getBody();\n             StatusPatch statusPatch = exchange.getProperty(\"statusPatch\", StatusPatch.class);\n             Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n \n@@ -105,5 +105,4 @@ public void process(final Exchange exchange) throws Exception {\n             exchange.getOut().setBody(Pair.of(updated.getResult(), propagationReporter.getStatuses()));\n         }\n     }\n-\n }"},{"sha":"c605266c40429cb63e8bc5696502b0413d5b02d3","filename":"ext/scimv2/scim-rest-api/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/ext%2Fscimv2%2Fscim-rest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/ext%2Fscimv2%2Fscim-rest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fpom.xml?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -43,11 +43,6 @@ under the License.\n       <artifactId>validation-api</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>javax.ws.rs</groupId>\n-      <artifactId>javax.ws.rs-api</artifactId>\n-    </dependency>\n-    \n     <dependency>\n       <groupId>com.fasterxml.jackson.core</groupId>\n       <artifactId>jackson-annotations</artifactId>"},{"sha":"64cab1a9a5349d6d8a029bb38fa0c415b7884752","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ConnectorITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -452,15 +452,15 @@ public void validate() {\n \n     @Test\n     public void buildObjectClassInfo() {\n-        ConnInstanceTO ws = connectorService.read(\n-                \"5ffbb4ac-a8c3-4b44-b699-11b398a1ba08\", Locale.ENGLISH.getLanguage());\n-        assertNotNull(ws);\n+        ConnInstanceTO db = connectorService.read(\n+                \"5aa5b8be-7521-481a-9651-c557aea078c1\", Locale.ENGLISH.getLanguage());\n+        assertNotNull(db);\n \n-        List<ConnIdObjectClassTO> objectClassInfo = connectorService.buildObjectClassInfo(ws, true);\n+        List<ConnIdObjectClassTO> objectClassInfo = connectorService.buildObjectClassInfo(db, true);\n         assertNotNull(objectClassInfo);\n         assertEquals(1, objectClassInfo.size());\n         assertEquals(ObjectClass.ACCOUNT_NAME, objectClassInfo.get(0).getType());\n-        assertTrue(objectClassInfo.get(0).getAttributes().contains(\"promoThirdPartyDisclaimer\"));\n+        assertTrue(objectClassInfo.get(0).getAttributes().contains(\"ID\"));\n \n         ConnInstanceTO ldap = connectorService.read(\n                 \"74141a3b-0762-4720-a4aa-fc3e374ef3ef\", Locale.ENGLISH.getLanguage());"},{"sha":"81229b2f7a83fc832f18af41f40b459c9dffdcfa","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/DriverLoader.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FDriverLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FDriverLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FDriverLoader.java?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -28,13 +28,13 @@\n public final class DriverLoader extends URLClassLoader {\n \n     private static final String POSTGRES_JAR =\n-            \"http://repo1.maven.org/maven2/postgresql/postgresql/9.1-901.jdbc4/postgresql-9.1-901.jdbc4.jar\";\n+            \"http://repo1.maven.org/maven2/org/postgresql/postgresql/42.2.2/postgresql-42.2.2.jar\";\n \n     private static final String MYSQL_JAR =\n-            \"http://central.maven.org/maven2/mysql/mysql-connector-java/5.1.34/mysql-connector-java-5.1.34.jar\";\n+            \"http://central.maven.org/maven2/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar\";\n \n     private static final String MARIADB_JAR =\n-            \"http://repo1.maven.org/maven2/org/mariadb/jdbc/mariadb-java-client/1.1.8/mariadb-java-client-1.1.8.jar\";\n+            \"http://repo1.maven.org/maven2/org/mariadb/jdbc/mariadb-java-client/2.2.5/mariadb-java-client-2.2.5.jar\";\n \n     private static final String POSTGRES_CLASS_DRIVER = \"org.postgresql.Driver\";\n \n@@ -97,9 +97,8 @@ public PasswordAuthentication getPasswordAuthentication() {\n                     System.setProperty(\"http.proxyPassword\", proxyPwd);\n                 }\n             }\n-            final URL[] url = { new URL(driverUrl) };\n-            DRIVER_LOADER = new DriverLoader(url);\n-            driver = (Driver) DRIVER_LOADER.loadClass(driverClassName).newInstance();\n+            DRIVER_LOADER = new DriverLoader(new URL[] { new URL(driverUrl) });\n+            driver = (Driver) DRIVER_LOADER.loadClass(driverClassName).getDeclaredConstructor().newInstance();\n         } catch (Exception e) {\n             // ignore\n         }"},{"sha":"47838468f64aea15f2d58181d39b9335b6ed227d","filename":"pom.xml","status":"modified","additions":40,"deletions":5,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c6f998b2af93d9359ea14455d638897d177ee876/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c6f998b2af93d9359ea14455d638897d177ee876/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=c6f998b2af93d9359ea14455d638897d177ee876","patch":"@@ -532,11 +532,6 @@ under the License.\n         <version>3.0.0</version>\n         <scope>provided</scope>\n       </dependency>\n-      <dependency>\n-        <groupId>javax.ws.rs</groupId>\n-        <artifactId>javax.ws.rs-api</artifactId>\n-        <version>2.1</version>\n-      </dependency>\n       <dependency>\n         <groupId>org.apache.geronimo.javamail</groupId>\n         <artifactId>geronimo-javamail_1.4_mail</artifactId>\n@@ -2584,6 +2579,46 @@ under the License.\n       </modules>\n     </profile>\n     \n+    <profile>\n+      <id>java9-plus</id>\n+\n+      <activation>\n+        <jdk>[9,)</jdk>\n+      </activation>\n+\n+      <dependencies>\n+        <dependency>\n+          <groupId>javax.xml.bind</groupId>\n+          <artifactId>jaxb-api</artifactId>\n+          <version>2.3.0</version>\n+        </dependency>\n+        <dependency>\n+          <groupId>com.sun.xml.bind</groupId>\n+          <artifactId>jaxb-core</artifactId>\n+          <version>2.3.0.1</version>\n+        </dependency>\n+        <dependency>\n+          <groupId>com.sun.xml.bind</groupId>\n+          <artifactId>jaxb-impl</artifactId>\n+          <version>2.3.0.1</version>\n+        </dependency>\n+        <dependency>\n+          <groupId>javax.annotation</groupId>\n+          <artifactId>javax.annotation-api</artifactId>\n+          <version>1.3.1</version>\n+        </dependency>\n+        <dependency>\n+          <groupId>javax.xml.ws</groupId>\n+          <artifactId>jaxws-api</artifactId>\n+          <version>2.3.0</version>\n+        </dependency>\n+        <dependency>\n+          <groupId>javax.activation</groupId>\n+          <artifactId>activation</artifactId>\n+          <version>1.1.1</version>\n+        </dependency>\n+      </dependencies>\n+    </profile>\n   </profiles>\n   \n   <modules>"}]}