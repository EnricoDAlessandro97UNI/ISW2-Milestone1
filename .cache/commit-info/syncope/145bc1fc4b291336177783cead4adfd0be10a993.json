{"sha":"145bc1fc4b291336177783cead4adfd0be10a993","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE0NWJjMWZjNGIyOTEzMzYxNzc3ODNjZWFkNGFkZmQwYmUxMGE5OTM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-18T06:31:47Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-18T06:31:47Z"},"message":"Still work in progress about issue #7\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246097 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"49d98488dcc8d01b5d18473aaba1113e3e103651","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/49d98488dcc8d01b5d18473aaba1113e3e103651"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/145bc1fc4b291336177783cead4adfd0be10a993","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/145bc1fc4b291336177783cead4adfd0be10a993","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/145bc1fc4b291336177783cead4adfd0be10a993","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/145bc1fc4b291336177783cead4adfd0be10a993/comments","author":null,"committer":null,"parents":[{"sha":"bd650b5ed74324ecdeeeb737d6322638d77ea9b8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bd650b5ed74324ecdeeeb737d6322638d77ea9b8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bd650b5ed74324ecdeeeb737d6322638d77ea9b8"}],"stats":{"total":488,"additions":444,"deletions":44},"files":[{"sha":"cf338730ab7d073999427bc42b0b3dca5ba8ca21","filename":"core/pom.xml","status":"modified","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -190,6 +190,48 @@\n         <finalName>${parent.artifactId}</finalName>\n \n         <plugins>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <inherited>true</inherited>\n+                <configuration>\n+                    <skip>true</skip>\n+                    <redirectTestOutputToFile>true</redirectTestOutputToFile>\n+                </configuration>\n+                <executions>\n+                    <execution>\n+                        <id>test-phase-execution</id>\n+                        <phase>test</phase>\n+                        <goals>\n+                            <goal>test</goal>\n+                        </goals>\n+                        <configuration>\n+                            <skip>false</skip>\n+                            <includes>\n+                                <include>**/*Test.java</include>\n+                            </includes>\n+                            <excludes>\n+                                <exclude>**/*RelationshipTest.java</exclude>\n+                            </excludes>\n+                        </configuration>\n+                    </execution>\n+                    <execution>\n+                        <id>relationship-test-execution</id>\n+                        <phase>test</phase>\n+                        <goals>\n+                            <goal>test</goal>\n+                        </goals>\n+                        <configuration>\n+                            <skip>false</skip>\n+                            <includes>\n+                                <include>**/*RelationshipTest.java</include>\n+                            </includes>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n             <plugin>\n                 <groupId>org.codehaus.mojo</groupId>\n                 <artifactId>hibernate3-maven-plugin</artifactId>"},{"sha":"7a773be03e22a73999c4e243d3ba0cee3a4d2b84","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributableBean.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributableBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributableBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributableBean.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -74,6 +74,14 @@ public void setAttributes(Set<Attribute> attributes) {\n         this.attributes = attributes;\n     }\n \n+    public boolean addDerivedAttribute(DerivedAttribute derivedAttribute) {\n+        return derivedAttributes.add(derivedAttribute);\n+    }\n+\n+    public boolean removeDerivedAttribute(DerivedAttribute derivedAttribute) {\n+        return derivedAttributes.remove(derivedAttribute);\n+    }\n+\n     public Set<DerivedAttribute> getDerivedAttributes() {\n         return derivedAttributes;\n     }"},{"sha":"d21661432b1762dbfdf327f39fd7dc3ce5ec352d","filename":"core/src/main/java/org/syncope/core/persistence/beans/Attribute.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -47,7 +47,7 @@ public Attribute(AttributeSchema schema)\n             throws ClassNotFoundException {\n \n         this();\n-        this.setSchema(schema);\n+        this.schema = schema;\n     }\n \n     public Long getId() {"},{"sha":"342f1d3b64f5755c88d231b9c285c2db7a04f364","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeSchema.java","status":"modified","additions":14,"deletions":11,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -44,12 +44,13 @@ public class AttributeSchema extends AbstractBaseBean {\n     private AttributeType type;\n     private Boolean mandatory;\n     private Boolean multivalue;\n+    @Column(nullable = true)\n     private String conversionPattern;\n+    @Column(nullable = true)\n     private String validatorClass;\n     @Transient\n     private AttributeValidator validator;\n     @OneToMany(mappedBy = \"schema\")\n-    @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.DELETE_ORPHAN)\n     private Set<Attribute> attributes;\n     @ManyToMany(mappedBy = \"attributeSchemas\")\n     private Set<DerivedAttributeSchema> derivedAttributeSchemas;\n@@ -153,16 +154,6 @@ public void setConversionPattern(String conversionPattern) {\n         this.conversionPattern = conversionPattern;\n     }\n \n-    public boolean addAttribute(Attribute attribute) {\n-        attribute.setSchema(this);\n-        return attributes.add(attribute);\n-    }\n-\n-    public boolean removeAttribute(Attribute attribute) {\n-        attribute.setSchema(null);\n-        return attributes.remove(attribute);\n-    }\n-\n     public Set<Attribute> getAttributes() {\n         return attributes;\n     }\n@@ -171,6 +162,18 @@ public void setAttributes(Set<Attribute> attributes) {\n         this.attributes = attributes;\n     }\n \n+    public boolean addDerivedAttributeSchema(\n+            DerivedAttributeSchema derivedAttributeSchema) {\n+\n+        return derivedAttributeSchemas.add(derivedAttributeSchema);\n+    }\n+\n+    public boolean removeDerivedAttributeSchema(\n+            DerivedAttributeSchema derivedAttributeSchema) {\n+\n+        return derivedAttributeSchemas.remove(derivedAttributeSchema);\n+    }\n+\n     public Set<DerivedAttributeSchema> getDerivedAttributeSchemas() {\n         return derivedAttributeSchemas;\n     }"},{"sha":"7a92f7d229cfd1a59bccf359386ad9d93470ad0d","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnectorInstance.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -92,10 +92,6 @@ public Long getId() {\n         return id;\n     }\n \n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n-\n     @Override\n     public boolean equals(Object obj) {\n         if (obj == null) return false;"},{"sha":"2ebfc65bc37909a75af29ed7c87ae8008f6bced6","filename":"core/src/main/java/org/syncope/core/persistence/beans/DerivedAttribute.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -79,10 +79,6 @@ public Long getId() {\n         return id;\n     }\n \n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n-\n     public DerivedAttributeSchema getSchema() {\n         return schema;\n     }"},{"sha":"7853e8b83f066634f261be3e23f3b12d72abccb9","filename":"core/src/main/java/org/syncope/core/persistence/beans/DerivedAttributeSchema.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -19,13 +19,16 @@\n import javax.persistence.Entity;\n import javax.persistence.Id;\n import javax.persistence.ManyToMany;\n+import javax.persistence.OneToMany;\n \n @Entity\n public class DerivedAttributeSchema extends AbstractBaseBean {\n \n     @Id\n     private String name;\n     private String expression;\n+    @OneToMany(mappedBy = \"schema\")\n+    private Set<DerivedAttribute> derivedAttributes;\n     @ManyToMany\n     private Set<AttributeSchema> attributeSchemas;\n \n@@ -49,6 +52,14 @@ public void setExpression(String expression) {\n         this.expression = expression;\n     }\n \n+    public Set<DerivedAttribute> getDerivedAttributes() {\n+        return derivedAttributes;\n+    }\n+\n+    public void setDerivedAttributes(Set<DerivedAttribute> derivedAttributes) {\n+        this.derivedAttributes = derivedAttributes;\n+    }\n+\n     public boolean addAttributeSchema(AttributeSchema attributeSchema) {\n         return attributeSchemas.add(attributeSchema);\n     }"},{"sha":"ba5e6006633424afa7bf839c9a692d54256ec5c5","filename":"core/src/main/java/org/syncope/core/persistence/dao/AttributeValueDAO.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeValueDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeValueDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributeValueDAO.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -0,0 +1,29 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.dao;\n+\n+import java.util.List;\n+import org.syncope.core.persistence.beans.AttributeValue;\n+\n+public interface AttributeValueDAO extends DAO {\n+\n+    AttributeValue find(long id);\n+\n+    List<AttributeValue> findAll();\n+\n+    AttributeValue save(AttributeValue attributeValue);\n+\n+    void delete(long id);\n+}"},{"sha":"5ee0edae2d3ac5ff906cf033b9968eb00daa7c77","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeDAOImpl.java","status":"modified","additions":29,"deletions":1,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -19,6 +19,8 @@\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.Attribute;\n+import org.syncope.core.persistence.beans.SyncopeRole;\n+import org.syncope.core.persistence.beans.SyncopeUser;\n import org.syncope.core.persistence.dao.AttributeDAO;\n \n @Repository\n@@ -58,6 +60,32 @@ public void delete(long id) {\n             return;\n         }\n \n-        entityManager.remove(attribute);\n+        boolean shouldRemoveAttribute = true;\n+\n+        Query query = entityManager.createQuery(\n+                \"SELECT u FROM SyncopeUser u \"\n+                + \"WHERE :attribute MEMBER OF u.attributes\");\n+        query.setParameter(\"attribute\", attribute);\n+        List<SyncopeUser> users = query.getResultList();\n+        shouldRemoveAttribute = !users.isEmpty();\n+        for (SyncopeUser user : users) {\n+            user.removeAttribute(attribute);\n+            entityManager.merge(user);\n+        }\n+\n+        query = entityManager.createQuery(\n+                \"SELECT r FROM SyncopeRole r \"\n+                + \"WHERE :attribute MEMBER OF r.attributes\");\n+        query.setParameter(\"attribute\", attribute);\n+        List<SyncopeRole> roles = query.getResultList();\n+        shouldRemoveAttribute = !roles.isEmpty();\n+        for (SyncopeRole role : roles) {\n+            role.removeAttribute(attribute);\n+            entityManager.merge(role);\n+        }\n+\n+        if (shouldRemoveAttribute) {\n+            entityManager.remove(attribute);\n+        }\n     }\n }"},{"sha":"afb17846b587846604aa0d1481756e8f37dc3b81","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeSchemaDAOImpl.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeSchemaDAOImpl.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -19,7 +19,9 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.core.persistence.beans.Attribute;\n import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n import org.syncope.core.persistence.dao.AttributeDAO;\n import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n \n@@ -64,6 +66,16 @@ public void delete(String name) {\n             return;\n         }\n \n+        for (Attribute attribute : schema.getAttributes()) {\n+            attributeDAO.delete(attribute.getId());\n+        }\n+        for (DerivedAttributeSchema derivedAttributeSchema :\n+                schema.getDerivedAttributeSchemas()) {\n+\n+            derivedAttributeSchema.removeAttributeSchema(schema);\n+            entityManager.merge(derivedAttributeSchema);\n+        }\n+\n         entityManager.remove(schema);\n     }\n }"},{"sha":"18b33081a4ab18d04ae6ee2f75dc3aa50feaeacc","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeValueDAOImpl.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -0,0 +1,63 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.dao.impl;\n+\n+import java.util.List;\n+import javax.persistence.Query;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.core.persistence.beans.AttributeValue;\n+import org.syncope.core.persistence.dao.AttributeValueDAO;\n+\n+@Repository\n+public class AttributeValueDAOImpl extends AbstractDAOImpl\n+        implements AttributeValueDAO {\n+\n+    @Override\n+    public AttributeValue find(long id) {\n+        AttributeValue result = entityManager.find(AttributeValue.class, id);\n+        if (isDeletedOrNotManaged(result)) {\n+            result = null;\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public List<AttributeValue> findAll() {\n+        Query query = entityManager.createQuery(\n+                \"SELECT e FROM AttributeValue e\");\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    @Transactional\n+    public AttributeValue save(AttributeValue attributeValue) {\n+        AttributeValue result = entityManager.merge(attributeValue);\n+        entityManager.flush();\n+        return result;\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void delete(long id) {\n+        AttributeValue attributeValue = find(id);\n+        if (attributeValue == null) {\n+            return;\n+        }\n+\n+        entityManager.remove(attributeValue);\n+    }\n+}"},{"sha":"2d88f361ca3c6aeaf5030b81cf5e0bd20952c0ba","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/DerivedAttributeDAOImpl.java","status":"modified","additions":41,"deletions":2,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeDAOImpl.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -19,6 +19,8 @@\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.DerivedAttribute;\n+import org.syncope.core.persistence.beans.SyncopeRole;\n+import org.syncope.core.persistence.beans.SyncopeUser;\n import org.syncope.core.persistence.dao.DerivedAttributeDAO;\n \n @Repository\n@@ -27,7 +29,13 @@ public class DerivedAttributeDAOImpl extends AbstractDAOImpl\n \n     @Override\n     public DerivedAttribute find(long id) {\n-        return entityManager.find(DerivedAttribute.class, id);\n+        DerivedAttribute result = entityManager.find(\n+                DerivedAttribute.class, id);\n+        if (isDeletedOrNotManaged(result)) {\n+            result = null;\n+        }\n+\n+        return result;\n     }\n \n     @Override\n@@ -48,6 +56,37 @@ public DerivedAttribute save(DerivedAttribute attribute) {\n     @Override\n     @Transactional\n     public void delete(long id) {\n-        entityManager.remove(find(id));\n+        DerivedAttribute derivedAttribute = find(id);\n+        if (derivedAttribute == null) {\n+            return;\n+        }\n+\n+        boolean shouldRemoveDerivedAttribute = true;\n+\n+        Query query = entityManager.createQuery(\n+                \"SELECT u FROM SyncopeUser u \"\n+                + \"WHERE :derivedAttribute MEMBER OF u.derivedAttributes\");\n+        query.setParameter(\"derivedAttribute\", derivedAttribute);\n+        List<SyncopeUser> users = query.getResultList();\n+        shouldRemoveDerivedAttribute = !users.isEmpty();\n+        for (SyncopeUser user : users) {\n+            user.removeDerivedAttribute(derivedAttribute);\n+            entityManager.merge(user);\n+        }\n+\n+        query = entityManager.createQuery(\n+                \"SELECT r FROM SyncopeRole r \"\n+                + \"WHERE :derivedAttribute MEMBER OF r.derivedAttributes\");\n+        query.setParameter(\"derivedAttribute\", derivedAttribute);\n+        List<SyncopeRole> roles = query.getResultList();\n+        shouldRemoveDerivedAttribute = !roles.isEmpty();\n+        for (SyncopeRole role : roles) {\n+            role.removeDerivedAttribute(derivedAttribute);\n+            entityManager.merge(role);\n+        }\n+\n+        if (shouldRemoveDerivedAttribute) {\n+            entityManager.remove(find(id));\n+        }\n     }\n }"},{"sha":"bcaee4d2d54f3a4ba9864364a6334c0a3dbcfbfb","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/DerivedAttributeSchemaDAOImpl.java","status":"modified","additions":23,"deletions":1,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeSchemaDAOImpl.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -16,15 +16,22 @@\n \n import java.util.List;\n import javax.persistence.Query;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.beans.DerivedAttribute;\n import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n+import org.syncope.core.persistence.dao.DerivedAttributeDAO;\n import org.syncope.core.persistence.dao.DerivedAttributeSchemaDAO;\n \n @Repository\n public class DerivedAttributeSchemaDAOImpl extends AbstractDAOImpl\n         implements DerivedAttributeSchemaDAO {\n \n+    @Autowired\n+    DerivedAttributeDAO derivedAttributeDAO;\n+\n     @Override\n     public DerivedAttributeSchema find(String name) {\n         return entityManager.find(DerivedAttributeSchema.class, name);\n@@ -50,6 +57,21 @@ public DerivedAttributeSchema save(\n     @Override\n     @Transactional\n     public void delete(String name) {\n-        entityManager.remove(find(name));\n+        DerivedAttributeSchema schema = find(name);\n+        if (schema == null) {\n+            return;\n+        }\n+\n+        for (DerivedAttribute attribute : schema.getDerivedAttributes()) {\n+            derivedAttributeDAO.delete(attribute.getId());\n+        }\n+        for (AttributeSchema attributeSchema :\n+                schema.getAttributeSchemas()) {\n+\n+            attributeSchema.removeDerivedAttributeSchema(schema);\n+            entityManager.merge(attributeSchema);\n+        }\n+\n+        entityManager.remove(schema);\n     }\n }"},{"sha":"0b399a77316349752105314ac8713939eaae448d","filename":"core/src/test/java/org/syncope/core/persistence/test/AbstractDAOTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAbstractDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAbstractDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAbstractDAOTest.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -58,11 +58,11 @@ private void logTableContent(Connection conn, String tableName)\n             rs = stmt.executeQuery(\"SELECT * FROM \" + tableName);\n             ResultSetMetaData metaData = rs.getMetaData();\n             log.debug(\"Table: \" + tableName);\n-            StringBuffer row = new StringBuffer();\n+            StringBuilder row = new StringBuilder();\n             while (rs.next()) {\n                 for (int i = 0; i < metaData.getColumnCount(); i++) {\n-                    row.append(metaData.getColumnLabel(i + 1) + \"=\"\n-                            + rs.getString(i + 1) + \" \");\n+                    row.append(metaData.getColumnLabel(i + 1)).append(\"=\").\n+                            append(rs.getString(i + 1)).append(\" \");\n                 }\n \n                 log.debug(row.toString());"},{"sha":"385c97a92f30c3b74221279bf79fff332dd2ac05","filename":"core/src/test/java/org/syncope/core/persistence/test/RelationshipTest.java","status":"added","additions":168,"deletions":0,"changes":168,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FRelationshipTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FRelationshipTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FRelationshipTest.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -0,0 +1,168 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.test;\n+\n+import static org.junit.Assert.*;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.annotation.Rollback;\n+import org.springframework.test.context.transaction.AfterTransaction;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.core.persistence.beans.Attribute;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.beans.AttributeValue;\n+import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n+import org.syncope.core.persistence.dao.AttributeDAO;\n+import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n+import org.syncope.core.persistence.dao.AttributeValueDAO;\n+import org.syncope.core.persistence.dao.DerivedAttributeSchemaDAO;\n+\n+@Transactional\n+public class RelationshipTest extends AbstractDAOTest {\n+\n+    @Autowired\n+    AttributeSchemaDAO attributeSchemaDAO;\n+    @Autowired\n+    AttributeDAO attributeDAO;\n+    @Autowired\n+    AttributeValueDAO attributeValueDAO;\n+    @Autowired\n+    DerivedAttributeSchemaDAO derivedAttributeSchemaDAO;\n+    private Set<Long> loginDateAttributeIds;\n+    private Set<Long> allLoginDateAttributeValueIds;\n+    private Set<String> derivedAttributeSchemaNames;\n+    private Set<String> attributeSchemaNames;\n+\n+    @Test\n+    @Rollback(false)\n+    public final void prepare() {\n+\n+        // 1. AttributeSchema <-> Attribute <-> AttributeValue\n+        {\n+            AttributeSchema loginDateSchema =\n+                    attributeSchemaDAO.find(\"loginDate\");\n+            assertNotNull(loginDateSchema);\n+\n+            loginDateAttributeIds = new HashSet<Long>();\n+            allLoginDateAttributeValueIds = new HashSet<Long>();\n+            for (Attribute loginDateAttribute :\n+                    loginDateSchema.getAttributes()) {\n+\n+                loginDateAttributeIds.add(loginDateAttribute.getId());\n+\n+                for (AttributeValue loginDateAttributeValue :\n+                        loginDateAttribute.getValues()) {\n+\n+                    allLoginDateAttributeValueIds.add(\n+                            loginDateAttributeValue.getId());\n+                }\n+            }\n+\n+            attributeSchemaDAO.delete(\"loginDate\");\n+        }\n+\n+        // 2. AttributeSchema <-> DerivedAttributeSchema\n+        {\n+            AttributeSchema surnameSchema = attributeSchemaDAO.find(\"surname\");\n+            assertNotNull(surnameSchema);\n+\n+            derivedAttributeSchemaNames = new HashSet<String>();\n+            for (DerivedAttributeSchema derivedAttributeSchema :\n+                    surnameSchema.getDerivedAttributeSchemas()) {\n+\n+                derivedAttributeSchemaNames.add(\n+                        derivedAttributeSchema.getName());\n+            }\n+\n+            attributeSchemaDAO.delete(\"surname\");\n+        }\n+\n+        // 3. DerivedAttributeSchema <-> AttributeSchema\n+        /*{\n+            DerivedAttributeSchema alternativeCNSchema =\n+                    derivedAttributeSchemaDAO.find(\"icon2\");\n+            assertNotNull(alternativeCNSchema);\n+\n+            attributeSchemaNames = new HashSet<String>();\n+            for (AttributeSchema attributeSchema :\n+                    alternativeCNSchema.getAttributeSchemas()) {\n+\n+                attributeSchemaNames.add(attributeSchema.getName());\n+            }\n+\n+            derivedAttributeSchemaDAO.delete(\"icon2\");\n+        }*/\n+    }\n+\n+    @AfterTransaction\n+    public final void verify() {\n+\n+        // 1. AttributeSchema <-> Attribute <-> AttributeValue\n+        {\n+            assertNotNull(loginDateAttributeIds);\n+            assertNotNull(allLoginDateAttributeValueIds);\n+            assertNull(attributeSchemaDAO.find(\"loginDate\"));\n+\n+            for (Long loginDateAttribute : loginDateAttributeIds) {\n+                assertNull(attributeDAO.find(loginDateAttribute));\n+            }\n+            for (Long attributeValue : allLoginDateAttributeValueIds) {\n+                assertNull(attributeValueDAO.find(attributeValue));\n+            }\n+        }\n+\n+        // 2. AttributeSchema <-> DerivedAttributeSchema\n+        {\n+            assertNotNull(derivedAttributeSchemaNames);\n+            assertNull(attributeSchemaDAO.find(\"surname\"));\n+\n+            DerivedAttributeSchema derivedAttributeSchema = null;\n+            for (String derivedAttributeSchemaName :\n+                    derivedAttributeSchemaNames) {\n+\n+                derivedAttributeSchema =\n+                        derivedAttributeSchemaDAO.find(\n+                        derivedAttributeSchemaName);\n+\n+                for (AttributeSchema attributeSchema :\n+                        derivedAttributeSchema.getAttributeSchemas()) {\n+\n+                    assertTrue(!\"surname\".equals(attributeSchema.getName()));\n+                }\n+            }\n+        }\n+\n+        // 3. DerivedAttributeSchema <-> AttributeSchema\n+        /*{\n+            assertNotNull(attributeSchemaNames);\n+            assertNull(derivedAttributeSchemaDAO.find(\"icon2\"));\n+\n+            AttributeSchema attributeSchema = null;\n+            for (String attributeSchemaName : attributeSchemaNames) {\n+                attributeSchema = attributeSchemaDAO.find(attributeSchemaName);\n+\n+                for (DerivedAttributeSchema derivedAttributeSchema :\n+                        attributeSchema.getDerivedAttributeSchemas()) {\n+\n+                    assertTrue(!\"icon2\".equals(\n+                            derivedAttributeSchema.getName()));\n+                }\n+            }\n+        }*/\n+    }\n+}"},{"sha":"6f4cd1dd0cf6f0ea426d4622f820d1d1057a172b","filename":"core/src/test/java/org/syncope/core/persistence/test/SyncopeRoleDAOTest.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -17,13 +17,10 @@\n import static org.junit.Assert.*;\n \n import java.util.List;\n-import java.util.Set;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.SyncopeRole;\n-import org.syncope.core.persistence.beans.Attribute;\n-import org.syncope.core.persistence.beans.Entitlement;\n import org.syncope.core.persistence.beans.SyncopeRolePK;\n import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n import org.syncope.core.persistence.dao.AttributeDAO;"},{"sha":"802a8c327529f104744191b9310fe6fffa3a430d","filename":"core/src/test/java/org/syncope/core/persistence/test/SyncopeUserDAOTest.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -17,12 +17,10 @@\n import static org.junit.Assert.*;\n \n import java.util.List;\n-import java.util.Set;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.SyncopeUser;\n-import org.syncope.core.persistence.beans.Attribute;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n import org.syncope.core.persistence.dao.AttributeDAO;"},{"sha":"be39c0bd16b7d3eb849072a36706adc84d87e786","filename":"core/src/test/resources/dbunitTestData.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -100,7 +100,6 @@\n         version=\"1.0\"\n         xmlConfiguration=\"%lt;xml ... \" />\n \n-\n     <Entitlement name=\"base\" description=\"NULL\"/>\n     <Entitlement name=\"advanced\" description=\"Advanced entitlement\"/>\n "},{"sha":"6769eba08db713ceeb82d613b5d98de2ea94779d","filename":"pom.xml","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/145bc1fc4b291336177783cead4adfd0be10a993/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/145bc1fc4b291336177783cead4adfd0be10a993/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=145bc1fc4b291336177783cead4adfd0be10a993","patch":"@@ -315,17 +315,6 @@\n             <url>https://maven.atlassian.com/3rdparty/</url>\n         </repository>\n \n-        <repository>\n-            <id>jboss</id>\n-            <url>https://repository.jboss.org/nexus/content/groups/public</url>\n-            <releases>\n-                <enabled>true</enabled>\n-            </releases>\n-            <snapshots>\n-                <enabled>false</enabled>\n-            </snapshots>\n-        </repository>\n-\n     </repositories>\n \n     <build>"}]}