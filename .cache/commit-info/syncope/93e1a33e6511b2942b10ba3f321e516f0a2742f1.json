{"sha":"93e1a33e6511b2942b10ba3f321e516f0a2742f1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkzZTFhMzNlNjUxMWIyOTQyYjEwYmEzZjMyMWU1MTZmMGEyNzQyZjE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-09-21T07:54:22Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-09-21T07:54:35Z"},"message":"Removing quite useless (and much confusing) AttTO#schemaInfo","tree":{"sha":"91cbbf8bc4621d93d5d60862f489fe35d072ae45","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/91cbbf8bc4621d93d5d60862f489fe35d072ae45"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/93e1a33e6511b2942b10ba3f321e516f0a2742f1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93e1a33e6511b2942b10ba3f321e516f0a2742f1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/93e1a33e6511b2942b10ba3f321e516f0a2742f1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93e1a33e6511b2942b10ba3f321e516f0a2742f1/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a37007ed7b9777db0f06aad34bcaaa2a63eee2a1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a37007ed7b9777db0f06aad34bcaaa2a63eee2a1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a37007ed7b9777db0f06aad34bcaaa2a63eee2a1"}],"stats":{"total":96,"additions":23,"deletions":73},"files":[{"sha":"9bce3092ea935cee182626a9e9d977488675f1e3","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersDirectoryPanel.java","status":"modified","additions":13,"deletions":4,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93e1a33e6511b2942b10ba3f321e516f0a2742f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93e1a33e6511b2942b10ba3f321e516f0a2742f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersDirectoryPanel.java?ref=93e1a33e6511b2942b10ba3f321e516f0a2742f1","patch":"@@ -41,6 +41,7 @@\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n@@ -146,10 +147,18 @@ protected List<IColumn<AttrTO, String>> getColumns() {\n             private static final long serialVersionUID = -1822504503325964706L;\n \n             @Override\n-            public void populateItem(final Item<ICellPopulator<AttrTO>> item,\n-                    final String componentId, final IModel<AttrTO> rowModel) {\n-                PlainSchemaTO modelSchemaTO = (PlainSchemaTO) rowModel.getObject().getSchemaInfo();\n-                AttrSchemaType type = modelSchemaTO.getType();\n+            public void populateItem(\n+                    final Item<ICellPopulator<AttrTO>> item,\n+                    final String componentId,\n+                    final IModel<AttrTO> rowModel) {\n+\n+                PlainSchemaTO schema = null;\n+                try {\n+                    schema = schemaRestClient.read(SchemaType.PLAIN, rowModel.getObject().getSchema());\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not read conf schema {}\", rowModel.getObject().getSchema(), e);\n+                }\n+                AttrSchemaType type = schema == null ? null : schema.getType();\n                 if (type == AttrSchemaType.Binary || type == AttrSchemaType.Encrypted) {\n                     item.add(new Label(componentId, type.name()).\n                             add(new AttributeModifier(\"style\", \"font-style:italic\")));"},{"sha":"e9f8029ee85287262505377c62e9cdb88cfa69cc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/TogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93e1a33e6511b2942b10ba3f321e516f0a2742f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93e1a33e6511b2942b10ba3f321e516f0a2742f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java?ref=93e1a33e6511b2942b10ba3f321e516f0a2742f1","patch":"@@ -193,7 +193,7 @@ private String getTargetKey(final Serializable modelObject) {\n         } else if (modelObject instanceof ReportTO) {\n             key = ((ReportTO) modelObject).getKey();\n         } else if (modelObject instanceof AttrTO) {\n-            key = ((AttrTO) modelObject).getSchemaInfo().getKey();\n+            key = ((AttrTO) modelObject).getSchema();\n         } else if (modelObject instanceof PolicyTO) {\n             key = ((PolicyTO) modelObject).getKey();\n         } else if (modelObject instanceof SecurityQuestionTO) {"},{"sha":"7357313211cc8b7f70db583cd9aec51b302b9ce7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93e1a33e6511b2942b10ba3f321e516f0a2742f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93e1a33e6511b2942b10ba3f321e516f0a2742f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=93e1a33e6511b2942b10ba3f321e516f0a2742f1","patch":"@@ -174,9 +174,6 @@ protected void setAttrs() {\n             attrTO.setSchema(schema.getKey());\n             if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n                 attrTO.getValues().add(\"\");\n-\n-                // is important to set the schema info only after values setting\n-                attrTO.setSchemaInfo(schema);\n             } else {\n                 attrTO = attrMap.get(schema.getKey());\n             }\n@@ -205,9 +202,6 @@ protected void setAttrs(final MembershipTO membershipTO) {\n                     attrTO.setSchema(schema.getKey());\n                     if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n                         attrTO.getValues().add(StringUtils.EMPTY);\n-\n-                        // is important to set the schema info only after values setting\n-                        attrTO.setSchemaInfo(schema);\n                     } else {\n                         attrTO.getValues().addAll(attrMap.get(schema.getKey()).getValues());\n                     }"},{"sha":"ef20e54f1716a7f9af702303fafc82c9dd877b72","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93e1a33e6511b2942b10ba3f321e516f0a2742f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93e1a33e6511b2942b10ba3f321e516f0a2742f1/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=93e1a33e6511b2942b10ba3f321e516f0a2742f1","patch":"@@ -188,26 +188,23 @@ public VirSchemas(\n                 @SuppressWarnings(\"unchecked\")\n                 protected void populateItem(final ListItem<AttrTO> item) {\n                     AttrTO attrTO = item.getModelObject();\n+                    VirSchemaTO virSchemaTO = schemas.get(attrTO.getSchema());\n \n                     AbstractFieldPanel<?> panel = new AjaxTextFieldPanel(\n                             \"panel\",\n-                            schemas.get(attrTO.getSchema()).getLabel(SyncopeConsoleSession.get().getLocale()),\n+                            virSchemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n                             new Model<>(),\n                             false);\n \n-                    boolean readonly = attrTO.getSchemaInfo() == null\n-                            ? false\n-                            : VirSchemaTO.class.cast(attrTO.getSchemaInfo()).isReadonly();\n-\n                     if (mode == AjaxWizard.Mode.TEMPLATE) {\n-                        AjaxTextFieldPanel.class.cast(panel).enableJexlHelp().setEnabled(!readonly);\n+                        AjaxTextFieldPanel.class.cast(panel).enableJexlHelp().setEnabled(!virSchemaTO.isReadonly());\n                     } else {\n                         panel = new MultiFieldPanel.Builder<>(\n                                 new PropertyModel<List<String>>(attrTO, \"values\")).build(\n                                 \"panel\",\n-                                schemas.get(attrTO.getSchema()).getLabel(SyncopeConsoleSession.get().getLocale()),\n+                                virSchemaTO.getLabel(SyncopeConsoleSession.get().getLocale()),\n                                 AjaxTextFieldPanel.class.cast(panel));\n-                        panel.setEnabled(!readonly);\n+                        panel.setEnabled(!virSchemaTO.isReadonly());\n                     }\n \n                     item.add(panel);"},{"sha":"0e1b688f2b76e47671d0df673c1ddc6b9483ac05","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93e1a33e6511b2942b10ba3f321e516f0a2742f1/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93e1a33e6511b2942b10ba3f321e516f0a2742f1/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=93e1a33e6511b2942b10ba3f321e516f0a2742f1","patch":"@@ -407,9 +407,6 @@ private static Collection<AttrTO> patch(final Map<String, AttrTO> attrs, final S\n                 LOG.warn(\"Invalid {} specified: {}\", AttrPatch.class.getName(), patch);\n             } else {\n                 AttrTO removed = rwattrs.remove(patch.getAttrTO().getSchema());\n-                if (removed != null && removed.getSchemaInfo() != null) {\n-                    patch.getAttrTO().setSchemaInfo(removed.getSchemaInfo());\n-                }\n                 if (patch.getOperation() == PatchOperation.ADD_REPLACE && !patch.getAttrTO().getValues().isEmpty()) {\n                     rwattrs.put(patch.getAttrTO().getSchema(), patch.getAttrTO());\n                 }"},{"sha":"b06b6b43f0aa68625d4f4eddd49012e09fbc05a7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AttrTO.java","status":"modified","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93e1a33e6511b2942b10ba3f321e516f0a2742f1/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93e1a33e6511b2942b10ba3f321e516f0a2742f1/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java?ref=93e1a33e6511b2942b10ba3f321e516f0a2742f1","patch":"@@ -20,7 +20,6 @@\n \n import org.apache.syncope.common.lib.AbstractBaseBean;\n import com.fasterxml.jackson.annotation.JsonProperty;\n-import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n@@ -46,11 +45,6 @@ public Builder schema(final String schema) {\n             return this;\n         }\n \n-        public Builder schemaInfo(final SchemaTO schemaInfo) {\n-            instance.schemaInfo = schemaInfo;\n-            return this;\n-        }\n-\n         public Builder value(final String value) {\n             instance.getValues().add(value);\n             return this;\n@@ -71,11 +65,6 @@ public AttrTO build() {\n         }\n     }\n \n-    /**\n-     * (Optional) schema information for this attribute.\n-     */\n-    private SchemaTO schemaInfo;\n-\n     /**\n      * Name of the schema that this attribute is referring to.\n      */\n@@ -86,18 +75,6 @@ public AttrTO build() {\n      */\n     private final List<String> values = new ArrayList<>();\n \n-    /**\n-     * @return schema information for this attribute; may be {@code NULL}\n-     */\n-    @Schema(accessMode = Schema.AccessMode.READ_ONLY)\n-    public SchemaTO getSchemaInfo() {\n-        return schemaInfo;\n-    }\n-\n-    public void setSchemaInfo(final SchemaTO schemaInfo) {\n-        this.schemaInfo = schemaInfo;\n-    }\n-\n     /**\n      * @return the name of the schema that this attribute is referring to\n      */"},{"sha":"5c134dff4bbfbb072082b382d71ee819bd74d2f6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":4,"deletions":23,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93e1a33e6511b2942b10ba3f321e516f0a2742f1/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93e1a33e6511b2942b10ba3f321e516f0a2742f1/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=93e1a33e6511b2942b10ba3f321e516f0a2742f1","patch":"@@ -77,7 +77,6 @@\n import org.apache.syncope.core.provisioning.api.MappingManager;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n-import org.apache.syncope.core.provisioning.api.data.SchemaDataBinder;\n import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n@@ -89,9 +88,6 @@ abstract class AbstractAnyDataBinder {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractAnyDataBinder.class);\n \n-    @Autowired\n-    protected SchemaDataBinder schemaDataBinder;\n-\n     @Autowired\n     protected RealmDAO realmDAO;\n \n@@ -559,29 +555,17 @@ protected void fillTO(\n         anyTO.getAuxClasses().addAll(auxClasses.stream().map(Entity::getKey).collect(Collectors.toList()));\n \n         plainAttrs.forEach(plainAttr -> {\n-            AttrTO.Builder attrTOBuilder = new AttrTO.Builder().\n+            anyTO.getPlainAttrs().add(new AttrTO.Builder().\n                     schema(plainAttr.getSchema().getKey()).\n-                    values(plainAttr.getValuesAsStrings());\n-            if (details) {\n-                attrTOBuilder.schemaInfo(schemaDataBinder.getPlainSchemaTO(plainAttr.getSchema().getKey()));\n-            }\n-            anyTO.getPlainAttrs().add(attrTOBuilder.build());\n+                    values(plainAttr.getValuesAsStrings()).build());\n         });\n \n         derAttrs.forEach((schema, value) -> {\n-            AttrTO.Builder attrTOBuilder = new AttrTO.Builder().schema(schema.getKey()).value(value);\n-            if (details) {\n-                attrTOBuilder.schemaInfo(schemaDataBinder.getDerSchemaTO(schema.getKey()));\n-            }\n-            anyTO.getDerAttrs().add(attrTOBuilder.build());\n+            anyTO.getDerAttrs().add(new AttrTO.Builder().schema(schema.getKey()).value(value).build());\n         });\n \n         virAttrs.forEach((schema, values) -> {\n-            AttrTO.Builder attrTOBuilder = new AttrTO.Builder().schema(schema.getKey()).values(values);\n-            if (details) {\n-                attrTOBuilder.schemaInfo(schemaDataBinder.getVirSchemaTO(schema.getKey()));\n-            }\n-            anyTO.getVirAttrs().add(attrTOBuilder.build());\n+            anyTO.getVirAttrs().add(new AttrTO.Builder().schema(schema.getKey()).values(values).build());\n         });\n \n         anyTO.getResources().addAll(resources.stream().map(Entity::getKey).collect(Collectors.toSet()));\n@@ -607,23 +591,20 @@ protected MembershipTO getMembershipTO(\n             membershipTO.getPlainAttrs().add(new AttrTO.Builder().\n                     schema(plainAttr.getSchema().getKey()).\n                     values(plainAttr.getValuesAsStrings()).\n-                    schemaInfo(schemaDataBinder.getPlainSchemaTO(plainAttr.getSchema().getKey())).\n                     build());\n         });\n \n         derAttrs.forEach((schema, value) -> {\n             membershipTO.getDerAttrs().add(new AttrTO.Builder().\n                     schema(schema.getKey()).\n                     value(value).\n-                    schemaInfo(schemaDataBinder.getDerSchemaTO(schema.getKey())).\n                     build());\n         });\n \n         virAttrs.forEach((schema, values) -> {\n             membershipTO.getVirAttrs().add(new AttrTO.Builder().\n                     schema(schema.getKey()).\n                     values(values).\n-                    schemaInfo(schemaDataBinder.getVirSchemaTO(schema.getKey())).\n                     build());\n         });\n "},{"sha":"f207ae65954214f023abfeb5112be1a8ceb13d7b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ConfigurationDataBinderImpl.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93e1a33e6511b2942b10ba3f321e516f0a2742f1/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93e1a33e6511b2942b10ba3f321e516f0a2742f1/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FConfigurationDataBinderImpl.java?ref=93e1a33e6511b2942b10ba3f321e516f0a2742f1","patch":"@@ -54,7 +54,6 @@ public List<AttrTO> getConfTO() {\n     @Override\n     public AttrTO getAttrTO(final CPlainAttr attr) {\n         return new AttrTO.Builder().\n-                schemaInfo(schemaDataBinder.getPlainSchemaTO(attr.getSchema().getKey())).\n                 schema(attr.getSchema().getKey()).\n                 values(attr.getValuesAsStrings()).\n                 build();"},{"sha":"36cd40fd2244744473ced20f29bfd2411b2f70dd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyObjectITCase.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93e1a33e6511b2942b10ba3f321e516f0a2742f1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93e1a33e6511b2942b10ba3f321e516f0a2742f1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java?ref=93e1a33e6511b2942b10ba3f321e516f0a2742f1","patch":"@@ -178,8 +178,6 @@ public void updateAttr() {\n         anyObjectService.update(anyObjectTO.getKey(), SchemaType.PLAIN, updated);\n \n         AttrTO location = anyObjectService.read(anyObjectTO.getKey(), SchemaType.PLAIN, \"location\");\n-        // need to remove schemaInfo which is included when reading the any object\n-        location.setSchemaInfo(null);\n         assertEquals(updated, location);\n     }\n "},{"sha":"c6a3438add25a5cab6431ef539821528ae331984","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ConfigurationITCase.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93e1a33e6511b2942b10ba3f321e516f0a2742f1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93e1a33e6511b2942b10ba3f321e516f0a2742f1/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConfigurationITCase.java?ref=93e1a33e6511b2942b10ba3f321e516f0a2742f1","patch":"@@ -58,7 +58,6 @@ public void create() {\n         configurationService.set(conf);\n \n         AttrTO actual = configurationService.get(conf.getSchema());\n-        actual.setSchemaInfo(null);\n         assertEquals(actual, conf);\n     }\n \n@@ -82,7 +81,6 @@ public void createRequired() {\n         configurationService.set(conf);\n \n         AttrTO actual = configurationService.get(conf.getSchema());\n-        actual.setSchemaInfo(null);\n         assertEquals(actual, conf);\n     }\n "}]}