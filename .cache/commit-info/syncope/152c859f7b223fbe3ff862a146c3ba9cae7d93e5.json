{"sha":"152c859f7b223fbe3ff862a146c3ba9cae7d93e5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE1MmM4NTlmN2IyMjNmYmUzZmY4NjJhMTQ2YzNiYTljYWU3ZDkzZTU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-24T09:48:19Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-24T09:48:19Z"},"message":"Test improvement\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247375 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e98af2d97de5cf69c03128fc25d25e4332adbaad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e98af2d97de5cf69c03128fc25d25e4332adbaad"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/152c859f7b223fbe3ff862a146c3ba9cae7d93e5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/152c859f7b223fbe3ff862a146c3ba9cae7d93e5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/152c859f7b223fbe3ff862a146c3ba9cae7d93e5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/152c859f7b223fbe3ff862a146c3ba9cae7d93e5/comments","author":null,"committer":null,"parents":[{"sha":"db5b5d77984ead1cfa12771db33915b81803e268","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/db5b5d77984ead1cfa12771db33915b81803e268","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/db5b5d77984ead1cfa12771db33915b81803e268"}],"stats":{"total":34,"additions":20,"deletions":14},"files":[{"sha":"0228e1e571132be5c1d109fbe430503797dbb120","filename":"core/src/main/java/org/syncope/core/scheduling/SyncJob.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/152c859f7b223fbe3ff862a146c3ba9cae7d93e5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/152c859f7b223fbe3ff862a146c3ba9cae7d93e5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=152c859f7b223fbe3ff862a146c3ba9cae7d93e5","patch":"@@ -701,8 +701,7 @@ private void updateUsers(final SyncDelta delta,\n \n                         propagationManager.execute(tasks);\n \n-                        userTO = userDataBinder.getUserTO(\n-                                updated.getResult());\n+                        userTO = userDataBinder.getUserTO(updated.getResult());\n                     }\n                 } catch (PropagationException e) {\n                     LOG.error(\"Could not propagate user \""},{"sha":"66787ddb73a810006be0df6ac7fd288ada9c7b77","filename":"core/src/test/java/org/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":19,"deletions":12,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/152c859f7b223fbe3ff862a146c3ba9cae7d93e5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/152c859f7b223fbe3ff862a146c3ba9cae7d93e5/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=152c859f7b223fbe3ff862a146c3ba9cae7d93e5","patch":"@@ -287,26 +287,33 @@ public void sync() {\n         assertEquals(TestSyncJobActions.class.getName(),\n                 actual.getJobActionsClassName());\n \n-        TaskExecTO execution = restTemplate.postForObject(\n-                BASE_URL + \"task/execute/{taskId}\", null,\n-                TaskExecTO.class, 4);\n-        assertEquals(\"JOB_FIRED\", execution.getStatus());\n-\n+        // read executions before sync (dryrun test could be executed before)\n         List<TaskExecTO> executions = Arrays.asList(\n                 restTemplate.getForObject(\n                 BASE_URL + \"task/sync/execution/list\",\n                 TaskExecTO[].class));\n+\n         assertNotNull(executions);\n-        assertTrue(executions.isEmpty());\n-        while (executions.isEmpty()) {\n-            executions = Arrays.asList(restTemplate.getForObject(\n-                    BASE_URL + \"task/sync/execution/list\",\n-                    TaskExecTO[].class));\n+\n+        TaskExecTO execution = restTemplate.postForObject(\n+                BASE_URL + \"task/execute/{taskId}\", null,\n+                TaskExecTO.class, 4);\n+        assertEquals(\"JOB_FIRED\", execution.getStatus());\n+\n+        int execSize = executions.size();\n+        \n+        // wait for sync completion (executions incremented)\n+        do {\n             try {\n-                Thread.sleep(5000);\n+                Thread.sleep(1000);\n             } catch (InterruptedException e) {\n             }\n-        }\n+\n+            executions = Arrays.asList(restTemplate.getForObject(\n+                    BASE_URL + \"task/sync/execution/list\",\n+                    TaskExecTO[].class));\n+\n+        } while (executions.size() == execSize);\n \n         // check for sync policy\n         userTO = restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\","}]}