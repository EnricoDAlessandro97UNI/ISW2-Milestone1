{"sha":"184b89f8d84095f51b5d48292fbd70350a3a8ec1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE4NGI4OWY4ZDg0MDk1ZjUxYjVkNDgyOTJmYmQ3MDM1MGEzYThlYzE=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-01-08T09:53:51Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-01-08T09:53:51Z"},"message":"Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/syncope","tree":{"sha":"afa1c3bf025538c87503fea6a9197348cea60849","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/afa1c3bf025538c87503fea6a9197348cea60849"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/184b89f8d84095f51b5d48292fbd70350a3a8ec1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/184b89f8d84095f51b5d48292fbd70350a3a8ec1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/184b89f8d84095f51b5d48292fbd70350a3a8ec1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/184b89f8d84095f51b5d48292fbd70350a3a8ec1/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"061a601de29266c6439e2fb83902dbffb689df51","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/061a601de29266c6439e2fb83902dbffb689df51","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/061a601de29266c6439e2fb83902dbffb689df51"},{"sha":"a8f98d25bbe42c14de763703768dd0d8cf4895dd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a8f98d25bbe42c14de763703768dd0d8cf4895dd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a8f98d25bbe42c14de763703768dd0d8cf4895dd"}],"stats":{"total":255,"additions":114,"deletions":141},"files":[{"sha":"709297e44b4abbed131ea01dfb7b0a0dcdffd2d3","filename":"common/src/main/java/org/apache/syncope/common/to/RouteTO.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRouteTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRouteTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRouteTO.java?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -16,7 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package org.apache.syncope.common.to;\n \n import javax.xml.bind.annotation.XmlRootElement;\n@@ -25,23 +24,23 @@\n \n @XmlRootElement(name = \"route\")\n @XmlType\n-public class RouteTO extends AbstractBaseBean{\n-    \n+public class RouteTO extends AbstractBaseBean {\n+\n     private Long id;\n \n     private String name;\n \n     private String routeContent;\n-    \n-    public void setId(Long id){\n+\n+    public void setId(Long id) {\n         this.id = id;\n     }\n \n     public Long getId() {\n         return id;\n     }\n \n-    public void setName(String name) {\n+    public void setName(final String name) {\n         this.name = name;\n     }\n \n@@ -53,8 +52,8 @@ public String getRouteContent() {\n         return routeContent;\n     }\n \n-    public void setRouteContent(String routeContent) {\n+    public void setRouteContent(final String routeContent) {\n         this.routeContent = routeContent;\n     }\n-    \n+\n }"},{"sha":"cee88d50a0803695b467ff0446b21bed5fbc7168","filename":"core/src/main/java/org/apache/syncope/core/provisioning/DefaultRoleProvisioningManager.java","status":"modified","additions":13,"deletions":17,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultRoleProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultRoleProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultRoleProvisioningManager.java?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -67,13 +67,12 @@ public class DefaultRoleProvisioningManager implements RoleProvisioningManager {\n     protected RoleDataBinder binder;\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> create(RoleTO subject) {\n+    public Map.Entry<Long, List<PropagationStatus>> create(final RoleTO subject) {\n         return create(subject, Collections.<String>emptySet());\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> create(RoleTO subject, Set<String> excludedResources) {\n-\n+    public Map.Entry<Long, List<PropagationStatus>> create(final RoleTO subject, final Set<String> excludedResources) {\n         WorkflowResult<Long> created = rwfAdapter.create(subject);\n \n         EntitlementUtil.extendAuthContext(created.getResult());\n@@ -97,8 +96,8 @@ public Map.Entry<Long, List<PropagationStatus>> create(RoleTO subject, Set<Strin\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> createInSync(RoleTO roleTO, Map<Long, String> roleOwnerMap,\n-            Set<String> excludedResources) throws PropagationException {\n+    public Map.Entry<Long, List<PropagationStatus>> create(\n+            final RoleTO roleTO, final Map<Long, String> roleOwnerMap, final Set<String> excludedResources) {\n \n         WorkflowResult<Long> created = rwfAdapter.create((RoleTO) roleTO);\n         AttributeTO roleOwner = roleTO.getAttrMap().get(StringUtils.EMPTY);\n@@ -108,24 +107,22 @@ public Map.Entry<Long, List<PropagationStatus>> createInSync(RoleTO roleTO, Map<\n \n         EntitlementUtil.extendAuthContext(created.getResult());\n \n-        List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created,\n-                roleTO.getVirAttrs(), excludedResources);\n+        List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(\n+                created, roleTO.getVirAttrs(), excludedResources);\n \n         taskExecutor.execute(tasks);\n \n-        Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n-                created.getResult(), null);\n-        return result;\n+        return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(created.getResult(), null);\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod) {\n-\n+    public Map.Entry<Long, List<PropagationStatus>> update(final RoleMod subjectMod) {\n         return update(subjectMod, Collections.<String>emptySet());\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<String> excludedResources) {\n+    public Map.Entry<Long, List<PropagationStatus>> update(\n+            final RoleMod subjectMod, final Set<String> excludedResources) {\n \n         WorkflowResult<Long> updated = rwfAdapter.update(subjectMod);\n \n@@ -146,8 +143,7 @@ public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<S\n     }\n \n     @Override\n-    public List<PropagationStatus> delete(Long subjectId) {\n-\n+    public List<PropagationStatus> delete(final Long subjectId) {\n         final List<SyncopeRole> toBeDeprovisioned = new ArrayList<SyncopeRole>();\n \n         final SyncopeRole syncopeRole = roleDAO.find(subjectId);\n@@ -193,7 +189,7 @@ public List<PropagationStatus> delete(Long subjectId) {\n     }\n \n     @Override\n-    public Long unlink(RoleMod subjectMod) {\n+    public Long unlink(final RoleMod subjectMod) {\n         WorkflowResult<Long> updated = rwfAdapter.update(subjectMod);\n         return updated.getResult();\n     }\n@@ -219,7 +215,7 @@ public List<PropagationStatus> deprovision(final Long roleId, final Collection<S\n     }\n \n     @Override\n-    public Long link(RoleMod subjectMod) {\n+    public Long link(final RoleMod subjectMod) {\n         return rwfAdapter.update(subjectMod).getResult();\n     }\n "},{"sha":"f6549a49b9fdb68ba1f6387ec6108d03b5ae6dce","filename":"core/src/main/java/org/apache/syncope/core/provisioning/DefaultUserProvisioningManager.java","status":"modified","additions":38,"deletions":64,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FDefaultUserProvisioningManager.java?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -72,38 +72,17 @@ public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO) {\n     }\n \n     public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, boolean storePassword) {\n-        /* WorkflowResult<Map.Entry<Long, Boolean>> created;\n-         * try {\n-         * created = uwfAdapter.create(userTO,storePassword);\n-         * } catch (RuntimeException e) {\n-         * throw e;\n-         * }\n-         *\n-         * List<PropagationTask> tasks = propagationManager.getUserCreateTaskIds(\n-         * created, userTO.getPassword(), userTO.getVirAttrs(), userTO.getMemberships());\n-         *\n-         * PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n-         * getBean(PropagationReporter.class);\n-         * try {\n-         * taskExecutor.execute(tasks, propagationReporter);\n-         * } catch (PropagationException e) {\n-         * LOG.error(\"Error propagation primary resource\", e);\n-         * propagationReporter.onPrimaryResourceFailure(tasks);\n-         * }\n-         *\n-         * Map.Entry<Long, List<PropagationStatus>> result = new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(\n-         * created.getResult().getKey(), propagationReporter.getStatuses());\n-         * return result; */\n         return create(userTO, storePassword, false, null, Collections.<String>emptySet());\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> create(UserTO userTO, boolean storePassword,\n-            boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources) {\n+    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword,\n+            final boolean disablePwdPolicyCheck, final Boolean enabled, final Set<String> excludedResources) {\n+\n         WorkflowResult<Map.Entry<Long, Boolean>> created;\n         try {\n             created = uwfAdapter.create(userTO, disablePwdPolicyCheck, enabled, storePassword);\n-        } catch (RuntimeException e) {\n+        } catch (PropagationException e) {\n             throw e;\n         }\n \n@@ -129,11 +108,11 @@ public Map.Entry<Long, List<PropagationStatus>> update(final UserMod userMod) {\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, boolean removeMemberships) {\n+    public Map.Entry<Long, List<PropagationStatus>> update(final UserMod userMod, final boolean removeMemberships) {\n         WorkflowResult<Map.Entry<UserMod, Boolean>> updated;\n         try {\n             updated = uwfAdapter.update(userMod);\n-        } catch (RuntimeException e) {\n+        } catch (PropagationException e) {\n             throw e;\n         }\n \n@@ -180,12 +159,11 @@ public Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, boolean\n \n     @Override\n     public List<PropagationStatus> delete(final Long userId) {\n-\n         return delete(userId, Collections.<String>emptySet());\n     }\n \n     @Override\n-    public List<PropagationStatus> delete(Long subjectId, Set<String> excludedResources) {\n+    public List<PropagationStatus> delete(final Long subjectId, final Set<String> excludedResources) {\n         List<PropagationTask> tasks = propagationManager.getUserDeleteTaskIds(subjectId, excludedResources);\n \n         PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n@@ -199,26 +177,26 @@ public List<PropagationStatus> delete(Long subjectId, Set<String> excludedResour\n \n         try {\n             uwfAdapter.delete(subjectId);\n-        } catch (RuntimeException e) {\n+        } catch (PropagationException e) {\n             throw e;\n         }\n \n         return propagationReporter.getStatuses();\n     }\n \n     @Override\n-    public Long unlink(UserMod userMod) {\n+    public Long unlink(final UserMod userMod) {\n         WorkflowResult<Map.Entry<UserMod, Boolean>> updated = uwfAdapter.update(userMod);\n         return updated.getResult().getKey().getId();\n     }\n \n     @Override\n-    public Long link(UserMod subjectMod) {\n+    public Long link(final UserMod subjectMod) {\n         return uwfAdapter.update(subjectMod).getResult().getKey().getId();\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, StatusMod statusMod) {\n+    public Map.Entry<Long, List<PropagationStatus>> activate(final SyncopeUser user, final StatusMod statusMod) {\n         WorkflowResult<Long> updated;\n         if (statusMod.isOnSyncope()) {\n             updated = uwfAdapter.activate(user.getId(), statusMod.getToken());\n@@ -231,7 +209,7 @@ public Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, Statu\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> reactivate(SyncopeUser user, StatusMod statusMod) {\n+    public Map.Entry<Long, List<PropagationStatus>> reactivate(final SyncopeUser user, final StatusMod statusMod) {\n         WorkflowResult<Long> updated;\n         if (statusMod.isOnSyncope()) {\n             updated = uwfAdapter.reactivate(user.getId());\n@@ -244,7 +222,7 @@ public Map.Entry<Long, List<PropagationStatus>> reactivate(SyncopeUser user, Sta\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> suspend(SyncopeUser user, StatusMod statusMod) {\n+    public Map.Entry<Long, List<PropagationStatus>> suspend(final SyncopeUser user, final StatusMod statusMod) {\n         WorkflowResult<Long> updated;\n         if (statusMod.isOnSyncope()) {\n             updated = uwfAdapter.suspend(user.getId());\n@@ -256,8 +234,7 @@ public Map.Entry<Long, List<PropagationStatus>> suspend(SyncopeUser user, Status\n         return new AbstractMap.SimpleEntry<Long, List<PropagationStatus>>(updated.getResult(), statuses);\n     }\n \n-    public List<PropagationStatus> propagateStatus(SyncopeUser user, StatusMod statusMod) {\n-\n+    protected List<PropagationStatus> propagateStatus(final SyncopeUser user, final StatusMod statusMod) {\n         Set<String> resourcesToBeExcluded = new HashSet<String>(user.getResourceNames());\n         resourcesToBeExcluded.removeAll(statusMod.getResourceNames());\n \n@@ -277,8 +254,25 @@ public List<PropagationStatus> propagateStatus(SyncopeUser user, StatusMod statu\n     }\n \n     @Override\n-    public List<PropagationStatus> deprovision(Long userId, Collection<String> resources) {\n+    public void innerSuspend(final SyncopeUser user, final boolean propagate) {\n+        final WorkflowResult<Long> updated = uwfAdapter.suspend(user);\n+\n+        // propagate suspension if and only if it is required by policy\n+        if (propagate) {\n+            UserMod userMod = new UserMod();\n+            userMod.setId(updated.getResult());\n+\n+            final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+                    new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n+                            new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, Boolean.FALSE),\n+                            updated.getPropByRes(), updated.getPerformedTasks()));\n+\n+            taskExecutor.execute(tasks);\n+        }\n+    }\n \n+    @Override\n+    public List<PropagationStatus> deprovision(final Long userId, final Collection<String> resources) {\n         final SyncopeUser user = binder.getUserFromId(userId);\n \n         final Set<String> noPropResourceName = user.getResourceNames();\n@@ -299,8 +293,8 @@ public List<PropagationStatus> deprovision(Long userId, Collection<String> resou\n     }\n \n     @Override\n-    public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userMod, final Long id,\n-            final SyncResult result, Boolean enabled, Set<String> excludedResources) {\n+    public Map.Entry<Long, List<PropagationStatus>> update(final UserMod userMod, final Long id,\n+            final SyncResult result, final Boolean enabled, final Set<String> excludedResources) {\n \n         WorkflowResult<Map.Entry<UserMod, Boolean>> updated;\n         try {\n@@ -340,8 +334,8 @@ public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userM\n         PropagationReporter propagationReporter = ApplicationContextProvider.getApplicationContext().\n                 getBean(PropagationReporter.class);\n \n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated, updated.getResult().getKey().\n-                getPassword() != null, excludedResources);\n+        List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n+                updated, updated.getResult().getKey().getPassword() != null, excludedResources);\n \n         try {\n             taskExecutor.execute(tasks, propagationReporter);\n@@ -356,32 +350,12 @@ public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userM\n     }\n \n     @Override\n-    public void innerSuspend(SyncopeUser user, boolean suspend) {\n-\n-        final WorkflowResult<Long> updated = uwfAdapter.suspend(user);\n-\n-        // propagate suspension if and only if it is required by policy\n-        if (suspend) {\n-            UserMod userMod = new UserMod();\n-            userMod.setId(updated.getResult());\n-\n-            final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n-                    new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n-                            new AbstractMap.SimpleEntry<UserMod, Boolean>(userMod, Boolean.FALSE),\n-                            updated.getPropByRes(), updated.getPerformedTasks()));\n-\n-            taskExecutor.execute(tasks);\n-        }\n-    }\n-\n-    @Override\n-    public void requestPasswordReset(Long id) {\n+    public void requestPasswordReset(final Long id) {\n         uwfAdapter.requestPasswordReset(id);\n     }\n \n     @Override\n-    public void confirmPasswordReset(SyncopeUser user, String token, String password) {\n-\n+    public void confirmPasswordReset(final SyncopeUser user, final String token, final String password) {\n         uwfAdapter.confirmPasswordReset(user.getId(), token, password);\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(user, null, null);"},{"sha":"7546ca3bed8ebc4cd204166f1ba1eb995f1b53f8","filename":"core/src/main/java/org/apache/syncope/core/provisioning/ProvisioningManager.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FProvisioningManager.java?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -27,16 +27,16 @@\n \n public interface ProvisioningManager<T extends AbstractAttributableTO, M extends AbstractAttributableMod> {\n \n-    public Map.Entry<Long, List<PropagationStatus>> create(T subject);\n+    Map.Entry<Long, List<PropagationStatus>> create(T subject);\n \n-    public Map.Entry<Long, List<PropagationStatus>> update(M subjectMod);\n+    Map.Entry<Long, List<PropagationStatus>> update(M subjectMod);\n \n-    public List<PropagationStatus> delete(Long subjectId);\n+    List<PropagationStatus> delete(Long subjectId);\n \n-    public Long unlink(M subjectMod);\n+    Long unlink(M subjectMod);\n \n-    public Long link(M subjectMod);\n+    Long link(M subjectMod);\n \n-    public List<PropagationStatus> deprovision(Long user, Collection<String> resources);\n+    List<PropagationStatus> deprovision(Long user, Collection<String> resources);\n \n }"},{"sha":"df58543ba7901617f23d038b4b16290369e78f90","filename":"core/src/main/java/org/apache/syncope/core/provisioning/RoleProvisioningManager.java","status":"modified","additions":18,"deletions":16,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FRoleProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FRoleProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FRoleProvisioningManager.java?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -1,17 +1,20 @@\n /*\n- * Copyright 2013 The Apache Software Foundation.\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n  */\n package org.apache.syncope.core.provisioning;\n \n@@ -21,15 +24,14 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.to.PropagationStatus;\n-import org.apache.syncope.core.propagation.PropagationException;\n \n public interface RoleProvisioningManager extends ProvisioningManager<RoleTO, RoleMod> {\n \n-    public Map.Entry<Long, List<PropagationStatus>> create(final RoleTO roleTO, Set<String> excludedResources);\n+    Map.Entry<Long, List<PropagationStatus>> create(RoleTO roleTO, Set<String> excludedResources);\n \n-    public Map.Entry<Long, List<PropagationStatus>> createInSync(final RoleTO roleTO, Map<Long, String> roleOwnerMap,\n-            Set<String> excludedResources) throws PropagationException;\n+    Map.Entry<Long, List<PropagationStatus>> create(\n+            RoleTO roleTO, Map<Long, String> roleOwnerMap, Set<String> excludedResources);\n \n-    public Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<String> excludedResources);\n+    Map.Entry<Long, List<PropagationStatus>> update(RoleMod subjectMod, Set<String> excludedResources);\n \n }"},{"sha":"57d8aecdd6d2466020bcf140f7f60c65646c5d28","filename":"core/src/main/java/org/apache/syncope/core/provisioning/UserProvisioningManager.java","status":"modified","additions":27,"deletions":25,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2FUserProvisioningManager.java?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -1,25 +1,27 @@\n /*\n- * Copyright 2013 The Apache Software Foundation.\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n  */\n package org.apache.syncope.core.provisioning;\n \n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.common.mod.StatusMod;\n-import org.apache.syncope.core.workflow.WorkflowResult;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.PropagationStatus;\n@@ -28,28 +30,28 @@\n \n public interface UserProvisioningManager extends ProvisioningManager<UserTO, UserMod> {\n \n-    public Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, StatusMod statusMod);\n+    Map.Entry<Long, List<PropagationStatus>> activate(SyncopeUser user, StatusMod statusMod);\n \n-    public Map.Entry<Long, List<PropagationStatus>> reactivate(SyncopeUser user, StatusMod statusMod);\n+    Map.Entry<Long, List<PropagationStatus>> reactivate(SyncopeUser user, StatusMod statusMod);\n \n-    public Map.Entry<Long, List<PropagationStatus>> suspend(SyncopeUser user, StatusMod statusMod);\n+    Map.Entry<Long, List<PropagationStatus>> suspend(SyncopeUser user, StatusMod statusMod);\n \n-    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword);\n+    void innerSuspend(SyncopeUser user, boolean propagate);\n \n-    public Map.Entry<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword,\n-            boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources);\n+    Map.Entry<Long, List<PropagationStatus>> create(UserTO userTO, boolean storePassword);\n \n-    public Map.Entry<Long, List<PropagationStatus>> update(final UserMod userMod, final boolean removeMemberships);\n+    Map.Entry<Long, List<PropagationStatus>> create(UserTO userTO, boolean storePassword,\n+            boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources);\n \n-    public Map.Entry<Long, List<PropagationStatus>> updateInSync(final UserMod userMod, final Long id,\n-            final SyncResult result, Boolean enabled, Set<String> excludedResources);\n+    Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, boolean removeMemberships);\n \n-    public List<PropagationStatus> delete(Long subjectId, Set<String> excludedResources);\n+    Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, Long id,\n+            SyncResult result, Boolean enabled, Set<String> excludedResources);\n \n-    public void innerSuspend(SyncopeUser user, boolean suspend);\n+    List<PropagationStatus> delete(Long subjectKey, Set<String> excludedResources);\n \n-    public void requestPasswordReset(final Long id);\n+    void requestPasswordReset(Long id);\n \n-    public void confirmPasswordReset(SyncopeUser user, final String token, final String password);\n+    void confirmPasswordReset(SyncopeUser user, String token, String password);\n \n }"},{"sha":"6e75771c220e2cd8158746010d266f6e87c82b1e","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/CamelRoleProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -168,7 +168,7 @@ public Map.Entry<Long, List<PropagationStatus>> create(RoleTO roleTO, Set<String\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Map.Entry<Long, List<PropagationStatus>> createInSync(RoleTO roleTO, Map<Long, String> roleOwnerMap,\n+    public Map.Entry<Long, List<PropagationStatus>> create(RoleTO roleTO, Map<Long, String> roleOwnerMap,\n             Set<String> excludedResources) throws PropagationException {\n \n         String uri = \"direct:createRoleSyncPort\";"},{"sha":"9ad7396ee79fd936e45cc67990882049d2fa0cb7","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -396,7 +396,7 @@ public List<PropagationStatus> deprovision(Long user, Collection<String> resourc\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Map.Entry<Long, List<PropagationStatus>> updateInSync(UserMod userMod, Long id, SyncResult result,\n+    public Map.Entry<Long, List<PropagationStatus>> update(UserMod userMod, Long id, SyncResult result,\n             Boolean enabled, Set<String> excludedResources) {\n \n         String uri = \"direct:updateSyncPort\";"},{"sha":"9ac80569895099cbef74c1feff3a7af99454a310","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/RoleSyncResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -86,7 +86,7 @@ protected AbstractSubjectTO create(\n \n         RoleTO roleTO = RoleTO.class.cast(subjectTO);\n \n-        Map.Entry<Long, List<PropagationStatus>> created = roleProvisioningManager.createInSync(roleTO, roleOwnerMap,\n+        Map.Entry<Long, List<PropagationStatus>> created = roleProvisioningManager.create(roleTO, roleOwnerMap,\n                 Collections.singleton(profile.getSyncTask().getResource().getName()));\n \n         roleTO = roleDataBinder.getRoleTO(created.getKey());"},{"sha":"d539fe533a7c16db7ff0acbc80cc9391cf29fa21","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/UserSyncResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -164,7 +164,7 @@ protected AbstractSubjectTO update(\n          *\n          * taskExecutor.execute(tasks); */\n \n-        Map.Entry<Long, List<PropagationStatus>> updated = userProvisioningManager.updateInSync(userMod, before.getId(),\n+        Map.Entry<Long, List<PropagationStatus>> updated = userProvisioningManager.update(userMod, before.getId(),\n                 result, enabled, Collections.singleton(profile.getSyncTask().getResource().getName()));\n \n         return userDataBinder.getUserTO(updated.getKey());"},{"sha":"772fa35a5a5c60c9a1573dba7865f007a6c1cf93","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/184b89f8d84095f51b5d48292fbd70350a3a8ec1/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/184b89f8d84095f51b5d48292fbd70350a3a8ec1/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=184b89f8d84095f51b5d48292fbd70350a3a8ec1","patch":"@@ -359,7 +359,7 @@ under the License.\n     <h2.version>1.4.184</h2.version>\n \n     <log4j.version>2.1</log4j.version>\n-    <slf4j.version>1.7.9</slf4j.version>\n+    <slf4j.version>1.7.10</slf4j.version>\n     <disruptor.version>3.3.0</disruptor.version>\n \n     <junit.version>4.11</junit.version>"}]}