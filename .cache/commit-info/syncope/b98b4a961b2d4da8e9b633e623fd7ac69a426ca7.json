{"sha":"b98b4a961b2d4da8e9b633e623fd7ac69a426ca7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI5OGI0YTk2MWIyZDRkYThlOWI2MzNlNjIzZmQ3YWM2OWE0MjZjYTc=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-09-05T08:44:14Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-09-05T08:44:14Z"},"message":"[SYNCOPE-545] merge from branch 1.2.X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1622641 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3f2dab826089c16da5662e587fa7370de79b76c3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3f2dab826089c16da5662e587fa7370de79b76c3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b98b4a961b2d4da8e9b633e623fd7ac69a426ca7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b98b4a961b2d4da8e9b633e623fd7ac69a426ca7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b98b4a961b2d4da8e9b633e623fd7ac69a426ca7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b98b4a961b2d4da8e9b633e623fd7ac69a426ca7/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"ca4d36be25980a8ff8f76b77dc3de2e93f425c7c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca4d36be25980a8ff8f76b77dc3de2e93f425c7c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca4d36be25980a8ff8f76b77dc3de2e93f425c7c"},{"sha":"e760b9ce9af18e61003717823626a5aa3b670b24","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e760b9ce9af18e61003717823626a5aa3b670b24","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e760b9ce9af18e61003717823626a5aa3b670b24"}],"stats":{"total":38,"additions":18,"deletions":20},"files":[{"sha":"0fc74369e1c0dcd094d143309a670a13cf9b9e8b","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/DateTimeFieldPanel.java","status":"modified","additions":18,"deletions":20,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b98b4a961b2d4da8e9b633e623fd7ac69a426ca7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b98b4a961b2d4da8e9b633e623fd7ac69a426ca7/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java?ref=b98b4a961b2d4da8e9b633e623fd7ac69a426ca7","patch":"@@ -52,12 +52,11 @@ public DateTimeFieldPanel(final String id, final String name, final IModel<Date>\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                if (((DateTimeField) field).getHours() > 12) {\n-                    cal.set(Calendar.HOUR_OF_DAY, ((DateTimeField) field).getHours());\n-                } else {\n-                    cal.set(Calendar.HOUR, ((DateTimeField) field).getHours());\n+                final Integer hours = ((DateTimeField) field).getHours();\n+                if (hours != null) {\n+                    cal.set(hours > 12 ? Calendar.HOUR_OF_DAY : Calendar.HOUR, hours);\n+                    field.setModelObject(cal.getTime());\n                 }\n-                field.setModelObject(cal.getTime());\n             }\n         });\n \n@@ -67,8 +66,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                cal.set(Calendar.MINUTE, ((DateTimeField) field).getMinutes());\n-                field.setModelObject(cal.getTime());\n+                final Integer minutes = ((DateTimeField) field).getMinutes();\n+                if (minutes != null) {\n+                    cal.set(Calendar.MINUTE, minutes);\n+                    field.setModelObject(cal.getTime());\n+                }\n             }\n         });\n \n@@ -78,15 +80,15 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                cal.setTime(((DateTimeField) field).getDate());\n-\n-                if (\"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm())) {\n-                    cal.set(Calendar.AM_PM, Calendar.PM);\n+                final Date date = ((DateTimeField) field).getDate();\n+                if (date == null) {\n+                    field.setModelObject(null);\n                 } else {\n-                    cal.set(Calendar.AM_PM, Calendar.AM);\n+                    cal.setTime(date);\n+                    cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm()) ? Calendar.PM\n+                            : Calendar.AM);\n+                    field.setModelObject(cal.getTime());\n                 }\n-\n-                field.setModelObject(cal.getTime());\n             }\n         });\n \n@@ -96,12 +98,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                if (\"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm())) {\n-                    cal.set(Calendar.AM_PM, Calendar.PM);\n-                } else {\n-                    cal.set(Calendar.AM_PM, Calendar.AM);\n-                }\n-\n+                cal.set(Calendar.AM_PM, \"PM\".equals(\"\" + ((DateTimeField) field).getAmOrPm()) ? Calendar.PM\n+                        : Calendar.AM);\n                 field.setModelObject(cal.getTime());\n             }\n         });"}]}