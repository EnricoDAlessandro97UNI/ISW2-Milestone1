{"sha":"89e6c7427fcdb5b369fe478ee777b6371a4fd92d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg5ZTZjNzQyN2ZjZGI1YjM2OWZlNDc4ZWU3NzdiNjM3MWE0ZmQ5MmQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-20T11:53:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-20T11:53:01Z"},"message":"Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1543795 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0ad6b300e07c74b1a9fecc6971a28aa510b05e23","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0ad6b300e07c74b1a9fecc6971a28aa510b05e23"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/89e6c7427fcdb5b369fe478ee777b6371a4fd92d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/89e6c7427fcdb5b369fe478ee777b6371a4fd92d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/89e6c7427fcdb5b369fe478ee777b6371a4fd92d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"140b3d3325c0fe21f5e3c445108bbe2e4bf6dacb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/140b3d3325c0fe21f5e3c445108bbe2e4bf6dacb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/140b3d3325c0fe21f5e3c445108bbe2e4bf6dacb"},{"sha":"a65dd584746a9065c06fc1c6053312222b5f529f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a65dd584746a9065c06fc1c6053312222b5f529f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a65dd584746a9065c06fc1c6053312222b5f529f"}],"stats":{"total":46,"additions":32,"deletions":14},"files":[{"sha":"3854a428a39bcae6143f139a25120ea1aa5cd4a2","filename":"core/pom.xml","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=89e6c7427fcdb5b369fe478ee777b6371a4fd92d","patch":"@@ -828,7 +828,7 @@ under the License.\n         <defaultGoal>clean verify</defaultGoal>\n         \n         <plugins>\n-          <!-- Strip Activiti-related entries from content.xml -->\n+          <!-- Strip Activiti-related entries from content.xml and indexes.xml -->\n           <plugin>\n             <groupId>org.codehaus.mojo</groupId>\n             <artifactId>xml-maven-plugin</artifactId>\n@@ -848,6 +848,7 @@ under the License.\n                   <dir>${project.build.directory}/test-classes</dir>\n                   <includes>\n                     <include>content.xml</include>\n+                    <include>indexes.xml</include>\n                   </includes>\n                   <outputDir>${project.build.directory}/test-classes/</outputDir>\n                   <stylesheet>${basedir}/src/test/resources/noopworkflow/stripActivitiFromContent.xsl</stylesheet>\n@@ -863,24 +864,24 @@ under the License.\n           </plugin>\n         </plugins>\n         \n-        <testResources>\n-          <testResource>\n-            <directory>src/test/resources</directory>\n+        <resources>\n+          <resource>\n+            <directory>src/main/resources</directory>\n             <filtering>true</filtering>\n             <excludes>\n               <exclude>workflowContext.xml</exclude>\n               <exclude>workflow.properties</exclude>\n             </excludes>\n-          </testResource>\n-          <testResource>\n+          </resource>\n+          <resource>\n             <directory>src/test/resources/noopworkflow</directory>\n             <filtering>true</filtering>\n             <includes>\n               <include>workflowContext.xml</include>\n               <include>workflow.properties</include>\n             </includes>\n-          </testResource>\n-        </testResources>\n+          </resource>\n+        </resources>\n       </build>\n     </profile>\n "},{"sha":"a5b9c3f608a3a24d8a527eb379f23b462393634b","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java?ref=89e6c7427fcdb5b369fe478ee777b6371a4fd92d","patch":"@@ -25,6 +25,7 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.to.WorkflowFormTO;\n@@ -111,7 +112,13 @@ protected WorkflowResult<Long> doActivate(final SyncopeUser user, final String t\n     protected WorkflowResult<Map.Entry<UserMod, Boolean>> doUpdate(final SyncopeUser user, final UserMod userMod)\n             throws WorkflowException {\n \n-        PropagationByResource propByRes = dataBinder.update(user, userMod);\n+        // update password internally only if required\n+        UserMod actualMod = SerializationUtils.clone(userMod);\n+        if (actualMod.getPwdPropRequest() != null && !actualMod.getPwdPropRequest().isOnSyncope()) {\n+            actualMod.setPassword(null);\n+        }\n+        // update SyncopeUser\n+        PropagationByResource propByRes = dataBinder.update(user, actualMod);\n \n         SyncopeUser updated = userDAO.save(user);\n "},{"sha":"11f7694236630e8c9c2cbc7066ed5fc58a56a7c6","filename":"core/src/main/resources/syncopeContext.xml","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml?ref=89e6c7427fcdb5b369fe478ee777b6371a4fd92d","patch":"@@ -53,7 +53,9 @@ under the License.\n   <context:component-scan base-package=\"org.apache.syncope.core.audit\"/>\n   <context:component-scan base-package=\"org.apache.syncope.core.connid\"/>\n   <context:component-scan base-package=\"org.apache.syncope.core.rest.data\"/>\n-  <context:component-scan base-package=\"org.apache.syncope.core.workflow\"/>\n+  <context:component-scan base-package=\"org.apache.syncope.core.workflow\">\n+    <context:exclude-filter type=\"regex\" expression=\".*\\.activiti\\..*\"/>\n+  </context:component-scan>\n \n   <bean id=\"nonJPAdbInitializer\" class=\"org.springframework.jdbc.datasource.init.DataSourceInitializer\">\n     <property name=\"dataSource\" ref=\"dataSource\"/>"},{"sha":"30b5638bebf56b7dcb825e9ef1619e27e03ec906","filename":"core/src/test/java/org/apache/syncope/core/rest/UserSelfTestITCase.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserSelfTestITCase.java?ref=89e6c7427fcdb5b369fe478ee777b6371a4fd92d","patch":"@@ -40,6 +40,8 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientException;\n+import org.apache.syncope.core.workflow.ActivitiDetector;\n+import org.junit.Assume;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -54,6 +56,8 @@ public void selfRegistrationAllowed() {\n \n     @Test\n     public void create() {\n+        Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n+        \n         // 1. self-registration as admin: failure\n         try {\n             userSelfService.create(UserTestITCase.getUniqueSampleTO(\"anonymous@syncope.apache.org\"));\n@@ -73,6 +77,8 @@ public void create() {\n \n     @Test\n     public void createAndApprove() {\n+        Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n+\n         // self-create user with membership: goes 'createApproval' with resources and membership but no propagation\n         UserTO userTO = UserTestITCase.getUniqueSampleTO(\"anonymous@syncope.apache.org\");\n         MembershipTO membership = new MembershipTO();\n@@ -139,12 +145,14 @@ public void updateWithoutApproval() {\n         UserTO updated = authClient.getService(UserSelfService.class).update(created.getId(), userMod).\n                 readEntity(UserTO.class);\n         assertNotNull(updated);\n-        assertEquals(\"active\", updated.getStatus());\n+        assertEquals(ActivitiDetector.isActivitiEnabledForUsers()? \"active\": \"created\", updated.getStatus());\n         assertTrue(updated.getUsername().endsWith(\"XX\"));\n     }\n \n     @Test\n     public void updateWitApproval() {\n+        Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n+\n         // 1. create user as admin\n         UserTO created = createUser(UserTestITCase.getUniqueSampleTO(\"anonymous@syncope.apache.org\"));\n         assertNotNull(created);\n@@ -210,7 +218,7 @@ public void delete() {\n         SyncopeClient authClient = clientFactory.create(created.getUsername(), \"password123\");\n         UserTO deleted = authClient.getService(UserSelfService.class).delete().readEntity(UserTO.class);\n         assertNotNull(deleted);\n-        assertEquals(\"deleteApproval\", deleted.getStatus());\n+        assertEquals(ActivitiDetector.isActivitiEnabledForUsers()? \"deleteApproval\": null, deleted.getStatus());\n     }\n \n     @Test"},{"sha":"f30ebb11c2ccde66a8607cf371aa99b558c1cc73","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=89e6c7427fcdb5b369fe478ee777b6371a4fd92d","patch":"@@ -1628,7 +1628,7 @@ public void issueSYNCOPE279() {\n     @Test\n     public void issueSYNCOPE122() {\n         // 1. create user on testdb and testdb2\n-        UserTO userTO = getUniqueSampleTO(\"syncope123@apache.org\");\n+        UserTO userTO = getUniqueSampleTO(\"syncope122@apache.org\");\n         userTO.getResources().clear();\n         userTO.getResources().add(RESOURCE_NAME_TESTDB);\n         userTO.getResources().add(\"resource-testdb2\");"},{"sha":"d6b4c55d2a67ef33b4d6581ba8a3bcc941f59da1","filename":"core/src/test/resources/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/89e6c7427fcdb5b369fe478ee777b6371a4fd92d/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=89e6c7427fcdb5b369fe478ee777b6371a4fd92d","patch":"@@ -31,7 +31,7 @@ under the License.\n   <SyncopeConf confKey=\"selfRegistration.allowed\" confValue=\"true\"/>\n   <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"3\"/>\n   <!-- when needing to provide more values, use '|' as separator and no spaces -->\n-  <SyncopeConf confKey=\"authentication.statuses\" confValue=\"active\"/>\n+  <SyncopeConf confKey=\"authentication.statuses\" confValue=\"created|active\"/>\n \n   <!-- sample policies -->\n   <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"sync policy 1\" type=\"GLOBAL_SYNC\" specification=\"%3Corg.apache.syncope.common.types.SyncPolicySpec%2F%3E\"/>"}]}