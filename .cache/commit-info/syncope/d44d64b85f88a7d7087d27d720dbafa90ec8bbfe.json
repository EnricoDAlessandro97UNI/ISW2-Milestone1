{"sha":"d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ0NGQ2NGI4NWY4OGE3ZDcwODdkMjdkNzIwZGJhZmE5MGVjOGJiZmU=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-11-15T11:03:47Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-11-15T11:03:47Z"},"message":"SYNCOPE436 Read-only virtual attribute values not retrieved from external resource\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1542229 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c98f22902a49a5ac2f93665954930c2362355751","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c98f22902a49a5ac2f93665954930c2362355751"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"6fc66e149196d80cf614c9d845596493e4fcd491","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6fc66e149196d80cf614c9d845596493e4fcd491","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6fc66e149196d80cf614c9d845596493e4fcd491"}],"stats":{"total":107,"additions":85,"deletions":22},"files":[{"sha":"51877a904bfe24011f58e3026d78edaaca0dcdd1","filename":"build-tools/src/main/resources/content.ldif","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif?ref=d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","patch":"@@ -43,3 +43,4 @@ mail: syncFromLDAP@syncope.apache.org\n sn: Surname\n uid: syncFromLDAP\n userpassword:: cGFzc3dvcmQxMjM=\n+givenname: syncFromLDAP"},{"sha":"c4dc12e2040dc70188f4f7946e0e63f282de96b3","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","patch":"@@ -26,8 +26,6 @@\n import java.util.List;\n import java.util.Set;\n import javax.validation.ValidationException;\n-import org.apache.commons.jexl2.JexlContext;\n-import org.apache.commons.jexl2.MapContext;\n import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.mod.AbstractAttributableMod;\n import org.apache.syncope.common.mod.AttributeMod;\n@@ -155,13 +153,9 @@ private <T extends AbstractVirSchema> T getVirtualSchema(final String virSchemaN\n \n             if (virtualSchema == null) {\n                 LOG.debug(\"Ignoring invalid virtual schema {}\", virSchemaName);\n-            } else if (virtualSchema.isReadonly()) {\n-                virtualSchema = null;\n-\n-                LOG.debug(\"Ignoring readonly virtual schema {}\", virtualSchema);\n             }\n         }\n-\n+        \n         return virtualSchema;\n     }\n "},{"sha":"4d5ddfdf77d7547a97a68d39f00e5c068fe46012","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":16,"deletions":4,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","patch":"@@ -32,6 +32,8 @@\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n+import static org.apache.syncope.common.types.IntMappingType.RoleVirtualSchema;\n+import static org.apache.syncope.common.types.IntMappingType.UserVirtualSchema;\n import org.apache.syncope.core.connid.PasswordGenerator;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n@@ -40,6 +42,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractSchema;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n import org.apache.syncope.core.persistence.beans.membership.MSchema;\n@@ -55,6 +58,7 @@\n import org.apache.syncope.core.persistence.beans.user.USchema;\n import org.apache.syncope.core.persistence.beans.user.UVirSchema;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n+import org.apache.syncope.core.persistence.dao.VirSchemaDAO;\n import org.identityconnectors.framework.common.FrameworkUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n@@ -163,17 +167,27 @@ public static <T extends AbstractAttributable> Map.Entry<String, Attribute> prep\n \n         AbstractSchema schema = null;\n         AttributeSchemaType schemaType;\n+        Map.Entry<String, Attribute> result = null;\n+        final ConfigurableApplicationContext context = ApplicationContextProvider.getApplicationContext();\n         switch (mapItem.getIntMappingType()) {\n             case UserSchema:\n             case RoleSchema:\n             case MembershipSchema:\n-                final ConfigurableApplicationContext context = ApplicationContextProvider.getApplicationContext();\n                 final SchemaDAO schemaDAO = context.getBean(SchemaDAO.class);\n                 schema = schemaDAO.find(mapItem.getIntAttrName(),\n                         MappingUtil.getIntMappingTypeClass(mapItem.getIntMappingType()));\n                 schemaType = schema == null ? AttributeSchemaType.String : schema.getType();\n                 break;\n-\n+            case UserVirtualSchema:\n+            case RoleVirtualSchema:\n+                final VirSchemaDAO virSchemaDAO = context.getBean(VirSchemaDAO.class);\n+                final AbstractVirSchema virSchema = virSchemaDAO.find(mapItem.getIntAttrName(),\n+                        MappingUtil.getIntMappingTypeClass(mapItem.getIntMappingType()));\n+                if (virSchema.isReadonly()) {\n+                    return result;\n+                }\n+                schemaType = AttributeSchemaType.String;\n+                break;\n             default:\n                 schemaType = AttributeSchemaType.String;\n         }\n@@ -200,8 +214,6 @@ public static <T extends AbstractAttributable> Map.Entry<String, Attribute> prep\n             }\n         }\n \n-        Map.Entry<String, Attribute> result;\n-\n         if (mapItem.isAccountid()) {\n             result = new AbstractMap.SimpleEntry<String, Attribute>(objValues.iterator().next().toString(), null);\n         } else if (mapItem.isPassword() && subject instanceof SyncopeUser) {"},{"sha":"8863b5494de4517f4929b3c735cea5839c4299ce","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/VirSchemaTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java?ref=d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","patch":"@@ -43,7 +43,7 @@ public class VirSchemaTest extends AbstractDAOTest {\n     @Test\n     public void findAll() {\n         List<UVirSchema> list = virSchemaDAO.findAll(UVirSchema.class);\n-        assertEquals(1, list.size());\n+        assertEquals(2, list.size());\n     }\n \n     @Test"},{"sha":"a21f72dd7862a240ae56eeecd3c10983530ca1cf","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":46,"deletions":7,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","patch":"@@ -57,6 +57,7 @@\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.types.TraceLevel;\n+import static org.apache.syncope.core.rest.AbstractTest.attributeTO;\n import org.apache.syncope.core.sync.TestSyncActions;\n import org.apache.syncope.core.sync.TestSyncRule;\n import org.apache.syncope.core.sync.impl.SyncJob;\n@@ -380,19 +381,26 @@ public void reconcileFromLDAP()\n         SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, 11L);\n         assertNotNull(task);\n \n-        //  add user template\n-        RoleTO template = new RoleTO();\n-        template.setParent(8L);\n-        template.addAttribute(attributeTO(\"show\", \"'true'\"));\n+        //  add role template\n+        final UserTO userTemplate = task.getUserTemplate();\n+        userTemplate.setResources(Collections.singleton(\"resource-ldap\"));\n+        userTemplate.addVirtualAttribute(attributeTO(\"virtualReadOnly\", \"\"));\n+\n+        task.setUserTemplate(userTemplate);\n+        \n+        //  add role template\n+        final RoleTO roleTemplate = new RoleTO();\n+        roleTemplate.setParent(8L);\n+        roleTemplate.addAttribute(attributeTO(\"show\", \"'true'\"));\n \n-        task.setRoleTemplate(template);\n+        task.setRoleTemplate(roleTemplate);\n \n         taskService.update(task.getId(), task);\n         SyncTaskTO actual = taskService.read(TaskType.SYNCHRONIZATION, task.getId());\n         assertNotNull(actual);\n         assertEquals(task.getId(), actual.getId());\n-        assertEquals(template, actual.getRoleTemplate());\n-        assertEquals(new UserTO(), actual.getUserTemplate());\n+        assertEquals(roleTemplate, actual.getRoleTemplate());\n+        assertEquals(userTemplate, actual.getUserTemplate());\n \n         TaskExecTO execution = execSyncTask(actual.getId(), 20, false);\n \n@@ -929,4 +937,35 @@ public void removeTestUsers() {\n             }\n         }\n     }\n+\n+    @Test\n+    public void issueSYNCOPE436() throws InvalidSearchConditionException {\n+\n+        SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, 11L);\n+        assertNotNull(task);\n+\n+        final UserTO template = task.getUserTemplate();\n+        template.setResources(Collections.singleton(\"resource-ldap\"));\n+        template.addVirtualAttribute(attributeTO(\"virtualReadOnly\", \"\"));\n+        task.setUserTemplate(template);\n+\n+        taskService.update(task.getId(), task);\n+        TaskExecTO execution = execSyncTask(11L, 50, false);\n+\n+        final String status = execution.getStatus();\n+        assertNotNull(status);\n+        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+\n+        final AttributableCond usernameLeafCond = new AttributableCond(AttributeCond.Type.EQ);\n+        usernameLeafCond.setSchema(\"username\");\n+        usernameLeafCond.setExpression(\"syncFromLDAP\");\n+\n+        final List<UserTO> matchingUsers = userService.search(NodeCond.getLeafCond(usernameLeafCond));\n+        assertNotNull(matchingUsers);\n+        assertEquals(1, matchingUsers.size());\n+\n+        final UserTO syncUser = matchingUsers.iterator().next();\n+        final AttributeTO virAttributeTO = syncUser.getVirtualAttributeMap().get(\"virtualReadOnly\");\n+        assertEquals(\"syncFromLDAP\", virAttributeTO.getValues().get(0));\n+    }\n }\n\\ No newline at end of file"},{"sha":"ff17688d64c6260aa78ea9a7996de401f21fa6dc","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","patch":"@@ -2281,13 +2281,13 @@ public void issueSYNCOPE397() {\n         //modify virtual attribute\n         userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n         userMod.addVirtualAttributeToBeUpdated(attributeMod(\"virtualdata\", \"test@testoneone.com\"));\n-        \n+\n         // check Syncope change password\n         PropagationRequestTO pwdPropRequest = new PropagationRequestTO();\n         pwdPropRequest.setOnSyncope(true);\n         pwdPropRequest.addResource(\"ws-target-resource-2\");\n         userMod.setPwdPropRequest(pwdPropRequest);\n-        \n+\n         toBeUpdated = userService.update(userMod.getId(), userMod);\n         assertNotNull(toBeUpdated);\n         assertEquals(\"test@testoneone.com\", toBeUpdated.getVirtualAttributes().get(0).getValues().get(0));\n@@ -2382,6 +2382,18 @@ public void issueSYNCOPE435() {\n                 startsWith(\"Not attempted because there are mandatory attributes without value(s): [__PASSWORD__]\"));\n     }\n \n+    @Test\n+    public void issueSYNCOPE436() {\n+        UserTO userTO = getUniqueSampleTO(\"syncope436@syncope.apache.org\");\n+        userTO.getMemberships().clear();\n+        userTO.getResources().clear();\n+        userTO.addResource(RESOURCE_NAME_LDAP);\n+        userTO.addVirtualAttribute(attributeTO(\"virtualReadOnly\", \"readOnly\"));\n+        userTO = createUser(userTO);\n+        //Finding no values because the virtual attribute is readonly \n+        assertTrue(userTO.getVirtualAttributeMap().get(\"virtualReadOnly\").getValues().isEmpty());\n+    }\n+\n     private boolean getBooleanAttribute(final ConnObjectTO connObjectTO, final String attrName) {\n         return Boolean.parseBoolean(getStringAttribute(connObjectTO, attrName));\n     }"},{"sha":"28fdbe9c7c93abf75c0ac1802f70887e2c5a6f0f","filename":"core/src/test/resources/content.xml","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d44d64b85f88a7d7087d27d720dbafa90ec8bbfe/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=d44d64b85f88a7d7087d27d720dbafa90ec8bbfe","patch":"@@ -269,9 +269,11 @@ under the License.\n     \n   <MDerSchema name=\"mderToBePropagated\" expression=\"mderived_sx + '-' + mderived_dx\"/>\n \n-  <UVirSchema name=\"virtualdata\"/>\n+  <UVirSchema name=\"virtualdata\" READONLY=\"0\"/>\n   <UVirAttr id=\"1000\" virtualSchema_name=\"virtualdata\" owner_id=\"3\"/>\n \n+  <UVirSchema name=\"virtualReadOnly\" READONLY=\"1\"/>\n+  \n   <UDerSchema name=\"cn\" expression=\"surname + ', ' + firstname\"/>\n   <UDerAttr id=\"100\" derivedSchema_name=\"cn\" owner_id=\"3\"/>\n   <UDerAttr id=\"101\" derivedSchema_name=\"cn\" owner_id=\"1\"/>\n@@ -627,6 +629,9 @@ under the License.\n   <UMappingItem id=\"318\" accountid=\"0\" password=\"0\" mapping_id=\"11\"\n                 extAttrName=\"mail\" intAttrName=\"userId\" intMappingType=\"UserSchema\"\n                 mandatoryCondition=\"false\" purpose=\"BOTH\"/>\n+  <UMappingItem id=\"319\" accountid=\"0\" password=\"0\" mapping_id=\"11\"\n+                extAttrName=\"givenname\" intAttrName=\"virtualReadOnly\" intMappingType=\"UserVirtualSchema\"\n+                mandatoryCondition=\"false\" purpose=\"BOTH\"/>\n   <RMapping id=\"1\" resource_name=\"resource-ldap\"\n             accountlink=\"&apos;cn=&apos; + name + &apos;,ou=groups,o=isp&apos;\"/>\n   <RMappingItem id=\"1\" accountid=\"1\" password=\"0\" mapping_id=\"1\""}]}