{"sha":"1ac7ccc16f2210c5552bc2c2ac97d85545400cf6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFhYzdjY2MxNmYyMjEwYzU1NTJiYzJjMmFjOTdkODU1NDU0MDBjZjY=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-11-18T16:40:25Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-11-18T16:40:25Z"},"message":"SYNCOPE-436 Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1543073 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3a24cf8d49bd799b4146f1616b675643f1621fa8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3a24cf8d49bd799b4146f1616b675643f1621fa8"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1ac7ccc16f2210c5552bc2c2ac97d85545400cf6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1ac7ccc16f2210c5552bc2c2ac97d85545400cf6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1ac7ccc16f2210c5552bc2c2ac97d85545400cf6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1ac7ccc16f2210c5552bc2c2ac97d85545400cf6/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1"}],"stats":{"total":35,"additions":3,"deletions":32},"files":[{"sha":"5bc1e8c07f12a3a34527c5a23caf81fb6e2ab4fe","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":3,"deletions":32,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1ac7ccc16f2210c5552bc2c2ac97d85545400cf6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1ac7ccc16f2210c5552bc2c2ac97d85545400cf6/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=1ac7ccc16f2210c5552bc2c2ac97d85545400cf6","patch":"@@ -394,7 +394,7 @@ public void reconcileFromLDAP()\n         SyncTaskTO task = taskService.read(11L);\n         assertNotNull(task);\n         \n-        //  add role template\n+        //  add user template\n         final UserTO userTemplate = task.getUserTemplate();\n         userTemplate.getResources().add(\"resource-ldap\");\n         userTemplate.getVirAttrs().add(attributeTO(\"virtualReadOnly\", \"\"));\n@@ -437,6 +437,8 @@ public void reconcileFromLDAP()\n         final List<UserTO> matchingUsers = userService.search(NodeCond.getLeafCond(usernameLeafCond));\n         assertNotNull(matchingUsers);\n         assertEquals(1, matchingUsers.size());\n+        // Check for SYNCOPE-436\n+        assertEquals(\"syncFromLDAP\", matchingUsers.get(0).getVirAttrMap().get(\"virtualReadOnly\").getValues().get(0));\n \n         final RoleTO roleTO = matchingRoles.iterator().next();\n         assertNotNull(roleTO);\n@@ -931,35 +933,4 @@ public void bulkAction() {\n \n         assertFalse(taskService.list(TaskType.PROPAGATION).containsAll(after));\n     }\n-\n-    @Test\n-    public void issueSYNCOPE436() throws InvalidSearchConditionException {\n-\n-        SyncTaskTO task = taskService.read(11L);\n-        assertNotNull(task);\n-\n-        final UserTO template = task.getUserTemplate();\n-        template.getResources().add(\"resource-ldap\");\n-        template.getVirAttrs().add(attributeTO(\"virtualReadOnly\", \"\"));\n-        task.setUserTemplate(template);\n-\n-        taskService.update(task.getId(), task);\n-        TaskExecTO execution = execSyncTask(11L, 50, false);\n-\n-        final String status = execution.getStatus();\n-        assertNotNull(status);\n-        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n-\n-        final AttributableCond usernameLeafCond = new AttributableCond(AttributeCond.Type.EQ);\n-        usernameLeafCond.setSchema(\"username\");\n-        usernameLeafCond.setExpression(\"syncFromLDAP\");\n-\n-        final List<UserTO> matchingUsers = userService.search(NodeCond.getLeafCond(usernameLeafCond));\n-        assertNotNull(matchingUsers);\n-        assertEquals(1, matchingUsers.size());\n-\n-        final UserTO syncUser = matchingUsers.iterator().next();\n-        final AttributeTO virAttributeTO = syncUser.getVirAttrMap().get(\"virtualReadOnly\");\n-        assertEquals(\"syncFromLDAP\", virAttributeTO.getValues().get(0));\n-    }\n }"}]}