{"sha":"dbd3a42bf44fce0912d7fba1624dca5ae778ae22","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRiZDNhNDJiZjQ0ZmNlMDkxMmQ3ZmJhMTYyNGRjYTVhZTc3OGFlMjI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-10-24T15:02:14Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-10-24T15:02:14Z"},"message":"Merge branch '1_2_X'","tree":{"sha":"b38a7de176608b31eab0906dd62857aa8313e147","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b38a7de176608b31eab0906dd62857aa8313e147"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dbd3a42bf44fce0912d7fba1624dca5ae778ae22","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbd3a42bf44fce0912d7fba1624dca5ae778ae22","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dbd3a42bf44fce0912d7fba1624dca5ae778ae22","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b56646a80b397fa9938564ce8a5fc03222ebf116","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b56646a80b397fa9938564ce8a5fc03222ebf116","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b56646a80b397fa9938564ce8a5fc03222ebf116"},{"sha":"0a768e4f9f95407e1ae9e370deda6789331f4dcb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0a768e4f9f95407e1ae9e370deda6789331f4dcb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0a768e4f9f95407e1ae9e370deda6789331f4dcb"}],"stats":{"total":591,"additions":284,"deletions":307},"files":[{"sha":"4113ff9fe2db7babf8a4f5d2d560134fcc36b477","filename":"common/src/main/java/org/apache/syncope/common/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -33,6 +33,7 @@ public enum ClientExceptionType {\n     InvalidConnInstance(Response.Status.BAD_REQUEST),\n     InvalidConnIdConf(Response.Status.BAD_REQUEST),\n     InvalidPolicy(Response.Status.BAD_REQUEST),\n+    InvalidSyncopeConf(Response.Status.BAD_REQUEST),\n     InvalidSyncopeRole(Response.Status.BAD_REQUEST),\n     InvalidReportExec(Response.Status.BAD_REQUEST),\n     InvalidRoles(Response.Status.BAD_REQUEST),"},{"sha":"38a51f86ecb421dcb48f1240b794c3747edcde32","filename":"console/src/main/java/org/apache/syncope/console/commons/AttrLayoutType.java","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttrLayoutType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttrLayoutType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttrLayoutType.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.commons;\n+\n+import org.apache.syncope.common.types.AttributableType;\n+\n+public enum AttrLayoutType {\n+\n+    ADMIN_USER(\"admin.user.layout\", Mode.ADMIN, AttributableType.USER),\n+    SELF_USER(\"self.user.layout\", Mode.SELF, AttributableType.USER),\n+    ADMIN_ROLE(\"admin.role.layout\", Mode.ADMIN, AttributableType.ROLE),\n+    SELF_ROLE(\"self.role.layout\", Mode.SELF, AttributableType.ROLE),\n+    ADMIN_MEMBERSHIP(\"admin.membership.layout\", Mode.ADMIN, AttributableType.MEMBERSHIP),\n+    SELF_MEMBERSHIP(\"self.membership.layout\", Mode.SELF, AttributableType.MEMBERSHIP);\n+\n+    private final String confKey;\n+\n+    private final Mode mode;\n+\n+    private final AttributableType attrType;\n+\n+    AttrLayoutType(final String confKey, final Mode mode, final AttributableType attrType) {\n+        this.confKey = confKey;\n+        this.mode = mode;\n+        this.attrType = attrType;\n+    }\n+\n+    public String getConfKey() {\n+        return confKey;\n+    }\n+\n+    public Mode getMode() {\n+        return mode;\n+    }\n+\n+    public AttributableType getAttrType() {\n+        return attrType;\n+    }\n+\n+    public static AttrLayoutType valueOf(final Mode mode, final AttributableType attrType) {\n+        AttrLayoutType result = null;\n+        if (mode == Mode.ADMIN) {\n+            switch (attrType) {\n+                case USER:\n+                    result = ADMIN_USER;\n+                    break;\n+\n+                case MEMBERSHIP:\n+                    result = ADMIN_MEMBERSHIP;\n+                    break;\n+\n+                case ROLE:\n+                    result = ADMIN_ROLE;\n+                    break;\n+\n+                default:\n+            }\n+        } else if (mode == Mode.SELF) {\n+            switch (attrType) {\n+                case USER:\n+                    result = SELF_USER;\n+                    break;\n+\n+                case MEMBERSHIP:\n+                    result = SELF_MEMBERSHIP;\n+                    break;\n+\n+                case ROLE:\n+                    result = SELF_ROLE;\n+                    break;\n+\n+                default:\n+            }\n+        }\n+\n+        if (result == null) {\n+            throw new IllegalArgumentException(\"Could not find any valid instance for \" + mode + \" and \" + attrType);\n+        }\n+\n+        return result;\n+    }\n+}"},{"sha":"057a1c685542fbc5a287ec3bfabd11b344770ab7","filename":"console/src/main/java/org/apache/syncope/console/commons/LayoutType.java","status":"removed","additions":0,"deletions":43,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56646a80b397fa9938564ce8a5fc03222ebf116/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FLayoutType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56646a80b397fa9938564ce8a5fc03222ebf116/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FLayoutType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FLayoutType.java?ref=b56646a80b397fa9938564ce8a5fc03222ebf116","patch":"@@ -1,43 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.console.commons;\n-\n-public enum LayoutType {\n-\n-    ADMIN_USER(\"admin.user.layout\"),\n-    SELF_USER(\"self.user.layout\"),\n-    ADMIN_ROLE(\"admin.role.layout\"),\n-    SELF_ROLE(\"self.role.layout\"),\n-    ADMIN_MEMBERSHIP(\"admin.membership.layout\"),\n-    SELF_MEMBERSHIP(\"self.membership.layout\");\n-\n-    private final String parameter;\n-\n-    LayoutType(final String parameter) {\n-        this.parameter = parameter;\n-    }\n-\n-    public String getParameter() {\n-        return parameter;\n-    }\n-\n-    public static LayoutType fromString(final String value) {\n-        return LayoutType.valueOf(value.toUpperCase());\n-    }\n-}"},{"sha":"fffe6573e5a6204eb7e2827adb9329e00b0de92a","filename":"console/src/main/java/org/apache/syncope/console/pages/Configuration.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -36,7 +36,7 @@\n import org.apache.syncope.common.to.LoggerTO;\n import org.apache.syncope.common.to.NotificationTO;\n import org.apache.syncope.common.to.SecurityQuestionTO;\n-import org.apache.syncope.console.commons.LayoutType;\n+import org.apache.syncope.console.commons.AttrLayoutType;\n import org.apache.syncope.common.types.LoggerLevel;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.console.commons.Constants;\n@@ -245,12 +245,12 @@ protected byte[] getImageData(final IResource.Attributes attributes) {\n                 \"Configuration\", \"logList\"));\n         add(consoleLoggerContainer);\n \n-        add(new LayoutsPanel(\"adminUserLayoutPanel\", LayoutType.ADMIN_USER, feedbackPanel));\n-        add(new LayoutsPanel(\"selfUserLayoutPanel\", LayoutType.SELF_USER, feedbackPanel));\n-        add(new LayoutsPanel(\"adminRoleLayoutPanel\", LayoutType.ADMIN_ROLE, feedbackPanel));\n-        add(new LayoutsPanel(\"selfRoleLayoutPanel\", LayoutType.SELF_ROLE, feedbackPanel));\n-        add(new LayoutsPanel(\"adminMembershipLayoutPanel\", LayoutType.ADMIN_MEMBERSHIP, feedbackPanel));\n-        add(new LayoutsPanel(\"selfMembershipLayoutPanel\", LayoutType.SELF_MEMBERSHIP, feedbackPanel));\n+        add(new LayoutsPanel(\"adminUserLayoutPanel\", AttrLayoutType.ADMIN_USER, feedbackPanel));\n+        add(new LayoutsPanel(\"selfUserLayoutPanel\", AttrLayoutType.SELF_USER, feedbackPanel));\n+        add(new LayoutsPanel(\"adminRoleLayoutPanel\", AttrLayoutType.ADMIN_ROLE, feedbackPanel));\n+        add(new LayoutsPanel(\"selfRoleLayoutPanel\", AttrLayoutType.SELF_ROLE, feedbackPanel));\n+        add(new LayoutsPanel(\"adminMembershipLayoutPanel\", AttrLayoutType.ADMIN_MEMBERSHIP, feedbackPanel));\n+        add(new LayoutsPanel(\"selfMembershipLayoutPanel\", AttrLayoutType.SELF_MEMBERSHIP, feedbackPanel));\n     }\n \n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n@@ -264,8 +264,8 @@ private void setupSyncopeConf() {\n \n         for (Iterator<AttributeTO> it = conf.getAttrs().iterator(); it.hasNext();) {\n             AttributeTO attr = it.next();\n-            for (LayoutType type : LayoutType.values()) {\n-                if (type.getParameter().equals(attr.getSchema())) {\n+            for (AttrLayoutType type : AttrLayoutType.values()) {\n+                if (type.getConfKey().equals(attr.getSchema())) {\n                     it.remove();\n                 }\n             }"},{"sha":"d01ec417630b5c994df8316ef0d036f8cd68644c","filename":"console/src/main/java/org/apache/syncope/console/pages/Login.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -170,8 +170,7 @@ public Page createPage() {\n                             // anonymous authentication needed for self-registration\n                             authenticate(anonymousUser, anonymousKey);\n \n-                            return new UserSelfModalPage(\n-                                    Login.this.getPageReference(), selfRegModalWin, new UserTO());\n+                            return new UserSelfModalPage(Login.this.getPageReference(), selfRegModalWin, new UserTO());\n                         }\n                     });\n "},{"sha":"d3e91dbfa7e24026bc3d44a98b1c7f396cf0fb04","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AttrTemplatesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttrTemplatesPanel.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -96,7 +96,7 @@ private NonI18nPalette<String> buildPalette(final Type type, final List<String>\n         ListModel<String> availableSchemas = new ListModel<String>(allSchemas);\n \n         return new NonI18nPalette<String>(type.name(), new PropertyModel<List<String>>(roleTO, type.name()),\n-                availableSchemas, new SelectChoiceRenderer<String>(), 8, false) {\n+                availableSchemas, new SelectChoiceRenderer<String>(), 8, false, true) {\n \n                     private static final long serialVersionUID = 2295567122085510330L;\n "},{"sha":"c59658fb210d82c730e64fd3599ce808718632ed","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":59,"deletions":59,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -20,6 +20,8 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Comparator;\n import java.util.Date;\n import java.util.HashMap;\n import java.util.HashSet;\n@@ -42,7 +44,7 @@\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.console.commons.JexlHelpUtil;\n-import org.apache.syncope.console.commons.LayoutType;\n+import org.apache.syncope.console.commons.AttrLayoutType;\n import org.apache.syncope.console.commons.Mode;\n import org.apache.syncope.console.markup.html.list.AltListView;\n import org.apache.syncope.console.pages.panels.AttrTemplatesPanel.RoleAttrTemplatesChange;\n@@ -65,7 +67,6 @@\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n@@ -90,8 +91,6 @@ public class AttributesPanel extends Panel {\n \n     private final AttrTemplatesPanel attrTemplates;\n \n-    private AttributeTO confAttributeTO;\n-\n     private Map<String, SchemaTO> schemas = new LinkedHashMap<String, SchemaTO>();\n \n     public <T extends AbstractAttributableTO> AttributesPanel(final String id, final T entityTO, final Form form,\n@@ -112,41 +111,38 @@ public <T extends AbstractAttributableTO> AttributesPanel(final String id, final\n         setSchemas();\n         setAttrs();\n \n-        final ListView<AttributeTO> attributeView = new AltListView<AttributeTO>(\"schemas\",\n-                new PropertyModel<List<? extends AttributeTO>>(entityTO, \"attrs\")) {\n+        add(new AltListView<AttributeTO>(\"schemas\", new PropertyModel<List<? extends AttributeTO>>(entityTO, \"attrs\")) {\n \n-                    private static final long serialVersionUID = 9101744072914090143L;\n+            private static final long serialVersionUID = 9101744072914090143L;\n \n-                    @Override\n-                    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-                    protected void populateItem(final ListItem<AttributeTO> item) {\n-                        final AttributeTO attributeTO = (AttributeTO) item.getDefaultModelObject();\n+            @Override\n+            @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+            protected void populateItem(final ListItem<AttributeTO> item) {\n+                final AttributeTO attributeTO = (AttributeTO) item.getDefaultModelObject();\n \n-                        final WebMarkupContainer jexlHelp = JexlHelpUtil.getJexlHelpWebContainer(\"jexlHelp\");\n+                final WebMarkupContainer jexlHelp = JexlHelpUtil.getJexlHelpWebContainer(\"jexlHelp\");\n \n-                        final AjaxLink<Void> questionMarkJexlHelp = JexlHelpUtil.getAjaxLink(jexlHelp,\n-                                \"questionMarkJexlHelp\");\n-                        item.add(questionMarkJexlHelp);\n-                        questionMarkJexlHelp.add(jexlHelp);\n+                final AjaxLink<Void> questionMarkJexlHelp = JexlHelpUtil.getAjaxLink(jexlHelp, \"questionMarkJexlHelp\");\n+                item.add(questionMarkJexlHelp);\n+                questionMarkJexlHelp.add(jexlHelp);\n \n-                        if (mode != Mode.TEMPLATE) {\n-                            questionMarkJexlHelp.setVisible(false);\n-                        }\n+                if (mode != Mode.TEMPLATE) {\n+                    questionMarkJexlHelp.setVisible(false);\n+                }\n \n-                        item.add(new Label(\"name\", attributeTO.getSchema()));\n+                item.add(new Label(\"name\", attributeTO.getSchema()));\n \n-                        final FieldPanel panel = getFieldPanel(schemas.get(attributeTO.getSchema()), form, attributeTO);\n+                final FieldPanel panel = getFieldPanel(schemas.get(attributeTO.getSchema()), form, attributeTO);\n \n-                        if (mode == Mode.TEMPLATE || !schemas.get(attributeTO.getSchema()).isMultivalue()) {\n-                            item.add(panel);\n-                        } else {\n-                            item.add(new MultiFieldPanel<String>(\n-                                            \"panel\", new PropertyModel<List<String>>(attributeTO, \"values\"), panel));\n-                        }\n-                    }\n-                };\n-\n-        add(attributeView);\n+                if (mode == Mode.TEMPLATE || !schemas.get(attributeTO.getSchema()).isMultivalue()) {\n+                    item.add(panel);\n+                } else {\n+                    item.add(new MultiFieldPanel<String>(\n+                            \"panel\", new PropertyModel<List<String>>(attributeTO, \"values\"), panel));\n+                }\n+            }\n+        }\n+        );\n     }\n \n     private void filter(final List<SchemaTO> schemaTOs, final Collection<String> allowed) {\n@@ -159,12 +155,13 @@ private void filter(final List<SchemaTO> schemaTOs, final Collection<String> all\n     }\n \n     private void setSchemas() {\n+        AttributeTO attrLayout = null;\n         List<SchemaTO> schemaTOs;\n \n         if (entityTO instanceof RoleTO) {\n             final RoleTO roleTO = (RoleTO) entityTO;\n \n-            setLayoutConfiguration(mode, AttributableType.ROLE);\n+            attrLayout = confRestClient.readAttrLayout(AttrLayoutType.valueOf(mode, AttributableType.ROLE));\n             schemaTOs = schemaRestClient.getSchemas(AttributableType.ROLE);\n             Set<String> allowed;\n             if (attrTemplates == null) {\n@@ -177,11 +174,11 @@ private void setSchemas() {\n             }\n             filter(schemaTOs, allowed);\n         } else if (entityTO instanceof UserTO) {\n+            attrLayout = confRestClient.readAttrLayout(AttrLayoutType.valueOf(mode, AttributableType.USER));\n             schemaTOs = schemaRestClient.getSchemas(AttributableType.USER);\n-            setLayoutConfiguration(mode, AttributableType.USER);\n         } else if (entityTO instanceof MembershipTO) {\n+            attrLayout = confRestClient.readAttrLayout(AttrLayoutType.valueOf(mode, AttributableType.MEMBERSHIP));\n             schemaTOs = schemaRestClient.getSchemas(AttributableType.MEMBERSHIP);\n-            setLayoutConfiguration(mode, AttributableType.MEMBERSHIP);\n             Set<String> allowed = new HashSet<String>(\n                     roleRestClient.read(((MembershipTO) entityTO).getRoleId()).getMAttrTemplates());\n             filter(schemaTOs, allowed);\n@@ -190,8 +187,8 @@ private void setSchemas() {\n             schemaTOs = schemaRestClient.getSchemas(AttributableType.CONFIGURATION);\n             for (Iterator<SchemaTO> it = schemaTOs.iterator(); it.hasNext();) {\n                 SchemaTO schemaTO = it.next();\n-                for (LayoutType type : LayoutType.values()) {\n-                    if (type.getParameter().equals(schemaTO.getName())) {\n+                for (AttrLayoutType type : AttrLayoutType.values()) {\n+                    if (type.getConfKey().equals(schemaTO.getName())) {\n                         it.remove();\n                     }\n                 }\n@@ -200,30 +197,32 @@ private void setSchemas() {\n \n         schemas.clear();\n \n-        if (confAttributeTO != null && mode != Mode.TEMPLATE && !(entityTO instanceof ConfTO)) {\n-            filter(schemaTOs, confAttributeTO.getValues());\n-        }\n-        for (SchemaTO schemaTO : schemaTOs) {\n-            schemas.put(schemaTO.getName(), schemaTO);\n-        }\n-    }\n+        if (attrLayout != null && mode != Mode.TEMPLATE && !(entityTO instanceof ConfTO)) {\n+            // 1. remove attributes not selected for display\n+            filter(schemaTOs, attrLayout.getValues());\n+            // 2. sort remainig attributes according to configuration, e.g. attrLayout\n+            final Map<String, Integer> attrLayoutMap = new HashMap<String, Integer>(attrLayout.getValues().size());\n+            for (int i = 0; i < attrLayout.getValues().size(); i++) {\n+                attrLayoutMap.put(attrLayout.getValues().get(i), i);\n+            }\n+            Collections.sort(schemaTOs, new Comparator<SchemaTO>() {\n \n-    private void setLayoutConfiguration(final Mode mode, final AttributableType type) {\n-        switch (type) {\n-            case ROLE:\n-                confAttributeTO = confRestClient.read(mode == Mode.ADMIN\n-                        ? LayoutType.ADMIN_ROLE.getParameter() : LayoutType.SELF_ROLE.getParameter());\n-                break;\n+                @Override\n+                public int compare(final SchemaTO schema1, final SchemaTO schema2) {\n+                    int value = 0;\n \n-            case MEMBERSHIP:\n-                confAttributeTO = confRestClient.read(mode == Mode.ADMIN\n-                        ? LayoutType.ADMIN_MEMBERSHIP.getParameter() : LayoutType.SELF_MEMBERSHIP.getParameter());\n-                break;\n+                    if (attrLayoutMap.get(schema1.getName()) > attrLayoutMap.get(schema2.getName())) {\n+                        value = 1;\n+                    } else if (attrLayoutMap.get(schema1.getName()) < attrLayoutMap.get(schema2.getName())) {\n+                        value = -1;\n+                    }\n \n-            case USER:\n-            default:\n-                confAttributeTO = confRestClient.read(mode == Mode.ADMIN\n-                        ? LayoutType.ADMIN_USER.getParameter() : LayoutType.SELF_USER.getParameter());\n+                    return value;\n+                }\n+            });\n+        }\n+        for (SchemaTO schemaTO : schemaTOs) {\n+            schemas.put(schemaTO.getName(), schemaTO);\n         }\n     }\n \n@@ -253,8 +252,9 @@ private void setAttrs() {\n \n     @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n     private FieldPanel getFieldPanel(final SchemaTO schemaTO, final Form form, final AttributeTO attributeTO) {\n-        final boolean required = mode == Mode.TEMPLATE ? false : schemaTO.getMandatoryCondition().equalsIgnoreCase(\n-                \"true\");\n+        final boolean required = mode == Mode.TEMPLATE\n+                ? false\n+                : schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n \n         final boolean readOnly = mode == Mode.TEMPLATE ? false : schemaTO.isReadonly();\n "},{"sha":"07b0bf8fa6ab872a88853ac5b86c611e0bf2c996","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/LayoutsPanel.java","status":"modified","additions":14,"deletions":63,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FLayoutsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FLayoutsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FLayoutsPanel.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -18,14 +18,11 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n-import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.common.to.AttributeTO;\n-import org.apache.syncope.common.to.SchemaTO;\n-import org.apache.syncope.common.types.AttributableType;\n-import org.apache.syncope.common.types.AttributeSchemaType;\n-import org.apache.syncope.console.commons.LayoutType;\n+import org.apache.syncope.console.commons.AttrLayoutType;\n import org.apache.syncope.console.commons.Constants;\n+import org.apache.syncope.console.commons.SelectChoiceRenderer;\n import org.apache.syncope.console.commons.XMLRolesReader;\n import org.apache.syncope.console.rest.ConfigurationRestClient;\n import org.apache.syncope.console.rest.SchemaRestClient;\n@@ -66,7 +63,7 @@ public class LayoutsPanel extends Panel {\n     private ConfigurationRestClient confRestClient;\n \n     @SuppressWarnings(\"unchecked\")\n-    public LayoutsPanel(final String id, final LayoutType layoutType, final NotificationPanel feedbackPanel) {\n+    public LayoutsPanel(final String id, final AttrLayoutType attrLayoutType, final NotificationPanel feedbackPanel) {\n         super(id);\n \n         final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n@@ -75,28 +72,16 @@ public LayoutsPanel(final String id, final LayoutType layoutType, final Notifica\n         final Form<String> form = new Form<String>(\"form\");\n         form.setOutputMarkupId(true);\n \n-        final AttributableType type;\n-        final AttributeTO attributeTO;\n-        if (layoutType == LayoutType.ADMIN_USER || layoutType == layoutType.SELF_USER) {\n-            attributeTO = getConfiguration(layoutType, AttributableType.USER);\n-            type = AttributableType.USER;\n-        } else if (layoutType == LayoutType.ADMIN_ROLE || layoutType == layoutType.SELF_ROLE) {\n-            attributeTO = getConfiguration(layoutType, AttributableType.ROLE);\n-            type = AttributableType.ROLE;\n-        } else {\n-            attributeTO = getConfiguration(layoutType, AttributableType.MEMBERSHIP);\n-            type = AttributableType.MEMBERSHIP;\n-        }\n-\n-        form.setModel(new CompoundPropertyModel(attributeTO.getValues()));\n-\n-        final List<String> fields = getAllFields(type);\n-\n-        final ListModel<String> selectedFields = new ListModel<String>(!attributeTO.getValues().isEmpty()\n-                ? attributeTO.getValues() : fields);\n+        final AttributeTO attrLayout = confRestClient.readAttrLayout(attrLayoutType);\n+        form.setModel(new CompoundPropertyModel(attrLayout.getValues()));\n+\n+        final List<String> fields = schemaRestClient.getSchemaNames(attrLayoutType.getAttrType());\n+        final ListModel<String> selectedFields =\n+                new ListModel<String>(attrLayout.getValues().isEmpty() ? fields : attrLayout.getValues());\n         final ListModel<String> availableFields = new ListModel<String>(fields);\n \n-        form.add(new AjaxPalettePanel<String>(\"fields\", selectedFields, availableFields, true));\n+        form.add(new AjaxPalettePanel<String>(\"fields\", selectedFields, availableFields,\n+                new SelectChoiceRenderer<String>(), true, true));\n \n         final AjaxButton submit = new IndicatingAjaxButton(APPLY, new ResourceModel(APPLY)) {\n \n@@ -105,27 +90,18 @@ public LayoutsPanel(final String id, final LayoutType layoutType, final Notifica\n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 try {\n-                    if (schemaRestClient.readSchema(\n-                            AttributableType.CONFIGURATION, layoutType.getParameter()) == null) {\n-                        final SchemaTO confSchemaTO = new SchemaTO();\n-                        confSchemaTO.setName(layoutType.getParameter());\n-                        confSchemaTO.setMultivalue(true);\n-                        confSchemaTO.setType(AttributeSchemaType.String);\n-                        schemaRestClient.createSchema(AttributableType.CONFIGURATION, confSchemaTO);\n-                    }\n-                    confRestClient.set(attributeTO);\n+                    confRestClient.set(attrLayout);\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                 } catch (Exception e) {\n-                    LOG.error(\"While save layout configuration\", e);\n+                    LOG.error(\"While saving layout configuration\", e);\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n                 }\n                 feedbackPanel.refresh(target);\n             }\n \n             @Override\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                LOG.error(\"While save layout configuration\");\n-                error(getString(Constants.ERROR) + \": While save layout configuration\");\n+                error(getString(Constants.ERROR) + \": While saving layout configuration\");\n                 feedbackPanel.refresh(target);\n             }\n         };\n@@ -151,29 +127,4 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         container.add(form);\n         add(container);\n     }\n-\n-    private AttributeTO getConfiguration(final LayoutType layoutType, final AttributableType type) {\n-        AttributeTO attributeTO = null;\n-        try {\n-            attributeTO = confRestClient.read(layoutType.getParameter());\n-        } catch (Exception e) {\n-            // ignore\n-        }\n-\n-        if (attributeTO == null) {\n-            attributeTO = new AttributeTO();\n-            attributeTO.setSchema(layoutType.getParameter());\n-            attributeTO.getValues().addAll(getAllFields(type));\n-        }\n-\n-        return attributeTO;\n-    }\n-\n-    private List<String> getAllFields(final AttributableType type) {\n-        final List<String> fields = new ArrayList<String>();\n-        for (SchemaTO item : schemaRestClient.getSchemas(type)) {\n-            fields.add(item.getName());\n-        }\n-        return fields;\n-    }\n }"},{"sha":"a4ab67fff1145df5bfe619d62ab35a7c6429ba61","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourcesPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -125,15 +125,15 @@ private ResourcesPanel(final Builder builder) {\n         public AjaxRecordingPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n                 final StatusPanel statusPanel) {\n \n-            super(id, model, choices, new SelectChoiceRenderer<T>(), false);\n+            super(id, model, choices, new SelectChoiceRenderer<T>(), false, false);\n             this.statusPanel = statusPanel;\n         }\n \n         @Override\n         protected Palette<T> createPalette(final IModel<List<T>> model, final ListModel<T> choices,\n-                final IChoiceRenderer<T> renderer, final boolean allowOrder) {\n+                final IChoiceRenderer<T> renderer, final boolean allowOrder, final boolean allowMoveAll) {\n \n-            return new NonI18nPalette<T>(\"paletteField\", model, choices, renderer, 8, allowOrder) {\n+            return new NonI18nPalette<T>(\"paletteField\", model, choices, renderer, 8, allowOrder, false) {\n \n                 private static final long serialVersionUID = -3415146226879212841L;\n "},{"sha":"2576a6066cb8ac41a234419d0113bfb8d27a6cea","filename":"console/src/main/java/org/apache/syncope/console/rest/ConfigurationRestClient.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -27,13 +27,18 @@\n import org.apache.syncope.common.to.ConfTO;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.wrap.MailTemplate;\n+import org.apache.syncope.console.commons.AttrLayoutType;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n public class ConfigurationRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 7692363064029538722L;\n \n+    @Autowired\n+    private SchemaRestClient schemaRestClient;\n+\n     public ConfTO list() {\n         return getService(ConfigurationService.class).list();\n     }\n@@ -47,6 +52,19 @@ public AttributeTO read(final String key) {\n         return null;\n     }\n \n+    public AttributeTO readAttrLayout(final AttrLayoutType type) {\n+        AttributeTO attrLayout = read(type.getConfKey());\n+        if (attrLayout == null) {\n+            attrLayout = new AttributeTO();\n+            attrLayout.setSchema(type.getConfKey());\n+        }\n+        if (attrLayout.getValues().isEmpty()) {\n+            attrLayout.getValues().addAll(schemaRestClient.getSchemaNames(type.getAttrType()));\n+        }\n+\n+        return attrLayout;\n+    }\n+\n     public void set(final AttributeTO attributeTO) {\n         getService(ConfigurationService.class).set(attributeTO.getSchema(), attributeTO);\n     }"},{"sha":"023d3fa7ae59343e63a961b760af835d2fff2592","filename":"console/src/main/java/org/apache/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":8,"deletions":98,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -55,11 +55,6 @@ public List<? extends AbstractSchemaTO> getSchemas(final AttributableType attrTy\n         return schemas;\n     }\n \n-    /**\n-     * Get schemas.\n-     *\n-     * @return List of schemas.\n-     */\n     public List<SchemaTO> getSchemas(final AttributableType type) {\n         List<SchemaTO> schemas = null;\n \n@@ -87,11 +82,6 @@ public List<String> getSchemaNames(final AttributableType attrType, final Schema\n         return schemaNames;\n     }\n \n-    /**\n-     * Get schema names.\n-     *\n-     * @return List of schema names.\n-     */\n     public List<String> getSchemaNames(final AttributableType type) {\n         final List<String> schemaNames = new ArrayList<String>();\n \n@@ -107,12 +97,6 @@ public List<String> getSchemaNames(final AttributableType type) {\n         return schemaNames;\n     }\n \n-    /**\n-     * Get derived schemas.\n-     *\n-     * @return List of derived schemas.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n     public List<DerSchemaTO> getDerSchemas(final AttributableType type) {\n         List<DerSchemaTO> userDerSchemas = null;\n \n@@ -125,11 +109,6 @@ public List<DerSchemaTO> getDerSchemas(final AttributableType type) {\n         return userDerSchemas;\n     }\n \n-    /**\n-     * Get derived schema names.\n-     *\n-     * @return List of derived schema names.\n-     */\n     public List<String> getDerSchemaNames(final AttributableType type) {\n         final List<String> userDerSchemasNames = new ArrayList<String>();\n \n@@ -146,12 +125,6 @@ public List<String> getDerSchemaNames(final AttributableType type) {\n         return userDerSchemasNames;\n     }\n \n-    /**\n-     * Get virtual schemas.\n-     *\n-     * @return List of virtual schemas.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n     public List<VirSchemaTO> getVirSchemas(final AttributableType type) {\n         List<VirSchemaTO> userVirSchemas = null;\n \n@@ -164,11 +137,6 @@ public List<VirSchemaTO> getVirSchemas(final AttributableType type) {\n         return userVirSchemas;\n     }\n \n-    /**\n-     * Get virtual schema names.\n-     *\n-     * @return List of virtual schema names.\n-     */\n     public List<String> getVirSchemaNames(final AttributableType type) {\n         final List<String> userVirSchemasNames = new ArrayList<String>();\n \n@@ -185,21 +153,10 @@ public List<String> getVirSchemaNames(final AttributableType type) {\n         return userVirSchemasNames;\n     }\n \n-    /**\n-     * Create new user schema.\n-     *\n-     * @param schemaTO\n-     */\n     public void createSchema(final AttributableType type, final SchemaTO schemaTO) {\n         getService(SchemaService.class).create(type, SchemaType.NORMAL, schemaTO);\n     }\n \n-    /**\n-     * Load an already existent user schema by its name.\n-     *\n-     * @param name (e.g.:surname)\n-     * @return schemaTO\n-     */\n     public SchemaTO readSchema(final AttributableType type, final String name) {\n         SchemaTO schema = null;\n \n@@ -211,51 +168,20 @@ public SchemaTO readSchema(final AttributableType type, final String name) {\n         return schema;\n     }\n \n-    /**\n-     * Update an already existent user schema.\n-     *\n-     * @param schemaTO updated\n-     */\n     public void updateSchema(final AttributableType type, final SchemaTO schemaTO) {\n         getService(SchemaService.class).update(type, SchemaType.NORMAL, schemaTO.getName(), schemaTO);\n     }\n \n-    /**\n-     * Delete an already existent user schema by its name.\n-     *\n-     * @param name (e.g.:surname)\n-     * @return schemaTO\n-     */\n     public SchemaTO deleteSchema(final AttributableType type, final String name) {\n         SchemaTO response = getService(SchemaService.class).read(type, SchemaType.NORMAL, name);\n         getService(SchemaService.class).delete(type, SchemaType.NORMAL, name);\n         return response;\n     }\n \n-    /**\n-     * Create new derived user schema.\n-     *\n-     * @param schemaTO\n-     */\n     public void createDerSchema(final AttributableType type, final DerSchemaTO schemaTO) {\n         getService(SchemaService.class).create(type, SchemaType.DERIVED, schemaTO);\n     }\n \n-    /**\n-     * Create new derived user schema.\n-     *\n-     * @param schemaTO\n-     */\n-    public void createVirSchema(final AttributableType type, final VirSchemaTO schemaTO) {\n-        getService(SchemaService.class).create(type, SchemaType.VIRTUAL, schemaTO);\n-    }\n-\n-    /**\n-     * Load an already existent user derived schema by its name.\n-     *\n-     * @param name (e.g.:surname)\n-     * @return DerSchemaTO\n-     */\n     public DerSchemaTO readDerSchema(final AttributableType type, final String name) {\n         DerSchemaTO derivedSchemaTO = null;\n         try {\n@@ -266,40 +192,24 @@ public DerSchemaTO readDerSchema(final AttributableType type, final String name)\n         return derivedSchemaTO;\n     }\n \n-    /**\n-     * Update an already existent user derived schema.\n-     *\n-     * @param schemaTO updated\n-     */\n-    public void updateDerSchema(final AttributableType type, final DerSchemaTO schemaTO) {\n-        getService(SchemaService.class).update(type, SchemaType.DERIVED, schemaTO.getName(), schemaTO);\n-    }\n-\n-    /**\n-     * Update an already existent user derived schema.\n-     *\n-     * @param schemaTO updated\n-     */\n     public void updateVirSchema(final AttributableType type, final VirSchemaTO schemaTO) {\n         getService(SchemaService.class).update(type, SchemaType.VIRTUAL, schemaTO.getName(), schemaTO);\n     }\n \n-    /**\n-     * Delete an already existent user derived schema by its name.\n-     *\n-     * @param name (e.g.:surname)\n-     */\n     public DerSchemaTO deleteDerSchema(final AttributableType type, final String name) {\n         DerSchemaTO schemaTO = getService(SchemaService.class).read(type, SchemaType.DERIVED, name);\n         getService(SchemaService.class).delete(type, SchemaType.DERIVED, name);\n         return schemaTO;\n     }\n \n-    /**\n-     * Delete an already existent user virtual schema by its name.\n-     *\n-     * @param name (e.g.:surname)\n-     */\n+    public void createVirSchema(final AttributableType type, final VirSchemaTO schemaTO) {\n+        getService(SchemaService.class).create(type, SchemaType.VIRTUAL, schemaTO);\n+    }\n+\n+    public void updateDerSchema(final AttributableType type, final DerSchemaTO schemaTO) {\n+        getService(SchemaService.class).update(type, SchemaType.DERIVED, schemaTO.getName(), schemaTO);\n+    }\n+\n     public VirSchemaTO deleteVirSchema(final AttributableType type, final String name) {\n         VirSchemaTO schemaTO = getService(SchemaService.class).read(type, SchemaType.VIRTUAL, name);\n         getService(SchemaService.class).delete(type, SchemaType.VIRTUAL, name);"},{"sha":"c02076535cffe96e6c3dafcba8e2ebe04c683022","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -39,23 +39,23 @@ public AjaxPalettePanel(final String id, final IModel<List<T>> model, final List\n     public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n             final boolean allowOrder) {\n \n-        this(id, model, choices, new SelectChoiceRenderer<T>(), allowOrder);\n+        this(id, model, choices, new SelectChoiceRenderer<T>(), allowOrder, false);\n     }\n \n     public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n-            final IChoiceRenderer<T> renderer, final boolean allowOrder) {\n+            final IChoiceRenderer<T> renderer, final boolean allowOrder, final boolean allowMoveAll) {\n \n         super(id, model);\n \n-        this.palette = createPalette(model, choices, renderer, allowOrder);\n+        this.palette = createPalette(model, choices, renderer, allowOrder, allowMoveAll);\n         add(palette.setOutputMarkupId(true));\n         setOutputMarkupId(true);\n     }\n \n     protected Palette<T> createPalette(final IModel<List<T>> model, final ListModel<T> choices,\n-            final IChoiceRenderer<T> renderer, final boolean allowOrder) {\n+            final IChoiceRenderer<T> renderer, final boolean allowOrder, final boolean allowMoveAll) {\n \n-        return new NonI18nPalette<T>(\"paletteField\", model, choices, renderer, 8, allowOrder);\n+        return new NonI18nPalette<T>(\"paletteField\", model, choices, renderer, 8, allowOrder, allowMoveAll);\n     }\n \n     @Override"},{"sha":"6b4ab5d9f76177d0347a2d7ef55d16e97546fb82","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/NonI18nPalette.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -28,19 +28,13 @@\n \n     private static final long serialVersionUID = 2659070187837941889L;\n \n-    public NonI18nPalette(final String id,\n-            final IModel<? extends Collection<? extends T>> choicesModel,\n-            final IChoiceRenderer<T> choiceRenderer, final int rows, final boolean allowOrder) {\n-\n-        super(id, choicesModel, choiceRenderer, rows, allowOrder);\n-    }\n-\n     public NonI18nPalette(final String id,\n             final IModel<? extends List<? extends T>> model,\n             final IModel<? extends Collection<? extends T>> choicesModel,\n-            final IChoiceRenderer<T> choiceRenderer, final int rows, final boolean allowOrder) {\n+            final IChoiceRenderer<T> choiceRenderer, final int rows,\n+            final boolean allowOrder, final boolean allowMoveAll) {\n \n-        super(id, model, choicesModel, choiceRenderer, rows, allowOrder);\n+        super(id, model, choicesModel, choiceRenderer, rows, allowOrder, allowMoveAll);\n     }\n \n     @Override"},{"sha":"5800d77249081ed2ecc8c61f78c04f785b5d969c","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/NonI18nPalette.html","status":"modified","additions":15,"deletions":9,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FNonI18nPalette.html?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -39,18 +39,24 @@\n           <select class=\"choicesSelect\" style=\"min-width: 100px;\" wicket:id=\"choices\">[choices]</select>\t\n         </div>\n \n-        <div id=\"buttons\" style=\"display: table-cell; width: 30px; vertical-align: middle; padding-left: 5px;\">\n-          <div style=\"padding-bottom: 5px;\">\n-            <a wicket:id=\"addButton\"><img src=\"img/right-icon.png\" alt=\"add icon\"/></a>\n+        <div id=\"buttons\" style=\"display: table-cell; width: 30px; text-align: center; vertical-align: middle;\">\n+          <div style=\"padding-bottom: 2px;\">\n+            <a wicket:id=\"addAllButton\"><img src=\"img/addAll.png\" alt=\"remove icon\"/></a>\n           </div>\n-          <div>\n-            <a wicket:id=\"removeButton\"><img src=\"img/left-icon.png\" alt=\"remove icon\"/></a>\n+          <div style=\"padding-top: 2px; padding-bottom: 2px;\">\n+            <a wicket:id=\"removeAllButton\"><img src=\"img/removeAll.png\" alt=\"move up icon\"/></a>\n           </div>\n-          <div>\n-            <a wicket:id=\"moveUpButton\"><img src=\"img/up-icon.png\" alt=\"move up icon\"/></a>\n+          <div style=\"padding-top: 2px; padding-bottom: 2px;\">\n+            <a wicket:id=\"addButton\"><img src=\"img/add.png\" alt=\"add icon\"/></a>\n           </div>\n-          <div style=\"padding-top: 5px;\">\n-            <a wicket:id=\"moveDownButton\"><img src=\"img/down-icon.png\" alt=\"move down icon\"/></a>\n+          <div style=\"padding-top: 2px; padding-bottom: 2px;\">\n+            <a wicket:id=\"removeButton\"><img src=\"img/remove.png\" alt=\"remove icon\"/></a>\n+          </div>\n+          <div style=\"padding-top: 2px; padding-bottom: 2px;\">\n+            <a wicket:id=\"moveUpButton\"><img src=\"img/moveUp.png\" alt=\"move up icon\"/></a>\n+          </div>\n+          <div style=\"padding-top: 2px;\">\n+            <a wicket:id=\"moveDownButton\"><img src=\"img/moveDown.png\" alt=\"move down icon\"/></a>\n           </div>\n         </div>\n "},{"sha":"043aba86c37d3f6ffd4a3b9642748b709ff49d98","filename":"console/src/main/webapp/img/add.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fadd.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fadd.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fadd.png?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22"},{"sha":"86633fcc1d994496d44842bf07b64ccb930c8e7b","filename":"console/src/main/webapp/img/addAll.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FaddAll.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FaddAll.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FaddAll.png?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22"},{"sha":"d6ce5230445105eb831e816ef12f87adacf8f182","filename":"console/src/main/webapp/img/moveDown.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FmoveDown.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FmoveDown.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FmoveDown.png?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22"},{"sha":"d9b279059f60196fd5767bf3ea59e6280b96724b","filename":"console/src/main/webapp/img/moveUp.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FmoveUp.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FmoveUp.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FmoveUp.png?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22"},{"sha":"de5a5cf9f7986c9156406262edfdfe8f9d215790","filename":"console/src/main/webapp/img/remove.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fremove.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fremove.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fremove.png?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22"},{"sha":"f293962ebc06ff0c10b59feb6e86df25ae40c932","filename":"console/src/main/webapp/img/removeAll.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FremoveAll.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FremoveAll.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2FremoveAll.png?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22"},{"sha":"b64d224627219331cf71554bb5250a0d96dd6cd8","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConfigurationController.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -29,8 +29,10 @@\n import org.apache.syncope.core.init.WorkflowAdapterLoader;\n import org.apache.syncope.core.notification.NotificationManager;\n import org.apache.syncope.core.persistence.beans.conf.CAttr;\n+import org.apache.syncope.core.persistence.beans.conf.CSchema;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import org.apache.syncope.core.persistence.validation.attrvalue.Validator;\n import org.apache.syncope.core.rest.data.ConfigurationDataBinder;\n import org.apache.syncope.core.util.ContentExporter;\n@@ -47,6 +49,9 @@ public class ConfigurationController extends AbstractTransactionalController<Con\n     @Autowired\n     private ConfDAO confDAO;\n \n+    @Autowired\n+    private SchemaDAO schemaDAO;\n+\n     @Autowired\n     private ConfigurationDataBinder binder;\n \n@@ -74,12 +79,22 @@ public ConfTO list() {\n \n     @PreAuthorize(\"isAuthenticated()\")\n     public AttributeTO read(final String key) {\n+        AttributeTO result;\n+\n         CAttr conf = confDAO.find(key);\n         if (conf == null) {\n-            throw new NotFoundException(\"Configuration key \" + key);\n+            CSchema schema = schemaDAO.find(key, CSchema.class);\n+            if (schema == null) {\n+                throw new NotFoundException(\"Configuration key \" + key);\n+            }\n+\n+            result = new AttributeTO();\n+            result.setSchema(key);\n+        } else {\n+            result = binder.getAttributeTO(conf);\n         }\n \n-        return binder.getAttributeTO(conf);\n+        return result;\n     }\n \n     @PreAuthorize(\"hasRole('CONFIGURATION_SET')\")"},{"sha":"827e6c98be72852f54408f6c17066ea1657b19df","filename":"core/src/main/resources/content.xml","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -77,7 +77,21 @@ under the License.\n            mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n   <CAttr id=\"11\" owner_id=\"1\" schema_name=\"log.lastlogindate\"/>\n   <CAttrValue id=\"11\" attribute_id=\"11\" booleanValue=\"1\"/>\n-    \n+\n+  <!-- For usage with admin console -->\n+  <CSchema name=\"admin.user.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CSchema name=\"self.user.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CSchema name=\"admin.role.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CSchema name=\"self.role.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CSchema name=\"admin.membership.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CSchema name=\"self.membership.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+        \n   <!-- User pre-defined schemas -->\n   <USchema name=\"email\" type=\"String\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\""},{"sha":"d5c4c998d27a6d750af81661b48ac548380645af","filename":"core/src/test/resources/content.xml","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -76,6 +76,20 @@ under the License.\n   <CAttr id=\"11\" owner_id=\"1\" schema_name=\"log.lastlogindate\"/>\n   <CAttrValue id=\"11\" attribute_id=\"11\" booleanValue=\"1\"/>\n \n+  <!-- For usage with admin console -->\n+  <CSchema name=\"admin.user.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CSchema name=\"self.user.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CSchema name=\"admin.role.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CSchema name=\"self.role.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CSchema name=\"admin.membership.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CSchema name=\"self.membership.layout\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  \n   <!-- sample policies -->\n   <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"global sync policy\" type=\"GLOBAL_SYNC\" \n           specification='{\"userJavaRule\":null,\"roleJavaRule\":null,\"conflictResolutionAction\":\"IGNORE\",\"userAltSearchSchemas\":[],\"roleAltSearchSchemas\":[]}'/>"},{"sha":"61629906a2a6d61a4195160942db05ff5c595167","filename":"pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbd3a42bf44fce0912d7fba1624dca5ae778ae22/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=dbd3a42bf44fce0912d7fba1624dca5ae778ae22","patch":"@@ -323,7 +323,7 @@ under the License.\n \n     <activiti.version>5.16.4</activiti.version>\n     \n-    <aspectj.version>1.8.2</aspectj.version>\n+    <aspectj.version>1.8.3</aspectj.version>\n \n     <cxf.version>3.0.2</cxf.version>\t\n     <spring.version>4.0.7.RELEASE</spring.version>\n@@ -346,12 +346,12 @@ under the License.\n \n     <h2.version>1.4.182</h2.version>\n \n-    <log4j.version>2.0</log4j.version>\n+    <log4j.version>2.1</log4j.version>\n     <slf4j.version>1.7.7</slf4j.version>\n     <disruptor.version>3.3.0</disruptor.version>\n \n     <junit.version>4.11</junit.version>\n-    <selenium.version>2.43.1</selenium.version>\n+    <selenium.version>2.44.0</selenium.version>\n \n     <apacheds.version>1.5.7</apacheds.version>\n     "}]}