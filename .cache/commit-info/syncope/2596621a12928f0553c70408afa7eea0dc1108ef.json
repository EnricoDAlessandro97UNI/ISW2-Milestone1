{"sha":"2596621a12928f0553c70408afa7eea0dc1108ef","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI1OTY2MjFhMTI5MjhmMDU1M2M3MDQwOGFmYTdlZWEwZGMxMTA4ZWY=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-07-16T14:09:52Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-07-16T14:09:52Z"},"message":"SYNCOPE-111 #comment in case of membership add/remove just resources indirectly linked to it was used to be considered\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1362044 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2be1a1608b54605df250b75d61b01866a36f9fcd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2be1a1608b54605df250b75d61b01866a36f9fcd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2596621a12928f0553c70408afa7eea0dc1108ef","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2596621a12928f0553c70408afa7eea0dc1108ef","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2596621a12928f0553c70408afa7eea0dc1108ef","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2596621a12928f0553c70408afa7eea0dc1108ef/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"8948088ddca0eef141d06ddbd9459fa073f67158","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8948088ddca0eef141d06ddbd9459fa073f67158","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8948088ddca0eef141d06ddbd9459fa073f67158"}],"stats":{"total":166,"additions":149,"deletions":17},"files":[{"sha":"e7e2558d1e81d6e7281473c901b4daf8b6b81229","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationManager.java","status":"modified","additions":21,"deletions":6,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2596621a12928f0553c70408afa7eea0dc1108ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2596621a12928f0553c70408afa7eea0dc1108ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=2596621a12928f0553c70408afa7eea0dc1108ef","patch":"@@ -358,14 +358,12 @@ private Map.Entry<String, Attribute> prepareAttribute(final SchemaMapping mappin\n             default:\n         }\n \n-        final Entry<AbstractSchema, List<AbstractAttrValue>> entry = SchemaMappingUtil.getIntValues(mapping,\n-                attributables, password, schemaDAO);\n+        final Entry<AbstractSchema, List<AbstractAttrValue>> entry =\n+                SchemaMappingUtil.getIntValues(mapping, attributables, password, schemaDAO);\n \n         final List<AbstractAttrValue> values = entry.getValue();\n         final AbstractSchema schema = entry.getKey();\n-        final SchemaType schemaType = schema == null\n-                ? SchemaType.String\n-                : schema.getType();\n+        final SchemaType schemaType = schema == null ? SchemaType.String : schema.getType();\n \n         final String extAttrName = SchemaMappingUtil.getExtAttrName(mapping);\n \n@@ -725,15 +723,32 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n                             final SyncopeUser user = getSyncopeUser(task.getSyncopeUser().getId());\n \n                             if (user == null || !user.getResourceNames().contains(task.getResource().getName())) {\n+                                // perform de-provisioning\n+                                LOG.debug(\"Perform deprovisioning on {}\", task.getResource().getName());\n+\n                                 connector.delete(\n                                         task.getPropagationMode(),\n                                         ObjectClass.ACCOUNT,\n                                         before.getUid(),\n                                         null,\n                                         propagationAttempted);\n+                            } else {\n+                                // Update remote profile.\n+                                // This is absolutely needed because otherwise the resource won't be updated: \n+                                // resources to be deleted won't be considered by UserDataBinder.update() for the update\n+                                // but, often, this have to be done.\n+                                LOG.debug(\"Update remote object on {}\", task.getResource().getName());\n+\n+                                connector.update(\n+                                        task.getPropagationMode(),\n+                                        ObjectClass.ACCOUNT,\n+                                        before.getUid(),\n+                                        task.getAttributes(),\n+                                        null,\n+                                        propagationAttempted);\n                             }\n-\n                         }\n+\n                         break;\n \n                     default:"},{"sha":"090425b10c7be7189860c68940426b3101573cbe","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":21,"deletions":10,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2596621a12928f0553c70408afa7eea0dc1108ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2596621a12928f0553c70408afa7eea0dc1108ef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=2596621a12928f0553c70408afa7eea0dc1108ef","patch":"@@ -237,7 +237,7 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n \n             user.setChangePwdDate(new Date());\n \n-            propByRes.addAll(PropagationOperation.UPDATE, user.getResourceNames());\n+            propByRes.addAll(PropagationOperation.UPDATE, currentResources);\n         }\n \n         // username\n@@ -246,7 +246,7 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n             String oldUsername = user.getUsername();\n \n             user.setUsername(userMod.getUsername());\n-            propByRes.addAll(PropagationOperation.UPDATE, user.getResourceNames());\n+            propByRes.addAll(PropagationOperation.UPDATE, currentResources);\n \n             for (ExternalResource resource : user.getResources()) {\n                 for (SchemaMapping mapping : resource.getMappings()) {\n@@ -266,6 +266,9 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n             membershipToBeAddedRoleIds.add(membToBeAdded.getRole());\n         }\n \n+        final Set<String> toBeDeprovisioned = new HashSet<String>();\n+        final Set<String> toBeProvisioned = new HashSet<String>();\n+\n         // memberships to be removed\n         Membership membership = null;\n         for (Long membershipId : userMod.getMembershipsToBeRemoved()) {\n@@ -275,12 +278,9 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n             if (membership == null) {\n                 LOG.debug(\"Invalid membership id specified to be removed: {}\", membershipId);\n             } else {\n-                for (ExternalResource resource : membership.getSyncopeRole().getResources()) {\n-\n-                    if (!membershipToBeAddedRoleIds.contains(membership.getSyncopeRole().getId())) {\n \n-                        propByRes.add(PropagationOperation.DELETE, resource.getName());\n-                    }\n+                if (!membershipToBeAddedRoleIds.contains(membership.getSyncopeRole().getId())) {\n+                    toBeDeprovisioned.addAll(membership.getSyncopeRole().getResourceNames());\n                 }\n \n                 // In order to make the removeMembership() below to work,\n@@ -342,16 +342,15 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n \n                     user.addMembership(membership);\n \n-                    propByRes.addAll(PropagationOperation.UPDATE, role.getResourceNames());\n+                    toBeProvisioned.addAll(role.getResourceNames());\n                 }\n \n                 propByRes.merge(fill(membership, membershipMod,\n                         AttributableUtil.getInstance(AttributableType.MEMBERSHIP), scce));\n             }\n         }\n \n-        // now, let's see if there are new resource subscriptions without\n-        // providing password\n+        // now, let's see if there are new resource subscriptions without providing password\n         Set<String> updatedResources = user.getResourceNames();\n         updatedResources.removeAll(currentResources);\n         if (!updatedResources.isEmpty() && StringUtils.isBlank(userMod.getPassword())) {\n@@ -363,6 +362,18 @@ public PropagationByResource update(final SyncopeUser user, final UserMod userMo\n             throw scce;\n         }\n \n+        propByRes.addAll(PropagationOperation.DELETE, toBeDeprovisioned);\n+        propByRes.addAll(PropagationOperation.UPDATE, toBeProvisioned);\n+\n+        /**\n+         * In case of new memberships all the current resources have to be updated in order to propagate new role and\n+         * membership attribute values.\n+         */\n+        if (!toBeDeprovisioned.isEmpty() || !toBeProvisioned.isEmpty()) {\n+            currentResources.removeAll(toBeDeprovisioned);\n+            propByRes.addAll(PropagationOperation.UPDATE, currentResources);\n+        }\n+\n         return propByRes;\n     }\n "},{"sha":"43ed999d22e23814a3e04b752f83acaffae85e55","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/SchemaTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2596621a12928f0553c70408afa7eea0dc1108ef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2596621a12928f0553c70408afa7eea0dc1108ef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java?ref=2596621a12928f0553c70408afa7eea0dc1108ef","patch":"@@ -46,7 +46,7 @@ public void findAll() {\n         assertEquals(12, userList.size());\n \n         List<RSchema> roleList = schemaDAO.findAll(RSchema.class);\n-        assertEquals(4, roleList.size());\n+        assertEquals(5, roleList.size());\n     }\n \n     @Test"},{"sha":"002daa62d1c0a8460b225d5a41a53c1a737648cd","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2596621a12928f0553c70408afa7eea0dc1108ef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2596621a12928f0553c70408afa7eea0dc1108ef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=2596621a12928f0553c70408afa7eea0dc1108ef","patch":"@@ -63,6 +63,7 @@\n import org.apache.syncope.types.CipherAlgorithm;\n import org.apache.syncope.types.PropagationTaskExecStatus;\n import org.apache.syncope.types.SyncopeClientExceptionType;\n+import org.springframework.util.StringUtils;\n \n public class UserTestITCase extends AbstractTest {\n \n@@ -1849,4 +1850,91 @@ public void issueSYNCOPE108() {\n         assertNotNull(t);\n         // -----------------------------------\n     }\n+\n+    @Test\n+    public void issueSYNCOPE111() {\n+        UserTO userTO = getSampleTO(\"syncope111@syncope.apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getDerivedAttributes().clear();\n+        userTO.getVirtualAttributes().clear();\n+\n+        AttributeTO csvuserid = new AttributeTO();\n+        csvuserid.setSchema(\"csvuserid\");\n+        userTO.addDerivedAttribute(csvuserid);\n+\n+        MembershipTO memb12 = new MembershipTO();\n+        memb12.setRoleId(12L);\n+\n+        AttributeTO description = new AttributeTO();\n+        description.setSchema(\"description\");\n+        description.addValue(\"description\");\n+\n+        memb12.addAttribute(description);\n+\n+        userTO.addMembership(memb12);\n+\n+        MembershipTO memb13 = new MembershipTO();\n+        memb13.setRoleId(13L);\n+\n+        userTO.addMembership(memb13);\n+\n+        userTO.addResource(\"resource-ldap\");\n+\n+        UserTO actual = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+\n+        assertNotNull(actual);\n+        assertEquals(2, actual.getMemberships().size());\n+\n+        ConnObjectTO connObjectTO = restTemplate.getForObject(\n+                BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+                ConnObjectTO.class,\n+                \"resource-ldap\",\n+                userTO.getUsername());\n+\n+        assertNotNull(connObjectTO);\n+\n+        description = connObjectTO.getAttributeMap().get(\"description\");\n+        assertNotNull(description);\n+        assertEquals(1, description.getValues().size());\n+        assertEquals(\"description\", description.getValues().get(0));\n+\n+        AttributeTO title = connObjectTO.getAttributeMap().get(\"title\");\n+        assertNotNull(title);\n+        assertEquals(2, title.getValues().size());\n+        assertTrue(title.getValues().contains(\"r12\") && title.getValues().contains(\"r13\"));\n+\n+        // -----------------------------------\n+        // Remove the first membership and check for membership attr propagation and role attr propagation\n+        // -----------------------------------\n+        UserMod userMod = new UserMod();\n+        userMod.setId(actual.getId());\n+\n+        MembershipTO membershipTO = actual.getMemberships().get(0).getRoleId() == 12L\n+                ? actual.getMemberships().get(0) : actual.getMemberships().get(1);\n+\n+        userMod.addMembershipToBeRemoved(membershipTO.getId());\n+\n+        actual = restTemplate.postForObject(BASE_URL + \"user/update\", userMod, UserTO.class);\n+        assertNotNull(actual);\n+        assertEquals(1, actual.getMemberships().size());\n+\n+        connObjectTO = restTemplate.getForObject(\n+                BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+                ConnObjectTO.class,\n+                \"resource-ldap\",\n+                userTO.getUsername());\n+\n+        assertNotNull(connObjectTO);\n+\n+        description = connObjectTO.getAttributeMap().get(\"description\");\n+        assertTrue(description == null\n+                || description.getValues().isEmpty() || StringUtils.hasText(description.getValues().get(0)));\n+\n+        title = connObjectTO.getAttributeMap().get(\"title\");\n+        assertNotNull(title);\n+        assertEquals(1, title.getValues().size());\n+        assertTrue(title.getValues().contains(\"r13\"));\n+        // -----------------------------------\n+    }\n }"},{"sha":"27c5b6295aa0289c36332dbb0147d1149dc67a33","filename":"core/src/test/resources/content.xml","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2596621a12928f0553c70408afa7eea0dc1108ef/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2596621a12928f0553c70408afa7eea0dc1108ef/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=2596621a12928f0553c70408afa7eea0dc1108ef","patch":"@@ -123,6 +123,9 @@ under the License.\n \n   <RSchema name=\"rderived_dx\" type=\"String\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+           \n+  <RSchema name=\"title\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n \n   <MSchema name=\"subscriptionDate\" type=\"Date\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"\n@@ -133,6 +136,9 @@ under the License.\n \n   <MSchema name=\"mderived_dx\" type=\"String\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+           \n+  <MSchema name=\"description\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n \n   <UAttr id=\"100\" owner_id=\"1\" schema_name=\"fullname\"/>\n   <UAttrUniqueValue id=\"10\" attribute_id=\"100\" schema_name=\"fullname\" stringValue=\"chicchiricco\"/>\n@@ -188,6 +194,12 @@ under the License.\n     \n     <!-- rderiveddata is used to verify der schema deletion -->\n   <RDerSchema name=\"rderivedschema\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n+  \n+  <RAttr id=\"1004\" owner_id=\"12\" schema_name=\"title\"/>\n+  <RAttrValue attribute_id=\"1004\" id=\"94\" stringValue=\"r12\"/>\n+  \n+  <RAttr id=\"1005\" owner_id=\"13\" schema_name=\"title\"/>\n+  <RAttrValue attribute_id=\"1005\" id=\"95\" stringValue=\"r13\"/>\n \n   <MAttr id=\"100\" owner_id=\"4\" schema_name=\"subscriptionDate\"/>\n \n@@ -525,6 +537,12 @@ under the License.\n   <SchemaMapping id=\"315\" accountid=\"0\" password=\"0\"\n                  extAttrName=\"mail\" intAttrName=\"email\" intMappingType=\"UserSchema\"\n                  mandatoryCondition=\"false\" resource_name=\"resource-ldap\"/>\n+  <SchemaMapping id=\"316\" accountid=\"0\" password=\"0\"\n+                 extAttrName=\"title\" intAttrName=\"title\" intMappingType=\"RoleSchema\"\n+                 mandatoryCondition=\"false\" resource_name=\"resource-ldap\"/>\n+  <SchemaMapping id=\"317\" accountid=\"0\" password=\"0\"\n+                 extAttrName=\"description\" intAttrName=\"description\" intMappingType=\"MembershipSchema\"\n+                 mandatoryCondition=\"false\" resource_name=\"resource-ldap\"/>\n                    \n   <Task DTYPE=\"PropagationTask\" id=\"1\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n         resource_name=\"ws-target-resource-2\" syncopeUser_id=\"1\" latestExecStatus=\"SUCCESS\""}]}