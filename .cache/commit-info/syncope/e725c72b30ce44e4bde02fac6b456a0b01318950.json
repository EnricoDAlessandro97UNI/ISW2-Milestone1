{"sha":"e725c72b30ce44e4bde02fac6b456a0b01318950","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU3MjVjNzJiMzBjZTQ0ZTRiZGUwMmZhYzZiNDU2YTBiMDEzMTg5NTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-02-20T09:22:37Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-02-20T10:09:44Z"},"message":"[SYNCOPE-1262] Prefer to properly return void but add @ApiResponse for 204","tree":{"sha":"93a01dd5a9c5e0ef7cf4023c3b91d4ac201c6f6d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/93a01dd5a9c5e0ef7cf4023c3b91d4ac201c6f6d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e725c72b30ce44e4bde02fac6b456a0b01318950","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e725c72b30ce44e4bde02fac6b456a0b01318950","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e725c72b30ce44e4bde02fac6b456a0b01318950","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e725c72b30ce44e4bde02fac6b456a0b01318950/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"711d0c02c8f37a330325d8815e7f8b18e9599ff8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/711d0c02c8f37a330325d8815e7f8b18e9599ff8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/711d0c02c8f37a330325d8815e7f8b18e9599ff8"}],"stats":{"total":561,"additions":283,"deletions":278},"files":[{"sha":"2a720282885edb941ff0176c1a5189f4f5886938","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AccessTokenService.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAccessTokenService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAccessTokenService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAccessTokenService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -93,15 +93,15 @@ public interface AccessTokenService extends JAXRSService {\n \n     /**\n      * Invalidates the access token of the requesting user.\n-     *\n-     * @return an empty response if operation was successful\n      */\n     @Operation(security = {\n         @SecurityRequirement(name = \"Bearer\") })\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"logout\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response logout();\n+    void logout();\n \n     /**\n      * Returns a paged list of existing access tokens matching the given query.\n@@ -121,13 +121,14 @@ public interface AccessTokenService extends JAXRSService {\n      * Invalidates the access token matching the provided key.\n      *\n      * @param key access token key\n-     * @return an empty response if operation was successful\n      */\n     @Operation(security = {\n         @SecurityRequirement(name = \"BasicAuthentication\")\n         , @SecurityRequirement(name = \"Bearer\") })\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@PathParam(\"key\") String key);\n+    void delete(@PathParam(\"key\") String key);\n }"},{"sha":"3f0f2948fabef556ca7133533b3edbe7df9524a0","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -131,12 +131,13 @@ Response update(\n      * @param key any object key or name\n      * @param schemaType schema type\n      * @param schema schema\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}/{schemaType}/{schema}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(\n+    void delete(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"schemaType\") SchemaType schemaType,\n             @NotNull @PathParam(\"schema\") String schema);"},{"sha":"b3b750a737e7fb8ffd1e37f9528a18adb592a990","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeClassService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -95,22 +95,24 @@ public interface AnyTypeClassService extends JAXRSService {\n      * Updates the anyTypeClass matching the provided key.\n      *\n      * @param anyTypeClassTO anyTypeClass to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull AnyTypeClassTO anyTypeClassTO);\n+    void update(@NotNull AnyTypeClassTO anyTypeClassTO);\n \n     /**\n      * Deletes the anyTypeClass matching the provided key.\n      *\n      * @param key anyTypeClass key to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"b40f3c9cba9d641b2134ec5a080b0c4ffc31f037","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -94,21 +94,23 @@ public interface AnyTypeService extends JAXRSService {\n      * Updates the anyType matching the provided key.\n      *\n      * @param anyTypeTO anyType to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull AnyTypeTO anyTypeTO);\n+    void update(@NotNull AnyTypeTO anyTypeTO);\n \n     /**\n      * Deletes the anyType matching the provided key.\n      *\n      * @param key anyType key to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"dec0b2995f3c816237cee534d29a2487c89142db","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConfigurationService.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n@@ -77,22 +79,24 @@ public interface ConfigurationService extends JAXRSService {\n      * Creates / updates the configuration parameter with the given schema.\n      *\n      * @param value parameter value\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{schema}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response set(@NotNull AttrTO value);\n+    void set(@NotNull AttrTO value);\n \n     /**\n      * Deletes the configuration parameter with matching schema.\n      *\n      * @param schema configuration parameter schema\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{schema}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"schema\") String schema);\n+    void delete(@NotNull @PathParam(\"schema\") String schema);\n }"},{"sha":"4d5c3a6dbfb1376502b431148c591c5f78206b78","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorHistoryService.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n@@ -30,7 +32,6 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n \n /**\n@@ -58,21 +59,23 @@ public interface ConnectorHistoryService extends JAXRSService {\n      * Restores the connector configuration history instance matching the provided key.\n      *\n      * @param key connector configuration history instance key to be restored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response restore(@NotNull @PathParam(\"key\") String key);\n+    void restore(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Deletes the connector configuration history instance matching the provided key.\n      *\n      * @param key connector configuration history instance key to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"6e7996336d4a9a6469ecd9eacfa55baa093211ba","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -146,44 +146,47 @@ ConnInstanceTO readByResource(\n      * Updates the connector instance matching the provided key.\n      *\n      * @param connInstanceTO connector instance to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull ConnInstanceTO connInstanceTO);\n+    void update(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n      * Deletes the connector instance matching the provided key.\n      *\n      * @param key connector instance key to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Checks whether the connection to resource could be established.\n      *\n      * @param connInstanceTO connector instance to be used for connection check\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"check\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response check(@NotNull ConnInstanceTO connInstanceTO);\n+    void check(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n      * Reload all connector bundles and instances.\n-     *\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"reload\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response reload();\n+    void reload();\n }"},{"sha":"7da4922366115d36566193465ccffb6b71cc6e99","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DomainService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -95,22 +95,24 @@ public interface DomainService extends JAXRSService {\n      * Updates the domain matching the provided key.\n      *\n      * @param domainTO domain to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull DomainTO domainTO);\n+    void update(@NotNull DomainTO domainTO);\n \n     /**\n      * Deletes the domain matching the provided key.\n      *\n      * @param key domain key to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"920282b199dbd0826f0a2123c4b5d017634a6eb7","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DynRealmService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -95,23 +95,25 @@ public interface DynRealmService extends JAXRSService {\n      * Updates the dynamic realm matching the provided key.\n      *\n      * @param dynDynRealmTO dynamic realm to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull DynRealmTO dynDynRealmTO);\n+    void update(@NotNull DynRealmTO dynDynRealmTO);\n \n     /**\n      * Deletes the dynamic realm matching the provided key.\n      *\n      * @param key dynamic realm key to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n }"},{"sha":"2b09d49ea51fc73ed6474dddf552c7fbd21d4303","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ExecutableService.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FExecutableService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FExecutableService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FExecutableService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import java.util.List;\n import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n@@ -31,7 +33,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.JobTO;\n@@ -69,12 +70,13 @@ public interface ExecutableService extends JAXRSService {\n      * Deletes the executable execution matching the provided key.\n      *\n      * @param executionKey key of executable execution to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"executions/{executionKey}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response deleteExecution(@NotNull @PathParam(\"executionKey\") String executionKey);\n+    void deleteExecution(@NotNull @PathParam(\"executionKey\") String executionKey);\n \n     /**\n      * Deletes the executions belonging matching the given query.\n@@ -113,9 +115,10 @@ public interface ExecutableService extends JAXRSService {\n      *\n      * @param key executable key\n      * @param action action to execute\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"jobs/{key}\")\n-    Response actionJob(@NotNull @PathParam(\"key\") String key, @QueryParam(\"action\") JobAction action);\n+    void actionJob(@NotNull @PathParam(\"key\") String key, @QueryParam(\"action\") JobAction action);\n }"},{"sha":"5d040f3ec4aa4b9a7aba2b94b09ff5f65149dce0","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/LoggerService.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n@@ -31,7 +33,6 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.log.EventCategoryTO;\n import org.apache.syncope.common.lib.log.LogAppender;\n import org.apache.syncope.common.lib.log.LogStatementTO;\n@@ -107,24 +108,26 @@ public interface LoggerService extends JAXRSService {\n      *\n      * @param type LoggerType to be selected\n      * @param logger Logger to be created or updated\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull @PathParam(\"type\") LoggerType type, @NotNull LoggerTO logger);\n+    void update(@NotNull @PathParam(\"type\") LoggerType type, @NotNull LoggerTO logger);\n \n     /**\n      * Deletes the logger with matching name.\n      *\n      * @param type LoggerType to be selected\n      * @param name Logger name to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{type}/{name}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"type\") LoggerType type, @NotNull @PathParam(\"name\") String name);\n+    void delete(@NotNull @PathParam(\"type\") LoggerType type, @NotNull @PathParam(\"name\") String name);\n \n }"},{"sha":"145387237023839938598d5b4aa30f9dca76bb5d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/MailTemplateService.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -97,12 +97,13 @@ public interface MailTemplateService extends JAXRSService {\n      * Deletes the mail template matching the given key.\n      *\n      * @param key key for mail template to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Gets the template for the given key and format, if available.\n@@ -123,12 +124,13 @@ Response getFormat(\n      * @param key mail template\n      * @param format template format\n      * @param templateIn template to be set\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}/{format}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response setFormat(\n+    void setFormat(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"format\") MailTemplateFormat format,\n             InputStream templateIn);\n@@ -138,12 +140,13 @@ Response setFormat(\n      *\n      * @param key mail template\n      * @param format template format\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}/{format}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response removeFormat(\n+    void removeFormat(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"format\") MailTemplateFormat format);\n "},{"sha":"b000f427f91bf58e6d2dab6ec275a9688cd476d1","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -98,24 +98,26 @@ public interface NotificationService extends JAXRSService {\n      * Updates the notification matching the given key.\n      *\n      * @param notificationTO notification to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull NotificationTO notificationTO);\n+    void update(@NotNull NotificationTO notificationTO);\n \n     /**\n      * Deletes the notification matching the given key.\n      *\n      * @param key key for notification to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns details about notification job.\n@@ -131,10 +133,11 @@ public interface NotificationService extends JAXRSService {\n      * Executes an action on the notification job.\n      *\n      * @param action action to execute\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"job\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response actionJob(@QueryParam(\"action\") JobAction action);\n+    void actionJob(@QueryParam(\"action\") JobAction action);\n }"},{"sha":"5e84118bd2b4c043a3cc2af221319aadfa2018dd","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/PolicyService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -104,24 +104,26 @@ public interface PolicyService extends JAXRSService {\n      *\n      * @param type policy type\n      * @param policyTO Policy to replace existing policy\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull @PathParam(\"type\") PolicyType type, @NotNull PolicyTO policyTO);\n+    void update(@NotNull @PathParam(\"type\") PolicyType type, @NotNull PolicyTO policyTO);\n \n     /**\n      * Delete policy matching the given key.\n      *\n      * @param type policy type\n      * @param key key of policy to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{type}/{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"type\") PolicyType type, @NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"type\") PolicyType type, @NotNull @PathParam(\"key\") String key);\n \n }"},{"sha":"78764ca25dc616e003f28beb11a96779eab94234","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RelationshipTypeService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -95,22 +95,24 @@ public interface RelationshipTypeService extends JAXRSService {\n      * Updates the relationshipType matching the provided key.\n      *\n      * @param relationshipTypeTO relationshipType to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull RelationshipTypeTO relationshipTypeTO);\n+    void update(@NotNull RelationshipTypeTO relationshipTypeTO);\n \n     /**\n      * Deletes the relationshipType matching the provided key.\n      *\n      * @param key relationshipType key to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"0f8726f7b95f5309b128db23e0d32447ee2d22f2","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -97,24 +97,26 @@ public interface ReportService extends ExecutableService {\n      * Updates report with matching key.\n      *\n      * @param reportTO report to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull ReportTO reportTO);\n+    void update(@NotNull ReportTO reportTO);\n \n     /**\n      * Deletes report with matching key.\n      *\n      * @param key Deletes report with matching key\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Exports the report execution with matching key in the requested format."},{"sha":"37b2889a8cba8544e90f44d466ba5bc5e8302792","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportTemplateService.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportTemplateService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportTemplateService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportTemplateService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -96,12 +96,13 @@ public interface ReportTemplateService extends JAXRSService {\n      * Deletes the report template matching the given key.\n      *\n      * @param key key for report template to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Gets the template for the given key and format, if available.\n@@ -122,11 +123,12 @@ Response getFormat(\n      * @param key report template\n      * @param format template format\n      * @param templateIn template to be set\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}/{format}\")\n-    Response setFormat(\n+    void setFormat(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"format\") ReportTemplateFormat format,\n             InputStream templateIn);\n@@ -136,11 +138,12 @@ Response setFormat(\n      *\n      * @param key report template\n      * @param format template format\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}/{format}\")\n-    Response removeFormat(\n+    void removeFormat(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"format\") ReportTemplateFormat format);\n "},{"sha":"01f569ab6cb3f266190d9fd99a30edb992cc1d12","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceHistoryService.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n@@ -30,7 +32,6 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n \n /**\n@@ -58,21 +59,23 @@ public interface ResourceHistoryService extends JAXRSService {\n      * Restores the resource configuration history matching the provided key.\n      *\n      * @param key resource configuration history key to be restored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response restore(@NotNull @PathParam(\"key\") String key);\n+    void restore(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Deletes the resource configuration history matching the provided key.\n      *\n      * @param key resource configuration history key to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"b20c61b47c0d784311044cbea3bba945d84aaec1","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":15,"deletions":10,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -134,26 +134,28 @@ PagedConnObjectTOResult listConnObjects(\n      * Updates the resource matching the given name.\n      *\n      * @param resourceTO resource to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull ResourceTO resourceTO);\n+    void update(@NotNull ResourceTO resourceTO);\n \n     /**\n      * Queries the connector underlying the given resource for the latest sync token value associated to the given any\n      * type and stores the value internally, for later usage.\n      *\n      * @param key resource\n      * @param anyTypeKey any type\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"{key}/{anyTypeKey}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response setLatestSyncToken(\n+    void setLatestSyncToken(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n \n@@ -162,38 +164,41 @@ Response setLatestSyncToken(\n      *\n      * @param key resource\n      * @param anyTypeKey any type\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}/{anyTypeKey}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response removeSyncToken(\n+    void removeSyncToken(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n \n     /**\n      * Deletes the resource matching the given name.\n      *\n      * @param key name of resource to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Checks whether the connection to resource could be established.\n      *\n      * @param resourceTO resource to be checked\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"check\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response check(@NotNull ResourceTO resourceTO);\n+    void check(@NotNull ResourceTO resourceTO);\n \n     /**\n      * De-associate any objects from the given resource."},{"sha":"b57b0a4f8dbff78162157595cb367a376f04299b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -96,24 +96,26 @@ public interface RoleService extends JAXRSService {\n      * Updates the role matching the provided key.\n      *\n      * @param roleTO role to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull RoleTO roleTO);\n+    void update(@NotNull RoleTO roleTO);\n \n     /**\n      * Deletes the role matching the provided key.\n      *\n      * @param key role key to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Gets the console layout information as JSON string for the role with the given key, if available.\n@@ -131,22 +133,24 @@ public interface RoleService extends JAXRSService {\n      *\n      * @param key role key\n      * @param consoleLayoutInfoIn console layout information to be set\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}/consoleLayout\")\n     @Consumes({ MediaType.APPLICATION_JSON })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response setConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key, InputStream consoleLayoutInfoIn);\n+    void setConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key, InputStream consoleLayoutInfoIn);\n \n     /**\n      * Removes the console layout information for the role with the given key, if available.\n      *\n      * @param key role key\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}/consoleLayout\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response removeConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key);\n+    void removeConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"4b901fe6dedd35ffade246d64440ce30b0d612a4","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -107,23 +107,25 @@ <T extends SchemaTO> T read(\n      *\n      * @param type type for schemas to be updated\n      * @param schemaTO updated schema to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull @PathParam(\"type\") SchemaType type, @NotNull SchemaTO schemaTO);\n+    void update(@NotNull @PathParam(\"type\") SchemaType type, @NotNull SchemaTO schemaTO);\n \n     /**\n      * Deletes the schema matching the given type and key.\n      *\n      * @param type type for schema to be deleted\n      * @param key name of schema to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{type}/{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n }"},{"sha":"681921bdb8bc15e29f39c839ce3643288914f573","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SecurityQuestionService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -95,24 +95,26 @@ public interface SecurityQuestionService extends JAXRSService {\n      * Updates the security question matching the provided key.\n      *\n      * @param securityQuestionTO security question to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull SecurityQuestionTO securityQuestionTO);\n+    void update(@NotNull SecurityQuestionTO securityQuestionTO);\n \n     /**\n      * Deletes the security question matching the provided key.\n      *\n      * @param key security question key to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Ask for security question configured for the user matching the given username, if any."},{"sha":"7d76d55c3ceddf8b4734396dc41c77058abb0b00","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -107,31 +107,35 @@ <T extends TaskTO> T read(\n     @POST\n     @Path(\"{type}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response create(@NotNull @PathParam(\"type\") TaskType type, @NotNull SchedTaskTO taskTO);\n \n     /**\n      * Updates the task matching the provided key.\n      *\n      * @param type task type\n      * @param taskTO updated task to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull @PathParam(\"type\") TaskType type, @NotNull SchedTaskTO taskTO);\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    void update(@NotNull @PathParam(\"type\") TaskType type, @NotNull SchedTaskTO taskTO);\n \n     /**\n      * Deletes the task matching the provided key.\n      *\n      * @param type task type\n      * @param key key of task to be deleted\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{type}/{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"type\") TaskType type, @NotNull @PathParam(\"key\") String key);\n+    void delete(@NotNull @PathParam(\"type\") TaskType type, @NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Executes the provided bulk action."},{"sha":"17ff01e7cda785e13b9f3c870e5fbb887873d226","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -242,12 +242,13 @@ Response create(@NotNull UserTO userTO,\n      *\n      * @param username username for which the security answer is provided\n      * @param securityAnswer actual answer text\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"requestPasswordReset\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response requestPasswordReset(@NotNull @QueryParam(\"username\") String username, String securityAnswer);\n+    void requestPasswordReset(@NotNull @QueryParam(\"username\") String username, String securityAnswer);\n \n     /**\n      * Reset the password value for the user matching the provided token, if available and still valid.\n@@ -257,10 +258,11 @@ Response create(@NotNull UserTO userTO,\n      *\n      * @param token password reset token\n      * @param password new password to be set\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"confirmPasswordReset\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response confirmPasswordReset(@NotNull @QueryParam(\"token\") String token, String password);\n+    void confirmPasswordReset(@NotNull @QueryParam(\"token\") String token, String password);\n }"},{"sha":"316009dd5cd74b16a87509f9405ca4cd84e9b55f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/WorkflowService.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n@@ -90,13 +92,14 @@ Response exportDiagram(\n      * @param anyType any object type\n      * @param key workflow definition key\n      * @param definition workflow definition for matching kind\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{anyType}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response set(\n+    void set(\n             @NotNull @PathParam(\"anyType\") String anyType,\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull String definition);\n@@ -106,12 +109,13 @@ Response set(\n      *\n      * @param anyType any object type\n      * @param key workflow definition key\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{anyType}/{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(\n+    void delete(\n             @NotNull @PathParam(\"anyType\") String anyType,\n             @NotNull @PathParam(\"key\") String key);\n }"},{"sha":"92d2aadabc825bacac1710a8c1471b67cfa5d62a","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -202,11 +202,10 @@ public Response update(final String key, final SchemaType schemaType, final Attr\n     }\n \n     @Override\n-    public Response delete(final String key, final SchemaType schemaType, final String schema) {\n+    public void delete(final String key, final SchemaType schemaType, final String schema) {\n         String actualKey = getActualKey(key);\n         addUpdateOrReplaceAttr(\n                 actualKey, schemaType, new AttrTO.Builder().schema(schema).build(), PatchOperation.DELETE);\n-        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"aadbaf3327bd7daea03ee41d6b8d6cf80eff14d7","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractExecutableService.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractExecutableService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractExecutableService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractExecutableService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n-import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ExecTO;\n@@ -52,9 +51,8 @@ public List<ExecTO> listRecentExecutions(final int max) {\n     }\n \n     @Override\n-    public Response deleteExecution(final String executionKey) {\n+    public void deleteExecution(final String executionKey) {\n         getExecutableLogic().deleteExecution(executionKey);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -78,9 +76,8 @@ public List<JobTO> listJobs() {\n     }\n \n     @Override\n-    public Response actionJob(final String key, final JobAction action) {\n+    public void actionJob(final String key, final JobAction action) {\n         getExecutableLogic().actionJob(key, action);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"2b093242c7952b6dcea1c0a5a6ef6bed3c5c6518","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AccessTokenServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAccessTokenServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAccessTokenServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAccessTokenServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -59,9 +59,8 @@ public Response refresh() {\n     }\n \n     @Override\n-    public Response logout() {\n+    public void logout() {\n         logic.logout();\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -74,9 +73,8 @@ public PagedResult<AccessTokenTO> list(final AccessTokenQuery query) {\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"bd3149f9c681d2867f3348f2a6e81b41362fd69a","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyTypeClassServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -54,15 +54,13 @@ public Response create(final AnyTypeClassTO anyTypeTO) {\n     }\n \n     @Override\n-    public Response update(final AnyTypeClassTO anyTypeTO) {\n+    public void update(final AnyTypeClassTO anyTypeTO) {\n         logic.update(anyTypeTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"9dd4982620769624e0789a01ff3b4c7fccb336ee","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyTypeServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -54,15 +54,13 @@ public Response create(final AnyTypeTO anyTypeTO) {\n     }\n \n     @Override\n-    public Response update(final AnyTypeTO anyTypeTO) {\n+    public void update(final AnyTypeTO anyTypeTO) {\n         logic.update(anyTypeTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"4a40a7566ee162cb862225345f93f3c0ab8956d2","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConfigurationServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -50,9 +50,8 @@ public Response export() {\n     }\n \n     @Override\n-    public Response delete(final String schema) {\n+    public void delete(final String schema) {\n         logic.delete(schema);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -66,8 +65,7 @@ public AttrTO get(final String schema) {\n     }\n \n     @Override\n-    public Response set(final AttrTO value) {\n+    public void set(final AttrTO value) {\n         logic.set(value);\n-        return Response.noContent().build();\n     }\n }"},{"sha":"3424c5ea4fc5d2ea82522146e408c4b1df69642b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConnectorHistoryServiceImpl.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorHistoryServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorHistoryServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorHistoryServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n import org.apache.syncope.common.rest.api.service.ConnectorHistoryService;\n import org.apache.syncope.core.logic.ConnectorHistoryLogic;\n@@ -38,15 +37,13 @@ public List<ConnInstanceHistoryConfTO> list(final String connectorKey) {\n     }\n \n     @Override\n-    public Response restore(final String key) {\n+    public void restore(final String key) {\n         logic.restore(key);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"45da75822eaf3d4ec98e9c142d6c2629de93d847","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConnectorServiceImpl.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -46,9 +46,8 @@ public Response create(final ConnInstanceTO connInstanceTO) {\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -79,20 +78,17 @@ public ConnInstanceTO readByResource(final String resourceName, final String lan\n     }\n \n     @Override\n-    public Response update(final ConnInstanceTO connInstanceTO) {\n+    public void update(final ConnInstanceTO connInstanceTO) {\n         logic.update(connInstanceTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response check(final ConnInstanceTO connInstanceTO) {\n+    public void check(final ConnInstanceTO connInstanceTO) {\n         logic.check(connInstanceTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response reload() {\n+    public void reload() {\n         logic.reload();\n-        return Response.noContent().build();\n     }\n }"},{"sha":"daa8aad38823a564ebb47a98ce6dec07ab3a0b76","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/DomainServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDomainServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDomainServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDomainServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -54,15 +54,13 @@ public Response create(final DomainTO anyTypeTO) {\n     }\n \n     @Override\n-    public Response update(final DomainTO anyTypeTO) {\n+    public void update(final DomainTO anyTypeTO) {\n         logic.update(anyTypeTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"41e3bad4fb8190ac031714318cd2c4747c602958","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/DynRealmServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDynRealmServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDynRealmServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDynRealmServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -54,15 +54,13 @@ public Response create(final DynRealmTO roleTO) {\n     }\n \n     @Override\n-    public Response update(final DynRealmTO roleTO) {\n+    public void update(final DynRealmTO roleTO) {\n         logic.update(roleTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"a347dac04c1fb68fcca33e3f59d2ef9351f71a92","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/LoggerServiceImpl.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FLoggerServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FLoggerServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FLoggerServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -21,7 +21,6 @@\n import java.text.ParseException;\n import java.util.List;\n import javax.ws.rs.BadRequestException;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.log.EventCategoryTO;\n import org.apache.syncope.common.lib.log.LogAppender;\n import org.apache.syncope.common.lib.log.LogStatementTO;\n@@ -51,7 +50,7 @@ public List<LogStatementTO> getLastLogStatements(final String memoryAppender) {\n     }\n \n     @Override\n-    public Response delete(final LoggerType type, final String name) {\n+    public void delete(final LoggerType type, final String name) {\n         switch (type) {\n             case LOG:\n                 logic.deleteLog(name);\n@@ -68,7 +67,6 @@ public Response delete(final LoggerType type, final String name) {\n             default:\n                 throw new BadRequestException();\n         }\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -101,7 +99,7 @@ public LoggerTO read(final LoggerType type, final String name) {\n     }\n \n     @Override\n-    public Response update(final LoggerType type, final LoggerTO logger) {\n+    public void update(final LoggerType type, final LoggerTO logger) {\n         switch (type) {\n             case LOG:\n                 logic.setLogLevel(logger.getKey(), logger.getLevel().getLevel());\n@@ -118,7 +116,6 @@ public Response update(final LoggerType type, final LoggerTO logger) {\n             default:\n                 throw new BadRequestException();\n         }\n-        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"2c1a4348b2b73a82bcc1e13f8d8c72cb2711ab1c","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/MailTemplateServiceImpl.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -61,9 +61,8 @@ public List<MailTemplateTO> list() {\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -77,19 +76,17 @@ public Response getFormat(final String key, final MailTemplateFormat format) {\n     }\n \n     @Override\n-    public Response setFormat(final String key, final MailTemplateFormat format, final InputStream templateIn) {\n+    public void setFormat(final String key, final MailTemplateFormat format, final InputStream templateIn) {\n         try {\n             logic.setFormat(key, format, IOUtils.toString(templateIn, StandardCharsets.UTF_8));\n-            return Response.noContent().build();\n         } catch (final IOException e) {\n             LOG.error(\"While setting format {} for mail template {}\", format, key, e);\n             throw new InternalServerErrorException(\"Could not read entity\", e);\n         }\n     }\n \n     @Override\n-    public Response removeFormat(final String key, final MailTemplateFormat format) {\n+    public void removeFormat(final String key, final MailTemplateFormat format) {\n         logic.setFormat(key, format, null);\n-        return Response.noContent().build();\n     }\n }"},{"sha":"874f138f8441f5d0622da8564b918acb7c5bdff3","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/NotificationServiceImpl.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -56,15 +56,13 @@ public List<NotificationTO> list() {\n     }\n \n     @Override\n-    public Response update(final NotificationTO notificationTO) {\n+    public void update(final NotificationTO notificationTO) {\n         logic.update(notificationTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -73,8 +71,7 @@ public JobTO getJob() {\n     }\n \n     @Override\n-    public Response actionJob(final JobAction action) {\n+    public void actionJob(final JobAction action) {\n         logic.actionJob(action);\n-        return Response.noContent().build();\n     }\n }"},{"sha":"26161634bcb557b6cc595ca80dad361321bd167c","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/PolicyServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -45,9 +45,8 @@ public Response create(final PolicyType type, final PolicyTO policyTO) {\n     }\n \n     @Override\n-    public Response delete(final PolicyType type, final String key) {\n+    public void delete(final PolicyType type, final String key) {\n         logic.delete(type, key);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -61,8 +60,7 @@ public <T extends PolicyTO> T read(final PolicyType type, final String key) {\n     }\n \n     @Override\n-    public Response update(final PolicyType type, final PolicyTO policyTO) {\n+    public void update(final PolicyType type, final PolicyTO policyTO) {\n         logic.update(type, policyTO);\n-        return Response.noContent().build();\n     }\n }"},{"sha":"1cdc1d4b6b0073b3b7b17b99691e6c8ca808008d","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RelationshipTypeServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRelationshipTypeServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRelationshipTypeServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRelationshipTypeServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -54,15 +54,13 @@ public Response create(final RelationshipTypeTO anyTypeTO) {\n     }\n \n     @Override\n-    public Response update(final RelationshipTypeTO anyTypeTO) {\n+    public void update(final RelationshipTypeTO anyTypeTO) {\n         logic.update(anyTypeTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"5a44cb08545f833070c6b60973977ad6cb11ea2e","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -54,9 +54,8 @@ public Response create(final ReportTO reportTO) {\n     }\n \n     @Override\n-    public Response update(final ReportTO reportTO) {\n+    public void update(final ReportTO reportTO) {\n         logic.update(reportTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -82,8 +81,7 @@ public Response exportExecutionResult(final String executionKey, final ReportExe\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n }"},{"sha":"9fc47d0d6360cc744194f558723be87e2d20bb60","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportTemplateServiceImpl.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -62,9 +62,8 @@ public List<ReportTemplateTO> list() {\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -78,19 +77,17 @@ public Response getFormat(final String key, final ReportTemplateFormat format) {\n     }\n \n     @Override\n-    public Response setFormat(final String key, final ReportTemplateFormat format, final InputStream templateIn) {\n+    public void setFormat(final String key, final ReportTemplateFormat format, final InputStream templateIn) {\n         try {\n             logic.setFormat(key, format, IOUtils.toString(templateIn, StandardCharsets.UTF_8.name()));\n-            return Response.noContent().build();\n         } catch (final IOException e) {\n             LOG.error(\"While setting format {} for report template {}\", format, key, e);\n             throw new InternalServerErrorException(\"Could not read entity\", e);\n         }\n     }\n \n     @Override\n-    public Response removeFormat(final String key, final ReportTemplateFormat format) {\n+    public void removeFormat(final String key, final ReportTemplateFormat format) {\n         logic.setFormat(key, format, null);\n-        return Response.noContent().build();\n     }\n }"},{"sha":"b69b5bee7fb74d3ac3a030b30a223d133e7d86bd","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ResourceHistoryServiceImpl.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceHistoryServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceHistoryServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceHistoryServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n import org.apache.syncope.common.rest.api.service.ResourceHistoryService;\n import org.apache.syncope.core.logic.ResourceHistoryLogic;\n@@ -38,15 +37,13 @@ public List<ResourceHistoryConfTO> list(final String resourceKey) {\n     }\n \n     @Override\n-    public Response restore(final String key) {\n+    public void restore(final String key) {\n         logic.restore(key);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"2b76dfc2f0c119d08ab46558ff3553e74bbd99f2","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ResourceServiceImpl.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -72,27 +72,23 @@ public Response create(final ResourceTO resourceTO) {\n     }\n \n     @Override\n-    public Response update(final ResourceTO resourceTO) {\n+    public void update(final ResourceTO resourceTO) {\n         logic.update(resourceTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response setLatestSyncToken(final String key, final String anyTypeKey) {\n+    public void setLatestSyncToken(final String key, final String anyTypeKey) {\n         logic.setLatestSyncToken(key, anyTypeKey);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response removeSyncToken(final String key, final String anyTypeKey) {\n+    public void removeSyncToken(final String key, final String anyTypeKey) {\n         logic.removeSyncToken(key, anyTypeKey);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -142,9 +138,8 @@ public PagedConnObjectTOResult listConnObjects(\n     }\n \n     @Override\n-    public Response check(final ResourceTO resourceTO) {\n+    public void check(final ResourceTO resourceTO) {\n         logic.check(resourceTO);\n-        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"6a0a75adf1ec0979459d2e15ae79cbc1f4e6cbc8","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RoleServiceImpl.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -61,15 +61,13 @@ public Response create(final RoleTO roleTO) {\n     }\n \n     @Override\n-    public Response update(final RoleTO roleTO) {\n+    public void update(final RoleTO roleTO) {\n         logic.update(roleTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -83,20 +81,18 @@ public Response getConsoleLayoutInfo(final String key) {\n     }\n \n     @Override\n-    public Response setConsoleLayoutInfo(final String key, final InputStream consoleLayoutIn) {\n+    public void setConsoleLayoutInfo(final String key, final InputStream consoleLayoutIn) {\n         try {\n             logic.setConsoleLayoutInfo(key, IOUtils.toString(consoleLayoutIn, StandardCharsets.UTF_8.name()));\n-            return Response.noContent().build();\n         } catch (final IOException e) {\n             LOG.error(\"While setting console layout info for role {}\", key, e);\n             throw new InternalServerErrorException(\"Could not read entity\", e);\n         }\n     }\n \n     @Override\n-    public Response removeConsoleLayoutInfo(final String key) {\n+    public void removeConsoleLayoutInfo(final String key) {\n         logic.setConsoleLayoutInfo(key, null);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"5c74e4156612da1bb75237f9302cd711888d38d6","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SchemaServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -47,9 +47,8 @@ public Response create(final SchemaType schemaType, final SchemaTO schemaTO) {\n     }\n \n     @Override\n-    public Response delete(final SchemaType schemaType, final String key) {\n+    public void delete(final SchemaType schemaType, final String key) {\n         logic.delete(schemaType, key);\n-        return Response.noContent().build();\n     }\n \n     @Override\n@@ -63,8 +62,7 @@ public <T extends SchemaTO> T read(final SchemaType schemaType, final String key\n     }\n \n     @Override\n-    public Response update(final SchemaType schemaType, final SchemaTO schemaTO) {\n+    public void update(final SchemaType schemaType, final SchemaTO schemaTO) {\n         logic.update(schemaType, schemaTO);\n-        return Response.noContent().build();\n     }\n }"},{"sha":"5dca5032b69b514e7ed9a46bea9efaeb5fe9b8a4","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SecurityQuestionServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -55,15 +55,13 @@ public Response create(final SecurityQuestionTO securityQuestionTO) {\n     }\n \n     @Override\n-    public Response update(final SecurityQuestionTO securityQuestionTO) {\n+    public void update(final SecurityQuestionTO securityQuestionTO) {\n         logic.update(securityQuestionTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"6c3a10baec7147a46bdcdac721f04807215b51d6","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -64,9 +64,8 @@ public Response create(final TaskType type, final SchedTaskTO taskTO) {\n     }\n \n     @Override\n-    public Response delete(final TaskType type, final String key) {\n+    public void delete(final TaskType type, final String key) {\n         logic.delete(type, key);\n-        return Response.noContent().build();\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -91,9 +90,8 @@ public <T extends TaskTO> T read(final TaskType type, final String key, final bo\n     }\n \n     @Override\n-    public Response update(final TaskType type, final SchedTaskTO taskTO) {\n+    public void update(final TaskType type, final SchedTaskTO taskTO) {\n         logic.updateSchedTask(type, taskTO);\n-        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"82d9cbcf1b37dafc072d040d56df2fbe53545241","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserSelfServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -96,27 +96,25 @@ public Response changePassword(final String password) {\n     }\n \n     @Override\n-    public Response requestPasswordReset(final String username, final String securityAnswer) {\n+    public void requestPasswordReset(final String username, final String securityAnswer) {\n         if (!syncopeLogic.isPwdResetAllowed()) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.DelegatedAdministration);\n             sce.getElements().add(\"Password reset forbidden by configuration\");\n             throw sce;\n         }\n \n         logic.requestPasswordReset(username, securityAnswer);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response confirmPasswordReset(final String token, final String password) {\n+    public void confirmPasswordReset(final String token, final String password) {\n         if (!syncopeLogic.isPwdResetAllowed()) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.DelegatedAdministration);\n             sce.getElements().add(\"Password reset forbidden by configuration\");\n             throw sce;\n         }\n \n         logic.confirmPasswordReset(token, password);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"2321e0adbc791f5f82650006f5dfb72c55567f0e","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/WorkflowServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -66,20 +66,18 @@ public Response exportDiagram(final String anyType, final String key) {\n     }\n \n     @Override\n-    public Response set(final String anyType, final String key, final String definition) {\n+    public void set(final String anyType, final String key, final String definition) {\n         WorkflowDefinitionFormat format =\n                 messageContext.getHttpHeaders().getMediaType().equals(MediaType.APPLICATION_JSON_TYPE)\n                 ? WorkflowDefinitionFormat.JSON\n                 : WorkflowDefinitionFormat.XML;\n \n         logic.importDefinition(anyType, key, format, definition);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String anyType, final String key) {\n+    public void delete(final String anyType, final String key) {\n         logic.delete(anyType, key);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"2d53b88c8a1c43a44f2ec5ab85aba89e604c3f95","filename":"ext/camel/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/CamelRouteService.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n@@ -31,7 +33,6 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.CamelMetrics;\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -76,23 +77,24 @@ CamelRouteTO read(\n      *\n      * @param anyTypeKind any type kind\n      * @param route to be updated\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{anyTypeKind}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind, @NotNull CamelRouteTO route);\n+    void update(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind, @NotNull CamelRouteTO route);\n \n     /**\n      * Restart the underlying Apache Camel context.\n-     *\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"restartContext\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response restartContext();\n+    void restartContext();\n \n     /**\n      * Provides Camel metrics."},{"sha":"57b9242715c3d3a53324e9f961155c04606b73db","filename":"ext/camel/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/CamelRouteServiceImpl.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.CamelMetrics;\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -45,15 +44,13 @@ public CamelRouteTO read(final AnyTypeKind anyTypeKind, final String key) {\n     }\n \n     @Override\n-    public Response update(final AnyTypeKind anyTypeKind, final CamelRouteTO route) {\n+    public void update(final AnyTypeKind anyTypeKind, final CamelRouteTO route) {\n         logic.update(anyTypeKind, route);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response restartContext() {\n+    public void restartContext() {\n         logic.restartContext();\n-        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"3123808f4cf89190112346fea83476e70137d608","filename":"ext/saml2sp/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SAML2IdPService.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n@@ -92,22 +94,24 @@ public interface SAML2IdPService extends JAXRSService {\n      * Updates the SAML 2.0 Identity Provider with matching entityID.\n      *\n      * @param saml2IdpTO idp configuration to be stored\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull SAML2IdPTO saml2IdpTO);\n+    void update(@NotNull SAML2IdPTO saml2IdpTO);\n \n     /**\n      * Deletes the SAML 2.0 Identity Provider with matching entityID.\n      *\n      * @param key SAML 2.0 Identity Provider's entityID\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@PathParam(\"key\") String key);\n+    void delete(@PathParam(\"key\") String key);\n }"},{"sha":"3cfbbc2d02426d775df350b6c3d85371452d412d","filename":"ext/saml2sp/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SAML2SPService.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2SPService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2SPService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2SPService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n@@ -95,11 +97,12 @@ SAML2RequestTO createLoginRequest(\n      * Validates the received SAML 2.0 logout response.\n      *\n      * @param response SAML response and relay state\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Path(\"logoutResponse\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response validateLogoutResponse(SAML2ReceivedResponseTO response);\n+    void validateLogoutResponse(SAML2ReceivedResponseTO response);\n }"},{"sha":"ebda30da3e77b29be6a4a97ad8b6519870364e21","filename":"ext/saml2sp/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SAML2IdPServiceImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2IdPServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2IdPServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2IdPServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -61,15 +61,13 @@ public Response importFromMetadata(final InputStream input) {\n     }\n \n     @Override\n-    public Response update(final SAML2IdPTO saml2IdpTO) {\n+    public void update(final SAML2IdPTO saml2IdpTO) {\n         logic.update(saml2IdpTO);\n-        return Response.noContent().build();\n     }\n \n     @Override\n-    public Response delete(final String key) {\n+    public void delete(final String key) {\n         logic.delete(key);\n-        return Response.noContent().build();\n     }\n \n }"},{"sha":"3b8c84757a78f79c8c0a9b58d74efe8d6971193b","filename":"ext/saml2sp/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SAML2SPServiceImpl.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SPServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SPServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SPServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -47,9 +47,7 @@ public Response getMetadata(final String spEntityID, final String urlContext) {\n     }\n \n     @Override\n-    public SAML2RequestTO createLoginRequest(\n-            final String spEntityID, final String idpEntityID) {\n-\n+    public SAML2RequestTO createLoginRequest(final String spEntityID, final String idpEntityID) {\n         return logic.createLoginRequest(StringUtils.appendIfMissing(spEntityID, \"/\"), idpEntityID);\n     }\n \n@@ -66,9 +64,8 @@ public SAML2RequestTO createLogoutRequest(final String spEntityID) {\n     }\n \n     @Override\n-    public Response validateLogoutResponse(final SAML2ReceivedResponseTO response) {\n+    public void validateLogoutResponse(final SAML2ReceivedResponseTO response) {\n         logic.validateLogoutResponse(getJWTToken(), response);\n-        return Response.noContent().build();\n     }\n \n     private String getJWTToken() {"},{"sha":"353ea34a13e8556cd58319851a61d8c91292093f","filename":"ext/scimv2/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SCIMConfService.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n@@ -28,7 +30,6 @@\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.scim.SCIMConf;\n \n /**\n@@ -54,10 +55,11 @@ public interface SCIMConfService extends JAXRSService {\n      * Sets SCIM configuration.\n      *\n      * @param conf SCIM configuration\n-     * @return an empty response if operation was successful\n      */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @PUT\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response set(@NotNull SCIMConf conf);\n+    void set(@NotNull SCIMConf conf);\n }"},{"sha":"223aca7e4cfa777bc32e297cb016a2538e3f0f62","filename":"ext/scimv2/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SCIMConfServiceImpl.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e725c72b30ce44e4bde02fac6b456a0b01318950/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java?ref=e725c72b30ce44e4bde02fac6b456a0b01318950","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n-import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.scim.SCIMConf;\n import org.apache.syncope.common.rest.api.service.SCIMConfService;\n import org.apache.syncope.core.logic.scim.SCIMConfManager;\n@@ -35,9 +34,8 @@ public SCIMConf get() {\n     }\n \n     @Override\n-    public Response set(final SCIMConf conf) {\n+    public void set(final SCIMConf conf) {\n         manager.set(conf);\n-        return Response.noContent().build();\n     }\n \n }"}]}