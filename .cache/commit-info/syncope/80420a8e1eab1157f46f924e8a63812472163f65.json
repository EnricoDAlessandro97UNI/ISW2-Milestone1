{"sha":"80420a8e1eab1157f46f924e8a63812472163f65","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgwNDIwYThlMWVhYjExNTdmNDZmOTI0ZThhNjM4MTI0NzIxNjNmNjU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-10-22T08:41:24Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-10-22T08:41:24Z"},"message":"[SYNCOPE-144] Now name is mandatory for SchedTask and SyncTask\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1400797 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0f760a716a7d8f346dea4c89e298a1c8337201c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0f760a716a7d8f346dea4c89e298a1c8337201c9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/80420a8e1eab1157f46f924e8a63812472163f65","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/80420a8e1eab1157f46f924e8a63812472163f65","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/80420a8e1eab1157f46f924e8a63812472163f65","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/80420a8e1eab1157f46f924e8a63812472163f65/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b909ec116fe9057af484ed7707503850f1757181","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b909ec116fe9057af484ed7707503850f1757181","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b909ec116fe9057af484ed7707503850f1757181"}],"stats":{"total":76,"additions":37,"deletions":39},"files":[{"sha":"f73d7a78d52e6fb641a345f8070a0d6311302c2e","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":8,"deletions":15,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=80420a8e1eab1157f46f924e8a63812472163f65","patch":"@@ -36,15 +36,13 @@\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.NotificationDAO;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n-import org.apache.syncope.core.persistence.dao.TaskExecDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.dao.UserSearchDAO;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.scheduling.NotificationJob;\n import org.apache.syncope.core.util.ConnObjectUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.util.NotFoundException;\n-import org.apache.syncope.core.workflow.WorkflowResult;\n import org.apache.syncope.types.IntMappingType;\n import org.apache.velocity.app.VelocityEngine;\n import org.apache.velocity.exception.VelocityException;\n@@ -100,12 +98,6 @@ public class NotificationManager {\n     @Autowired\n     private TaskDAO taskDAO;\n \n-    /**\n-     * TaskExec DAO.\n-     */\n-    @Autowired\n-    private TaskExecDAO taskExecDAO;\n-\n     /**\n      * Velocity template engine.\n      */\n@@ -190,23 +182,24 @@ private NotificationTask getNotificationTask(final Notification notification, fi\n     }\n \n     /**\n-     * Create notification tasks for each notification matching the passed workflow result.\n+     * Create notification tasks for each notification matching the given user id and (some of) tasks performed.\n      *\n-     * @param wfResult workflow result\n+     * @param userId user id\n+     * @param performedTasks set of actions performed on given user id\n      * @throws NotFoundException if user contained in the workflow result cannot be found\n      */\n-    public void createTasks(final WorkflowResult<Long> wfResult)\n+    public void createTasks(final Long userId, final Set<String> performedTasks)\n             throws NotFoundException {\n \n-        SyncopeUser user = userDAO.find(wfResult.getResult());\n+        SyncopeUser user = userDAO.find(userId);\n         if (user == null) {\n-            throw new NotFoundException(\"User \" + wfResult.getResult());\n+            throw new NotFoundException(\"User \" + userId);\n         }\n \n         for (Notification notification : notificationDAO.findAll()) {\n             if (searchDAO.matches(user, notification.getAbout())) {\n                 Set<String> events = new HashSet<String>(notification.getEvents());\n-                events.retainAll(wfResult.getPerformedTasks());\n+                events.retainAll(performedTasks);\n \n                 if (!events.isEmpty()) {\n                     LOG.debug(\"Creating notification task for events {} about {}\", events, user);\n@@ -267,7 +260,7 @@ public TaskExec storeExec(final TaskExec execution) {\n \n     /**\n      * Mark NotificationTask with provided id as executed.\n-     * \n+     *\n      * @param taskId task to be updated\n      */\n     public void setTaskExecuted(final Long taskId) {"},{"sha":"b1499a71e5fb942753066cff8e09fc5e4febc049","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/SchedTask.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchedTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchedTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchedTask.java?ref=80420a8e1eab1157f46f924e8a63812472163f65","patch":"@@ -33,6 +33,7 @@ public class SchedTask extends Task {\n     @NotNull\n     protected String jobClassName;\n \n+    @NotNull\n     protected String name;\n \n     protected String description;"},{"sha":"4559aab85c89009f12f4acc009dd8f0ffed7cf33","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=80420a8e1eab1157f46f924e8a63812472163f65","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.rest.controller;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n@@ -313,8 +314,7 @@ public void handle(final String resourceName, final PropagationTaskExecStatus ex\n             }\n         });\n \n-        notificationManager.createTasks(new WorkflowResult<Long>(created.getResult().getKey(), created.getPropByRes(),\n-                created.getPerformedTasks()));\n+        notificationManager.createTasks(created.getResult().getKey(), created.getPerformedTasks());\n \n         final UserTO savedTO = userDataBinder.getUserTO(created.getResult().getKey());\n         savedTO.setPropagationTOs(propagations);\n@@ -364,8 +364,7 @@ public void handle(final String resourceName, final PropagationTaskExecStatus ex\n             }\n         });\n \n-        notificationManager.createTasks(new WorkflowResult<Long>(updated.getResult().getKey(), updated.getPropByRes(),\n-                updated.getPerformedTasks()));\n+        notificationManager.createTasks(updated.getResult().getKey(), updated.getPerformedTasks());\n \n         final UserTO updatedTO = userDataBinder.getUserTO(updated.getResult().getKey());\n         updatedTO.setPropagationTOs(propagations);\n@@ -532,7 +531,7 @@ public UserTO executeWorkflow(@RequestBody final UserTO userTO, @PathVariable(\"t\n \n         propagationManager.execute(tasks);\n \n-        notificationManager.createTasks(updated);\n+        notificationManager.createTasks(updated.getResult(), updated.getPerformedTasks());\n \n         final UserTO savedTO = userDataBinder.getUserTO(updated.getResult());\n \n@@ -645,7 +644,7 @@ private UserTO setStatus(final SyncopeUser user, final String token, final Set<S\n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(user, status, resources);\n \n         propagationManager.execute(tasks);\n-        notificationManager.createTasks(updated);\n+        notificationManager.createTasks(updated.getResult(), updated.getPerformedTasks());\n \n         final UserTO savedTO = userDataBinder.getUserTO(updated.getResult());\n \n@@ -664,7 +663,7 @@ private UserTO deleteByUserId(final Long userId)\n         // information could only be available after wfAdapter.delete(), which\n         // will also effectively remove user from db, thus making virtually\n         // impossible by NotificationManager to fetch required user information\n-        notificationManager.createTasks(new WorkflowResult<Long>(userId, null, \"delete\"));\n+        notificationManager.createTasks(userId, Collections.singleton(\"delete\"));\n \n         List<PropagationTask> tasks = propagationManager.getDeleteTaskIds(userId);\n "},{"sha":"6f6aa8853b8aaa695c97d099b6d1c7ef1c6dba1a","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=80420a8e1eab1157f46f924e8a63812472163f65","patch":"@@ -173,8 +173,12 @@ public SchedTask createSchedTask(final SchedTaskTO taskTO, final TaskUtil taskUt\n \n     public void updateSchedTask(final SchedTask task, final SchedTaskTO taskTO, final TaskUtil taskUtil) {\n         task.setCronExpression(taskTO.getCronExpression());\n-        task.setName(taskTO.getName());\n-        task.setDescription(taskTO.getDescription());\n+        if (StringUtils.isNotBlank(taskTO.getName())) {\n+            task.setName(taskTO.getName());\n+        }\n+        if (StringUtils.isNotBlank(taskTO.getDescription())) {\n+            task.setDescription(taskTO.getDescription());\n+        }\n \n         if (taskUtil == TaskUtil.SYNC) {\n             if (!(task instanceof SyncTask)) {"},{"sha":"6670ac9ba5193ec00010aadb129c61a10dd70af3","filename":"core/src/main/java/org/apache/syncope/core/scheduling/SyncJob.java","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=80420a8e1eab1157f46f924e8a63812472163f65","patch":"@@ -290,11 +290,11 @@ private List<Long> findExistingUsers(final SyncDelta delta) {\n \n     /**\n      * Creates user and stores the result in parameter delta (!)\n-     * \n+     *\n      * @param delta\n      * @param dryRun\n      * @return\n-     * @throws JobExecutionException \n+     * @throws JobExecutionException\n      */\n     private SyncResult createUser(SyncDelta delta, final boolean dryRun) throws JobExecutionException {\n \n@@ -335,8 +335,7 @@ private SyncResult createUser(SyncDelta delta, final boolean dryRun) throws JobE\n \n                 propagationManager.execute(tasks);\n \n-                notificationManager.createTasks(new WorkflowResult<Long>(created.getResult().getKey(),\n-                        created.getPropByRes(), created.getPerformedTasks()));\n+                notificationManager.createTasks(created.getResult().getKey(), created.getPerformedTasks());\n \n                 userTO = userDataBinder.getUserTO(created.getResult().getKey());\n \n@@ -392,8 +391,7 @@ private void updateUsers(SyncDelta delta, final List<Long> users, final boolean\n \n                         propagationManager.execute(tasks);\n \n-                        notificationManager.createTasks(new WorkflowResult<Long>(updated.getResult().getKey(),\n-                                updated.getPropByRes(), updated.getPerformedTasks()));\n+                        notificationManager.createTasks(updated.getResult().getKey(), updated.getPerformedTasks());\n \n                         userTO = userDataBinder.getUserTO(updated.getResult().getKey());\n                     }\n@@ -442,7 +440,7 @@ private void deleteUsers(SyncDelta delta, final List<Long> users, final boolean\n                                 ((SyncTask) this.task).getResource().getName());\n                         propagationManager.execute(tasks);\n \n-                        notificationManager.createTasks(new WorkflowResult<Long>(userId, null, \"delete\"));\n+                        notificationManager.createTasks(userId, Collections.singleton(\"delete\"));\n \n                     } catch (Exception e) {\n                         LOG.error(\"Could not propagate user \" + userId, e);\n@@ -541,7 +539,7 @@ private String createReport(final List<SyncResult> syncResults, final TraceLevel\n         // anyway.\n         report.append(\"Users [created/failures]: \").append(created.size()).append('/').append(createdFailed.size())\n                 .append(' ').append(\"[updated/failures]: \").append(updated.size()).append('/').append(\n-                        updatedFailed.size()).append(' ').append(\"[deleted/ failures]: \").append(deleted.size())\n+                updatedFailed.size()).append(' ').append(\"[deleted/ failures]: \").append(deleted.size())\n                 .append('/').append(deletedFailed.size());\n \n         // Failures\n@@ -706,12 +704,12 @@ protected final List<SyncResult> handleDelta(final SyncTask syncTask, final Sync\n         final List<SyncResult> results = new ArrayList<SyncResult>();\n \n         LOG.debug(\"Process '{}' for '{}'\", delta.getDeltaType(), delta.getUid().getUidValue());\n-        \n+\n         final List<Long> users = findExistingUsers(delta);\n-        \n+\n         switch (delta.getDeltaType()) {\n             case CREATE_OR_UPDATE:\n-                if (users.isEmpty()) { \n+                if (users.isEmpty()) {\n                     if (syncTask.isPerformCreate()) {\n                         results.add(createUser(delta, dryRun));\n                     } else {"},{"sha":"a38775ca7e87943aaf2ca7c4488693635a295a39","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=80420a8e1eab1157f46f924e8a63812472163f65","patch":"@@ -113,6 +113,8 @@ public void saveSyncTask() {\n         assertNotNull(resource);\n \n         SyncTask task = new SyncTask();\n+        task.setName(\"saveSyncTask\");\n+        task.setDescription(\"SyncTask description\");\n         task.setUserTemplate(new UserTO());\n         task.setCronExpression(\"BLA BLA\");\n "},{"sha":"d5b81f8bc7ddfccdc678a64361acf2e6e8508926","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=80420a8e1eab1157f46f924e8a63812472163f65","patch":"@@ -64,6 +64,7 @@ public void getJobActionsClasses() {\n     @Test\n     public void create() {\n         SyncTaskTO task = new SyncTaskTO();\n+        task.setName(\"Test create Sync\");\n         task.setResource(\"ws-target-resource-2\");\n \n         UserTO template = new UserTO();"},{"sha":"e6b1477ed0fc689aa90bff171f3e221861823905","filename":"core/src/test/resources/content.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/80420a8e1eab1157f46f924e8a63812472163f65/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=80420a8e1eab1157f46f924e8a63812472163f65","patch":"@@ -569,19 +569,19 @@ under the License.\n   <Task DTYPE=\"PropagationTask\" id=\"3\" propagationMode=\"TWO_PHASES\" propagationOperation=\"DELETE\"\n         resource_name=\"ws-target-resource-2\" syncopeUser_id=\"1\"\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n-  <Task DTYPE=\"SyncTask\" id=\"4\" resource_name=\"resource-csv\"\n+  <Task DTYPE=\"SyncTask\" id=\"4\" name=\"CSV Task\" resource_name=\"resource-csv\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n         jobClassName=\"org.apache.syncope.core.scheduling.SyncJob\"/>\n-  <Task DTYPE=\"SchedTask\" id=\"5\" jobClassName=\"org.apache.syncope.core.scheduling.SampleJob\" cronExpression=\"0 0 0 1 * ?\"/>\n+  <Task DTYPE=\"SchedTask\" id=\"5\" name=\"SampleJob Task\" jobClassName=\"org.apache.syncope.core.scheduling.SampleJob\" cronExpression=\"0 0 0 1 * ?\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"6\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n         resource_name=\"ws-target-resource-nopropagation\" syncopeUser_id=\"1\"\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n-  <Task DTYPE=\"SyncTask\" id=\"7\" resource_name=\"resource-testdb\"\n+  <Task DTYPE=\"SyncTask\" id=\"7\" name=\"TestDB Task\" resource_name=\"resource-testdb\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n         jobClassName=\"org.apache.syncope.core.scheduling.SyncJob\"/>\n   <Task DTYPE=\"NotificationTask\" id=\"8\" sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" \n         textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\"/>\n-  <Task DTYPE=\"SyncTask\" id=\"9\" resource_name=\"resource-testdb2\"\n+  <Task DTYPE=\"SyncTask\" id=\"9\" name=\"TestDB2 Task\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n         jobClassName=\"org.apache.syncope.core.scheduling.SyncJob\"/>\n         "}]}