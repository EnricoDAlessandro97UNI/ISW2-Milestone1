{"sha":"302c1fb00c70dafebb71b7ae4398ba23f0270b92","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMwMmMxZmIwMGM3MGRhZmViYjcxYjdhZTQzOThiYTIzZjAyNzBiOTI=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2020-01-16T18:18:45Z"},"committer":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2020-01-17T08:30:26Z"},"message":"analysis: minor fixes to typos in docs/logs","tree":{"sha":"8e2cec508324f5b45ddb188da76cabd1f4bf887c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8e2cec508324f5b45ddb188da76cabd1f4bf887c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/302c1fb00c70dafebb71b7ae4398ba23f0270b92","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEElUyo8doQ6pkfeJVxEb3Dumou+aoFAl4hcKMACgkQEb3Dumou\n+aqrwgf+Irob38QXl7s3ljjHLMBTHXlIpzDDIFA7DlgE/a24EDJQwT6tyRdBMqqW\nqIqB3JMbOh1ba8OROWV1roUfAXaXEAF4p4QoZv7ZxlAOfzj1n57bGo4cfaLnh32B\n2qzM6OBy+yvpDOe4Jvvn4GNpzdIrZ2u6dGo06lmfM93IfZ9NqeGLlynxP/KOubRh\nq6YEJC8mj4+LLoKSdbKnrn0MyCkrk3uPP4gMhzoyY+0DXS+PwEJsw8Ce9EYz8kf2\neYQ/LwxdtuzQo0bcO+Ji/S2/+uiGmb6iBR0A89gh7Q+/kLPkZx7g11vzbQ07SLhr\nDAG6EHcvOb3Rz6376L6dj3qKfWzbug==\n=/r0H\n-----END PGP SIGNATURE-----","payload":"tree 8e2cec508324f5b45ddb188da76cabd1f4bf887c\nparent 50af303f0a3f9384c035ed62d6e4a523827b80f7\nauthor Misagh Moayyed <mm1844@gmail.com> 1579198725 +0400\ncommitter Misagh Moayyed <mm1844@gmail.com> 1579249826 +0400\n\nanalysis: minor fixes to typos in docs/logs\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/302c1fb00c70dafebb71b7ae4398ba23f0270b92","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/302c1fb00c70dafebb71b7ae4398ba23f0270b92","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/302c1fb00c70dafebb71b7ae4398ba23f0270b92/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"parents":[{"sha":"50af303f0a3f9384c035ed62d6e4a523827b80f7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/50af303f0a3f9384c035ed62d6e4a523827b80f7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/50af303f0a3f9384c035ed62d6e4a523827b80f7"}],"stats":{"total":26,"additions":13,"deletions":13},"files":[{"sha":"5c1bcc6c488748fc205c3a5ae16b005c1118b230","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/TypeExtensionDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypeExtensionDirectoryPanel.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -197,13 +197,13 @@ public IModel<TypeExtensionTO> model(final TypeExtensionTO object) {\n \n     @Override\n     protected void customActionCallback(final AjaxRequestTarget target) {\n-        // change modal foter visibility\n+        // change modal footer visibility\n         send(TypeExtensionDirectoryPanel.this, Broadcast.BUBBLE, new BaseModal.ChangeFooterVisibilityEvent(target));\n     }\n \n     @Override\n     protected void customActionOnCancelCallback(final AjaxRequestTarget target) {\n-        // change modal foter visibility\n+        // change modal footer visibility\n         send(TypeExtensionDirectoryPanel.this, Broadcast.BUBBLE, new BaseModal.ChangeFooterVisibilityEvent(target));\n     }\n "},{"sha":"733946f0ab7b723a3a44e5b0d9e162a025b1609e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/form/AjaxDownloadBehavior.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAjaxDownloadBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAjaxDownloadBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FAjaxDownloadBehavior.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -56,7 +56,7 @@ public void onRequest() {\n                     new ResourceStreamRequestHandler(\n                             getResourceStream(), getFileName()).setCacheDuration(Duration.NONE));\n         } catch (Exception e) {\n-            // cannot be notifies beacause the use of scheduleRequestHandlerAfterCurrent\n+            // cannot be notifies because the use of scheduleRequestHandlerAfterCurrent\n             LOG.error(\"Error downloading file\", e);\n         }\n     }"},{"sha":"273c62ffd587e9b12f265258c4c8963bf8a3a889","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/BatchResponseColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBatchResponseColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBatchResponseColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBatchResponseColumn.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -72,7 +72,7 @@ public void populateItem(final Item<ICellPopulator<T>> item, final String compon\n \n             item.add(new Label(componentId, new StringResourceModel(status, item, new Model<>(status))));\n         } catch (BeansException | IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n-            LOG.error(\"Errore retrieving target key value\", e);\n+            LOG.error(\"Error retrieving target key value\", e);\n         }\n     }\n }"},{"sha":"35e2a0cce1a595094a34f2ffe7a2a285291955ba","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -339,7 +339,7 @@ private Set<String> getWhereClause(final String expression, final String value,\n         // Contains used identifiers in order to avoid replications\n         Set<String> used = new HashSet<>();\n \n-        // Create several clauses: one for eanch identifiers\n+        // Create several clauses: one for each identifiers\n         for (int i = 0; i < identifiers.size(); i++) {\n             if (!used.contains(identifiers.get(i))) {\n                 // verify schema existence and get schema type\n@@ -363,7 +363,7 @@ private Set<String> getWhereClause(final String expression, final String value,\n \n                     bld.append(\" AND \");\n \n-                    // use a value clause different for eanch different schema type\n+                    // use a value clause different for each different schema type\n                     switch (schema.getType()) {\n                         case Boolean:\n                             bld.append(\"v.booleanValue = '\").append(attrValues.get(i)).append('\\'');"},{"sha":"cc3c556e8650586ab1c24e2a39a69a6fb8e3c5ec","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AbstractSchedTaskJobDelegate.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -175,7 +175,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n      * Template method to determine whether this job's task execution has to be persisted or not.\n      *\n      * @param execution task execution\n-     * @return wether to persist or not\n+     * @return whether to persist or not\n      */\n     protected boolean hasToBeRegistered(final TaskExec execution) {\n         return false;"},{"sha":"e7ba307048f276f4f374e5aeff45fee2eacd4df4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -226,7 +226,7 @@ protected Uid createOrUpdate(\n                 attributes.remove(newName);\n             }\n \n-            // 2. check wether anything is actually needing to be propagated, i.e. if there is attribute\n+            // 2. check whether anything is actually needing to be propagated, i.e. if there is attribute\n             // difference between beforeObj - just read above from the connector - and the values to be propagated\n             Map<String, Attribute> originalAttrMap = beforeObj.getAttributes().stream().\n                     collect(Collectors.toMap(attr -> attr.getName().toUpperCase(), Function.identity()));"},{"sha":"c5cea6236f0c1b9a7d023e684d063cd00e3f7da4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractProvisioningJobDelegate.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractProvisioningJobDelegate.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -110,7 +110,7 @@ public static String generate(final Collection<ProvisioningReport> results, fina\n     protected PolicyDAO policyDAO;\n \n     /**\n-     * Create a textual report of the provisionig operation, based on the trace level.\n+     * Create a textual report of the provisioning operation, based on the trace level.\n      *\n      * @param provResults Provisioning results\n      * @param resource Provisioning resource"},{"sha":"af3b2239fd667d6f60c52ea36b48022c6a398088","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ApacheDSStartStopListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -255,7 +255,7 @@ public void contextInitialized(final ServletContextEvent sce) {\n         if (result == null) {\n             throw new RuntimeException(\"Base DN not found\");\n         } else {\n-            LOG.info(\"ApacheDS startup completed succesfully\");\n+            LOG.info(\"ApacheDS startup completed successfully\");\n         }\n     }\n "},{"sha":"0347d600abd8e4dae71cd0a9851aaff9440b6c42","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxBrowseITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxBrowseITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxBrowseITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxBrowseITCase.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -31,7 +31,7 @@\n import org.junit.jupiter.api.Test;\n \n // Please, keep the class name as is in order to respect the execution order. It seems that from wicket 7.5.0 the \n-// session creted never expire and the unsuccessfulLogin test fail\n+// session created never expire and the unsuccessfulLogin test fail\n public class AjaxBrowseITCase extends AbstractConsoleITCase {\n \n     @Test"},{"sha":"fcd51c12b9f054a47a4920d8c658cdf0bd5cd9cc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -237,7 +237,7 @@ public void delegatedUserCRUD() {\n             UserTO delegatedAdmin = createUser(delegatedAdminCR).getEntity();\n             delegatedAdminKey = delegatedAdmin.getKey();\n \n-            // 3. instantiate a delegate user service client, for further operatins\n+            // 3. instantiate a delegate user service client, for further operations\n             UserService delegatedUserService =\n                     clientFactory.create(delegatedAdmin.getUsername(), \"password123\").getService(UserService.class);\n "},{"sha":"07125d81f18b117dfc36657837f45d23bfbc59e6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/302c1fb00c70dafebb71b7ae4398ba23f0270b92/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/302c1fb00c70dafebb71b7ae4398ba23f0270b92/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserIssuesITCase.java?ref=302c1fb00c70dafebb71b7ae4398ba23f0270b92","patch":"@@ -1360,7 +1360,7 @@ public void issueSYNCOPE881() {\n         // 4. remove user\n         userService.delete(user.getKey());\n \n-        // 5. verify that user is not in LDAP anynmore\n+        // 5. verify that user is not in LDAP anymore\n         assertNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, userDn.getValues().get(0)));\n     }\n "}]}