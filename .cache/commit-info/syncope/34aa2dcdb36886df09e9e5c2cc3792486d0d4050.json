{"sha":"34aa2dcdb36886df09e9e5c2cc3792486d0d4050","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM0YWEyZGNkYjM2ODg2ZGYwOWU5ZTVjMmNjMzc5MjQ4NmQwZDQwNTA=","commit":{"author":{"name":"skylark17","email":"skylark17@apache.org","date":"2020-02-25T11:50:36Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2020-02-26T16:17:02Z"},"message":"[SYNCOPE-1537] Password and username of LinkedAccounts now saved properly from Admin Console","tree":{"sha":"d9a20310eb69f42636e25c6e5d357b4d32d97001","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d9a20310eb69f42636e25c6e5d357b4d32d97001"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/34aa2dcdb36886df09e9e5c2cc3792486d0d4050","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/34aa2dcdb36886df09e9e5c2cc3792486d0d4050","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/34aa2dcdb36886df09e9e5c2cc3792486d0d4050","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/34aa2dcdb36886df09e9e5c2cc3792486d0d4050/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f640386145d5269d1ea3a6e28bc7a29fc7a7635d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f640386145d5269d1ea3a6e28bc7a29fc7a7635d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f640386145d5269d1ea3a6e28bc7a29fc7a7635d"}],"stats":{"total":62,"additions":36,"deletions":26},"files":[{"sha":"967b839bd62dc5ef8d481967da9987d5fe67cd75","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel.java","status":"modified","additions":31,"deletions":21,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/34aa2dcdb36886df09e9e5c2cc3792486d0d4050/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/34aa2dcdb36886df09e9e5c2cc3792486d0d4050/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java?ref=34aa2dcdb36886df09e9e5c2cc3792486d0d4050","patch":"@@ -42,39 +42,42 @@ public class LinkedAccountCredentialsPanel extends WizardStep {\n \n     private static final long serialVersionUID = 5116461957402341603L;\n \n-    public LinkedAccountCredentialsPanel(final LinkedAccountTO linkedAccountTO) {\n+    private final LinkedAccountTO linkedAccountTO;\n+\n+    public LinkedAccountCredentialsPanel(final EntityWrapper<LinkedAccountTO> modelObject) {\n         super();\n         setOutputMarkupId(true);\n \n+        linkedAccountTO = modelObject.getInnerObject();\n+\n         AjaxTextFieldPanel usernameField = new AjaxTextFieldPanel(\n                 \"username\",\n                 \"username\",\n-                new PropertyModel<>(linkedAccountTO, \"username\"),\n-                false);\n-        usernameField.setOutputMarkupId(true);\n+                new PropertyModel<>(linkedAccountTO, \"username\"));\n         FieldPanel.class.cast(usernameField).setReadOnly(StringUtils.isBlank(linkedAccountTO.getUsername()));\n-        LinkedAccountPlainAttrProperty property = new LinkedAccountPlainAttrProperty();\n-        property.setOverridable(StringUtils.isNotBlank(linkedAccountTO.getUsername()));\n-        property.setSchema(\"username\");\n-        property.getValues().add(linkedAccountTO.getUsername());\n-        usernameField.showExternAction(checkboxToggle(property, usernameField));\n-        add(usernameField);\n+        LinkedAccountPlainAttrProperty usernameProperty = new LinkedAccountPlainAttrProperty();\n+        usernameProperty.setOverridable(StringUtils.isNotBlank(linkedAccountTO.getUsername()));\n+        usernameProperty.setSchema(\"username\");\n+        usernameProperty.getValues().add(linkedAccountTO.getUsername());\n+        usernameField.showExternAction(checkboxToggle(usernameProperty, usernameField));\n+        add(usernameField.setOutputMarkupId(true));\n \n         AjaxPasswordFieldPanel passwordField = new AjaxPasswordFieldPanel(\n                 \"password\",\n                 \"password\",\n-                new PropertyModel<>(linkedAccountTO, \"password\"));\n-        passwordField.setOutputMarkupId(true);\n-        passwordField.setRequired(true);\n+                new PropertyModel<>(linkedAccountTO, \"password\"),\n+                false);\n         passwordField.setMarkupId(\"password\");\n+        passwordField.setPlaceholder(\"password\");\n+        passwordField.setRequired(true);\n         FieldPanel.class.cast(passwordField).setReadOnly(StringUtils.isBlank(linkedAccountTO.getPassword()));\n-        property = new LinkedAccountPlainAttrProperty();\n-        property.setOverridable(StringUtils.isNotBlank(linkedAccountTO.getPassword()));\n-        property.setSchema(\"password\");\n-        property.getValues().add(linkedAccountTO.getPassword());\n-        passwordField.showExternAction(checkboxToggle(property, passwordField));\n-        ((PasswordTextField) passwordField.getField()).setResetPassword(true);\n-        add(passwordField);\n+        LinkedAccountPlainAttrProperty passwordProperty = new LinkedAccountPlainAttrProperty();\n+        passwordProperty.setOverridable(StringUtils.isNotBlank(linkedAccountTO.getPassword()));\n+        passwordProperty.setSchema(\"password\");\n+        passwordProperty.getValues().add(linkedAccountTO.getPassword());\n+        passwordField.showExternAction(checkboxToggle(passwordProperty, passwordField));\n+        ((PasswordTextField) passwordField.getField()).setResetPassword(false);\n+        add(passwordField.setOutputMarkupId(true));\n     }\n \n     private FormComponent<?> checkboxToggle(\n@@ -98,7 +101,14 @@ protected CheckBox newCheckBox(final String id, final IModel<Boolean> model) {\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-                        panel.setReadOnly(!model.getObject());\n+                        FieldPanel.class.cast(panel).setReadOnly(!model.getObject());\n+                        if (!model.getObject()) {\n+                            if (property.getSchema().equals(\"password\")) {\n+                                linkedAccountTO.setPassword(null);\n+                            } else if (property.getSchema().equals(\"username\")) {\n+                                linkedAccountTO.setUsername(null);\n+                            }\n+                        }\n                         target.add(panel);\n                     }\n                 });"},{"sha":"fcfcb9e888335ff02c5831739a1ae9ab0ac88216","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountWizardBuilder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/34aa2dcdb36886df09e9e5c2cc3792486d0d4050/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/34aa2dcdb36886df09e9e5c2cc3792486d0d4050/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountWizardBuilder.java?ref=34aa2dcdb36886df09e9e5c2cc3792486d0d4050","patch":"@@ -61,7 +61,7 @@ public AjaxWizard<LinkedAccountTO> build(final String id, final AjaxWizard.Mode\n     @Override\n     protected WizardModel buildModelSteps(final LinkedAccountTO modelObject, final WizardModel wizardModel) {\n         wizardModel.add(new LinkedAccountDetailsPanel(modelObject));\n-        wizardModel.add(new LinkedAccountCredentialsPanel(modelObject));\n+        wizardModel.add(new LinkedAccountCredentialsPanel(new EntityWrapper<>(modelObject)));\n         wizardModel.add(new LinkedAccountPlainAttrsPanel(new EntityWrapper<>(modelObject), model.getObject()));\n         wizardModel.add(new LinkedAccountPrivilegesPanel(modelObject));\n         return wizardModel;\n@@ -73,10 +73,10 @@ protected Serializable onApplyInternal(final LinkedAccountTO modelObject) {\n \n         LinkedAccountUR linkedAccountPatch = new LinkedAccountUR.Builder().linkedAccountTO(modelObject).build();\n         linkedAccountPatch.setLinkedAccountTO(modelObject);\n-        UserUR patch = new UserUR();\n-        patch.setKey(model.getObject().getKey());\n-        patch.getLinkedAccounts().add(linkedAccountPatch);\n-        model.setObject(userRestClient.update(model.getObject().getETagValue(), patch).getEntity());\n+        UserUR req = new UserUR();\n+        req.setKey(model.getObject().getKey());\n+        req.getLinkedAccounts().add(linkedAccountPatch);\n+        model.setObject(userRestClient.update(model.getObject().getETagValue(), req).getEntity());\n \n         return modelObject;\n     }"}]}