{"sha":"f7554cadd5e80c379158aa9a291f2a978267c9ab","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY3NTU0Y2FkZDVlODBjMzc5MTU4YWE5YTI5MWYyYTk3ODI2N2M5YWI=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-01-12T16:06:33Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-01-12T16:06:33Z"},"message":"[SYNCOPE-627] adding Camel integration test","tree":{"sha":"f8168c8d9d587bbd926676d6c9728d36dbd78362","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f8168c8d9d587bbd926676d6c9728d36dbd78362"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f7554cadd5e80c379158aa9a291f2a978267c9ab","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f7554cadd5e80c379158aa9a291f2a978267c9ab","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f7554cadd5e80c379158aa9a291f2a978267c9ab","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f7554cadd5e80c379158aa9a291f2a978267c9ab/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"25bb5c9d39061de6a8d95a29d9a3761f991abe33","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/25bb5c9d39061de6a8d95a29d9a3761f991abe33","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/25bb5c9d39061de6a8d95a29d9a3761f991abe33"}],"stats":{"total":178,"additions":176,"deletions":2},"files":[{"sha":"f2cfbb73295acf5ca17ffe99d1459da163ee5289","filename":"core/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f7554cadd5e80c379158aa9a291f2a978267c9ab/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f7554cadd5e80c379158aa9a291f2a978267c9ab/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=f7554cadd5e80c379158aa9a291f2a978267c9ab","patch":"@@ -126,6 +126,10 @@ under the License.\n       <groupId>org.apache.camel</groupId>\n       <artifactId>camel-spring</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-script</artifactId>\n+    </dependency>    \n     <dependency>\n       <groupId>javax.xml.bind</groupId>\n       <artifactId>jaxb-api</artifactId>"},{"sha":"13cc27bdd380254b5bd599bf9f4ebaaab00c3670","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f7554cadd5e80c379158aa9a291f2a978267c9ab/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f7554cadd5e80c379158aa9a291f2a978267c9ab/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=f7554cadd5e80c379158aa9a291f2a978267c9ab","patch":"@@ -47,6 +47,7 @@\n import org.apache.syncope.common.services.ReportService;\n import org.apache.syncope.common.services.ResourceService;\n import org.apache.syncope.common.services.RoleService;\n+import org.apache.syncope.common.services.RouteService;\n import org.apache.syncope.common.services.SchemaService;\n import org.apache.syncope.common.services.SecurityQuestionService;\n import org.apache.syncope.common.services.TaskService;\n@@ -173,6 +174,8 @@ public abstract class AbstractTest {\n     protected static PolicyService policyService;\n \n     protected static SecurityQuestionService securityQuestionService;\n+    \n+    protected static RouteService routeService;\n \n     @Autowired\n     protected DataSource testDataSource;\n@@ -223,6 +226,7 @@ public static void restSetup() {\n         notificationService = adminClient.getService(NotificationService.class);\n         schemaService = adminClient.getService(SchemaService.class);\n         securityQuestionService = adminClient.getService(SecurityQuestionService.class);\n+        routeService = adminClient.getService(RouteService.class);\n     }\n \n     protected static String getUUIDString() {"},{"sha":"57e010cdde54db77c52020f94923daffefcc5b5b","filename":"core/src/test/java/org/apache/syncope/core/rest/CamelTestITCase.java","status":"added","additions":161,"deletions":0,"changes":161,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f7554cadd5e80c379158aa9a291f2a978267c9ab/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FCamelTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f7554cadd5e80c379158aa9a291f2a978267c9ab/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FCamelTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FCamelTestITCase.java?ref=f7554cadd5e80c379158aa9a291f2a978267c9ab","patch":"@@ -0,0 +1,161 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest;\n+\n+import static org.apache.syncope.core.rest.AbstractTest.adminClient;\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.List;\n+import org.apache.syncope.common.to.RouteTO;\n+import org.apache.syncope.common.to.SchemaTO;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.AttributeSchemaType;\n+import org.apache.syncope.common.types.SchemaType;\n+import org.apache.syncope.common.types.SubjectType;\n+import org.apache.syncope.core.provisioning.camel.CamelDetector;\n+import org.junit.Assert;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class CamelTestITCase extends AbstractTest{\n+    \n+    @Test\n+    public void isCamelEnabled(){\n+        assertEquals(CamelDetector.isCamelEnabledForUsers(),\n+                adminClient.isCamelEnabledFor(SubjectType.USER));\n+        \n+        assertEquals(CamelDetector.isCamelEnabledForRoles(),\n+                adminClient.isCamelEnabledFor(SubjectType.ROLE));\n+    }\n+    \n+    @Test\n+    public void userRoutes() {\n+        List<RouteTO> userRoutes = routeService.getRoutes(SubjectType.USER);\n+        Assert.assertNotNull(userRoutes);\n+        Assert.assertEquals(15, userRoutes.size());\n+        for(int i=0; i<userRoutes.size(); i++){\n+            Assert.assertNotNull(userRoutes.get(i).getRouteContent());\n+        }\n+    }\n+    \n+    @Test\n+    public void roleRoutes() {\n+        List<RouteTO> roleRoutes = routeService.getRoutes(SubjectType.ROLE);\n+        Assert.assertNotNull(roleRoutes);\n+        Assert.assertEquals(7, roleRoutes.size());\n+        for(int i=0; i<roleRoutes.size(); i++){\n+            Assert.assertNotNull(roleRoutes.get(i).getRouteContent());\n+        }\n+    }\n+   \n+    \n+    public RouteTO updateRoute(Long id, String content){\n+        RouteTO route = routeService.getRoute(SubjectType.USER, id);\n+        route.setRouteContent(content);\n+        routeService.importRoute(SubjectType.USER, route.getId(), route);\n+        //getting new route definition\n+        return routeService.getRoute(SubjectType.USER, id);        \n+    }\n+    \n+    @Test\n+    public void updateRoute(){\n+        RouteTO oldRoute = routeService.getRoute(SubjectType.USER, new Long(0));\n+        String routeContent =   \"<route id=\\\"createUser\\\">\\n\" +\n+                                \"  <from uri=\\\"direct:createUser\\\"/>\\n\" +\n+                                \"  <setProperty propertyName=\\\"actual\\\">\\n\" +\n+                                \"    <simple>${body}</simple>\\n\" +\n+                                \"  </setProperty>\\n\" +\n+                                \"  <doTry>\\n\" +\n+                                \"    <bean ref=\\\"uwfAdapter\\\" method=\\\"create(${body},${property.disablePwdPolicyCheck},\\n\" +\n+                                \"                             ${property.enabled},${property.storePassword})\\\"/>\\n\" +\n+                                \"    <process ref=\\\"defaultUserCreatePropagation\\\" />\\n\" +\n+                                \"    <to uri=\\\"direct:createPort\\\"/>\\n\" +\n+                                \"    <to uri=\\\"log:myLog\\\"/>\\n\" +\n+                                \"    <doCatch>        \\n\" +\n+                                \"      <exception>java.lang.RuntimeException</exception>\\n\" +\n+                                \"      <handled>\\n\" +\n+                                \"        <constant>false</constant>\\n\" +\n+                                \"      </handled>\\n\" +\n+                                \"      <to uri=\\\"direct:createPort\\\"/>\\n\" +\n+                                \"    </doCatch>\\n\" +\n+                                \"  </doTry>\\n\" +\n+                                \"</route>\";\n+        RouteTO route =  updateRoute(new Long(0), routeContent);\n+        assertEquals(routeContent, route.getRouteContent());\n+        \n+        updateRoute(oldRoute.getId(), oldRoute.getRouteContent());\n+    }\n+    \n+    @Test\n+    public void checkRouteUpdate(){\n+        //Getting original route content\n+        RouteTO oldRoute = routeService.getRoute(SubjectType.USER, new Long(0));\n+        //updating route content including new attribute management\n+        String routeContent =   \"<route id=\\\"createUser\\\">\\n\" +\n+                                \"  <from uri=\\\"direct:createUser\\\"/>\\n\" +\n+                                \"  <setProperty propertyName=\\\"actual\\\">\\n\" +\n+                                \"    <simple>${body}</simple>\\n\" +\n+                                \"  </setProperty>\\n\" +                                \n+                                \"  <setBody>\\n\"+\n+                                \"   <groovy>\\n\"+\n+                                \"       request.body.getAttrs().get(3).getValues().set(0,\\\"true\\\")\\n\"+\n+                                \"       return request.body\\n\"+\n+                                \"   </groovy>\\n\"+\n+                                \"  </setBody>\\n\"+\n+                                \"  <doTry>\\n\" +\n+                                \"      <bean ref=\\\"uwfAdapter\\\" method=\\\"create(${body},${property.disablePwdPolicyCheck},\\n\" +\n+                                \"                            ${property.enabled},${property.storePassword})\\\"/>\\n\" +\n+                                \"      <process ref=\\\"defaultUserCreatePropagation\\\" />\\n\" +\n+                                \"      <to uri=\\\"direct:createPort\\\"/>\\n\" +\n+                                \"      <doCatch>        \\n\" +\n+                                \"      <exception>java.lang.RuntimeException</exception>\\n\" +\n+                                \"          <handled>\\n\" +\n+                                \"           <constant>false</constant>\\n\" +\n+                                \"          </handled>\\n\" +\n+                                \"      <to uri=\\\"direct:createPort\\\"/>\\n\" +\n+                                \"      </doCatch>\\n\" +\n+                                \"   </doTry>\\n\" +                                \n+                                \"</route>\";\n+        updateRoute(new Long(0), routeContent);\n+        //creating new schema attribute for user\n+        SchemaTO schemaTO = new SchemaTO();\n+        schemaTO.setName(\"camelAttribute\");\n+        schemaTO.setType(AttributeSchemaType.String);       \n+        createSchema(AttributableType.USER, SchemaType.NORMAL, schemaTO);\n+        \n+        UserTO userTO = new UserTO();\n+        String userId = getUUIDString() + \"camelUser@syncope.apache.org\";\n+        userTO.setUsername(userId);\n+        userTO.setPassword(\"password\");\n+        userTO.getAttrs().add(attributeTO(\"userId\", userId));\n+        userTO.getAttrs().add(attributeTO(\"fullname\", userId));\n+        userTO.getAttrs().add(attributeTO(\"surname\", userId));\n+        userTO.getAttrs().add(attributeTO(\"camelAttribute\", \"false\"));\n+\n+        userTO = createUser(userTO);        \n+        Assert.assertNotNull(userTO);\n+        assertEquals(\"true\",userTO.getAttrs().get(3).getValues().get(0));\n+        \n+        updateRoute(oldRoute.getId(), oldRoute.getRouteContent());\n+    }\n+    \n+}"},{"sha":"bb2ac10a30c2a7f504c28f6df578581b6eda0199","filename":"pom.xml","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f7554cadd5e80c379158aa9a291f2a978267c9ab/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f7554cadd5e80c379158aa9a291f2a978267c9ab/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=f7554cadd5e80c379158aa9a291f2a978267c9ab","patch":"@@ -726,8 +726,13 @@ under the License.\n       </dependency>\n       <dependency>\n         <groupId>org.apache.camel</groupId>\n-       <artifactId>camel-spring</artifactId>\n-       <version>${camel.version}</version>\n+        <artifactId>camel-spring</artifactId>\n+        <version>${camel.version}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.camel</groupId>\n+        <artifactId>camel-script</artifactId>\n+        <version>${camel.version}</version>\n       </dependency>\n       <!-- /Camel -->\n "}]}