{"sha":"6d9493daf0796a4f68c2962dc15ddacc0c22fd45","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZkOTQ5M2RhZjA3OTZhNGY2OGMyOTYyZGMxNWRkYWNjMGMyMmZkNDU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-31T17:57:28Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-31T17:57:28Z"},"message":"Some cleanings + adding support for mandatory (and optional) resources, when propagating\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246764 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"64a1984f282ef488395d422377bc15d1730c4b7f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/64a1984f282ef488395d422377bc15d1730c4b7f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6d9493daf0796a4f68c2962dc15ddacc0c22fd45","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d9493daf0796a4f68c2962dc15ddacc0c22fd45","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6d9493daf0796a4f68c2962dc15ddacc0c22fd45","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/comments","author":null,"committer":null,"parents":[{"sha":"8df92e3b8b7c56c2ca4a540c784fdeca5415218a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8df92e3b8b7c56c2ca4a540c784fdeca5415218a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8df92e3b8b7c56c2ca4a540c784fdeca5415218a"}],"stats":{"total":1248,"additions":768,"deletions":480},"files":[{"sha":"d141aa5234d0e0863220c46a7db9b081fbab8e98","filename":"client/src/main/java/org/syncope/client/to/ResourceTO.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -17,28 +17,38 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.syncope.client.AbstractBaseBean;\n+import org.syncope.types.PropagationMode;\n \n public class ResourceTO extends AbstractBaseBean {\n \n     /**\n      * The resource identifier is the name.\n      */\n     private String name;\n+\n     /**\n      * The resource type is identified by the associated connector.\n      */\n     private Long connectorId;\n+\n     /**\n      * Attribute mappings.\n      */\n     private List<SchemaMappingTO> mappings;\n+\n+    /**\n+     * Propagation mode to be used when not mandatory in propagation.\n+     */\n+    private PropagationMode optionalPropagationMode;\n+\n     /**\n      * Force mandatory constraint.\n      */\n     private boolean forceMandatoryConstraint;\n \n     public ResourceTO() {\n         mappings = new ArrayList<SchemaMappingTO>();\n+        optionalPropagationMode = PropagationMode.ASYNC;\n     }\n \n     public boolean isForceMandatoryConstraint() {\n@@ -80,4 +90,14 @@ public String getName() {\n     public void setName(String name) {\n         this.name = name;\n     }\n+\n+    public PropagationMode getOptionalPropagationMode() {\n+        return optionalPropagationMode;\n+    }\n+\n+    public void setOptionalPropagationMode(\n+            PropagationMode optionalPropagationMode) {\n+\n+        this.optionalPropagationMode = optionalPropagationMode;\n+    }\n }"},{"sha":"aaf0c2274cd7303c5bd5cd341f3c6c7887756b9a","filename":"client/src/main/java/org/syncope/types/ConnectorCapability.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnectorCapability.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnectorCapability.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnectorCapability.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -27,6 +27,7 @@ public enum ConnectorCapability {\n     ASYNC_DELETE,\n     SEARCH,\n     RESOLVE,\n-    ONDEMAND_SYNC,\n-    AUTO_SYNC\n+    RECONCILIATION,\n+    ACTIVE_SYNC\n+\n }"},{"sha":"68c139e34bec410b81e4a3a6d797380f657daa8b","filename":"console/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -261,7 +261,7 @@\n                 <artifactId>cargo-maven2-plugin</artifactId>\n                 <inherited>true</inherited>\n                 <configuration>\n-                    <wait>false</wait>\n+                    <!--<wait>false</wait>-->\n                     <container>\n                         <containerId>tomcat6x</containerId>\n                         <zipUrlInstaller>"},{"sha":"f9b3ac975e15171343dcf78127a06d89635a35a4","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":28,"deletions":2,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -27,8 +27,7 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.ajax.markup.html.form.AjaxCheckBox;\n-import org.apache.wicket.authorization.strategies.role.metadata\n-                                            .MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -57,6 +56,7 @@\n import org.syncope.console.wicket.markup.html.form.UpdatingCheckBox;\n import org.syncope.console.wicket.markup.html.form.UpdatingDropDownChoice;\n import org.syncope.console.wicket.markup.html.form.UpdatingTextField;\n+import org.syncope.types.PropagationMode;\n import org.syncope.types.SourceMappingType;\n \n /**\n@@ -76,6 +76,8 @@ public class ResourceModalPage extends BaseModalPage {\n \n     private CheckBox forceMandatoryConstraint;\n \n+    private DropDownChoice<PropagationMode> optionalPropagationMode;\n+\n     private ConnectorInstanceTO connectorTO = new ConnectorInstanceTO();\n \n     private ResourceTO resource;\n@@ -157,6 +159,29 @@ protected Object load() {\n         forceMandatoryConstraint.setOutputMarkupId(true);\n         resourceForm.add(forceMandatoryConstraint);\n \n+        optionalPropagationMode =\n+                new DropDownChoice<PropagationMode>(\"optionalPropagationMode\");\n+        optionalPropagationMode.setModel(new IModel<PropagationMode>() {\n+\n+            @Override\n+            public PropagationMode getObject() {\n+                return resourceTO.getOptionalPropagationMode();\n+            }\n+\n+            @Override\n+            public void setObject(final PropagationMode object) {\n+                resourceTO.setOptionalPropagationMode(object);\n+            }\n+\n+            @Override\n+            public void detach() {\n+            }\n+        });\n+        optionalPropagationMode.setChoices(\n+                Arrays.asList(PropagationMode.values()));\n+        optionalPropagationMode.setOutputMarkupId(true);\n+        resourceForm.add(optionalPropagationMode);\n+\n         ChoiceRenderer renderer = new ChoiceRenderer(\"displayName\", \"id\");\n         connector = new DropDownChoice(\"connectors\", new Model(connectorTO),\n                 connectors, renderer);\n@@ -325,6 +350,7 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n                 }\n \n                 try {\n+                    LOG.info(\"XXXXXXXX \" + resourceTO);\n \n                     if (createFlag) {\n                         restClient.createResource(resourceTO);"},{"sha":"1cfe0a49b35b18a53d8b2a115a2871a5b36a52ae","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.html","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -57,13 +57,13 @@\n                     <thead>\n                         <tr class=\"ui-widget-header\">\n                             <th><wicket:message key=\"delete\"/></th>\n-                            <th><wicket:message key=\"sourceMappingTypes\"/></th>\n-                            <th><wicket:message key=\"schemaAttributes\"/></th>\n-                            <th><wicket:message key=\"field\"/></th>\n-                            <th><wicket:message key=\"mandatoryCondition\"/></th>\n-                            <th><wicket:message key=\"accountId\"/></th>\n-                            <th><wicket:message key=\"password\"/></th>\n-                        </tr>\n+                    <th><wicket:message key=\"sourceMappingTypes\"/></th>\n+                    <th><wicket:message key=\"schemaAttributes\"/></th>\n+                    <th><wicket:message key=\"field\"/></th>\n+                    <th><wicket:message key=\"mandatoryCondition\"/></th>\n+                    <th><wicket:message key=\"accountId\"/></th>\n+                    <th><wicket:message key=\"password\"/></th>\n+                    </tr>\n                     </thead>\n                     <tfoot>\n                         <tr>\n@@ -113,6 +113,9 @@\n                 <label for=\"mandatoryConstraint\"><wicket:message key=\"forceMandatoryConstraint\"/></label>\n                 <input type=\"checkbox\" class=\"checkbox\"  wicket:id=\"forceMandatoryConstraint\"/>\n \n+                <label for=\"optionalPropagationMode\"><wicket:message key=\"optionalPropagationMode\"/></label>\n+                <select id=\"optionalPropagationMode\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"optionalPropagationMode\"/>\n+\n                 <div>\n                     &nbsp;\n                 </div>"},{"sha":"164189096db00798391324a284207e1fd46a250e","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -22,3 +22,4 @@ fieldName=Field name\n accountIdValidation=Cannot set more than one AccountId mapping\n passwordValidation=Cannot set more than one password mapping\n customValidation=Custom validation exception\n+optionalPropagationMode=Mode for non-mandatory propagations\n\\ No newline at end of file"},{"sha":"884f02edd26e886fe3e4e18bf7ca867903dc7a49","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -11,13 +11,14 @@ field=Campo\n sourceMappingTypes=Tipo mapping sorgente\n roleSchema=Schema Ruolo\n accountId=Id Account\n-mandatoryCondition=Condizione d'obbligatoriet\\u00E0\n+mandatoryCondition=Condizione d'obbligatoriet\\u00e0\n password=Password\n mappingUserSchema=Mapping User Schema\n mappingRoleSchema=Mapping Role Schema\n delete=Elimina\n schemaAttributes=Attributi Schema\n forceMandatoryConstraint=Forza mandatory constraint\n fieldName=Nome campo\n-accountIdValidation=Non \\u00E8 possibile impostare pi\\u00F9 di un campo accountId nel mapping\n-passwordValidation=Non \\u00E8 possibile impostare pi\\u00F9 di un password nel mapping\n+accountIdValidation=Non \\u00e8 possibile impostare pi\\u00f9 di un campo accountId nel mapping\n+passwordValidation=Non \\u00e8 possibile impostare pi\\u00f9 di un password nel mapping\n+optionalPropagationMode=Modalit\\u00e0 per propagazioni non obbligatorie\n\\ No newline at end of file"},{"sha":"6673b8add0f82be7cc3e34d566a8af5e1b849fc7","filename":"console/src/test/resources/content.xml","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -169,13 +169,13 @@\n                        version=\"${project.version}\"\n                        xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A8888%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n \n-    <TargetResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"1\"/>\n-    <TargetResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\"/>\n-    <TargetResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\"/>\n-    <TargetResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\"/>\n-    <TargetResource name=\"ws-target-resource-delete\" connector_id=\"102\" forceMandatoryConstraint=\"0\"/>\n-    <TargetResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\"/>\n-    <TargetResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\"/>\n+    <TargetResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-delete\" connector_id=\"102\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n \n     <SyncopeUser_TargetResource users_id=\"3\" targetResources_name=\"ws-target-resource-delete\" />\n     <SyncopeRole_TargetResource roles_id=\"3\" targetResources_name=\"ws-target-resource-list-mappings-1\" />\n@@ -191,7 +191,7 @@\n     <SchemaMapping id=\"100\" destAttrName=\"email\"\n                    resource_name=\"ws-target-resource-1\"\n                    sourceAttrName=\"email\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n-                   accountid=\"1\" password=\"0\"/>\n+                   accountid=\"0\" password=\"0\"/>\n \n     <SchemaMapping id=\"101\" destAttrName=\"username\"\n                    resource_name=\"ws-target-resource-2\"\n@@ -266,7 +266,7 @@\n     <Task id=\"1\" propagationMode=\"ASYNC\" resourceOperationType=\"UPDATE\"\n                  resource_name=\"ws-target-resource-2\"\n                  xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n-    <TaskExecution id=\"1\" task_id=\"1\"/>\n+    <TaskExecution id=\"1\" task_id=\"1\" workflowId=\"0\"/>\n \n     <Entitlement name=\"base\"/>\n     <Entitlement name=\"advanced\" description=\"Advanced entitlement\"/>"},{"sha":"063d1d6f3aff5cad4580633e7df760d847d8fdaa","filename":"core/pom.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -101,6 +101,10 @@\n             <groupId>opensymphony</groupId>\n             <artifactId>oscore</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.beanshell</groupId>\n+            <artifactId>bsh</artifactId>\n+        </dependency>\n \n         <dependency>\n             <groupId>org.springframework</groupId>\n@@ -456,7 +460,7 @@\n                         <home>target/tomcat6x</home>\n                         <properties>\n                             <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>\n-<!--                            <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=9009,server=y,suspend=n</cargo.jvmargs>-->\n+                            <!--<cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=9009,server=y,suspend=n</cargo.jvmargs>-->\n                         </properties>\n                         <deployables>\n                             <deployable>"},{"sha":"feb13879f11920c96cae21a7600302c76e695545","filename":"core/src/main/java/org/syncope/core/persistence/beans/TargetResource.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTargetResource.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -22,6 +22,8 @@\n import javax.persistence.CascadeType;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n import javax.persistence.FetchType;\n import javax.persistence.Id;\n import javax.persistence.ManyToMany;\n@@ -35,6 +37,7 @@\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.validation.entity.TargetResourceCheck;\n+import org.syncope.types.PropagationMode;\n import org.syncope.types.SourceMappingType;\n \n /**\n@@ -85,6 +88,10 @@ public class TargetResource extends AbstractBaseBean {\n     @Valid\n     private List<SchemaMapping> mappings;\n \n+    @Enumerated(EnumType.STRING)\n+    @Column(nullable = false)\n+    private PropagationMode optionalPropagationMode;\n+\n     /**\n      * Tasks associated to this resource.\n      */\n@@ -103,6 +110,7 @@ public TargetResource() {\n         users = new HashSet<SyncopeUser>();\n         roles = new HashSet<SyncopeRole>();\n         mappings = new ArrayList<SchemaMapping>();\n+        optionalPropagationMode = PropagationMode.ASYNC;\n         tasks = new ArrayList<Task>();\n     }\n \n@@ -123,6 +131,16 @@ public void setConnector(ConnectorInstance connector) {\n         this.connector = connector;\n     }\n \n+    public PropagationMode getOptionalPropagationMode() {\n+        return optionalPropagationMode;\n+    }\n+\n+    public void setOptionalPropagationMode(\n+            PropagationMode optionalPropagationMode) {\n+\n+        this.optionalPropagationMode = optionalPropagationMode;\n+    }\n+\n     public List<Task> getTasks() {\n         return tasks;\n     }"},{"sha":"070482105d3b13e9cd84a787b0d5c1f9ed04fb20","filename":"core/src/main/java/org/syncope/core/persistence/beans/TaskExecution.java","status":"modified","additions":8,"deletions":15,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTaskExecution.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTaskExecution.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTaskExecution.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -16,9 +16,8 @@\n \n import java.util.Date;\n import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n-import javax.persistence.EnumType;\n-import javax.persistence.Enumerated;\n import javax.persistence.FetchType;\n import javax.persistence.GeneratedValue;\n import javax.persistence.GenerationType;\n@@ -27,7 +26,6 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.Temporal;\n import javax.persistence.TemporalType;\n-import org.syncope.types.TaskExecutionStatus;\n \n /**\n  * An execution (with result) of a Task.\n@@ -55,11 +53,8 @@ public class TaskExecution extends AbstractBaseBean {\n     @Temporal(TemporalType.TIMESTAMP)\n     private Date endDate;\n \n-    /**\n-     * Did this execution completed with success?\n-     */\n-    @Enumerated(EnumType.STRING)\n-    private TaskExecutionStatus status;\n+    @Column(nullable = true)\n+    private Long workflowId;\n \n     /**\n      * Any information to be accompained to this execution's result.\n@@ -79,8 +74,6 @@ public class TaskExecution extends AbstractBaseBean {\n      */\n     public TaskExecution() {\n         super();\n-\n-        status = TaskExecutionStatus.CREATED;\n     }\n \n     public Long getId() {\n@@ -111,12 +104,12 @@ public void setStartDate(Date startDate) {\n         this.startDate = startDate;\n     }\n \n-    public TaskExecutionStatus getStatus() {\n-        return status;\n+    public Long getWorkflowId() {\n+        return workflowId;\n     }\n \n-    public void setStatus(TaskExecutionStatus status) {\n-        this.status = status;\n+    public void setWorkflowId(Long workflowId) {\n+        this.workflowId = workflowId;\n     }\n \n     public Task getTask() {\n@@ -133,7 +126,7 @@ public String toString() {\n                 + \"id=\" + id + \", \"\n                 + \"startDate=\" + startDate + \", \"\n                 + \"endDate=\" + endDate + \", \"\n-                + \"status=\" + status + \", \"\n+                + \"workflowId=\" + workflowId + \", \"\n                 + \"task=\" + task + \", \"\n                 + \"message=\" + message + '}';\n     }"},{"sha":"fb294145a575d09aeb1a0409c48723a36a081e10","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ConnectorFacadeProxy.java","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -176,20 +176,6 @@ public Uid create(\n     }\n \n     public Uid resolveUsername(\n-            final ObjectClass objectClass,\n-            final String username,\n-            final OperationOptions options) {\n-\n-        Uid result = null;\n-\n-        if (capabitilies.contains(ConnectorCapability.RESOLVE)) {\n-            result = connector.resolveUsername(objectClass, username, options);\n-        }\n-\n-        return result;\n-    }\n-\n-    public Uid resolveUsernameForUpdate(\n             final PropagationMode propagationMode,\n             final ResourceOperationType operationType,\n             final ObjectClass objectClass,"},{"sha":"28ba8ed00e68d0ae0e5497018cefa18d31411b43","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":96,"deletions":79,"changes":175,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -14,6 +14,8 @@\n  */\n package org.syncope.core.persistence.propagation;\n \n+import com.opensymphony.workflow.Workflow;\n+import com.opensymphony.workflow.WorkflowException;\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.util.Collections;\n@@ -22,6 +24,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import javax.annotation.Resource;\n import org.identityconnectors.framework.common.FrameworkUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n@@ -32,7 +35,6 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.NoSuchBeanDefinitionException;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n import org.syncope.core.persistence.ConnectorInstanceLoader;\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n import org.syncope.core.persistence.beans.AbstractSchema;\n@@ -50,7 +52,9 @@\n import org.syncope.core.persistence.beans.user.USchema;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.TaskDAO;\n-import org.syncope.core.rest.data.TaskDataBinder;\n+import org.syncope.core.persistence.dao.TaskExecutionDAO;\n+import org.syncope.core.workflow.Constants;\n+import org.syncope.core.workflow.WFUtils;\n import org.syncope.types.PropagationMode;\n import org.syncope.types.ResourceOperationType;\n import org.syncope.types.SourceMappingType;\n@@ -60,13 +64,12 @@\n /**\n  * Manage the data propagation to target resources.\n  */\n-@Component\n public class PropagationManager {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG =\n+    protected static final Logger LOG =\n             LoggerFactory.getLogger(PropagationManager.class);\n \n     /**\n@@ -81,15 +84,24 @@ public class PropagationManager {\n     @Autowired\n     private TaskDAO taskDAO;\n \n+    /**\n+     * Task execution DAO.\n+     */\n     @Autowired\n-    private TaskDataBinder taskDataBinder;\n+    private TaskExecutionDAO taskExecutionDAO;\n+\n+    /**\n+     * Task execution workflow.\n+     */\n+    @Resource(name = \"taskExecutionWorkflow\")\n+    private Workflow workflow;\n \n     /**\n      * Create the user on every associated resource.\n      * Exceptions will be ignored.\n      * @param user to be created.\n      * @param password to be set.\n-     * @throws PropagationException\n+     * @throws PropagationException when anything goes wrong.\n      */\n     public void create(final SyncopeUser user, final String password)\n             throws PropagationException {\n@@ -99,22 +111,23 @@ public void create(final SyncopeUser user, final String password)\n \n     /**\n      * Create the user on every associated resource.\n-     * It is possible to ask for a synchronous provisioning for some resources\n+     * It is possible to ask for a mandatory provisioning for some resources\n      * specifying a set of resource names.\n      * Exceptions won't be ignored and the process will be stopped if the\n-     * creation fails onto a synchronous resource.\n+     * creation fails onto a mandatory resource.\n+     *\n      * @param user to be created.\n      * @param password to be set.\n-     * @param syncResourceNames to ask for a synchronous or\n-     * asynchronous provisioning.\n+     * @param mandatoryResourceNames to ask for mandatory or optional\n+     * provisioning.\n      * @throws PropagationException\n      */\n     public void create(final SyncopeUser user,\n-            final String password, Set<String> syncResourceNames)\n+            final String password, Set<String> mandatoryResourceNames)\n             throws PropagationException {\n \n-        if (syncResourceNames == null) {\n-            syncResourceNames = Collections.EMPTY_SET;\n+        if (mandatoryResourceNames == null) {\n+            mandatoryResourceNames = Collections.EMPTY_SET;\n         }\n \n         Set<TargetResource> resources = new HashSet<TargetResource>();\n@@ -128,39 +141,51 @@ public void create(final SyncopeUser user,\n         ResourceOperations resourceOperations = new ResourceOperations();\n         resourceOperations.set(ResourceOperationType.CREATE, resources);\n \n-        provision(user, password, resourceOperations, syncResourceNames);\n+        provision(user, password, resourceOperations, mandatoryResourceNames);\n     }\n \n     /**\n      * Performs update on each resource associated to the user.\n-     * It is possible to ask for a synchronous provisioning for some resources\n+     * It is possible to ask for a mandatory provisioning for some resources\n      * specifying a set of resource names.\n-     * Exceptions won't be ignored and the process will be stoppend if the\n-     * provisioning fails onto a synchronous resource.\n+     * Exceptions won't be ignored and the process will be stopped if the\n+     * creation fails onto a mandatory resource.\n+     *\n      * @param user to be updated.\n      * @param password to be updated.\n      * @param affectedResources resources affected by this update\n-     * @param syncResourceNames to ask for a synchronous or asynchronous update.\n-     * @throws PropagationException\n+     * @param mandatoryResourceNames to ask for mandatory or optional update.\n+     * @throws PropagationException if anything goes wrong\n      */\n     public void update(final SyncopeUser user,\n             final String password,\n             final ResourceOperations resourceOperations,\n-            Set<String> syncResourceNames)\n+            Set<String> mandatoryResourceNames)\n             throws PropagationException {\n \n-        if (syncResourceNames == null) {\n-            syncResourceNames = Collections.EMPTY_SET;\n+        if (mandatoryResourceNames == null) {\n+            mandatoryResourceNames = Collections.EMPTY_SET;\n         }\n \n-        provision(user, password, resourceOperations, syncResourceNames);\n+        provision(user, password, resourceOperations, mandatoryResourceNames);\n     }\n \n-    public void delete(SyncopeUser user, Set<String> syncResourceNames)\n+    /**\n+     * Perform delete on each resource associated to the user.\n+     * It is possible to ask for a mandatory provisioning for some resources\n+     * specifying a set of resource names.\n+     * Exceptions won't be ignored and the process will be stopped if the\n+     * creation fails onto a mandatory resource.\n+     *\n+     * @param user to be deleted\n+     * @param mandatoryResourceNames to ask for mandatory or optyional delete\n+     * @throws PropagationException if anything goes wrong\n+     */\n+    public void delete(SyncopeUser user, Set<String> mandatoryResourceNames)\n             throws PropagationException {\n \n-        if (syncResourceNames == null) {\n-            syncResourceNames = Collections.EMPTY_SET;\n+        if (mandatoryResourceNames == null) {\n+            mandatoryResourceNames = Collections.EMPTY_SET;\n         }\n \n         Set<TargetResource> resources = new HashSet<TargetResource>();\n@@ -174,21 +199,21 @@ public void delete(SyncopeUser user, Set<String> syncResourceNames)\n         ResourceOperations resourceOperations = new ResourceOperations();\n         resourceOperations.set(ResourceOperationType.DELETE, resources);\n \n-        provision(user, null, resourceOperations, syncResourceNames);\n+        provision(user, null, resourceOperations, mandatoryResourceNames);\n     }\n \n     /**\n      * Implementation of the provisioning feature.\n      * @param user\n-     * @param syncResourceNames\n+     * @param mandatoryResourceNames\n      * @param merge\n      * @throws PropagationException\n      */\n     private void provision(\n             final SyncopeUser user,\n             final String password,\n             final ResourceOperations resourceOperations,\n-            final Set<String> syncResourceNames)\n+            final Set<String> mandatoryResourceNames)\n             throws PropagationException {\n \n         LOG.debug(\"Provisioning with user {}:\\n{}\", user, resourceOperations);\n@@ -199,6 +224,7 @@ private void provision(\n \n         Task task;\n         TaskExecution execution;\n+        Long workflowId;\n         for (ResourceOperationType type : ResourceOperationType.values()) {\n             for (TargetResource resource : resourceOperations.get(type)) {\n                 Map<String, Set<Attribute>> preparedAttributes =\n@@ -210,8 +236,9 @@ private void provision(\n                 task.setResource(resource);\n                 task.setResourceOperationType(type);\n                 task.setPropagationMode(\n-                        syncResourceNames.contains(resource.getName())\n-                        ? PropagationMode.SYNC : PropagationMode.ASYNC);\n+                        mandatoryResourceNames.contains(resource.getName())\n+                        ? PropagationMode.SYNC\n+                        : resource.getOptionalPropagationMode());\n                 task.setAccountId(accountId);\n                 task.setOldAccountId(resourceOperations.getOldAccountId());\n                 task.setAttributes(\n@@ -224,24 +251,23 @@ private void provision(\n                 execution = new TaskExecution();\n                 execution.setTask(task);\n \n-                if (PropagationMode.SYNC.equals(task.getPropagationMode())) {\n-                    syncPropagate(execution);\n-\n-                    // read execution after saving\n-                    execution =\n-                            task.getExecutions() != null\n-                            && !task.getExecutions().isEmpty()\n-                            ? task.getExecutions().iterator().next() : null;\n-\n-                } else {\n-                    asyncPropagate(execution);\n+                try {\n+                    workflowId = workflow.initialize(\n+                            Constants.TASKEXECUTION_WORKFLOW, 0, null);\n+                    execution.setWorkflowId(workflowId);\n+                } catch (WorkflowException e) {\n+                    LOG.error(\"While initializing workflow for {}\",\n+                            execution, e);\n                 }\n \n+                propagate(execution);\n+\n                 LOG.debug(\"Execution finished for {}\", task);\n \n-                if (execution != null\n-                        && syncResourceNames.contains(resource.getName())\n-                        && execution.getStatus()\n+                // Propagation is interrupted as soon as the result of the\n+                // communication with a mandatory resource is in error\n+                if (mandatoryResourceNames.contains(resource.getName())\n+                        && WFUtils.getTaskExecutionStatus(workflow, execution)\n                         != TaskExecutionStatus.SUCCESS) {\n \n                     throw new PropagationException(resource.getName(),\n@@ -435,7 +461,6 @@ private Map<String, Set<Attribute>> prepareAttributes(SyncopeUser user,\n \n     public void propagate(final TaskExecution execution) {\n         final Date startDate = new Date();\n-        TaskExecutionStatus taskExecutionStatus = null;\n         String taskExecutionMessage = null;\n \n         final Task task = execution.getTask();\n@@ -465,7 +490,7 @@ public void propagate(final TaskExecution execution) {\n                 case UPDATE:\n                     Uid userUid = null;\n                     try {\n-                        userUid = connector.resolveUsernameForUpdate(\n+                        userUid = connector.resolveUsername(\n                                 task.getPropagationMode(),\n                                 task.getResourceOperationType(),\n                                 ObjectClass.ACCOUNT,\n@@ -509,15 +534,17 @@ public void propagate(final TaskExecution execution) {\n                 default:\n             }\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Succesfully propagated to resource \"\n-                        + task.getResource().getName());\n-            }\n-\n-            taskExecutionStatus = task.getPropagationMode()\n-                    == PropagationMode.SYNC\n-                    ? TaskExecutionStatus.SUCCESS\n-                    : TaskExecutionStatus.SUBMITTED;\n+            WFUtils.doExecuteAction(workflow,\n+                    Constants.TASKEXECUTION_WORKFLOW,\n+                    Constants.ACTION_OK,\n+                    execution.getWorkflowId(),\n+                    task.getPropagationMode() == PropagationMode.SYNC\n+                    ? Collections.singletonMap(\n+                    PropagationMode.SYNC.toString(), null)\n+                    : null);\n+\n+            LOG.debug(\"Successfully propagated to resource {}\",\n+                    task.getResource());\n         } catch (Throwable t) {\n             LOG.error(\"Exception during provision on resource \"\n                     + task.getResource().getName(), t);\n@@ -526,10 +553,18 @@ public void propagate(final TaskExecution execution) {\n             t.printStackTrace(new PrintWriter(execeptionWriter));\n             taskExecutionMessage = execeptionWriter.toString();\n \n-            taskExecutionStatus = task.getPropagationMode()\n-                    == PropagationMode.SYNC\n-                    ? TaskExecutionStatus.FAILURE\n-                    : TaskExecutionStatus.UNSUBMITTED;\n+            try {\n+                WFUtils.doExecuteAction(workflow,\n+                        Constants.TASKEXECUTION_WORKFLOW,\n+                        Constants.ACTION_KO,\n+                        execution.getWorkflowId(),\n+                        task.getPropagationMode() == PropagationMode.SYNC\n+                        ? Collections.singletonMap(\n+                        PropagationMode.SYNC.toString(), null)\n+                        : null);\n+            } catch (Throwable wft) {\n+                LOG.error(\"While executing KO action on {}\", execution, wft);\n+            }\n \n             triedPropagationRequests.add(\n                     task.getResourceOperationType().toString().toLowerCase());\n@@ -539,30 +574,12 @@ public void propagate(final TaskExecution execution) {\n             if (!triedPropagationRequests.isEmpty()) {\n                 execution.setStartDate(startDate);\n                 execution.setMessage(taskExecutionMessage);\n-                execution.setStatus(taskExecutionStatus);\n                 execution.setEndDate(new Date());\n \n-                taskDataBinder.storeTaskExecution(execution);\n+                taskExecutionDAO.save(execution);\n \n                 LOG.debug(\"Execution finished: {}\", execution);\n             }\n         }\n     }\n-\n-    public void syncPropagate(final TaskExecution execution) {\n-        LOG.debug(\"Synchronous execution {}\", execution);\n-        propagate(execution);\n-    }\n-\n-    //@Async\n-    public void asyncPropagate(final TaskExecution execution) {\n-        LOG.debug(\"Asynchronous execution {}\", execution);\n-        new Thread() {\n-\n-            @Override\n-            public void run() {\n-                propagate(execution);\n-            }\n-        }.start();\n-    }\n }"},{"sha":"ca63c227381bde180e27d891da14a82e5e2d2d30","filename":"core/src/main/java/org/syncope/core/persistence/util/EncryptionUtil.java","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FEncryptionUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FEncryptionUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Futil%2FEncryptionUtil.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -0,0 +1,98 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.util;\n+\n+import javax.crypto.Cipher;\n+import javax.crypto.SecretKey;\n+import javax.crypto.SecretKeyFactory;\n+import javax.crypto.spec.DESKeySpec;\n+import org.identityconnectors.common.Base64;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.syncope.core.persistence.dao.ConfDAO;\n+\n+public class EncryptionUtil {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n+            LoggerFactory.getLogger(EncryptionUtil.class);\n+\n+    @Autowired\n+    private ConfDAO confDAO;\n+\n+    public String encrypt(final String toBeCrypted) {\n+        String result = null;\n+\n+        try {\n+            final DESKeySpec keySpec =\n+                    new DESKeySpec(confDAO.find(\n+                    \"token.encryption.key\").getConfValue().getBytes(\"UTF8\"));\n+\n+            final SecretKeyFactory keyFactory =\n+                    SecretKeyFactory.getInstance(\"DES\");\n+\n+            final SecretKey key = keyFactory.generateSecret(keySpec);\n+\n+            final byte[] cleartext = toBeCrypted.getBytes(\"UTF8\");\n+\n+            final Cipher cipher = Cipher.getInstance(\"DES\");\n+\n+            LOG.debug(\"To Be Encrypted: {}\", toBeCrypted);\n+\n+            cipher.init(Cipher.ENCRYPT_MODE, key);\n+            result = Base64.encode(cipher.doFinal(cleartext));\n+\n+            LOG.debug(\"Encrypted: {}\", result);\n+        } catch (Exception e) {\n+            LOG.error(\"Encrypt operation failed\", e);\n+        }\n+\n+        return result;\n+    }\n+\n+    public String decrypt(final String toBeDecrypted) {\n+        String result = null;\n+\n+        try {\n+            final DESKeySpec keySpec =\n+                    new DESKeySpec(confDAO.find(\n+                    \"token.encryption.key\").getConfValue().getBytes(\"UTF8\"));\n+\n+            final SecretKeyFactory keyFactory =\n+                    SecretKeyFactory.getInstance(\"DES\");\n+\n+            final SecretKey key = keyFactory.generateSecret(keySpec);\n+\n+            final byte[] encrypedPwdBytes =\n+                    Base64.decode(toBeDecrypted);\n+\n+            final Cipher cipher = Cipher.getInstance(\"DES\");\n+\n+            LOG.debug(\"To Be Dencrypted: {}\", toBeDecrypted);\n+\n+            cipher.init(Cipher.DECRYPT_MODE, key);\n+            result = new String(cipher.doFinal(encrypedPwdBytes));\n+\n+            LOG.debug(\"Dencrypted: {}\", result);\n+        } catch (Exception e) {\n+            LOG.error(\"Decrypt operation failed\", e);\n+        }\n+\n+        return result;\n+    }\n+}"},{"sha":"5e70307d93efdf3ae0f23d9ec4d0200f5537d4a2","filename":"core/src/main/java/org/syncope/core/rest/controller/TaskController.java","status":"modified","additions":68,"deletions":27,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -14,6 +14,8 @@\n  */\n package org.syncope.core.rest.controller;\n \n+import com.opensymphony.workflow.Workflow;\n+import com.opensymphony.workflow.WorkflowException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Controller;\n import org.springframework.web.bind.annotation.PathVariable;\n@@ -22,6 +24,8 @@\n import java.util.ArrayList;\n import java.util.List;\n import javassist.NotFoundException;\n+import javax.annotation.Resource;\n+import jpasymphony.dao.JPAWorkflowEntryDAO;\n import org.springframework.http.HttpStatus;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.web.bind.annotation.RequestParam;\n@@ -35,6 +39,8 @@\n import org.syncope.core.persistence.dao.TaskExecutionDAO;\n import org.syncope.core.persistence.propagation.PropagationManager;\n import org.syncope.core.rest.data.TaskDataBinder;\n+import org.syncope.core.workflow.Constants;\n+import org.syncope.core.workflow.WFUtils;\n import org.syncope.types.PropagationMode;\n import org.syncope.types.SyncopeClientExceptionType;\n import org.syncope.types.TaskExecutionStatus;\n@@ -55,14 +61,20 @@ public class TaskController extends AbstractController {\n     @Autowired\n     private PropagationManager propagationManager;\n \n+    @Resource(name = \"taskExecutionWorkflow\")\n+    private Workflow workflow;\n+\n+    @Autowired\n+    private JPAWorkflowEntryDAO workflowEntryDAO;\n+\n     @PreAuthorize(\"hasRole('TASK_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/list\")\n     public List<TaskTO> list() {\n         List<Task> tasks = taskDAO.findAll();\n         List<TaskTO> taskTOs = new ArrayList<TaskTO>(tasks.size());\n         for (Task task : tasks) {\n-            taskTOs.add(taskDataBinder.getTaskTO(task));\n+            taskTOs.add(taskDataBinder.getTaskTO(workflow, task));\n         }\n \n         return taskTOs;\n@@ -76,7 +88,8 @@ public List<TaskExecutionTO> listExecutions() {\n         List<TaskExecutionTO> executionTOs =\n                 new ArrayList<TaskExecutionTO>(executions.size());\n         for (TaskExecution execution : executions) {\n-            executionTOs.add(taskDataBinder.getTaskExecutionTO(execution));\n+            executionTOs.add(\n+                    taskDataBinder.getTaskExecutionTO(workflow, execution));\n         }\n \n         return executionTOs;\n@@ -93,7 +106,7 @@ public TaskTO read(@PathVariable(\"taskId\") final Long taskId)\n             throw new NotFoundException(\"Task \" + taskId);\n         }\n \n-        return taskDataBinder.getTaskTO(task);\n+        return taskDataBinder.getTaskTO(workflow, task);\n     }\n \n     @PreAuthorize(\"hasRole('TASK_READ')\")\n@@ -108,7 +121,7 @@ public TaskExecutionTO readExecution(\n             throw new NotFoundException(\"Task execution \" + executionId);\n         }\n \n-        return taskDataBinder.getTaskExecutionTO(execution);\n+        return taskDataBinder.getTaskExecutionTO(workflow, execution);\n     }\n \n     @PreAuthorize(\"hasRole('TASK_EXECUTE')\")\n@@ -124,22 +137,25 @@ public TaskExecutionTO execute(@PathVariable(\"taskId\") final Long taskId)\n \n         TaskExecution execution = new TaskExecution();\n         execution.setTask(task);\n-        task.addExecution(execution);\n+\n+        try {\n+            Long workflowId = workflow.initialize(\n+                    Constants.TASKEXECUTION_WORKFLOW, 0, null);\n+            execution.setWorkflowId(workflowId);\n+        } catch (WorkflowException e) {\n+            LOG.error(\"While initializing workflow for {}\",\n+                    execution, e);\n+        }\n+\n         execution = taskExecutionDAO.save(execution);\n \n         LOG.debug(\"Execution started for {}\", task);\n \n-        if (PropagationMode.SYNC\n-                == execution.getTask().getPropagationMode()) {\n-\n-            propagationManager.syncPropagate(execution);\n-        } else {\n-            propagationManager.asyncPropagate(execution);\n-        }\n+        propagationManager.propagate(execution);\n \n         LOG.debug(\"Execution finished for {}, {}\", task, execution);\n \n-        return taskDataBinder.getTaskExecutionTO(execution);\n+        return taskDataBinder.getTaskExecutionTO(workflow, execution);\n     }\n \n     @PreAuthorize(\"hasRole('TASK_READ')\")\n@@ -149,7 +165,8 @@ public TaskExecutionTO report(\n             @PathVariable(\"executionId\") final Long executionId,\n             @RequestParam(\"executionStatus\") final TaskExecutionStatus status,\n             @RequestParam(\"message\") final String message)\n-            throws NotFoundException, SyncopeClientCompositeErrorException {\n+            throws NotFoundException, SyncopeClientCompositeErrorException,\n+            WorkflowException {\n \n         TaskExecution execution = taskExecutionDAO.find(executionId);\n         if (execution == null) {\n@@ -159,20 +176,27 @@ public TaskExecutionTO report(\n         SyncopeClientException invalidReportException =\n                 new SyncopeClientException(\n                 SyncopeClientExceptionType.InvalidTaskExecutionReport);\n+\n         if (execution.getTask().getPropagationMode() != PropagationMode.ASYNC) {\n             invalidReportException.addElement(\"Propagation mode: \"\n-                    + execution.getTask().getPropagationMode().toString());\n-        }\n-        if (execution.getStatus() != TaskExecutionStatus.SUBMITTED) {\n-            invalidReportException.addElement(\"Current execution status: \"\n-                    + execution.getStatus().toString());\n+                    + execution.getTask().getPropagationMode());\n         }\n-        if (status != TaskExecutionStatus.SUCCESS\n-                && status != TaskExecutionStatus.FAILURE) {\n \n-            invalidReportException.addElement(\"Execution status to be set: \"\n-                    + status.toString());\n+        switch (status) {\n+            case SUCCESS:\n+            case FAILURE:\n+                break;\n+\n+            case CREATED:\n+            case SUBMITTED:\n+            case UNSUBMITTED:\n+                invalidReportException.addElement(\n+                        \"Execution status to be set: \" + status);\n+                break;\n+\n+            default:\n         }\n+\n         if (!invalidReportException.getElements().isEmpty()) {\n             SyncopeClientCompositeErrorException scce =\n                     new SyncopeClientCompositeErrorException(\n@@ -181,11 +205,19 @@ public TaskExecutionTO report(\n             throw scce;\n         }\n \n-        execution.setStatus(status);\n+        final String wfAction = status == TaskExecutionStatus.SUCCESS\n+                ? Constants.ACTION_OK : Constants.ACTION_KO;\n+\n+        WFUtils.doExecuteAction(workflow,\n+                Constants.TASKEXECUTION_WORKFLOW,\n+                wfAction,\n+                execution.getWorkflowId(),\n+                null);\n+\n         execution.setMessage(message);\n         execution = taskExecutionDAO.save(execution);\n \n-        return taskDataBinder.getTaskExecutionTO(execution);\n+        return taskDataBinder.getTaskExecutionTO(workflow, execution);\n     }\n \n     @PreAuthorize(\"hasRole('TASK_DELETE')\")\n@@ -203,8 +235,11 @@ public void delete(@PathVariable(\"taskId\") Long taskId)\n                 new SyncopeClientException(\n                 SyncopeClientExceptionType.IncompleteTaskExecution);\n \n+        int[] wfActions;\n         for (TaskExecution execution : task.getExecutions()) {\n-            if (execution.getStatus() == TaskExecutionStatus.SUBMITTED) {\n+            wfActions = workflow.getAvailableActions(\n+                    execution.getWorkflowId(), null);\n+            if (wfActions != null && wfActions.length > 0) {\n                 incompleteTaskExecution.addElement(\n                         execution.getId().toString());\n             }\n@@ -231,7 +266,9 @@ public void deleteExecution(@PathVariable(\"executionId\") Long executionId)\n             throw new NotFoundException(\"Task execution \" + executionId);\n         }\n \n-        if (execution.getStatus() == TaskExecutionStatus.SUBMITTED) {\n+        int[] wfActions = workflow.getAvailableActions(\n+                execution.getWorkflowId(), null);\n+        if (wfActions != null && wfActions.length > 0) {\n             SyncopeClientException incompleteTaskExecution =\n                     new SyncopeClientException(\n                     SyncopeClientExceptionType.IncompleteTaskExecution);\n@@ -245,6 +282,10 @@ public void deleteExecution(@PathVariable(\"executionId\") Long executionId)\n             throw scce;\n         }\n \n+        if (execution.getWorkflowId() != null) {\n+            workflowEntryDAO.delete(execution.getWorkflowId());\n+        }\n+\n         taskExecutionDAO.delete(execution);\n     }\n }"},{"sha":"bc891c50cf81e48f78b388c315d514435d5817ea","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":105,"deletions":143,"changes":248,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -14,11 +14,8 @@\n  */\n package org.syncope.core.rest.controller;\n \n-import com.opensymphony.workflow.InvalidActionException;\n import com.opensymphony.workflow.Workflow;\n import com.opensymphony.workflow.WorkflowException;\n-import com.opensymphony.workflow.loader.ActionDescriptor;\n-import com.opensymphony.workflow.loader.WorkflowDescriptor;\n import com.opensymphony.workflow.spi.Step;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Controller;\n@@ -39,6 +36,7 @@\n import java.util.Map;\n import java.util.Set;\n import javassist.NotFoundException;\n+import javax.annotation.Resource;\n import javax.servlet.http.HttpServletResponse;\n import jpasymphony.dao.JPAWorkflowEntryDAO;\n import org.springframework.dao.DataIntegrityViolationException;\n@@ -61,17 +59,13 @@\n import org.syncope.core.rest.data.InvalidSearchConditionException;\n import org.syncope.core.rest.data.UserDataBinder.CheckInResult;\n import org.syncope.core.workflow.Constants;\n+import org.syncope.core.workflow.WFUtils;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Controller\n @RequestMapping(\"/user\")\n public class UserController extends AbstractController {\n \n-    public enum SearchMode {\n-\n-        CRITERIA, NATIVE\n-\n-    }\n     @Autowired\n     private UserDAO userDAO;\n \n@@ -84,94 +78,55 @@ public enum SearchMode {\n     @Autowired\n     private UserDataBinder userDataBinder;\n \n-    @Autowired\n-    private Workflow userWorkflow;\n+    @Resource(name = \"userWorkflow\")\n+    private Workflow workflow;\n \n     @Autowired\n     private PropagationManager propagationManager;\n \n-    public Integer findWorkflowAction(final Long workflowId,\n-            final String actionName) {\n-\n-        WorkflowDescriptor workflowDescriptor =\n-                userWorkflow.getWorkflowDescriptor(Constants.USER_WORKFLOW);\n-\n-        int[] actions = userWorkflow.getAvailableActions(workflowId, null);\n-\n-        Integer actionId = null;\n-        for (int i = 0; i < actions.length && actionId == null; i++) {\n-            if (actionName.equals(\n-                    workflowDescriptor.getAction(actions[i]).getName())) {\n-\n-                actionId = actions[i];\n-            }\n-        }\n+    private SyncopeUser getUserFromId(final Long userId)\n+            throws NotFoundException {\n \n-        Map<Integer, ActionDescriptor> commonActions =\n-                workflowDescriptor.getCommonActions();\n-        for (Integer actionNumber : commonActions.keySet()) {\n-            if (actionName.equals(commonActions.get(actionNumber).getName())) {\n-                actionId = actionNumber;\n-            }\n+        SyncopeUser user = userDAO.find(userId);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + userId);\n         }\n \n-        return actionId;\n+        return user;\n     }\n \n-    public SyncopeUser doExecuteAction(final String actionName,\n-            final Long userId,\n-            final Map<String, Object> moreInputs)\n+    private UserTO executeAction(UserTO userTO, String actionName,\n+            Map<String, Object> moreInputs)\n             throws WorkflowException, NotFoundException {\n \n-        SyncopeUser user = userDAO.find(userId);\n-        if (user == null) {\n-            throw new NotFoundException(\"User \" + userId);\n-        }\n+        SyncopeUser user = getUserFromId(userTO.getId());\n \n         Map<String, Object> inputs = new HashMap<String, Object>();\n         if (moreInputs != null && !moreInputs.isEmpty()) {\n             inputs.putAll(moreInputs);\n         }\n-        inputs.put(Constants.SYNCOPE_USER, user);\n \n-        Integer actionId = findWorkflowAction(user.getWorkflowId(),\n-                actionName);\n-        if (actionId == null) {\n-            throw new NotFoundException(\"Workflow action '\" + actionName + \"'\");\n-        }\n-\n-        try {\n-            userWorkflow.doAction(user.getWorkflowId(),\n-                    actionId, inputs);\n-        } catch (InvalidActionException e) {\n-            throw new WorkflowException(e);\n-        }\n+        inputs.put(Constants.SYNCOPE_USER, user);\n \n-        return userDAO.save(user);\n-    }\n+        WFUtils.doExecuteAction(workflow,\n+                Constants.USER_WORKFLOW,\n+                actionName,\n+                user.getWorkflowId(),\n+                inputs);\n \n-    @PreAuthorize(\"hasRole('USER_UPDATE')\")\n-    @RequestMapping(method = RequestMethod.POST,\n-    value = \"/action/{actionName}\")\n-    public UserTO executeAction(HttpServletResponse response,\n-            @RequestBody UserTO userTO,\n-            @PathVariable(value = \"actionName\") String actionName)\n-            throws WorkflowException, NotFoundException {\n+        user = userDAO.save(user);\n \n-        return userDataBinder.getUserTO(\n-                doExecuteAction(actionName, userTO.getId(), null),\n-                userWorkflow);\n+        return userDataBinder.getUserTO(user, workflow);\n     }\n \n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/activate\")\n     public UserTO activate(@RequestBody UserTO userTO)\n             throws WorkflowException, NotFoundException {\n \n-        return userDataBinder.getUserTO(\n-                doExecuteAction(Constants.ACTION_ACTIVATE, userTO.getId(),\n-                Collections.singletonMap(Constants.TOKEN,\n-                (Object) userTO.getToken())), userWorkflow);\n+        return executeAction(userTO, Constants.ACTION_ACTIVATE,\n+                Collections.singletonMap(\n+                Constants.TOKEN, (Object) userTO.getToken()));\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n@@ -182,10 +137,8 @@ public UserTO generateToken(@PathVariable(\"userId\") Long userId)\n \n         UserTO userTO = new UserTO();\n         userTO.setId(userId);\n-        return userDataBinder.getUserTO(\n-                doExecuteAction(Constants.ACTION_GENERATE_TOKEN,\n-                userTO.getId(), null),\n-                userWorkflow);\n+\n+        return executeAction(userTO, Constants.ACTION_GENERATE_TOKEN, null);\n     }\n \n     @PreAuthorize(\"hasRole('USER_UPDATE')\")\n@@ -194,11 +147,9 @@ public UserTO generateToken(@PathVariable(\"userId\") Long userId)\n     public UserTO verifyToken(@RequestBody UserTO userTO)\n             throws WorkflowException, NotFoundException {\n \n-        return userDataBinder.getUserTO(\n-                doExecuteAction(Constants.ACTION_VERIFY_TOKEN, userTO.getId(),\n-                Collections.singletonMap(Constants.TOKEN,\n-                (Object) userTO.getToken())),\n-                userWorkflow);\n+        return executeAction(userTO, Constants.ACTION_VERIFY_TOKEN,\n+                Collections.singletonMap(\n+                Constants.TOKEN, (Object) userTO.getToken()));\n     }\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n@@ -229,7 +180,7 @@ public List<UserTO> list() {\n         List<SyncopeUser> users = userDAO.findAll();\n         List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n         for (SyncopeUser user : users) {\n-            userTOs.add(userDataBinder.getUserTO(user, userWorkflow));\n+            userTOs.add(userDataBinder.getUserTO(user, workflow));\n         }\n \n         return userTOs;\n@@ -252,7 +203,7 @@ public PaginatedResult paginatedList(\n         List<SyncopeUser> users = userDAO.findAll(page, size);\n         List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n         for (SyncopeUser user : users) {\n-            userTOs.add(userDataBinder.getUserTO(user, userWorkflow));\n+            userTOs.add(userDataBinder.getUserTO(user, workflow));\n         }\n \n         paginatedResult.setRecordsInPage(userTOs.size());\n@@ -273,7 +224,7 @@ public UserTO read(@PathVariable(\"userId\") Long userId)\n             throw new NotFoundException(\"User \" + userId);\n         }\n \n-        return userDataBinder.getUserTO(user, userWorkflow);\n+        return userDataBinder.getUserTO(user, workflow);\n     }\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n@@ -290,11 +241,11 @@ public WorkflowActionsTO getActions(@PathVariable(\"userId\") Long userId)\n \n         WorkflowActionsTO result = new WorkflowActionsTO();\n \n-        int[] availableActions = userWorkflow.getAvailableActions(\n+        int[] availableActions = workflow.getAvailableActions(\n                 user.getWorkflowId(), Collections.EMPTY_MAP);\n         for (int i = 0; i < availableActions.length; i++) {\n             result.addAction(\n-                    userWorkflow.getWorkflowDescriptor(Constants.USER_WORKFLOW).\n+                    workflow.getWorkflowDescriptor(Constants.USER_WORKFLOW).\n                     getAction(availableActions[i]).getName());\n         }\n \n@@ -318,7 +269,7 @@ public List<UserTO> search(@RequestBody NodeCond searchCondition)\n         List<SyncopeUser> matchingUsers = userSearchDAO.search(searchCondition);\n         List<UserTO> result = new ArrayList<UserTO>(matchingUsers.size());\n         for (SyncopeUser user : matchingUsers) {\n-            result.add(userDataBinder.getUserTO(user, userWorkflow));\n+            result.add(userDataBinder.getUserTO(user, workflow));\n         }\n \n         return result;\n@@ -350,7 +301,7 @@ public PaginatedResult paginatedSearch(\n \n         final List<UserTO> result = new ArrayList<UserTO>(matchingUsers.size());\n         for (SyncopeUser user : matchingUsers) {\n-            result.add(userDataBinder.getUserTO(user, userWorkflow));\n+            result.add(userDataBinder.getUserTO(user, workflow));\n         }\n \n         paginatedResult.setRecordsInPage(result.size());\n@@ -371,7 +322,7 @@ public ModelAndView getStatus(@PathVariable(\"userId\") Long userId)\n             throw new NotFoundException(\"User \" + userId);\n         }\n \n-        List<Step> currentSteps = userWorkflow.getCurrentSteps(\n+        List<Step> currentSteps = workflow.getCurrentSteps(\n                 user.getWorkflowId());\n \n         ModelAndView mav = new ModelAndView();\n@@ -382,47 +333,49 @@ public ModelAndView getStatus(@PathVariable(\"userId\") Long userId)\n         return mav;\n     }\n \n-    private Set<String> getSyncResourceNames(SyncopeUser user,\n-            Set<Long> syncRoles, Set<String> syncResources) {\n+    private Set<String> getMandatoryResourceNames(SyncopeUser user,\n+            Set<Long> mandatoryRoles, Set<String> mandatoryResources) {\n \n-        if ((syncRoles == null || syncRoles.isEmpty()\n-                && (syncResources == null || syncResources.isEmpty()))) {\n-            return Collections.EMPTY_SET;\n+        if (mandatoryRoles == null) {\n+            mandatoryRoles = Collections.EMPTY_SET;\n+        }\n+        if (mandatoryResources == null) {\n+            mandatoryResources = Collections.EMPTY_SET;\n         }\n \n-        Set<String> syncResourceNames = new HashSet<String>();\n+        Set<String> mandatoryResourceNames = new HashSet<String>();\n \n         for (TargetResource resource : user.getTargetResources()) {\n-            if (syncResources.contains(resource.getName())) {\n-                syncResourceNames.add(resource.getName());\n+            if (mandatoryResources.contains(resource.getName())) {\n+                mandatoryResourceNames.add(resource.getName());\n             }\n         }\n         for (SyncopeRole role : user.getRoles()) {\n-            if (syncRoles.contains(role.getId())) {\n+            if (mandatoryRoles.contains(role.getId())) {\n                 for (TargetResource resource : role.getTargetResources()) {\n-                    syncResourceNames.add(resource.getName());\n+                    mandatoryResourceNames.add(resource.getName());\n                 }\n             }\n         }\n \n-        return syncResourceNames;\n+        return mandatoryResourceNames;\n     }\n \n     @PreAuthorize(\"hasRole('USER_CREATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/create\")\n     public UserTO create(HttpServletResponse response,\n             @RequestBody UserTO userTO,\n-            @RequestParam(value = \"syncRoles\",\n-            required = false) Set<Long> syncRoles,\n-            @RequestParam(value = \"syncResources\",\n-            required = false) Set<String> syncResources)\n+            @RequestParam(value = \"mandatoryRoles\",\n+            required = false) Set<Long> mandatoryRoles,\n+            @RequestParam(value = \"mandatoryResources\",\n+            required = false) Set<String> mandatoryResources)\n             throws SyncopeClientCompositeErrorException,\n             DataIntegrityViolationException, WorkflowException,\n             PropagationException, NotFoundException {\n \n         LOG.debug(\"User create called with parameters {}\\n{}\\n{}\",\n-                new Object[]{userTO, syncRoles, syncResources});\n+                new Object[]{userTO, mandatoryRoles, mandatoryResources});\n \n         CheckInResult checkInResult = userDataBinder.checkIn(userTO);\n         LOG.debug(\"Check-in result: {}\", checkInResult);\n@@ -433,7 +386,7 @@ public UserTO create(HttpServletResponse response,\n \n             case OVERWRITE:\n                 delete(checkInResult.getSyncopeUserId(),\n-                        syncRoles, syncResources);\n+                        mandatoryRoles, mandatoryResources);\n                 break;\n \n             case REJECT:\n@@ -458,39 +411,39 @@ public UserTO create(HttpServletResponse response,\n         user = userDAO.save(user);\n \n         // Now that user is created locally, let's propagate\n-        Set<String> syncResourceNames =\n-                getSyncResourceNames(user, syncRoles, syncResources);\n+        Set<String> mandatoryResourceNames = getMandatoryResourceNames(user,\n+                mandatoryRoles, mandatoryResources);\n \n-        if (!syncResourceNames.isEmpty()) {\n-            LOG.debug(\"About to propagate synchronously onto resources {}\",\n-                    syncResourceNames);\n+        if (!mandatoryResourceNames.isEmpty()) {\n+            LOG.debug(\"About to propagate mandatory onto resources {}\",\n+                    mandatoryResourceNames);\n         }\n \n         propagationManager.create(\n-                user, userTO.getPassword(), syncResourceNames);\n+                user, userTO.getPassword(), mandatoryResourceNames);\n \n         // User is created locally and propagated, let's advance on the workflow\n         final Long workflowId =\n-                userWorkflow.initialize(Constants.USER_WORKFLOW, 0, null);\n+                workflow.initialize(Constants.USER_WORKFLOW, 0, null);\n         user.setWorkflowId(workflowId);\n \n         Map<String, Object> inputs = new HashMap<String, Object>();\n         inputs.put(Constants.SYNCOPE_USER, user);\n         inputs.put(Constants.USER_TO, userTO);\n \n-        int[] wfActions = userWorkflow.getAvailableActions(workflowId, null);\n+        int[] wfActions = workflow.getAvailableActions(workflowId, null);\n         LOG.debug(\"Available workflow actions for user {}: {}\",\n                 user, wfActions);\n \n         for (int wfAction : wfActions) {\n             LOG.debug(\"About to execute action {} on user {}\", wfAction, user);\n-            userWorkflow.doAction(workflowId, wfAction, inputs);\n+            workflow.doAction(workflowId, wfAction, inputs);\n             LOG.debug(\"Action {} on user {} run successfully\", wfAction, user);\n         }\n \n         user = userDAO.save(user);\n \n-        final UserTO savedTO = userDataBinder.getUserTO(user, userWorkflow);\n+        final UserTO savedTO = userDataBinder.getUserTO(user, workflow);\n         LOG.debug(\"About to return create user\\n{}\", savedTO);\n \n         response.setStatus(HttpServletResponse.SC_CREATED);\n@@ -501,69 +454,78 @@ public UserTO create(HttpServletResponse response,\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/update\")\n     public UserTO update(@RequestBody UserMod userMod,\n-            @RequestParam(value = \"syncRoles\",\n-            required = false) Set<Long> syncRoles,\n-            @RequestParam(value = \"syncResources\",\n-            required = false) Set<String> syncResources)\n+            @RequestParam(value = \"mandatoryRoles\",\n+            required = false) Set<Long> mandatoryRoles,\n+            @RequestParam(value = \"mandatoryResources\",\n+            required = false) Set<String> mandatoryResources)\n             throws NotFoundException, PropagationException, WorkflowException {\n \n-        LOG.debug(\"update called with parameter {}\", userMod);\n+        LOG.debug(\"User update called with parameters {}\\n{}\\n{}\",\n+                new Object[]{userMod, mandatoryRoles, mandatoryResources});\n \n         SyncopeUser user = userDAO.find(userMod.getId());\n         if (user == null) {\n             throw new NotFoundException(\"User \" + userMod.getId());\n         }\n \n         // First of all, let's check if update is allowed\n-        user = doExecuteAction(Constants.ACTION_UPDATE,\n-                userMod.getId(), Collections.singletonMap(Constants.USER_MOD,\n-                (Object) userMod));\n+        Map<String, Object> inputs = new HashMap<String, Object>();\n+        inputs.put(Constants.SYNCOPE_USER, user);\n+        inputs.put(Constants.USER_MOD, userMod);\n+\n+        WFUtils.doExecuteAction(workflow,\n+                Constants.USER_WORKFLOW,\n+                Constants.ACTION_UPDATE,\n+                user.getWorkflowId(),\n+                inputs);\n \n         // Update user with provided userMod\n         ResourceOperations resourceOperations =\n                 userDataBinder.update(user, userMod);\n         user = userDAO.save(user);\n \n         // Now that user is update locally, let's propagate\n-        Set<String> syncResourceNames =\n-                getSyncResourceNames(user, syncRoles, syncResources);\n-        if (!syncResourceNames.isEmpty()) {\n-            LOG.debug(\"About to propagate synchronously onto resources {}\",\n-                    syncResourceNames);\n+        Set<String> mandatoryResourceNames = getMandatoryResourceNames(user,\n+                mandatoryRoles, mandatoryResources);\n+        if (!mandatoryResourceNames.isEmpty()) {\n+            LOG.debug(\"About to propagate mandatory onto resources {}\",\n+                    mandatoryResourceNames);\n         }\n \n         propagationManager.update(user, userMod.getPassword(),\n-                resourceOperations, syncResourceNames);\n+                resourceOperations, mandatoryResourceNames);\n \n-        return userDataBinder.getUserTO(user, userWorkflow);\n+        return userDataBinder.getUserTO(user, workflow);\n     }\n \n     @PreAuthorize(\"hasRole('USER_DELETE')\")\n     @RequestMapping(method = RequestMethod.DELETE,\n     value = \"/delete/{userId}\")\n     public void delete(@PathVariable(\"userId\") Long userId,\n-            @RequestParam(value = \"syncRoles\",\n-            required = false) Set<Long> syncRoles,\n-            @RequestParam(value = \"syncResources\",\n-            required = false) Set<String> syncResources)\n+            @RequestParam(value = \"mandatoryRoles\",\n+            required = false) Set<Long> mandatoryRoles,\n+            @RequestParam(value = \"mandatoryResources\",\n+            required = false) Set<String> mandatoryResources)\n             throws NotFoundException, WorkflowException, PropagationException {\n \n-        SyncopeUser user = userDAO.find(userId);\n-        if (user == null) {\n-            throw new NotFoundException(\"User \" + userId);\n-        }\n+        SyncopeUser user = getUserFromId(userId);\n \n-        doExecuteAction(Constants.ACTION_DELETE, userId, null);\n+        WFUtils.doExecuteAction(workflow,\n+                Constants.USER_WORKFLOW,\n+                Constants.ACTION_DELETE,\n+                user.getWorkflowId(),\n+                Collections.singletonMap(Constants.SYNCOPE_USER,\n+                (Object) user));\n \n         // Propagate delete\n-        Set<String> syncResourceNames =\n-                getSyncResourceNames(user, syncRoles, syncResources);\n-        if (!syncResourceNames.isEmpty()) {\n-            LOG.debug(\"About to propagate synchronously onto resources {}\",\n-                    syncResourceNames);\n+        Set<String> mandatoryResourceNames = getMandatoryResourceNames(user,\n+                mandatoryRoles, mandatoryResources);\n+        if (!mandatoryResourceNames.isEmpty()) {\n+            LOG.debug(\"About to propagate mandatory onto resources {}\",\n+                    mandatoryResourceNames);\n         }\n \n-        propagationManager.delete(user, syncResourceNames);\n+        propagationManager.delete(user, mandatoryResourceNames);\n \n         // Now that delete has been propagated, let's remove everything\n         if (user.getWorkflowId() != null) {"},{"sha":"80728ac20b9071803d6918e24d7d26a4dffded40","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -295,10 +295,10 @@ private SyncopeClientException checkMandatory(\n     }\n \n     protected ResourceOperations fill(\n-            AbstractAttributable attributable,\n-            AbstractAttributableMod attributableMod,\n-            AttributableUtil attributableUtil,\n-            SyncopeClientCompositeErrorException compositeErrorException)\n+            final AbstractAttributable attributable,\n+            final AbstractAttributableMod attributableMod,\n+            final AttributableUtil attributableUtil,\n+            final SyncopeClientCompositeErrorException compositeErrorException)\n             throws SyncopeClientCompositeErrorException {\n \n         Set<TargetResource> resources = new HashSet<TargetResource>();\n@@ -476,6 +476,7 @@ protected ResourceOperations fill(\n                 for (SchemaMapping mapping : derivedSchema.getMappings()) {\n                     if (mapping.getResource() != null\n                             && resources.contains(mapping.getResource())) {\n+\n                         resourceOperations.add(ResourceOperationType.UPDATE,\n                                 mapping.getResource());\n                     }\n@@ -654,7 +655,6 @@ public void fillTO(\n         }\n \n         for (AbstractDerAttr derivedAttribute : derivedAttributes) {\n-\n             attributeTO = new AttributeTO();\n             attributeTO.setSchema(\n                     derivedAttribute.getDerivedSchema().getName());"},{"sha":"4bfb0341f023a0075fd5126e9a6d6ccdc8e1b955","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -107,6 +107,9 @@ public TargetResource getResource(TargetResource resource,\n         resource.setForceMandatoryConstraint(\n                 resourceTO.isForceMandatoryConstraint());\n \n+        resource.setOptionalPropagationMode(\n+                resourceTO.getOptionalPropagationMode());\n+\n         resource.setMappings(\n                 getSchemaMappings(resource, resourceTO.getMappings()));\n \n@@ -151,6 +154,9 @@ public ResourceTO getResourceTO(TargetResource resource) {\n         resourceTO.setForceMandatoryConstraint(\n                 resource.isForceMandatoryConstraint());\n \n+        resourceTO.setOptionalPropagationMode(\n+                resource.getOptionalPropagationMode());\n+\n         return resourceTO;\n     }\n \n@@ -277,9 +283,7 @@ public SchemaMappingTO getSchemaMappingTO(SchemaMapping schemaMapping) {\n \n         schemaMappingTO.setId(schemaMapping.getId());\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Obtained TO \" + schemaMappingTO);\n-        }\n+        LOG.debug(\"Obtained SchemaMappingTO {}\", schemaMappingTO);\n \n         return schemaMappingTO;\n     }"},{"sha":"737c7e77696a7881cdae00b4cd82c7a71f284563","filename":"core/src/main/java/org/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":11,"deletions":14,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -14,15 +14,15 @@\n  */\n package org.syncope.core.rest.data;\n \n+import com.opensymphony.workflow.Workflow;\n+import javax.annotation.Resource;\n import org.springframework.beans.BeanUtils;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n-import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.to.TaskExecutionTO;\n import org.syncope.client.to.TaskTO;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.TaskExecution;\n-import org.syncope.core.persistence.dao.TaskExecutionDAO;\n+import org.syncope.core.workflow.WFUtils;\n \n @Component\n public class TaskDataBinder {\n@@ -33,31 +33,28 @@ public class TaskDataBinder {\n     private static final String[] IGNORE_TASK_EXECUTION_PROPERTIES = {\n         \"task\"};\n \n-    @Autowired\n-    private TaskExecutionDAO taskExecutionDAO;\n+    @Resource(name = \"taskExecutionWorkflow\")\n+    private Workflow workflow;\n \n-    @Transactional(rollbackFor = {\n-        Throwable.class\n-    })\n-    public TaskExecution storeTaskExecution(final TaskExecution execution) {\n-        return taskExecutionDAO.save(execution);\n-    }\n+    public TaskExecutionTO getTaskExecutionTO(final Workflow workflow,\n+            final TaskExecution execution) {\n \n-    public TaskExecutionTO getTaskExecutionTO(final TaskExecution execution) {\n         TaskExecutionTO executionTO = new TaskExecutionTO();\n         BeanUtils.copyProperties(execution, executionTO,\n                 IGNORE_TASK_EXECUTION_PROPERTIES);\n+        executionTO.setStatus(\n+                WFUtils.getTaskExecutionStatus(workflow, execution));\n         executionTO.setTask(execution.getTask().getId());\n \n         return executionTO;\n     }\n \n-    public TaskTO getTaskTO(final Task task) {\n+    public TaskTO getTaskTO(final Workflow workflow, final Task task) {\n         TaskTO taskTO = new TaskTO();\n         BeanUtils.copyProperties(task, taskTO, IGNORE_TASK_PROPERTIES);\n \n         for (TaskExecution execution : task.getExecutions()) {\n-            taskTO.addExecution(getTaskExecutionTO(execution));\n+            taskTO.addExecution(getTaskExecutionTO(workflow, execution));\n         }\n \n         taskTO.setResource(task.getResource().getName());"},{"sha":"d32564727f497cf584dfd7d1668f8d5cd17f62b4","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -336,7 +336,7 @@ public UserTO getUserTO(SyncopeUser user, Workflow userWorkflow) {\n             if (currentSteps != null && !currentSteps.isEmpty()) {\n                 userTO.setStatus(currentSteps.iterator().next().getStatus());\n             } else {\n-                LOG.error(\"Could not find status information for \" + user);\n+                LOG.error(\"Could not find status information for {}\", user);\n             }\n         } catch (EntityNotFoundException e) {\n             LOG.error(\"Could not find workflow entry with id \""},{"sha":"8947d641416ced4fcb15f684fac82738d4d28a82","filename":"core/src/main/java/org/syncope/core/workflow/Constants.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -19,6 +19,7 @@\n  */\n public final class Constants {\n \n+    // ----- User workflow ------ //\n     public static final String ACTION_ACTIVATE = \"activate\";\n \n     public static final String ACTION_GENERATE_TOKEN = \"generateToken\";\n@@ -43,6 +44,13 @@ public final class Constants {\n \n     public static final String USER_WORKFLOW = \"userWorkflow\";\n \n+    // ----- Task execution workflow ------ //\n+    public static final String ACTION_OK = \"ok\";\n+\n+    public static final String ACTION_KO = \"ko\";\n+\n+    public static final String TASKEXECUTION_WORKFLOW = \"taskExecutionWorkflow\";\n+\n     private Constants() {\n     }\n }"},{"sha":"a69aa17c17cc8f004f58d1359039524c9cad1516","filename":"core/src/main/java/org/syncope/core/workflow/GenerateToken.java","status":"modified","additions":2,"deletions":87,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FGenerateToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FGenerateToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FGenerateToken.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -22,28 +22,17 @@\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.MissingConfKeyException;\n import org.syncope.core.persistence.dao.ConfDAO;\n-import javax.crypto.Cipher;\n-import javax.crypto.SecretKey;\n-import javax.crypto.SecretKeyFactory;\n-import javax.crypto.spec.DESKeySpec;\n-import org.identityconnectors.common.Base64;\n \n public class GenerateToken extends OSWorkflowComponent\n         implements FunctionProvider {\n \n-    private ConfDAO confDAO;\n-\n-    public GenerateToken() {\n-        super();\n-\n-        confDAO = (ConfDAO) context.getBean(\"confDAOImpl\");\n-    }\n-\n     @Override\n     @Transactional\n     public void execute(Map transientVars, Map args, PropertySet ps)\n             throws WorkflowException {\n \n+        final ConfDAO confDAO = (ConfDAO) context.getBean(\"confDAOImpl\");\n+\n         SyncopeUser user = (SyncopeUser) transientVars.get(\n                 Constants.SYNCOPE_USER);\n \n@@ -64,78 +53,4 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n \n         transientVars.put(Constants.SYNCOPE_USER, user);\n     }\n-\n-    public final String encrypt(final String toBeCrypted) {\n-\n-        String res = null;\n-\n-        try {\n-\n-            final DESKeySpec keySpec =\n-                    new DESKeySpec(confDAO.find(\n-                    \"token.encryption.key\").getConfValue().getBytes(\"UTF8\"));\n-\n-            final SecretKeyFactory keyFactory =\n-                    SecretKeyFactory.getInstance(\"DES\");\n-\n-            final SecretKey key = keyFactory.generateSecret(keySpec);\n-\n-            final byte[] cleartext = toBeCrypted.getBytes(\"UTF8\");\n-\n-            final Cipher cipher = Cipher.getInstance(\"DES\");\n-\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"To Be Encrypted: \" + toBeCrypted);\n-            }\n-\n-            cipher.init(Cipher.ENCRYPT_MODE, key);\n-            res = Base64.encode(cipher.doFinal(cleartext));\n-\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Encrypted: \" + res);\n-            }\n-\n-        } catch (Exception e) {\n-            LOG.error(\"Encrypt operation failed\", e);\n-        }\n-\n-        return res;\n-    }\n-\n-    public final String decrypt(final String toBeDecrypted) {\n-        String res = null;\n-\n-        try {\n-\n-            final DESKeySpec keySpec =\n-                    new DESKeySpec(confDAO.find(\n-                    \"token.encryption.key\").getConfValue().getBytes(\"UTF8\"));\n-\n-            final SecretKeyFactory keyFactory =\n-                    SecretKeyFactory.getInstance(\"DES\");\n-\n-            final SecretKey key = keyFactory.generateSecret(keySpec);\n-\n-            final byte[] encrypedPwdBytes =\n-                    Base64.decode(toBeDecrypted);\n-\n-            final Cipher cipher = Cipher.getInstance(\"DES\");\n-\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"To Be Dencrypted: \" + toBeDecrypted);\n-            }\n-\n-            cipher.init(Cipher.DECRYPT_MODE, key);\n-            res = new String(cipher.doFinal(encrypedPwdBytes));\n-\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Dencrypted: \" + res);\n-            }\n-\n-        } catch (Exception e) {\n-            LOG.error(\"Decrypt operation failed\", e);\n-        }\n-\n-        return res;\n-    }\n }"},{"sha":"488b680c2475438d0484cf395ebf793a7c75e3ad","filename":"core/src/main/java/org/syncope/core/workflow/OSWorkflowComponent.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FOSWorkflowComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FOSWorkflowComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FOSWorkflowComponent.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -27,6 +27,7 @@ public abstract class OSWorkflowComponent {\n      */\n     protected static final Logger LOG =\n             LoggerFactory.getLogger(OSWorkflowComponent.class);\n+\n     protected static final ConfigurableApplicationContext context =\n             ApplicationContextManager.getApplicationContext();\n "},{"sha":"50475bdb48c01c8369d00f60a000c6c55368790b","filename":"core/src/main/java/org/syncope/core/workflow/WFUtils.java","status":"added","additions":129,"deletions":0,"changes":129,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWFUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWFUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWFUtils.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -0,0 +1,129 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.workflow.InvalidActionException;\n+import com.opensymphony.workflow.Workflow;\n+import com.opensymphony.workflow.WorkflowException;\n+import com.opensymphony.workflow.loader.ActionDescriptor;\n+import com.opensymphony.workflow.loader.StepDescriptor;\n+import com.opensymphony.workflow.loader.WorkflowDescriptor;\n+import com.opensymphony.workflow.spi.Step;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import javassist.NotFoundException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.syncope.core.persistence.beans.TaskExecution;\n+import org.syncope.types.TaskExecutionStatus;\n+\n+public class WFUtils {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n+            LoggerFactory.getLogger(WFUtils.class);\n+\n+    private WFUtils() {\n+    }\n+\n+    public static Integer findWorkflowAction(\n+            final Workflow workflow,\n+            final String workflowName,\n+            final Long workflowId,\n+            final String actionName) {\n+\n+        WorkflowDescriptor workflowDescriptor =\n+                workflow.getWorkflowDescriptor(workflowName);\n+\n+        int[] actions = workflow.getAvailableActions(workflowId, null);\n+\n+        Integer actionId = null;\n+        for (int i = 0; i < actions.length && actionId == null; i++) {\n+            if (actionName.equals(\n+                    workflowDescriptor.getAction(actions[i]).getName())) {\n+\n+                actionId = actions[i];\n+            }\n+        }\n+\n+        Map<Integer, ActionDescriptor> commonActions =\n+                workflowDescriptor.getCommonActions();\n+        for (Integer actionNumber : commonActions.keySet()) {\n+            if (actionName.equals(commonActions.get(actionNumber).getName())) {\n+                actionId = actionNumber;\n+            }\n+        }\n+\n+        return actionId;\n+    }\n+\n+    public static void doExecuteAction(\n+            final Workflow workflow,\n+            final String workflowName,\n+            final String actionName,\n+            final Long workflowId,\n+            final Map<String, Object> moreInputs)\n+            throws WorkflowException, NotFoundException {\n+\n+        Map<String, Object> inputs = new HashMap<String, Object>();\n+        if (moreInputs != null && !moreInputs.isEmpty()) {\n+            inputs.putAll(moreInputs);\n+        }\n+\n+        Integer actionId = findWorkflowAction(\n+                workflow, workflowName, workflowId, actionName);\n+        if (actionId == null) {\n+            throw new NotFoundException(\"Workflow action '\" + actionName + \"'\");\n+        }\n+\n+        try {\n+            workflow.doAction(workflowId, actionId, inputs);\n+        } catch (InvalidActionException e) {\n+            throw new WorkflowException(e);\n+        }\n+    }\n+\n+    public static TaskExecutionStatus getTaskExecutionStatus(\n+            final Workflow workflow,\n+            final TaskExecution execution) {\n+\n+        TaskExecutionStatus result;\n+\n+        try {\n+            List<Step> currentSteps =\n+                    workflow.getCurrentSteps(execution.getWorkflowId());\n+            if (currentSteps != null && !currentSteps.isEmpty()) {\n+                result = TaskExecutionStatus.valueOf(\n+                        currentSteps.iterator().next().getStatus());\n+            } else {\n+                int wfState = workflow.getEntryState(execution.getWorkflowId());\n+                WorkflowDescriptor wfDesc = workflow.getWorkflowDescriptor(\n+                        Constants.TASKEXECUTION_WORKFLOW);\n+                StepDescriptor stepDesc = wfDesc.getStep(wfState);\n+\n+                result = TaskExecutionStatus.valueOf(stepDesc.getName());\n+            }\n+        } catch (Throwable t) {\n+            LOG.error(\"While getting status of {}\", execution, t);\n+\n+            result = TaskExecutionStatus.FAILURE;\n+        }\n+\n+        return result;\n+    }\n+}"},{"sha":"565f89d0a0c29d0f7b09344d73371b15894cd3e6","filename":"core/src/main/resources/indexes.xml","status":"modified","additions":0,"deletions":30,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -17,27 +17,15 @@\n     <comment>Additional indexes (in respect to JPA's)</comment>\n \n     <entry key=\"roleNameIndex\">CREATE INDEX roleNameIndex ON SyncopeRole(name)</entry>\n-    <entry key=\"UAttrUniqueValueSchemaIndex\">CREATE INDEX UAttrUniqueValueSchemaIndex ON UAttrUniqueValue(schema_name)</entry>\n-    <entry key=\"MAttrUniqueValueSchemaIndex\">CREATE INDEX MAttrUniqueValueSchemaIndex ON MAttrUniqueValue(schema_name)</entry>\n-    <entry key=\"RAttrUniqueValueSchemaIndex\">CREATE INDEX RAttrUniqueValueSchemaIndex ON RAttrUniqueValue(schema_name)</entry>\n     <entry key=\"ConnectorInstance_capabilities_ConnectorInstance_idIndex\">CREATE INDEX ConnectorInstance_capabilIndex ON ConnectorInstance_capabilities(ConnectorInstance_id)</entry>\n     <entry key=\"MAttr_schema_nameIndex\">CREATE INDEX MAttr_schema_nameIndex ON MAttr(schema_name)</entry>\n     <entry key=\"MAttr_owner_idIndex\">CREATE INDEX MAttr_owner_idIndex ON MAttr(owner_id)</entry>\n-\n     <entry key=\"MAttrValue_attribute_idIndex\">CREATE INDEX MAttrValue_attribute_idIndex ON MAttrValue(attribute_id)</entry>\n     <entry key=\"MAttrValue_stringvalueIndex\">CREATE INDEX MAttrValue_stringvalueIndex ON MAttrValue(stringvalue)</entry>\n     <entry key=\"MAttrValue_datevalueIndex\">CREATE INDEX MAttrValue_datevalueIndex ON MAttrValue(datevalue)</entry>\n     <entry key=\"MAttrValue_longvalueIndex\">CREATE INDEX MAttrValue_longvalueIndex ON MAttrValue(longvalue)</entry>\n     <entry key=\"MAttrValue_doublevalueIndex\">CREATE INDEX MAttrValue_doublevalueIndex ON MAttrValue(doublevalue)</entry>\n     <entry key=\"MAttrValue_booleanvalueIndex\">CREATE INDEX MAttrValue_booleanvalueIndex ON MAttrValue(booleanvalue)</entry>\n-\n-    <entry key=\"MAttrUValue_attribute_idIndex\">CREATE INDEX MAttrUValue_attribute_idIndex ON MAttrUniqueValue(attribute_id)</entry>\n-    <entry key=\"MAttrUValue_stringvalueIndex\">CREATE INDEX MAttrUValue_stringvalueIndex ON MAttrUniqueValue(stringvalue)</entry>\n-    <entry key=\"MAttrUValue_datevalueIndex\">CREATE INDEX MAttrUValue_datevalueIndex ON MAttrUniqueValue(datevalue)</entry>\n-    <entry key=\"MAttrUValue_longvalueIndex\">CREATE INDEX MAttrUValue_longvalueIndex ON MAttrUniqueValue(longvalue)</entry>\n-    <entry key=\"MAttrUValue_doublevalueIndex\">CREATE INDEX MAttrUValue_doublevalueIndex ON MAttrUniqueValue(doublevalue)</entry>\n-    <entry key=\"MAttrUValue_booleanvalueIndex\">CREATE INDEX MAttrUValue_booleanvalueIndex ON MAttrUniqueValue(booleanvalue)</entry>\n-\n     <entry key=\"MDerAttr_derivedSchema_nameIndex\">CREATE INDEX MDerAttr_derivedSchema_naIndex ON MDerAttr(derivedSchema_name)</entry>\n     <entry key=\"MDerAttr_owner_idIndex\">CREATE INDEX MDerAttr_owner_idIndex ON MDerAttr(owner_id)</entry>\n     <entry key=\"MSchemaDerivation_schemas_nameIndex\">CREATE INDEX MSchemaDerivation_schemasIndex ON MSchemaDerivation(schemas_name)</entry>\n@@ -48,21 +36,12 @@\n     <entry key=\"Membership_TargetResource_targetResources_nameIndex\">CREATE INDEX Membership_TargetResourc2Index ON Membership_TargetResource(targetResources_name)</entry>\n     <entry key=\"RAttr_schema_nameIndex\">CREATE INDEX RAttr_schema_nameIndex ON RAttr(schema_name)</entry>\n     <entry key=\"RAttr_owner_idIndex\">CREATE INDEX RAttr_owner_idIndex ON RAttr(owner_id)</entry>\n-\n     <entry key=\"RAttrValue_attribute_idIndex\">CREATE INDEX RAttrValue_attribute_idIndex ON RAttrValue(attribute_id)</entry>\n     <entry key=\"RAttrValue_stringvalueIndex\">CREATE INDEX RAttrValue_stringvalueIndex ON RAttrValue(stringvalue)</entry>\n     <entry key=\"RAttrValue_datevalueIndex\">CREATE INDEX RAttrValue_datevalueIndex ON RAttrValue(datevalue)</entry>\n     <entry key=\"RAttrValue_longvalueIndex\">CREATE INDEX RAttrValue_longvalueIndex ON RAttrValue(longvalue)</entry>\n     <entry key=\"RAttrValue_doublevalueIndex\">CREATE INDEX RAttrValue_doublevalueIndex ON RAttrValue(doublevalue)</entry>\n     <entry key=\"RAttrValue_booleanvalueIndex\">CREATE INDEX RAttrValue_booleanvalueIndex ON RAttrValue(booleanvalue)</entry>\n-\n-    <entry key=\"RAttrUValue_attribute_idIndex\">CREATE INDEX RAttrUValue_attribute_idIndex ON RAttrUniqueValue(attribute_id)</entry>\n-    <entry key=\"RAttrUValue_stringvalueIndex\">CREATE INDEX RAttrUValue_stringvalueIndex ON RAttrUniqueValue(stringvalue)</entry>\n-    <entry key=\"RAttrUValue_datevalueIndex\">CREATE INDEX RAttrUValue_datevalueIndex ON RAttrUniqueValue(datevalue)</entry>\n-    <entry key=\"RAttrUValue_longvalueIndex\">CREATE INDEX RAttrUValue_longvalueIndex ON RAttrUniqueValue(longvalue)</entry>\n-    <entry key=\"RAttrUValue_doublevalueIndex\">CREATE INDEX RAttrUValue_doublevalueIndex ON RAttrUniqueValue(doublevalue)</entry>\n-    <entry key=\"RAttrUValue_booleanvalueIndex\">CREATE INDEX RAttrUValue_booleanvalueIndex ON RAttrUniqueValue(booleanvalue)</entry>\n-\n     <entry key=\"RDerAttr_derivedSchema_nameIndex\">CREATE INDEX RDerAttr_derivedSchema_naIndex ON RDerAttr(derivedSchema_name)</entry>\n     <entry key=\"RDerAttr_owner_idIndex\">CREATE INDEX RDerAttr_owner_idIndex ON RDerAttr(owner_id)</entry>\n     <entry key=\"RSchemaDerivation_schemas_nameIndex\">CREATE INDEX RSchemaDerivation_schemasIndex ON RSchemaDerivation(schemas_name)</entry>\n@@ -80,21 +59,12 @@\n     <entry key=\"TaskExecution_task_idIndex\">CREATE INDEX TaskExecution_task_idIndeIndex ON TaskExecution(task_id)</entry>\n     <entry key=\"UAttr_schema_nameIndex\">CREATE INDEX UAttr_schema_nameIndex ON UAttr(schema_name)</entry>\n     <entry key=\"UAttr_owner_idIndex\">CREATE INDEX UAttr_owner_idIndex ON UAttr(owner_id)</entry>\n-\n     <entry key=\"UAttrValue_attribute_idIndex\">CREATE INDEX UAttrValue_attribute_idIndex ON UAttrValue(attribute_id)</entry>\n     <entry key=\"UAttrValue_stringvalueIndex\">CREATE INDEX UAttrValue_stringvalueIndex ON UAttrValue(stringvalue)</entry>\n     <entry key=\"UAttrValue_datevalueIndex\">CREATE INDEX UAttrValue_datevalueIndex ON UAttrValue(datevalue)</entry>\n     <entry key=\"UAttrValue_longvalueIndex\">CREATE INDEX UAttrValue_longvalueIndex ON UAttrValue(longvalue)</entry>\n     <entry key=\"UAttrValue_doublevalueIndex\">CREATE INDEX UAttrValue_doublevalueIndex ON UAttrValue(doublevalue)</entry>\n     <entry key=\"UAttrValue_booleanvalueIndex\">CREATE INDEX UAttrValue_booleanvalueIndex ON UAttrValue(booleanvalue)</entry>\n-\n-    <entry key=\"UAttrUValue_attribute_idIndex\">CREATE INDEX UAttrUValue_attribute_idIndex ON UAttrUniqueValue(attribute_id)</entry>\n-    <entry key=\"UAttrUValue_stringvalueIndex\">CREATE INDEX UAttrUValue_stringvalueIndex ON UAttrUniqueValue(stringvalue)</entry>\n-    <entry key=\"UAttrUValue_datevalueIndex\">CREATE INDEX UAttrUValue_datevalueIndex ON UAttrUniqueValue(datevalue)</entry>\n-    <entry key=\"UAttrUValue_longvalueIndex\">CREATE INDEX UAttrUValue_longvalueIndex ON UAttrUniqueValue(longvalue)</entry>\n-    <entry key=\"UAttrUValue_doublevalueIndex\">CREATE INDEX UAttrUValue_doublevalueIndex ON UAttrUniqueValue(doublevalue)</entry>\n-    <entry key=\"UAttrUValue_booleanvalueIndex\">CREATE INDEX UAttrUValue_booleanvaluIndex ON UAttrUniqueValue(booleanvalue)</entry>\n-    \n     <entry key=\"UDerAttr_derivedSchema_nameIndex\">CREATE INDEX UDerAttr_derivedSchema_naIndex ON UDerAttr(derivedSchema_name)</entry>\n     <entry key=\"UDerAttr_owner_idIndex\">CREATE INDEX UDerAttr_owner_idIndex ON UDerAttr(owner_id)</entry>\n     <entry key=\"USchemaDerivation_schemas_nameIndex\">CREATE INDEX USchemaDerivation_schemasIndex ON USchemaDerivation(schemas_name)</entry>"},{"sha":"942ceabd7a6a694b718189c76a942b29534a8997","filename":"core/src/main/resources/taskExecutionWorkflow.xml","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fresources%2FtaskExecutionWorkflow.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fresources%2FtaskExecutionWorkflow.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FtaskExecutionWorkflow.xml?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -0,0 +1,77 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE workflow PUBLIC \"-//OpenSymphony Group//DTD OSWorkflow 2.8//EN\" \"http://www.opensymphony.com/osworkflow/workflow_2_8.dtd\">\n+<!--\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<workflow>\n+    <initial-actions>\n+        <action name=\"start\" id=\"0\">\n+            <results>\n+                <unconditional-result old-status=\"n/a\" status=\"CREATED\" step=\"1\"/>\n+            </results>\n+        </action>\n+    </initial-actions>\n+    <steps>\n+        <step name=\"CREATED\" id=\"1\">\n+            <actions>\n+                <action name=\"ok\" id=\"1001\">\n+                    <results>\n+                        <result old-status=\"CREATED\" status=\"SUCCESS\" step=\"4\">\n+                            <conditions>\n+                                <condition type=\"beanshell\">\n+                                    <arg name=\"script\">transientVars.containsKey(\"SYNC\")</arg>\n+                                </condition>\n+                            </conditions>\n+                        </result>\n+                        <unconditional-result old-status=\"CREATED\" status=\"SUBMITTED\" step=\"2\"/>\n+                    </results>\n+                </action>\n+                <action name=\"ko\" id=\"1002\">\n+                    <results>\n+                        <result old-status=\"CREATED\" status=\"FAILURE\" step=\"5\">\n+                            <conditions>\n+                                <condition type=\"beanshell\">\n+                                    <arg name=\"script\">transientVars.containsKey(\"SYNC\")</arg>\n+                                </condition>\n+                            </conditions>\n+                        </result>\n+                        <unconditional-result old-status=\"CREATED\" status=\"UNSUBMITTED\" step=\"3\"/>\n+                    </results>\n+                </action>\n+            </actions>\n+        </step>\n+\n+        <step name=\"SUBMITTED\" id=\"2\">\n+            <actions>\n+                <action name=\"ok\" id=\"2001\">\n+                    <results>\n+                        <unconditional-result old-status=\"SUBMITTED\" status=\"SUCCESS\" step=\"4\"/>\n+                    </results>\n+                </action>\n+                <action name=\"ko\" id=\"2002\">\n+                    <results>\n+                        <unconditional-result old-status=\"SUBMITTED\" status=\"FAILURE\" step=\"5\"/>\n+                    </results>\n+                </action>\n+            </actions>\n+        </step>\n+\n+        <step name=\"UNSUBMITTED\" id=\"3\"/>\n+\n+        <step name=\"SUCCESS\" id=\"4\"/>\n+\n+        <step name=\"FAILURE\" id=\"5\"/>\n+\n+    </steps>\n+\n+</workflow>"},{"sha":"b9ff3fe77835930a603d74eec6af7564ff7e350e","filename":"core/src/main/resources/userWorkflow.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -31,7 +31,7 @@\n                 </action>\n             </actions>\n         </step>\n-        <step name=\"activatable\" id=\"2\">\n+        <step name=\"doubleOptIn\" id=\"2\">\n             <actions>\n                 <action name=\"activate\" id=\"2001\">\n                     <results>"},{"sha":"fb388293946ab6bfeecb00642047cb72994cceab","filename":"core/src/main/resources/workflowContext.xml","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -64,4 +64,17 @@\n         </property>\n     </bean>\n \n+    <bean id=\"taskExecutionWorkflow\"\n+          class=\"com.opensymphony.workflow.basic.BasicWorkflow\">\n+        <constructor-arg>\n+            <value>taskExecutionWorkflow</value>\n+        </constructor-arg>\n+        <property name=\"configuration\">\n+            <ref local=\"osworkflowConfiguration\"/>\n+        </property>\n+        <property name=\"resolver\">\n+            <ref local=\"workflowTypeResolver\"/>\n+        </property>\n+    </bean>\n+\n </beans>\n\\ No newline at end of file"},{"sha":"8d67ea9dfdc2cb1bc16b08b89fad8422202b5fc6","filename":"core/src/main/resources/workflows.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fresources%2Fworkflows.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Fmain%2Fresources%2Fworkflows.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fworkflows.xml?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -14,4 +14,5 @@\n -->\n <workflows>\n     <workflow name=\"userWorkflow\" type=\"resource\" location=\"userWorkflow.xml\"/>\n+    <workflow name=\"taskExecutionWorkflow\" type=\"resource\" location=\"taskExecutionWorkflow.xml\"/>\n </workflows>"},{"sha":"b360834e171062ec55da427b79fd76fca3b64dd3","filename":"core/src/test/java/org/syncope/core/persistence/AbstractTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FAbstractTest.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -43,7 +43,8 @@\n @RunWith(SpringJUnit4ClassRunner.class)\n @ContextConfiguration(locations = {\n     \"classpath:syncopeContext.xml\",\n-    \"classpath:persistenceContext.xml\"\n+    \"classpath:persistenceContext.xml\",\n+    \"classpath:workflowContext.xml\"\n })\n public abstract class AbstractTest {\n "},{"sha":"72849908f694b0265e66f2e711e3a75e3d3ccf5d","filename":"core/src/test/java/org/syncope/core/persistence/dao/UserSearchTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchTest.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -50,7 +50,8 @@\n @RunWith(SpringJUnit4ClassRunner.class)\n @ContextConfiguration(locations = {\n     \"classpath:syncopeContext.xml\",\n-    \"classpath:persistenceContext.xml\"\n+    \"classpath:persistenceContext.xml\",\n+    \"classpath:workflowContext.xml\"\n })\n @Transactional\n public class UserSearchTest {"},{"sha":"c2f77da94eb68718fbcbb6419529f525309fca05","filename":"core/src/test/java/org/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -39,6 +39,7 @@\n import org.syncope.core.persistence.AbstractTest;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.dao.TaskDAO;\n+import org.syncope.types.PropagationMode;\n import org.syncope.types.SourceMappingType;\n \n @Transactional\n@@ -95,6 +96,7 @@ public final void issue42() {\n         resourceTO.setName(\"resource-issue42\");\n         resourceTO.setConnectorId(100L);\n         resourceTO.setMappings(schemaMappingTOs);\n+        resourceTO.setOptionalPropagationMode(PropagationMode.SYNC);\n         resourceTO.setForceMandatoryConstraint(true);\n \n         TargetResource resource = resourceDataBinder.getResource(resourceTO);"},{"sha":"c2f3624f99df7080bf81056a6504700d36c6338d","filename":"core/src/test/java/org/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -82,13 +82,7 @@ public final void deal() {\n         TaskExecutionTO execution = restTemplate.getForObject(\n                 BASE_URL + \"task/execute/{taskId}\",\n                 TaskExecutionTO.class, 1);\n-        assertEquals(TaskExecutionStatus.CREATED, execution.getStatus());\n-\n-        // To be sure that the execution above has time to start\n-        try {\n-            Thread.sleep(10000);\n-        } catch (InterruptedException e) {\n-        }\n+        assertEquals(TaskExecutionStatus.SUBMITTED, execution.getStatus());\n \n         Exception exception = null;\n         try {"},{"sha":"477c69417b57716e53ce1012954317b007c26333","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -135,7 +135,7 @@ public final void createUserWithNoPropagation() {\n         userTO.addResource(\"ws-target-resource-nopropagation\");\n \n         restTemplate.postForObject(BASE_URL + \"user/create\"\n-                + \"?syncResources=ws-target-resource-nopropagation\",\n+                + \"?mandatoryResources=ws-target-resource-nopropagation\",\n                 userTO, UserTO.class);\n \n         // get the new task list\n@@ -223,7 +223,7 @@ public final void create() {\n \n         // 1. create user\n         UserTO newUserTO = restTemplate.postForObject(\n-                BASE_URL + \"user/create?syncRoles=8\",\n+                BASE_URL + \"user/create?mandatoryRoles=8\",\n                 userTO, UserTO.class);\n \n         assertNotNull(newUserTO);\n@@ -320,7 +320,7 @@ public final void createWithRequiredValueMissing() {\n         try {\n             // 1. create user without type (mandatory by UserSchema)\n             restTemplate.postForObject(\n-                    BASE_URL + \"user/create?syncRoles=8\",\n+                    BASE_URL + \"user/create?mandatoryRoles=8\",\n                     userTO, UserTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             ex = e;\n@@ -346,7 +346,7 @@ public final void createWithRequiredValueMissing() {\n         ex = null;\n         try {\n             restTemplate.postForObject(\n-                    BASE_URL + \"user/create?syncRoles=8\",\n+                    BASE_URL + \"user/create?mandatoryRoles=8\",\n                     userTO, UserTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             ex = e;\n@@ -613,7 +613,7 @@ public final void update() {\n         assertEquals(1, userTO.getMemberships().size());\n         assertEquals(1, userTO.getMemberships().iterator().next().\n                 getAttributes().size());\n-        assertEquals(1, userTO.getDerivedAttributes().size());\n+        assertFalse(userTO.getDerivedAttributes().isEmpty());\n         boolean attributeFound = false;\n         for (AttributeTO attributeTO : userTO.getAttributes()) {\n             if (\"userId\".equals(attributeTO.getSchema())) {"},{"sha":"aff932ee9d2d5860ca0bd77caa2ecf67c81e6533","filename":"core/src/test/resources/content.xml","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -195,13 +195,13 @@\n                        version=\"${project.version}\"\n                        xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_20%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwstarget%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.to.PropertyTO%22%3E+%0A++++%3Cvoid+property%3D%22key%22%3E+%0A+++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n \n-    <TargetResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"1\"/>\n-    <TargetResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\"/>\n-    <TargetResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\"/>\n-    <TargetResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\"/>\n-    <TargetResource name=\"ws-target-resource-delete\" connector_id=\"102\" forceMandatoryConstraint=\"0\"/>\n-    <TargetResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\"/>\n-    <TargetResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\"/>\n+    <TargetResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-delete\" connector_id=\"102\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n+    <TargetResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"/>\n \n     <SyncopeUser_TargetResource users_id=\"3\" targetResources_name=\"ws-target-resource-delete\" />\n     <SyncopeRole_TargetResource roles_id=\"3\" targetResources_name=\"ws-target-resource-list-mappings-1\" />\n@@ -217,7 +217,7 @@\n     <SchemaMapping id=\"100\" destAttrName=\"email\"\n                    resource_name=\"ws-target-resource-1\"\n                    sourceAttrName=\"email\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n-                   accountid=\"1\" password=\"0\"/>\n+                   accountid=\"0\" password=\"0\"/>\n \n     <SchemaMapping id=\"101\" destAttrName=\"username\"\n                    resource_name=\"ws-target-resource-2\"\n@@ -292,7 +292,7 @@\n     <Task id=\"1\" propagationMode=\"ASYNC\" resourceOperationType=\"UPDATE\"\n                  resource_name=\"ws-target-resource-2\"\n                  xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n-    <TaskExecution id=\"1\" task_id=\"1\"/>\n+    <TaskExecution id=\"1\" task_id=\"1\" workflowId=\"0\"/>\n \n     <Entitlement name=\"base\"/>\n     <Entitlement name=\"advanced\" description=\"Advanced entitlement\"/>"},{"sha":"7d2b9b29f550fddc4528454266105b8ae5ef9df8","filename":"identityconnectors/bundles/staticws/ws-target-resource/src/main/java/org/syncope/identityconnectors/bundles/staticwebservice/wstarget/ProvisioningImpl.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -307,6 +307,7 @@ public String create(List<WSAttributeValue> data)\n         schemaNames.add(\"__PASSWORD__\");\n \n         Connection conn = null;\n+        String query = null;\n         try {\n             conn = connect();\n             Statement statement = conn.createStatement();\n@@ -357,19 +358,16 @@ public String create(List<WSAttributeValue> data)\n                 }\n             }\n \n-            String query =\n-                    \"INSERT INTO user (\" + keys.toString() + \")\"\n+            query = \"INSERT INTO user (\" + keys.toString() + \")\"\n                     + \"VALUES (\" + values.toString() + \");\";\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Execute query: \" + query);\n-            }\n+            LOG.debug(\"Execute query: {}\", query);\n \n             statement.executeUpdate(query);\n \n             return accountid;\n-        } catch (SQLException ex) {\n-            LOG.error(\"Creation failed\", ex);\n+        } catch (SQLException e) {\n+            LOG.error(\"Creation failed:\\n\" + query, e);\n             throw new ProvisioningException(\"Create operation failed\");\n         } finally {\n "},{"sha":"050de5d364e74fd96101bb6c523186b4439e3460","filename":"identityconnectors/bundles/staticws/ws-target-resource/src/main/resources/schema.sql","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fresources%2Fschema.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fresources%2Fschema.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fresources%2Fschema.sql?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -11,14 +11,14 @@ name VARCHAR(30),\n surname VARCHAR(35),\n birthdate VARCHAR(30),\n gender VARCHAR(1),\n-taxNumber VARCHAR(16),\n+taxNumber VARCHAR(30),\n state VARCHAR(15),\n studyTitle VARCHAR(30),\n studyArea VARCHAR(30),\n job VARCHAR(30),\n companyType VARCHAR(30),\n companyName VARCHAR(30),\n-vatNumber VARCHAR(11),\n+vatNumber VARCHAR(30),\n mandatoryDisclaimer BOOLEAN,\n promoRCSDisclaimer BOOLEAN,\n promoThirdPartyDisclaimer BOOLEAN,"},{"sha":"8171ae48faa0052ce31d1caab5388e3e64bba605","filename":"pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6d9493daf0796a4f68c2962dc15ddacc0c22fd45/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=6d9493daf0796a4f68c2962dc15ddacc0c22fd45","patch":"@@ -104,6 +104,7 @@\n         <osworkflow.version>2.8.0</osworkflow.version>\n         <propertyset.version>1.3</propertyset.version>\n         <oscore.version>2.2.6</oscore.version>\n+        <bsh.version>2.0b4</bsh.version>\n \n         <org.springframework.version>3.0.5.RELEASE</org.springframework.version>\n         <cglib.version>2.2</cglib.version>\n@@ -199,6 +200,11 @@\n                 <artifactId>oscore</artifactId>\n                 <version>${oscore.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>org.beanshell</groupId>\n+                <artifactId>bsh</artifactId>\n+                <version>${bsh.version}</version>\n+            </dependency>\n \n             <dependency>\n                 <groupId>org.hibernate</groupId>"}]}