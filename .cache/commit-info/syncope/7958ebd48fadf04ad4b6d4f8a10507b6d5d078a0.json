{"sha":"7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc5NThlYmQ0OGZhZGYwNGFkNGI2ZDRmOGExMDUwN2I2ZDVkMDc4YTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-02-13T16:15:41Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-02-13T16:23:40Z"},"message":"[SYNCOPE-1262] Last matrix parameter still there","tree":{"sha":"f16fe1443d84a2fad0c5b2055593e7a87bcdca40","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f16fe1443d84a2fad0c5b2055593e7a87bcdca40"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"eb1cd3ff22d099c3c4978f56d104433f5bc23f31","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb1cd3ff22d099c3c4978f56d104433f5bc23f31","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eb1cd3ff22d099c3c4978f56d104433f5bc23f31"}],"stats":{"total":83,"additions":51,"deletions":32},"files":[{"sha":"6b32959e0538a8178da3a0ba350c14461eb20dda","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesDirectoryPanel.java?ref=7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0","patch":"@@ -115,7 +115,7 @@ public ActionsPanel<CamelRouteTO> getActions(final IModel<CamelRouteTO> model) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n-                final CamelRouteTO route = restClient.read(model.getObject().getKey());\n+                final CamelRouteTO route = restClient.read(anyTypeKind, model.getObject().getKey());\n \n                 utilityModal.header(Model.of(route.getKey()));\n                 utilityModal.setContent(new XMLEditorPanel(\n@@ -126,7 +126,7 @@ public void onClick(final AjaxRequestTarget target, final CamelRouteTO ignore) {\n                     @Override\n                     public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                         try {\n-                            restClient.update(route);\n+                            restClient.update(anyTypeKind, route);\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                             modal.close(target);\n                         } catch (Exception e) {"},{"sha":"aac549874b0c518c590550d3587cef46e075237e","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/rest/CamelRoutesRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java?ref=7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0","patch":"@@ -36,12 +36,12 @@ public List<CamelRouteTO> list(final AnyTypeKind anyTypeKind) {\n                 : Collections.<CamelRouteTO>emptyList();\n     }\n \n-    public CamelRouteTO read(final String key) {\n-        return getService(CamelRouteService.class).read(key);\n+    public CamelRouteTO read(final AnyTypeKind anyTypeKind, final String key) {\n+        return getService(CamelRouteService.class).read(anyTypeKind, key);\n     }\n \n-    public void update(final CamelRouteTO routeTO) {\n-        getService(CamelRouteService.class).update(routeTO);\n+    public void update(final AnyTypeKind anyTypeKind, final CamelRouteTO routeTO) {\n+        getService(CamelRouteService.class).update(anyTypeKind, routeTO);\n     }\n \n     public boolean isCamelEnabledFor(final AnyTypeKind anyTypeKind) {"},{"sha":"bb3d20bb2512eee8b8ee883e744202978c7b4e60","filename":"ext/camel/logic/src/main/java/org/apache/syncope/core/logic/CamelRouteLogic.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FCamelRouteLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FCamelRouteLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FCamelRouteLogic.java?ref=7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0","patch":"@@ -27,10 +27,12 @@\n import org.apache.camel.component.metrics.routepolicy.MetricsRegistryService;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.CamelMetrics;\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.CamelEntitlement;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.core.persistence.api.dao.CamelRouteDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.entity.CamelRoute;\n@@ -67,21 +69,34 @@ public List<CamelRouteTO> list(final AnyTypeKind anyTypeKind) {\n \n     @PreAuthorize(\"hasRole('\" + CamelEntitlement.ROUTE_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public CamelRouteTO read(final String key) {\n+    public CamelRouteTO read(final AnyTypeKind anyTypeKind, final String key) {\n         CamelRoute route = routeDAO.find(key);\n         if (route == null) {\n             throw new NotFoundException(\"CamelRoute with key=\" + key);\n         }\n \n+        if (route.getAnyTypeKind() != anyTypeKind) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRequest);\n+            sce.getElements().add(\"Found \" + anyTypeKind + \", expected \" + route.getAnyTypeKind());\n+            throw sce;\n+        }\n+\n         return binder.getRouteTO(route);\n     }\n \n     @PreAuthorize(\"hasRole('\" + CamelEntitlement.ROUTE_UPDATE + \"')\")\n-    public void update(final CamelRouteTO routeTO) {\n+    public void update(final AnyTypeKind anyTypeKind, final CamelRouteTO routeTO) {\n         CamelRoute route = routeDAO.find(routeTO.getKey());\n         if (route == null) {\n             throw new NotFoundException(\"CamelRoute with key=\" + routeTO.getKey());\n         }\n+\n+        if (route.getAnyTypeKind() != anyTypeKind) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRequest);\n+            sce.getElements().add(\"Found \" + anyTypeKind + \", expected \" + route.getAnyTypeKind());\n+            throw sce;\n+        }\n+\n         String originalContent = route.getContent();\n \n         LOG.debug(\"Updating route {} with content {}\", routeTO.getKey(), routeTO.getContent());"},{"sha":"9dd5bca147534d3acce99dc9d3824a2edc72ad74","filename":"ext/camel/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/CamelRouteService.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java?ref=7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0","patch":"@@ -25,7 +25,6 @@\n import javax.validation.constraints.NotNull;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.GET;\n-import javax.ws.rs.MatrixParam;\n import javax.ws.rs.POST;\n import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n@@ -54,31 +53,36 @@ public interface CamelRouteService extends JAXRSService {\n      * @return all routes for the given any type kind\n      */\n     @GET\n+    @Path(\"{anyTypeKind}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    List<CamelRouteTO> list(@NotNull @MatrixParam(\"anyTypeKind\") AnyTypeKind anyTypeKind);\n+    List<CamelRouteTO> list(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind);\n \n     /**\n      * Read the route with the given key.\n      *\n+     * @param anyTypeKind any type kind\n      * @param key route key\n      * @return route with given key\n      */\n     @GET\n-    @Path(\"{key}\")\n+    @Path(\"{anyTypeKind}/{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    CamelRouteTO read(@NotNull @PathParam(\"key\") String key);\n+    CamelRouteTO read(\n+            @NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind,\n+            @NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Update the given route.\n      *\n+     * @param anyTypeKind any type kind\n      * @param route to be updated\n      * @return an empty response if operation was successful\n      */\n     @PUT\n-    @Path(\"{key}\")\n+    @Path(\"{anyTypeKind}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull CamelRouteTO route);\n+    Response update(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind, @NotNull CamelRouteTO route);\n \n     /**\n      * Restart the underlying Apache Camel context."},{"sha":"eb1db19daced57c091d9410a36a3564ac77462f1","filename":"ext/camel/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/CamelRouteServiceImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java?ref=7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0","patch":"@@ -40,13 +40,13 @@ public List<CamelRouteTO> list(final AnyTypeKind anyTypeKind) {\n     }\n \n     @Override\n-    public CamelRouteTO read(final String key) {\n-        return logic.read(key);\n+    public CamelRouteTO read(final AnyTypeKind anyTypeKind, final String key) {\n+        return logic.read(anyTypeKind, key);\n     }\n \n     @Override\n-    public Response update(final CamelRouteTO route) {\n-        logic.update(route);\n+    public Response update(final AnyTypeKind anyTypeKind, final CamelRouteTO route) {\n+        logic.update(anyTypeKind, route);\n         return Response.noContent().build();\n     }\n "},{"sha":"9316ad2e62b10d04dccd14fd07eb51995b89e322","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/CamelRouteITCase.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java?ref=7958ebd48fadf04ad4b6d4f8a10507b6d5d078a0","patch":"@@ -59,19 +59,19 @@ public void groupRoutes() {\n         groupRoutes.forEach(route -> assertNotNull(route.getContent()));\n     }\n \n-    private CamelRouteTO doUpdate(final String key, final String content) {\n-        CamelRouteTO route = camelRouteService.read(key);\n+    private CamelRouteTO doUpdate(final AnyTypeKind anyTypeKind, final String key, final String content) {\n+        CamelRouteTO route = camelRouteService.read(anyTypeKind, key);\n         route.setContent(content);\n-        camelRouteService.update(route);\n+        camelRouteService.update(anyTypeKind, route);\n         // getting new route definition\n-        return camelRouteService.read(key);\n+        return camelRouteService.read(anyTypeKind, key);\n     }\n \n     @Test\n     public void update() {\n         assumeTrue(CamelDetector.isCamelEnabledForUsers(syncopeService));\n \n-        CamelRouteTO oldRoute = camelRouteService.read(\"createUser\");\n+        CamelRouteTO oldRoute = camelRouteService.read(AnyTypeKind.USER, \"createUser\");\n         assertNotNull(oldRoute);\n         String routeContent = \"<route id=\\\"createUser\\\">\\n\"\n                 + \"  <from uri=\\\"direct:createUser\\\"/>\\n\"\n@@ -94,18 +94,18 @@ public void update() {\n                 + \"  </doTry>\\n\"\n                 + \"</route>\";\n         try {\n-            CamelRouteTO route = doUpdate(\"createUser\", routeContent);\n+            CamelRouteTO route = doUpdate(AnyTypeKind.USER, \"createUser\", routeContent);\n             assertEquals(routeContent, route.getContent());\n         } finally {\n-            doUpdate(oldRoute.getKey(), oldRoute.getContent());\n+            doUpdate(AnyTypeKind.USER, oldRoute.getKey(), oldRoute.getContent());\n         }\n     }\n \n     @Test\n     public void scriptingUpdate() {\n         assumeTrue(CamelDetector.isCamelEnabledForUsers(syncopeService));\n \n-        CamelRouteTO oldRoute = camelRouteService.read(\"createUser\");\n+        CamelRouteTO oldRoute = camelRouteService.read(AnyTypeKind.USER, \"createUser\");\n         // updating route content including new attribute management\n \n         String routeContent = \"\"\n@@ -135,7 +135,7 @@ public void scriptingUpdate() {\n                 + \"    </doTry>\\n\"\n                 + \"  </route> \";\n         try {\n-            doUpdate(\"createUser\", routeContent);\n+            doUpdate(AnyTypeKind.USER, \"createUser\", routeContent);\n \n             // creating new schema attribute for user\n             PlainSchemaTO schemaTO = new PlainSchemaTO();\n@@ -163,15 +163,15 @@ public void scriptingUpdate() {\n             assertNotNull(userTO);\n             assertEquals(\"true\", userTO.getPlainAttr(\"camelAttribute\").get().getValues().get(0));\n         } finally {\n-            doUpdate(oldRoute.getKey(), oldRoute.getContent());\n+            doUpdate(AnyTypeKind.USER, oldRoute.getKey(), oldRoute.getContent());\n         }\n     }\n \n     @Test\n     public void issueSYNCOPE931() {\n         assumeTrue(CamelDetector.isCamelEnabledForUsers(syncopeService));\n \n-        CamelRouteTO oldRoute = camelRouteService.read(\"createUser\");\n+        CamelRouteTO oldRoute = camelRouteService.read(AnyTypeKind.USER, \"createUser\");\n         assertNotNull(oldRoute);\n         String routeContent = \"<route id=\\\"createUser\\\">\\n\"\n                 + \"  <from uri=\\\"direct:createUser\\\"/>\\n\"\n@@ -196,7 +196,7 @@ public void issueSYNCOPE931() {\n \n         // Try to update a route with an incorrect propagation type\n         try {\n-            doUpdate(\"createUser\", routeContent);\n+            doUpdate(AnyTypeKind.USER, \"createUser\", routeContent);\n             fail(\"Error expected on an incorrect propagation type\");\n         } catch (Exception ex) {\n             // Expected\n@@ -205,10 +205,10 @@ public void issueSYNCOPE931() {\n         // Now update the route again with the correct propagation type\n         routeContent = routeContent.replaceFirst(\"create123\", \"create\");\n         try {\n-            CamelRouteTO route = doUpdate(\"createUser\", routeContent);\n+            CamelRouteTO route = doUpdate(AnyTypeKind.USER, \"createUser\", routeContent);\n             assertEquals(routeContent, route.getContent());\n         } finally {\n-            doUpdate(oldRoute.getKey(), oldRoute.getContent());\n+            doUpdate(AnyTypeKind.USER, oldRoute.getKey(), oldRoute.getContent());\n         }\n     }\n "}]}