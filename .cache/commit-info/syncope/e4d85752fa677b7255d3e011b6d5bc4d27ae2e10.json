{"sha":"e4d85752fa677b7255d3e011b6d5bc4d27ae2e10","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU0ZDg1NzUyZmE2NzdiNzI1NWQzZTAxMWI2ZDViYzRkMjdhZTJlMTA=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-04-16T15:10:59Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-04-16T15:10:59Z"},"message":"Change the verifyPassword method of the UserController to take a username instead of userId\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1326644 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5f4e210ed936ad445abf46d6f639f56ae0e257ea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5f4e210ed936ad445abf46d6f639f56ae0e257ea"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8d2caa63b96d444f6d76ffba8a911ab0ba40fdf1"}],"stats":{"total":28,"additions":14,"deletions":14},"files":[{"sha":"91c099d31e2856f712e3982d6277fd9b62ce8f4b","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=e4d85752fa677b7255d3e011b6d5bc4d27ae2e10","patch":"@@ -109,15 +109,15 @@ public class UserController {\n     private ConnObjectUtil connObjectUtil;\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n-    @RequestMapping(method = RequestMethod.GET, value = \"/verifyPassword/{userId}\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/verifyPassword/{username}\")\n     @Transactional(readOnly = true)\n-    public ModelAndView verifyPassword(@PathVariable(\"userId\") Long userId,\n+    public ModelAndView verifyPassword(@PathVariable(\"username\") String username,\n             @RequestParam(\"password\") final String password) throws NotFoundException, UnauthorizedRoleException {\n \n         auditManager.audit(Category.user, UserSubCategory.create, Result.success,\n-                \"Verified password for: \" + userId);\n+                \"Verified password for: \" + username);\n \n-        return new ModelAndView().addObject(userDataBinder.verifyPassword(userId, password));\n+        return new ModelAndView().addObject(userDataBinder.verifyPassword(username, password));\n     }\n \n     @PreAuthorize(\"hasRole('USER_LIST')\")"},{"sha":"902e52d28c78996459809b63a90bc264313cc4ea","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=e4d85752fa677b7255d3e011b6d5bc4d27ae2e10","patch":"@@ -92,10 +92,10 @@ public SyncopeUser getUserFromId(final Long userId)\n     }\n \n     @Transactional(readOnly = true)\n-    public boolean verifyPassword(final Long userId, final String password)\n+    public boolean verifyPassword(final String username, final String password)\n             throws NotFoundException, UnauthorizedRoleException {\n \n-        SyncopeUser user = getUserFromId(userId);\n+        SyncopeUser user = getUserFromUsername(username);\n \n         SyncopeUser passwordUser = new SyncopeUser();\n         passwordUser.setPassword(password, user.getCipherAlgoritm(), 0);"},{"sha":"2728b3a7e55297ff62f1ab92f7aa1f43d6e2c0f8","filename":"core/src/test/java/org/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=e4d85752fa677b7255d3e011b6d5bc4d27ae2e10","patch":"@@ -159,17 +159,17 @@ public void update() {\n         super.setupRestTemplate();\n \n         // 7. user password has not changed yet\n-        Boolean verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{userId}?password=\"\n-                + userMod.getPassword(), Boolean.class, userTO.getId());\n+        Boolean verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{username}.json?password=\"\n+                + userMod.getPassword(), Boolean.class, userTO.getUsername());\n         assertFalse(verify);\n \n         // 8. actually update user\n         userTO = restTemplate.postForObject(BASE_URL + \"user/update\", userMod, UserTO.class);\n         assertNotNull(userTO);\n \n         // 9. user password has now changed\n-        verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{userId}?password=\" + userMod.getPassword(),\n-                Boolean.class, userTO.getId());\n+        verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{username}.json?password=\" + userMod.getPassword(),\n+                Boolean.class, userTO.getUsername());\n         assertTrue(verify);\n     }\n "},{"sha":"a2412c3b41fc7fff6f1b23bc9b01bd0e32bc39a5","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e4d85752fa677b7255d3e011b6d5bc4d27ae2e10/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=e4d85752fa677b7255d3e011b6d5bc4d27ae2e10","patch":"@@ -522,12 +522,12 @@ public void create() {\n         assertEquals(maxTaskExecutions, taskTO.getExecutions().size());\n \n         // 3. verify password\n-        Boolean verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{userId}?password=password123\",\n-                Boolean.class, newUserTO.getId());\n+        Boolean verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{username}.json?password=password123\",\n+                Boolean.class, newUserTO.getUsername());\n         assertTrue(verify);\n \n-        verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{userId}?password=passwordXX\",\n-                Boolean.class, newUserTO.getId());\n+        verify = restTemplate.getForObject(BASE_URL + \"user/verifyPassword/{username}.json?password=passwordXX\",\n+                Boolean.class, newUserTO.getUsername());\n         assertFalse(verify);\n \n         // 4. try (and fail) to create another user with same (unique) values"}]}