{"sha":"b0b658b81cf49e77cdf7779bd0ef94df989e0650","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIwYjY1OGI4MWNmNDllNzdjZGY3Nzc5YmQwZWY5NGRmOTg5ZTA2NTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-11-24T07:07:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-11-24T07:07:24Z"},"message":"[SYNCOPE-1395] Renaming in preparation of supporting other DBMSes","tree":{"sha":"3b1659971a6a443af3a1043a04129df1eecf36bc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3b1659971a6a443af3a1043a04129df1eecf36bc"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b0b658b81cf49e77cdf7779bd0ef94df989e0650","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b0b658b81cf49e77cdf7779bd0ef94df989e0650","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b0b658b81cf49e77cdf7779bd0ef94df989e0650","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b0b658b81cf49e77cdf7779bd0ef94df989e0650/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ef300e1289e66cc3bde726819a21f9686b1fcafa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ef300e1289e66cc3bde726819a21f9686b1fcafa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ef300e1289e66cc3bde726819a21f9686b1fcafa"}],"stats":{"total":962,"additions":403,"deletions":559},"files":[{"sha":"e8e1e9a3ce72fc24f514750f2c9d27ba364d1e92","filename":"core/persistence-jpa-json/pom.xml","status":"renamed","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fpom.xml?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -27,10 +27,10 @@ under the License.\n     <version>3.0.0-SNAPSHOT</version>\n   </parent>\n \n-  <name>Apache Syncope Core Persistence JPA PostgreSQL jsonb</name>\n-  <description>Apache Syncope Core Persistence JPA PostgreSQL jsonb</description>\n+  <name>Apache Syncope Core Persistence JPA JSON</name>\n+  <description>Apache Syncope Core Persistence JPA JSON</description>\n   <groupId>org.apache.syncope.core</groupId>\n-  <artifactId>syncope-core-persistence-jpa-pgjsonb</artifactId>\n+  <artifactId>syncope-core-persistence-jpa-json</artifactId>\n   <packaging>jar</packaging>\n   \n   <properties>\n@@ -129,7 +129,7 @@ under the License.\n \n   <profiles>\n     <profile>\n-      <id>ut</id>\n+      <id>postgres</id>\n       \n       <dependencies>\n         <dependency>\n@@ -226,10 +226,18 @@ under the License.\n             <directory>src/test/resources</directory>\n             <filtering>true</filtering>\n           </testResource>\n+          <testResource>\n+            <directory>src/test/resources/pgjsonb</directory>\n+            <filtering>true</filtering>\n+          </testResource>\n           <testResource>\n             <directory>src/main/resources</directory>\n             <filtering>true</filtering>\n           </testResource>\n+          <testResource>\n+            <directory>src/main/resources/pgjsonb</directory>\n+            <filtering>true</filtering>\n+          </testResource>\n         </testResources>\n       </build>\n     </profile>","previous_filename":"core/persistence-jpa-pgjsonb/pom.xml"},{"sha":"9794cc8cd80072b7c95ab7a30b22323bf61afaa5","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/api/dao/JPAJSONAnyDAO.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FJPAJSONAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FJPAJSONAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FJPAJSONAnyDAO.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n \n-public interface PGAnyDAO {\n+public interface JPAJSONAnyDAO {\n \n     <A extends Any<?>> List<A> findByDerAttrValue(\n             String table, AnyUtils anyUtils, String schemaKey, String value, boolean ignoreCaseMatch);","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/api/dao/PGAnyDAO.java"},{"sha":"1571566af048cd44d64788135f25006642755334","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/api/entity/JSONAny.java","status":"renamed","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FJSONAny.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FJSONAny.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FJSONAny.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -16,18 +16,17 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.api.entity;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.entity.Any;\n \n-public interface PGJPAAny<A extends Any<?>> {\n+public interface JSONAny<A extends Any<?>> {\n \n     String getPlainAttrsJSON();\n \n     void setPlainAttrsJSON(String plainAttrs);\n \n-    boolean add(PGPlainAttr<A> attr);\n+    boolean add(JSONPlainAttr<A> attr);\n \n-    List<? extends PGPlainAttr<A>> getPlainAttrList();\n+    List<? extends JSONPlainAttr<A>> getPlainAttrList();\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/PGJPAAny.java"},{"sha":"78f750347062c3dc4d184b4ac46b6253b8526682","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/api/entity/JSONPlainAttr.java","status":"renamed","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FJSONPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FJSONPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FJSONPlainAttr.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -16,13 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.entity;\n+package org.apache.syncope.core.persistence.api.entity;\n \n-import org.apache.syncope.core.persistence.api.entity.Any;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n-\n-public interface PGPlainAttr<A extends Any<?>> extends PlainAttr<A> {\n+public interface JSONPlainAttr<A extends Any<?>> extends PlainAttr<A> {\n \n     String getSchemaKey();\n ","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/PGPlainAttr.java"},{"sha":"3e07af39b84465020faf05f34b70ae4defbe0a88","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAJSONAnyObjectDAO.java","status":"renamed","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONAnyObjectDAO.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -19,19 +19,19 @@\n package org.apache.syncope.core.persistence.jpa.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.dao.PGAnyDAO;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.jpa.entity.anyobject.PGJPAAnyObject;\n+import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAnyObject;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.dao.JPAJSONAnyDAO;\n \n-public class PGJPAAnyObjectDAO extends JPAAnyObjectDAO {\n+public class JPAJSONAnyObjectDAO extends JPAAnyObjectDAO {\n \n-    private PGAnyDAO anyDAO;\n+    private JPAJSONAnyDAO anyDAO;\n \n-    private PGAnyDAO anyDAO() {\n+    private JPAJSONAnyDAO anyDAO() {\n         if (anyDAO == null) {\n-            anyDAO = ApplicationContextProvider.getApplicationContext().getBean(PGAnyDAO.class);\n+            anyDAO = ApplicationContextProvider.getApplicationContext().getBean(JPAJSONAnyDAO.class);\n         }\n         return anyDAO;\n     }\n@@ -43,7 +43,7 @@ public List<AnyObject> findByPlainAttrValue(\n             final PlainAttrValue attrValue,\n             final boolean ignoreCaseMatch) {\n \n-        return anyDAO().findByPlainAttrValue(PGJPAAnyObject.TABLE, anyUtils(), schemaKey, attrValue, ignoreCaseMatch);\n+        return anyDAO().findByPlainAttrValue(JPAJSONAnyObject.TABLE, anyUtils(), schemaKey, attrValue, ignoreCaseMatch);\n     }\n \n     @Override\n@@ -52,7 +52,7 @@ public AnyObject findByPlainAttrUniqueValue(\n             final PlainAttrValue attrUniqueValue,\n             final boolean ignoreCaseMatch) {\n \n-        return anyDAO().findByPlainAttrUniqueValue(PGJPAAnyObject.TABLE, anyUtils(),\n+        return anyDAO().findByPlainAttrUniqueValue(JPAJSONAnyObject.TABLE, anyUtils(),\n                 schemaKey, attrUniqueValue, ignoreCaseMatch);\n     }\n \n@@ -63,12 +63,12 @@ public List<AnyObject> findByDerAttrValue(\n             final String value,\n             final boolean ignoreCaseMatch) {\n \n-        return anyDAO().findByDerAttrValue(PGJPAAnyObject.TABLE, anyUtils(), schemaKey, value, ignoreCaseMatch);\n+        return anyDAO().findByDerAttrValue(JPAJSONAnyObject.TABLE, anyUtils(), schemaKey, value, ignoreCaseMatch);\n     }\n \n     @Override\n     public AnyObject save(final AnyObject anyObject) {\n-        anyDAO().checkBeforeSave(PGJPAAnyObject.TABLE, anyUtils(), anyObject);\n+        anyDAO().checkBeforeSave(JPAJSONAnyObject.TABLE, anyUtils(), anyObject);\n         return super.save(anyObject);\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAAnyObjectDAO.java"},{"sha":"52ad5da82db10a50e2fc254c1416bbc5fcca9c20","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAJSONConfDAO.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONConfDAO.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n \n-public class PGJPAConfDAO extends JPAConfDAO {\n+public class JPAJSONConfDAO extends JPAConfDAO {\n \n     /**\n      * Marks the {@code plainAttrs} field as dirty, to force OpenJPA generating an update statement on the","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAConfDAO.java"},{"sha":"f6223ec22a1afb7374a29e87fe366984ead81908","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAJSONGroupDAO.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONGroupDAO.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -19,19 +19,19 @@\n package org.apache.syncope.core.persistence.jpa.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.dao.PGAnyDAO;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPAGroup;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.dao.JPAJSONAnyDAO;\n \n-public class PGJPAGroupDAO extends JPAGroupDAO {\n+public class JPAJSONGroupDAO extends JPAGroupDAO {\n \n-    private PGAnyDAO anyDAO;\n+    private JPAJSONAnyDAO anyDAO;\n \n-    private PGAnyDAO anyDAO() {\n+    private JPAJSONAnyDAO anyDAO() {\n         if (anyDAO == null) {\n-            anyDAO = ApplicationContextProvider.getApplicationContext().getBean(PGAnyDAO.class);\n+            anyDAO = ApplicationContextProvider.getApplicationContext().getBean(JPAJSONAnyDAO.class);\n         }\n         return anyDAO;\n     }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAGroupDAO.java"},{"sha":"55d13a8ca22cbae16ca7e44c7549f9dd1b3b63eb","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAJSONPlainAttrDAO.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONPlainAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONPlainAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONPlainAttrDAO.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -22,7 +22,7 @@\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n \n-public class PGJPAPlainAttrDAO extends AbstractDAO<PlainAttr<?>> implements PlainAttrDAO {\n+public class JPAJSONPlainAttrDAO extends AbstractDAO<PlainAttr<?>> implements PlainAttrDAO {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAPlainAttrDAO.java"},{"sha":"297614827c8d5b0054c2a98855d04fb4e6d2fed1","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAJSONPlainAttrValueDAO.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONPlainAttrValueDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONPlainAttrValueDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONPlainAttrValueDAO.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n \n-public class PGJPAPlainAttrValueDAO extends AbstractDAO<PlainAttrValue> implements PlainAttrValueDAO {\n+public class JPAJSONPlainAttrValueDAO extends AbstractDAO<PlainAttrValue> implements PlainAttrValueDAO {\n \n     @Override\n     public void deleteAll(final PlainAttr<?> attr, final AnyUtils anyUtils) {","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAPlainAttrValueDAO.java"},{"sha":"63349ba0a22ef75381a54dd03162e35305cf4869","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAJSONPlainSchemaDAO.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONPlainSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONPlainSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONPlainSchemaDAO.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n \n-public class PGJPAPlainSchemaDAO extends JPAPlainSchemaDAO {\n+public class JPAJSONPlainSchemaDAO extends JPAPlainSchemaDAO {\n \n     @Override\n     public <T extends PlainAttr<?>> List<T> findAttrs(final PlainSchema schema, final Class<T> reference) {","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAPlainSchemaDAO.java"},{"sha":"62d804c0a39a92629049e8759d45b4b3e1806b1f","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAJSONUserDAO.java","status":"renamed","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAJSONUserDAO.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -21,19 +21,19 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.core.persistence.api.dao.PGAnyDAO;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.apache.syncope.core.persistence.jpa.entity.user.PGJPAUser;\n+import org.apache.syncope.core.persistence.jpa.entity.user.JPAJSONUser;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.dao.JPAJSONAnyDAO;\n \n-public class PGJPAUserDAO extends JPAUserDAO {\n+public class JPAJSONUserDAO extends JPAUserDAO {\n \n-    private PGAnyDAO anyDAO;\n+    private JPAJSONAnyDAO anyDAO;\n \n-    private PGAnyDAO anyDAO() {\n+    private JPAJSONAnyDAO anyDAO() {\n         if (anyDAO == null) {\n-            anyDAO = ApplicationContextProvider.getApplicationContext().getBean(PGAnyDAO.class);\n+            anyDAO = ApplicationContextProvider.getApplicationContext().getBean(JPAJSONAnyDAO.class);\n         }\n         return anyDAO;\n     }\n@@ -45,7 +45,7 @@ public List<User> findByPlainAttrValue(\n             final PlainAttrValue attrValue,\n             final boolean ignoreCaseMatch) {\n \n-        return anyDAO().findByPlainAttrValue(PGJPAUser.TABLE, anyUtils(), schemaKey, attrValue, ignoreCaseMatch);\n+        return anyDAO().findByPlainAttrValue(JPAJSONUser.TABLE, anyUtils(), schemaKey, attrValue, ignoreCaseMatch);\n     }\n \n     @Override\n@@ -54,7 +54,7 @@ public User findByPlainAttrUniqueValue(\n             final PlainAttrValue attrUniqueValue,\n             final boolean ignoreCaseMatch) {\n \n-        return anyDAO().findByPlainAttrUniqueValue(PGJPAUser.TABLE, anyUtils(),\n+        return anyDAO().findByPlainAttrUniqueValue(JPAJSONUser.TABLE, anyUtils(),\n                 schemaKey, attrUniqueValue, ignoreCaseMatch);\n     }\n \n@@ -65,18 +65,18 @@ public List<User> findByDerAttrValue(\n             final String value,\n             final boolean ignoreCaseMatch) {\n \n-        return anyDAO().findByDerAttrValue(PGJPAUser.TABLE, anyUtils(), schemaKey, value, ignoreCaseMatch);\n+        return anyDAO().findByDerAttrValue(JPAJSONUser.TABLE, anyUtils(), schemaKey, value, ignoreCaseMatch);\n     }\n \n     @Override\n     public User save(final User user) {\n-        anyDAO().checkBeforeSave(PGJPAUser.TABLE, anyUtils(), user);\n+        anyDAO().checkBeforeSave(JPAJSONUser.TABLE, anyUtils(), user);\n         return super.save(user);\n     }\n \n     @Override\n     public Pair<Set<String>, Set<String>> saveAndGetDynGroupMembs(final User user) {\n-        anyDAO().checkBeforeSave(PGJPAUser.TABLE, anyUtils(), user);\n+        anyDAO().checkBeforeSave(JPAJSONUser.TABLE, anyUtils(), user);\n         return super.saveAndGetDynGroupMembs(user);\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAUserDAO.java"},{"sha":"94bb72a017e1b1ae30dcd0745fd47ad20af84e64","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnyDAO.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnyDAO.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -35,7 +35,6 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.DuplicateException;\n-import org.apache.syncope.core.persistence.api.dao.PGAnyDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n@@ -45,15 +44,16 @@\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractEntity;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n+import org.apache.syncope.core.persistence.api.dao.JPAJSONAnyDAO;\n \n @Repository\n-public class PGJPAAnyDAO extends AbstractDAO<AbstractEntity> implements PGAnyDAO {\n+public class PGJPAJSONAnyDAO extends AbstractDAO<AbstractEntity> implements JPAJSONAnyDAO {\n \n     @Autowired\n     private PlainSchemaDAO plainSchemaDAO;\n@@ -118,7 +118,7 @@ private String attrValueMatch(\n             if (attrValue instanceof PlainAttrUniqueValue) {\n                 container.setUniqueValue((PlainAttrUniqueValue) attrValue);\n             } else {\n-                ((PGPlainAttr) container).add(attrValue);\n+                ((JSONPlainAttr) container).add(attrValue);\n             }\n             return \"plainAttrs @> '\" + POJOHelper.serialize(Arrays.asList(container)) + \"'::jsonb\";\n         }\n@@ -333,7 +333,7 @@ public <A extends Any<?>> void checkBeforeSave(final String table, final AnyUtil\n         // check UNIQUE constraints\n         any.getPlainAttrs().stream().\n                 filter(attr -> attr.getUniqueValue() != null).\n-                map(PGPlainAttr.class::cast).\n+                map(JSONPlainAttr.class::cast).\n                 forEach(attr -> {\n                     String schemaKey = attr.getSchemaKey();\n                     List<A> others = findByPlainAttrValue(table, anyUtils, schemaKey, attr.getUniqueValue(), false);","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAAnyDAO.java"},{"sha":"f24070518ec22e10fa0d0aa4b44a19948ab134fa","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnySearchDAO.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -29,10 +29,10 @@\n import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n \n-public class PGJPAAnySearchDAO extends JPAAnySearchDAO {\n+public class PGJPAJSONAnySearchDAO extends JPAAnySearchDAO {\n \n     @Override\n     SearchSupport buildSearchSupport(final AnyTypeKind kind) {\n@@ -110,7 +110,7 @@ private void fillAttrQuery(\n             if (attrValue instanceof PlainAttrUniqueValue) {\n                 container.setUniqueValue((PlainAttrUniqueValue) attrValue);\n             } else {\n-                ((PGPlainAttr) container).add(attrValue);\n+                ((JSONPlainAttr) container).add(attrValue);\n             }\n \n             query.append(\"plainAttrs @> '\").","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAAnySearchDAO.java"},{"sha":"bcd046d2af8b16768a838d73205b8d6a29343a63","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAJSONEntityFactory.java","status":"renamed","additions":58,"deletions":45,"changes":103,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityFactory.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n-import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n+import org.apache.syncope.core.persistence.api.dao.JPAJSONAnyDAO;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttr;\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttrUniqueValue;\n@@ -36,68 +36,74 @@\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.apache.syncope.core.persistence.jpa.dao.PGJPAAnySearchDAO;\n-import org.apache.syncope.core.persistence.jpa.entity.anyobject.PGAPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.anyobject.PGAPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.jpa.entity.anyobject.PGAPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.entity.anyobject.PGJPAAnyObject;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.PGCPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.PGCPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.PGCPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.entity.conf.PGJPAConf;\n-import org.apache.syncope.core.persistence.jpa.entity.group.PGGPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.group.PGGPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.jpa.entity.group.PGGPlainAttrValue;\n-import org.apache.syncope.core.persistence.jpa.entity.group.PGJPAGroup;\n-import org.apache.syncope.core.persistence.jpa.entity.user.PGJPAUser;\n-import org.apache.syncope.core.persistence.jpa.entity.user.PGUPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.user.PGUPlainAttrUniqueValue;\n-import org.apache.syncope.core.persistence.jpa.entity.user.PGUPlainAttrValue;\n+import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAPlainAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAPlainAttrUniqueValue;\n+import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAPlainAttrValue;\n+import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAnyObject;\n+import org.apache.syncope.core.persistence.jpa.entity.conf.JPAJSONCPlainAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.conf.JPAJSONCPlainAttrUniqueValue;\n+import org.apache.syncope.core.persistence.jpa.entity.conf.JPAJSONCPlainAttrValue;\n+import org.apache.syncope.core.persistence.jpa.entity.conf.JPAJSONConf;\n+import org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGPlainAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGPlainAttrUniqueValue;\n+import org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGPlainAttrValue;\n+import org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGroup;\n+import org.apache.syncope.core.persistence.jpa.entity.user.JPAJSONUser;\n+import org.apache.syncope.core.persistence.jpa.entity.user.JPAJSONUPlainAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.user.JPAJSONUPlainAttrUniqueValue;\n+import org.apache.syncope.core.persistence.jpa.entity.user.JPAJSONUPlainAttrValue;\n import org.apache.syncope.core.spring.security.SecureRandomUtils;\n+import org.springframework.beans.factory.BeanFactory;\n+import org.springframework.beans.factory.BeanFactoryAware;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.support.AbstractBeanDefinition;\n+import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n \n-public class PGJPAEntityFactory extends JPAEntityFactory {\n+public abstract class JPAJSONEntityFactory extends JPAEntityFactory implements InitializingBean, BeanFactoryAware {\n+\n+    private DefaultListableBeanFactory beanFactory;\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public <E extends Entity> E newEntity(final Class<E> reference) {\n         E result;\n \n         if (reference.equals(User.class)) {\n-            result = (E) new PGJPAUser();\n-            ((PGJPAUser) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n+            result = (E) new JPAJSONUser();\n+            ((JPAJSONUser) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n         } else if (reference.equals(Group.class)) {\n-            result = (E) new PGJPAGroup();\n-            ((PGJPAGroup) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n+            result = (E) new JPAJSONGroup();\n+            ((JPAJSONGroup) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n         } else if (reference.equals(AnyObject.class)) {\n-            result = (E) new PGJPAAnyObject();\n-            ((PGJPAAnyObject) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n+            result = (E) new JPAJSONAnyObject();\n+            ((JPAJSONAnyObject) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n         } else if (reference.equals(Conf.class)) {\n-            result = (E) new PGJPAConf();\n-            ((PGJPAConf) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n+            result = (E) new JPAJSONConf();\n+            ((JPAJSONConf) result).setKey(SecureRandomUtils.generateRandomUUID().toString());\n         } else if (reference.equals(APlainAttr.class)) {\n-            result = (E) new PGAPlainAttr();\n+            result = (E) new JPAJSONAPlainAttr();\n         } else if (reference.equals(APlainAttrValue.class)) {\n-            result = (E) new PGAPlainAttrValue();\n+            result = (E) new JPAJSONAPlainAttrValue();\n         } else if (reference.equals(APlainAttrUniqueValue.class)) {\n-            result = (E) new PGAPlainAttrUniqueValue();\n+            result = (E) new JPAJSONAPlainAttrUniqueValue();\n         } else if (reference.equals(CPlainAttr.class)) {\n-            result = (E) new PGCPlainAttr();\n+            result = (E) new JPAJSONCPlainAttr();\n         } else if (reference.equals(CPlainAttrValue.class)) {\n-            result = (E) new PGCPlainAttrValue();\n+            result = (E) new JPAJSONCPlainAttrValue();\n         } else if (reference.equals(CPlainAttrUniqueValue.class)) {\n-            result = (E) new PGCPlainAttrUniqueValue();\n+            result = (E) new JPAJSONCPlainAttrUniqueValue();\n         } else if (reference.equals(GPlainAttr.class)) {\n-            result = (E) new PGGPlainAttr();\n+            result = (E) new JPAJSONGPlainAttr();\n         } else if (reference.equals(GPlainAttrValue.class)) {\n-            result = (E) new PGGPlainAttrValue();\n+            result = (E) new JPAJSONGPlainAttrValue();\n         } else if (reference.equals(GPlainAttrUniqueValue.class)) {\n-            result = (E) new PGGPlainAttrUniqueValue();\n+            result = (E) new JPAJSONGPlainAttrUniqueValue();\n         } else if (reference.equals(UPlainAttr.class)) {\n-            result = (E) new PGUPlainAttr();\n+            result = (E) new JPAJSONUPlainAttr();\n         } else if (reference.equals(UPlainAttrValue.class)) {\n-            result = (E) new PGUPlainAttrValue();\n+            result = (E) new JPAJSONUPlainAttrValue();\n         } else if (reference.equals(UPlainAttrUniqueValue.class)) {\n-            result = (E) new PGUPlainAttrUniqueValue();\n+            result = (E) new JPAJSONUPlainAttrUniqueValue();\n         } else {\n             result = super.newEntity(reference);\n         }\n@@ -107,26 +113,33 @@ public <E extends Entity> E newEntity(final Class<E> reference) {\n \n     @Override\n     public Class<? extends User> userClass() {\n-        return PGJPAUser.class;\n+        return JPAJSONUser.class;\n     }\n \n     @Override\n     public Class<? extends Group> groupClass() {\n-        return PGJPAGroup.class;\n+        return JPAJSONGroup.class;\n     }\n \n     @Override\n     public Class<? extends AnyObject> anyObjectClass() {\n-        return PGJPAAnyObject.class;\n+        return JPAJSONAnyObject.class;\n     }\n \n     @Override\n     public Class<? extends Conf> confClass() {\n-        return PGJPAConf.class;\n+        return JPAJSONConf.class;\n+    }\n+\n+    protected abstract Class<? extends JPAJSONAnyDAO> jpaJSONAnyDAOClass();\n+\n+    @Override\n+    public void setBeanFactory(final BeanFactory beanFactory) {\n+        this.beanFactory = (DefaultListableBeanFactory) beanFactory;\n     }\n \n     @Override\n-    public Class<? extends AnySearchDAO> anySearchDAOClass() {\n-        return PGJPAAnySearchDAO.class;\n+    public void afterPropertiesSet() throws Exception {\n+        beanFactory.createBean(jpaJSONAnyDAOClass(), AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/PGJPAEntityFactory.java"},{"sha":"d58043f92898316671b38973462bdc67ff500955","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAJSONEntityListener.java","status":"renamed","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAJSONEntityListener.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -19,15 +19,17 @@\n package org.apache.syncope.core.persistence.jpa.entity;\n \n import java.util.List;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n+import org.apache.syncope.core.persistence.api.entity.JSONAny;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n \n-public abstract class PGJPAEntityListener<A extends Any<?>> {\n+public abstract class JPAJSONEntityListener<A extends Any<?>> {\n \n-    protected abstract List<? extends PGPlainAttr<A>> getValues(String plainAttrsJSON);\n+    protected abstract List<? extends JSONPlainAttr<A>> getValues(String plainAttrsJSON);\n \n     @SuppressWarnings(\"unchecked\")\n-    protected void json2list(final PGJPAAny<A> entity, final boolean clearFirst) {\n+    protected void json2list(final JSONAny<A> entity, final boolean clearFirst) {\n         if (clearFirst) {\n             entity.getPlainAttrList().clear();\n         }\n@@ -44,7 +46,7 @@ protected void json2list(final PGJPAAny<A> entity, final boolean clearFirst) {\n         }\n     }\n \n-    protected void list2json(final PGJPAAny<A> entity) {\n+    protected void list2json(final JSONAny<A> entity) {\n         entity.setPlainAttrsJSON(entity.getPlainAttrList().isEmpty()\n                 ? \"[{}]\"\n                 : POJOHelper.serialize(entity.getPlainAttrList()));","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/PGJPAEntityListener.java"},{"sha":"998fc73a1e529bbd00d38c7f81de0b99aad68998","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/PGJPAJSONEntityFactory.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPGJPAJSONEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPGJPAJSONEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPGJPAJSONEntityFactory.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity;\n+\n+import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n+import org.apache.syncope.core.persistence.api.dao.JPAJSONAnyDAO;\n+import org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnyDAO;\n+import org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnySearchDAO;\n+\n+public class PGJPAJSONEntityFactory extends JPAJSONEntityFactory {\n+\n+    @Override\n+    public Class<? extends AnySearchDAO> anySearchDAOClass() {\n+        return PGJPAJSONAnySearchDAO.class;\n+    }\n+\n+    @Override\n+    protected Class<? extends JPAJSONAnyDAO> jpaJSONAnyDAOClass() {\n+        return PGJPAJSONAnyDAO.class;\n+    }\n+}"},{"sha":"a2768eee08480190487a52ca7fe9c8dbfa307bcb","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAJSONAPlainAttr.java","status":"renamed","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAPlainAttr.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -38,20 +38,20 @@\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n \n @JsonIgnoreProperties(\"valuesAsStrings\")\n @JsonInclude(JsonInclude.Include.NON_EMPTY)\n-public class PGAPlainAttr extends AbstractPlainAttr<AnyObject> implements APlainAttr, PGPlainAttr<AnyObject> {\n+public class JPAJSONAPlainAttr extends AbstractPlainAttr<AnyObject> implements APlainAttr, JSONPlainAttr<AnyObject> {\n \n     private static final long serialVersionUID = 806271775349587902L;\n \n     /**\n      * The owner of this attribute.\n      */\n     @JsonIgnore\n-    private PGJPAAnyObject owner;\n+    private JPAJSONAnyObject owner;\n \n     @JsonProperty\n     private String schema;\n@@ -65,13 +65,13 @@ public class PGAPlainAttr extends AbstractPlainAttr<AnyObject> implements APlain\n     /**\n      * Values of this attribute (if schema is not UNIQUE).\n      */\n-    private final List<PGAPlainAttrValue> values = new ArrayList<>();\n+    private final List<JPAJSONAPlainAttrValue> values = new ArrayList<>();\n \n     /**\n      * Value of this attribute (if schema is UNIQUE).\n      */\n     @JsonProperty\n-    private PGAPlainAttrUniqueValue uniqueValue;\n+    private JPAJSONAPlainAttrUniqueValue uniqueValue;\n \n     @Override\n     public AnyObject getOwner() {\n@@ -80,8 +80,8 @@ public AnyObject getOwner() {\n \n     @Override\n     public void setOwner(final AnyObject owner) {\n-        checkType(owner, PGJPAAnyObject.class);\n-        this.owner = (PGJPAAnyObject) owner;\n+        checkType(owner, JPAJSONAnyObject.class);\n+        this.owner = (JPAJSONAnyObject) owner;\n     }\n \n     @JsonIgnore\n@@ -133,8 +133,8 @@ public void setMembership(final String membership) {\n \n     @Override\n     protected boolean addForMultiValue(final PlainAttrValue attrValue) {\n-        checkType(attrValue, PGAPlainAttrValue.class);\n-        return values.add((PGAPlainAttrValue) attrValue);\n+        checkType(attrValue, JPAJSONAPlainAttrValue.class);\n+        return values.add((JPAJSONAPlainAttrValue) attrValue);\n     }\n \n     @Override\n@@ -148,20 +148,20 @@ public List<? extends APlainAttrValue> getValues() {\n     }\n \n     @JsonIgnore\n-    public List<PGAPlainAttrValue> getPGValues() {\n+    public List<JPAJSONAPlainAttrValue> getPGValues() {\n         return values;\n     }\n \n     @Override\n-    public PGAPlainAttrUniqueValue getUniqueValue() {\n+    public JPAJSONAPlainAttrUniqueValue getUniqueValue() {\n         return uniqueValue;\n     }\n \n     @JsonIgnore\n     @Override\n     public void setUniqueValue(final PlainAttrUniqueValue uniqueValue) {\n-        checkType(uniqueValue, PGAPlainAttrUniqueValue.class);\n-        this.uniqueValue = (PGAPlainAttrUniqueValue) uniqueValue;\n+        checkType(uniqueValue, JPAJSONAPlainAttrUniqueValue.class);\n+        this.uniqueValue = (JPAJSONAPlainAttrUniqueValue) uniqueValue;\n     }\n \n     @Override\n@@ -185,7 +185,7 @@ public boolean equals(final Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final PGAPlainAttr other = (PGAPlainAttr) obj;\n+        final JPAJSONAPlainAttr other = (JPAJSONAPlainAttr) obj;\n         return new EqualsBuilder().\n                 append(schema, other.schema).\n                 append(membership, other.membership).","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/PGAPlainAttr.java"},{"sha":"cd8247eef2f0f8a810997021260153360b99cfc0","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAJSONAPlainAttrUniqueValue.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAPlainAttrUniqueValue.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -29,12 +29,12 @@\n \n @JsonIgnoreProperties({ \"valueAsString\", \"value\" })\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-public class PGAPlainAttrUniqueValue extends AbstractPlainAttrValue implements APlainAttrUniqueValue {\n+public class JPAJSONAPlainAttrUniqueValue extends AbstractPlainAttrValue implements APlainAttrUniqueValue {\n \n     private static final long serialVersionUID = -4053996864791245312L;\n \n     @JsonIgnore\n-    private PGAPlainAttr attr;\n+    private JPAJSONAPlainAttr attr;\n \n     @Override\n     public APlainAttr getAttr() {\n@@ -43,8 +43,8 @@ public APlainAttr getAttr() {\n \n     @Override\n     public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, PGAPlainAttr.class);\n-        this.attr = (PGAPlainAttr) attr;\n+        checkType(attr, JPAJSONAPlainAttr.class);\n+        this.attr = (JPAJSONAPlainAttr) attr;\n     }\n \n     @JsonIgnore","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/PGAPlainAttrUniqueValue.java"},{"sha":"d4815d305c0c8fcad33a37b54a73a6bf4cb12867","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAJSONAPlainAttrValue.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAPlainAttrValue.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -28,12 +28,12 @@\n \n @JsonIgnoreProperties({ \"valueAsString\", \"value\" })\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-public class PGAPlainAttrValue extends AbstractPlainAttrValue implements APlainAttrValue {\n+public class JPAJSONAPlainAttrValue extends AbstractPlainAttrValue implements APlainAttrValue {\n \n     private static final long serialVersionUID = 1832825176101443555L;\n \n     @JsonIgnore\n-    private PGAPlainAttr attr;\n+    private JPAJSONAPlainAttr attr;\n \n     @Override\n     public APlainAttr getAttr() {\n@@ -42,7 +42,7 @@ public APlainAttr getAttr() {\n \n     @Override\n     public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, PGAPlainAttr.class);\n-        this.attr = (PGAPlainAttr) attr;\n+        checkType(attr, JPAJSONAPlainAttr.class);\n+        this.attr = (JPAJSONAPlainAttr) attr;\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/PGAPlainAttrValue.java"},{"sha":"df8bb8a0eeeb5dfc1c33026ca1e459b7c2c7b57c","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAJSONAnyObject.java","status":"renamed","additions":12,"deletions":16,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAnyObject.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAnyObject.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAnyObject.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -23,34 +23,30 @@\n import java.util.Objects;\n import java.util.Optional;\n import java.util.stream.Collectors;\n-import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.EntityListeners;\n-import javax.persistence.Lob;\n import javax.persistence.Table;\n import javax.persistence.Transient;\n import org.apache.syncope.core.persistence.api.entity.Membership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.APlainAttr;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.PGJPAAny;\n-import org.apache.syncope.core.persistence.jpa.validation.entity.PGJPAAnyCheck;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n+import org.apache.syncope.core.persistence.api.entity.JSONAny;\n+import org.apache.syncope.core.persistence.jpa.validation.entity.JPAJSONAnyCheck;\n \n @Entity\n @Table(name = JPAAnyObject.TABLE)\n-@EntityListeners({ PGJPAAnyObjectListener.class })\n-@PGJPAAnyCheck\n-public class PGJPAAnyObject extends JPAAnyObject implements PGJPAAny<AnyObject>, AnyObject {\n+@EntityListeners({ JPAJSONAnyObjectListener.class })\n+@JPAJSONAnyCheck\n+public class JPAJSONAnyObject extends JPAAnyObject implements JSONAny<AnyObject>, AnyObject {\n \n     private static final long serialVersionUID = -8543654943709531885L;\n \n-    @Lob\n-    @Column(columnDefinition = \"jsonb\")\n     private String plainAttrs;\n \n     @Transient\n-    private final List<PGAPlainAttr> plainAttrList = new ArrayList<>();\n+    private final List<JPAJSONAPlainAttr> plainAttrList = new ArrayList<>();\n \n     @Override\n     public String getPlainAttrsJSON() {\n@@ -63,26 +59,26 @@ public void setPlainAttrsJSON(final String plainAttrs) {\n     }\n \n     @Override\n-    public List<PGAPlainAttr> getPlainAttrList() {\n+    public List<JPAJSONAPlainAttr> getPlainAttrList() {\n         return plainAttrList;\n     }\n \n     @Override\n-    public boolean add(final PGPlainAttr<AnyObject> attr) {\n+    public boolean add(final JSONPlainAttr<AnyObject> attr) {\n         return add((APlainAttr) attr);\n     }\n \n     @Override\n     public boolean add(final APlainAttr attr) {\n-        checkType(attr, PGAPlainAttr.class);\n-        return plainAttrList.add((PGAPlainAttr) attr);\n+        checkType(attr, JPAJSONAPlainAttr.class);\n+        return plainAttrList.add((JPAJSONAPlainAttr) attr);\n     }\n \n     @Override\n     public boolean remove(final APlainAttr attr) {\n         return plainAttrList.removeIf(pgattr\n                 -> pgattr.getSchemaKey().equals(attr.getSchema().getKey())\n-                && Objects.equals(pgattr.getMembershipKey(), ((PGAPlainAttr) attr).getMembershipKey()));\n+                && Objects.equals(pgattr.getMembershipKey(), ((JPAJSONAPlainAttr) attr).getMembershipKey()));\n     }\n \n     @Override","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/PGJPAAnyObject.java"},{"sha":"ad03fc518a2198e5a9d99eb12f22ef394ed68f24","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAJSONAnyObjectListener.java","status":"renamed","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAnyObjectListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAnyObjectListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAJSONAnyObjectListener.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -26,32 +26,32 @@\n import javax.persistence.PrePersist;\n import javax.persistence.PreUpdate;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.jpa.entity.PGJPAEntityListener;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.JPAJSONEntityListener;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n \n-public class PGJPAAnyObjectListener extends PGJPAEntityListener<AnyObject> {\n+public class JPAJSONAnyObjectListener extends JPAJSONEntityListener<AnyObject> {\n \n     @Override\n-    protected List<? extends PGPlainAttr<AnyObject>> getValues(final String plainAttrsJSON) {\n-        return POJOHelper.deserialize(plainAttrsJSON, new TypeReference<List<PGAPlainAttr>>() {\n+    protected List<? extends JSONPlainAttr<AnyObject>> getValues(final String plainAttrsJSON) {\n+        return POJOHelper.deserialize(plainAttrsJSON, new TypeReference<List<JPAJSONAPlainAttr>>() {\n         });\n     }\n \n     @PostLoad\n-    public void read(final PGJPAAnyObject anyObject) {\n+    public void read(final JPAJSONAnyObject anyObject) {\n         super.json2list(anyObject, false);\n     }\n \n     @PrePersist\n     @PreUpdate\n-    public void save(final PGJPAAnyObject anyObject) {\n+    public void save(final JPAJSONAnyObject anyObject) {\n         super.list2json(anyObject);\n     }\n \n     @PostPersist\n     @PostUpdate\n-    public void readAfterSave(final PGJPAAnyObject anyObject) {\n+    public void readAfterSave(final JPAJSONAnyObject anyObject) {\n         super.json2list(anyObject, true);\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/PGJPAAnyObjectListener.java"},{"sha":"4979d17334253994c48c203eabbaa8b779afccde","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAJSONCPlainAttr.java","status":"renamed","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttr.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -36,34 +36,34 @@\n import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n \n @JsonIgnoreProperties(\"valuesAsStrings\")\n @JsonInclude(JsonInclude.Include.NON_EMPTY)\n-public class PGCPlainAttr extends AbstractPlainAttr<Conf> implements CPlainAttr, PGPlainAttr<Conf> {\n+public class JPAJSONCPlainAttr extends AbstractPlainAttr<Conf> implements CPlainAttr, JSONPlainAttr<Conf> {\n \n     private static final long serialVersionUID = 806271775349587902L;\n \n     /**\n      * The owner of this attribute.\n      */\n     @JsonIgnore\n-    private PGJPAConf owner;\n+    private JPAJSONConf owner;\n \n     @JsonProperty\n     private String schema;\n \n     /**\n      * Values of this attribute (if schema is not UNIQUE).\n      */\n-    private final List<PGCPlainAttrValue> values = new ArrayList<>();\n+    private final List<JPAJSONCPlainAttrValue> values = new ArrayList<>();\n \n     /**\n      * Value of this attribute (if schema is UNIQUE).\n      */\n     @JsonProperty\n-    private PGCPlainAttrUniqueValue uniqueValue;\n+    private JPAJSONCPlainAttrUniqueValue uniqueValue;\n \n     @Override\n     public Conf getOwner() {\n@@ -72,8 +72,8 @@ public Conf getOwner() {\n \n     @Override\n     public void setOwner(final Conf owner) {\n-        checkType(owner, PGJPAConf.class);\n-        this.owner = (PGJPAConf) owner;\n+        checkType(owner, JPAJSONConf.class);\n+        this.owner = (JPAJSONConf) owner;\n     }\n \n     @JsonIgnore\n@@ -102,8 +102,8 @@ public void setSchema(final String schema) {\n \n     @Override\n     protected boolean addForMultiValue(final PlainAttrValue attrValue) {\n-        checkType(attrValue, PGCPlainAttrValue.class);\n-        return values.add((PGCPlainAttrValue) attrValue);\n+        checkType(attrValue, JPAJSONCPlainAttrValue.class);\n+        return values.add((JPAJSONCPlainAttrValue) attrValue);\n     }\n \n     @Override\n@@ -117,20 +117,20 @@ public List<? extends CPlainAttrValue> getValues() {\n     }\n \n     @JsonIgnore\n-    public List<PGCPlainAttrValue> getPGValues() {\n+    public List<JPAJSONCPlainAttrValue> getPGValues() {\n         return values;\n     }\n \n     @Override\n-    public PGCPlainAttrUniqueValue getUniqueValue() {\n+    public JPAJSONCPlainAttrUniqueValue getUniqueValue() {\n         return uniqueValue;\n     }\n \n     @JsonIgnore\n     @Override\n     public void setUniqueValue(final PlainAttrUniqueValue uniqueValue) {\n-        checkType(uniqueValue, PGCPlainAttrUniqueValue.class);\n-        this.uniqueValue = (PGCPlainAttrUniqueValue) uniqueValue;\n+        checkType(uniqueValue, JPAJSONCPlainAttrUniqueValue.class);\n+        this.uniqueValue = (JPAJSONCPlainAttrUniqueValue) uniqueValue;\n     }\n \n     @Override\n@@ -153,7 +153,7 @@ public boolean equals(final Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final PGCPlainAttr other = (PGCPlainAttr) obj;\n+        final JPAJSONCPlainAttr other = (JPAJSONCPlainAttr) obj;\n         return new EqualsBuilder().\n                 append(schema, other.schema).\n                 append(values, other.values).","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/PGCPlainAttr.java"},{"sha":"dc7bc50dd1891e11f9d723006e29a150a81b3564","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAJSONCPlainAttrUniqueValue.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrUniqueValue.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -29,12 +29,12 @@\n \n @JsonIgnoreProperties({ \"valueAsString\", \"value\" })\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-public class PGCPlainAttrUniqueValue extends AbstractPlainAttrValue implements CPlainAttrUniqueValue {\n+public class JPAJSONCPlainAttrUniqueValue extends AbstractPlainAttrValue implements CPlainAttrUniqueValue {\n \n     private static final long serialVersionUID = -4326417972859745823L;\n \n     @JsonIgnore\n-    private PGCPlainAttr attr;\n+    private JPAJSONCPlainAttr attr;\n \n     @Override\n     public CPlainAttr getAttr() {\n@@ -43,8 +43,8 @@ public CPlainAttr getAttr() {\n \n     @Override\n     public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, PGCPlainAttr.class);\n-        this.attr = (PGCPlainAttr) attr;\n+        checkType(attr, JPAJSONCPlainAttr.class);\n+        this.attr = (JPAJSONCPlainAttr) attr;\n     }\n \n     @JsonIgnore","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/PGCPlainAttrUniqueValue.java"},{"sha":"9136621b41ac400e5c255dd92b75c1b0fbf0c31a","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAJSONCPlainAttrValue.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONCPlainAttrValue.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -28,12 +28,12 @@\n \n @JsonIgnoreProperties({ \"valueAsString\", \"value\" })\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-public class PGCPlainAttrValue extends AbstractPlainAttrValue implements CPlainAttrValue {\n+public class JPAJSONCPlainAttrValue extends AbstractPlainAttrValue implements CPlainAttrValue {\n \n     private static final long serialVersionUID = 1832825176101443555L;\n \n     @JsonIgnore\n-    private PGCPlainAttr attr;\n+    private JPAJSONCPlainAttr attr;\n \n     @Override\n     public CPlainAttr getAttr() {\n@@ -42,7 +42,7 @@ public CPlainAttr getAttr() {\n \n     @Override\n     public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, PGCPlainAttr.class);\n-        this.attr = (PGCPlainAttr) attr;\n+        checkType(attr, JPAJSONCPlainAttr.class);\n+        this.attr = (JPAJSONCPlainAttr) attr;\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/PGCPlainAttrValue.java"},{"sha":"ea97ed50026e3bc70ed309506998ad2198c591cf","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAJSONConf.java","status":"renamed","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConf.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -28,15 +28,15 @@\n import javax.persistence.Transient;\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.PGJPAAny;\n-import org.apache.syncope.core.persistence.jpa.validation.entity.PGJPAAnyCheck;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n+import org.apache.syncope.core.persistence.api.entity.JSONAny;\n+import org.apache.syncope.core.persistence.jpa.validation.entity.JPAJSONAnyCheck;\n \n @Entity\n @Table(name = JPAConf.TABLE)\n-@EntityListeners({ PGJPAConfListener.class })\n-@PGJPAAnyCheck\n-public class PGJPAConf extends JPAConf implements PGJPAAny<Conf>, Conf {\n+@EntityListeners({ JPAJSONConfListener.class })\n+@JPAJSONAnyCheck\n+public class JPAJSONConf extends JPAConf implements JSONAny<Conf>, Conf {\n \n     private static final long serialVersionUID = -8543654943709531885L;\n \n@@ -45,7 +45,7 @@ public class PGJPAConf extends JPAConf implements PGJPAAny<Conf>, Conf {\n     private String plainAttrs;\n \n     @Transient\n-    private final List<PGCPlainAttr> plainAttrList = new ArrayList<>();\n+    private final List<JPAJSONCPlainAttr> plainAttrList = new ArrayList<>();\n \n     @Override\n     public String getPlainAttrsJSON() {\n@@ -58,19 +58,19 @@ public void setPlainAttrsJSON(final String plainAttrs) {\n     }\n \n     @Override\n-    public List<PGCPlainAttr> getPlainAttrList() {\n+    public List<JPAJSONCPlainAttr> getPlainAttrList() {\n         return plainAttrList;\n     }\n \n     @Override\n-    public boolean add(final PGPlainAttr<Conf> attr) {\n+    public boolean add(final JSONPlainAttr<Conf> attr) {\n         return add((CPlainAttr) attr);\n     }\n \n     @Override\n     public boolean add(final CPlainAttr attr) {\n-        checkType(attr, PGCPlainAttr.class);\n-        return plainAttrList.add((PGCPlainAttr) attr);\n+        checkType(attr, JPAJSONCPlainAttr.class);\n+        return plainAttrList.add((JPAJSONCPlainAttr) attr);\n     }\n \n     @Override","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/PGJPAConf.java"},{"sha":"7923c4729e279075276e0a35e0080edba22fcafe","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAJSONConfListener.java","status":"renamed","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConfListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConfListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAJSONConfListener.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -26,32 +26,32 @@\n import javax.persistence.PrePersist;\n import javax.persistence.PreUpdate;\n import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n-import org.apache.syncope.core.persistence.jpa.entity.PGJPAEntityListener;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.JPAJSONEntityListener;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n \n-public class PGJPAConfListener extends PGJPAEntityListener<Conf> {\n+public class JPAJSONConfListener extends JPAJSONEntityListener<Conf> {\n \n     @Override\n-    protected List<? extends PGPlainAttr<Conf>> getValues(final String plainAttrsJSON) {\n-        return POJOHelper.deserialize(plainAttrsJSON, new TypeReference<List<PGCPlainAttr>>() {\n+    protected List<? extends JSONPlainAttr<Conf>> getValues(final String plainAttrsJSON) {\n+        return POJOHelper.deserialize(plainAttrsJSON, new TypeReference<List<JPAJSONCPlainAttr>>() {\n         });\n     }\n \n     @PostLoad\n-    public void read(final PGJPAConf conf) {\n+    public void read(final JPAJSONConf conf) {\n         super.json2list(conf, false);\n     }\n \n     @PrePersist\n     @PreUpdate\n-    public void save(final PGJPAConf conf) {\n+    public void save(final JPAJSONConf conf) {\n         super.list2json(conf);\n     }\n \n     @PostPersist\n     @PostUpdate\n-    public void readAfterSave(final PGJPAConf conf) {\n+    public void readAfterSave(final JPAJSONConf conf) {\n         super.json2list(conf, true);\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/PGJPAConfListener.java"},{"sha":"e783295a82b61cd18401e8f9762e6ca65b8a5830","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/JPAJSONGPlainAttr.java","status":"renamed","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGPlainAttr.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -36,34 +36,34 @@\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n \n @JsonIgnoreProperties(\"valuesAsStrings\")\n @JsonInclude(JsonInclude.Include.NON_EMPTY)\n-public class PGGPlainAttr extends AbstractPlainAttr<Group> implements GPlainAttr, PGPlainAttr<Group> {\n+public class JPAJSONGPlainAttr extends AbstractPlainAttr<Group> implements GPlainAttr, JSONPlainAttr<Group> {\n \n     private static final long serialVersionUID = 806271775349587902L;\n \n     /**\n      * The owner of this attribute.\n      */\n     @JsonIgnore\n-    private PGJPAGroup owner;\n+    private JPAJSONGroup owner;\n \n     @JsonProperty\n     private String schema;\n \n     /**\n      * Values of this attribute (if schema is not UNIQUE).\n      */\n-    private final List<PGGPlainAttrValue> values = new ArrayList<>();\n+    private final List<JPAJSONGPlainAttrValue> values = new ArrayList<>();\n \n     /**\n      * Value of this attribute (if schema is UNIQUE).\n      */\n     @JsonProperty\n-    private PGGPlainAttrUniqueValue uniqueValue;\n+    private JPAJSONGPlainAttrUniqueValue uniqueValue;\n \n     @Override\n     public Group getOwner() {\n@@ -72,8 +72,8 @@ public Group getOwner() {\n \n     @Override\n     public void setOwner(final Group owner) {\n-        checkType(owner, PGJPAGroup.class);\n-        this.owner = (PGJPAGroup) owner;\n+        checkType(owner, JPAJSONGroup.class);\n+        this.owner = (JPAJSONGroup) owner;\n     }\n \n     @JsonIgnore\n@@ -102,8 +102,8 @@ public void setSchema(final String schema) {\n \n     @Override\n     protected boolean addForMultiValue(final PlainAttrValue attrValue) {\n-        checkType(attrValue, PGGPlainAttrValue.class);\n-        return values.add((PGGPlainAttrValue) attrValue);\n+        checkType(attrValue, JPAJSONGPlainAttrValue.class);\n+        return values.add((JPAJSONGPlainAttrValue) attrValue);\n     }\n \n     @Override\n@@ -117,20 +117,20 @@ public List<? extends GPlainAttrValue> getValues() {\n     }\n \n     @JsonIgnore\n-    public List<PGGPlainAttrValue> getPGValues() {\n+    public List<JPAJSONGPlainAttrValue> getPGValues() {\n         return values;\n     }\n \n     @Override\n-    public PGGPlainAttrUniqueValue getUniqueValue() {\n+    public JPAJSONGPlainAttrUniqueValue getUniqueValue() {\n         return uniqueValue;\n     }\n \n     @JsonIgnore\n     @Override\n     public void setUniqueValue(final PlainAttrUniqueValue uniqueValue) {\n-        checkType(uniqueValue, PGGPlainAttrUniqueValue.class);\n-        this.uniqueValue = (PGGPlainAttrUniqueValue) uniqueValue;\n+        checkType(uniqueValue, JPAJSONGPlainAttrUniqueValue.class);\n+        this.uniqueValue = (JPAJSONGPlainAttrUniqueValue) uniqueValue;\n     }\n \n     @Override\n@@ -153,7 +153,7 @@ public boolean equals(final Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final PGGPlainAttr other = (PGGPlainAttr) obj;\n+        final JPAJSONGPlainAttr other = (JPAJSONGPlainAttr) obj;\n         return new EqualsBuilder().\n                 append(schema, other.schema).\n                 append(values, other.values).","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/PGGPlainAttr.java"},{"sha":"539e8fb85b14c706a9bb9760355f99e3b53a5f33","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/JPAJSONGPlainAttrUniqueValue.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGPlainAttrUniqueValue.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -29,12 +29,12 @@\n \n @JsonIgnoreProperties({ \"valueAsString\", \"value\" })\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-public class PGGPlainAttrUniqueValue extends AbstractPlainAttrValue implements GPlainAttrUniqueValue {\n+public class JPAJSONGPlainAttrUniqueValue extends AbstractPlainAttrValue implements GPlainAttrUniqueValue {\n \n     private static final long serialVersionUID = -4326417972859745823L;\n \n     @JsonIgnore\n-    private PGGPlainAttr attr;\n+    private JPAJSONGPlainAttr attr;\n \n     @Override\n     public GPlainAttr getAttr() {\n@@ -43,8 +43,8 @@ public GPlainAttr getAttr() {\n \n     @Override\n     public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, PGGPlainAttr.class);\n-        this.attr = (PGGPlainAttr) attr;\n+        checkType(attr, JPAJSONGPlainAttr.class);\n+        this.attr = (JPAJSONGPlainAttr) attr;\n     }\n \n     @JsonIgnore","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/PGGPlainAttrUniqueValue.java"},{"sha":"e662117e2b81fd52c478fa764436e9a046b9f234","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/JPAJSONGPlainAttrValue.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGPlainAttrValue.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -28,12 +28,12 @@\n \n @JsonIgnoreProperties({ \"valueAsString\", \"value\" })\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-public class PGGPlainAttrValue extends AbstractPlainAttrValue implements GPlainAttrValue {\n+public class JPAJSONGPlainAttrValue extends AbstractPlainAttrValue implements GPlainAttrValue {\n \n     private static final long serialVersionUID = 1832825176101443555L;\n \n     @JsonIgnore\n-    private PGGPlainAttr attr;\n+    private JPAJSONGPlainAttr attr;\n \n     @Override\n     public GPlainAttr getAttr() {\n@@ -42,7 +42,7 @@ public GPlainAttr getAttr() {\n \n     @Override\n     public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, PGGPlainAttr.class);\n-        this.attr = (PGGPlainAttr) attr;\n+        checkType(attr, JPAJSONGPlainAttr.class);\n+        this.attr = (JPAJSONGPlainAttr) attr;\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/PGGPlainAttrValue.java"},{"sha":"b84169a8d8f1bcdbcf1525d4a404862c4d43d969","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/JPAJSONGroup.java","status":"renamed","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGroup.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -28,15 +28,15 @@\n import javax.persistence.Transient;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.PGJPAAny;\n-import org.apache.syncope.core.persistence.jpa.validation.entity.PGJPAAnyCheck;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n+import org.apache.syncope.core.persistence.api.entity.JSONAny;\n+import org.apache.syncope.core.persistence.jpa.validation.entity.JPAJSONAnyCheck;\n \n @Entity\n @Table(name = JPAGroup.TABLE)\n-@EntityListeners({ PGJPAGroupListener.class })\n-@PGJPAAnyCheck\n-public class PGJPAGroup extends JPAGroup implements PGJPAAny<Group>, Group {\n+@EntityListeners({ JPAJSONGroupListener.class })\n+@JPAJSONAnyCheck\n+public class JPAJSONGroup extends JPAGroup implements JSONAny<Group>, Group {\n \n     private static final long serialVersionUID = -8543654943709531885L;\n \n@@ -45,7 +45,7 @@ public class PGJPAGroup extends JPAGroup implements PGJPAAny<Group>, Group {\n     private String plainAttrs;\n \n     @Transient\n-    private final List<PGGPlainAttr> plainAttrList = new ArrayList<>();\n+    private final List<JPAJSONGPlainAttr> plainAttrList = new ArrayList<>();\n \n     @Override\n     public String getPlainAttrsJSON() {\n@@ -58,19 +58,19 @@ public void setPlainAttrsJSON(final String plainAttrs) {\n     }\n \n     @Override\n-    public List<PGGPlainAttr> getPlainAttrList() {\n+    public List<JPAJSONGPlainAttr> getPlainAttrList() {\n         return plainAttrList;\n     }\n \n     @Override\n-    public boolean add(final PGPlainAttr<Group> attr) {\n+    public boolean add(final JSONPlainAttr<Group> attr) {\n         return add((GPlainAttr) attr);\n     }\n \n     @Override\n     public boolean add(final GPlainAttr attr) {\n-        checkType(attr, PGGPlainAttr.class);\n-        return plainAttrList.add((PGGPlainAttr) attr);\n+        checkType(attr, JPAJSONGPlainAttr.class);\n+        return plainAttrList.add((JPAJSONGPlainAttr) attr);\n     }\n \n     @Override","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/PGJPAGroup.java"},{"sha":"a259238d04103a6b14af53a396c6abaa6be7eaf2","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/JPAJSONGroupListener.java","status":"renamed","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGroupListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGroupListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAJSONGroupListener.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -26,32 +26,32 @@\n import javax.persistence.PrePersist;\n import javax.persistence.PreUpdate;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n-import org.apache.syncope.core.persistence.jpa.entity.PGJPAEntityListener;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.JPAJSONEntityListener;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n \n-public class PGJPAGroupListener extends PGJPAEntityListener<Group> {\n+public class JPAJSONGroupListener extends JPAJSONEntityListener<Group> {\n \n     @Override\n-    protected List<? extends PGPlainAttr<Group>> getValues(final String plainAttrsJSON) {\n-        return POJOHelper.deserialize(plainAttrsJSON, new TypeReference<List<PGGPlainAttr>>() {\n+    protected List<? extends JSONPlainAttr<Group>> getValues(final String plainAttrsJSON) {\n+        return POJOHelper.deserialize(plainAttrsJSON, new TypeReference<List<JPAJSONGPlainAttr>>() {\n         });\n     }\n \n     @PostLoad\n-    public void read(final PGJPAGroup group) {\n+    public void read(final JPAJSONGroup group) {\n         super.json2list(group, false);\n     }\n \n     @PrePersist\n     @PreUpdate\n-    public void save(final PGJPAGroup group) {\n+    public void save(final JPAJSONGroup group) {\n         super.list2json(group);\n     }\n \n     @PostPersist\n     @PostUpdate\n-    public void readAfterSave(final PGJPAGroup group) {\n+    public void readAfterSave(final JPAJSONGroup group) {\n         super.json2list(group, true);\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/PGJPAGroupListener.java"},{"sha":"c8082a10583ebc5b48da8d40181077932a2dcc72","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAJSONUPlainAttr.java","status":"renamed","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUPlainAttr.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -38,20 +38,20 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n \n @JsonIgnoreProperties(\"valuesAsStrings\")\n @JsonInclude(JsonInclude.Include.NON_EMPTY)\n-public class PGUPlainAttr extends AbstractPlainAttr<User> implements UPlainAttr, PGPlainAttr<User> {\n+public class JPAJSONUPlainAttr extends AbstractPlainAttr<User> implements UPlainAttr, JSONPlainAttr<User> {\n \n     private static final long serialVersionUID = 806271775349587902L;\n \n     /**\n      * The owner of this attribute.\n      */\n     @JsonIgnore\n-    private PGJPAUser owner;\n+    private JPAJSONUser owner;\n \n     @JsonProperty\n     private String schema;\n@@ -65,13 +65,13 @@ public class PGUPlainAttr extends AbstractPlainAttr<User> implements UPlainAttr,\n     /**\n      * Values of this attribute (if schema is not UNIQUE).\n      */\n-    private final List<PGUPlainAttrValue> values = new ArrayList<>();\n+    private final List<JPAJSONUPlainAttrValue> values = new ArrayList<>();\n \n     /**\n      * Value of this attribute (if schema is UNIQUE).\n      */\n     @JsonProperty\n-    private PGUPlainAttrUniqueValue uniqueValue;\n+    private JPAJSONUPlainAttrUniqueValue uniqueValue;\n \n     @Override\n     public User getOwner() {\n@@ -80,8 +80,8 @@ public User getOwner() {\n \n     @Override\n     public void setOwner(final User owner) {\n-        checkType(owner, PGJPAUser.class);\n-        this.owner = (PGJPAUser) owner;\n+        checkType(owner, JPAJSONUser.class);\n+        this.owner = (JPAJSONUser) owner;\n     }\n \n     @JsonIgnore\n@@ -133,8 +133,8 @@ public void setMembership(final String membership) {\n \n     @Override\n     protected boolean addForMultiValue(final PlainAttrValue attrValue) {\n-        checkType(attrValue, PGUPlainAttrValue.class);\n-        return values.add((PGUPlainAttrValue) attrValue);\n+        checkType(attrValue, JPAJSONUPlainAttrValue.class);\n+        return values.add((JPAJSONUPlainAttrValue) attrValue);\n     }\n \n     @Override\n@@ -148,20 +148,20 @@ public List<? extends UPlainAttrValue> getValues() {\n     }\n \n     @JsonIgnore\n-    public List<PGUPlainAttrValue> getPGValues() {\n+    public List<JPAJSONUPlainAttrValue> getPGValues() {\n         return values;\n     }\n \n     @Override\n-    public PGUPlainAttrUniqueValue getUniqueValue() {\n+    public JPAJSONUPlainAttrUniqueValue getUniqueValue() {\n         return uniqueValue;\n     }\n \n     @JsonIgnore\n     @Override\n     public void setUniqueValue(final PlainAttrUniqueValue uniqueValue) {\n-        checkType(uniqueValue, PGUPlainAttrUniqueValue.class);\n-        this.uniqueValue = (PGUPlainAttrUniqueValue) uniqueValue;\n+        checkType(uniqueValue, JPAJSONUPlainAttrUniqueValue.class);\n+        this.uniqueValue = (JPAJSONUPlainAttrUniqueValue) uniqueValue;\n     }\n \n     @Override\n@@ -185,7 +185,7 @@ public boolean equals(final Object obj) {\n         if (getClass() != obj.getClass()) {\n             return false;\n         }\n-        final PGUPlainAttr other = (PGUPlainAttr) obj;\n+        final JPAJSONUPlainAttr other = (JPAJSONUPlainAttr) obj;\n         return new EqualsBuilder().\n                 append(schema, other.schema).\n                 append(membership, other.membership).","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/PGUPlainAttr.java"},{"sha":"ab4a8f42ba2ba4c687ef038c439d4490f6fb8bca","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAJSONUPlainAttrUniqueValue.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUPlainAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUPlainAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUPlainAttrUniqueValue.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -29,12 +29,12 @@\n \n @JsonIgnoreProperties({ \"valueAsString\", \"value\" })\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-public class PGUPlainAttrUniqueValue extends AbstractPlainAttrValue implements UPlainAttrUniqueValue {\n+public class JPAJSONUPlainAttrUniqueValue extends AbstractPlainAttrValue implements UPlainAttrUniqueValue {\n \n     private static final long serialVersionUID = -4053996864791245312L;\n \n     @JsonIgnore\n-    private PGUPlainAttr attr;\n+    private JPAJSONUPlainAttr attr;\n \n     @Override\n     public UPlainAttr getAttr() {\n@@ -43,8 +43,8 @@ public UPlainAttr getAttr() {\n \n     @Override\n     public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, PGUPlainAttr.class);\n-        this.attr = (PGUPlainAttr) attr;\n+        checkType(attr, JPAJSONUPlainAttr.class);\n+        this.attr = (JPAJSONUPlainAttr) attr;\n     }\n \n     @JsonIgnore","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/PGUPlainAttrUniqueValue.java"},{"sha":"4a4415b115282e3492d6e1a78f56eaff42dc4498","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAJSONUPlainAttrValue.java","status":"renamed","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUPlainAttrValue.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -28,12 +28,12 @@\n \n @JsonIgnoreProperties({ \"valueAsString\", \"value\" })\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-public class PGUPlainAttrValue extends AbstractPlainAttrValue implements UPlainAttrValue {\n+public class JPAJSONUPlainAttrValue extends AbstractPlainAttrValue implements UPlainAttrValue {\n \n     private static final long serialVersionUID = 1832825176101443555L;\n \n     @JsonIgnore\n-    private PGUPlainAttr attr;\n+    private JPAJSONUPlainAttr attr;\n \n     @Override\n     public UPlainAttr getAttr() {\n@@ -42,7 +42,7 @@ public UPlainAttr getAttr() {\n \n     @Override\n     public void setAttr(final PlainAttr<?> attr) {\n-        checkType(attr, PGUPlainAttr.class);\n-        this.attr = (PGUPlainAttr) attr;\n+        checkType(attr, JPAJSONUPlainAttr.class);\n+        this.attr = (JPAJSONUPlainAttr) attr;\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/PGUPlainAttrValue.java"},{"sha":"1591b9ca934684381bd06e8ebeee7e74ba82f231","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAJSONUser.java","status":"renamed","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUser.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -33,15 +33,15 @@\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.PGJPAAny;\n-import org.apache.syncope.core.persistence.jpa.validation.entity.PGJPAAnyCheck;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n+import org.apache.syncope.core.persistence.api.entity.JSONAny;\n+import org.apache.syncope.core.persistence.jpa.validation.entity.JPAJSONAnyCheck;\n \n @Entity\n @Table(name = JPAUser.TABLE)\n-@EntityListeners({ PGJPAUserListener.class })\n-@PGJPAAnyCheck\n-public class PGJPAUser extends JPAUser implements PGJPAAny<User>, User {\n+@EntityListeners({ JPAJSONUserListener.class })\n+@JPAJSONAnyCheck\n+public class JPAJSONUser extends JPAUser implements JSONAny<User>, User {\n \n     private static final long serialVersionUID = -8543654943709531885L;\n \n@@ -50,7 +50,7 @@ public class PGJPAUser extends JPAUser implements PGJPAAny<User>, User {\n     private String plainAttrs;\n \n     @Transient\n-    private final List<PGUPlainAttr> plainAttrList = new ArrayList<>();\n+    private final List<JPAJSONUPlainAttr> plainAttrList = new ArrayList<>();\n \n     @Override\n     public String getPlainAttrsJSON() {\n@@ -63,26 +63,26 @@ public void setPlainAttrsJSON(final String plainAttrs) {\n     }\n \n     @Override\n-    public List<PGUPlainAttr> getPlainAttrList() {\n+    public List<JPAJSONUPlainAttr> getPlainAttrList() {\n         return plainAttrList;\n     }\n \n     @Override\n-    public boolean add(final PGPlainAttr<User> attr) {\n+    public boolean add(final JSONPlainAttr<User> attr) {\n         return add((UPlainAttr) attr);\n     }\n \n     @Override\n     public boolean add(final UPlainAttr attr) {\n-        checkType(attr, PGUPlainAttr.class);\n-        return plainAttrList.add((PGUPlainAttr) attr);\n+        checkType(attr, JPAJSONUPlainAttr.class);\n+        return plainAttrList.add((JPAJSONUPlainAttr) attr);\n     }\n \n     @Override\n     public boolean remove(final UPlainAttr attr) {\n         return plainAttrList.removeIf(pgattr\n                 -> pgattr.getSchemaKey().equals(attr.getSchema().getKey())\n-                && Objects.equals(pgattr.getMembershipKey(), ((PGUPlainAttr) attr).getMembershipKey()));\n+                && Objects.equals(pgattr.getMembershipKey(), ((JPAJSONUPlainAttr) attr).getMembershipKey()));\n     }\n \n     @Override","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/PGJPAUser.java"},{"sha":"66f8b0829643b037001d62643b6b5603093cee91","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAJSONUserListener.java","status":"renamed","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUserListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUserListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAJSONUserListener.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -26,32 +26,32 @@\n import javax.persistence.PrePersist;\n import javax.persistence.PreUpdate;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.apache.syncope.core.persistence.jpa.entity.PGJPAEntityListener;\n-import org.apache.syncope.core.persistence.jpa.entity.PGPlainAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.JPAJSONEntityListener;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n+import org.apache.syncope.core.persistence.api.entity.JSONPlainAttr;\n \n-public class PGJPAUserListener extends PGJPAEntityListener<User> {\n+public class JPAJSONUserListener extends JPAJSONEntityListener<User> {\n \n     @Override\n-    protected List<? extends PGPlainAttr<User>> getValues(final String plainAttrsJSON) {\n-        return POJOHelper.deserialize(plainAttrsJSON, new TypeReference<List<PGUPlainAttr>>() {\n+    protected List<? extends JSONPlainAttr<User>> getValues(final String plainAttrsJSON) {\n+        return POJOHelper.deserialize(plainAttrsJSON, new TypeReference<List<JPAJSONUPlainAttr>>() {\n         });\n     }\n \n     @PostLoad\n-    public void read(final PGJPAUser user) {\n+    public void read(final JPAJSONUser user) {\n         super.json2list(user, false);\n     }\n \n     @PrePersist\n     @PreUpdate\n-    public void save(final PGJPAUser user) {\n+    public void save(final JPAJSONUser user) {\n         super.list2json(user);\n     }\n \n     @PostPersist\n     @PostUpdate\n-    public void readAfterSave(final PGJPAUser user) {\n+    public void readAfterSave(final JPAJSONUser user) {\n         super.json2list(user, true);\n     }\n }","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/PGJPAUserListener.java"},{"sha":"361894de6b16952adac8ff104907189458b6b5f1","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/JPAJSONAnyCheck.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FJPAJSONAnyCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FJPAJSONAnyCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FJPAJSONAnyCheck.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -29,9 +29,9 @@\n \n @Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n-@Constraint(validatedBy = PGJPAAnyValidator.class)\n+@Constraint(validatedBy = JPAJSONAnyValidator.class)\n @Documented\n-public @interface PGJPAAnyCheck {\n+public @interface JPAJSONAnyCheck {\n \n     String message() default \"{org.apache.syncope.core.persistence.validation.any}\";\n ","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PGJPAAnyCheck.java"},{"sha":"6a324567e77cb965bea224e3ed82a6929f7f0065","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/JPAJSONAnyValidator.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FJPAJSONAnyValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FJPAJSONAnyValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FJPAJSONAnyValidator.java?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -21,12 +21,12 @@\n import java.util.concurrent.atomic.AtomicReference;\n import javax.validation.ConstraintValidatorContext;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n-import org.apache.syncope.core.persistence.jpa.entity.PGJPAAny;\n+import org.apache.syncope.core.persistence.api.entity.JSONAny;\n \n-public class PGJPAAnyValidator extends AbstractValidator<PGJPAAnyCheck, PGJPAAny<?>> {\n+public class JPAJSONAnyValidator extends AbstractValidator<JPAJSONAnyCheck, JSONAny<?>> {\n \n     @Override\n-    public boolean isValid(final PGJPAAny<?> entity, final ConstraintValidatorContext context) {\n+    public boolean isValid(final JSONAny<?> entity, final ConstraintValidatorContext context) {\n         context.disableDefaultConstraintViolation();\n \n         PlainAttrValidator attrValidator = new PlainAttrValidator();","previous_filename":"core/persistence-jpa-pgjsonb/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PGJPAAnyValidator.java"},{"sha":"64160d4ee5cb20cb123ce45e92dc63eb2b513ddf","filename":"core/persistence-jpa-json/src/main/resources/META-INF/spring-orm-pgjsonb.xml","status":"renamed","additions":50,"deletions":14,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-pgjsonb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-pgjsonb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-pgjsonb.xml?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -33,67 +33,103 @@ under the License.\n       </entity-listeners>\n     </persistence-unit-defaults>\n   </persistence-unit-metadata>\n-  \n+ \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAnyObject\">\n+    <attributes>\n+      <basic name=\"plainAttrs\">\n+        <column column-definition=\"jsonb\"/>\n+        <lob/>\n+      </basic>\n+    </attributes>\n+  </entity>\n+    \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGroup\">\n+    <attributes>\n+      <basic name=\"plainAttrs\">\n+        <column column-definition=\"jsonb\"/>\n+        <lob/>\n+      </basic>\n+    </attributes>\n+  </entity>\n+\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAJSONUser\">\n+    <attributes>\n+      <basic name=\"plainAttrs\">\n+        <column column-definition=\"jsonb\"/>\n+        <lob/>\n+      </basic>\n+    </attributes>\n+  </entity>\n+\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPAJSONConf\">\n+    <attributes>\n+      <basic name=\"plainAttrs\">\n+        <column column-definition=\"jsonb\"/>\n+        <lob/>\n+      </basic>\n+    </attributes>\n+  </entity>\n+\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGroup\">\n     <attributes>\n-      <many-to-one name=\"userOwner\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.user.PGJPAUser\"/>\n-      <many-to-one name=\"groupOwner\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.PGJPAGroup\"/>\n+      <many-to-one name=\"userOwner\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAJSONUser\"/>\n+      <many-to-one name=\"groupOwner\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGroup\"/>\n     </attributes>\n   </entity>\n \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPATypeExtension\">\n     <attributes>\n-      <many-to-one name=\"group\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.PGJPAGroup\"/>\n+      <many-to-one name=\"group\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGroup\"/>\n     </attributes>\n   </entity>\n \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUMembership\">\n     <attributes>\n-      <many-to-one name=\"leftEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.user.PGJPAUser\">\n+      <many-to-one name=\"leftEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAJSONUser\">\n         <join-column name=\"user_id\"/>\n       </many-to-one>\n-      <many-to-one name=\"rightEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.PGJPAGroup\">\n+      <many-to-one name=\"rightEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGroup\">\n         <join-column name=\"group_id\"/>\n       </many-to-one>        \n     </attributes>\n   </entity>\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUDynGroupMembership\">\n     <attributes>\n-      <one-to-one name=\"group\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.PGJPAGroup\"/>\n+      <one-to-one name=\"group\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGroup\"/>\n     </attributes>\n   </entity>\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAURelationship\">\n     <attributes>\n-      <many-to-one name=\"leftEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.user.PGJPAUser\">\n+      <many-to-one name=\"leftEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAJSONUser\">\n         <join-column name=\"user_id\"/>\n       </many-to-one>\n-      <many-to-one name=\"rightEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.PGJPAAnyObject\">\n+      <many-to-one name=\"rightEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAnyObject\">\n         <join-column name=\"anyObject_id\"/>\n       </many-to-one>\n     </attributes>\n   </entity>\n \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAMembership\">\n     <attributes>\n-      <many-to-one name=\"leftEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.PGJPAAnyObject\">\n+      <many-to-one name=\"leftEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAnyObject\">\n         <join-column name=\"anyObject_id\"/>\n       </many-to-one>\n-      <many-to-one name=\"rightEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.PGJPAGroup\">\n+      <many-to-one name=\"rightEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGroup\">\n         <join-column name=\"group_id\"/>\n       </many-to-one>\n     </attributes>\n   </entity>\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAADynGroupMembership\">\n     <attributes>\n-      <one-to-one name=\"group\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.PGJPAGroup\"/>\n+      <one-to-one name=\"group\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAJSONGroup\"/>\n     </attributes>\n   </entity>\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAARelationship\">\n     <attributes>\n-      <many-to-one name=\"leftEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.PGJPAAnyObject\">\n+      <many-to-one name=\"leftEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAnyObject\">\n         <join-column name=\"left_anyObject_id\"/>\n       </many-to-one>\n-      <many-to-one name=\"rightEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.PGJPAAnyObject\">\n+      <many-to-one name=\"rightEnd\" target-entity=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAJSONAnyObject\">\n         <join-column name=\"right_anyObject_id\"/>\n       </many-to-one>\n     </attributes>","previous_filename":"core/persistence-jpa-pgjsonb/src/main/resources/META-INF/spring-orm-pgjsonb.xml"},{"sha":"718f22953e2ab0c23b9c80489f08d86f45288ca9","filename":"core/persistence-jpa-json/src/main/resources/persistence-enhance.xml","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpersistence-enhance.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpersistence-enhance.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpersistence-enhance.xml?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","previous_filename":"core/persistence-jpa-pgjsonb/src/main/resources/persistence-enhance.xml"},{"sha":"d9a648fb99030c7cab7bbaa2ef29d62bfa9e659b","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/domains/Master.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fdomains%2FMaster.properties?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","previous_filename":"core/persistence-jpa-pgjsonb/src/main/resources/domains/Master.properties"},{"sha":"3e5b92b8320deda3bb5884cbc32d161aafc39678","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/indexes.xml","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","previous_filename":"core/persistence-jpa-pgjsonb/src/main/resources/indexes.xml"},{"sha":"50d568e2f94ee2739e1f18b2db9280cf2e5741fe","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/persistence.properties","status":"renamed","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -15,13 +15,13 @@\n # specific language governing permissions and limitations\n # under the License.\n content.directory=${conf.directory}\n-entity.factory=org.apache.syncope.core.persistence.jpa.entity.PGJPAEntityFactory\n-plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAPlainSchemaDAO\n-plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAPlainAttrDAO\n-plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAPlainAttrValueDAO\n-any.search.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAAnySearchDAO\n-user.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAUserDAO\n-group.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAGroupDAO\n-anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAAnyObjectDAO\n-conf.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAConfDAO\n+entity.factory=org.apache.syncope.core.persistence.jpa.entity.PGJPAJSONEntityFactory\n+plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainSchemaDAO\n+plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n+plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n+any.search.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnySearchDAO\n+user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n+group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n+anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n+conf.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONConfDAO\n openjpa.RemoteCommitProvider=sjvm","previous_filename":"core/persistence-jpa-pgjsonb/src/main/resources/persistence.properties"},{"sha":"eb450bef723821f0c0549b32702d5b95c7068e28","filename":"core/persistence-jpa-json/src/main/resources/pgjsonb/views.xml","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fviews.xml?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","previous_filename":"core/persistence-jpa-pgjsonb/src/main/resources/views.xml"},{"sha":"1e84aea6a91ed748d62138af9b38e2985cb1a9b3","filename":"core/persistence-jpa-json/src/test/resources/persistenceTest.xml","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","previous_filename":"core/persistence-jpa-pgjsonb/src/test/resources/persistenceTest.xml"},{"sha":"60834e6e174590879143f58bd99ace6e400d9c0e","filename":"core/persistence-jpa-json/src/test/resources/pgjsonb/domains/MasterContent.xml","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fpgjsonb%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fpgjsonb%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fpgjsonb%2Fdomains%2FMasterContent.xml?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","previous_filename":"core/persistence-jpa-pgjsonb/src/test/resources/domains/MasterContent.xml"},{"sha":"929ded233527278c68906d41b9fe668f676de65e","filename":"core/persistence-jpa-json/src/test/resources/simplelogger.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fsimplelogger.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fsimplelogger.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fsimplelogger.properties?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","previous_filename":"core/persistence-jpa-pgjsonb/src/test/resources/simplelogger.properties"},{"sha":"904b52ef4c52542b5199fdad588d0222c0061594","filename":"core/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -79,7 +79,7 @@ under the License.\n   <modules>\n     <module>persistence-api</module>\n     <module>persistence-jpa</module>\n-    <module>persistence-jpa-pgjsonb</module>\n+    <module>persistence-jpa-json</module>\n     <module>spring</module>\n     <module>provisioning-api</module>\n     <module>provisioning-java</module>"},{"sha":"f34ac1d69bbfda42197a391a8dcd1bdc91b9a2b1","filename":"fit/core-reference/pom.xml","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -601,7 +601,7 @@ under the License.\n       <dependencies>\n         <dependency>\n           <groupId>org.apache.syncope.core</groupId>\n-          <artifactId>syncope-core-persistence-jpa-pgjsonb</artifactId>\n+          <artifactId>syncope-core-persistence-jpa-json</artifactId>\n           <version>${project.version}</version>\n         </dependency>\n     \n@@ -724,15 +724,16 @@ under the License.\n             <filtering>true</filtering>\n           </resource>\n           <resource>\n-            <directory>${basedir}/../../core/persistence-jpa-pgjsonb/src/test/resources/domains</directory>\n+            <directory>${basedir}/../../core/persistence-jpa-json/src/test/resources/pgjsonb/domains</directory>\n             <targetPath>${project.build.directory}/classes/domains</targetPath>\n             <filtering>true</filtering>\n           </resource>\n         </resources>\n         <testResources>\n           <testResource>\n-            <directory>src/main/resources/pgjsonb</directory>\n+            <directory>${basedir}/../../core/persistence-jpa-json/src/main/resources/pgjsonb</directory>\n             <includes>\n+              <include>persistence.properties</include>\n               <include>indexes.xml</include>\n               <include>views.xml</include>\n             </includes>            "},{"sha":"3e5b92b8320deda3bb5884cbc32d161aafc39678","filename":"fit/core-reference/src/main/resources/pgjsonb/indexes.xml","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Findexes.xml?ref=ef300e1289e66cc3bde726819a21f9686b1fcafa","patch":"@@ -1,63 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n-<properties>\n-  <comment>Additional indexes (in respect to JPA's)</comment>\n-\n-  <entry key=\"SyncopeUser_plainAttrs_idx\">CREATE INDEX SyncopeUser_plainAttrs_idx ON SyncopeUser USING gin ((plainAttrs) jsonb_path_ops)</entry>\n-  <entry key=\"SyncopeGroup_plainAttrs_idx\">CREATE INDEX SyncopeGroup_plainAttrs_idx ON SyncopeGroup USING gin ((plainAttrs) jsonb_path_ops)</entry>\n-  <entry key=\"AnyObject_plainAttrs_idx\">CREATE INDEX AnyObject_plainAttrs_idx ON AnyObject USING gin ((plainAttrs) jsonb_path_ops)</entry>\n-  <entry key=\"SyncopeConf_plainAttrs_idx\">CREATE INDEX SyncopeConf_plainAttrs_idx ON SyncopeConf USING gin ((plainAttrs) jsonb_path_ops)</entry>\n-\n-  <entry key=\"UDynGroupMembers_any_id\">CREATE INDEX UDynGroupMembers_any_id ON UDynGroupMembers(any_id)</entry>\n-  <entry key=\"UDynGroupMembers_group_id\">CREATE INDEX UDynGroupMembers_group_id ON UDynGroupMembers(group_id)</entry>\n-  <entry key=\"ADynGroupMembers_any_id\">CREATE INDEX ADynGroupMembers_any_id ON ADynGroupMembers(any_id)</entry>\n-  <entry key=\"ADynGroupMembers_group_id\">CREATE INDEX ADynGroupMembers_group_id ON ADynGroupMembers(group_id)</entry>\n-\n-  <entry key=\"DynRoleMembers_any_id\">CREATE INDEX DynRoleMembers_any_id ON DynRoleMembers(any_id)</entry>\n-  <entry key=\"DynRoleMembers_role_id\">CREATE INDEX DynRoleMembers_role_id ON DynRoleMembers(role_id)</entry>\n-\n-  <entry key=\"DynRealmMembers_any_id\">CREATE INDEX DynRealmMembers_any_id ON DynRealmMembers(any_id)</entry>\n-  <entry key=\"DynRealmMembers_realm_id\">CREATE INDEX DynRealmMembers_dynRealm_id ON DynRealmMembers(dynRealm_id)</entry>\n-\n-  <entry key=\"CPlainAttrValue_stringvalueIndex\">CREATE INDEX CAttrValue_stringvalueIndex ON CPlainAttrValue(stringvalue)</entry>\n-  <entry key=\"CPlainAttrValue_datevalueIndex\">CREATE INDEX CAttrValue_datevalueIndex ON CPlainAttrValue(datevalue)</entry>\n-  <entry key=\"CPlainAttrValue_longvalueIndex\">CREATE INDEX CAttrValue_longvalueIndex ON CPlainAttrValue(longvalue)</entry>\n-  <entry key=\"CPlainAttrValue_doublevalueIndex\">CREATE INDEX CAttrValue_doublevalueIndex ON CPlainAttrValue(doublevalue)</entry>\n-  <entry key=\"CPlainAttrValue_booleanvalueIndex\">CREATE INDEX CAttrValue_booleanvalueIndex ON CPlainAttrValue(booleanvalue)</entry>\n-\n-  <entry key=\"UMembership_GroupIndex\">CREATE INDEX UMembership_GroupIndex ON UMembership(group_id)</entry>\n-  <entry key=\"UMembership_UserIndex\">CREATE INDEX UMembership_UserIndex ON UMembership(user_id)</entry>\n-  <entry key=\"AMembership_GroupIndex\">CREATE INDEX AMembership_GroupIndex ON AMembership(group_id)</entry>\n-  <entry key=\"AMembership_AnyObjectIndex\">CREATE INDEX AMembership_AnyObjectIndex ON AMembership(anyObject_id)</entry>\n-\n-  <entry key=\"URelationship_RightIndex\">CREATE INDEX URelationship_RightIndex ON URelationship(anyObject_id)</entry>\n-  <entry key=\"URelationship_LeftIndex\">CREATE INDEX URelationship_LeftIndex ON URelationship(user_id)</entry>\n-  <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_id)</entry>\n-  <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_id)</entry>\n-\n-  <entry key=\"CPlainAttrValue_attrIndex\">CREATE INDEX CPlainAttrValue_attrIndex on CPlainAttrValue(attribute_id)</entry>\n-  <entry key=\"CPAttrUniqueValue_attrIndex\">CREATE INDEX CPAttrUniqueValue_attrIndex on CPlainAttrUniqueValue(attribute_id)</entry>\n-\n-  <entry key=\"CPlainAttr_owner_Index\">CREATE INDEX CPlainAttr_owner_Index on CPlainAttr(owner_id)</entry>\n-  <entry key=\"CPlainAttr_schema_Index\">CREATE INDEX CPlainAttr_schema_Index on CPlainAttr(schema_id)</entry>\n-\n-  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n-</properties>"},{"sha":"a2995270b3895e37d63885187f36aa1866df267f","filename":"fit/core-reference/src/main/resources/pgjsonb/persistence.properties","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fpersistence.properties?ref=ef300e1289e66cc3bde726819a21f9686b1fcafa","patch":"@@ -1,27 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-content.directory=${conf.directory}\n-entity.factory=org.apache.syncope.core.persistence.jpa.entity.PGJPAEntityFactory\n-plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAPlainSchemaDAO\n-plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAPlainAttrDAO\n-plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAPlainAttrValueDAO\n-any.search.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAAnySearchDAO\n-user.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAUserDAO\n-group.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAGroupDAO\n-anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAAnyObjectDAO\n-conf.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAConfDAO\n-openjpa.RemoteCommitProvider=sjvm"},{"sha":"eb450bef723821f0c0549b32702d5b95c7068e28","filename":"fit/core-reference/src/main/resources/pgjsonb/views.xml","status":"removed","additions":0,"deletions":154,"changes":154,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fviews.xml?ref=ef300e1289e66cc3bde726819a21f9686b1fcafa","patch":"@@ -1,154 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n-<properties>\n-  \n-  <entry key=\"UDynGroupMembers\">\n-    CREATE TABLE UDynGroupMembers(\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(any_id, group_id))\n-  </entry>\n-  <entry key=\"ADynGroupMembers\">\n-    CREATE TABLE ADynGroupMembers(\n-    anyType_id VARCHAR(255),\n-    any_id CHAR(36),\n-    group_id CHAR(36),\n-    UNIQUE(anyType_id, any_id, group_id))\n-  </entry>\n-  <entry key=\"DynRoleMembers\">\n-    CREATE TABLE DynRoleMembers(\n-    any_id CHAR(36),\n-    role_id VARCHAR(255),\n-    UNIQUE(any_id, role_id))\n-  </entry>\n-  <entry key=\"DynRealmMembers\">\n-    CREATE TABLE DynRealmMembers(\n-    any_id CHAR(36),\n-    dynRealm_id VARCHAR(255),\n-    UNIQUE(any_id, dynRealm_id))\n-  </entry>\n-\n-  <!-- user -->\n-  <entry key=\"user_search\">\n-    CREATE VIEW user_search AS\n-\n-    SELECT u.id as any_id, u.*,attrs,attrValues\n-    FROM SyncopeUser u, jsonb_array_elements(COALESCE(u.plainAttrs, '[{}]'::jsonb)) attrs,\n-    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n-  </entry>\n-  <entry key=\"user_search_urelationship\">\n-    CREATE VIEW user_search_urelationship AS\n-\n-    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n-    FROM URelationship m\n-  </entry>\n-  <entry key=\"user_search_umembership\">\n-    CREATE VIEW user_search_umembership AS\n-\n-    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM UMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"user_search_role\">\n-    CREATE VIEW user_search_role AS\n-\n-    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n-    FROM SyncopeUser_SyncopeRole ss\n-  </entry>\n-  <entry key=\"user_search_priv\">\n-    CREATE VIEW user_search_priv AS\n-\n-    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n-    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n-    WHERE ss.role_id = sp.role_id\n-  </entry>\n-  <entry key=\"user_search_dynpriv\">\n-    CREATE VIEW user_search_dynpriv AS\n-\n-    SELECT any_id, privilege_id\n-    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n-    WHERE drm.role_id = rp.role_id\n-  </entry>\n-  <entry key=\"user_search_resource\">\n-    CREATE VIEW user_search_resource AS\n-\n-    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeUser_ExternalResource st\n-  </entry>\n-  <entry key=\"user_search_group_res\">\n-    CREATE VIEW user_search_group_res AS\n-\n-    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n-    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- anyObject -->\n-  <entry key=\"anyObject_search\">\n-    CREATE VIEW anyObject_search AS\n-\n-    SELECT a.id as any_id, a.*,attrs,attrValues\n-    FROM AnyObject a, jsonb_array_elements(COALESCE(a.plainAttrs, '[{}]'::jsonb)) attrs,\n-    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n-  </entry>\n-  <entry key=\"anyObject_search_arelationship\">\n-    CREATE VIEW anyObject_search_arelationship AS\n-\n-    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n-    FROM ARelationship m\n-  </entry>\n-  <entry key=\"anyObject_search_amembership\">\n-    CREATE VIEW anyObject_search_amembership AS\n-\n-    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n-    FROM AMembership m, SyncopeGroup g\n-    WHERE m.group_id = g.id\n-  </entry>\n-  <entry key=\"anyObject_search_resource\">\n-    CREATE VIEW anyObject_search_resource AS\n-\n-    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AnyObject_ExternalResource st\n-  </entry>\n-  <entry key=\"anyObject_search_group_res\">\n-    CREATE VIEW anyObject_search_group_res AS\n-\n-    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n-    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n-    WHERE m.group_id = r.id AND st.group_id = r.id\n-  </entry>\n-\n-  <!-- group -->\n-  <entry key=\"group_search\">\n-    CREATE VIEW group_search AS\n-\n-    SELECT g.id as any_id, g.*,attrs,attrValues\n-    FROM SyncopeGroup g, jsonb_array_elements(COALESCE(g.plainAttrs, '[{}]'::jsonb)) attrs,\n-    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n-  </entry>\n-  <entry key=\"group_search_resource\">\n-    CREATE VIEW group_search_resource AS\n-\n-    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n-    FROM SyncopeGroup_ExternalResource st\n-  </entry>\n-\n-</properties>"},{"sha":"e3c8aecbc5e8be727847ed9c164d086d779d40f8","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/systemadministration/dbms.adoc","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b658b81cf49e77cdf7779bd0ef94df989e0650/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fdbms.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b658b81cf49e77cdf7779bd0ef94df989e0650/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fdbms.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fdbms.adoc?ref=b0b658b81cf49e77cdf7779bd0ef94df989e0650","patch":"@@ -74,23 +74,23 @@ Add the following dependency to `core/pom.xml`:\n ----\n <dependency>\n   <groupId>org.apache.syncope.core</groupId>\n-  <artifactId>syncope-core-persistence-jpa-pgjsonb</artifactId>\n+  <artifactId>syncope-core-persistence-jpa-json</artifactId>\n   <version>${syncope.version}</version>\n </dependency>\n ----\n \n In `persistence.properties`, replace as follows:\n \n ....\n-entity.factory=org.apache.syncope.core.persistence.jpa.entity.PGJPAEntityFactory\n-plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAPlainSchemaDAO\n-plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAPlainAttrDAO\n-plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAPlainAttrValueDAO\n-any.search.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAAnySearchDAO\n-user.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAUserDAO\n-group.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAGroupDAO\n-anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAAnyObjectDAO\n-conf.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAConfDAO\n+entity.factory=org.apache.syncope.core.persistence.jpa.entity.PGJPAJSONEntityFactory\n+plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainSchemaDAO\n+plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n+plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n+any.search.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnySearchDAO\n+user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n+group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n+anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n+conf.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONConfDAO\n ....\n \n In `provisioning.properties`, replace as follows:"}]}