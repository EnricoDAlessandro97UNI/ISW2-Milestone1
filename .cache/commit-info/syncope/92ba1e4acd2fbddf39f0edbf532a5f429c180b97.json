{"sha":"92ba1e4acd2fbddf39f0edbf532a5f429c180b97","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkyYmExZTRhY2QyZmJkZGYzOWYwZWRiZjUzMmE1ZjQyOWMxODBiOTc=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-06-12T07:15:00Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-06-12T07:15:00Z"},"message":"[SYNCOPE-501] improved management of user virtual attributes, implemented update of the only virtual attributes\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1602076 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"79024c1be13a0094874d41191235031a235c6444","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/79024c1be13a0094874d41191235031a235c6444"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/92ba1e4acd2fbddf39f0edbf532a5f429c180b97","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/92ba1e4acd2fbddf39f0edbf532a5f429c180b97","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/92ba1e4acd2fbddf39f0edbf532a5f429c180b97","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/92ba1e4acd2fbddf39f0edbf532a5f429c180b97/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"64921b27287602c91373effcef1e2125e54693eb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/64921b27287602c91373effcef1e2125e54693eb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/64921b27287602c91373effcef1e2125e54693eb"}],"stats":{"total":59,"additions":55,"deletions":4},"files":[{"sha":"39d52138aed353a3aba2b4dea379ad206f62452b","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/92ba1e4acd2fbddf39f0edbf532a5f429c180b97/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/92ba1e4acd2fbddf39f0edbf532a5f429c180b97/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=92ba1e4acd2fbddf39f0edbf532a5f429c180b97","patch":"@@ -21,6 +21,7 @@\n import java.lang.reflect.Method;\n import java.util.AbstractMap.SimpleEntry;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n@@ -350,12 +351,17 @@ public UserTO update(@RequestBody final UserMod userMod) {\n \n         if (tasks.isEmpty()) {\n             // SYNCOPE-459: take care of user virtual attributes ...\n-            binder.forceVirtualAttributes(\n+            final PropagationByResource propByResVirAttr = binder.forceVirtualAttributes(\n                     updated.getResult().getKey(),\n                     actual.getVirtualAttributesToBeRemoved(),\n                     actual.getVirtualAttributesToBeUpdated());\n+            // SYNCOPE-501: update only virtual attributes (if any of them changed), change password must be null\n+            tasks.addAll(propByResVirAttr.isEmpty() ? Collections.<PropagationTask>emptyList()\n+                    : propagationManager.getUserUpdateTaskIds(updated, null, actual.\n+                            getVirtualAttributesToBeRemoved(), actual.getVirtualAttributesToBeUpdated()));\n+        }\n \n-        } else {\n+        if (!tasks.isEmpty()) {\n             try {\n                 taskExecutor.execute(tasks, propagationReporter);\n             } catch (PropagationException e) {"},{"sha":"39d9344bd6b61b9d48c11d3823c2b42abd65cd68","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/92ba1e4acd2fbddf39f0edbf532a5f429c180b97/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/92ba1e4acd2fbddf39f0edbf532a5f429c180b97/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=92ba1e4acd2fbddf39f0edbf532a5f429c180b97","patch":"@@ -419,11 +419,11 @@ public UserTO getUserTO(final Long userId) {\n      * @param vAttrsToBeRemoved virtual attribute to be removed.\n      * @param vAttrsToBeUpdated virtyal attribute to be updated.\n      */\n-    public void forceVirtualAttributes(\n+    public PropagationByResource forceVirtualAttributes(\n             final Long id, final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated) {\n         final SyncopeUser syncopeUser = getUserFromId(id);\n \n-        fillVirtual(\n+        return fillVirtual(\n                 syncopeUser,\n                 vAttrsToBeRemoved,\n                 vAttrsToBeUpdated,"},{"sha":"fb8316f2147697a7d7869d3804fda2156579f583","filename":"core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java","status":"modified","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/92ba1e4acd2fbddf39f0edbf532a5f429c180b97/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/92ba1e4acd2fbddf39f0edbf532a5f429c180b97/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java?ref=92ba1e4acd2fbddf39f0edbf532a5f429c180b97","patch":"@@ -547,4 +547,49 @@ public void issueSYNCOPE459() {\n         userTO = userService.update(userTO.getId(), userMod);\n         assertNotNull(userTO.getVirtualAttributeMap().get(\"virtualdata\"));\n     }\n+\n+    @Test\n+    public void issueSYNCOPE501() {\n+        // 1. create user and propagate him on resource-db-virattr\n+        UserTO userTO = getUniqueSampleTO(\"syncope501@apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getVirtualAttributes().clear();\n+        \n+        userTO.getResources().add(RESOURCE_NAME_DBVIRATTR);\n+\n+        // virtualdata is mapped with username\n+        final AttributeTO virtualData = attributeTO(\"virtualdata\", \"syncope501@apache.org\");\n+        userTO.getVirtualAttributes().add(virtualData);\n+\n+        userTO = createUser(userTO);\n+\n+        assertNotNull(userTO.getVirtualAttributeMap().get(\"virtualdata\"));\n+        assertEquals(\"syncope501@apache.org\", userTO.getVirtualAttributeMap().get(\"virtualdata\").getValues().get(0));\n+\n+        // 2. update virtual attribute\n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+\n+        PropagationRequestTO propagationRequestTO = new PropagationRequestTO();\n+        propagationRequestTO.setResources(Collections.<String>emptySet());\n+        propagationRequestTO.setOnSyncope(Boolean.FALSE);\n+\n+        userMod.setPwdPropRequest(propagationRequestTO);\n+\n+        // change virtual attribute value\n+        final AttributeMod virtualDataMod = new AttributeMod();\n+        virtualDataMod.setSchema(\"virtualdata\");\n+        virtualDataMod.addValueToBeAdded(\"syncope501_updated@apache.org\");\n+        virtualDataMod.addValueToBeRemoved(\"syncope501@apache.org\");\n+        userMod.addVirtualAttributeToBeUpdated(virtualDataMod);\n+\n+        userTO = userService.update(userMod.getId(), userMod);\n+        assertNotNull(userTO);\n+        \n+        // 3. check that user virtual attribute has been really updated \n+        assertFalse(userTO.getVirtualAttributeMap().get(\"virtualdata\").getValues().isEmpty());\n+        assertEquals(\"syncope501_updated@apache.org\", userTO.getVirtualAttributeMap().get(\"virtualdata\").getValues().\n+                get(0));\n+    }\n }"}]}