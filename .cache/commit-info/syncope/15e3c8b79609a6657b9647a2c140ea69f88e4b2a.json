{"sha":"15e3c8b79609a6657b9647a2c140ea69f88e4b2a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE1ZTNjOGI3OTYwOWE2NjU3Yjk2NDdhMmMxNDBlYTY5Zjg4ZTRiMmE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-03T16:07:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-03T16:07:01Z"},"message":"Useless import static + some Java 7","tree":{"sha":"000011c1ad54e8d4d132af8686d000706cbac196","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/000011c1ad54e8d4d132af8686d000706cbac196"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/15e3c8b79609a6657b9647a2c140ea69f88e4b2a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/15e3c8b79609a6657b9647a2c140ea69f88e4b2a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/15e3c8b79609a6657b9647a2c140ea69f88e4b2a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/15e3c8b79609a6657b9647a2c140ea69f88e4b2a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9c132dc2db3c31445d2161867968f18d9da532a7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c132dc2db3c31445d2161867968f18d9da532a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9c132dc2db3c31445d2161867968f18d9da532a7"}],"stats":{"total":35,"additions":13,"deletions":22},"files":[{"sha":"25689de02ad80a415d23ad98b58e0ae960eea1db","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTasks.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/15e3c8b79609a6657b9647a2c140ea69f88e4b2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/15e3c8b79609a6657b9647a2c140ea69f88e4b2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java?ref=15e3c8b79609a6657b9647a2c140ea69f88e4b2a","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n-import static org.apache.syncope.client.console.panels.MultilevelPanel.FIRST_LEVEL_ID;\n-\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -37,13 +35,14 @@ public <T extends AnyTO> PropagationTasks(final PageReference pageReference, fin\n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n-        mlp.setFirstLevel(new PropagationTaskSearchResultPanel(FIRST_LEVEL_ID, resource, pageReference) {\n+        mlp.setFirstLevel(\n+                new PropagationTaskSearchResultPanel(MultilevelPanel.FIRST_LEVEL_ID, resource, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n \n             @Override\n             protected void viewTask(final PropagationTaskTO taskTO, final AjaxRequestTarget target) {\n-                mlp.next(\"task.view\", new TaskExecutionDetails<PropagationTaskTO>(taskTO, pageReference), target);\n+                mlp.next(\"task.view\", new TaskExecutionDetails<>(taskTO, pageReference), target);\n             }\n         });\n     }"},{"sha":"9db40a4630601bb283a2cea87fe3d15d133214dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PushTasks.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/15e3c8b79609a6657b9647a2c140ea69f88e4b2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/15e3c8b79609a6657b9647a2c140ea69f88e4b2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPushTasks.java?ref=15e3c8b79609a6657b9647a2c140ea69f88e4b2a","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n-import static org.apache.syncope.client.console.panels.MultilevelPanel.FIRST_LEVEL_ID;\n-\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -39,15 +37,15 @@ public <T extends AnyTO> PushTasks(final PageReference pageReference, final Stri\n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n-        mlp.setFirstLevel(new PushTaskSearchResultPanel(FIRST_LEVEL_ID, resource, pageReference) {\n+        mlp.setFirstLevel(new PushTaskSearchResultPanel(MultilevelPanel.FIRST_LEVEL_ID, resource, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n \n             @Override\n             protected void viewTask(final PushTaskTO taskTO, final AjaxRequestTarget target) {\n                 mlp.next(\n                         new StringResourceModel(\"task.view\", this, new Model<>(taskTO)).getObject(),\n-                        new TaskExecutionDetails<PushTaskTO>(taskTO, pageReference), target);\n+                        new TaskExecutionDetails<>(taskTO, pageReference), target);\n             }\n         });\n     }"},{"sha":"c253494823cb7817f574dfb83a69df54855de5fd","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskSearchResultPanel.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/15e3c8b79609a6657b9647a2c140ea69f88e4b2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/15e3c8b79609a6657b9647a2c140ea69f88e4b2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskSearchResultPanel.java?ref=15e3c8b79609a6657b9647a2c140ea69f88e4b2a","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n-import static org.apache.wicket.Component.ENABLE;\n-\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -78,15 +76,15 @@ protected SchedTaskSearchResultPanel(final String id, final Class<T> reference,\n             LOG.error(\"Falure instantiating task\", e);\n         }\n \n-        this.addNewItemPanelBuilder(new SchedTaskWizardBuilder<T>(schedTaskTO, pageRef), true);\n+        this.addNewItemPanelBuilder(new SchedTaskWizardBuilder<>(schedTaskTO, pageRef), true);\n \n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.TASK_CREATE);\n \n         initResultTable();\n     }\n \n     protected List<IColumn<T, String>> getFieldColumns() {\n-        final List<IColumn<T, String>> columns = new ArrayList<IColumn<T, String>>();\n+        final List<IColumn<T, String>> columns = new ArrayList<>();\n \n         columns.add(new PropertyColumn<T, String>(\n                 new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n@@ -109,8 +107,7 @@ public void populateItem(\n                 if (model != null && model.getObject() instanceof String) {\n                     String value = String.class.cast(model.getObject());\n                     if (value.length() > 20) {\n-                        item.add(new Label(componentId,\n-                                new Model<String>(\"...\" + value.substring(value.length() - 17))));\n+                        item.add(new Label(componentId, new Model<>(\"...\" + value.substring(value.length() - 17))));\n                     } else {\n                         item.add(new Label(componentId, getDataModel(rowModel)));\n                     }\n@@ -138,7 +135,7 @@ public void populateItem(\n \n     @Override\n     protected final List<IColumn<T, String>> getColumns() {\n-        final List<IColumn<T, String>> columns = new ArrayList<IColumn<T, String>>();\n+        final List<IColumn<T, String>> columns = new ArrayList<>();\n \n         columns.addAll(getFieldColumns());\n \n@@ -248,8 +245,7 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n \n             @Override\n             public ActionLinksPanel<T> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<T> panel\n-                        = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.builder(page.getPageReference());\n \n                 return panel.add(new ActionLink<T>() {\n \n@@ -284,7 +280,7 @@ protected Collection<ActionType> getBulkActions() {\n \n     @Override\n     protected SchedTasksProvider<T> dataProvider() {\n-        return new SchedTasksProvider<T>(reference, TaskType.SCHEDULED, rows);\n+        return new SchedTasksProvider<>(reference, TaskType.SCHEDULED, rows);\n     }\n \n     public class SchedTasksProvider<T extends SchedTaskTO> extends TaskDataProvider<T> {"},{"sha":"5f75b8db7884dee8dbedaec2cdfdd8c621032303","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SyncTasks.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/15e3c8b79609a6657b9647a2c140ea69f88e4b2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/15e3c8b79609a6657b9647a2c140ea69f88e4b2a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSyncTasks.java?ref=15e3c8b79609a6657b9647a2c140ea69f88e4b2a","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.tasks;\n \n-import static org.apache.syncope.client.console.panels.MultilevelPanel.FIRST_LEVEL_ID;\n-\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -39,15 +37,15 @@ public <T extends AnyTO> SyncTasks(final PageReference pageReference, final Stri\n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n         add(mlp);\n \n-        mlp.setFirstLevel(new SyncTaskSearchResultPanel(FIRST_LEVEL_ID, resource, pageReference) {\n+        mlp.setFirstLevel(new SyncTaskSearchResultPanel(MultilevelPanel.FIRST_LEVEL_ID, resource, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n \n             @Override\n             protected void viewTask(final SyncTaskTO taskTO, final AjaxRequestTarget target) {\n                 mlp.next(\n                         new StringResourceModel(\"task.view\", this, new Model<>(taskTO)).getObject(),\n-                        new TaskExecutionDetails<SyncTaskTO>(taskTO, pageReference), target);\n+                        new TaskExecutionDetails<>(taskTO, pageReference), target);\n             }\n         });\n     }"}]}