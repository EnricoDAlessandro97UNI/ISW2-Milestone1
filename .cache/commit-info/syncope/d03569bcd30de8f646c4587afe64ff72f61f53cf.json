{"sha":"d03569bcd30de8f646c4587afe64ff72f61f53cf","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQwMzU2OWJjZDMwZGU4ZjY0NmM0NTg3YWZlNjRmZjcyZjYxZjUzY2Y=","commit":{"author":{"name":"DimaAy","email":"dima.ayash@tirasa.net","date":"2020-09-14T12:10:31Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2020-09-14T12:10:31Z"},"message":"[SYNCOPE-1588] Consent Policy (#215)\n\n* [SYNCOPE-1588] Consent Policy\r\n\r\n* consent policy change structure\r\n\r\n* fix","tree":{"sha":"3a7fdceebeb984d3b148053820317c1c1f1601a9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3a7fdceebeb984d3b148053820317c1c1f1601a9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d03569bcd30de8f646c4587afe64ff72f61f53cf","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfX123CRBK7hj4Ov3rIwAAdHIIABXTM94QMyxdIm8WMqm2jAWe\nFBL/PwY90FCtaHxhw5PQNofo4ZsLagdHFeqCNv/jg39yOXBERPUi8wWG7pQiflGr\nk70/1DtpXQffWIvcnh6VQnOgc95O/8WMnP8Z2XhKzzWvKouiN3VsMImCedakEvYz\nxFiwwGqHpXfX+fExdgP4vVMUfHw8nvkhMOjDM6trZphsuOOFEc4nxm3OBPoSrj4x\nSxhjn/g/OGSpLUrJ6VcWFc8tWTyzlMOmqDqp4GYcZ8XcpMQqIA3G81DOapkGCX4e\n0FkKXHUmzctiNKl5w+x8znu4vNGhcH4r37qVDzZthQB47sLKRClrL3HcU0QoI2k=\n=Cxic\n-----END PGP SIGNATURE-----\n","payload":"tree 3a7fdceebeb984d3b148053820317c1c1f1601a9\nparent 833e551dc42cf017c5a698a7dd2d18b19d61796d\nauthor DimaAy <dima.ayash@tirasa.net> 1600085431 +0200\ncommitter GitHub <noreply@github.com> 1600085431 +0200\n\n[SYNCOPE-1588] Consent Policy (#215)\n\n* [SYNCOPE-1588] Consent Policy\r\n\r\n* consent policy change structure\r\n\r\n* fix"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d03569bcd30de8f646c4587afe64ff72f61f53cf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d03569bcd30de8f646c4587afe64ff72f61f53cf","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d03569bcd30de8f646c4587afe64ff72f61f53cf/comments","author":{"login":"DimaAy","id":19169906,"node_id":"MDQ6VXNlcjE5MTY5OTA2","avatar_url":"https://avatars.githubusercontent.com/u/19169906?v=4","gravatar_id":"","url":"https://api.github.com/users/DimaAy","html_url":"https://github.com/DimaAy","followers_url":"https://api.github.com/users/DimaAy/followers","following_url":"https://api.github.com/users/DimaAy/following{/other_user}","gists_url":"https://api.github.com/users/DimaAy/gists{/gist_id}","starred_url":"https://api.github.com/users/DimaAy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DimaAy/subscriptions","organizations_url":"https://api.github.com/users/DimaAy/orgs","repos_url":"https://api.github.com/users/DimaAy/repos","events_url":"https://api.github.com/users/DimaAy/events{/privacy}","received_events_url":"https://api.github.com/users/DimaAy/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"833e551dc42cf017c5a698a7dd2d18b19d61796d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/833e551dc42cf017c5a698a7dd2d18b19d61796d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/833e551dc42cf017c5a698a7dd2d18b19d61796d"}],"stats":{"total":99,"additions":99,"deletions":0},"files":[{"sha":"310e8dc4c0767533f144baa8272569645444b6ee","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/policy/AllowedAttrReleasePolicyConf.java","status":"modified","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d03569bcd30de8f646c4587afe64ff72f61f53cf/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAllowedAttrReleasePolicyConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d03569bcd30de8f646c4587afe64ff72f61f53cf/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAllowedAttrReleasePolicyConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAllowedAttrReleasePolicyConf.java?ref=d03569bcd30de8f646c4587afe64ff72f61f53cf","patch":"@@ -18,8 +18,14 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n \n public class AllowedAttrReleasePolicyConf implements AttrReleasePolicyConf {\n \n@@ -29,9 +35,65 @@ public class AllowedAttrReleasePolicyConf implements AttrReleasePolicyConf {\n      * Specify the list of allowed attribute to release.\n      * Use the special {@code *} to release everything.\n      */\n+    @JacksonXmlElementWrapper(localName = \"allowedAttrs\")\n+    @JacksonXmlProperty(localName = \"allowedAttrs\")\n+    @JsonProperty(\"allowedAttrs\")\n     private final List<String> allowedAttrs = new ArrayList<>();\n \n+    private ConsentPolicy consentPolicy;\n+\n     public List<String> getAllowedAttrs() {\n         return allowedAttrs;\n     }\n+\n+    public ConsentPolicy getConsentPolicy() {\n+        return consentPolicy;\n+    }\n+\n+    public void setConsentPolicy(final ConsentPolicy consentPolicy) {\n+        this.consentPolicy = consentPolicy;\n+    }\n+\n+    public class ConsentPolicy implements Serializable {\n+\n+        private static final long serialVersionUID = 6744647343202583865L;\n+\n+        private Boolean status = null;\n+\n+        @JacksonXmlElementWrapper(localName = \"excludedAttributes\")\n+        @JacksonXmlProperty(localName = \"excludedAttributes\")\n+        @JsonProperty(\"excludedAttributes\")\n+        private final Set<String> excludedAttrs = new HashSet<>();\n+\n+        @JacksonXmlElementWrapper(localName = \"includeOnlyAttrs\")\n+        @JacksonXmlProperty(localName = \"includeOnlyAttrs\")\n+        @JsonProperty(\"includeOnlyAttrs\")\n+        private final Set<String> includeOnlyAttrs = new HashSet<>();\n+\n+        public Boolean getStatus() {\n+            return status;\n+        }\n+\n+        public void setStatus(final Boolean status) {\n+            this.status = status;\n+        }\n+\n+        public Set<String> getExcludedAttrs() {\n+            return excludedAttrs;\n+        }\n+\n+        public void addExcludedAttr(final String attr) {\n+            excludedAttrs.add(attr);\n+        }\n+\n+        public Set<String> getIncludeOnlyAttrs() {\n+            return includeOnlyAttrs;\n+        }\n+\n+        public void addIncludeOnlyAttribute(final String attr) {\n+            includeOnlyAttrs.add(attr);\n+        }\n+\n+    }\n+\n }"},{"sha":"918e4c477636d542f138444802b8316e047bc482","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AbstractClientAppTest.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d03569bcd30de8f646c4587afe64ff72f61f53cf/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d03569bcd30de8f646c4587afe64ff72f61f53cf/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAbstractClientAppTest.java?ref=d03569bcd30de8f646c4587afe64ff72f61f53cf","patch":"@@ -41,6 +41,12 @@ protected AttrReleasePolicy buildAndSaveAttrRelPolicy() {\n \n         AllowedAttrReleasePolicyConf conf = new AllowedAttrReleasePolicyConf();\n         conf.getAllowedAttrs().addAll(List.of(\"cn\", \"givenName\"));\n+\n+        AllowedAttrReleasePolicyConf.ConsentPolicy consentPolicy = conf.new ConsentPolicy();\n+        consentPolicy.setStatus(Boolean.TRUE);\n+        consentPolicy.getIncludeOnlyAttrs().addAll(Set.of(\"cn\"));\n+        conf.setConsentPolicy(consentPolicy);\n+\n         attrRelPolicy.setConf(conf);\n \n         return policyDAO.save(attrRelPolicy);"},{"sha":"a1cae8fe0036255883f0c71aa52d9d403ed84fa3","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PolicyTest.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d03569bcd30de8f646c4587afe64ff72f61f53cf/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d03569bcd30de8f646c4587afe64ff72f61f53cf/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java?ref=d03569bcd30de8f646c4587afe64ff72f61f53cf","patch":"@@ -227,12 +227,19 @@ public void create() {\n \n         AllowedAttrReleasePolicyConf attrReleasePolicyConf = new AllowedAttrReleasePolicyConf();\n         attrReleasePolicyConf.getAllowedAttrs().addAll(List.of(\"*\"));\n+\n+        AllowedAttrReleasePolicyConf.ConsentPolicy consentPolicy = attrReleasePolicyConf.new ConsentPolicy();\n+        consentPolicy.setStatus(Boolean.TRUE);\n+        consentPolicy.getIncludeOnlyAttrs().addAll(Set.of(\"cn\"));\n+        attrReleasePolicyConf.setConsentPolicy(consentPolicy);\n         attrReleasePolicy.setConf(attrReleasePolicyConf);\n \n         attrReleasePolicy = policyDAO.save(attrReleasePolicy);\n \n         assertNotNull(attrReleasePolicy);\n         assertNotNull(attrReleasePolicy.getKey());\n+        assertNotNull(((AllowedAttrReleasePolicyConf) attrReleasePolicy.getConf()).getAllowedAttrs());\n+        assertNotNull(((AllowedAttrReleasePolicyConf) attrReleasePolicy.getConf()).getConsentPolicy());\n \n         afterCount = policyDAO.findAll().size();\n         assertEquals(afterCount, beforeCount + 1);"},{"sha":"b4bac440df21a980993fee59c056f266613f82a6","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d03569bcd30de8f646c4587afe64ff72f61f53cf/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d03569bcd30de8f646c4587afe64ff72f61f53cf/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=d03569bcd30de8f646c4587afe64ff72f61f53cf","patch":"@@ -848,6 +848,12 @@ protected static AttrReleasePolicyTO buildAttrReleasePolicyTO() {\n \n         AllowedAttrReleasePolicyConf conf = new AllowedAttrReleasePolicyConf();\n         conf.getAllowedAttrs().addAll(List.of(\"cn\", \"givenName\"));\n+        \n+        AllowedAttrReleasePolicyConf.ConsentPolicy consentPolicy = conf.new ConsentPolicy();\n+        consentPolicy.setStatus(Boolean.TRUE);\n+        consentPolicy.getIncludeOnlyAttrs().addAll(Set.of(\"cn\"));\n+        conf.setConsentPolicy(consentPolicy);\n+        \n         policy.setConf(conf);\n \n         return policy;"},{"sha":"1e0162c7001e0be866c4d61b480e51b1b9fb929a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PolicyITCase.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d03569bcd30de8f646c4587afe64ff72f61f53cf/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d03569bcd30de8f646c4587afe64ff72f61f53cf/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPolicyITCase.java?ref=d03569bcd30de8f646c4587afe64ff72f61f53cf","patch":"@@ -283,6 +283,7 @@ public void updateAttrReleasePolicy() {\n         assertTrue(policyConf.getAllowedAttrs().contains(\"cn\"));\n         assertTrue(policyConf.getAllowedAttrs().contains(\"postalCode\"));\n         assertTrue(policyConf.getAllowedAttrs().contains(\"givenName\"));\n+        assertTrue(policyConf.getConsentPolicy().getIncludeOnlyAttrs().contains(\"cn\"));\n     }\n \n     @Test"},{"sha":"a2d196adf032d898ad48dcfdb93c63bcb959f615","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RealmITCase.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d03569bcd30de8f646c4587afe64ff72f61f53cf/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d03569bcd30de8f646c4587afe64ff72f61f53cf/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java?ref=d03569bcd30de8f646c4587afe64ff72f61f53cf","patch":"@@ -299,6 +299,10 @@ public void deletingAttributeReleasePolicy() {\n         AllowedAttrReleasePolicyConf ruleConf = new AllowedAttrReleasePolicyConf();\n         ruleConf.getAllowedAttrs().addAll(List.of(\"cn\", \"givenName\"));\n \n+        AllowedAttrReleasePolicyConf.ConsentPolicy consentPolicy1 = ruleConf.new ConsentPolicy();\n+        consentPolicy1.getIncludeOnlyAttrs().addAll(Set.of(\"cn\"));\n+        ruleConf.setConsentPolicy(consentPolicy1);\n+\n         AttrReleasePolicyTO policy = new AttrReleasePolicyTO();\n         policy.setDescription(\"Test Attribute Release policy\");\n         policy.setConf(ruleConf);"},{"sha":"9cdece10610271a6da7a8c399434adc9e979c2a8","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/AllowedAttrReleaseMapper.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d03569bcd30de8f646c4587afe64ff72f61f53cf/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAllowedAttrReleaseMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d03569bcd30de8f646c4587afe64ff72f61f53cf/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAllowedAttrReleaseMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAllowedAttrReleaseMapper.java?ref=d03569bcd30de8f646c4587afe64ff72f61f53cf","patch":"@@ -22,7 +22,10 @@\n import org.apache.syncope.common.lib.policy.AttrReleasePolicyConf;\n import org.apereo.cas.services.DenyAllAttributeReleasePolicy;\n import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n+import org.apereo.cas.services.RegisteredServiceConsentPolicy;\n import org.apereo.cas.services.ReturnAllowedAttributeReleasePolicy;\n+import org.apereo.cas.services.consent.DefaultRegisteredServiceConsentPolicy;\n+import org.apereo.cas.util.model.TriStateBoolean;\n import org.springframework.stereotype.Component;\n \n @AttrReleaseMapFor(attrReleasePolicyConfClass = AllowedAttrReleasePolicyConf.class)\n@@ -40,6 +43,16 @@ public RegisteredServiceAttributeReleasePolicy build(final AttrReleasePolicyConf\n             attributeReleasePolicy = new ReturnAllowedAttributeReleasePolicy();\n             ((ReturnAllowedAttributeReleasePolicy) attributeReleasePolicy).\n                     setAllowedAttributes((aarpc.getAllowedAttrs()));\n+\n+            if (aarpc.getConsentPolicy() != null) {\n+                RegisteredServiceConsentPolicy consentPolicy =\n+                        new DefaultRegisteredServiceConsentPolicy(aarpc.getConsentPolicy().getExcludedAttrs(),\n+                                aarpc.getConsentPolicy().getIncludeOnlyAttrs());\n+                ((DefaultRegisteredServiceConsentPolicy) consentPolicy).setStatus(\n+                        aarpc.getConsentPolicy().getStatus() == null ? TriStateBoolean.UNDEFINED\n+                        : TriStateBoolean.fromBoolean(aarpc.getConsentPolicy().getStatus()));\n+                ((ReturnAllowedAttributeReleasePolicy) attributeReleasePolicy).setConsentPolicy(consentPolicy);\n+            }\n         }\n \n         return attributeReleasePolicy;"}]}