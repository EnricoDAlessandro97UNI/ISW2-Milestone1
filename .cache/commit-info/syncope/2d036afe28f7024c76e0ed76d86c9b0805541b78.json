{"sha":"2d036afe28f7024c76e0ed76d86c9b0805541b78","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJkMDM2YWZlMjhmNzAyNGM3NmUwZWQ3NmQ4NmM5YjA4MDU1NDFiNzg=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-02T16:32:13Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-02T16:32:13Z"},"message":"added aby object command, SYNCOPE-158","tree":{"sha":"de39beb1520bc8521614fcf653e8930734b2f75a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/de39beb1520bc8521614fcf653e8930734b2f75a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2d036afe28f7024c76e0ed76d86c9b0805541b78","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2d036afe28f7024c76e0ed76d86c9b0805541b78","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2d036afe28f7024c76e0ed76d86c9b0805541b78","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2d036afe28f7024c76e0ed76d86c9b0805541b78/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd"}],"stats":{"total":577,"additions":576,"deletions":1},"files":[{"sha":"dc62ba9669ed268060b7ee8731b70335eb6a70ab","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/any/AbstractAnyCommand.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAbstractAnyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAbstractAnyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAbstractAnyCommand.java?ref=2d036afe28f7024c76e0ed76d86c9b0805541b78","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.any;\n+\n+public abstract class AbstractAnyCommand {\n+\n+    protected final AnySyncopeOperations anySyncopeOperations = new AnySyncopeOperations();\n+\n+    protected final AnyResultManager anyResultManager = new AnyResultManager();\n+\n+}"},{"sha":"a8bed9964047928bc1cff44cb843dd180c16cd4c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/any/AnyCommand.java","status":"added","additions":123,"deletions":0,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyCommand.java?ref=2d036afe28f7024c76e0ed76d86c9b0805541b78","patch":"@@ -0,0 +1,123 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.any;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+@Command(name = \"any\")\n+public class AnyCommand extends AbstractCommand {\n+\n+    private static final String HELP_MESSAGE = \"\\nUsage: any [options]\\n\"\n+            + \"  Options:\\n\"\n+            + \"    --help \\n\"\n+            + \"    --details \\n\"\n+            + \"    --list \\n\"\n+            + \"    --read \\n\"\n+            + \"       Syntax: --read {ANY-ID} {ANY-ID} [...]\\n\"\n+            + \"    --read-attr-by-schema-type {ANY-ID} {SCHEMA-TYPE}\\n\"\n+            + \"       Schema type: PLAIN / DERIVED / VIRTUAL\\n\"\n+            + \"    --read-attr-by-schema {ANY-ID} {SCHEMA-TYPE} {SCHEMA-NAME}\\n\"\n+            + \"       Schema type: PLAIN / DERIVED / VIRTUAL\\n\"\n+            + \"    --delete \\n\"\n+            + \"       Syntax: --delete {ANY-ID} {ANY-ID} [...]\\n\";\n+\n+    @Override\n+    public void execute(final Input input) {\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(AnyOptions.HELP.getOptionName());\n+        }\n+        switch (AnyOptions.fromName(input.getOption())) {\n+            case DETAILS:\n+                break;\n+            case LIST:\n+                new AnyList(input).list();\n+                break;\n+            case READ:\n+                new AnyRead(input).read();\n+                break;\n+            case READ_ATTRIBUTES_BY_SCHEMA:\n+                new AnyReadAttributeBySchemaTypeAndSchemaName(input).read();\n+                break;\n+            case READ_ATTRIBUTES_BY_SCHEMA_TYPE:\n+                new AnyReadAttributesBySchemaType(input).read();\n+                break;\n+            case DELETE:\n+                new AnyDelete(input).delete();\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                new AnyResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n+        }\n+    }\n+\n+    @Override\n+    public String getHelpMessage() {\n+        return HELP_MESSAGE;\n+    }\n+\n+    private enum AnyOptions {\n+\n+        HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n+        LIST(\"--list\"),\n+        READ(\"--read\"),\n+        READ_ATTRIBUTES_BY_SCHEMA(\"--read-attr-by-schema\"),\n+        READ_ATTRIBUTES_BY_SCHEMA_TYPE(\"--read-attr-by-schema-type\"),\n+        DELETE(\"--delete\");\n+\n+        private final String optionName;\n+\n+        AnyOptions(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static AnyOptions fromName(final String name) {\n+            AnyOptions optionToReturn = HELP;\n+            for (final AnyOptions option : AnyOptions.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n+                }\n+            }\n+            return optionToReturn;\n+        }\n+\n+        public static List<String> toList() {\n+            final List<String> options = new ArrayList<>();\n+            for (final AnyOptions value : values()) {\n+                options.add(value.getOptionName());\n+            }\n+            return options;\n+        }\n+    }\n+}"},{"sha":"170cb572c2cdd2769443ea845d849652b5def0aa","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/any/AnyDelete.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyDelete.java?ref=2d036afe28f7024c76e0ed76d86c9b0805541b78","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.any;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class AnyDelete extends AbstractAnyCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AnyDelete.class);\n+\n+    private static final String DELETE_HELP_MESSAGE = \"any --delete {ANY-ID} {ANY-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public AnyDelete(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void delete() {\n+        if (input.parameterNumber() >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    anySyncopeOperations.delete(parameter);\n+                    anyResultManager.deletedMessage(\"Any\", parameter);\n+                } catch (final SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting group\", ex);\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        anyResultManager.notFoundError(\"any\", parameter);\n+                    } else {\n+                        anyResultManager.genericError(ex.getMessage());\n+                    }\n+                } catch (final NumberFormatException ex) {\n+                    anyResultManager.numberFormatException(\"any\", parameter);\n+                }\n+            }\n+        } else {\n+            anyResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"5b2ee560e1c4f04de3a68a6b1c831863f413354f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/any/AnyList.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyList.java?ref=2d036afe28f7024c76e0ed76d86c9b0805541b78","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.any;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class AnyList extends AbstractAnyCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AnyList.class);\n+\n+    private static final String LIST_HELP_MESSAGE = \"any --list\";\n+\n+    private final Input input;\n+\n+    public AnyList(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void list() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                anyResultManager.printAnys(anySyncopeOperations.list());\n+            } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing any object\", ex);\n+                anyResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            anyResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"ca50b919b05d6adbb6ad8964c0298d06c82c6a09","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/any/AnyRead.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyRead.java?ref=2d036afe28f7024c76e0ed76d86c9b0805541b78","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.any;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class AnyRead extends AbstractAnyCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AnyRead.class);\n+\n+    private static final String READ_HELP_MESSAGE = \"any --read {ANY-ID} {ANY-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public AnyRead(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.parameterNumber() >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    anyResultManager.printGroup(anySyncopeOperations.read(parameter));\n+                } catch (final SyncopeClientException ex) {\n+                    LOG.error(\"Error reading group\", ex);\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        anyResultManager.notFoundError(\"Any object\", parameter);\n+                    } else {\n+                        anyResultManager.genericError(ex.getMessage());\n+                    }\n+                } catch (final NumberFormatException ex) {\n+                    anyResultManager.numberFormatException(\"any object\", parameter);\n+                }\n+            }\n+        } else {\n+            anyResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"b1cd41447fa8a0a5cb0f53fc1e4c2090c8a441f2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/any/AnyReadAttributeBySchemaTypeAndSchemaName.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyReadAttributeBySchemaTypeAndSchemaName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyReadAttributeBySchemaTypeAndSchemaName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyReadAttributeBySchemaTypeAndSchemaName.java?ref=2d036afe28f7024c76e0ed76d86c9b0805541b78","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.any;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.util.CommandUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class AnyReadAttributeBySchemaTypeAndSchemaName extends AbstractAnyCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AnyReadAttributeBySchemaTypeAndSchemaName.class);\n+\n+    private static final String READ_HELP_MESSAGE\n+            = \"any --read-attr-by-schema {ANY-ID} {SCHEMA-TYPE} {SCHEMA-NAME}\\n\"\n+            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n+\n+    private final Input input;\n+\n+    public AnyReadAttributeBySchemaTypeAndSchemaName(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.parameterNumber() == 3) {\n+            try {\n+                anyResultManager.printAttribute(anySyncopeOperations.readAttribute(\n+                        input.firstParameter(), input.secondParameter(), input.thirdParameter()));\n+            } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading any object\", ex);\n+                anyResultManager.genericError(ex.getMessage());\n+            } catch (final NumberFormatException ex) {\n+                anyResultManager.numberFormatException(\"any object\", input.firstParameter());\n+            } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error reading schema\", ex);\n+                anyResultManager.typeNotValidError(\n+                        \"schema\", input.secondParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n+            }\n+        } else {\n+            anyResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"602c68fe467aa520e0e429d0fd1f6eeb0347ab1c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/any/AnyReadAttributesBySchemaType.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyReadAttributesBySchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyReadAttributesBySchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyReadAttributesBySchemaType.java?ref=2d036afe28f7024c76e0ed76d86c9b0805541b78","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.any;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.util.CommandUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class AnyReadAttributesBySchemaType extends AbstractAnyCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(AnyReadAttributesBySchemaType.class);\n+\n+    private static final String READ_HELP_MESSAGE = \"any --read-attr-by-schema-type {ANY-ID} {SCHEMA-TYPE}\\n\"\n+            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n+\n+    private final Input input;\n+\n+    public AnyReadAttributesBySchemaType(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.parameterNumber() == 2) {\n+            try {\n+                anyResultManager.printAttributes(anySyncopeOperations.readAttributes(\n+                        input.firstParameter(), input.secondParameter()));\n+            } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading any\", ex);\n+                if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    anyResultManager.notFoundError(\"Any\", input.firstParameter());\n+                } else {\n+                    anyResultManager.genericError(ex.getMessage());\n+                }\n+            } catch (final NumberFormatException ex) {\n+                anyResultManager.numberFormatException(\"any\", input.firstParameter());\n+            } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error reading schema\", ex);\n+                anyResultManager.typeNotValidError(\n+                        \"schema\", input.secondParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n+            }\n+        } else {\n+            anyResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"3b50406bfb97ad724c8e10572c748261f1787d34","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/any/AnyResultManager.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnyResultManager.java?ref=2d036afe28f7024c76e0ed76d86c9b0805541b78","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.any;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+\n+public class AnyResultManager extends CommonsResultManager {\n+\n+    public void printAnys(final List<AnyObjectTO> anyObjectTOs) {\n+        System.out.println(\"\");\n+        for (final AnyObjectTO anyObjectTO : anyObjectTOs) {\n+            printGroup(anyObjectTO);\n+        }\n+    }\n+\n+    public void printGroup(final AnyObjectTO anyObjectTO) {\n+        System.out.println(\" > ANY ID: \" + anyObjectTO.getKey());\n+        System.out.println(\"    type: \" + anyObjectTO.getType());\n+        System.out.println(\"    realm: \" + anyObjectTO.getRealm());\n+        System.out.println(\"    status: \" + anyObjectTO.getStatus());\n+        System.out.println(\"    RESOURCES: \");\n+        printResources(anyObjectTO.getResources());\n+        System.out.println(\"    PLAIN ATTRIBUTES: \");\n+        printAttributes(anyObjectTO.getPlainAttrs());\n+        System.out.println(\"    DERIVED ATTRIBUTES: \");\n+        printAttributes(anyObjectTO.getDerAttrs());\n+        System.out.println(\"    VIRTUAL ATTRIBUTES: \");\n+        printAttributes(anyObjectTO.getVirAttrs());\n+    }\n+\n+    private void printResources(final Set<String> resources) {\n+        for (final String resource : resources) {\n+            System.out.println(\"      - \" + resource);\n+        }\n+    }\n+\n+    public void printAttributes(final Set<AttrTO> attributes) {\n+        for (final AttrTO attribute : attributes) {\n+            printAttribute(attribute);\n+        }\n+        System.out.println(\"\");\n+    }\n+\n+    public void printAttribute(final AttrTO attribute) {\n+        final StringBuilder attributeMessageBuilder = new StringBuilder();\n+        attributeMessageBuilder.append(\"     - \")\n+                .append(attribute.getSchema())\n+                .append(\": \")\n+                .append(attribute.getValues());\n+        if (attribute.isReadonly()) {\n+            attributeMessageBuilder.append(\" - is readonly\");\n+        }\n+        System.out.println(attributeMessageBuilder.toString());\n+    }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"groups details\", details);\n+    }\n+}"},{"sha":"5156952755d6077052cb5916c4775c09afc0972f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/any/AnySyncopeOperations.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnySyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnySyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fany%2FAnySyncopeOperations.java?ref=2d036afe28f7024c76e0ed76d86c9b0805541b78","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.any;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n+import org.apache.syncope.common.rest.api.service.AnyObjectService;\n+\n+public class AnySyncopeOperations {\n+\n+    private final AnyObjectService anyObjectService = SyncopeServices.get(AnyObjectService.class);\n+\n+    public List<AnyObjectTO> list() {\n+        return anyObjectService.list(new AnyListQuery()).getResult();\n+    }\n+\n+    public AnyObjectTO read(final String anyId) {\n+        return anyObjectService.read(Long.valueOf(anyId));\n+    }\n+\n+    public Set<AttrTO> readAttributes(final String anyId, final String schemaType) {\n+        return anyObjectService.read(Long.valueOf(anyId), SchemaType.valueOf(schemaType));\n+    }\n+\n+    public AttrTO readAttribute(final String anyId, final String schemaType, final String schema) {\n+        return anyObjectService.read(Long.valueOf(anyId), SchemaType.valueOf(schemaType), schema);\n+    }\n+\n+    public void delete(final String anyId) {\n+        anyObjectService.delete(Long.valueOf(anyId));\n+    }\n+}"},{"sha":"6a8cf69d3eec386dc3263362e6dab30f28cb70c0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupResultManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d036afe28f7024c76e0ed76d86c9b0805541b78/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java?ref=2d036afe28f7024c76e0ed76d86c9b0805541b78","patch":"@@ -68,7 +68,7 @@ public void printAttributes(final Set<AttrTO> attributes) {\n \n     public void printAttribute(final AttrTO attribute) {\n         final StringBuilder attributeMessageBuilder = new StringBuilder();\n-        attributeMessageBuilder.append(\"      \")\n+        attributeMessageBuilder.append(\"     - \")\n                 .append(attribute.getSchema())\n                 .append(\": \")\n                 .append(attribute.getValues());"}]}