{"sha":"0071bc83fbb3dcf80496fb6a0af19434a0bc122f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAwNzFiYzgzZmJiM2RjZjgwNDk2ZmI2YTBhZjE5NDM0YTBiYzEyMmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-16T08:09:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-16T08:09:52Z"},"message":"[SYNCOPE-259] [SYNCOPE-172] Removing confusing toString() from AttributableType breaking ResourceMappingPanel + adding some final keywords to ResourceServiceProxy (this should be taken as standard practcice as other defined PMD / Findbugs / Checkstyle rules)\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1433846 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0c79cfe970f513e7263473ea019198ab963b074d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0c79cfe970f513e7263473ea019198ab963b074d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0071bc83fbb3dcf80496fb6a0af19434a0bc122f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0071bc83fbb3dcf80496fb6a0af19434a0bc122f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0071bc83fbb3dcf80496fb6a0af19434a0bc122f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0071bc83fbb3dcf80496fb6a0af19434a0bc122f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5619748edec5f2b5ebab5599489b8a14b5d23781","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5619748edec5f2b5ebab5599489b8a14b5d23781","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5619748edec5f2b5ebab5599489b8a14b5d23781"}],"stats":{"total":41,"additions":18,"deletions":23},"files":[{"sha":"5dc259a310a8c2b58c7ef30803fe083aed037789","filename":"client/src/main/java/org/apache/syncope/services/proxy/ResourceServiceProxy.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0071bc83fbb3dcf80496fb6a0af19434a0bc122f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FResourceServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0071bc83fbb3dcf80496fb6a0af19434a0bc122f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FResourceServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FResourceServiceProxy.java?ref=0071bc83fbb3dcf80496fb6a0af19434a0bc122f","patch":"@@ -16,14 +16,12 @@\n  * specific language governing permissions and limitations\r\n  * under the License.\r\n  */\r\n-\r\n package org.apache.syncope.services.proxy;\r\n \r\n import java.util.Arrays;\r\n import java.util.HashSet;\r\n import java.util.List;\r\n import java.util.Set;\r\n-\r\n import org.apache.syncope.client.to.ConnObjectTO;\r\n import org.apache.syncope.client.to.ResourceTO;\r\n import org.apache.syncope.services.ResourceService;\r\n@@ -32,29 +30,30 @@\n \r\n public class ResourceServiceProxy extends SpringServiceProxy implements ResourceService {\r\n \r\n-    public ResourceServiceProxy(String baseUrl, RestTemplate restTemplate) {\r\n+    public ResourceServiceProxy(final String baseUrl, final RestTemplate restTemplate) {\r\n         super(baseUrl, restTemplate);\r\n     }\r\n \r\n     @Override\r\n-    public ResourceTO create(ResourceTO resourceTO) {\r\n+    public ResourceTO create(final ResourceTO resourceTO) {\r\n         return getRestTemplate().postForObject(baseUrl + \"resource/create.json\", resourceTO, ResourceTO.class);\r\n     }\r\n \r\n     @Override\r\n-    public ResourceTO update(String resourceName, ResourceTO resourceTO) {\r\n+    public ResourceTO update(final String resourceName, final ResourceTO resourceTO) {\r\n         return getRestTemplate().postForObject(baseUrl + \"resource/update.json\", resourceTO, ResourceTO.class);\r\n     }\r\n \r\n     @Override\r\n-    public ResourceTO delete(String resourceName) {\r\n+    public ResourceTO delete(final String resourceName) {\r\n         return getRestTemplate().getForObject(baseUrl + \"resource/delete/{resourceName}.json\", ResourceTO.class,\r\n                 resourceName);\r\n     }\r\n \r\n     @Override\r\n-    public ResourceTO read(String resourceName) {\r\n-        return getRestTemplate().getForObject(baseUrl + \"resource/read/{resourceName}.json\", ResourceTO.class, resourceName);\r\n+    public ResourceTO read(final String resourceName) {\r\n+        return getRestTemplate().getForObject(baseUrl + \"resource/read/{resourceName}.json\", ResourceTO.class,\r\n+                resourceName);\r\n     }\r\n \r\n     @Override\r\n@@ -69,23 +68,24 @@ public List<ResourceTO> list() {\n     }\r\n \r\n     @Override\r\n-    public List<ResourceTO> list(Long connInstanceId) {\r\n-        if (connInstanceId == null)\r\n+    public List<ResourceTO> list(final Long connInstanceId) {\r\n+        if (connInstanceId == null) {\r\n             return list();\r\n+        }\r\n \r\n-        return Arrays.asList(getRestTemplate().getForObject(baseUrl + \"resource/list.json?connInstanceId={connId}\", ResourceTO[].class,\r\n-                connInstanceId));\r\n+        return Arrays.asList(getRestTemplate().getForObject(baseUrl + \"resource/list.json?connInstanceId={connId}\",\r\n+                ResourceTO[].class, connInstanceId));\r\n     }\r\n \r\n     @Override\r\n-    public ConnObjectTO getConnector(String resourceName, AttributableType type, String objectId) {\r\n+    public ConnObjectTO getConnector(final String resourceName, final AttributableType type, final String objectId) {\r\n         return getRestTemplate().getForObject(baseUrl + \"resource/{resourceName}/read/{type}/{objectId}.json\",\r\n-                ConnObjectTO.class, resourceName, type.toString().toUpperCase(), objectId);\r\n+                ConnObjectTO.class, resourceName, type.name(), objectId);\r\n     }\r\n \r\n     @Override\r\n-    public boolean check(ResourceTO resourceTO) {\r\n-        return getRestTemplate().postForObject(baseUrl + \"resource/check.json\", resourceTO, Boolean.class).booleanValue();\r\n+    public boolean check(final ResourceTO resourceTO) {\r\n+        return getRestTemplate().postForObject(baseUrl + \"resource/check.json\", resourceTO, Boolean.class).\r\n+                booleanValue();\r\n     }\r\n-\r\n }\r"},{"sha":"99e30c0a22ed9100e5d50d5f552409f4fa8fe452","filename":"client/src/main/java/org/apache/syncope/types/AttributableType.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0071bc83fbb3dcf80496fb6a0af19434a0bc122f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FAttributableType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0071bc83fbb3dcf80496fb6a0af19434a0bc122f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FAttributableType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FAttributableType.java?ref=0071bc83fbb3dcf80496fb6a0af19434a0bc122f","patch":"@@ -24,9 +24,4 @@ public enum AttributableType {\n     ROLE,\n     MEMBERSHIP;\n \n-    @Override\n-    public String toString() {\n-        return name().toLowerCase();\n-    };\n-\n }"},{"sha":"ca7d8510fded489f6d8075d3652792ff6b792efb","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0071bc83fbb3dcf80496fb6a0af19434a0bc122f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0071bc83fbb3dcf80496fb6a0af19434a0bc122f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=0071bc83fbb3dcf80496fb6a0af19434a0bc122f","patch":"@@ -555,7 +555,7 @@ private List<IntMappingType> getAttributeTypes(final AttributableType entity) {\n         final List<IntMappingType> res = new ArrayList<IntMappingType>();\n \n         if (entity != null) {\n-            res.addAll(IntMappingType.getAttributeTypes(AttributableType.valueOf(entity.toString())));\n+            res.addAll(IntMappingType.getAttributeTypes(AttributableType.valueOf(entity.name())));\n         }\n \n         return res;"}]}