{"sha":"d30f94d5ec28097341bd02fa4a62343e81956978","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQzMGY5NGQ1ZWMyODA5NzM0MWJkMDJmYTRhNjIzNDNlODE5NTY5Nzg=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-03-15T10:08:22Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-03-15T10:08:22Z"},"message":"SYNCOPE-198: fixed reordering mapping item list for resources ...\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1456853 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7943bf5f2db75b6533be0fb6b33b6d619062bfe2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7943bf5f2db75b6533be0fb6b33b6d619062bfe2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d30f94d5ec28097341bd02fa4a62343e81956978","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d30f94d5ec28097341bd02fa4a62343e81956978","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d30f94d5ec28097341bd02fa4a62343e81956978","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d30f94d5ec28097341bd02fa4a62343e81956978/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"62fb8de1638e135963dc0de491afdef9384e1128","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/62fb8de1638e135963dc0de491afdef9384e1128","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/62fb8de1638e135963dc0de491afdef9384e1128"}],"stats":{"total":38,"additions":37,"deletions":1},"files":[{"sha":"57562d230642e6ff26803de0107ce8a8576fa92e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":37,"deletions":1,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d30f94d5ec28097341bd02fa4a62343e81956978/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d30f94d5ec28097341bd02fa4a62343e81956978/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=d30f94d5ec28097341bd02fa4a62343e81956978","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.Comparator;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -120,7 +121,7 @@ public class ResourceMappingPanel extends Panel {\n     /**\n      * All mappings.\n      */\n-    private final ListView mappings;\n+    private final ListView<MappingItemTO> mappings;\n \n     /**\n      * External resource to be updated.\n@@ -235,6 +236,41 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             passwordLabel.setVisible(false);\n         }\n \n+        Collections.sort(getMapping().getItems(), new Comparator<MappingItemTO>() {\n+\n+            @Override\n+            public int compare(final MappingItemTO left, final MappingItemTO right) {\n+                if (left == null && right == null) {\n+                    return 0;\n+                } else if (left == null) {\n+                    return 1;\n+                } else if (right == null) {\n+                    return -1;\n+                } else if (left.getPurpose() == MappingPurpose.BOTH && right.getPurpose() != MappingPurpose.BOTH) {\n+                    return -1;\n+                } else if (left.getPurpose() != MappingPurpose.BOTH && right.getPurpose() == MappingPurpose.BOTH) {\n+                    return 1;\n+                } else if (left.getPurpose() == MappingPurpose.PROPAGATION\n+                        && right.getPurpose() == MappingPurpose.SYNCHRONIZATION) {\n+                    return -1;\n+                } else if (left.getPurpose() == MappingPurpose.SYNCHRONIZATION\n+                        && right.getPurpose() == MappingPurpose.PROPAGATION) {\n+                    return 1;\n+                } else if (left.isAccountid()) {\n+                    return -1;\n+                } else if (right.isAccountid()) {\n+                    return 1;\n+                } else if (left.isPassword()) {\n+                    return -1;\n+                } else if (right.isPassword()) {\n+                    return 1;\n+                } else {\n+                    return left.getIntAttrName().compareTo(right.getIntAttrName());\n+                }\n+            }\n+        });\n+\n+\n         mappings = new ListView<MappingItemTO>(\"mappings\", getMapping().getItems()) {\n \n             private static final long serialVersionUID = 4949588177564901031L;"}]}