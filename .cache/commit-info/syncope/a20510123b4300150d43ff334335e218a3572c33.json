{"sha":"a20510123b4300150d43ff334335e218a3572c33","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmEyMDUxMDEyM2I0MzAwMTUwZDQzZmYzMzQzMzVlMjE4YTM1NzJjMzM=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-06-18T16:12:25Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-06-18T16:12:25Z"},"message":"[SYNCOPE-156] provided modal content panel + features to add, edit and remove resource/conectors - still missing: 1. the possibility to edit new topology element  as soon as created; 2. to show the spinner during ajax calls.","tree":{"sha":"cb993808c13a0e59bafd8b3c974bc1c9b8779cb3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cb993808c13a0e59bafd8b3c974bc1c9b8779cb3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a20510123b4300150d43ff334335e218a3572c33","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a20510123b4300150d43ff334335e218a3572c33","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a20510123b4300150d43ff334335e218a3572c33","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a20510123b4300150d43ff334335e218a3572c33/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"67c79ab6da9877f6014727e8ef73f1196ba5318b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/67c79ab6da9877f6014727e8ef73f1196ba5318b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/67c79ab6da9877f6014727e8ef73f1196ba5318b"}],"stats":{"total":1679,"additions":823,"deletions":856},"files":[{"sha":"2a0f283f662a4b0a2d5a8a3f3564f970712d268d","filename":"client/console/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fpom.xml?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -74,6 +74,10 @@ under the License.\n       <groupId>com.googlecode.wicket-jquery-ui</groupId>\n       <artifactId>wicket-jquery-ui</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.wicket</groupId>\n+      <artifactId>wicket-native-websocket-javax</artifactId>\n+    </dependency>\n       \n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>"},{"sha":"fee3e06ddd073a05b4ac92acf53704bdf72b45ef","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorModal.java","status":"renamed","additions":13,"deletions":14,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -16,7 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.pages;\n+package org.apache.syncope.client.console.panels;\n+\n+import static org.apache.wicket.Component.ENABLE;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -27,7 +29,8 @@\n import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.rest.ConnectorRestClient;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.ModalContent;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n@@ -60,19 +63,15 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.validation.validator.RangeValidator;\n \n /**\n  * Modal window with Connector form.\n  */\n-public class ConnectorModalPage extends BaseModalPage {\n+public class ConnectorModal extends ModalContent {\n \n     private static final long serialVersionUID = -2025535531121434050L;\n \n-    @SpringBean\n-    private ConnectorRestClient restClient;\n-\n     private final Map<String, Map<String, Map<String, ConnBundleTO>>> mapConnBundleTOs;\n \n     private final List<ConnectorCapability> selectedCapabilities;\n@@ -83,10 +82,10 @@ public class ConnectorModalPage extends BaseModalPage {\n \n     private final WebMarkupContainer propertiesContainer;\n \n-    public ConnectorModalPage(final PageReference pageRef, final ModalWindow window,\n-            final ConnInstanceTO connInstanceTO) {\n+    public ConnectorModal(\n+            final ModalWindow window, final PageReference pageRef, final ConnInstanceTO connInstanceTO) {\n \n-        super();\n+        super(window, pageRef);\n \n         this.add(new Label(\"new\", connInstanceTO.getKey() == 0\n                 ? new ResourceModel(\"new\")\n@@ -101,7 +100,7 @@ public ConnectorModalPage(final PageReference pageRef, final ModalWindow window,\n                 : connInstanceTO.getCapabilities());\n \n         mapConnBundleTOs = new HashMap<>();\n-        for (ConnBundleTO connBundleTO : restClient.getAllBundles()) {\n+        for (ConnBundleTO connBundleTO : connectorRestClient.getAllBundles()) {\n             // by location\n             if (!mapConnBundleTOs.containsKey(connBundleTO.getLocation())) {\n                 mapConnBundleTOs.put(connBundleTO.getLocation(), new HashMap<String, Map<String, ConnBundleTO>>());\n@@ -303,7 +302,7 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 conn.setVersion(bundleTO.getVersion());\n                 conn.setConnectorName(bundleTO.getConnectorName());\n \n-                if (restClient.check(conn)) {\n+                if (connectorRestClient.check(conn)) {\n                     info(getString(\"success_connection\"));\n                 } else {\n                     error(getString(\"error_connection\"));\n@@ -374,9 +373,9 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                 try {\n                     if (connInstanceTO.getKey() == 0) {\n-                        restClient.create(conn);\n+                        connectorRestClient.create(conn);\n                     } else {\n-                        restClient.update(conn);\n+                        connectorRestClient.update(conn);\n                     }\n \n                     ((BasePage) pageRef.getPage()).setModalResult(true);","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ConnectorModalPage.java"},{"sha":"18f28d70814a0c6ab3d70d45062d4a00ed059126","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Connectors.java","status":"removed","additions":0,"deletions":385,"changes":385,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/67c79ab6da9877f6014727e8ef73f1196ba5318b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectors.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/67c79ab6da9877f6014727e8ef73f1196ba5318b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectors.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectors.java?ref=67c79ab6da9877f6014727e8ef73f1196ba5318b","patch":"@@ -1,385 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import static org.apache.wicket.Component.ENABLE;\n-import static org.apache.wicket.Component.RENDER;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.syncope.client.console.PreferenceManager;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.pages.ConnectorModalPage;\n-import org.apache.syncope.client.console.rest.ConnectorRestClient;\n-import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.common.lib.types.Entitlement;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.Page;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.attributes.AjaxCallListener;\n-import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.AbstractReadOnlyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.StringResourceModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n- * Resources WebPage.\n- */\n-public class Connectors extends Panel {\n-\n-    private static final long serialVersionUID = -3789252860990261728L;\n-\n-    protected static final Logger LOG = LoggerFactory.getLogger(Connectors.class);\n-\n-    private static final int WIN_HEIGHT = 600;\n-\n-    private static final int WIN_WIDTH = 1100;\n-\n-    @SpringBean\n-    private ConnectorRestClient connectorRestClient;\n-\n-    @SpringBean\n-    private PreferenceManager prefMan;\n-\n-    private final ModalWindow createConnectorWin;\n-\n-    private final ModalWindow editConnectorWin;\n-\n-    private final int connectorPaginatorRows;\n-\n-    private WebMarkupContainer connectorContainer;\n-\n-    /**\n-     * Modal window to be used for user status management.\n-     */\n-    protected final ModalWindow statusmodal = new ModalWindow(\"statusModal\");\n-\n-    /**\n-     * Schemas to be shown modal window height.\n-     */\n-    private static final int STATUS_MODAL_WIN_HEIGHT = 500;\n-\n-    /**\n-     * Schemas to be shown modal window width.\n-     */\n-    private static final int STATUS_MODAL_WIN_WIDTH = 700;\n-\n-    private final PageReference pageRef;\n-\n-    public Connectors(final String id, final PageReference pageRef) {\n-        super(id);\n-        this.pageRef = pageRef;\n-\n-        createConnectorWin = new ModalWindow(\"createConnectorWin\");\n-        add(createConnectorWin);\n-\n-        editConnectorWin = new ModalWindow(\"editConnectorWin\");\n-        add(editConnectorWin);\n-\n-        statusmodal.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        statusmodal.setInitialHeight(STATUS_MODAL_WIN_HEIGHT);\n-        statusmodal.setInitialWidth(STATUS_MODAL_WIN_WIDTH);\n-        statusmodal.setCookieName(\"status-modal\");\n-        add(statusmodal);\n-\n-        AjaxLink<Void> reloadLink = new ClearIndicatingAjaxLink<Void>(\"reloadLink\", pageRef) {\n-\n-            private static final long serialVersionUID = 3109256773218160485L;\n-\n-            @Override\n-            protected void onClickInternal(final AjaxRequestTarget target) {\n-                try {\n-                    connectorRestClient.reload();\n-                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                } catch (Exception e) {\n-                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                }\n-                ((BasePage) pageRef.getPage()).getFeedbackPanel().refresh(target);\n-                target.add(connectorContainer);\n-            }\n-\n-            @Override\n-            protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n-                super.updateAjaxAttributes(attributes);\n-\n-                final AjaxCallListener ajaxCallListener = new AjaxCallListener() {\n-\n-                    private static final long serialVersionUID = 7160235486520935153L;\n-\n-                    @Override\n-                    public CharSequence getPrecondition(final Component component) {\n-                        return \"if (!confirm('\" + getString(\"confirmReloadConnectors\") + \"')) \"\n-                                + \"{return false;} else {return true;}\";\n-                    }\n-                };\n-                attributes.getAjaxCallListeners().add(ajaxCallListener);\n-            }\n-        };\n-        MetaDataRoleAuthorizationStrategy.authorize(reloadLink, ENABLE, Entitlement.CONNECTOR_RELOAD);\n-        add(reloadLink);\n-\n-        connectorPaginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_CONNECTORS_PAGINATOR_ROWS);\n-\n-        setupConnectors();\n-    }\n-\n-    private void setupConnectors() {\n-        List<IColumn<ConnInstanceTO, String>> columns = new ArrayList<>();\n-\n-        columns.add(new PropertyColumn<ConnInstanceTO, String>(\n-                new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n-        columns.add(new PropertyColumn<ConnInstanceTO, String>(\n-                new StringResourceModel(\"name\", this, null), \"connectorName\", \"connectorName\"));\n-        columns.add(new PropertyColumn<ConnInstanceTO, String>(\n-                new StringResourceModel(\"displayName\", this, null), \"displayName\", \"displayName\"));\n-        columns.add(new PropertyColumn<ConnInstanceTO, String>(\n-                new StringResourceModel(\"bundleName\", this, null), \"bundleName\", \"bundleName\"));\n-        columns.add(new PropertyColumn<ConnInstanceTO, String>(\n-                new StringResourceModel(\"version\", this, null), \"version\", \"version\"));\n-        columns.add(new AbstractColumn<ConnInstanceTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n-\n-            private static final long serialVersionUID = 2054811145491901166L;\n-\n-            @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n-\n-            @Override\n-            public void populateItem(final Item<ICellPopulator<ConnInstanceTO>> cellItem, final String componentId,\n-                    final IModel<ConnInstanceTO> model) {\n-\n-                final ConnInstanceTO connectorTO = model.getObject();\n-\n-                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, pageRef);\n-\n-                panel.add(new ActionLink() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        editConnectorWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                            private static final long serialVersionUID = -7834632442532690940L;\n-\n-                            @Override\n-                            public Page createPage() {\n-                                return new ConnectorModalPage(Connectors.this.pageRef,\n-                                        editConnectorWin,\n-                                        connectorTO);\n-                            }\n-                        });\n-\n-                        editConnectorWin.show(target);\n-                    }\n-                }, ActionLink.ActionType.EDIT, \"Connectors\");\n-\n-                panel.add(new ActionLink() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        try {\n-                            connectorRestClient.delete(connectorTO.getKey());\n-                            info(getString(Constants.OPERATION_SUCCEEDED));\n-                        } catch (SyncopeClientException e) {\n-                            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-\n-                            LOG.error(\"While deleting connector \" + connectorTO.getKey(), e);\n-                        }\n-\n-                        target.add(connectorContainer);\n-                        ((BasePage) pageRef.getPage()).getFeedbackPanel().refresh(target);\n-                    }\n-                }, ActionLink.ActionType.DELETE, \"Connectors\");\n-\n-                cellItem.add(panel);\n-            }\n-        });\n-\n-        final AjaxDataTablePanel<ConnInstanceTO, String> table = new AjaxDataTablePanel<>(\n-                \"connectorDatatable\",\n-                columns,\n-                (ISortableDataProvider<ConnInstanceTO, String>) new ConnectorsProvider(),\n-                connectorPaginatorRows,\n-                Arrays.asList(new ActionLink.ActionType[] { ActionLink.ActionType.DELETE }),\n-                connectorRestClient,\n-                \"key\",\n-                \"Connectors\",\n-                pageRef);\n-\n-        connectorContainer = new WebMarkupContainer(\"connectorContainer\");\n-        connectorContainer.add(table);\n-        connectorContainer.setOutputMarkupId(true);\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(connectorContainer, RENDER, Entitlement.CONNECTOR_LIST);\n-\n-        add(connectorContainer);\n-\n-        ((BasePage) pageRef.getPage()).setWindowClosedCallback(createConnectorWin, connectorContainer);\n-        ((BasePage) pageRef.getPage()).setWindowClosedCallback(editConnectorWin, connectorContainer);\n-\n-        createConnectorWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createConnectorWin.setInitialHeight(WIN_HEIGHT);\n-        createConnectorWin.setInitialWidth(WIN_WIDTH);\n-        createConnectorWin.setCookieName(\"create-conn-modal\");\n-\n-        editConnectorWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editConnectorWin.setInitialHeight(WIN_HEIGHT);\n-        editConnectorWin.setInitialWidth(WIN_WIDTH);\n-        editConnectorWin.setCookieName(\"edit-conn-modal\");\n-\n-        AjaxLink<Void> createConnectorLink\n-                = new ClearIndicatingAjaxLink<Void>(\"createConnectorLink\", pageRef) {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n-                        createConnectorWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                            private static final long serialVersionUID = -7834632442532690940L;\n-\n-                            @Override\n-                            public Page createPage() {\n-                                ConnectorModalPage form = new ConnectorModalPage(\n-                                        pageRef, editConnectorWin, new ConnInstanceTO());\n-                                return form;\n-                            }\n-                        });\n-\n-                        createConnectorWin.show(target);\n-                    }\n-                };\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(createConnectorLink, ENABLE, Entitlement.CONNECTOR_CREATE);\n-\n-        add(createConnectorLink);\n-\n-        @SuppressWarnings(\"rawtypes\")\n-        Form paginatorForm = new Form(\"connectorPaginatorForm\");\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(paginatorForm, RENDER, Entitlement.CONNECTOR_LIST);\n-\n-        final DropDownChoice<Integer> rowsChooser = new DropDownChoice<>(\n-                \"rowsChooser\",\n-                new PropertyModel<Integer>(this,\n-                        \"connectorPaginatorRows\"),\n-                prefMan.getPaginatorChoices());\n-\n-        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_CONNECTORS_PAGINATOR_ROWS,\n-                        String.valueOf(connectorPaginatorRows));\n-                table.setItemsPerPage(connectorPaginatorRows);\n-\n-                target.add(connectorContainer);\n-            }\n-        });\n-\n-        paginatorForm.add(rowsChooser);\n-        add(paginatorForm);\n-    }\n-\n-    private class ConnectorsProvider extends SortableDataProvider<ConnInstanceTO, String> {\n-\n-        private static final long serialVersionUID = 4445909568349448518L;\n-\n-        private final SortableDataProviderComparator<ConnInstanceTO> comparator;\n-\n-        public ConnectorsProvider() {\n-            super();\n-            //Default sorting\n-            setSort(\"key\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<>(this);\n-        }\n-\n-        @Override\n-        public Iterator<ConnInstanceTO> iterator(final long first, final long count) {\n-            List<ConnInstanceTO> list = connectorRestClient.getAllConnectors();\n-\n-            Collections.sort(list, comparator);\n-\n-            return list.subList((int) first, (int) first + (int) count).iterator();\n-        }\n-\n-        @Override\n-        public long size() {\n-            return connectorRestClient.getAllConnectors().size();\n-        }\n-\n-        @Override\n-        public IModel<ConnInstanceTO> model(final ConnInstanceTO connector) {\n-\n-            return new AbstractReadOnlyModel<ConnInstanceTO>() {\n-\n-                private static final long serialVersionUID = -6033068018293569398L;\n-\n-                @Override\n-                public ConnInstanceTO getObject() {\n-                    return connector;\n-                }\n-            };\n-        }\n-    }\n-\n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof AbstractSearchResultPanel.EventDataWrapper) {\n-            ((AbstractSearchResultPanel.EventDataWrapper) event.getPayload()).getTarget().add(connectorContainer);\n-        }\n-    }\n-}"},{"sha":"fbf88023866fa689e5b03745429a897e8f998d50","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ModalContent.java","status":"added","additions":99,"deletions":0,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.java?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.rest.ConnectorRestClient;\n+import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Modal window with Resource form.\n+ */\n+public class ModalContent extends Panel {\n+\n+    private static final long serialVersionUID = 8611724965544132636L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(ModalContent.class);\n+\n+    protected static final String CANCEL = \"cancel\";\n+\n+    protected static final String SUBMIT = \"submit\";\n+\n+    protected static final String APPLY = \"apply\";\n+\n+    protected static final String FORM = \"form\";\n+\n+    @SpringBean\n+    protected ResourceRestClient resourceRestClient;\n+\n+    @SpringBean\n+    protected ConnectorRestClient connectorRestClient;\n+\n+    protected NotificationPanel feedbackPanel;\n+\n+    private final PageReference pageRef;\n+\n+    private final ModalWindow window;\n+\n+    public ModalContent(final ModalWindow window, final PageReference pageRef) {\n+        super(window.getContentId());\n+        this.pageRef = pageRef;\n+        this.window = window;\n+\n+        feedbackPanel = new NotificationPanel(Constants.FEEDBACK);\n+        feedbackPanel.setOutputMarkupId(true);\n+        add(feedbackPanel);\n+    }\n+\n+    /**\n+     * Generic modal event.\n+     */\n+    public static class ModalEvent {\n+\n+        /**\n+         * Request target.\n+         */\n+        private final AjaxRequestTarget target;\n+\n+        /**\n+         * Constructor.\n+         *\n+         * @param target request target.\n+         */\n+        public ModalEvent(final AjaxRequestTarget target) {\n+            this.target = target;\n+        }\n+\n+        /**\n+         * Target getter.\n+         *\n+         * @return request target.\n+         */\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n+}"},{"sha":"1b536c4858afbc4ac1381d3422706bf57696ce5d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceConnConfPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -24,7 +24,7 @@\n import java.util.List;\n import java.util.Map;\n import org.apache.syncope.client.console.pages.BaseModalPage;\n-import org.apache.syncope.client.console.pages.ResourceModalPage.ResourceEvent;\n+import org.apache.syncope.client.console.panels.ModalContent.ModalEvent;\n import org.apache.syncope.client.console.panels.ResourceDetailsPanel.DetailsModEvent;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel.MultiValueSelectorEvent;\n@@ -148,7 +148,7 @@ public void onEvent(final IEvent<?> event) {\n         AjaxRequestTarget target = null;\n         if (event.getPayload() instanceof DetailsModEvent) {\n             // connector change: update properties and forward event\n-            target = ((ResourceEvent) event.getPayload()).getTarget();\n+            target = ((ModalEvent) event.getPayload()).getTarget();\n \n             connConfProperties = getConnConfProperties();\n             check.setEnabled(!connConfProperties.isEmpty());\n@@ -167,7 +167,7 @@ public void onEvent(final IEvent<?> event) {\n     /**\n      * Connector configuration properties modification event.\n      */\n-    public static class ConnConfModEvent extends ResourceEvent {\n+    public static class ConnConfModEvent extends ModalEvent {\n \n         private final List<ConnConfProperty> configuration;\n "},{"sha":"ff5cac3b2e15b541493a21dc75389df14ecda11f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.ResourceModalPage.ResourceEvent;\n+import org.apache.syncope.client.console.panels.ModalContent.ModalEvent;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n@@ -89,9 +89,9 @@ public ResourceDetailsPanel(final String id, final ResourceTO resourceTO, final\n                         \"propagationPrimary\"));\n         add(propagationPrimary);\n \n-        final SpinnerFieldPanel<Integer> propagationPriority =\n-                new SpinnerFieldPanel<>(\"propagationPriority\", \"propagationPriority\", Integer.class,\n-                        new PropertyModel<Integer>(resourceTO, \"propagationPriority\"), null, null);\n+        final SpinnerFieldPanel<Integer> propagationPriority = new SpinnerFieldPanel<>(\"propagationPriority\",\n+                \"propagationPriority\", Integer.class,\n+                new PropertyModel<Integer>(resourceTO, \"propagationPriority\"), null, null);\n         add(propagationPriority);\n \n         final AjaxDropDownChoicePanel<PropagationMode> propagationMode = new AjaxDropDownChoicePanel<>(\n@@ -152,7 +152,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         actionsClass.setRequired(true);\n                         item.add(actionsClass);\n \n-                        AjaxLink<Void> minus = new IndicatingAjaxLink<Void>(\"drop\") {\n+                        final AjaxLink<Void> minus = new IndicatingAjaxLink<Void>(\"drop\") {\n \n                             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -222,7 +222,7 @@ protected List<ConnInstanceTO> load() {\n                 new ResourceModel(\"connector\", \"connector\").getObject(),\n                 new PropertyModel<ConnInstanceTO>(this, \"connInstanceTO\"));\n         conn.setChoices(connectors.getObject());\n-        conn.setChoiceRenderer(new ChoiceRenderer<String>(\"displayName\", \"key\"));\n+        conn.setChoiceRenderer(new ChoiceRenderer<>(\"displayName\", \"key\"));\n \n         conn.getField().setModel(new IModel<ConnInstanceTO>() {\n \n@@ -245,7 +245,7 @@ public void detach() {\n         });\n \n         conn.addRequiredLabel();\n-        conn.setEnabled(createFlag);\n+        conn.setEnabled(false);\n \n         conn.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n@@ -292,7 +292,7 @@ private ConnInstanceTO getConectorInstanceTO(final List<ConnInstanceTO> connecto\n     /**\n      * Connector instance modification event.\n      */\n-    public static class DetailsModEvent extends ResourceEvent {\n+    public static class DetailsModEvent extends ModalEvent {\n \n         /**\n          * Constructor."},{"sha":"86279988c527601c0d8762c814d7ab61ca88df95","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceModal.java","status":"renamed","additions":30,"deletions":30,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -16,16 +16,16 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.pages;\n+package org.apache.syncope.client.console.panels;\n \n+import static org.apache.wicket.Component.ENABLE;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.AnnotatedBeanPanel;\n-import org.apache.syncope.client.console.panels.ResourceConnConfPanel;\n-import org.apache.syncope.client.console.panels.ResourceDetailsPanel;\n-import org.apache.syncope.client.console.panels.ResourceMappingPanel;\n-import org.apache.syncope.client.console.panels.ResourceSecurityPanel;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n@@ -35,6 +35,7 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.Form;\n@@ -44,15 +45,18 @@\n /**\n  * Modal window with Resource form.\n  */\n-public class ResourceModalPage extends BaseModalPage {\n+public class ResourceModal extends ModalContent {\n \n     private static final long serialVersionUID = 1734415311027284221L;\n \n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-    public ResourceModalPage(final PageReference pageRef, final ModalWindow window, final ResourceTO resourceTO,\n+    public ResourceModal(\n+            final ModalWindow window,\n+            final PageReference pageRef,\n+            final ResourceTO resourceTO,\n             final boolean createFlag) {\n \n-        super();\n+        super(window, pageRef);\n \n         final Form<ResourceTO> form = new Form<>(FORM);\n         form.setModel(new CompoundPropertyModel<>(resourceTO));\n@@ -97,7 +101,9 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                 boolean connObjectKeyError = false;\n \n-                for (ProvisionTO provision : resourceTO.getProvisions()) {\n+                final Collection<ProvisionTO> provisions = new ArrayList<>(resourceTO.getProvisions());\n+\n+                for (ProvisionTO provision : provisions) {\n                     if (provision != null) {\n                         if (provision.getMapping() == null || provision.getMapping().getItems().isEmpty()) {\n                             resourceTO.getProvisions().remove(provision);\n@@ -123,11 +129,12 @@ public boolean evaluate(final MappingItemTO item) {\n                     try {\n                         if (createFlag) {\n                             resourceRestClient.create(resourceTO);\n+                            send(pageRef.getPage(), Broadcast.BREADTH, new ResourceCreateEvent(target, resourceTO));\n                         } else {\n                             resourceRestClient.update(resourceTO);\n                         }\n \n-                        if (pageRef != null && pageRef.getPage() instanceof AbstractBasePage) {\n+                        if (pageRef.getPage() instanceof AbstractBasePage) {\n                             ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n                         }\n                         window.close(target);\n@@ -170,35 +177,28 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n         MetaDataRoleAuthorizationStrategy.authorize(\n                 submit, ENABLE, createFlag ? Entitlement.RESOURCE_CREATE : Entitlement.RESOURCE_UPDATE);\n+    }\n \n+    public NotificationPanel getFeedbackPanel() {\n+        return feedbackPanel;\n     }\n \n-    /**\n-     * Generic resource event.\n-     */\n-    public static class ResourceEvent {\n+    public static class ResourceCreateEvent extends ModalEvent {\n \n-        /**\n-         * Request target.\n-         */\n-        private final AjaxRequestTarget target;\n+        private final ResourceTO resourceTO;\n \n-        /**\n-         * Constructor.\n-         *\n-         * @param target request target.\n-         */\n-        public ResourceEvent(final AjaxRequestTarget target) {\n-            this.target = target;\n+        public ResourceCreateEvent(final AjaxRequestTarget target, final ResourceTO resourceTO) {\n+            super(target);\n+            this.resourceTO = resourceTO;\n         }\n \n         /**\n-         * Target getter.\n+         * Create resource getter.\n          *\n-         * @return request target.\n+         * @return created resource.\n          */\n-        public AjaxRequestTarget getTarget() {\n-            return target;\n+        public ResourceTO getResourceTO() {\n+            return resourceTO;\n         }\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ResourceModalPage.java"},{"sha":"57238592194c62744f499e1933807eb709a266d2","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":168,"deletions":124,"changes":292,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -20,25 +20,26 @@\n \n import static org.apache.syncope.client.console.topology.TopologyNode.Status.FAILURE;\n import static org.apache.syncope.client.console.topology.TopologyNode.Status.REACHABLE;\n-import static org.apache.syncope.client.console.topology.TopologyNode.Status.UNKNOWN;\n import static org.apache.syncope.client.console.topology.TopologyNode.Status.UNREACHABLE;\n \n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import java.io.Serializable;\n import java.net.URI;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.FutureTask;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.TimeoutException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.ResourceModal.ResourceCreateEvent;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n@@ -49,6 +50,8 @@\n import org.apache.wicket.ajax.AbstractAjaxTimerBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.head.IHeaderResponse;\n import org.apache.wicket.markup.head.OnDomReadyHeaderItem;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -57,6 +60,9 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.protocol.ws.api.WebSocketBehavior;\n+import org.apache.wicket.protocol.ws.api.WebSocketRequestHandler;\n+import org.apache.wicket.protocol.ws.api.message.TextMessage;\n import org.apache.wicket.util.time.Duration;\n \n public class Topology extends BasePage {\n@@ -69,6 +75,12 @@ public class Topology extends BasePage {\n \n     private final int origY = 2800;\n \n+    private static final int RESOURCE_MODAL_WIN_HEIGHT = 700;\n+\n+    private static final int RESOURCE_MODAL_WIN_WIDTH = 1000;\n+\n+    final ModalWindow modal;\n+\n     private final LoadableDetachableModel<List<ResourceTO>> resModel\n             = new LoadableDetachableModel<List<ResourceTO>>() {\n \n@@ -121,7 +133,74 @@ protected List<URI> load() {\n         }\n     };\n \n+    private enum SupportedOperation {\n+\n+        CHECK_RESOURCE,\n+        CHECK_CONNECTOR,\n+        ADD_ENDPOINT;\n+\n+    }\n+\n     public Topology() {\n+        modal = new ModalWindow(\"modal\");\n+        add(modal);\n+\n+        modal.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        modal.setInitialHeight(RESOURCE_MODAL_WIN_HEIGHT);\n+        modal.setInitialWidth(RESOURCE_MODAL_WIN_WIDTH);\n+        modal.setCookieName(\"resource-modal\");\n+\n+        add(new WebSocketBehavior() {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onMessage(final WebSocketRequestHandler handler, final TextMessage message) {\n+                try {\n+                    final ObjectMapper mapper = new ObjectMapper();\n+                    final JsonNode obj = mapper.readTree(message.getText());\n+\n+                    switch (SupportedOperation.valueOf(obj.get(\"kind\").asText())) {\n+                        case CHECK_CONNECTOR:\n+                            try {\n+                                final ConnInstanceTO connector = connectorRestClient.read(obj.get(\"target\").asLong());\n+                                handler.push(String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n+                                        connectorRestClient.check(connector) ? REACHABLE : UNREACHABLE,\n+                                        obj.get(\"target\").asLong()));\n+                            } catch (Exception e) {\n+                                handler.push(String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n+                                        FAILURE,\n+                                        obj.get(\"target\").asLong()));\n+                            }\n+                            break;\n+                        case CHECK_RESOURCE:\n+                            try {\n+                                final ResourceTO resource = resourceRestClient.read(obj.get(\"target\").asText());\n+                                handler.push(String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n+                                        connectorRestClient.check(resource) ? REACHABLE : UNREACHABLE,\n+                                        obj.get(\"target\").asText()));\n+                            } catch (Exception e) {\n+                                handler.push(String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n+                                        FAILURE,\n+                                        obj.get(\"target\").asText()));\n+                            }\n+                            break;\n+                        case ADD_ENDPOINT:\n+                            handler.appendJavaScript(String.format(\"addEndpoint('%s', '%s', '%s');\",\n+                                    obj.get(\"source\").asText(),\n+                                    obj.get(\"target\").asText(),\n+                                    obj.get(\"scope\").asText()));\n+                            break;\n+                        default:\n+                    }\n+\n+                } catch (IOException ex) {\n+                    Logger.getLogger(Topology.class.getName()).log(Level.SEVERE, null, ex);\n+                }\n+\n+            }\n+        });\n+\n         // -----------------------------------------\n         // Add Zoom panel\n         // -----------------------------------------\n@@ -148,8 +227,6 @@ public void onClick(final AjaxRequestTarget target) {\n         }, ActionLink.ActionType.ZOOM_OUT, Entitlement.RESOURCE_LIST);\n         // -----------------------------------------\n \n-        final WebMarkupContainer jsPlace = new WebMarkupContainer(\"jsPlace\");\n-\n         // -----------------------------------------\n         // Add Syncope (root topologynode)\n         // -----------------------------------------\n@@ -161,16 +238,16 @@ public void onClick(final AjaxRequestTarget target) {\n         syncopeTopologyNode.setHost(uri.getHost());\n         syncopeTopologyNode.setPort(uri.getPort());\n \n-        add(topologyNodePanel(\"syncope\", syncopeTopologyNode, null, false));\n+        add(topologyNodePanel(\"syncope\", syncopeTopologyNode));\n \n-        final Map<String, Map<String, TopologyNode>> connections = new HashMap<>();\n-        final Map<String, TopologyNode> syncopeConnections = new HashMap<>();\n-        connections.put(syncopeTopologyNode.getDisplayName(), syncopeConnections);\n+        final Map<Serializable, Map<Serializable, TopologyNode>> connections = new HashMap<>();\n+        final Map<Serializable, TopologyNode> syncopeConnections = new HashMap<>();\n+        connections.put(syncopeTopologyNode.getKey(), syncopeConnections);\n \n         // required to retrieve parent positions\n         final Map<String, TopologyNode> servers = new HashMap<>();\n-        final Map<String, TopologyNode> connectors = new HashMap<>();\n-            // -----------------------------------------\n+        final Map<Long, TopologyNode> connectors = new HashMap<>();\n+        // -----------------------------------------\n \n         // -----------------------------------------\n         // Add Connector Servers\n@@ -198,18 +275,18 @@ protected void populateItem(final ListItem<URI> item) {\n                 topologynode.setX(x);\n                 topologynode.setY(y);\n \n-                servers.put(topologynode.getDisplayName(), topologynode);\n+                servers.put(String.class.cast(topologynode.getKey()), topologynode);\n \n-                item.add(topologyNodePanel(\"cs\", topologynode, syncopeTopologyNode, false));\n+                item.add(topologyNodePanel(\"cs\", topologynode));\n \n                 syncopeConnections.put(url, topologynode);\n-                connections.put(url, new HashMap<String, TopologyNode>());\n+                connections.put(url, new HashMap<Serializable, TopologyNode>());\n             }\n         };\n \n         connectorServers.setOutputMarkupId(true);\n         add(connectorServers);\n-            // -----------------------------------------\n+        // -----------------------------------------\n \n         // -----------------------------------------\n         // Add Connector Intances (first level)\n@@ -235,22 +312,22 @@ protected void populateItem(final ListItem<ConnInstanceTO> item) {\n                         topologynode.setX(x);\n                         topologynode.setY(y);\n \n-                        connectors.put(topologynode.getDisplayName(), topologynode);\n+                        connectors.put(Long.class.cast(topologynode.getKey()), topologynode);\n \n-                        item.add(topologyNodePanel(\"conn\", topologynode, syncopeTopologyNode, true));\n+                        item.add(topologyNodePanel(\"conn\", topologynode));\n \n                         if (conn.getLocation().startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n-                            final Map<String, TopologyNode> remoteConnections;\n+                            final Map<Serializable, TopologyNode> remoteConnections;\n \n                             if (connections.containsKey(conn.getLocation())) {\n                                 remoteConnections = connections.get(conn.getLocation());\n                             } else {\n                                 remoteConnections = new HashMap<>();\n                                 connections.put(conn.getLocation(), remoteConnections);\n                             }\n-                            remoteConnections.put(conn.getDisplayName(), topologynode);\n+                            remoteConnections.put(conn.getKey(), topologynode);\n                         } else {\n-                            syncopeConnections.put(conn.getDisplayName(), topologynode);\n+                            syncopeConnections.put(conn.getKey(), topologynode);\n                         }\n                     }\n                 };\n@@ -288,22 +365,22 @@ protected void populateItem(final ListItem<ConnInstanceTO> item) {\n                         topologynode.setX(x);\n                         topologynode.setY(y);\n \n-                        connectors.put(topologynode.getDisplayName(), topologynode);\n+                        connectors.put(Long.class.cast(topologynode.getKey()), topologynode);\n \n-                        item.add(topologyNodePanel(\"conn\", topologynode, parent, true));\n+                        item.add(topologyNodePanel(\"conn\", topologynode));\n \n                         if (conn.getLocation().startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n-                            final Map<String, TopologyNode> remoteConnections;\n+                            final Map<Serializable, TopologyNode> remoteConnections;\n \n                             if (connections.containsKey(conn.getLocation())) {\n                                 remoteConnections = connections.get(conn.getLocation());\n                             } else {\n                                 remoteConnections = new HashMap<>();\n                                 connections.put(conn.getLocation(), remoteConnections);\n                             }\n-                            remoteConnections.put(conn.getDisplayName(), topologynode);\n+                            remoteConnections.put(conn.getKey(), topologynode);\n                         } else {\n-                            syncopeConnections.put(conn.getDisplayName(), topologynode);\n+                            syncopeConnections.put(conn.getKey(), topologynode);\n                         }\n                     }\n                 };\n@@ -315,39 +392,39 @@ protected void populateItem(final ListItem<ConnInstanceTO> item) {\n         // -----------------------------------------\n         // Add Resources\n         // -----------------------------------------\n-        final List<String> connToBeProcessed = new ArrayList<>();\n+        final List<Long> connToBeProcessed = new ArrayList<>();\n         for (ResourceTO resourceTO : resModel.getObject()) {\n             final TopologyNode topologynode = new TopologyNode(\n                     resourceTO.getKey(), resourceTO.getKey(), TopologyNode.Kind.RESOURCE);\n             topologynode.setX(origX);\n             topologynode.setY(origY);\n \n-            final Map<String, TopologyNode> remoteConnections;\n+            final Map<Serializable, TopologyNode> remoteConnections;\n \n-            if (connections.containsKey(resourceTO.getConnectorDisplayName())) {\n-                remoteConnections = connections.get(resourceTO.getConnectorDisplayName());\n+            if (connections.containsKey(resourceTO.getConnector())) {\n+                remoteConnections = connections.get(resourceTO.getConnector());\n             } else {\n                 remoteConnections = new HashMap<>();\n-                connections.put(resourceTO.getConnectorDisplayName(), remoteConnections);\n+                connections.put(resourceTO.getConnector(), remoteConnections);\n             }\n \n-            remoteConnections.put(topologynode.getDisplayName(), topologynode);\n+            remoteConnections.put(topologynode.getKey(), topologynode);\n \n-            if (!connToBeProcessed.contains(resourceTO.getConnectorDisplayName())) {\n-                connToBeProcessed.add(resourceTO.getConnectorDisplayName());\n+            if (!connToBeProcessed.contains(resourceTO.getConnector())) {\n+                connToBeProcessed.add(resourceTO.getConnector());\n             }\n         }\n \n-        final ListView<String> resources = new ListView<String>(\"resources\", connToBeProcessed) {\n+        final ListView<Long> resources = new ListView<Long>(\"resources\", connToBeProcessed) {\n \n             private static final long serialVersionUID = 697862187148836038L;\n \n             @Override\n-            protected void populateItem(final ListItem<String> item) {\n-                final String connectorDisplayName = item.getModelObject();\n+            protected void populateItem(final ListItem<Long> item) {\n+                final Long connectorId = item.getModelObject();\n \n                 final ListView<TopologyNode> innerListView = new ListView<TopologyNode>(\"resources\",\n-                        new ArrayList<>(connections.get(connectorDisplayName).values())) {\n+                        new ArrayList<>(connections.get(connectorId).values())) {\n \n                             private static final long serialVersionUID = 1L;\n \n@@ -356,7 +433,7 @@ protected void populateItem(final ListItem<String> item) {\n                             @Override\n                             protected void populateItem(final ListItem<TopologyNode> item) {\n                                 final TopologyNode topologynode = item.getModelObject();\n-                                final TopologyNode parent = connectors.get(connectorDisplayName);\n+                                final TopologyNode parent = connectors.get(connectorId);\n \n                                 final double k;\n \n@@ -377,11 +454,7 @@ protected void populateItem(final ListItem<TopologyNode> item) {\n                                 topologynode.setX(x);\n                                 topologynode.setY(y);\n \n-                                final Panel panel = new TopologyNodePanel(\n-                                        \"res\", topologynode, getPageReference(), resourceRestClient);\n-                                panel.setMarkupId(topologynode.getDisplayName());\n-                                panel.setOutputMarkupId(true);\n-                                item.add(topologyNodePanel(\"res\", topologynode, parent, true));\n+                                item.add(topologyNodePanel(\"res\", topologynode));\n                             }\n                         };\n \n@@ -392,11 +465,15 @@ protected void populateItem(final ListItem<TopologyNode> item) {\n \n         resources.setOutputMarkupId(true);\n         add(resources);\n-            // -----------------------------------------\n+        // -----------------------------------------\n \n         // -----------------------------------------\n         // Create connections\n         // -----------------------------------------\n+        final WebMarkupContainer jsPlace = new WebMarkupContainer(\"jsPlace\");\n+        jsPlace.setOutputMarkupId(true);\n+        add(jsPlace);\n+\n         jsPlace.add(new Behavior() {\n \n             private static final long serialVersionUID = 2661717818979056044L;\n@@ -414,33 +491,40 @@ public void renderHead(final Component component, final IHeaderResponse response\n             }\n         });\n \n-        jsPlace.setOutputMarkupId(true);\n-        add(jsPlace);\n-        // -----------------------------------------\n-    }\n+        jsPlace.add(new AbstractAjaxTimerBehavior(Duration.seconds(2)) {\n \n-    @Override\n-    public String getAjaxIndicatorMarkupId() {\n-        return StringUtils.EMPTY;\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onTimer(final AjaxRequestTarget target) {\n+                target.appendJavaScript(\"checkConnection()\");\n+\n+                if (getUpdateInterval().seconds() < 60.0) {\n+                    setUpdateInterval(Duration.seconds(60));\n+                }\n+            }\n+        });\n+        // -----------------------------------------\n     }\n \n-    private List<String> createConnections(final Map<String, Map<String, TopologyNode>> targets) {\n+    private List<String> createConnections(final Map<Serializable, Map<Serializable, TopologyNode>> targets) {\n         List<String> list = new ArrayList<>();\n \n-        for (Map.Entry<String, Map<String, TopologyNode>> source : targets.entrySet()) {\n-            for (Map.Entry<String, TopologyNode> target : source.getValue().entrySet()) {\n-                list.add(String.format(\"jsPlumb.connect({source:'%s',target:'%s'},def);\",\n+        for (Map.Entry<Serializable, Map<Serializable, TopologyNode>> source : targets.entrySet()) {\n+            for (Map.Entry<Serializable, TopologyNode> target : source.getValue().entrySet()) {\n+                list.add(String.format(\"connect('%s','%s','%s');\",\n                         source.getKey(),\n-                        target.getKey()));\n+                        target.getKey(),\n+                        target.getValue().getKind()));\n             }\n         }\n         return list;\n     }\n \n-    private Panel topologyNodePanel(\n-            final String id, final TopologyNode node, final TopologyNode parent, final boolean active) {\n-        final Panel panel = new TopologyNodePanel(id, node, getPageReference(), resourceRestClient);\n-        panel.setMarkupId(node.getDisplayName());\n+    private Panel topologyNodePanel(final String id, final TopologyNode node) {\n+\n+        final Panel panel = new TopologyNodePanel(id, node, getPageReference(), modal);\n+        panel.setMarkupId(String.valueOf(node.getKey()));\n         panel.setOutputMarkupId(true);\n \n         panel.add(new Behavior() {\n@@ -450,72 +534,32 @@ private Panel topologyNodePanel(\n             @Override\n             public void renderHead(final Component component, final IHeaderResponse response) {\n                 response.render(OnDomReadyHeaderItem.forScript(String.format(\"setPosition('%s', %d, %d)\",\n-                        node.getDisplayName(), node.getX(), node.getY())));\n+                        node.getKey(), node.getX(), node.getY())));\n             }\n         });\n \n-        final WebMarkupContainer timer = new WebMarkupContainer(\"timer\");\n-        timer.setOutputMarkupId(true);\n-        panel.add(timer);\n-\n-        if (active) {\n-            timer.add(new AbstractAjaxTimerBehavior(Duration.seconds(2)) {\n-\n-                private static final long serialVersionUID = 1L;\n-\n-                @Override\n-                protected void onTimer(final AjaxRequestTarget target) {\n-                    final List<TopologyReloadBehavior> behaviors = panel.getBehaviors(TopologyReloadBehavior.class);\n-                    for (TopologyReloadBehavior behavior : behaviors) {\n-                        panel.remove(behavior);\n-                    }\n-\n-                    TopologyNode.Status status;\n-\n-                    final FutureTask<TopologyNode.Status> future = new FutureTask<>(\n-                            new Callable<TopologyNode.Status>() {\n-\n-                                @Override\n-                                public TopologyNode.Status call() throws Exception {\n-                                    switch (node.getKind()) {\n-                                        case CONNECTOR:\n-                                            final ConnInstanceTO connector = connectorRestClient.\n-                                            read(Long.class.cast(node.getKey()));\n-                                            return connectorRestClient.check(connector) ? REACHABLE : UNREACHABLE;\n-                                        case RESOURCE:\n-                                            final ResourceTO resource = resourceRestClient.\n-                                            read(String.class.cast(node.getKey()));\n-                                            return connectorRestClient.check(resource) ? REACHABLE : UNREACHABLE;\n-                                        default:\n-                                            return UNKNOWN;\n-                                    }\n-                                }\n-                            });\n-\n-                    future.run();\n-\n-                    try {\n-                        status = future.get(10, TimeUnit.SECONDS);\n-                    } catch (TimeoutException te) {\n-                        LOG.warn(\"Check connection timed out\");\n-                        status = UNKNOWN;\n-                    } catch (InterruptedException | ExecutionException ie) {\n-                        // ignore\n-                        LOG.warn(\"Check connection failed\", ie);\n-                        status = FAILURE;\n-                    }\n-\n-                    timer.add(new TopologyReloadBehavior(parent.getDisplayName(), node.getDisplayName(), status));\n-\n-                    if (getUpdateInterval().seconds() < 60.0) {\n-                        setUpdateInterval(Duration.seconds(60));\n-                    }\n+        return panel;\n+    }\n \n-                    target.add(timer);\n-                }\n-            });\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        super.onEvent(event);\n+\n+        if (event.getPayload() instanceof ResourceCreateEvent) {\n+            final ResourceCreateEvent resourceCreateEvent = ResourceCreateEvent.class.cast(event.getPayload());\n+            resourceCreateEvent.getTarget().appendJavaScript(String.format(\n+                    \"window.Wicket.WebSocket.send('\"\n+                    + \"{\\\"kind\\\":\\\"%s\\\",\\\"target\\\":\\\"%s\\\",\\\"source\\\":\\\"%s\\\",\\\"scope\\\":\\\"%s\\\"}\"\n+                    + \"');\",\n+                    SupportedOperation.ADD_ENDPOINT,\n+                    resourceCreateEvent.getResourceTO().getKey(),\n+                    resourceCreateEvent.getResourceTO().getConnector(),\n+                    TopologyNode.Kind.RESOURCE));\n         }\n+    }\n \n-        return panel;\n+    @Override\n+    public String getAjaxIndicatorMarkupId() {\n+        return StringUtils.EMPTY;\n     }\n }"},{"sha":"ab8ebc22d9c9badee76afe6475be2801fa2058c8","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyNodePanel.java","status":"modified","additions":93,"deletions":84,"changes":177,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -21,21 +21,22 @@\n import java.text.MessageFormat;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.ResourceModalPage;\n-import org.apache.syncope.client.console.rest.BaseRestClient;\n+import org.apache.syncope.client.console.panels.ConnectorModal;\n+import org.apache.syncope.client.console.panels.ResourceModal;\n+import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.wicket.AttributeModifier;\n-import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -45,12 +46,19 @@ public class TopologyNodePanel extends Panel {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(TopologyNodePanel.class);\n \n-    private static final int RESOURCE_MODAL_WIN_HEIGHT = 600;\n+    final ModalWindow modal;\n \n-    private static final int RESOURCE_MODAL_WIN_WIDTH = 800;\n+    @SpringBean\n+    private ResourceRestClient resourceRestClient;\n+\n+    @SpringBean\n+    private ConnectorRestClient connectorRestClient;\n \n     public TopologyNodePanel(\n-            final String id, final TopologyNode node, final PageReference pageRef, final BaseRestClient restClient) {\n+            final String id,\n+            final TopologyNode node,\n+            final PageReference pageRef,\n+            final ModalWindow modal) {\n         super(id);\n \n         final String resourceName = node.getDisplayName().length() > 20\n@@ -64,108 +72,115 @@ public TopologyNodePanel(\n         switch (node.getKind()) {\n             case SYNCOPE:\n                 title = \"\";\n-                add(getSyncopeFragment(node, (ResourceRestClient) restClient, pageRef));\n+                add(getSyncopeFragment(node, pageRef));\n                 break;\n             case CONNECTOR_SERVER:\n                 title = node.getDisplayName();\n-                add(getConnectorServerFragment(node, (ResourceRestClient) restClient, pageRef));\n+                add(getConnectorServerFragment(node, pageRef));\n                 break;\n             case CONNECTOR:\n                 title = (StringUtils.isBlank(node.getConnectionDisplayName())\n                         ? \"\" : node.getConnectionDisplayName() + \":\") + node.getDisplayName();\n-                add(getConnectorFragment(node, (ResourceRestClient) restClient, pageRef));\n+                add(getConnectorFragment(node, pageRef));\n                 break;\n             default:\n                 title = node.getDisplayName().length() > 20 ? node.getDisplayName() : \"\";\n-                add(getResurceFragment(node, (ResourceRestClient) restClient, pageRef));\n+                add(getResurceFragment(node, pageRef));\n         }\n \n         if (StringUtils.isNotEmpty(title)) {\n             add(AttributeModifier.append(\"data-original-title\", title));\n         }\n \n         this.setMarkupId(node.getDisplayName());\n+\n+        this.modal = modal;\n     }\n \n-    private Fragment getSyncopeFragment(\n-            final TopologyNode node, final ResourceRestClient restClient, final PageReference pageRef) {\n+    private Fragment getSyncopeFragment(final TopologyNode node, final PageReference pageRef) {\n         final Fragment fragment = new Fragment(\"actions\", \"syncopeActions\", this);\n-\n-        final ModalWindow createWin = new ModalWindow(\"createWin\");\n-        fragment.add(createWin);\n-\n-        createWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createWin.setInitialHeight(RESOURCE_MODAL_WIN_HEIGHT);\n-        createWin.setInitialWidth(RESOURCE_MODAL_WIN_WIDTH);\n-        createWin.setTitle(new ResourceModel(\"connector.new\"));\n-        createWin.setCookieName(\"connector-modal\");\n-\n+        fragment.setOutputMarkupId(true);\n         return fragment;\n     }\n \n-    private Fragment getConnectorServerFragment(\n-            final TopologyNode node, final ResourceRestClient restClient, final PageReference pageRef) {\n+    private Fragment getConnectorServerFragment(final TopologyNode node, final PageReference pageRef) {\n         final Fragment fragment = new Fragment(\"actions\", \"syncopeActions\", this);\n-\n-        final ModalWindow createWin = new ModalWindow(\"createWin\");\n-        fragment.add(createWin);\n-\n-        createWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createWin.setInitialHeight(RESOURCE_MODAL_WIN_HEIGHT);\n-        createWin.setInitialWidth(RESOURCE_MODAL_WIN_WIDTH);\n-        createWin.setCookieName(\"connector-modal\");\n-        createWin.setTitle(new ResourceModel(\"connector.new\"));\n-\n         return fragment;\n     }\n \n-    private Fragment getConnectorFragment(\n-            final TopologyNode node, final ResourceRestClient restClient, final PageReference pageRef) {\n+    private Fragment getConnectorFragment(final TopologyNode node, final PageReference pageRef) {\n         final Fragment fragment = new Fragment(\"actions\", \"connectorWithNoResourceActions\", this);\n+        fragment.setOutputMarkupId(true);\n \n-        final ModalWindow createWin = new ModalWindow(\"createWin\");\n-        fragment.add(createWin);\n+        final AjaxLink<String> delete = new ClearIndicatingAjaxLink<String>(\"delete\", pageRef) {\n \n-        createWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createWin.setInitialHeight(RESOURCE_MODAL_WIN_HEIGHT);\n-        createWin.setInitialWidth(RESOURCE_MODAL_WIN_WIDTH);\n-        createWin.setCookieName(\"resource-modal\");\n-        createWin.setTitle(new ResourceModel(\"resource.new\"));\n+            private static final long serialVersionUID = 3776750333491622263L;\n \n-        final ModalWindow editWin = new ModalWindow(\"editWin\");\n-        fragment.add(editWin);\n+            @Override\n+            public void onClickInternal(final AjaxRequestTarget target) {\n+                try {\n+                    connectorRestClient.delete(Long.class.cast(node.getKey()));\n+                    target.appendJavaScript(String.format(\"jsPlumb.remove('%s');\", node.getKey()));\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                } catch (SyncopeClientException e) {\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    LOG.error(\"While deleting resource {}\", node.getKey(), e);\n+                }\n+            }\n+        };\n+        fragment.add(delete);\n \n-        editWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editWin.setInitialHeight(RESOURCE_MODAL_WIN_HEIGHT);\n-        editWin.setInitialWidth(RESOURCE_MODAL_WIN_WIDTH);\n-        editWin.setCookieName(\"connector-modal\");\n-        editWin.setTitle(MessageFormat.format(getString(\"connector.edit\"), node.getKey()));\n+        final AjaxLink<String> create = new ClearIndicatingAjaxLink<String>(\"create\", pageRef) {\n+\n+            private static final long serialVersionUID = 3776750333491622263L;\n+\n+            @Override\n+            public void onClickInternal(final AjaxRequestTarget target) {\n+                final ResourceTO resourceTO = new ResourceTO();\n+                resourceTO.setConnector(Long.class.cast(node.getKey()));\n+                resourceTO.setConnectorDisplayName(node.getDisplayName());\n+\n+                modal.setContent(new ResourceModal(modal, pageRef, resourceTO, true));\n+\n+                modal.setTitle(getString(\"resource.new\"));\n+                modal.show(target);\n+            }\n+        };\n+        fragment.add(create);\n+\n+        final AjaxLink<String> edit = new ClearIndicatingAjaxLink<String>(\"edit\", pageRef) {\n+\n+            private static final long serialVersionUID = 3776750333491622263L;\n+\n+            @Override\n+            public void onClickInternal(final AjaxRequestTarget target) {\n+\n+                modal.setContent(new ConnectorModal(\n+                        modal,\n+                        pageRef,\n+                        connectorRestClient.read(Long.class.cast(node.getKey()))));\n+\n+                modal.setTitle(MessageFormat.format(getString(\"connector.edit\"), node.getKey()));\n+                modal.show(target);\n+            }\n+        };\n+        fragment.add(edit);\n \n         return fragment;\n     }\n \n-    private Fragment getResurceFragment(\n-            final TopologyNode node, final ResourceRestClient restClient, final PageReference pageRef) {\n+    private Fragment getResurceFragment(final TopologyNode node, final PageReference pageRef) {\n         final Fragment fragment = new Fragment(\"actions\", \"resourceActions\", this);\n \n-        final ModalWindow editWin = new ModalWindow(\"editWin\");\n-        fragment.add(editWin);\n-\n-        editWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editWin.setInitialHeight(RESOURCE_MODAL_WIN_HEIGHT);\n-        editWin.setInitialWidth(RESOURCE_MODAL_WIN_WIDTH);\n-        editWin.setCookieName(\"resource-modal\");\n-        editWin.setTitle(MessageFormat.format(getString(\"resource.edit\"), node.getKey()));\n-\n-        final AjaxLink<String> delete = new IndicatingAjaxLink<String>(\"delete\") {\n+        final AjaxLink<String> delete = new ClearIndicatingAjaxLink<String>(\"delete\", pageRef) {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target) {\n+            public void onClickInternal(final AjaxRequestTarget target) {\n                 try {\n-                    restClient.delete(node.getKey().toString());\n-                    target.appendJavaScript(String.format(\"jsPlumb.remove('%s');\", node.getDisplayName()));\n+                    resourceRestClient.delete(node.getKey().toString());\n+                    target.appendJavaScript(String.format(\"jsPlumb.remove('%s');\", node.getKey()));\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                 } catch (SyncopeClientException e) {\n                     error(getString(Constants.ERROR) + \": \" + e.getMessage());\n@@ -175,27 +190,21 @@ public void onClick(final AjaxRequestTarget target) {\n         };\n         fragment.add(delete);\n \n-        final AjaxLink<String> edit = new IndicatingAjaxLink<String>(\"edit\") {\n+        final AjaxLink<String> edit = new ClearIndicatingAjaxLink<String>(\"edit\", pageRef) {\n \n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                editWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    private static final long serialVersionUID = -7834632442532690940L;\n-\n-                    @Override\n-                    public Page createPage() {\n-                        return new ResourceModalPage(\n-                                pageRef,\n-                                editWin,\n-                                restClient.read(node.getKey().toString()),\n-                                false);\n-                    }\n-                });\n-\n-                editWin.show(target);\n+            public void onClickInternal(final AjaxRequestTarget target) {\n+\n+                modal.setContent(new ResourceModal(\n+                        modal,\n+                        pageRef,\n+                        resourceRestClient.read(node.getKey().toString()),\n+                        false));\n+\n+                modal.setTitle(MessageFormat.format(getString(\"resource.edit\"), node.getKey()));\n+                modal.show(target);\n             }\n         };\n         fragment.add(edit);"},{"sha":"434c7ea12f1f17bc09ee7ac5fd3c9e38a2b7b12f","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyReloadBehavior.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/67c79ab6da9877f6014727e8ef73f1196ba5318b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyReloadBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/67c79ab6da9877f6014727e8ef73f1196ba5318b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyReloadBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyReloadBehavior.java?ref=67c79ab6da9877f6014727e8ef73f1196ba5318b","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.topology;\n-\n-import org.apache.wicket.Component;\n-import org.apache.wicket.behavior.Behavior;\n-import org.apache.wicket.markup.head.IHeaderResponse;\n-import org.apache.wicket.markup.head.OnLoadHeaderItem;\n-\n-public class TopologyReloadBehavior extends Behavior {\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    private final String source;\n-\n-    private final String target;\n-\n-    private final TopologyNode.Status status;\n-\n-    public TopologyReloadBehavior(final String source, final String target, final TopologyNode.Status status) {\n-        this.source = source;\n-        this.target = target;\n-        this.status = status;\n-    }\n-\n-    @Override\n-    public void renderHead(final Component component, final IHeaderResponse response) {\n-\n-        switch (status) {\n-            case UNKNOWN:\n-                response.render(OnLoadHeaderItem.forScript(String.format(\"unknown('%s', '%s')\", source, target)));\n-                break;\n-            case REACHABLE:\n-                response.render(OnLoadHeaderItem.forScript(String.format(\"enable('%s', '%s')\", source, target)));\n-                break;\n-            case UNREACHABLE:\n-                response.render(OnLoadHeaderItem.forScript(String.format(\"disable('%s', '%s')\", source, target)));\n-                break;\n-            default:\n-                response.render(OnLoadHeaderItem.forScript(String.format(\"failure('%s', '%s')\", source, target)));\n-            // remove subtree\n-        }\n-    }\n-\n-}"},{"sha":"be3f04d0419c05e2688b428779b466b3820e7ec6","filename":"client/console/src/main/resources/META-INF/resources/css/topology.css","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -60,12 +60,6 @@\n     filter:alpha(opacity=60);\n }\n \n-.active {\n-    border:1px dotted green;\n-}\n-.hover {\n-    border:1px dotted red;\n-}\n ._jsPlumb_dragging { \n     z-index:4000;\n }\n@@ -116,6 +110,7 @@ div#drawing {\n div#zoom {\n     padding : 10px;\n     text-align: right;\n+    width: 100%;\n }\n \n div#zoom .fa{"},{"sha":"f2a7ac359aa4989b5a8fe3c7cd41ce9461acb95f","filename":"client/console/src/main/resources/META-INF/resources/js/topology.js","status":"modified","additions":84,"deletions":17,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fjs%2Ftopology.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fjs%2Ftopology.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fjs%2Ftopology.js?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -47,15 +47,8 @@ var failedConnectorStyle = {\n     outlineWidth: 1\n };\n \n-var disabledConnectorStyle = {\n-    lineWidth: 2,\n-    strokeStyle: \"rgba(255, 69, 0, 1)\",\n-    outlineColor: \"#666\",\n-    outlineWidth: 1\n-};\n-\n-var disabledConnectorHoverStyle = {\n-    strokeStyle: \"#FF8C00\" \n+var failedConnectorHoverStyle = {\n+    strokeStyle: \"#FFFFFF\" \n };\n \n var failedEndpointStyle = {\n@@ -69,6 +62,17 @@ var failedEndpointStyle = {\n     radius: 3.5\n };\n \n+var disabledConnectorStyle = {\n+    lineWidth: 2,\n+    strokeStyle: \"rgba(255, 69, 0, 1)\",\n+    outlineColor: \"#666\",\n+    outlineWidth: 1\n+};\n+\n+var disabledConnectorHoverStyle = {\n+    strokeStyle: \"#FF8C00\" \n+};\n+\n var disabledEndpointStyle = {\n     gradient: {\n \tstops: [\n@@ -102,22 +106,22 @@ var enabledEndpointStyle = {\n     radius: 3.5\n };\n \n-function disable(sourceName, targetName){\n-    jsPlumb.select({target:targetName}).setPaintStyle(disabledConnectorStyle).setHoverPaintStyle({strokeStyle: \"#FF8C00\" });\n+window.disable = function(targetName){\n+    jsPlumb.select({target:targetName}).setPaintStyle(disabledConnectorStyle).setHoverPaintStyle(disabledConnectorHoverStyle);\n     jsPlumb.selectEndpoints({element: [targetName]}).setPaintStyle(disabledEndpointStyle);\n }\n \n-function enable(sourceName, targetName){\n-    jsPlumb.select({target:targetName}).setPaintStyle(enabledConnectorStyle).setHoverPaintStyle({strokeStyle: \"#00FF00\" });\n+window.enable = function(targetName){\n+    jsPlumb.select({target:targetName}).setPaintStyle(enabledConnectorStyle).setHoverPaintStyle(enabledConnectorHoverStyle);\n     jsPlumb.selectEndpoints({element: [targetName]}).setPaintStyle(enabledEndpointStyle);\n }\n \n-function failure(sourceName, targetName){\n-    jsPlumb.select({target:targetName}).setPaintStyle(failedConnectorStyle).setHoverPaintStyle({strokeStyle: \"#FFFFFF\" });\n+window.failure = function(targetName){\n+    jsPlumb.select({target:targetName}).setPaintStyle(failedConnectorStyle).setHoverPaintStyle(failedConnectorHoverStyle);\n     jsPlumb.selectEndpoints({element: [targetName]}).setPaintStyle(failedEndpointStyle);\n }\n \n-function unknown(sourceName, targetName){\n+window.unknown = function(targetName){\n }\n \n function getTopology(){\n@@ -216,6 +220,12 @@ window.zoomOut = function(el, instance, transformOrigin) {\n     $.cookie(\"topology\", JSON.stringify(val), { expires: 9999 });\n };\n \n+window.connect = function(source, target, scope){\n+    if(jsPlumb.select({source:source, target:target, scope: scope}) !=null){\n+\tjsPlumb.connect({source:source, target:target, scope: scope}, def);\n+    }\n+}\n+\n window.activate = function(zoom){\n     jsPlumb.draggable(jsPlumb.getSelector(\".window\"));\n     jsPlumb.setContainer(\"drawing\");\n@@ -228,11 +238,46 @@ window.activate = function(zoom){\n     var val = getTopology();\n     if(val.__zoom__ == null){\n \tsetZoom($(\"#drawing\")[0], zoom);\n-    }else{\n+    } else {\n \tsetZoom($(\"#drawing\")[0], val.__zoom__);\n     }\n }\n \n+window.checkConnection = function() {\n+    jsPlumb.select({scope:\"CONNECTOR\"}).each(function(connection) {\n+        Wicket.WebSocket.send(\"{ \\\"kind\\\":\\\"CHECK_CONNECTOR\\\", \\\"target\\\":\\\"\" + connection.target.id + \"\\\" }\");\n+    });\n+    jsPlumb.select({scope:\"RESOURCE\"}).each(function(connection) {\n+        Wicket.WebSocket.send(\"{ \\\"kind\\\":\\\"CHECK_RESOURCE\\\", \\\"target\\\":\\\"\" + connection.target.id + \"\\\" }\");\n+    });\n+}\n+\n+window.addEndpoint = function(source, target, scope) {\n+    var sourceElement = $('#' + source);\n+    var element = sourceElement.clone();\n+    element.attr('id', target);\n+    element.removeAttr('data-original-title');\n+    \n+    var top = parseFloat(sourceElement.css(\"top\")) + 10;\n+    var left = parseFloat(sourceElement.css(\"left\")) - 150;\n+\n+    if(scope == 'RESOURCE'){\n+\tvar style = 'topology_res';\n+    }else{\n+\tvar style = 'topology_conn';\n+    }\n+    \n+    element.attr('class', 'window jsplumb-draggable _jsPlumb_endpoint_anchor_ ' + style);\n+    \n+    element.find('p').text(target);\n+    \n+    $('#drawing').append(element);\n+    setPosition(target, left, top);\n+    \n+    jsPlumb.draggable(element);\n+    jsPlumb.connect({ source:source, target:target, scope:scope }, def);\n+}\n+\n jsPlumb.importDefaults({\n     Connector : [ \"Straight\" ],\n     DragOptions: {\n@@ -242,3 +287,25 @@ jsPlumb.importDefaults({\n     HoverClass: \"connector-hover\"\n });\n \n+jQuery(function($) {\n+    Wicket.Event.subscribe(\"/websocket/message\", function(jqEvent, message) {\n+\tvar val = JSON.parse(decodeURIComponent(message));\n+\tswitch (val.status) {\n+\tcase 'UNKNOWN':\n+\t    unknown(val.target);\n+\t    break;\n+        case 'REACHABLE':\n+\t    enable(val.target);\n+\t    break;\n+\tcase 'UNREACHABLE':\n+\t    disable(val.target);\n+\t    break;\n+        case 'FAILURE':\n+\t    failure(val.target);\n+\t    break;\n+\tdefault:\n+\t    break;\n+\t}\n+    });\n+});\n+"},{"sha":"04cd14e951a92a395f7c2755e3279b05b30e064c","filename":"client/console/src/main/resources/META-INF/web-fragment.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -44,7 +44,7 @@ under the License.\n     \n   <filter>\n     <filter-name>SyncopeConsole</filter-name>\n-    <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>\n+    <filter-class>org.apache.wicket.protocol.ws.javax.JavaxWebSocketFilter</filter-class>\n     <init-param>\n       <param-name>filterMappingUrlPattern</param-name>\n       <param-value>/*</param-value>"},{"sha":"b01e9d9a7cd866ca28a47f5dc75a6ea05bbe755f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -39,7 +39,7 @@\n     <script type=\"text/javascript\" src=\"webjars/bootstrap/${bootstrap.version}/js/bootstrap.min.js\"></script>\n     <script type=\"text/javascript\" src=\"webjars/bootstrap-select/${bootstrap-select.version}/dist/js/bootstrap-select.min.js\"></script>\n     <script type=\"text/javascript\" src=\"js/AdminLTE-app.min.js\"></script>\n-    \n+\n     <script type=\"text/javascript\">\n       var notificationShownTimes = 0;\n       function showNotification(componentId, messagecount) {"},{"sha":"b85acb6c927526e7efd02b93bc68a9bac0be200b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorModal.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.html?ref=a20510123b4300150d43ff334335e218a3572c33","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ConnectorModalPage.html"},{"sha":"8500f1a429a4eba29ffbe4ed24dd69e18b96c76c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorModal.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.properties?ref=a20510123b4300150d43ff334335e218a3572c33","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ConnectorModalPage.properties"},{"sha":"96080c39c9b5bb2557ef4e7a50215652c59b31bc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorModal_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_it.properties?ref=a20510123b4300150d43ff334335e218a3572c33","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ConnectorModalPage_it.properties"},{"sha":"b68821677077beea6ca5c73e45ff99206dac3a55","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorModal_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_pt_BR.properties?ref=a20510123b4300150d43ff334335e218a3572c33","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ConnectorModalPage_pt_BR.properties"},{"sha":"d5fe13b74bed401a733001fe91e80f7db4f4012b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Connectors.html","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/67c79ab6da9877f6014727e8ef73f1196ba5318b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectors.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/67c79ab6da9877f6014727e8ef73f1196ba5318b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectors.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectors.html?ref=67c79ab6da9877f6014727e8ef73f1196ba5318b","patch":"@@ -1,57 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n-  <body>\n-    <wicket:panel>\n-\n-      <div>\n-        <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n-          <span wicket:id=\"connectorContainer\">\n-            <span wicket:id=\"connectorDatatable\">[connectors]</span>\n-          </span>\n-\n-          <span style=\"float:right\">\n-            <form wicket:id=\"connectorPaginatorForm\" style=\"display:inline\">\n-              <label><wicket:message key=\"displayRows\"/></label>\n-              <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"rowsChooser\"/>\n-            </form>\n-          </span>\n-        </div>\n-\n-        <div wicket:id=\"createConnectorWin\">[Show modal window for creating connector]</div>\n-        <div wicket:id=\"editConnectorWin\">[Show modal window for editing connector]</div>\n-\n-        <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"createConnectorLink\">\n-          <wicket:message key=\"create-connector\"/>\n-        </a>\n-      </div>\n-\n-      <div>\n-        <a href=\"#\" style=\"position: absolute; top: 4px; right:20px;\" wicket:id=\"reloadLink\">\n-          <img src=\"img/reload_30.png\" width=\"25\" height=\"25\"\n-               alt=\"Reload connectors\" title=\"title\" wicket:message=\"title:reloadConnectors\"/>\n-        </a>\n-      </div>    \n-\n-    </wicket:panel>\n-  </body>\n-</html>"},{"sha":"471a985a1e469ea02b57ac1ff7e790d92df88ea3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ModalContent.html","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.html?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -0,0 +1,45 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+\n+  <wicket:head>\n+    <script type=\"text/javascript\">\n+      var notificationShownTimes = 0;\n+\n+      function showNotification(componentId, messagecount) {\n+        notificationShownTimes++;\n+        timeout = 1700 + (messagecount * 500) + notificationShownTimes * 200;\n+        $('div#' + componentId).fadeTo('normal', 1.0);\n+        setTimeout(\"$('div#\" + componentId + \"').fadeOut('normal')\", timeout);\n+      }\n+    </script>\n+\n+    <style type=\"text/css\">\n+      table.palette td.header {\n+        background:url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\")\n+          repeat-x scroll 50% 50% #E6E6E6 !important;\n+      }\n+    </style>\n+  </wicket:head>\n+\n+  <wicket:panel>\n+    <div wicket:id=\"feedback\"/>\n+    <wicket:child />\n+  </wicket:panel>\n+</html>"},{"sha":"e696256253538b61b1dc4c454f87d717cfd59c12","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ModalContent.properties","status":"renamed","additions":4,"deletions":18,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.properties?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -14,21 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-tab1=Resources\n-edit=Edit\n-delete=Delete\n-create-resource=Create\n-propagationPriority=Propagation priority\n-propagationPrimary=Propagation primary\n-\n-tab2=Connectors\n-displayName=Display name\n-version=Version\n-bundleName=Bundle name\n-edit=Edit\n-delete=Delete\n-create-connector=Create\n-delete_error=Operation forbidden:the connector you're trying to delete is connected to a Resource\n-connector=Connector\n-reloadConnectors=Reload connectors\n-confirmReloadConnectors=This request is potentially dangerous for running operations, continue?\n+submit=Save\n+add=Add\n+remove=Delete\n+cancel=Cancel","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Connectors.properties"},{"sha":"58e0aa09b12a1bd922cb8944990fdff539b62e55","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ModalContent_it.properties","status":"renamed","additions":4,"deletions":18,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent_it.properties?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -14,21 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-tab1=Risorse\n-edit=Modifica\n-delete=Rimuovi\n-create-resource=Crea\n-propagationPriority=Priorit\\u00e0 in propagazione\n-propagationPrimary=Primaria in propagazione\n-\n-tab2=Connettori\n-create-connector=Crea\n-version=Versione\n-bundleName=Bundle name\n-edit=Modifica\n-delete=Elimina\n-delete_error=Operazione vietata: il connettore che si desidera rimuovere \\u00e8 correlato ad una risorsa\n-displayName=Nome visualizzato\n-connector=Connettore\n-reloadConnectors=Ricarica connettori\n-confirmReloadConnectors=Questa richiesta \\u00e8 potenzialmente dannosa per le operazioni in corso, proseguire?\n+submit=Salva\n+add=Aggiungi\n+remove=Elimina\n+cancel=Annulla","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Connectors_it.properties"},{"sha":"490fe3096af1dd4d7c8ac6f2c0416e49a25f8e9c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ModalContent_pt_BR.properties","status":"renamed","additions":4,"deletions":16,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent_pt_BR.properties?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -14,19 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-tab1=Recursos\n-edit=Alterar\n-delete=Excluir\n-create-resource=Criar\n-propagationPriority=Prioridade de propaga\\u00e7\\u00e3o\n-propagationPrimary=Propaga\\u00e7\\u00e3o prim\\u00e1ria\n-\n-tab2=Conectores\n-displayName=Mostar\n-version=Vers\\u00e3o\n-bundleName=Nome do Pacote\n-create-connector=Criar\n-delete_error=Opera\\u00e7\\u00e3o n\\u00e3o permitida\\: o conector que voc\\u00ea est\\u00e1 tentando excluir est\\u00e1 conectado a um recurso\n-connector=Conector\n-reloadConnectors=Carregar Conector\n-confirmReloadConnectors=Esta requis\\u00e7\\u00e3o \\u00e9 potencialmente perigosa para opera\\u00e7\\u00f5es em execu\\u00e7\\u00e3o, prosseguir?\n+submit=Salvar\n+add=Adicionar\n+remove=Remover\n+cancel=Cancelar","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Connectors_pt_BR.properties"},{"sha":"8cb22f0cf80e42bdc95e4286d3aec1bb7880f73a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal.html","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.html?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -0,0 +1,56 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <form wicket:id=\"form\">\n+      <div class=\"tabbable tabs-left\">\n+        <ul class=\"nav nav-tabs\">\n+          <li class=\"active\"><a  data-toggle=\"tab\" href=\"#resource\"><span><wicket:message key=\"resource\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#umapping\"><span><wicket:message key=\"umapping\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#gmapping\"><span><wicket:message key=\"gmapping\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#connectorProperties\"><span><wicket:message key=\"connectorProperties\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n+        </ul>\n+        <div class=\"tab-content\">\n+          <div id=\"resource\" class=\"tab-pane active\">\n+            <span wicket:id=\"details\">[details]</span>\n+            <span wicket:id=\"systeminformation\">[System Information]</span>\n+          </div>\n+          <div id=\"umapping\" class=\"tab-pane\">\n+            <span wicket:id=\"umapping\">[umapping]</span>\n+          </div>\n+          <div id=\"gmapping\" class=\"tab-pane\">\n+            <span wicket:id=\"gmapping\">[gmapping]</span>\n+          </div>\n+          <div id=\"connectorProperties\" class=\"tab-pane\">\n+            <span wicket:id=\"connconf\">[connconf]</span>\n+          </div>\n+          <div id=\"security\" class=\"tab-pane\">\n+            <span wicket:id=\"security\">[security]</span>\n+          </div>\n+        </div>\n+      </div>\n+\n+      <div class=\"modal-footer\">\n+        <input type=\"submit\" class=\"btn btn-primary\" wicket:id=\"apply\"/>\n+        <input type=\"button\" class=\"btn btn-default\" wicket:id=\"cancel\"/>\n+      </div> \n+    </form>\n+  </wicket:extend>\n+</html>"},{"sha":"789919b55be1d08f2f0dfbaa603acead628432ee","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal.properties","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -0,0 +1,60 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=Resource details\n+umapping=User mapping\n+connectorProperties=Connector properties\n+security=Security\n+required_alert=All form fields are required\n+connector=Connector\n+existing_resources=Existing resources\n+action=Action\n+edit_attribute=Edit resource\n+title=Resource\n+extAttrNames=External attributes\n+intMappingTypes=Internal mapping types\n+entity=Entity\n+groupSchema=Group Schema\n+connObjectKey=ConnObjectKey\n+mandatoryCondition=Mandatory\n+password=Password\n+purpose=Purpose\n+mappingUserSchema=Mapping User Schema\n+mappingGroupSchema=Mapping Group Schema\n+delete=Delete\n+intAttrNames=Internal attributes\n+enforceMandatoryCondition=Enforce mandatory condition\n+fieldName=Field name\n+\n+connObjectKeyValidation=There must be exactly one ConnObjectKey\n+propagationMode=Propagation mode\n+connObjectLink=ConnObjectLink\n+enable=Enable\n+\n+createTraceLevel=Create trace level\n+updateTraceLevel=Update trace level\n+deleteTraceLevel=Delete trace level\n+syncTraceLevel=Synchronization trace level\n+propagationPriority=Propagation priority\n+propagationPrimary=Propagation primary\n+\n+success_connection=Successful connection\n+error_connection=Connection failure\n+check=Check connection\n+actionsClasses=Actions classes\n+gmapping=Group mapping\n+new=New resource\n+randomPwdIfNotProvided=Generate random passwords when missing"},{"sha":"54179a5558a17ffdf5d59fabcffa94608fb67881","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal_it.properties","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -0,0 +1,60 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=Dettagli Risorsa\n+umapping=Mapping utenti\n+connectorProperties=Propriet\\u00e0\\u00a0 Connettore\n+security=Sicurezza\n+required_alert=Tutti i campi sono richiesti\n+connector=Connettore\n+existing_resources=Risorse esistenti\n+action=Azione\n+edit_attribute=Modifica risorsa\n+title=Risorsa\n+extAttrNames=Attributi esterni\n+intMappingTypes=Tipo mapping interno\n+entity=Entit&agrave;\n+groupSchema=Schema Gruppo\n+connObjectKey=ConnObjectKey\n+mandatoryCondition=Obbligatorio\n+password=Password\n+purpose=Scopo\n+mappingUserSchema=Mapping User Schema\n+mappingGroupSchema=Mapping Group Schema\n+delete=Rimuovi\n+intAttrNames=Attributi interni\n+enforceMandatoryCondition=Abilita mandatory condition\n+fieldName=Nome campo\n+\n+connObjectKeyValidation=Deve essere definito esattamente un ConnObjectKey\n+propagationMode=Modalit\\u00e0 di propagazione\n+connObjectLink=ConnObjectLink\n+enable=Abilita\n+\n+createTraceLevel=Livello di tracciamento delle creazioni\n+updateTraceLevel=Livello di tracciamento degli aggiornamenti\n+deleteTraceLevel=Livello di tracciamento delle cancellazioni\n+syncTraceLevel=Livello di tracciamento delle sincronizzazioni\n+propagationPriority=Priorit\\u00e0 in propagazione\n+propagationPrimary=Primaria in propagazione\n+\n+success_connection=Connessione avvenuta con successo\n+error_connection=Connessione non riuscita\n+check=Verifica connessione\n+actionsClasses=Classi azioni\n+gmapping=Mapping gruppi\n+new=Nuova risorsa\n+randomPwdIfNotProvided=Genera password casuali se mancanti"},{"sha":"45c36163265df7d9144030baf20785b15b531413","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal_pt_BR.properties","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -0,0 +1,60 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resource=Detalhes de Recursos\n+umapping=Mapeamento de usu\\u00e1rios\n+connectorProperties=Propriedades de Conectores\n+security=Seguran\\u00e7a\n+required_alert=Todos os campos deste formul\\u00e1rio s\\u00e3o obrigat\\u00f3rios\n+connector=Conector\n+existing_resources=Recursos Existentes\n+action=A\\u00e7\\u00e3o\n+edit_attribute=Alterar Recurso\n+title=Recurso\n+extAttrNames=Atributos Externos\n+intMappingTypes=Tipos internos de mapeamentos\n+entity=Entidade\n+groupSchema=Esquema de Grupo\n+connObjectKey=ConnObjectKey\n+mandatoryCondition=Obrigat\\u00f3rio\n+password=Senha\n+purpose=Prop\\u00f3sito\n+mappingUserSchema=Esquema de mapeamento de usu\\u00e1rio\n+mappingGroupSchema=Esquema de mapeamento de grupo\n+delete=Excluir\n+intAttrNames=Atributos internos\n+enforceMandatoryCondition=Aplicar condi\\u00e7\\u00e3o obrigat\\u00f3ria\n+fieldName=Nome do Campo\n+\n+connObjectKeyValidation=Precisa ser exatamente um ConnObjectKey\n+propagationMode=Modo de propaga\\u00e7\\u00e3o\n+connObjectLink=ConnObjectLink\n+enable=Habilitado\n+\n+createTraceLevel=Criar n\\u00edvel de trace\n+updateTraceLevel=Atualizar n\\u00edvel de trace\n+deleteTraceLevel=Excluir n\\u00edvel de trace\n+syncTraceLevel=N\\u00edvel de trace de sincroniza\\u00e7\\u00e3o\n+propagationPriority=Prioridade de propaga\\u00e7\\u00e3o\n+propagationPrimary=Propaga\\u00e7\\u00e3o prim\\u00e1ria\n+\n+success_connection=Conex\\u00e3o com sucesso\n+error_connection=Conex\\u00e3o sem sucesso\n+check=Verificar a conex\\u00e3o\n+actionsClasses=Classes de a\\u00e7\\u00f5es\n+gmapping=Mapeamento de grupos\n+new=Novo recurso\n+randomPwdIfNotProvided=Gerar senhas aleat\\u00f3rias quando n\\u00e3o houver"},{"sha":"8df7df7dad69196f8e8749e31d18b0fdb176094d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/Topology.html","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -1,4 +1,4 @@\n-  <!DOCTYPE html>\n+<!DOCTYPE html>\n <!--\n Licensed to the Apache Software Foundation (ASF) under one\n or more contributor license agreements.  See the NOTICE file\n@@ -23,6 +23,20 @@\n     <script type=\"text/javascript\" src=\"webjars/jquery-cookie/${jquery-cookie.version}/jquery.cookie.js\"></script>\n     <script type=\"text/javascript\" src=\"js/topology.js\"></script>\n     <link href=\"css/topology.css\" rel=\"stylesheet\"/>\n+\n+    <style type=\"text/css\">\n+      legend {\n+        font-weight: bold;\n+      }\n+      #sentMessages {\n+        display: none;\n+      }\n+      #messages {\n+        margin: 5px;\n+        padding: 5px;\n+        border: 2px groove #f5f5f5;\n+      }\n+    </style>\n   </wicket:head>\n   <wicket:extend>\n     <div id=\"zoom\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n@@ -45,8 +59,9 @@\n             <div class=\"window topology_res\" wicket:id=\"res\" onmouseup=\"refreshPosition(this)\">[resource]</div>\n           </span>\n         </span>\n-        <span wicket:id=\"jsPlace\"></span>\n       </div>\n+      <span wicket:id=\"jsPlace\"></span>\n     </div>\n+    <div wicket:id=\"modal\">[modal]</div>\n   </wicket:extend>\n </html>"},{"sha":"ed238c70c9d4360a0e5866299e845c13223d1b96","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyNodePanel.html","status":"modified","additions":3,"deletions":11,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.html?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -28,37 +28,29 @@\n \n     <p class=\"text-center text-primary\" wicket:id=\"label\"/>\n \n-    <span wicket:id=\"timer\" />\n-\n     <wicket:fragment wicket:id=\"connectorWithResourceActions\">\n-      <div wicket:id=\"createWin\">[createWin]</div>\n-      <div wicket:id=\"editWin\">[editWin]</div>\n       <ul role=\"menu\" class=\"dropdown-menu\">\n         <li><a href=\"#\"><i class=\"fa fa-plus\"></i></a></li>\n         <li><a href=\"#\"><i class=\"fa fa-pencil\"></i></a></li>\n       </ul>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"connectorWithNoResourceActions\">\n-      <div wicket:id=\"createWin\">[createWin]</div>\n-      <div wicket:id=\"editWin\">[editWin]</div>\n       <ul role=\"menu\" class=\"dropdown-menu\">\n-        <li><a href=\"#\"><i class=\"fa fa-plus\"></i></a></li>\n-        <li><a href=\"#\"><i class=\"fa fa-minus\"></i></a></li>\n-        <li><a href=\"#\"><i class=\"fa fa-pencil\"></i></a></li>\n+        <li><a href=\"#\" wicket:id=\"create\"><i class=\"fa fa-plus\"></i></a></li>\n+        <li><a href=\"#\" wicket:id=\"delete\"><i class=\"fa fa-minus\"></i></a></li>\n+        <li><a href=\"#\" wicket:id=\"edit\"><i class=\"fa fa-pencil\"></i></a></li>\n       </ul>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"resourceActions\">\n-      <div wicket:id=\"editWin\">[editWin]</div>\n       <ul role=\"menu\" class=\"dropdown-menu\">\n         <li><a href=\"#\" wicket:id=\"delete\"><i class=\"fa fa-minus\"></i></a></li>\n         <li><a href=\"#\" wicket:id=\"edit\"><i class=\"fa fa-pencil\"></i></a></li>\n       </ul>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"syncopeActions\">\n-      <div wicket:id=\"createWin\">[createWin]</div>\n       <ul role=\"menu\" class=\"dropdown-menu\">\n         <li><a href=\"#\"><i class=\"fa fa-plus\"></i></a></li>\n       </ul>"},{"sha":"85433819343a881562395ba6525c22d78ceae0dc","filename":"pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a20510123b4300150d43ff334335e218a3572c33/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a20510123b4300150d43ff334335e218a3572c33/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=a20510123b4300150d43ff334335e218a3572c33","patch":"@@ -875,6 +875,11 @@ under the License.\n         <artifactId>wicket-jquery-ui</artifactId>\n         <version>${wicket-jqueryui.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>org.apache.wicket</groupId>\n+        <artifactId>wicket-native-websocket-javax</artifactId>\n+        <version>${wicket.version}</version>\n+      </dependency>\n       <!-- /Wicket -->\n       \n       <dependency>"}]}