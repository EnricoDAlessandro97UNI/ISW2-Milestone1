{"sha":"23dc1838403a3f7df808edded744e3a682a09690","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIzZGMxODM4NDAzYTNmN2RmODA4ZWRkZWQ3NDRlM2E2ODJhMDk2OTA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-15T15:35:49Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-10-15T15:35:49Z"},"message":"Some minor cleanup, including further removal of JAXB collection setters\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1532392 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"07b1011e52b7b343012b954c09a7e617b6c1b8bd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/07b1011e52b7b343012b954c09a7e617b6c1b8bd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/23dc1838403a3f7df808edded744e3a682a09690","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/23dc1838403a3f7df808edded744e3a682a09690","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/23dc1838403a3f7df808edded744e3a682a09690","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/23dc1838403a3f7df808edded744e3a682a09690/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9db5e6b44325aff5f9179f2f6910ea2a718f7744","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9db5e6b44325aff5f9179f2f6910ea2a718f7744","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9db5e6b44325aff5f9179f2f6910ea2a718f7744"}],"stats":{"total":187,"additions":76,"deletions":111},"files":[{"sha":"759711613bbaf999064887c1582b76e8c1ae879c","filename":"client/src/main/java/org/apache/syncope/client/SyncopeClient.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClient.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -21,6 +21,7 @@\n import java.net.URI;\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n+import javax.ws.rs.core.MediaType;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.rest.RestClientFactoryBean;\n \n@@ -32,6 +33,8 @@\n  */\n public class SyncopeClient {\n \n+    private final MediaType mediaType;\n+\n     private final RestClientFactoryBean restClientFactory;\n \n     private final String username;\n@@ -40,7 +43,10 @@ public class SyncopeClient {\n \n     private final Map<Class<?>, Object> services = new ConcurrentHashMap<Class<?>, Object>();\n \n-    public SyncopeClient(final RestClientFactoryBean restClientFactory, final String username, final String password) {\n+    public SyncopeClient(final MediaType mediaType, final RestClientFactoryBean restClientFactory,\n+            final String username, final String password) {\n+\n+        this.mediaType = mediaType;\n         this.restClientFactory = restClientFactory;\n         this.username = username;\n         this.password = password;\n@@ -49,14 +55,15 @@ public SyncopeClient(final RestClientFactoryBean restClientFactory, final String\n     @SuppressWarnings(\"unchecked\")\n     public <T> T getService(final Class<T> serviceClass) {\n         if (!services.containsKey(serviceClass)) {\n-            services.put(serviceClass, restClientFactory.createServiceInstance(serviceClass, username, password));\n+            services.put(serviceClass,\n+                    restClientFactory.createServiceInstance(serviceClass, mediaType, username, password));\n         }\n         return (T) services.get(serviceClass);\n     }\n \n     public <T> T getObject(final URI location, final Class<?> serviceClass, final Class<T> resultClass) {\n         WebClient webClient = WebClient.fromClient(WebClient.client(getService(serviceClass)));\n-        webClient.accept(restClientFactory.getContentType()).to(location.toASCIIString(), false);\n+        webClient.accept(mediaType).to(location.toASCIIString(), false);\n \n         return webClient.get(resultClass);\n     }"},{"sha":"25d862b51d4fbdf15bc94b71d84fd638ea98f4f1","filename":"client/src/main/java/org/apache/syncope/client/SyncopeClientFactoryBean.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClientFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClientFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2FSyncopeClientFactoryBean.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -42,21 +42,21 @@ public class SyncopeClientFactoryBean {\n \n     public enum ContentType {\n \n-        JSON(MediaType.APPLICATION_JSON),\n-        XML(MediaType.APPLICATION_XML);\n+        JSON(MediaType.APPLICATION_JSON_TYPE),\n+        XML(MediaType.APPLICATION_XML_TYPE);\n \n-        private final String mediaType;\n+        private final MediaType mediaType;\n \n-        private ContentType(final String mediaType) {\n+        private ContentType(final MediaType mediaType) {\n             this.mediaType = mediaType;\n         }\n \n-        public String getMediaType() {\n+        public MediaType getMediaType() {\n             return mediaType;\n         }\n \n         public static ContentType fromString(final String value) {\n-            return StringUtils.isNotBlank(value) && value.equalsIgnoreCase(XML.name())\n+            return StringUtils.isNotBlank(value) && value.equalsIgnoreCase(XML.getMediaType().toString())\n                     ? XML\n                     : JSON;\n         }\n@@ -113,8 +113,6 @@ protected RestClientFactoryBean defaultRestClientFactoryBean() {\n         defaultRestClientFactoryBean.setThreadSafe(true);\n         defaultRestClientFactoryBean.setInheritHeaders(true);\n \n-        defaultRestClientFactoryBean.setContentType(getContentType().getMediaType());\n-\n         List<Feature> features = new ArrayList<Feature>();\n         features.add(new LoggingFeature());\n         defaultRestClientFactoryBean.setFeatures(features);\n@@ -197,6 +195,6 @@ public SyncopeClientFactoryBean setRestClientFactoryBean(final RestClientFactory\n     }\n \n     public SyncopeClient create(final String username, final String password) {\n-        return new SyncopeClient(getRestClientFactoryBean(), username, password);\n+        return new SyncopeClient(getContentType().getMediaType(), getRestClientFactoryBean(), username, password);\n     }\n }"},{"sha":"2d3073591b5c3225315e359fa1eb5626448653d6","filename":"client/src/main/java/org/apache/syncope/client/rest/RestClientFactoryBean.java","status":"modified","additions":6,"deletions":11,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Frest%2FRestClientFactoryBean.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.rest;\n \n+import javax.ws.rs.core.MediaType;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean;\n import org.apache.cxf.jaxrs.client.WebClient;\n@@ -30,19 +31,13 @@ public RestClientFactoryBean() {\n         super();\n     }\n \n-    public void setContentType(final String contentType) {\n-        this.contentType = contentType;\n+    public <T> T createServiceInstance(final Class<T> serviceClass, final MediaType mediaType) {\n+        return createServiceInstance(serviceClass, mediaType, null, null);\n     }\n \n-    public String getContentType() {\n-        return contentType;\n-    }\n-\n-    public <T> T createServiceInstance(final Class<T> serviceClass) {\n-        return createServiceInstance(serviceClass, null, null);\n-    }\n+    public <T> T createServiceInstance(\n+            final Class<T> serviceClass, final MediaType mediaType, final String username, final String password) {\n \n-    public <T> T createServiceInstance(final Class<T> serviceClass, final String username, final String password) {\n         if (StringUtils.isNotBlank(username)) {\n             setUsername(username);\n         }\n@@ -51,7 +46,7 @@ public <T> T createServiceInstance(final Class<T> serviceClass, final String use\n         }\n         setServiceClass(serviceClass);\n         final T serviceInstance = create(serviceClass);\n-        WebClient.client(serviceInstance).type(getContentType()).accept(getContentType());\n+        WebClient.client(serviceInstance).type(mediaType).accept(mediaType);\n         return serviceInstance;\n     }\n }"},{"sha":"423ef4763f10aa4e5176570ef7568ce585a42a37","filename":"common/src/main/java/org/apache/syncope/common/to/BulkAction.java","status":"modified","additions":9,"deletions":19,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAction.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -18,8 +18,11 @@\n  */\n package org.apache.syncope.common.to;\n \n+import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n-import java.util.Collection;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n@@ -48,7 +51,7 @@ public enum Type {\n     /**\n      * Serialized identifiers.\n      */\n-    private Collection<String> targets;\n+    private final List<String> targets = new ArrayList<String>();\n \n     public Type getOperation() {\n         return operation;\n@@ -58,23 +61,10 @@ public void setOperation(final Type operation) {\n         this.operation = operation;\n     }\n \n-    public void setTargets(final Collection<String> targets) {\n-        this.targets = targets;\n-    }\n-\n-    public Collection<String> getTargets() {\n+    @XmlElementWrapper(name = \"targets\")\n+    @XmlElement(name = \"target\")\n+    @JsonProperty(\"targets\")\n+    public List<String> getTargets() {\n         return targets;\n     }\n-\n-    public void addTarget(final String target) {\n-        if (this.targets == null) {\n-            this.targets = new ArrayList<String>();\n-        }\n-\n-        this.targets.add(target);\n-    }\n-\n-    public int size() {\n-        return targets == null ? 0 : targets.size();\n-    }\n }"},{"sha":"8fc325ee4c75c9fbb6e8d46f14a26a7382c8c712","filename":"common/src/main/java/org/apache/syncope/common/to/BulkActionRes.java","status":"modified","additions":21,"deletions":22,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkActionRes.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkActionRes.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkActionRes.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -19,16 +19,19 @@\n package org.apache.syncope.common.to;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.AbstractBaseBean;\n \n-@XmlRootElement(name = \"BulkActionRes\")\n+@XmlRootElement(name = \"bulkActionRes\")\n @XmlType\n public class BulkActionRes extends AbstractBaseBean {\n \n@@ -43,22 +46,17 @@ public enum Status {\n \n     }\n \n-    private List<Result> results;\n-\n-    public void setResults(final List<Result> results) {\n-        this.results = results;\n-    }\n+    private final List<Result> results = new ArrayList<Result>();\n \n+    @XmlElementWrapper(name = \"results\")\n+    @XmlElement(name = \"result\")\n+    @JsonProperty(\"results\")\n     public List<Result> getResults() {\n         return results;\n     }\n \n     @JsonIgnore\n     public void add(final Object id, final Status status) {\n-        if (results == null) {\n-            results = new ArrayList<Result>();\n-        }\n-\n         if (id != null) {\n             results.add(new Result(id.toString(), status));\n         }\n@@ -67,24 +65,24 @@ public void add(final Object id, final Status status) {\n     @JsonIgnore\n     public Map<String, Status> getResultMap() {\n         final Map<String, Status> res = new HashMap<String, Status>();\n-        if (results != null) {\n-            for (Result result : results) {\n-                res.put(result.getKey(), result.getValue());\n-            }\n+\n+        for (Result result : results) {\n+            res.put(result.getKey(), result.getValue());\n         }\n+\n         return res;\n     }\n \n     @JsonIgnore\n     public List<String> getResultByStatus(final Status status) {\n         final List<String> res = new ArrayList<String>();\n-        if (results != null) {\n-            for (Result result : results) {\n-                if (result.getValue() == status) {\n-                    res.add(result.getKey());\n-                }\n+\n+        for (Result result : results) {\n+            if (result.getValue() == status) {\n+                res.add(result.getKey());\n             }\n         }\n+\n         return res;\n     }\n \n@@ -97,9 +95,10 @@ public static class Result extends AbstractBaseBean {\n         private Status value;\n \n         public Result() {\n+            super();\n         }\n \n-        public Result(String key, Status value) {\n+        public Result(final String key, final Status value) {\n             this.key = key;\n             this.value = value;\n         }\n@@ -112,11 +111,11 @@ public Status getValue() {\n             return value;\n         }\n \n-        public void setKey(String key) {\n+        public void setKey(final String key) {\n             this.key = key;\n         }\n \n-        public void setValue(Status value) {\n+        public void setValue(final Status value) {\n             this.value = value;\n         }\n     }"},{"sha":"9cbd58711cdfd8ea128366e239fa2e4ecb74815f","filename":"common/src/main/java/org/apache/syncope/common/to/BulkAssociationAction.java","status":"modified","additions":10,"deletions":19,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAssociationAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAssociationAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FBulkAssociationAction.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -18,21 +18,25 @@\n  */\n package org.apache.syncope.common.to;\n \n+import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.AbstractBaseBean;\n \n-@XmlRootElement(name = \"bulkAction\")\n+@XmlRootElement(name = \"bulkAssociationAction\")\n @XmlType\n public class BulkAssociationAction extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 1395353278878758961L;\n \n     @XmlEnum\n-    @XmlType(name = \"bulkActionType\")\n+    @XmlType(name = \"bulkAssociationActionType\")\n     public enum Type {\n \n         UNLINK,\n@@ -46,7 +50,7 @@ public enum Type {\n     /**\n      * Serialized identifiers.\n      */\n-    private Collection<Long> targets;\n+    private final List<Long> targets = new ArrayList<Long>();\n \n     public Type getOperation() {\n         return operation;\n@@ -56,23 +60,10 @@ public void setOperation(final Type operation) {\n         this.operation = operation;\n     }\n \n-    public void setTargets(final Collection<Long> targets) {\n-        this.targets = targets;\n-    }\n-\n+    @XmlElementWrapper(name = \"targets\")\n+    @XmlElement(name = \"target\")\n+    @JsonProperty(\"targets\")\n     public Collection<Long> getTargets() {\n         return targets;\n     }\n-\n-    public void addTarget(final Long target) {\n-        if (this.targets == null) {\n-            this.targets = new ArrayList<Long>();\n-        }\n-\n-        this.targets.add(target);\n-    }\n-\n-    public int size() {\n-        return targets == null ? 0 : targets.size();\n-    }\n }"},{"sha":"b9aca2c1f16bee4efd4aa6b5434ad605b0259fba","filename":"console/src/main/java/org/apache/syncope/console/pages/BulkActionModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -91,7 +91,7 @@ public IModel<T> model(T object) {\n             final BulkAction bulkAction = new BulkAction();\n             for (Object item : items) {\n                 try {\n-                    bulkAction.addTarget(getTargetId(item, idFieldName).toString());\n+                    bulkAction.getTargets().add(getTargetId(item, idFieldName).toString());\n                 } catch (Exception e) {\n                     LOG.error(\"Error retrieving item id {}\", idFieldName, e);\n                 }"},{"sha":"4eeb93c8f67daf9ad5c87686402fe8af0b557c34","filename":"console/src/main/java/org/apache/syncope/console/pages/ProvisioningModalPage.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -223,13 +223,14 @@ private void bulkAssociationAction(\n             final BulkAssociationAction.Type type,\n             final ActionDataTablePanel<StatusBean, String> table,\n             final List<IColumn<StatusBean, String>> columns) {\n+\n         final BulkAssociationAction bulkAction = new BulkAssociationAction();\n         bulkAction.setOperation(type);\n \n         final List<StatusBean> beans = new ArrayList<StatusBean>(table.getModelObject());\n         for (StatusBean bean : beans) {\n             LOG.debug(\"Selected bean {}\", bean);\n-            bulkAction.addTarget(bean.getAttributableId());\n+            bulkAction.getTargets().add(bean.getAttributableId());\n         }\n \n         if (!beans.isEmpty()) {"},{"sha":"d7a39502e77dc4487cd6fc875650d1f31c9d997c","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":1,"deletions":17,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -19,14 +19,12 @@\n package org.apache.syncope.core.rest;\n \n import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.fail;\n \n import java.io.InputStream;\n import java.util.Properties;\n import java.util.UUID;\n \n import javax.sql.DataSource;\n-import javax.ws.rs.core.MultivaluedMap;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n@@ -149,7 +147,7 @@ public static void securitySetup() {\n     public static void restSetup() {\n         final String envContentType = System.getProperty(ENV_KEY_CONTENT_TYPE);\n         if (StringUtils.isNotBlank(envContentType)) {\n-            clientFactory.getRestClientFactoryBean().setContentType(envContentType);\n+            clientFactory.setContentType(envContentType);\n         }\n         LOG.info(\"Performing IT with content type {}\", clientFactory.getContentType().getMediaType());\n \n@@ -190,20 +188,6 @@ protected static AttributeMod attributeMod(final String schema, final String val\n         return attr;\n     }\n \n-    protected void assertCreated(final Response response) {\n-        if (response.getStatus() != HttpStatus.SC_CREATED) {\n-            StringBuilder builder = new StringBuilder();\n-            MultivaluedMap<String, Object> headers = response.getHeaders();\n-            builder.append(\"Headers (\");\n-            for (String key : headers.keySet()) {\n-                builder.append(key).append(':').append(headers.getFirst(key)).append(',');\n-            }\n-            builder.append(\")\");\n-            fail(\"Error on create. Status is : \" + response.getStatus() + \" with headers \"\n-                    + builder.toString());\n-        }\n-    }\n-\n     protected UserTO createUser(final UserTO userTO) {\n         Response response = userService.create(userTO);\n         if (response.getStatus() != HttpStatus.SC_CREATED) {"},{"sha":"425adc755e47de15596adddf3a60970320b07116","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -677,12 +677,12 @@ public void bulkAction() {\n         conn.setId(0);\n         conn.setDisplayName(\"forBulk1\");\n \n-        bulkAction.addTarget(String.valueOf(adminClient.getObject(\n+        bulkAction.getTargets().add(String.valueOf(adminClient.getObject(\n                 connectorService.create(conn).getLocation(), ConnectorService.class, ConnInstanceTO.class).getId()));\n \n         conn.setDisplayName(\"forBulk2\");\n \n-        bulkAction.addTarget(String.valueOf(adminClient.getObject(\n+        bulkAction.getTargets().add(String.valueOf(adminClient.getObject(\n                 connectorService.create(conn).getLocation(), ConnectorService.class, ConnInstanceTO.class).getId()));\n \n         Iterator<String> iter = bulkAction.getTargets().iterator();"},{"sha":"5d725c91392f2636a934f212c8ff0f4065c6fb01","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -48,7 +48,7 @@ public class ReportTestITCase extends AbstractTest {\n \n     public ReportTO createReport(final ReportTO report) {\n         Response response = reportService.create(report);\n-        assertCreated(response);\n+        assertEquals(HttpStatus.SC_CREATED, response.getStatus());\n         return adminClient.getObject(response.getLocation(), ReportService.class, ReportTO.class);\n     }\n "},{"sha":"6d91c8f8d6a248e2120d5c6382737263d370e7f7","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -458,8 +458,8 @@ public void bulkAction() {\n         final BulkAction bulkAction = new BulkAction();\n         bulkAction.setOperation(BulkAction.Type.DELETE);\n \n-        bulkAction.addTarget(String.valueOf(\"forBulk1\"));\n-        bulkAction.addTarget(String.valueOf(\"forBulk2\"));\n+        bulkAction.getTargets().add(String.valueOf(\"forBulk1\"));\n+        bulkAction.getTargets().add(String.valueOf(\"forBulk2\"));\n \n         resourceService.bulkAction(bulkAction);\n "},{"sha":"a8607a613d73bb97d9175d325310bea214aad520","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -903,7 +903,7 @@ public void bulkAction() {\n         bulkAction.setOperation(BulkAction.Type.DELETE);\n \n         for (AbstractTaskTO taskTO : after) {\n-            bulkAction.addTarget(String.valueOf(taskTO.getId()));\n+            bulkAction.getTargets().add(String.valueOf(taskTO.getId()));\n         }\n \n         taskService.bulkAction(bulkAction);"},{"sha":"d19bc2cbbd3c471ba9c6173861970ccf9a43db0b","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23dc1838403a3f7df808edded744e3a682a09690/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=23dc1838403a3f7df808edded744e3a682a09690","patch":"@@ -2081,13 +2081,13 @@ public void bulkActions() {\n \n         for (int i = 0; i < 10; i++) {\n             UserTO userTO = getUniqueSampleTO(\"bulk_\" + i + \"@apache.org\");\n-            bulkAction.addTarget(String.valueOf(createUser(userTO).getId()));\n+            bulkAction.getTargets().add(String.valueOf(createUser(userTO).getId()));\n         }\n \n         // check for a fail\n-        bulkAction.addTarget(String.valueOf(Long.MAX_VALUE));\n+        bulkAction.getTargets().add(String.valueOf(Long.MAX_VALUE));\n \n-        assertEquals(11, bulkAction.size());\n+        assertEquals(11, bulkAction.getTargets().size());\n \n         bulkAction.setOperation(BulkAction.Type.SUSPEND);\n         BulkActionRes res = userService.bulkAction(bulkAction);"}]}