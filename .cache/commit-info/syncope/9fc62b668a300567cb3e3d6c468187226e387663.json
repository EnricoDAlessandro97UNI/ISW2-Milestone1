{"sha":"9fc62b668a300567cb3e3d6c468187226e387663","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjlmYzYyYjY2OGEzMDA1NjdjYjNlM2Q2YzQ2ODE4NzIyNmUzODc2NjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-05-16T09:02:38Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-05-16T09:03:04Z"},"message":"[SYNCOPE-1082] using native queries to work with dynamic members' tables","tree":{"sha":"1b9bdab6aaa397baa4d7b980902bd50b01e6a901","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1b9bdab6aaa397baa4d7b980902bd50b01e6a901"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9fc62b668a300567cb3e3d6c468187226e387663","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9fc62b668a300567cb3e3d6c468187226e387663","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9fc62b668a300567cb3e3d6c468187226e387663","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9fc62b668a300567cb3e3d6c468187226e387663/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"66f665191a0ee64f1fe87693d66bb23a23e6184d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/66f665191a0ee64f1fe87693d66bb23a23e6184d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/66f665191a0ee64f1fe87693d66bb23a23e6184d"}],"stats":{"total":330,"additions":236,"deletions":94},"files":[{"sha":"650130c4580667bc76b245e5c30df302fda8bf3e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyObjectDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -43,7 +43,7 @@ public interface AnyObjectDAO extends AnyDAO<AnyObject> {\n \n     AnyObject authFindByName(String name);\n \n-    List<Group> findDynGroupMemberships(AnyObject anyObject);\n+    List<Group> findDynGroups(AnyObject anyObject);\n \n     List<ARelationship> findAllARelationships(AnyObject anyObject);\n "},{"sha":"b08c9b918a7925544134999298ef4738b1c3e851","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/GroupDAO.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -46,8 +46,16 @@ public interface GroupDAO extends AnyDAO<Group> {\n \n     List<TypeExtension> findTypeExtensions(AnyTypeClass anyTypeClass);\n \n+    List<String> findADynMembersKeys(Group group);\n+\n     void refreshDynMemberships(AnyObject anyObject);\n \n+    void removeDynMemberships(AnyObject anyObject);\n+\n+    List<String> findUDynMembersKeys(Group group);\n+\n     void refreshDynMemberships(User user);\n \n+    void removeDynMemberships(User user);\n+\n }"},{"sha":"16f3003c322eb1c2393892afa32d97f88835eafc","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/RoleDAO.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -39,5 +39,9 @@ public interface RoleDAO extends DAO<Role> {\n \n     void delete(String key);\n \n+    List<String> findDynMembersKeys(Role role);\n+\n     void refreshDynMemberships(User user);\n+\n+    void removeDynMemberships(User user);\n }"},{"sha":"9e44bb32875eacaf984e013d8599fedac7f1e61e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/UserDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -42,12 +42,12 @@ public interface UserDAO extends AnyDAO<User> {\n \n     List<User> findBySecurityQuestion(SecurityQuestion securityQuestion);\n \n-    List<Role> findDynRoleMemberships(User user);\n-\n-    List<Group> findDynGroupMemberships(User user);\n+    List<Role> findDynRoles(User user);\n \n     Collection<Role> findAllRoles(User user);\n \n+    List<Group> findDynGroups(User user);\n+\n     Collection<Group> findAllGroups(User user);\n \n     Collection<String> findAllGroupKeys(User user);"},{"sha":"2b12744155a87e415f49d4e055e290fd7f753ccf","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/DynMembership.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDynMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDynMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDynMembership.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-import java.util.List;\n-\n public interface DynMembership<A extends Any<?>> extends Entity {\n \n     String getFIQLCond();\n@@ -28,5 +26,5 @@\n \n     boolean add(A any);\n \n-    List<? extends A> getMembers();\n+    void clear();\n }"},{"sha":"23234b38b23433af4fb26dc0852def6917e159c2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyObjectDAO.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n+import static org.apache.syncope.core.persistence.jpa.dao.AbstractDAO.LOG;\n+\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -232,34 +234,32 @@ private List<URelationship> findURelationships(final AnyObject anyObject) {\n     }\n \n     @Override\n-    public void delete(final AnyObject any) {\n-        for (Group group : findDynGroupMemberships(any)) {\n-            group.getADynMembership(any.getType()).getMembers().remove(any);\n-        }\n+    public void delete(final AnyObject anyObject) {\n+        groupDAO().removeDynMemberships(anyObject);\n \n-        for (ARelationship relationship : findARelationships(any)) {\n+        for (ARelationship relationship : findARelationships(anyObject)) {\n             relationship.getLeftEnd().getRelationships().remove(relationship);\n             save(relationship.getLeftEnd());\n \n             entityManager().remove(relationship);\n         }\n-        for (URelationship relationship : findURelationships(any)) {\n+        for (URelationship relationship : findURelationships(anyObject)) {\n             relationship.getLeftEnd().getRelationships().remove(relationship);\n             userDAO().save(relationship.getLeftEnd());\n \n             entityManager().remove(relationship);\n         }\n \n-        entityManager().remove(any);\n-        publisher.publishEvent(new AnyDeletedEvent(this, AnyTypeKind.ANY_OBJECT, any.getKey()));\n+        entityManager().remove(anyObject);\n+        publisher.publishEvent(new AnyDeletedEvent(this, AnyTypeKind.ANY_OBJECT, anyObject.getKey()));\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n     @Override\n-    public List<Group> findDynGroupMemberships(final AnyObject anyObject) {\n+    public List<Group> findDynGroups(final AnyObject anyObject) {\n         Query query = entityManager().createNativeQuery(\n                 \"SELECT t2.id FROM \" + JPAADynGroupMembership.TABLE + \" t0 \"\n-                + \"INNER JOIN ADynGroupMembership_AnyObject t1 \"\n+                + \"INNER JOIN \" + JPAADynGroupMembership.JOIN_TABLE + \" t1 \"\n                 + \"ON t0.id = t1.aDynGroupMembership_id \"\n                 + \"LEFT OUTER JOIN \" + JPAGroup.TABLE + \" t2 \"\n                 + \"ON t0.GROUP_ID = t2.id \"\n@@ -293,7 +293,7 @@ public Group transform(final AMembership input) {\n                         return input.getRightEnd();\n                     }\n                 }, new ArrayList<Group>()),\n-                findDynGroupMemberships(anyObject));\n+                findDynGroups(anyObject));\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)"},{"sha":"93ceddc8ec6cf03c761cb30d391f26d1d4971dd4","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAGroupDAO.java","status":"modified","additions":93,"deletions":8,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n+import static org.apache.syncope.core.persistence.jpa.dao.AbstractDAO.LOG;\n+\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n@@ -56,8 +59,10 @@\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n import org.apache.syncope.core.persistence.api.entity.user.UPlainAttr;\n import org.apache.syncope.core.persistence.jpa.entity.JPAAnyUtilsFactory;\n+import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAADynGroupMembership;\n import org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAMembership;\n import org.apache.syncope.core.persistence.jpa.entity.group.JPATypeExtension;\n+import org.apache.syncope.core.persistence.jpa.entity.user.JPAUDynGroupMembership;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUMembership;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.event.AnyCreatedUpdatedEvent;\n@@ -271,7 +276,7 @@ public Group save(final Group group) {\n                     buildDynMembershipCond(merged.getUDynMembership().getFIQLCond(), merged.getRealm()),\n                     AnyTypeKind.USER);\n \n-            merged.getUDynMembership().getMembers().clear();\n+            merged.getUDynMembership().clear();\n             for (User user : matching) {\n                 merged.getUDynMembership().add(user);\n                 publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, user));\n@@ -282,7 +287,7 @@ public Group save(final Group group) {\n                     buildDynMembershipCond(memb.getFIQLCond(), merged.getRealm()),\n                     AnyTypeKind.ANY_OBJECT);\n \n-            memb.getMembers().clear();\n+            memb.clear();\n             for (AnyObject anyObject : matching) {\n                 memb.add(anyObject);\n                 publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, anyObject));\n@@ -337,6 +342,26 @@ public List<TypeExtension> findTypeExtensions(final AnyTypeClass anyTypeClass) {\n         return query.getResultList();\n     }\n \n+    @Override\n+    public List<String> findADynMembersKeys(final Group group) {\n+        List<String> result = new ArrayList<>();\n+        for (ADynGroupMembership memb : group.getADynMemberships()) {\n+            Query query = entityManager().createNativeQuery(\n+                    \"SELECT t.anyObject_id FROM \" + JPAADynGroupMembership.JOIN_TABLE + \" t \"\n+                    + \"WHERE t.aDynGroupMembership_id=?\");\n+            query.setParameter(1, memb.getKey());\n+\n+            for (Object key : query.getResultList()) {\n+                String actualKey = key instanceof Object[]\n+                        ? (String) ((Object[]) key)[0]\n+                        : ((String) key);\n+\n+                result.add(actualKey);\n+            }\n+        }\n+        return result;\n+    }\n+\n     private List<Group> findWithADynMemberships(final int page, final int itemsPerPage) {\n         TypedQuery<Group> query = entityManager().createQuery(\n                 \"SELECT e FROM  \" + JPAGroup.class.getSimpleName() + \" e WHERE e.aDynMemberships IS NOT EMPTY\",\n@@ -363,16 +388,56 @@ public void refreshDynMemberships(final AnyObject anyObject) {\n                                 buildDynMembershipCond(memb.getFIQLCond(), group.getRealm()))) {\n \n                             memb.add(anyObject);\n-                            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group));\n                         } else {\n-                            memb.getMembers().remove(anyObject);\n-                            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group));\n+                            Query query = entityManager().createNativeQuery(\n+                                    \"DELETE FROM \" + JPAADynGroupMembership.JOIN_TABLE + \" t \"\n+                                    + \"WHERE t.anyObject_id=? and t.aDynGroupMembership_id=?\");\n+                            query.setParameter(1, anyObject.getKey());\n+                            query.setParameter(2, memb.getKey());\n+                            query.executeUpdate();\n                         }\n+\n+                        publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group));\n                     }\n                 }\n             }\n         }\n+    }\n+\n+    @Override\n+    public void removeDynMemberships(final AnyObject anyObject) {\n+        List<Group> dynGroups = anyObjectDAO().findDynGroups(anyObject);\n+\n+        Query query = entityManager().createNativeQuery(\n+                \"DELETE FROM \" + JPAADynGroupMembership.JOIN_TABLE + \" t WHERE t.anyObject_id=?\");\n+        query.setParameter(1, anyObject.getKey());\n+        query.executeUpdate();\n \n+        for (Group group : dynGroups) {\n+            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group));\n+        }\n+    }\n+\n+    @Override\n+    public List<String> findUDynMembersKeys(final Group group) {\n+        if (group.getUDynMembership() == null) {\n+            return Collections.emptyList();\n+        }\n+\n+        Query query = entityManager().createNativeQuery(\n+                \"SELECT t.user_id FROM \" + JPAUDynGroupMembership.JOIN_TABLE + \" t \"\n+                + \"WHERE t.uDynGroupMembership_id=?\");\n+        query.setParameter(1, group.getUDynMembership().getKey());\n+\n+        List<String> result = new ArrayList<>();\n+        for (Object key : query.getResultList()) {\n+            String actualKey = key instanceof Object[]\n+                    ? (String) ((Object[]) key)[0]\n+                    : ((String) key);\n+\n+            result.add(actualKey);\n+        }\n+        return result;\n     }\n \n     private List<Group> findWithUDynMemberships(final int page, final int itemsPerPage) {\n@@ -400,13 +465,33 @@ public void refreshDynMemberships(final User user) {\n                             buildDynMembershipCond(group.getUDynMembership().getFIQLCond(), group.getRealm()))) {\n \n                         group.getUDynMembership().add(user);\n-                        publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group));\n                     } else {\n-                        group.getUDynMembership().getMembers().remove(user);\n-                        publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group));\n+                        Query query = entityManager().createNativeQuery(\n+                                \"DELETE FROM \" + JPAUDynGroupMembership.JOIN_TABLE + \" t \"\n+                                + \"WHERE t.user_id=? and t.uDynGroupMembership_id=?\");\n+                        query.setParameter(1, user.getKey());\n+                        query.setParameter(2, group.getUDynMembership().getKey());\n+                        query.executeUpdate();\n                     }\n+\n+                    publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group));\n                 }\n             }\n         }\n     }\n+\n+    @Override\n+    public void removeDynMemberships(final User user) {\n+        List<Group> dynGroups = userDAO().findDynGroups(user);\n+\n+        Query query = entityManager().createNativeQuery(\n+                \"DELETE FROM \" + JPAUDynGroupMembership.JOIN_TABLE + \" t WHERE t.user_id=?\");\n+        query.setParameter(1, user.getKey());\n+        query.executeUpdate();\n+\n+        for (Group group : dynGroups) {\n+            publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, group));\n+        }\n+    }\n+\n }"},{"sha":"7aa9300406b40346fccc9eebb00fc6861ffa3247","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARoleDAO.java","status":"modified","additions":40,"deletions":2,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import javax.persistence.Query;\n import javax.persistence.TypedQuery;\n@@ -29,6 +31,7 @@\n import org.apache.syncope.core.persistence.api.entity.Role;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.entity.JPARole;\n+import org.apache.syncope.core.persistence.jpa.entity.user.JPADynRoleMembership;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUser;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.event.AnyCreatedUpdatedEvent;\n@@ -88,7 +91,7 @@ public Role save(final Role role) {\n             List<User> matchingUsers = searchDAO().search(\n                     SearchCondConverter.convert(role.getDynMembership().getFIQLCond()), AnyTypeKind.USER);\n \n-            role.getDynMembership().getMembers().clear();\n+            role.getDynMembership().clear();\n             for (User user : matchingUsers) {\n                 role.getDynMembership().add(user);\n                 publisher.publishEvent(new AnyCreatedUpdatedEvent<>(this, user));\n@@ -122,6 +125,28 @@ public void delete(final String key) {\n         delete(role);\n     }\n \n+    @Override\n+    public List<String> findDynMembersKeys(final Role role) {\n+        if (role.getDynMembership() == null) {\n+            return Collections.emptyList();\n+        }\n+\n+        Query query = entityManager().createNativeQuery(\n+                \"SELECT t.user_id FROM \" + JPADynRoleMembership.JOIN_TABLE + \" t \"\n+                + \"WHERE t.dynRoleMembership_id=?\");\n+        query.setParameter(1, role.getDynMembership().getKey());\n+\n+        List<String> result = new ArrayList<>();\n+        for (Object key : query.getResultList()) {\n+            String actualKey = key instanceof Object[]\n+                    ? (String) ((Object[]) key)[0]\n+                    : ((String) key);\n+\n+            result.add(actualKey);\n+        }\n+        return result;\n+    }\n+\n     @Transactional\n     @Override\n     public void refreshDynMemberships(final User user) {\n@@ -130,10 +155,23 @@ public void refreshDynMemberships(final User user) {\n                 if (searchDAO().matches(user, SearchCondConverter.convert(role.getDynMembership().getFIQLCond()))) {\n                     role.getDynMembership().add(user);\n                 } else {\n-                    role.getDynMembership().getMembers().remove(user);\n+                    Query query = entityManager().createNativeQuery(\n+                            \"DELETE FROM \" + JPADynRoleMembership.JOIN_TABLE + \" t \"\n+                            + \"WHERE t.user_id=? and t.dynRoleMembership_id=?\");\n+                    query.setParameter(1, user.getKey());\n+                    query.setParameter(2, role.getDynMembership().getKey());\n+                    query.executeUpdate();\n                 }\n             }\n         }\n     }\n \n+    @Override\n+    public void removeDynMemberships(final User user) {\n+        Query query = entityManager().createNativeQuery(\n+                \"DELETE FROM \" + JPADynRoleMembership.JOIN_TABLE + \" t WHERE t.user_id=?\");\n+        query.setParameter(1, user.getKey());\n+        query.executeUpdate();\n+    }\n+\n }"},{"sha":"92b94fbe7bb0c45126cf22536e6d00d9a66a43be","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAUserDAO.java","status":"modified","additions":15,"deletions":17,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n+import static org.apache.syncope.core.persistence.jpa.dao.AbstractDAO.LOG;\n+\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -452,12 +454,8 @@ public User save(final User user) {\n \n     @Override\n     public void delete(final User user) {\n-        for (Role role : findDynRoleMemberships(user)) {\n-            role.getDynMembership().getMembers().remove(user);\n-        }\n-        for (Group group : findDynGroupMemberships(user)) {\n-            group.getUDynMembership().getMembers().remove(user);\n-        }\n+        roleDAO.removeDynMemberships(user);\n+        groupDAO.removeDynMemberships(user);\n \n         AccessToken accessToken = accessTokenDAO.findByOwner(user.getUsername());\n         if (accessToken != null) {\n@@ -470,10 +468,16 @@ public void delete(final User user) {\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n     @Override\n-    public List<Role> findDynRoleMemberships(final User user) {\n+    public Collection<Role> findAllRoles(final User user) {\n+        return CollectionUtils.union(user.getRoles(), findDynRoles(user));\n+    }\n+\n+    @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n+    @Override\n+    public List<Role> findDynRoles(final User user) {\n         Query query = entityManager().createNativeQuery(\n                 \"SELECT t2.id FROM \" + JPADynRoleMembership.TABLE + \" t0 \"\n-                + \"INNER JOIN \" + JPADynRoleMembership.TABLE + \"_User t1 \"\n+                + \"INNER JOIN \" + JPADynRoleMembership.JOIN_TABLE + \" t1 \"\n                 + \"ON t0.id = t1.dynRoleMembership_id \"\n                 + \"LEFT OUTER JOIN \" + JPARole.TABLE + \" t2 \"\n                 + \"ON t0.ROLE_ID = t2.id \"\n@@ -498,10 +502,10 @@ public List<Role> findDynRoleMemberships(final User user) {\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n     @Override\n-    public List<Group> findDynGroupMemberships(final User user) {\n+    public List<Group> findDynGroups(final User user) {\n         Query query = entityManager().createNativeQuery(\n                 \"SELECT t2.id FROM \" + JPAUDynGroupMembership.TABLE + \" t0 \"\n-                + \"INNER JOIN \" + JPAUDynGroupMembership.TABLE + \"_User t1 \"\n+                + \"INNER JOIN \" + JPAUDynGroupMembership.JOIN_TABLE + \" t1 \"\n                 + \"ON t0.id = t1.uDynGroupMembership_id \"\n                 + \"LEFT OUTER JOIN \" + JPAGroup.TABLE + \" t2 \"\n                 + \"ON t0.GROUP_ID = t2.id \"\n@@ -524,12 +528,6 @@ public List<Group> findDynGroupMemberships(final User user) {\n         return result;\n     }\n \n-    @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n-    @Override\n-    public Collection<Role> findAllRoles(final User user) {\n-        return CollectionUtils.union(user.getRoles(), findDynRoleMemberships(user));\n-    }\n-\n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n     @Override\n     public Collection<Group> findAllGroups(final User user) {\n@@ -541,7 +539,7 @@ public Group transform(final UMembership input) {\n                         return input.getRightEnd();\n                     }\n                 }, new ArrayList<Group>()),\n-                findDynGroupMemberships(user));\n+                findDynGroups(user));\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)"},{"sha":"5ae02d33cbf125774a2bda7c14659634f21483c7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAADynGroupMembership.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAADynGroupMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAADynGroupMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAADynGroupMembership.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -43,14 +43,16 @@ public class JPAADynGroupMembership extends AbstractDynMembership<AnyObject> imp\n \n     public static final String TABLE = \"ADynGroupMembership\";\n \n+    public static final String JOIN_TABLE = TABLE + \"_AnyObject\";\n+\n     @OneToOne\n     private JPAGroup group;\n \n     @ManyToOne\n     private JPAAnyType anyType;\n \n     @ManyToMany\n-    @JoinTable(joinColumns =\n+    @JoinTable(name = JOIN_TABLE, joinColumns =\n             @JoinColumn(name = \"aDynGroupMembership_id\"),\n             inverseJoinColumns =\n             @JoinColumn(name = \"anyObject_id\"))\n@@ -85,7 +87,8 @@ public boolean add(final AnyObject anyObject) {\n     }\n \n     @Override\n-    public List<? extends AnyObject> getMembers() {\n-        return anyObjects;\n+    public void clear() {\n+        anyObjects.clear();\n     }\n+\n }"},{"sha":"963b742b180879d007fe18e4182e2a8cbcffffa1","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/AbstractUDynMembership.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FAbstractUDynMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FAbstractUDynMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FAbstractUDynMembership.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -37,7 +37,8 @@ public boolean add(final User user) {\n     }\n \n     @Override\n-    public List<? extends User> getMembers() {\n-        return internalGetUsers();\n+    public void clear() {\n+        internalGetUsers().clear();\n     }\n+\n }"},{"sha":"aa310cdec26a19fdfb4156690f40e35a556be74f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPADynRoleMembership.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPADynRoleMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPADynRoleMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPADynRoleMembership.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -38,11 +38,13 @@ public class JPADynRoleMembership extends AbstractUDynMembership implements DynR\n \n     public static final String TABLE = \"DynRoleMembership\";\n \n+    public static final String JOIN_TABLE = TABLE + \"_User\";\n+\n     @OneToOne\n     private JPARole role;\n \n     @ManyToMany\n-    @JoinTable(name = TABLE + \"_User\", joinColumns =\n+    @JoinTable(name = JOIN_TABLE, joinColumns =\n             @JoinColumn(name = \"dynRoleMembership_id\"),\n             inverseJoinColumns =\n             @JoinColumn(name = \"user_id\"))"},{"sha":"63228b341f8518c6ddace653b91aaceb7fc4c234","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUDynGroupMembership.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUDynGroupMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUDynGroupMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUDynGroupMembership.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -38,11 +38,13 @@ public class JPAUDynGroupMembership extends AbstractUDynMembership implements UD\n \n     public static final String TABLE = \"UDynGroupMembership\";\n \n+    public static final String JOIN_TABLE = TABLE + \"_User\";\n+\n     @OneToOne\n     private JPAGroup group;\n \n     @ManyToMany\n-    @JoinTable(name = TABLE + \"_User\", joinColumns =\n+    @JoinTable(name = JOIN_TABLE, joinColumns =\n             @JoinColumn(name = \"uDynGroupMembership_id\"),\n             inverseJoinColumns =\n             @JoinColumn(name = \"user_id\"))"},{"sha":"ff050bfbd5b2c64d70416c9af61dbb10da8c3608","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/GroupTest.java","status":"modified","additions":29,"deletions":19,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FGroupTest.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -24,15 +24,16 @@\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n import javax.persistence.TypedQuery;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n@@ -228,11 +229,10 @@ public void udynMembership() {\n         assertEquals(actual, actual.getUDynMembership().getGroup());\n \n         // 3. verify that expected users have the created group dynamically assigned\n-        assertEquals(2, actual.getUDynMembership().getMembers().size());\n+        List<String> members = groupDAO.findUDynMembersKeys(actual);\n+        assertEquals(2, members.size());\n         assertEquals(new HashSet<>(Arrays.asList(\"c9b2dec2-00a7-4855-97c0-d854842b4b24\", newUserKey)),\n-                CollectionUtils.collect(actual.getUDynMembership().getMembers(),\n-                        EntityUtils.<User>keyTransformer(),\n-                        new HashSet<String>()));\n+                new HashSet<>(members));\n \n         user = userDAO.findByUsername(\"bellini\");\n         assertNotNull(user);\n@@ -246,10 +246,9 @@ public void udynMembership() {\n         userDAO.flush();\n \n         actual = groupDAO.find(actual.getKey());\n-        assertEquals(1, actual.getUDynMembership().getMembers().size());\n-        assertEquals(\n-                \"c9b2dec2-00a7-4855-97c0-d854842b4b24\",\n-                actual.getUDynMembership().getMembers().get(0).getKey());\n+        members = groupDAO.findUDynMembersKeys(actual);\n+        assertEquals(1, members.size());\n+        assertEquals(\"c9b2dec2-00a7-4855-97c0-d854842b4b24\", members.get(0));\n \n         // 5. delete group and verify that dynamic membership was also removed\n         String dynMembershipKey = actual.getUDynMembership().getKey();\n@@ -321,12 +320,18 @@ public void adynMembership() {\n         assertEquals(actual, actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getGroup());\n \n         // 3. verify that expected any objects have the created group dynamically assigned\n-        assertEquals(2, actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getMembers().size());\n-        assertEquals(new HashSet<>(Arrays.asList(\n-                \"fc6dbc3a-6c07-4965-8781-921e7401a4a5\", newAnyObjectKey)),\n-                CollectionUtils.collect(actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getMembers(),\n-                        EntityUtils.<AnyObject>keyTransformer(),\n-                        new HashSet<String>()));\n+        System.out.println(\"MMMMMMMMM \" + groupDAO.findADynMembersKeys(actual));\n+        List<String> members = CollectionUtils.select(groupDAO.findADynMembersKeys(actual), new Predicate<String>() {\n+\n+            @Override\n+            public boolean evaluate(final String object) {\n+                return \"PRINTER\".equals(anyObjectDAO.find(object).getType().getKey());\n+            }\n+        }, new ArrayList<String>());\n+        assertEquals(2, members.size());\n+        assertEquals(\n+                new HashSet<>(Arrays.asList(\"fc6dbc3a-6c07-4965-8781-921e7401a4a5\", newAnyObjectKey)),\n+                new HashSet<>(members));\n \n         anyObject = anyObjectDAO.find(\"fc6dbc3a-6c07-4965-8781-921e7401a4a5\");\n         assertNotNull(anyObject);\n@@ -340,10 +345,15 @@ public void adynMembership() {\n         anyObjectDAO.flush();\n \n         actual = groupDAO.find(actual.getKey());\n-        assertEquals(1, actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getMembers().size());\n-        assertEquals(\n-                \"fc6dbc3a-6c07-4965-8781-921e7401a4a5\",\n-                actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getMembers().get(0).getKey());\n+        members = CollectionUtils.select(groupDAO.findADynMembersKeys(actual), new Predicate<String>() {\n+\n+            @Override\n+            public boolean evaluate(final String object) {\n+                return \"PRINTER\".equals(anyObjectDAO.find(object).getType().getKey());\n+            }\n+        }, new ArrayList<String>());\n+        assertEquals(1, members.size());\n+        assertEquals(\"fc6dbc3a-6c07-4965-8781-921e7401a4a5\", members.get(0));\n \n         // 5. delete group and verify that dynamic membership was also removed\n         String dynMembershipKey = actual.getADynMembership(anyTypeDAO.find(\"PRINTER\")).getKey();"},{"sha":"49d92c7913786e91b48bbaaf3efd1d670883381b","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/RoleTest.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -26,11 +26,10 @@\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashSet;\n+import java.util.List;\n import javax.persistence.TypedQuery;\n-import org.apache.commons.collections4.CollectionUtils;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n@@ -123,11 +122,11 @@ public void dynMembership() {\n         assertEquals(actual, actual.getDynMembership().getRole());\n \n         // 3. verify that expected users have the created role dynamically assigned\n-        assertEquals(2, actual.getDynMembership().getMembers().size());\n-        assertEquals(new HashSet<>(Arrays.asList(\"c9b2dec2-00a7-4855-97c0-d854842b4b24\", newUserKey)),\n-                CollectionUtils.collect(actual.getDynMembership().getMembers(),\n-                        EntityUtils.<User>keyTransformer(),\n-                        new HashSet<String>()));\n+        List<String> members = roleDAO.findDynMembersKeys(actual);\n+        assertEquals(2, members.size());\n+        assertEquals(\n+                new HashSet<>(Arrays.asList(\"c9b2dec2-00a7-4855-97c0-d854842b4b24\", newUserKey)),\n+                new HashSet<>(members));\n \n         user = userDAO.find(\"c9b2dec2-00a7-4855-97c0-d854842b4b24\");\n         assertNotNull(user);\n@@ -141,8 +140,9 @@ public void dynMembership() {\n         userDAO.flush();\n \n         actual = roleDAO.find(actual.getKey());\n-        assertEquals(1, actual.getDynMembership().getMembers().size());\n-        assertEquals(\"c9b2dec2-00a7-4855-97c0-d854842b4b24\", actual.getDynMembership().getMembers().get(0).getKey());\n+        members = roleDAO.findDynMembersKeys(actual);\n+        assertEquals(1, members.size());\n+        assertEquals(\"c9b2dec2-00a7-4855-97c0-d854842b4b24\", members.get(0));\n \n         // 5. delete role and verify that dynamic membership was also removed\n         String dynMembershipKey = actual.getDynMembership().getKey();"},{"sha":"fa17f204d3bc6b156d6ebde54e63ec61d5ac7612","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -125,7 +125,7 @@ public MembershipTO transform(final AMembership membership) {\n             }, anyObjectTO.getMemberships());\n \n             // dynamic memberships\n-            CollectionUtils.collect(anyObjectDAO.findDynGroupMemberships(anyObject),\n+            CollectionUtils.collect(anyObjectDAO.findDynGroups(anyObject),\n                     EntityUtils.<Group>keyTransformer(), anyObjectTO.getDynGroups());\n         }\n "},{"sha":"567739d6b683391c9575beda1452f30ac347d6fd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/RoleDataBinderImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRoleDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRoleDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FRoleDataBinderImpl.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -100,7 +100,7 @@ public void update(final Role role, final RoleTO roleTO) {\n         } else if (role.getDynMembership() != null && roleTO.getDynMembershipCond() != null\n                 && !role.getDynMembership().getFIQLCond().equals(roleTO.getDynMembershipCond())) {\n \n-            role.getDynMembership().getMembers().clear();\n+            role.getDynMembership().clear();\n             setDynMembership(role, roleTO.getDynMembershipCond());\n         }\n     }"},{"sha":"2ba5d854f5ad4e521f2fdf58d496921900b16a42","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -613,9 +613,9 @@ public MembershipTO transform(final UMembership membership) {\n             }, userTO.getMemberships());\n \n             // dynamic memberships\n-            CollectionUtils.collect(userDAO.findDynRoleMemberships(user),\n+            CollectionUtils.collect(userDAO.findDynRoles(user),\n                     EntityUtils.<Role>keyTransformer(), userTO.getDynRoles());\n-            CollectionUtils.collect(userDAO.findDynGroupMemberships(user),\n+            CollectionUtils.collect(userDAO.findDynGroups(user),\n                     EntityUtils.<Group>keyTransformer(), userTO.getDynGroups());\n         }\n "},{"sha":"1d22a1e2c9be6db41a934ba86e920661896d0f1d","filename":"ext/elasticsearch/client-elasticsearch/src/main/java/org/apache/syncope/ext/elasticsearch/client/ElasticsearchUtils.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchUtils.java?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -32,12 +32,10 @@\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.Role;\n-import org.apache.syncope.core.persistence.api.entity.anyobject.ADynGroupMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n import org.apache.syncope.core.persistence.api.entity.anyobject.ARelationship;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n-import org.apache.syncope.core.persistence.api.entity.user.UDynGroupMembership;\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n import org.apache.syncope.core.persistence.api.entity.user.URelationship;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n@@ -130,10 +128,7 @@ public Object transform(final UMembership input) {\n                     return input.getLeftEnd().getKey();\n                 }\n             }, new ArrayList<>());\n-            UDynGroupMembership udynmembership = group.getUDynMembership();\n-            if (udynmembership != null) {\n-                CollectionUtils.collect(udynmembership.getMembers(), EntityUtils.keyTransformer(), members);\n-            }\n+            members.add(groupDAO.findUDynMembersKeys(group));\n             CollectionUtils.collect(groupDAO.findAMemberships(group),\n                     new Transformer<AMembership, Object>() {\n \n@@ -142,9 +137,7 @@ public Object transform(final AMembership input) {\n                     return input.getLeftEnd().getKey();\n                 }\n             }, members);\n-            for (ADynGroupMembership adynmembership : group.getADynMemberships()) {\n-                CollectionUtils.collect(adynmembership.getMembers(), EntityUtils.keyTransformer(), members);\n-            }\n+            members.add(groupDAO.findADynMembersKeys(group));\n             builder = builder.field(\"members\", members);\n         } else if (any instanceof User) {\n             User user = ((User) any);"},{"sha":"70a26e2f9a39dc4637129d9b491be6fe0c0e6a25","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9fc62b668a300567cb3e3d6c468187226e387663/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9fc62b668a300567cb3e3d6c468187226e387663/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=9fc62b668a300567cb3e3d6c468187226e387663","patch":"@@ -1578,7 +1578,7 @@ under the License.\n       <dependency>\n         <groupId>com.icegreen</groupId>\n         <artifactId>greenmail</artifactId>\n-        <version>1.5.4</version>\n+        <version>1.5.5</version>\n         <scope>test</scope>\n       </dependency>\n       <dependency>"}]}