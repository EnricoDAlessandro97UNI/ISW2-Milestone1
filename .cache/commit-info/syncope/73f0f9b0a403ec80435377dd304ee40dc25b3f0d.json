{"sha":"73f0f9b0a403ec80435377dd304ee40dc25b3f0d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjczZjBmOWIwYTQwM2VjODA0MzUzNzdkZDMwNGVlNDBkYzI1YjNmMGQ=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-25T17:03:28Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-25T17:03:28Z"},"message":"Fixes issue 132\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247215 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d8699179f88eef7a489420d52972cdf3388fa790","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d8699179f88eef7a489420d52972cdf3388fa790"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/73f0f9b0a403ec80435377dd304ee40dc25b3f0d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/73f0f9b0a403ec80435377dd304ee40dc25b3f0d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/73f0f9b0a403ec80435377dd304ee40dc25b3f0d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/comments","author":null,"committer":null,"parents":[{"sha":"58ce60c256bfdbf7c6eefbe3522c3fd52d395b40","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/58ce60c256bfdbf7c6eefbe3522c3fd52d395b40","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/58ce60c256bfdbf7c6eefbe3522c3fd52d395b40"}],"stats":{"total":1807,"additions":947,"deletions":860},"files":[{"sha":"799d07e6c9a6a855f5be4ddd1eaee0cdee52f60e","filename":"client/src/main/java/org/syncope/client/to/SyncTaskTO.java","status":"modified","additions":5,"deletions":43,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSyncTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSyncTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSyncTaskTO.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -14,18 +14,13 @@\n  */\n package org.syncope.client.to;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-\n public class SyncTaskTO extends SchedTaskTO {\n \n     private static final long serialVersionUID = -2143537546915809016L;\n \n     private String resource;\n \n-    private List<String> defaultResources;\n-\n-    private List<Long> defaultRoles;\n+    private UserTO userTemplate;\n \n     private boolean performCreate;\n \n@@ -35,45 +30,12 @@ public class SyncTaskTO extends SchedTaskTO {\n \n     private String jobActionsClassName;\n \n-    public SyncTaskTO() {\n-        super();\n-\n-        defaultResources = new ArrayList<String>();\n-        defaultRoles = new ArrayList<Long>();\n-    }\n-\n-    public boolean addDefaultResource(String resource) {\n-        return resource != null && !defaultResources.contains(resource)\n-                && defaultResources.add(resource);\n-    }\n-\n-    public boolean removeDefaultResource(String resource) {\n-        return resource != null && defaultResources.remove(resource);\n-    }\n-\n-    public List<String> getDefaultResources() {\n-        return defaultResources;\n-    }\n-\n-    public void setDefaultResources(List<String> defaultResources) {\n-        this.defaultResources = defaultResources;\n-    }\n-\n-    public boolean addDefaultRole(Long role) {\n-        return role != null && !defaultRoles.contains(role)\n-                && defaultRoles.add(role);\n-    }\n-\n-    public boolean removeDefaultRole(Long role) {\n-        return role != null && defaultRoles.remove(role);\n-    }\n-\n-    public List<Long> getDefaultRoles() {\n-        return defaultRoles;\n+    public UserTO getUserTemplate() {\n+        return userTemplate;\n     }\n \n-    public void setDefaultRoles(List<Long> defaultRoles) {\n-        this.defaultRoles = defaultRoles;\n+    public void setUserTemplate(UserTO userTemplate) {\n+        this.userTemplate = userTemplate;\n     }\n \n     public String getResource() {"},{"sha":"996c343f8881723e7e03c52cd0cd44bc54ca0cd3","filename":"client/src/main/java/org/syncope/client/validation/SyncopeClientException.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientException.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -21,7 +21,10 @@\n \n public class SyncopeClientException extends Exception {\n \n+    private static final long serialVersionUID = 3380920886511913475L;\n+\n     private SyncopeClientExceptionType type;\n+\n     private Set<String> elements;\n \n     public SyncopeClientException() {\n@@ -61,4 +64,8 @@ public void setElements(Set<String> elements) {\n     public void setElements(List<String> elements) {\n         this.elements.addAll(elements);\n     }\n+\n+    public boolean isEmpty() {\n+        return elements.isEmpty();\n+    }\n }"},{"sha":"5efea39df69a32d4de3336ddcc83835feb749d1c","filename":"console/src/main/java/org/syncope/console/pages/AbstractSchedTaskModalPage.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -18,6 +18,7 @@\n \n import java.util.Arrays;\n import java.util.Date;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -66,7 +67,8 @@ public abstract class AbstractSchedTaskModalPage extends TaskModalPage {\n \n     public AbstractSchedTaskModalPage(\n             final ModalWindow window,\n-            final SchedTaskTO taskTO) {\n+            final SchedTaskTO taskTO,\n+            final PageReference callerPageRef) {\n \n         super(taskTO);\n \n@@ -196,15 +198,22 @@ protected void onSubmit(\n                             taskTO = taskRestClient.createSchedTask(taskTO);\n                         }\n                     }\n+\n+                    ((BasePage) callerPageRef.getPage()).setModalResult(\n+                            true);\n+\n                     window.close(target);\n                 } catch (SyncopeClientCompositeErrorException e) {\n                     LOG.error(\"While creating or updating task\", e);\n                     error(getString(\"error\") + \":\" + e.getMessage());\n+                    target.add(feedbackPanel);\n                 }\n             }\n \n             @Override\n-            protected void onError(AjaxRequestTarget target, Form form) {\n+            protected void onError(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n                 target.add(feedbackPanel);\n             }\n         };"},{"sha":"f12b68224cbf0377552dd83e4a18b379a95c8d96","filename":"console/src/main/java/org/syncope/console/pages/BaseModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -24,7 +24,7 @@\n /**\n  * Syncope Modal Window.\n  */\n-public class BaseModalPage extends WebPage {\n+public abstract class BaseModalPage extends WebPage {\n \n     /**\n      * Logger."},{"sha":"71589fa3d50f9d5b9ea46ad6b9ff8c0515f6b26b","filename":"console/src/main/java/org/syncope/console/pages/BasePage.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -158,7 +158,8 @@ public Page createPage() {\n                                                     BasePage.this.\n                                                     getPageReference(),\n                                                     editProfileModalWin,\n-                                                    userTO, true);\n+                                                    userTO, \n+                                                    UserModalPage.Mode.SELF);\n                                         }\n                                     });\n "},{"sha":"c62636e416f8d1d8a1d6d526157ae20995a08f6a","filename":"console/src/main/java/org/syncope/console/pages/Login.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -165,7 +165,8 @@ public Page createPage() {\n                                             return new UserModalPage(\n                                                     Login.this.getPageReference(),\n                                                     editProfileModalWin,\n-                                                    new UserTO(), true);\n+                                                    new UserTO(),\n+                                                    UserModalPage.Mode.SELF);\n                                         }\n                                     });\n "},{"sha":"6e1ec3d350adb27fec6c5b0778900098c6b8c194","filename":"console/src/main/java/org/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -40,7 +40,8 @@ public class MembershipModalPage extends BaseModalPage {\n     public MembershipModalPage(\n             final PageReference pageRef,\n             final ModalWindow window,\n-            final MembershipTO membershipTO) {\n+            final MembershipTO membershipTO,\n+            final boolean templateMode) {\n \n         final Form form = new Form(\"MembershipForm\");\n \n@@ -73,14 +74,9 @@ protected void onError(\n             }\n         };\n \n-        String allowedRoles = null;\n-\n-        if (((UserTO) userTO).getId() == 0) {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\");\n-        } else {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"update\");\n-        }\n-\n+        String allowedRoles = userTO.getId() == 0\n+                ? xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\")\n+                : xmlRolesReader.getAllAllowedRoles(\"Users\", \"update\");\n         MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n                 allowedRoles);\n \n@@ -89,7 +85,8 @@ protected void onError(\n         //--------------------------------\n         // Attributes panel\n         //--------------------------------\n-        form.add(new AttributesPanel(\"attributes\", membershipTO, form));\n+        form.add(new AttributesPanel(\"attributes\", membershipTO, form,\n+                templateMode));\n         //--------------------------------\n \n         //--------------------------------\n@@ -101,7 +98,8 @@ protected void onError(\n         //--------------------------------\n         // Virtual attributes container\n         //--------------------------------\n-        form.add(new VirtualAttributesPanel(\"virtualAttributes\", membershipTO));\n+        form.add(new VirtualAttributesPanel(\"virtualAttributes\", membershipTO,\n+                templateMode));\n         //--------------------------------\n \n         add(form);"},{"sha":"96a72ec9d7de3ddf05e49071bdc7152718297974","filename":"console/src/main/java/org/syncope/console/pages/SchedTaskModalPage.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -18,6 +18,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n@@ -34,9 +35,10 @@ public class SchedTaskModalPage extends AbstractSchedTaskModalPage {\n \n     public SchedTaskModalPage(\n             final ModalWindow window,\n-            final SchedTaskTO taskTO) {\n+            final SchedTaskTO taskTO,\n+            final PageReference callerPageRef) {\n \n-        super(window, taskTO);\n+        super(window, taskTO, callerPageRef);\n \n         final IModel<List<String>> classNames =\n                 new LoadableDetachableModel<List<String>>() {"},{"sha":"4c38f8397fb222d87f615fa97fd7e95e98c7df54","filename":"console/src/main/java/org/syncope/console/pages/SyncTaskModalPage.java","status":"modified","additions":5,"deletions":64,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -17,25 +17,19 @@\n package org.syncope.console.pages;\n \n import java.util.ArrayList;\n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.ResourceTO;\n-import org.syncope.client.to.RoleTO;\n import org.syncope.client.to.SyncTaskTO;\n import org.syncope.console.commons.SelectChoiceRenderer;\n import org.syncope.console.rest.ResourceRestClient;\n-import org.syncope.console.rest.RoleRestClient;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n \n /**\n  * Modal window with Task form (to stop and start execution).\n@@ -44,17 +38,15 @@ public class SyncTaskModalPage extends AbstractSchedTaskModalPage {\n \n     private static final long serialVersionUID = 2148403203517274669L;\n \n-    @SpringBean\n-    private RoleRestClient roleRestClient;\n-\n     @SpringBean\n     private ResourceRestClient resourceRestClient;\n \n     public SyncTaskModalPage(\n             final ModalWindow window,\n-            final SyncTaskTO taskTO) {\n+            final SyncTaskTO taskTO,\n+            final PageReference callerPageRef) {\n \n-        super(window, taskTO);\n+        super(window, taskTO, callerPageRef);\n \n         final IModel<List<String>> allResources =\n                 new LoadableDetachableModel<List<String>>() {\n@@ -69,35 +61,13 @@ protected List<String> load() {\n \n                         for (ResourceTO resourceTO :\n                                 resourceRestClient.getAllResources()) {\n+\n                             resourceNames.add(resourceTO.getName());\n                         }\n                         return resourceNames;\n                     }\n                 };\n \n-        final IModel<Map<Long, String>> allRoles =\n-                new LoadableDetachableModel<Map<Long, String>>() {\n-\n-                    private static final long serialVersionUID =\n-                            -2012833443695917883L;\n-\n-                    @Override\n-                    protected Map<Long, String> load() {\n-                        final Map<Long, String> allRoles =\n-                                new HashMap<Long, String>();\n-\n-                        List<RoleTO> roles = roleRestClient.getAllRoles();\n-\n-                        if (roles != null) {\n-                            for (RoleTO role : roles) {\n-                                allRoles.put(role.getId(), role.getName());\n-                            }\n-                        }\n-\n-                        return allRoles;\n-                    }\n-                };\n-\n         final AjaxDropDownChoicePanel<String> resource =\n                 new AjaxDropDownChoicePanel<String>(\n                 \"resource\", getString(\"resourceName\"),\n@@ -149,34 +119,5 @@ protected List<String> load() {\n                 \"performDelete\", getString(\"updates\"),\n                 new PropertyModel<Boolean>(taskTO, \"performDelete\"), false);\n         profile.add(deletes);\n-\n-        final AjaxPalettePanel defaultResources = new AjaxPalettePanel(\n-                \"defaultResources\",\n-                new PropertyModel(taskTO, \"defaultResources\"),\n-                new ListModel<String>(allResources.getObject()));\n-\n-        form.add(defaultResources);\n-\n-        final AjaxPalettePanel<Long> defaultRoles = new AjaxPalettePanel<Long>(\n-                \"defaultRoles\",\n-                new PropertyModel(taskTO, \"defaultRoles\"), new ListModel<Long>(\n-                new ArrayList<Long>(allRoles.getObject().keySet())),\n-                new ChoiceRenderer<Long>() {\n-\n-                    private static final long serialVersionUID =\n-                            8463000788871139550L;\n-\n-                    @Override\n-                    public String getDisplayValue(final Long id) {\n-                        return allRoles.getObject().get(id);\n-                    }\n-\n-                    @Override\n-                    public String getIdValue(final Long id, final int index) {\n-                        return id.toString();\n-                    }\n-                });\n-\n-        form.add(defaultRoles);\n     }\n }"},{"sha":"9dd1b098c9087c57327cfe13804961038379871a","filename":"console/src/main/java/org/syncope/console/pages/TaskModalPage.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -62,7 +62,7 @@\n /**\n  * Modal window with Task form (to stop and start execution).\n  */\n-public class TaskModalPage extends BaseModalPage {\n+public abstract class TaskModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = -4110576026663173545L;\n \n@@ -76,7 +76,6 @@ public class TaskModalPage extends BaseModalPage {\n     protected Form form;\n \n     public TaskModalPage(final TaskTO taskTO) {\n-\n         final TaskTO actual = taskTO.getId() == 0\n                 ? taskTO\n                 : taskTO instanceof PropagationTaskTO"},{"sha":"c962a4b86e0f844a49ec328c8dbbea4e76491440","filename":"console/src/main/java/org/syncope/console/pages/Tasks.java","status":"modified","additions":13,"deletions":2,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -19,8 +19,10 @@\n import java.util.Comparator;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n@@ -44,13 +46,22 @@ public Tasks(final PageParameters parameters) {\n \n         add(new PropagationTasks(\"propagation\"));\n         add(new NotificationTasks(\"notification\"));\n-        add(new SchedTasks(\"sched\"));\n-        add(new SyncTasks(\"sync\"));\n+        add(new SchedTasks(\"sched\", getPageReference()));\n+        add(new SyncTasks(\"sync\", getPageReference()));\n+    }\n+\n+    @Override\n+    public void setWindowClosedCallback(final ModalWindow window,\n+            final WebMarkupContainer container) {\n+\n+        super.setWindowClosedCallback(window, container);\n     }\n \n     public static class TaskExecutionsProvider\n             extends SortableDataProvider<TaskExecTO> {\n \n+        private static final long serialVersionUID = -5401263348984206145L;\n+\n         private SortableDataProviderComparator<TaskExecTO> comparator;\n \n         private TaskTO taskTO;"},{"sha":"8668374b7a606f8f050da005950954732d93a2e3","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":66,"deletions":20,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -28,6 +28,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.mod.UserMod;\n+import org.syncope.client.to.SyncTaskTO;\n import org.syncope.client.to.UserRequestTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.util.AttributableOperations;\n@@ -38,6 +39,7 @@\n import org.syncope.console.pages.panels.RolesPanel;\n import org.syncope.console.pages.panels.UserDetailsPanel;\n import org.syncope.console.pages.panels.VirtualAttributesPanel;\n+import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.rest.UserRequestRestClient;\n import org.syncope.console.rest.UserRestClient;\n \n@@ -46,14 +48,25 @@\n  */\n public class UserModalPage extends BaseModalPage {\n \n+    public enum Mode {\n+\n+        ADMIN,\n+        SELF,\n+        TEMPLATE;\n+\n+    }\n+\n     private static final long serialVersionUID = 5002005009737457667L;\n \n     @SpringBean\n-    private UserRestClient restClient;\n+    private UserRestClient userRestClient;\n \n     @SpringBean\n     private UserRequestRestClient requestRestClient;\n \n+    @SpringBean\n+    private TaskRestClient taskRestClient;\n+\n     private final PageReference callerPageRef;\n \n     private final ModalWindow window;\n@@ -62,7 +75,9 @@ public class UserModalPage extends BaseModalPage {\n \n     private UserTO userTO;\n \n-    private boolean self = false;\n+    private SyncTaskTO syncTaskTO;\n+\n+    private Mode mode = Mode.ADMIN;\n \n     private UserTO initialUserTO;\n \n@@ -75,20 +90,35 @@ public UserModalPage(final PageReference callerPageRef,\n         this.callerPageRef = callerPageRef;\n         this.window = window;\n         this.userRequestTO = userRequestTO;\n+        this.mode = Mode.SELF;\n+\n+        setupModalPage();\n+    }\n+\n+    public UserModalPage(final PageReference callerPageRef,\n+            final ModalWindow window,\n+            final SyncTaskTO syncTaskTO) {\n+\n+        super();\n+\n+        this.callerPageRef = callerPageRef;\n+        this.window = window;\n+        this.syncTaskTO = syncTaskTO;\n+        this.mode = Mode.TEMPLATE;\n \n         setupModalPage();\n     }\n \n     public UserModalPage(final PageReference callerPageRef,\n             final ModalWindow window, final UserTO userTO,\n-            final boolean self) {\n+            final Mode mode) {\n \n         super();\n \n         this.callerPageRef = callerPageRef;\n         this.window = window;\n         this.userTO = userTO;\n-        this.self = self;\n+        this.mode = mode == null ? Mode.ADMIN : mode;\n \n         setupModalPage();\n     }\n@@ -109,7 +139,7 @@ private void setupModalPage() {\n                     break;\n \n                 case UPDATE:\n-                    initialUserTO = restClient.read(\n+                    initialUserTO = userRestClient.read(\n                             userRequestTO.getUserMod().getId());\n                     userTO = AttributableOperations.apply(\n                             initialUserTO, userRequestTO.getUserMod());\n@@ -119,6 +149,9 @@ private void setupModalPage() {\n                 default:\n             }\n         }\n+        if (syncTaskTO != null) {\n+            userTO = syncTaskTO.getUserTemplate();\n+        }\n \n         if (initialUserTO == null && userTO.getId() > 0) {\n             initialUserTO = AttributableOperations.clone(userTO);\n@@ -130,20 +163,20 @@ private void setupModalPage() {\n                 ? getString(\"new\") : \"\"));\n \n         final Form form = new Form(\"UserForm\");\n-\n         form.setModel(new CompoundPropertyModel(userTO));\n \n         //--------------------------------\n         // User details\n         //--------------------------------\n         form.add(new UserDetailsPanel(\"details\", userTO, form,\n-                userRequestTO == null));\n+                userRequestTO == null, mode == Mode.TEMPLATE));\n         //--------------------------------\n \n         //--------------------------------\n         // Attributes panel\n         //--------------------------------\n-        form.add(new AttributesPanel(\"attributes\", userTO, form));\n+        form.add(new AttributesPanel(\"attributes\", userTO, form,\n+                mode == Mode.TEMPLATE));\n         //--------------------------------\n \n         //--------------------------------\n@@ -155,7 +188,8 @@ private void setupModalPage() {\n         //--------------------------------\n         // Virtual attributes panel\n         //--------------------------------\n-        form.add(new VirtualAttributesPanel(\"virtualAttributes\", userTO));\n+        form.add(new VirtualAttributesPanel(\"virtualAttributes\", userTO,\n+                mode == Mode.TEMPLATE));\n         //--------------------------------\n \n         //--------------------------------\n@@ -167,7 +201,7 @@ private void setupModalPage() {\n         //--------------------------------\n         // Roles panel\n         //--------------------------------\n-        form.add(new RolesPanel(\"roles\", userTO));\n+        form.add(new RolesPanel(\"roles\", userTO, mode == Mode.TEMPLATE));\n         //--------------------------------\n \n         final AjaxButton submit = new IndicatingAjaxButton(\n@@ -182,24 +216,36 @@ protected void onSubmit(final AjaxRequestTarget target,\n                 final UserTO updatedUserTO = (UserTO) form.getModelObject();\n                 try {\n                     if (updatedUserTO.getId() == 0) {\n-                        if (self) {\n-                            requestRestClient.requestCreate(updatedUserTO);\n-                        } else {\n-                            restClient.create(updatedUserTO);\n-                            if (userRequestTO != null) {\n-                                requestRestClient.delete(userRequestTO.getId());\n-                            }\n+                        switch (mode) {\n+                            case SELF:\n+                                requestRestClient.requestCreate(updatedUserTO);\n+                                break;\n+\n+                            case ADMIN:\n+                            default:\n+                                userRestClient.create(updatedUserTO);\n+                                if (userRequestTO != null) {\n+                                    requestRestClient.delete(\n+                                            userRequestTO.getId());\n+                                }\n+                                break;\n+\n+                            case TEMPLATE:\n+                                syncTaskTO.setUserTemplate(updatedUserTO);\n+                                taskRestClient.updateSyncTask(syncTaskTO);\n+                                break;\n+\n                         }\n                     } else {\n                         UserMod userMod = AttributableOperations.diff(\n                                 updatedUserTO, initialUserTO);\n \n                         // update user just if it is changed\n                         if (!userMod.isEmpty()) {\n-                            if (self) {\n+                            if (mode == Mode.SELF) {\n                                 requestRestClient.requestUpdate(userMod);\n                             } else {\n-                                restClient.update(userMod);\n+                                userRestClient.update(userMod);\n                                 if (userRequestTO != null) {\n                                     requestRestClient.delete(\n                                             userRequestTO.getId());\n@@ -229,7 +275,7 @@ protected void onError(final AjaxRequestTarget target,\n             }\n         };\n \n-        if (!self) {\n+        if (mode == Mode.ADMIN) {\n             String allowedRoles = userTO.getId() == 0\n                     ? xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\")\n                     : xmlRolesReader.getAllAllowedRoles(\"Users\", \"update\");"},{"sha":"13c1c3fee1d6ad5c5df290626af9b4ad2750509d","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -75,7 +75,8 @@ public void onClick(final AjaxRequestTarget target) {\n                     public Page createPage() {\n                         return new UserModalPage(\n                                 Users.this.getPageReference(),\n-                                editModalWin, new UserTO(), false);\n+                                editModalWin, new UserTO(),\n+                                UserModalPage.Mode.ADMIN);\n                     }\n                 });\n "},{"sha":"4089626305269134b5dffa4f3a26a41c67adf1cf","filename":"console/src/main/java/org/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":24,"deletions":36,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -31,8 +31,6 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.syncope.client.to.AbstractAttributableTO;\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.RoleTO;\n@@ -46,25 +44,25 @@\n import org.syncope.console.wicket.markup.html.form.DateTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n+import org.syncope.types.SchemaType;\n \n public class AttributesPanel extends Panel {\n \n-    /**\n-     * Logger.\n-     */\n-    protected static final Logger LOG =\n-            LoggerFactory.getLogger(AttributesPanel.class);\n-\n     private static final long serialVersionUID = 552437609667518888L;\n \n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n+    private final boolean templateMode;\n+\n     public <T extends AbstractAttributableTO> AttributesPanel(\n             final String id,\n             final T entityTO,\n-            final Form form) {\n+            final Form form,\n+            final boolean templateMode) {\n+\n         super(id);\n+        this.templateMode = templateMode;\n \n         final IModel<Map<String, SchemaTO>> schemas =\n                 new LoadableDetachableModel<Map<String, SchemaTO>>() {\n@@ -110,28 +108,25 @@ protected void populateItem(final ListItem item) {\n                 final AttributeTO attributeTO =\n                         (AttributeTO) item.getDefaultModelObject();\n \n-                item.add(new Label(\"name\", attributeTO.getSchema()));\n+                item.add(new Label(\"name\", templateMode\n+                        ? attributeTO.getSchema() + \" (JEXL)\"\n+                        : attributeTO.getSchema()));\n \n                 final FieldPanel panel = getFieldPanel(\n                         schemas.getObject().get(attributeTO.getSchema()),\n-                        form,\n-                        attributeTO);\n+                        form, attributeTO);\n \n-                if (schemas.getObject().get(attributeTO.getSchema()).\n+                if (templateMode\n+                        || !schemas.getObject().get(attributeTO.getSchema()).\n                         isMultivalue()) {\n \n-                    final MultiValueSelectorPanel multiFieldPanel =\n-                            new MultiValueSelectorPanel<String>(\n+                    item.add(panel);\n+                } else {\n+                    item.add(new MultiValueSelectorPanel<String>(\n                             \"panel\",\n                             new PropertyModel(attributeTO, \"values\"),\n-                            String.class,\n-                            panel);\n-\n-                    item.add(multiFieldPanel);\n-                } else {\n-                    item.add(panel);\n+                            String.class, panel));\n                 }\n-\n             }\n         };\n \n@@ -180,61 +175,54 @@ private FieldPanel getFieldPanel(\n \n         final FieldPanel panel;\n \n-        final boolean required =\n-                schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n+        final boolean required = templateMode\n+                ? false\n+                : schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n \n-        final boolean readOnly = schemaTO.isReadonly();\n+        final boolean readOnly = templateMode ? false : schemaTO.isReadonly();\n \n-        switch (schemaTO.getType()) {\n+        final SchemaType type = templateMode\n+                ? SchemaType.String : schemaTO.getType();\n+        switch (type) {\n             case Boolean:\n                 panel = new AjaxCheckBoxPanel(\n                         \"panel\", schemaTO.getName(), new Model(), true);\n-\n                 panel.setRequired(required);\n-\n                 break;\n \n             case Date:\n                 if (!schemaTO.getConversionPattern().contains(\"H\")) {\n                     panel = new DateTextFieldPanel(\n                             \"panel\", schemaTO.getName(), new Model(), true,\n                             schemaTO.getConversionPattern());\n-\n                     if (required) {\n                         panel.addRequiredLabel();\n                     }\n                 } else {\n                     panel = new DateTimeFieldPanel(\n                             \"panel\", schemaTO.getName(), new Model(), true);\n-\n                     if (required) {\n                         panel.addRequiredLabel();\n                         ((DateTimeFieldPanel) panel).setFormValidator(form);\n                     }\n-\n                     panel.setStyleShet(\"ui-widget-content ui-corner-all\");\n                 }\n-\n                 break;\n \n             case Enum:\n                 panel = new AjaxDropDownChoicePanel<String>(\n                         \"panel\", schemaTO.getName(), new Model(), true);\n-\n                 ((AjaxDropDownChoicePanel) panel).setChoices(\n                         Arrays.asList(schemaTO.getEnumerationValues().\n                         split(Schema.enumValuesSeparator)));\n-\n                 if (required) {\n                     panel.addRequiredLabel();\n                 }\n-\n                 break;\n \n             default:\n                 panel = new AjaxTextFieldPanel(\n                         \"panel\", schemaTO.getName(), new Model(), true);\n-\n                 if (required) {\n                     panel.addRequiredLabel();\n                 }"},{"sha":"26d89bd76bb3ec002652503401f53a7c8062f770","filename":"console/src/main/java/org/syncope/console/pages/panels/ResultSetPanel.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -60,7 +60,6 @@\n import org.syncope.console.pages.BasePage;\n import org.syncope.console.pages.DisplayAttributesModalPage;\n import org.syncope.console.pages.UserModalPage;\n-import org.syncope.console.pages.Users;\n import org.syncope.console.rest.UserRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n@@ -72,7 +71,7 @@\n public class ResultSetPanel extends Panel implements IEventSource {\n \n     private static final long serialVersionUID = -9170191461250434024L;\n-    \n+\n     /**\n      * Logger.\n      */\n@@ -421,7 +420,7 @@ public Page createPage() {\n                                                 page.getPageReference(),\n                                                 editmodal,\n                                                 model.getObject(),\n-                                                false);\n+                                                UserModalPage.Mode.ADMIN);\n                                     }\n                                 });\n "},{"sha":"96923042aecb420809882bd4d5860cff1dc18371","filename":"console/src/main/java/org/syncope/console/pages/panels/RoleAttributesPanel.java","status":"modified","additions":3,"deletions":15,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleAttributesPanel.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -15,7 +15,6 @@\n  */\n package org.syncope.console.pages.panels;\n \n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -35,16 +34,13 @@ public class RoleAttributesPanel extends Panel {\n     @SpringBean\n     private EntitlementRestClient entitlementRestClient;\n \n-    private AjaxButton submit;\n-\n     final Palette<String> entitlementsPalette;\n \n     public RoleAttributesPanel(final String id,\n             final Form form, final RoleTO roleTO) {\n \n         super(id);\n \n-\n         //--------------------------------\n         // Attributes panel\n         //--------------------------------\n@@ -54,7 +50,7 @@ public RoleAttributesPanel(final String id,\n         name.addRequiredLabel();\n         this.add(name);\n \n-        this.add(new AttributesPanel(\"attributes\", roleTO, form));\n+        this.add(new AttributesPanel(\"attributes\", roleTO, form, false));\n \n         final AjaxCheckBoxPanel inhAttributes = new AjaxCheckBoxPanel(\n                 \"inheritAttributes\",\n@@ -64,8 +60,6 @@ public RoleAttributesPanel(final String id,\n         this.add(inhAttributes);\n         //--------------------------------\n \n-\n-\n         //--------------------------------\n         // Derived attributes container\n         //--------------------------------\n@@ -80,12 +74,11 @@ public RoleAttributesPanel(final String id,\n         this.add(inhDerivedAttributes);\n         //--------------------------------\n \n-\n-\n         //--------------------------------\n         // Virtual attributes container\n         //--------------------------------\n-        this.add(new VirtualAttributesPanel(\"virtualAttributes\", roleTO));\n+        this.add(new VirtualAttributesPanel(\"virtualAttributes\", roleTO,\n+                false));\n \n         final AjaxCheckBoxPanel inhVirtualAttributes = new AjaxCheckBoxPanel(\n                 \"inheritVirtualAttributes\",\n@@ -96,17 +89,13 @@ public RoleAttributesPanel(final String id,\n         this.add(inhVirtualAttributes);\n         //--------------------------------\n \n-\n-\n         //--------------------------------\n         // Security container\n         //--------------------------------\n \n         this.add(new RoleSecurityPanel(\"security\", roleTO));\n         //--------------------------------\n \n-\n-\n         //--------------------------------\n         // Resources container\n         //--------------------------------\n@@ -126,7 +115,6 @@ public RoleAttributesPanel(final String id,\n                 availableEntitlements, new SelectChoiceRenderer(), 20, false);\n \n         this.add(entitlementsPalette);\n-\n     }\n \n     public Palette<String> getEntitlementsPalette() {"},{"sha":"1536b4ca5fa7a7ac8f7eba8e6d7086e6751eca18","filename":"console/src/main/java/org/syncope/console/pages/panels/RolesPanel.java","status":"modified","additions":7,"deletions":24,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolesPanel.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -14,7 +14,6 @@\n  */\n package org.syncope.console.pages.panels;\n \n-import java.util.Iterator;\n import java.util.List;\n import javax.swing.tree.DefaultMutableTreeNode;\n import org.apache.wicket.Page;\n@@ -54,9 +53,10 @@ public class RolesPanel extends Panel {\n \n     private UserTO userTO = null;\n \n-    public RolesPanel(final String id, final UserTO userTO) {\n-        super(id);\n+    public RolesPanel(final String id, final UserTO userTO,\n+            final boolean templateMode) {\n \n+        super(id);\n         this.userTO = userTO;\n \n         final WebMarkupContainer membershipsContainer =\n@@ -100,8 +100,7 @@ public Page createPage() {\n \n                         return new MembershipModalPage(\n                                 getPage().getPageReference(),\n-                                membershipWin,\n-                                membershipTO);\n+                                membershipWin, membershipTO, templateMode);\n                     }\n                 });\n                 membershipWin.show(target);\n@@ -127,7 +126,7 @@ protected void populateItem(final ListItem item) {\n                 item.add(new Label(\"roleId\", new Model(\n                         membershipTO.getRoleId())));\n                 item.add(new Label(\"roleName\", new Model(\n-                        getRoleName(membershipTO.getRoleId(), roles))));\n+                        membershipTO.getRoleName())));\n \n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n@@ -146,8 +145,8 @@ public void onClick(final AjaxRequestTarget target) {\n                                     public Page createPage() {\n                                         return new MembershipModalPage(\n                                                 getPage().getPageReference(),\n-                                                membershipWin,\n-                                                membershipTO);\n+                                                membershipWin, membershipTO,\n+                                                templateMode);\n \n                                     }\n                                 });\n@@ -177,22 +176,6 @@ public void onClick(final AjaxRequestTarget target) {\n         setWindowClosedCallback(membershipWin, membershipsContainer);\n     }\n \n-    private String getRoleName(long roleId, List<RoleTO> roles) {\n-        boolean found = false;\n-        RoleTO roleTO;\n-        String result = null;\n-        for (Iterator<RoleTO> itor = roles.iterator();\n-                itor.hasNext() && !found;) {\n-\n-            roleTO = itor.next();\n-            if (roleTO.getId() == roleId) {\n-                result = roleTO.getName();\n-            }\n-        }\n-\n-        return result;\n-    }\n-\n     private void setWindowClosedCallback(\n             final ModalWindow window,\n             final WebMarkupContainer container) {"},{"sha":"ec207c1f9d5d349838e7479f34ce917722f5e13e","filename":"console/src/main/java/org/syncope/console/pages/panels/SchedTasks.java","status":"modified","additions":24,"deletions":37,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -18,6 +18,7 @@\n import java.util.List;\n \n import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -46,6 +47,7 @@\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.XMLRolesReader;\n import org.syncope.console.pages.SchedTaskModalPage;\n+import org.syncope.console.pages.Tasks;\n import org.syncope.console.pages.Tasks.TasksProvider;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n@@ -60,6 +62,8 @@ public class SchedTasks extends Panel {\n \n     private static final int WIN_WIDTH = 700;\n \n+    private static final long serialVersionUID = 525486152284253354L;\n+\n     @SpringBean\n     private TaskRestClient restClient;\n \n@@ -70,20 +74,29 @@ public class SchedTasks extends Panel {\n \n     private WebMarkupContainer container;\n \n-    private boolean operationResult = false;\n-\n     private ModalWindow window;\n \n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n-    public SchedTasks(String id, IModel<?> model) {\n-        super(id, model);\n-    }\n+    public SchedTasks(final String id,\n+            final PageReference callerPageRef) {\n \n-    public SchedTasks(String id) {\n         super(id);\n-        add(window = new ModalWindow(\"taskWin\"));\n+\n+        container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        window = new ModalWindow(\"taskWin\");\n+        window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        window.setInitialHeight(WIN_HEIGHT);\n+        window.setInitialWidth(WIN_WIDTH);\n+        window.setCookieName(\"view-task-win\");\n+        add(window);\n+\n+        ((Tasks) callerPageRef.getPage()).setWindowClosedCallback(\n+                window, container);\n \n         paginatorRows = prefMan.getPaginatorRows(\n                 getWebRequest(),\n@@ -132,7 +145,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new SchedTaskModalPage(window, taskTO);\n+                                return new SchedTaskModalPage(\n+                                        window, taskTO, callerPageRef);\n                             }\n                         });\n \n@@ -286,34 +300,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 \"datatable\", columns, new TasksProvider(\n                 restClient, paginatorRows, getId(), SchedTaskTO.class),\n                 paginatorRows);\n-\n-        container = new WebMarkupContainer(\"container\");\n         container.add(table);\n-        container.setOutputMarkupId(true);\n-\n-        add(container);\n-\n-        window.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n-\n-                    private static final long serialVersionUID =\n-                            8804221891699487139L;\n-\n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        target.add(container);\n-                        if (operationResult) {\n-                            info(getString(\"operation_succeded\"));\n-                            target.add(getPage().get(\"feedback\"));\n-                            operationResult = false;\n-                        }\n-                    }\n-                });\n-\n-        window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        window.setInitialHeight(WIN_HEIGHT);\n-        window.setInitialWidth(WIN_WIDTH);\n-        window.setCookieName(\"view-task-win\");\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n@@ -340,7 +327,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n \n-        // create new user\n         AjaxLink createLink = new IndicatingAjaxLink(\"createLink\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n@@ -354,7 +340,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        return new SchedTaskModalPage(window, new SchedTaskTO());\n+                        return new SchedTaskModalPage(window,\n+                                new SchedTaskTO(), callerPageRef);\n                     }\n                 });\n "},{"sha":"90f070d0f50d2957398a6d7ae4e8b5cd274402f2","filename":"console/src/main/java/org/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":69,"deletions":41,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -17,6 +17,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -45,7 +46,9 @@\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.commons.XMLRolesReader;\n import org.syncope.console.pages.SyncTaskModalPage;\n+import org.syncope.console.pages.Tasks;\n import org.syncope.console.pages.Tasks.TasksProvider;\n+import org.syncope.console.pages.UserModalPage;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.ajax.markup.html.IndicatingDeleteOnConfirmAjaxLink;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n@@ -71,24 +74,27 @@ public class SyncTasks extends Panel {\n \n     private WebMarkupContainer container;\n \n-    /**\n-     * Response flag set by the Modal Window after the operation is completed:\n-     * TRUE if the operation succedes, FALSE otherwise.\n-     */\n-    private boolean operationResult = false;\n-\n     private ModalWindow window;\n \n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n-    public SyncTasks(String id, IModel<?> model) {\n-        super(id, model);\n-    }\n-\n-    public SyncTasks(String id) {\n+    public SyncTasks(String id, final PageReference callerPageRef) {\n         super(id);\n-        add(window = new ModalWindow(\"taskWin\"));\n+\n+        container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        window = new ModalWindow(\"taskWin\");\n+        window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        window.setInitialHeight(WIN_HEIGHT);\n+        window.setInitialWidth(WIN_WIDTH);\n+        window.setCookieName(\"view-task-win\");\n+        add(window);\n+\n+        ((Tasks) callerPageRef.getPage()).setWindowClosedCallback(\n+                window, container);\n \n         paginatorRows = prefMan.getPaginatorRows(\n                 getWebRequest(),\n@@ -137,7 +143,55 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new SyncTaskModalPage(window, taskTO);\n+                                return new SyncTaskModalPage(\n+                                        window, taskTO, callerPageRef);\n+                            }\n+                        });\n+\n+                        window.show(target);\n+                    }\n+                };\n+\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(viewLink);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"read\"));\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        columns.add(new AbstractColumn<SyncTaskTO>(\n+                new ResourceModel(\"userTemplate\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<SyncTaskTO>> cellItem,\n+                    final String componentId,\n+                    final IModel<SyncTaskTO> model) {\n+\n+                final SyncTaskTO taskTO = model.getObject();\n+\n+                AjaxLink viewLink = new IndicatingAjaxLink(\"editLink\") {\n+\n+                    private static final long serialVersionUID =\n+                            -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+\n+                        window.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID =\n+                                    -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new UserModalPage(\n+                                        callerPageRef, window, taskTO);\n                             }\n                         });\n \n@@ -291,34 +345,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 \"datatable\", columns, new TasksProvider(\n                 restClient, paginatorRows, id, SyncTaskTO.class),\n                 paginatorRows);\n-\n-        container = new WebMarkupContainer(\"container\");\n         container.add(table);\n-        container.setOutputMarkupId(true);\n-\n-        add(container);\n-\n-        window.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n-\n-                    private static final long serialVersionUID =\n-                            8804221891699487139L;\n-\n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        target.add(container);\n-                        if (operationResult) {\n-                            info(getString(\"operation_succeded\"));\n-                            target.add(getPage().get(\"feedback\"));\n-                            operationResult = false;\n-                        }\n-                    }\n-                });\n-\n-        window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        window.setInitialHeight(WIN_HEIGHT);\n-        window.setInitialWidth(WIN_WIDTH);\n-        window.setCookieName(\"view-task-win\");\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n@@ -359,7 +386,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        return new SyncTaskModalPage(window, new SyncTaskTO());\n+                        return new SyncTaskModalPage(\n+                                window, new SyncTaskTO(), callerPageRef);\n                     }\n                 });\n "},{"sha":"bf053230a29ffc4d7397af83f50ec13466908e07","filename":"console/src/main/java/org/syncope/console/pages/panels/UserDetailsPanel.java","status":"modified","additions":22,"deletions":18,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -30,6 +30,7 @@\n import org.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.DateTimeFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.FieldPanel;\n \n public class UserDetailsPanel extends Panel {\n \n@@ -39,42 +40,45 @@ public <T extends AbstractAttributableTO> UserDetailsPanel(\n             final String id,\n             final UserTO userTO,\n             final Form form,\n-            final boolean resetPassword) {\n+            final boolean resetPassword,\n+            final boolean templateMode) {\n \n         super(id);\n \n         // ------------------------\n         // Username\n         // ------------------------\n-        final AjaxTextFieldPanel username = new AjaxTextFieldPanel(\n-                \"username\",\n-                \"username\",\n-                new PropertyModel<String>(userTO, \"username\"),\n-                true);\n-\n-        username.addRequiredLabel();\n+        final FieldPanel username = new AjaxTextFieldPanel(\n+                \"username\", \"username\",\n+                new PropertyModel<String>(userTO, \"username\"), true);\n+        if (!templateMode) {\n+            username.addRequiredLabel();\n+        }\n         add(username);\n         // ------------------------\n \n         // ------------------------\n         // Password\n         // ------------------------\n-        final AjaxPasswordFieldPanel password = new AjaxPasswordFieldPanel(\n-                \"password\",\n-                \"password\",\n-                new PropertyModel<String>(userTO, \"password\"),\n-                true);\n-\n-        password.setRequired(userTO.getId() == 0);\n-        ((PasswordTextField) password.getField()).setResetPassword(\n-                resetPassword);\n+        final FieldPanel password = templateMode\n+                ? new AjaxTextFieldPanel(\"password\", \"password\",\n+                new PropertyModel<String>(userTO, \"password\"), true)\n+                : new AjaxPasswordFieldPanel(\"password\", \"password\",\n+                new PropertyModel<String>(userTO, \"password\"), true);\n         add(password);\n \n+        if (!templateMode) {\n+            password.setRequired(userTO.getId() == 0);\n+            ((PasswordTextField) password.getField()).setResetPassword(\n+                    resetPassword);\n+        }\n+\n         final WebMarkupContainer mandatoryPassword =\n                 new WebMarkupContainer(\"mandatory_pwd\");\n         mandatoryPassword.add(new Behavior() {\n \n-            private static final long serialVersionUID = 1469628524240283489L;\n+            private static final long serialVersionUID =\n+                    1469628524240283489L;\n \n             @Override\n             public void onComponentTag("},{"sha":"34e9ad63183eb537c58d34c6160522656aafa450","filename":"console/src/main/java/org/syncope/console/pages/panels/VirtualAttributesPanel.java","status":"modified","additions":30,"deletions":21,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -24,6 +24,7 @@\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.list.ListItem;\n@@ -35,8 +36,6 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.syncope.client.to.AbstractAttributableTO;\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.RoleTO;\n@@ -48,19 +47,13 @@\n \n public class VirtualAttributesPanel extends Panel {\n \n-    /**\n-     * Logger.\n-     */\n-    protected static final Logger LOG =\n-            LoggerFactory.getLogger(VirtualAttributesPanel.class);\n-\n     private static final long serialVersionUID = -7982691107029848579L;\n \n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n     public <T extends AbstractAttributableTO> VirtualAttributesPanel(\n-            final String id, final T entityTO) {\n+            final String id, final T entityTO, final boolean templateMode) {\n \n         super(id);\n \n@@ -164,7 +157,19 @@ public CharSequence preDecorateScript(\n                         new DropDownChoice<String>(\n                         \"schema\",\n                         new PropertyModel<String>(attributeTO, \"schema\"),\n-                        virtualSchemaNames);\n+                        virtualSchemaNames,\n+                        new ChoiceRenderer<String>() {\n+\n+                            private static final long serialVersionUID =\n+                                    3109256773218160485L;\n+\n+                            @Override\n+                            public Object getDisplayValue(final String object) {\n+                                return templateMode\n+                                        ? object + \" (JEXL)\"\n+                                        : object;\n+                            }\n+                        });\n \n                 schemaChoice.add(\n                         new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n@@ -173,7 +178,9 @@ public CharSequence preDecorateScript(\n                                     -1107858522700306810L;\n \n                             @Override\n-                            protected void onUpdate(AjaxRequestTarget art) {\n+                            protected void onUpdate(\n+                                    final AjaxRequestTarget art) {\n+\n                                 attributeTO.setSchema(\n                                         schemaChoice.getModelObject());\n                             }\n@@ -187,16 +194,18 @@ protected void onUpdate(AjaxRequestTarget art) {\n                     attributeTO.addValue(\"\");\n                 }\n \n-                final MultiValueSelectorPanel values =\n-                        new MultiValueSelectorPanel(\n-                        \"values\",\n-                        new PropertyModel<List<String>>(\n-                        attributeTO, \"values\"),\n-                        String.class,\n-                        new AjaxTextFieldPanel(\n-                        \"panel\", \"values\", new Model(null), true));\n-\n-                item.add(values);\n+                if (templateMode) {\n+                    item.add(new AjaxTextFieldPanel(\n+                            \"values\", \"values\", new Model(), true));\n+                } else {\n+                    item.add(new MultiValueSelectorPanel(\n+                            \"values\",\n+                            new PropertyModel<List<String>>(\n+                            attributeTO, \"values\"),\n+                            String.class,\n+                            new AjaxTextFieldPanel(\n+                            \"panel\", \"values\", new Model(null), true)));\n+                }\n             }\n         };\n "},{"sha":"be0d5d1888cd6c4f05af05af9b2b3321680b5108","filename":"console/src/main/resources/org/syncope/console/pages/SyncTaskModalPage.html","status":"modified","additions":0,"deletions":15,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.html?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -20,13 +20,6 @@\n             background: #cccccc url(css/images/ui-bg_highlight-soft_75_cccccc_1x100.png)\n                 50% 50% repeat-x;\n         }\n-\n-        #resources table{\n-            font-size: 1.1em;\n-        }\n-        #roles table{\n-            font-size: 1.1em;\n-        }\n     </style>\n     <script type=\"text/javascript\">\n         jQuery(function() {\n@@ -48,8 +41,6 @@\n                 <ul>\n                     <li class=\"tabs-selected\"><a href=\"#profile\"><span><wicket:message key=\"profile\"/></span></a></li>\n                     <li><a href=\"#crontab\"><span><wicket:message key=\"crontab\"/></span></a></li>\n-                    <li><a href=\"#resources\"><span><wicket:message key=\"resources\"/></span></a></li>\n-                    <li><a href=\"#roles\"><span><wicket:message key=\"roles\"/></span></a></li>\n                     <li><a href=\"#executions\"><span><wicket:message key=\"executions\"/></span></a></li>\n                 </ul>\n                 <div id=\"profile\">\n@@ -159,12 +150,6 @@\n                         </div>\n                     </span>\n                 </div>\n-                <div id=\"resources\">\n-                    <span wicket:id=\"defaultResources\"/>\n-                </div>\n-                <div id=\"roles\">\n-                    <span wicket:id=\"defaultRoles\"/>\n-                </div>\n                 <div id=\"executions\">\n                     <span wicket:id=\"executions\" style=\"width: 100%\">\n                         <table id=\"executions\" class=\"ui-widget ui-widget-content\""},{"sha":"88120bc9402651d6643498eddd8314cfb0c65385","filename":"console/src/main/resources/org/syncope/console/pages/SyncTaskModalPage.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.properties?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -1,7 +1,5 @@\n profile=Profile\n crontab=Schedule\n-resources=Default Resources\n-roles=Default Roles\n executions=Executions\n title=Task\n id=Id"},{"sha":"a74449caf3b873e4591059e4161bfdedd907cd66","filename":"console/src/main/resources/org/syncope/console/pages/SyncTaskModalPage_it.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage_it.properties?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -1,7 +1,5 @@\n profile=Profilo\n crontab=Schedule\n-resources=Risorse di Default\n-roles=Ruoli di Default\n executions=Esecuzioni\n title=Task\n id=Id"},{"sha":"5adb87f036f308f699721a3c34a6de074c905f39","filename":"console/src/main/resources/org/syncope/console/pages/panels/SyncTasks.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.properties?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -7,4 +7,5 @@ delete=Delete\n edit=Edit\n execute=Execute\n executeDryRun=Dry run\n-create_task=Add New Task\n\\ No newline at end of file\n+create_task=Add New Task\n+userTemplate=User template"},{"sha":"4c0588d25645afcad4843a020df3f34f095e5959","filename":"console/src/main/resources/org/syncope/console/pages/panels/SyncTasks_it.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks_it.properties?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -7,4 +7,5 @@ delete=Rimuovi\n edit=Modifica\n execute=Esegui\n executeDryRun=Esecuzione simulata\n-create_task=Aggiungi Nuovo Task\n\\ No newline at end of file\n+create_task=Aggiungi Nuovo Task\n+userTemplate=Modello utente"},{"sha":"a5db5f2816ec235d64c0c8b1ea033de86d2a85f8","filename":"console/src/main/resources/org/syncope/console/pages/panels/UserDetailsPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.html?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -30,7 +30,7 @@\n                 </div>\n                 <div class=\"tablecolumn_field medium_dynamicsize\">\n                     <span wicket:id=\"password\" />\n-                    <span wicket:id=\"mandatory_pwd\">*</span>\n+                    <span wicket:id=\"mandatory_pwd\"></span>\n                 </div>\n             </div>\n "},{"sha":"5b8f775d525c86fd9e83da0ed7aef60965553e76","filename":"console/src/test/java/org/syncope/console/TaskTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FTaskTestITCase.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -64,7 +64,7 @@ public void delete() {\n         selenium.waitForPageToLoad(\"30000\");\n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n         selenium.click(\"//div[3]/div[3]/span/div/span/\"\n-                + \"table/tbody/tr/td[8]/span/a\");\n+                + \"table/tbody/tr/td[9]/span/a\");\n         assertTrue(selenium.getConfirmation().matches(\n                 \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n         assertTrue(selenium.isTextPresent(\"Operation executed successfully\"));"},{"sha":"658e54f985942b766ac7e64fa20e43faf61425b5","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractDerAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -52,7 +52,7 @@ public String getValue(\n         final JexlUtil jexlUtil = context.getBean(JexlUtil.class);\n \n         // Prepare context using user attributes\n-        final JexlContext jexlContext = jexlUtil.addAttributesToContext(\n+        final JexlContext jexlContext = jexlUtil.addAttrsToContext(\n                 attributes, null);\n \n         final AbstractAttributable owner = getOwner();"},{"sha":"07f1eea610ce179c4f6dfb9e28a1e9c683e2849b","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnInstance.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -31,7 +31,7 @@\n import javax.persistence.Lob;\n import javax.persistence.OneToMany;\n import org.hibernate.annotations.Type;\n-import org.syncope.core.util.XmlSerializer;\n+import org.syncope.core.util.XMLSerializer;\n import org.syncope.types.ConnConfProperty;\n import org.syncope.types.ConnectorCapability;\n \n@@ -146,7 +146,7 @@ public void setConnectorName(String connectorName) {\n \n     public Set<ConnConfProperty> getConfiguration() {\n         Set<ConnConfProperty> result =\n-                XmlSerializer.<HashSet<ConnConfProperty>>deserialize(\n+                XMLSerializer.<HashSet<ConnConfProperty>>deserialize(\n                 xmlConfiguration);\n         if (result == null) {\n             result = Collections.emptySet();\n@@ -155,7 +155,7 @@ public Set<ConnConfProperty> getConfiguration() {\n     }\n \n     public void setConfiguration(final Set<ConnConfProperty> configuration) {\n-        xmlConfiguration = XmlSerializer.serialize(\n+        xmlConfiguration = XMLSerializer.serialize(\n                 new HashSet<ConnConfProperty>(configuration));\n     }\n "},{"sha":"5a18f6fb5d2b0b62a8412ce52420da415e03434e","filename":"core/src/main/java/org/syncope/core/persistence/beans/Entitlement.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -30,6 +30,8 @@\n @EntitlementCheck\n public class Entitlement extends AbstractBaseBean {\n \n+    private static final long serialVersionUID = 8044745999246422483L;\n+\n     @Id\n     private String name;\n "},{"sha":"b17c281993574e2464573ce3dede770dd288e599","filename":"core/src/main/java/org/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":7,"deletions":32,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -14,8 +14,6 @@\n  */\n package org.syncope.core.persistence.beans;\n \n-import java.net.URLDecoder;\n-import java.net.URLEncoder;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashSet;\n@@ -40,17 +38,14 @@\n import org.apache.commons.lang.StringUtils;\n import org.hibernate.annotations.Type;\n import org.identityconnectors.framework.common.objects.SyncToken;\n-import org.springframework.context.ConfigurableApplicationContext;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.syncope.core.util.XmlSerializer;\n import org.syncope.core.persistence.validation.entity.ExternalResourceCheck;\n-import org.syncope.core.util.ApplicationContextManager;\n import org.syncope.types.ConnConfProperty;\n import org.syncope.types.PropagationMode;\n import org.syncope.types.IntMappingType;\n import org.syncope.types.TraceLevel;\n-import com.thoughtworks.xstream.XStream;\n+import org.syncope.core.util.XMLSerializer;\n \n /**\n  * A resource to which propagation occurs.\n@@ -390,7 +385,7 @@ public void setConnectorConfigurationProperties(\n             final Set<ConnConfProperty> properties) {\n \n         // create new set to make sure it's a serializable set implementation.\n-        xmlConfiguration = XmlSerializer.serialize(\n+        xmlConfiguration = XMLSerializer.serialize(\n                 new HashSet<ConnConfProperty>(properties));\n     }\n \n@@ -399,7 +394,7 @@ public Set<ConnConfProperty> getConfiguration() {\n \n         Set<ConnConfProperty> deserializedSet;\n         if (StringUtils.isNotBlank(xmlConfiguration)) {\n-            deserializedSet = XmlSerializer.<HashSet<ConnConfProperty>>\n+            deserializedSet = XMLSerializer.<HashSet<ConnConfProperty>>\n                     deserialize(xmlConfiguration);\n             if (deserializedSet != null) {\n                 result = deserializedSet;\n@@ -414,36 +409,16 @@ public String getSerializedSyncToken() {\n     }\n \n     public SyncToken getSyncToken() {\n-        SyncToken result = null;\n-\n-        if (serializedSyncToken != null) {\n-            ConfigurableApplicationContext context =\n-                    ApplicationContextManager.getApplicationContext();\n-            XStream xStream = context.getBean(XStream.class);\n-            try {\n-                result = (SyncToken) xStream.fromXML(\n-                        URLDecoder.decode(serializedSyncToken, \"UTF-8\"));\n-            } catch (Throwable t) {\n-                LOG.error(\"During attribute deserialization\", t);\n-            }\n-        }\n-\n-        return result;\n+        return serializedSyncToken == null\n+                ? null\n+                : XMLSerializer.<SyncToken>deserialize(serializedSyncToken);\n     }\n \n     public void setSerializedSyncToken(final String serializedSyncToken) {\n         this.serializedSyncToken = serializedSyncToken;\n     }\n \n     public void setSyncToken(final SyncToken syncToken) {\n-        ConfigurableApplicationContext context =\n-                ApplicationContextManager.getApplicationContext();\n-        XStream xStream = context.getBean(XStream.class);\n-        try {\n-            serializedSyncToken = URLEncoder.encode(\n-                    xStream.toXML(syncToken), \"UTF-8\");\n-        } catch (Throwable t) {\n-            LOG.error(\"During attribute serialization\", t);\n-        }\n+        serializedSyncToken = XMLSerializer.serialize(syncToken);\n     }\n }"},{"sha":"fb7378b62a9aa5082885670aa0a998cb25e256ec","filename":"core/src/main/java/org/syncope/core/persistence/beans/Notification.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -32,7 +32,7 @@\n import org.hibernate.annotations.Type;\n import org.syncope.client.search.NodeCond;\n import org.syncope.core.persistence.validation.entity.NotificationCheck;\n-import org.syncope.core.util.XmlSerializer;\n+import org.syncope.core.util.XMLSerializer;\n import org.syncope.types.TraceLevel;\n \n @NotificationCheck\n@@ -86,7 +86,7 @@ public Long getId() {\n     }\n \n     public NodeCond getAbout() {\n-        NodeCond result = XmlSerializer.<NodeCond>deserialize(xmlAbout);\n+        NodeCond result = XMLSerializer.<NodeCond>deserialize(xmlAbout);\n         if (result == null) {\n             result = new NodeCond();\n         }\n@@ -98,11 +98,11 @@ public void setAbout(NodeCond about) {\n             about = new NodeCond();\n         }\n \n-        xmlAbout = XmlSerializer.serialize(about);\n+        xmlAbout = XMLSerializer.serialize(about);\n     }\n \n     public NodeCond getRecipients() {\n-        NodeCond result = XmlSerializer.<NodeCond>deserialize(xmlRecipients);\n+        NodeCond result = XMLSerializer.<NodeCond>deserialize(xmlRecipients);\n         if (result == null) {\n             result = new NodeCond();\n         }\n@@ -114,7 +114,7 @@ public void setRecipients(NodeCond recipients) {\n             recipients = new NodeCond();\n         }\n \n-        xmlRecipients = XmlSerializer.serialize(recipients);\n+        xmlRecipients = XMLSerializer.serialize(recipients);\n     }\n \n     public List<String> getEvents() {"},{"sha":"4e148d502ba394a949443497771834cd43854646","filename":"core/src/main/java/org/syncope/core/persistence/beans/Policy.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -22,8 +22,8 @@\n import javax.persistence.Lob;\n \n import org.hibernate.annotations.Type;\n-import org.syncope.core.util.XmlSerializer;\n import org.syncope.core.persistence.validation.entity.PolicyCheck;\n+import org.syncope.core.util.XMLSerializer;\n import org.syncope.types.AbstractPolicySpec;\n import org.syncope.types.PolicyType;\n \n@@ -68,13 +68,12 @@ public PolicyType getType() {\n     }\n \n     public <T extends AbstractPolicySpec> T getSpecification() {\n-        T result = XmlSerializer.<T>deserialize(specification);\n-        return result;\n+        return XMLSerializer.<T>deserialize(specification);\n     }\n \n     public <T extends AbstractPolicySpec> void setSpecification(\n             final T policy) {\n \n-        specification = XmlSerializer.serialize(policy);\n+        specification = XMLSerializer.serialize(policy);\n     }\n }"},{"sha":"bb16ead9ce07b78d8ce0f44022a7d6b80b90fbb0","filename":"core/src/main/java/org/syncope/core/persistence/beans/PropagationTask.java","status":"modified","additions":3,"deletions":28,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -14,10 +14,6 @@\n  */\n package org.syncope.core.persistence.beans;\n \n-import com.thoughtworks.xstream.XStream;\n-import java.net.URLDecoder;\n-import java.net.URLEncoder;\n-import java.util.Collections;\n import java.util.Set;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n@@ -26,9 +22,8 @@\n import javax.persistence.ManyToOne;\n import org.hibernate.annotations.Type;\n import org.identityconnectors.framework.common.objects.Attribute;\n-import org.springframework.context.ConfigurableApplicationContext;\n import org.syncope.core.persistence.validation.entity.PropagationTaskCheck;\n-import org.syncope.core.util.ApplicationContextManager;\n+import org.syncope.core.util.XMLSerializer;\n import org.syncope.types.PropagationMode;\n import org.syncope.types.PropagationOperation;\n \n@@ -93,31 +88,11 @@ public void setOldAccountId(String oldAccountId) {\n     }\n \n     public Set<Attribute> getAttributes() {\n-        Set<Attribute> result = Collections.EMPTY_SET;\n-\n-        ConfigurableApplicationContext context =\n-                ApplicationContextManager.getApplicationContext();\n-        XStream xStream = context.getBean(XStream.class);\n-        try {\n-            result = (Set<Attribute>) xStream.fromXML(\n-                    URLDecoder.decode(xmlAttributes, \"UTF-8\"));\n-        } catch (Throwable t) {\n-            LOG.error(\"During attribute deserialization\", t);\n-        }\n-\n-        return result;\n+        return XMLSerializer.<Set<Attribute>>deserialize(xmlAttributes);\n     }\n \n     public void setAttributes(final Set<Attribute> attributes) {\n-        ConfigurableApplicationContext context =\n-                ApplicationContextManager.getApplicationContext();\n-        XStream xStream = context.getBean(XStream.class);\n-        try {\n-            xmlAttributes = URLEncoder.encode(\n-                    xStream.toXML(attributes), \"UTF-8\");\n-        } catch (Throwable t) {\n-            LOG.error(\"During attribute serialization\", t);\n-        }\n+        xmlAttributes = XMLSerializer.serialize(attributes);\n     }\n \n     public PropagationMode getPropagationMode() {"},{"sha":"cdc8f762903a75d7959d0b3942126b2d47ed3c21","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncTask.java","status":"modified","additions":13,"deletions":67,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -13,19 +13,17 @@\n  */\n package org.syncope.core.persistence.beans;\n \n-import java.util.ArrayList;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Set;\n import javax.persistence.Basic;\n import javax.persistence.Entity;\n+import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n-import javax.persistence.OneToMany;\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n-import org.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.hibernate.annotations.Type;\n+import org.syncope.client.to.UserTO;\n import org.syncope.core.persistence.validation.entity.SyncTaskCheck;\n import org.syncope.core.scheduling.SyncJob;\n+import org.syncope.core.util.XMLSerializer;\n \n @Entity\n @SyncTaskCheck\n@@ -39,11 +37,9 @@ public class SyncTask extends SchedTask {\n     @ManyToOne\n     private ExternalResource resource;\n \n-    @OneToMany\n-    private List<ExternalResource> defaultResources;\n-\n-    @OneToMany\n-    private List<SyncopeRole> defaultRoles;\n+    @Lob\n+    @Type(type = \"org.hibernate.type.StringClobType\")\n+    private String userTemplate;\n \n     @Basic\n     @Min(0)\n@@ -68,8 +64,6 @@ public class SyncTask extends SchedTask {\n     public SyncTask() {\n         super();\n \n-        defaultResources = new ArrayList<ExternalResource>();\n-        defaultRoles = new ArrayList<SyncopeRole>();\n         super.setJobClassName(SyncJob.class.getName());\n     }\n \n@@ -85,62 +79,14 @@ public void setResource(ExternalResource resource) {\n         this.resource = resource;\n     }\n \n-    public boolean addDefaultResource(ExternalResource resource) {\n-        return resource != null && !defaultResources.contains(resource)\n-                && defaultResources.add(resource);\n-    }\n-\n-    public boolean removeDefaultResource(ExternalResource resource) {\n-        return resource != null && defaultResources.remove(resource);\n-    }\n-\n-    public Set<String> getDefaultResourceNames() {\n-        Set<String> defaultResourceNames = new HashSet<String>(\n-                getDefaultResources().size());\n-        for (ExternalResource defaultResource : getDefaultResources()) {\n-            defaultResourceNames.add(defaultResource.getName());\n-        }\n-        return defaultResourceNames;\n-    }\n-\n-    public List<ExternalResource> getDefaultResources() {\n-        return defaultResources;\n-    }\n-\n-    public void setDefaultResources(List<ExternalResource> defaultResources) {\n-        this.defaultResources.clear();\n-        if (defaultResources != null && !defaultResources.isEmpty()) {\n-            this.defaultResources.addAll(defaultResources);\n-        }\n-    }\n-\n-    public boolean addDefaultRole(SyncopeRole role) {\n-        return role != null && !defaultRoles.contains(role)\n-                && defaultRoles.add(role);\n-    }\n-\n-    public boolean removeDefaultRole(SyncopeRole role) {\n-        return role != null && defaultRoles.remove(role);\n-    }\n-\n-    public Set<Long> getDefaultRoleIds() {\n-        Set<Long> defaultRoleIds = new HashSet<Long>(\n-                getDefaultRoles().size());\n-        for (SyncopeRole defaultRole : getDefaultRoles()) {\n-            defaultRoleIds.add(defaultRole.getId());\n-        }\n-        return defaultRoleIds;\n-    }\n-\n-    public List<SyncopeRole> getDefaultRoles() {\n-        return defaultRoles;\n+    public UserTO getUserTemplate() {\n+        return userTemplate == null\n+                ? new UserTO()\n+                : XMLSerializer.<UserTO>deserialize(userTemplate);\n     }\n \n-    public void setDefaultRoles(List<SyncopeRole> defaultRoles) {\n-        this.defaultRoles.clear();\n-        if (defaultRoles != null && !defaultRoles.isEmpty()) {\n-            this.defaultRoles.addAll(defaultRoles);\n-        }\n+    public void setUserTemplate(final UserTO userTemplate) {\n+        this.userTemplate = XMLSerializer.serialize(userTemplate);\n     }\n \n     public boolean isPerformCreate() {"},{"sha":"af21f3979a91ae335c7a35e229b94a8779d3c938","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncopeConf.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -21,6 +21,8 @@\n @Entity\n public class SyncopeConf extends AbstractBaseBean {\n \n+    private static final long serialVersionUID = -899341077670090120L;\n+\n     @Id\n     @Column(name = \"confKey\")\n     private String key;"},{"sha":"fd4fbdd23192eae40e3b94848ef0544c2b94f616","filename":"core/src/main/java/org/syncope/core/persistence/beans/UserRequest.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FUserRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FUserRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FUserRequest.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -24,7 +24,7 @@\n import org.hibernate.annotations.Type;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n-import org.syncope.core.util.XmlSerializer;\n+import org.syncope.core.util.XMLSerializer;\n import org.syncope.types.UserRequestType;\n \n @Entity\n@@ -56,23 +56,23 @@ public UserRequestType getType() {\n     public UserTO getUserTO() {\n         return type != UserRequestType.CREATE\n                 ? null\n-                : XmlSerializer.<UserTO>deserialize(payload);\n+                : XMLSerializer.<UserTO>deserialize(payload);\n     }\n \n     public void setUserTO(final UserTO userTO) {\n         type = UserRequestType.CREATE;\n-        payload = XmlSerializer.serialize(userTO);\n+        payload = XMLSerializer.serialize(userTO);\n     }\n \n     public UserMod getUserMod() {\n         return type != UserRequestType.UPDATE\n                 ? null\n-                : XmlSerializer.<UserMod>deserialize(payload);\n+                : XMLSerializer.<UserMod>deserialize(payload);\n     }\n \n     public void setUserMod(final UserMod userMod) {\n         type = UserRequestType.UPDATE;\n-        payload = XmlSerializer.serialize(userMod);\n+        payload = XMLSerializer.serialize(userMod);\n     }\n \n     public Long getUserId() {"},{"sha":"e8457600478897e13a6a77d63a1fc6dfcdd81ffd","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/MVirSchema.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirSchema.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -22,4 +22,7 @@\n @Entity\n @Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)\n public class MVirSchema extends AbstractVirSchema {\n+\n+    private static final long serialVersionUID = 1563166228898033559L;\n+\n }"},{"sha":"2c3ef94ef86da3ac0a3fb23378cc5b110793f241","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/RVirSchema.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirSchema.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -22,4 +22,7 @@\n @Entity\n @Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)\n public class RVirSchema extends AbstractVirSchema {\n+\n+    private static final long serialVersionUID = -8799489777077514655L;\n+\n }"},{"sha":"70cd56e0079e5dc111b6421ac4ff337769c84041","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SyncTaskValidator.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -49,7 +49,6 @@ public boolean isValid(final SyncTask object,\n \n             if (isValid) {\n                 isValid = object.getResource() != null;\n-\n                 if (!isValid) {\n                     LOG.error(\"Resource is null\");\n "},{"sha":"c787251d12dd108612f9355725faba1182c27e4f","filename":"core/src/main/java/org/syncope/core/rest/controller/TaskController.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -378,6 +378,8 @@ public TaskExecTO execute(@PathVariable(\"taskId\") final Long taskId,\n                 result.setStatus(\"JOB_FIRED\");\n                 result.setMessage(\"Job fired; waiting for results...\");\n                 break;\n+\n+            default:\n         }\n         LOG.debug(\"Execution finished for {}, {}\", task, result);\n \n@@ -429,7 +431,7 @@ public TaskExecTO report(\n             default:\n         }\n \n-        if (!invalidReportException.getElements().isEmpty()) {\n+        if (!invalidReportException.isEmpty()) {\n             SyncopeClientCompositeErrorException scce =\n                     new SyncopeClientCompositeErrorException(\n                     HttpStatus.BAD_REQUEST);"},{"sha":"6faf460a99fbee4686795ba314f4b5369d707685","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":16,"deletions":7,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -143,7 +143,7 @@ public List<UserTO> list() {\n                 EntitlementUtil.getOwnedEntitlementNames()));\n         List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n         for (SyncopeUser user : users) {\n-            userTOs.add(dataBinder.getUserTO(user.getId()));\n+            userTOs.add(dataBinder.getUserTO(user));\n         }\n \n         return userTOs;\n@@ -163,7 +163,7 @@ public List<UserTO> list(\n         List<SyncopeUser> users = userDAO.findAll(adminRoleIds, page, size);\n         List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n         for (SyncopeUser user : users) {\n-            userTOs.add(dataBinder.getUserTO(user.getId()));\n+            userTOs.add(dataBinder.getUserTO(user));\n         }\n \n         return userTOs;\n@@ -176,9 +176,17 @@ public List<UserTO> list(\n     public UserTO read(@PathVariable(\"userId\") final Long userId)\n             throws NotFoundException, UnauthorizedRoleException {\n \n-        SyncopeUser user = dataBinder.getUserFromId(userId);\n+        return dataBinder.getUserTO(userId);\n+    }\n \n-        return dataBinder.getUserTO(user.getId());\n+    @PreAuthorize(\"hasRole('USER_READ')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/read\")\n+    @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n+    public UserTO read(@RequestParam(\"username\") final String username)\n+            throws NotFoundException, UnauthorizedRoleException {\n+\n+        return dataBinder.getUserTO(username);\n     }\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n@@ -200,7 +208,7 @@ public List<UserTO> search(@RequestBody final NodeCond searchCondition)\n                 getOwnedEntitlementNames()), searchCondition);\n         List<UserTO> result = new ArrayList<UserTO>(matchingUsers.size());\n         for (SyncopeUser user : matchingUsers) {\n-            result.add(dataBinder.getUserTO(user.getId()));\n+            result.add(dataBinder.getUserTO(user));\n         }\n \n         return result;\n@@ -230,7 +238,7 @@ public List<UserTO> search(\n \n         final List<UserTO> result = new ArrayList<UserTO>(matchingUsers.size());\n         for (SyncopeUser user : matchingUsers) {\n-            result.add(dataBinder.getUserTO(user.getId()));\n+            result.add(dataBinder.getUserTO(user));\n         }\n \n         return result;\n@@ -468,7 +476,8 @@ public WorkflowFormTO claimForm(@PathVariable(\"taskId\") final String taskId)\n     value = \"/workflow/form/submit\")\n     @Transactional(rollbackFor = {Throwable.class})\n     public UserTO submitForm(@RequestBody final WorkflowFormTO form)\n-            throws NotFoundException, WorkflowException, PropagationException {\n+            throws NotFoundException, WorkflowException, PropagationException,\n+            UnauthorizedRoleException {\n \n         LOG.debug(\"About to process form {}\", form);\n "},{"sha":"c30e256135cd3cf10fd1eaef66ae7cc262d52843","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -202,7 +202,7 @@ private boolean evaluateMandatoryCondition(\n             final List<? extends AbstractAttr> attributes) {\n \n         JexlContext jexlContext = new MapContext();\n-        jexlUtil.addAttributesToContext(attributes, jexlContext);\n+        jexlUtil.addAttrsToContext(attributes, jexlContext);\n \n         return Boolean.parseBoolean(\n                 jexlUtil.evaluate(\n@@ -586,7 +586,7 @@ protected PropagationByResource fill(\n             }\n         }\n \n-        if (!invalidValues.getElements().isEmpty()) {\n+        if (!invalidValues.isEmpty()) {\n             compositeErrorException.addException(invalidValues);\n         }\n \n@@ -684,7 +684,7 @@ protected PropagationByResource fill(\n         // Finally, check if mandatory values are missing\n         SyncopeClientException requiredValuesMissing =\n                 checkMandatory(attributableUtil, attributable);\n-        if (!requiredValuesMissing.getElements().isEmpty()) {\n+        if (!requiredValuesMissing.isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n         }\n \n@@ -759,13 +759,13 @@ protected void fill(final AbstractAttributable attributable,\n             }\n         }\n \n-        if (!invalidValues.getElements().isEmpty()) {\n+        if (!invalidValues.isEmpty()) {\n             compositeErrorException.addException(invalidValues);\n         }\n \n         SyncopeClientException requiredValuesMissing =\n                 checkMandatory(attributableUtil, attributable);\n-        if (!requiredValuesMissing.getElements().isEmpty()) {\n+        if (!requiredValuesMissing.isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n         }\n "},{"sha":"1247829c47c644ad79b40521152f00b0d9647486","filename":"core/src/main/java/org/syncope/core/rest/data/ConnInstanceDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -81,7 +81,7 @@ public ConnInstance getConnInstance(\n         // Throw composite exception if there is at least one element set\n         // in the composing exceptions\n \n-        if (!requiredValuesMissing.getElements().isEmpty()) {\n+        if (!requiredValuesMissing.isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n         }\n \n@@ -141,7 +141,7 @@ public ConnInstance updateConnInstance(\n         connInstance.setCapabilities(\n                 connInstanceTO.getCapabilities());\n \n-        if (!requiredValuesMissing.getElements().isEmpty()) {\n+        if (!requiredValuesMissing.isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n         }\n "},{"sha":"ed87b61cf30201ca47fd81f45a047d9248948884","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -263,7 +263,7 @@ private SchemaMapping getSchemaMapping(ExternalResource resource,\n \n         // Throw composite exception if there is at least one element set\n         // in the composing exceptions\n-        if (!requiredValuesMissing.getElements().isEmpty()) {\n+        if (!requiredValuesMissing.isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n         }\n "},{"sha":"857171a521e79938affe45bfe8b74cb055e39f9a","filename":"core/src/main/java/org/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":65,"deletions":44,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -16,33 +16,39 @@\n \n import java.util.List;\n import javassist.NotFoundException;\n+import org.apache.commons.lang.StringUtils;\n import org.quartz.Scheduler;\n import org.quartz.SchedulerException;\n import org.quartz.Trigger;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.stereotype.Component;\n-import org.syncope.client.to.NotificationTaskTO;\n+import org.syncope.client.to.AbstractAttributableTO;\n+import org.syncope.client.to.AttributeTO;\n+import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.PropagationTaskTO;\n import org.syncope.client.to.SchedTaskTO;\n import org.syncope.client.to.SyncTaskTO;\n import org.syncope.client.to.TaskExecTO;\n import org.syncope.client.to.TaskTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.init.JobInstanceLoader;\n import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.SyncTask;\n import org.syncope.core.persistence.beans.ExternalResource;\n-import org.syncope.core.persistence.beans.NotificationTask;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.TaskExec;\n-import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.dao.ResourceDAO;\n-import org.syncope.core.persistence.dao.RoleDAO;\n+import org.syncope.core.util.JexlUtil;\n import org.syncope.core.util.TaskUtil;\n+import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n public class TaskDataBinder {\n@@ -54,8 +60,7 @@ public class TaskDataBinder {\n             TaskDataBinder.class);\n \n     private static final String[] IGNORE_TASK_PROPERTIES = {\n-        \"executions\", \"resource\", \"defaultResources\", \"defaultRoles\",\n-        \"updateIdentities\"};\n+        \"executions\", \"resource\"};\n \n     private static final String[] IGNORE_TASK_EXECUTION_PROPERTIES = {\n         \"id\", \"task\"};\n@@ -64,29 +69,66 @@ public class TaskDataBinder {\n     private ResourceDAO resourceDAO;\n \n     @Autowired\n-    private RoleDAO roleDAO;\n+    private SchedulerFactoryBean scheduler;\n \n     @Autowired\n-    private SchedulerFactoryBean scheduler;\n+    private JexlUtil jexlUtil;\n \n-    private void fill(final SyncTask task, final SyncTaskTO taskTO) {\n-        for (String resourceName : taskTO.getDefaultResources()) {\n-            ExternalResource resource = resourceDAO.find(resourceName);\n-            if (resource == null) {\n-                LOG.warn(\"Ignoring invalid resource \" + resourceName);\n-            } else {\n-                task.addDefaultResource(resource);\n+    private void checkJexl(final AbstractAttributableTO attributableTO,\n+            final SyncopeClientException sce) {\n+\n+        for (AttributeTO attrTO : attributableTO.getAttributes()) {\n+            if (!attrTO.getValues().isEmpty()\n+                    && !jexlUtil.isExpressionValid(attrTO.getValues().get(0))) {\n+\n+                sce.addElement(\"Invalid JEXL: \" + attrTO.getValues().get(0));\n             }\n         }\n+        for (AttributeTO attrTO : attributableTO.getVirtualAttributes()) {\n+            if (!attrTO.getValues().isEmpty()\n+                    && !jexlUtil.isExpressionValid(attrTO.getValues().get(0))) {\n \n-        for (Long roleId : taskTO.getDefaultRoles()) {\n-            SyncopeRole role = roleDAO.find(roleId);\n-            if (role == null) {\n-                LOG.warn(\"Ignoring invalid role \" + roleId);\n-            } else {\n-                task.addDefaultRole(role);\n+                sce.addElement(\"Invalid JEXL: \" + attrTO.getValues().get(0));\n             }\n         }\n+    }\n+\n+    private void fill(final SyncTask task, final SyncTaskTO taskTO) {\n+        if (taskTO.getUserTemplate() != null) {\n+            UserTO template = taskTO.getUserTemplate();\n+\n+            // 1. validate JEXL expressions in user template\n+            SyncopeClientException sce = new SyncopeClientException(\n+                    SyncopeClientExceptionType.InvalidSyncTask);\n+\n+            if (StringUtils.isNotBlank(template.getUsername())\n+                    && !jexlUtil.isExpressionValid(template.getUsername())) {\n+\n+                sce.addElement(\"Invalid JEXL: \" + template.getUsername());\n+            }\n+            if (StringUtils.isNotBlank(template.getPassword())\n+                    && !jexlUtil.isExpressionValid(template.getPassword())) {\n+\n+                sce.addElement(\"Invalid JEXL: \" + template.getPassword());\n+            }\n+\n+            checkJexl(template, sce);\n+\n+            for (MembershipTO memb : template.getMemberships()) {\n+                checkJexl(memb, sce);\n+            }\n+\n+            if (!sce.isEmpty()) {\n+                SyncopeClientCompositeErrorException scce =\n+                        new SyncopeClientCompositeErrorException(\n+                        HttpStatus.BAD_REQUEST);\n+                scce.addException(sce);\n+                throw scce;\n+            }\n+        }\n+\n+        // 2. all JEXL expressions are valid: accept user template\n+        task.setUserTemplate(taskTO.getUserTemplate());\n \n         task.setPerformCreate(taskTO.isPerformCreate());\n         task.setPerformUpdate(taskTO.isPerformUpdate());\n@@ -166,7 +208,6 @@ private void setExecTime(final SchedTaskTO taskTO) {\n     }\n \n     public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n-\n         TaskTO taskTO = taskUtil.newTaskTO();\n         BeanUtils.copyProperties(task, taskTO, IGNORE_TASK_PROPERTIES);\n \n@@ -190,32 +231,12 @@ public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n \n                 ((SyncTaskTO) taskTO).setResource(\n                         ((SyncTask) task).getResource().getName());\n-                for (ExternalResource resource :\n-                        ((SyncTask) task).getDefaultResources()) {\n-\n-                    ((SyncTaskTO) taskTO).addDefaultResource(\n-                            resource.getName());\n-                }\n-                for (SyncopeRole role :\n-                        ((SyncTask) task).getDefaultRoles()) {\n-\n-                    ((SyncTaskTO) taskTO).addDefaultRole(role.getId());\n-                }\n-                ((SyncTaskTO) taskTO).setPerformCreate(\n-                        ((SyncTask) task).isPerformCreate());\n-                ((SyncTaskTO) taskTO).setPerformUpdate(\n-                        ((SyncTask) task).isPerformUpdate());\n-                ((SyncTaskTO) taskTO).setPerformDelete(\n-                        ((SyncTask) task).isPerformDelete());\n-\n-                ((SyncTaskTO) taskTO).setJobActionsClassName(\n-                        ((SyncTask) task).getJobActionsClassName());\n                 break;\n \n             case NOTIFICATION:\n-                BeanUtils.copyProperties((NotificationTask) task,\n-                        (NotificationTaskTO) taskTO, IGNORE_TASK_PROPERTIES);\n                 break;\n+\n+            default:\n         }\n \n         return taskTO;"},{"sha":"e997f509e2fea81b7c2c021cda6b1512329b2b24","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":49,"deletions":20,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -86,6 +86,44 @@ public SyncopeUser getUserFromId(final Long userId)\n         return user;\n     }\n \n+    @Transactional(readOnly = true)\n+    public SyncopeUser getUserFromUsername(final String username)\n+            throws NotFoundException, UnauthorizedRoleException {\n+\n+        if (username == null) {\n+            throw new NotFoundException(\"Null username\");\n+        }\n+\n+        SyncopeUser user = userDAO.find(username);\n+        if (user == null) {\n+            throw new NotFoundException(\"User \" + username);\n+        }\n+\n+        Set<Long> roleIds = user.getRoleIds();\n+        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(\n+                EntitlementUtil.getOwnedEntitlementNames());\n+        roleIds.removeAll(adminRoleIds);\n+        if (!roleIds.isEmpty()) {\n+            throw new UnauthorizedRoleException(roleIds);\n+        }\n+\n+        return user;\n+    }\n+\n+    private CipherAlgorithm getCipherAlgoritm() {\n+        CipherAlgorithm cipherAlgoritm;\n+\n+        try {\n+            cipherAlgoritm = CipherAlgorithm.valueOf(\n+                    confDAO.find(\"password.cipher.algorithm\").getValue());\n+        } catch (Exception e) {\n+            LOG.error(\"Cipher algorithm nof found. Let's use AES\", e);\n+            cipherAlgoritm = CipherAlgorithm.AES;\n+        }\n+\n+        return cipherAlgoritm;\n+    }\n+\n     public void create(final SyncopeUser user, final UserTO userTO)\n             throws SyncopeClientCompositeErrorException {\n \n@@ -326,16 +364,7 @@ public PropagationByResource update(final SyncopeUser user,\n         return propByRes;\n     }\n \n-    /**\n-     * Generate a transfer object for the given JPA entity.\n-     *\n-     * @param userId user id\n-     * @return transfer object\n-     */\n-    @Transactional(readOnly = true)\n-    public UserTO getUserTO(final Long userId) {\n-        SyncopeUser user = userDAO.find(userId);\n-\n+    public UserTO getUserTO(final SyncopeUser user) {\n         UserTO userTO = new UserTO();\n \n         BeanUtils.copyProperties(user, userTO, IGNORE_USER_PROPERTIES);\n@@ -365,17 +394,17 @@ public UserTO getUserTO(final Long userId) {\n         return userTO;\n     }\n \n-    private CipherAlgorithm getCipherAlgoritm() {\n-        CipherAlgorithm cipherAlgoritm;\n+    @Transactional(readOnly = true)\n+    public UserTO getUserTO(final String username)\n+            throws NotFoundException, UnauthorizedRoleException {\n \n-        try {\n-            cipherAlgoritm = CipherAlgorithm.valueOf(\n-                    confDAO.find(\"password.cipher.algorithm\").getValue());\n-        } catch (Exception e) {\n-            LOG.error(\"Cipher algorithm nof found. Let's use AES\", e);\n-            cipherAlgoritm = CipherAlgorithm.AES;\n-        }\n+        return getUserTO(getUserFromUsername(username));\n+    }\n \n-        return cipherAlgoritm;\n+    @Transactional(readOnly = true)\n+    public UserTO getUserTO(final Long userId)\n+            throws NotFoundException, UnauthorizedRoleException {\n+\n+        return getUserTO(getUserFromId(userId));\n     }\n }"},{"sha":"6bf7692cbe4404ae2a2f0290fa78e2f33cfd6694","filename":"core/src/main/java/org/syncope/core/rest/data/UserRequestDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserRequestDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserRequestDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserRequestDataBinder.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -68,7 +68,7 @@ public UserTO getAuthUserTO()\n         SyncopeUser authUser = userDAO.find(\n                 SecurityContextHolder.getContext().\n                 getAuthentication().getName());\n-        return userDataBinder.getUserTO(authUser.getId());\n+        return userDataBinder.getUserTO(authUser);\n     }\n \n     public UserRequestTO getUserRequestTO(final UserRequest request) {"},{"sha":"0a92d49524ef911adeaf9960c6dcece02b521686","filename":"core/src/main/java/org/syncope/core/scheduling/SyncJob.java","status":"modified","additions":137,"deletions":48,"changes":185,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -18,6 +18,8 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang.RandomStringUtils;\n+import org.apache.commons.lang.StringUtils;\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -35,11 +37,11 @@\n import org.springframework.security.core.userdetails.User;\n import org.springframework.security.core.userdetails.UserDetails;\n import org.syncope.client.mod.AttributeMod;\n-import org.syncope.client.mod.MembershipMod;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.NodeCond;\n import org.syncope.client.search.SyncopeUserCond;\n+import org.syncope.client.to.AbstractAttributableTO;\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.UserTO;\n@@ -64,6 +66,7 @@\n import org.syncope.core.rest.data.UserDataBinder;\n import org.syncope.core.scheduling.SyncResult.Operation;\n import org.syncope.core.util.EntitlementUtil;\n+import org.syncope.core.util.JexlUtil;\n import org.syncope.core.workflow.UserWorkflowAdapter;\n import org.syncope.core.workflow.WorkflowResult;\n import org.syncope.types.ConflictResolutionAction;\n@@ -130,27 +133,26 @@ public class SyncJob extends AbstractJob {\n      */\n     private SyncJobActions actions;\n \n+    /**\n+     * JEXL engine for evaluating connector's account link.\n+     */\n+    @Autowired\n+    private JexlUtil jexlUtil;\n+\n     public void setActions(final SyncJobActions actions) {\n         this.actions = actions;\n     }\n \n     /**\n-     * Extract password value from passed values (if instance of GuardedString\n+     * Extract password value from passed value (if instance of GuardedString\n      * or GuardedByteArray).\n      *\n-     * @param values list of values received from the underlying connector.\n+     * @param pwd received from the underlying connector\n      * @return password value\n      */\n-    private String getPassword(final List<Object> values) {\n+    private String getPassword(final Object pwd) {\n         final StringBuilder result = new StringBuilder();\n \n-        Object pwd;\n-        if (values == null || values.isEmpty()) {\n-            pwd = \"password\";\n-        } else {\n-            pwd = values.iterator().next();\n-        }\n-\n         if (pwd instanceof GuardedString) {\n             ((GuardedString) pwd).access(new GuardedString.Accessor() {\n \n@@ -176,6 +178,53 @@ public void access(final byte[] clearBytes) {\n         return result.toString();\n     }\n \n+    private AttributeTO evaluateAttrTemplate(\n+            final AbstractAttributableTO attributableTO,\n+            final AttributeTO template) {\n+\n+        AttributeTO result = new AttributeTO();\n+        result.setSchema(template.getSchema());\n+\n+        if (template.getValues() != null && !template.getValues().isEmpty()) {\n+            for (String value : template.getValues()) {\n+                String evaluated = jexlUtil.evaluate(value, attributableTO);\n+                if (StringUtils.isNotBlank(evaluated)) {\n+                    result.addValue(evaluated);\n+                }\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    private void fillFromTemplate(final AbstractAttributableTO attributableTO,\n+            final AbstractAttributableTO template) {\n+\n+        Map<String, AttributeTO> currentAttrMap =\n+                attributableTO.getAttributeMap();\n+        for (AttributeTO attrTO : template.getAttributes()) {\n+            if (!currentAttrMap.containsKey(attrTO.getSchema())) {\n+                attributableTO.addAttribute(\n+                        evaluateAttrTemplate(attributableTO, attrTO));\n+            }\n+        }\n+\n+        currentAttrMap = attributableTO.getDerivedAttributeMap();\n+        for (AttributeTO attrTO : template.getDerivedAttributes()) {\n+            if (!currentAttrMap.containsKey(attrTO.getSchema())) {\n+                attributableTO.addDerivedAttribute(attrTO);\n+            }\n+        }\n+\n+        currentAttrMap = attributableTO.getVirtualAttributeMap();\n+        for (AttributeTO attrTO : template.getDerivedAttributes()) {\n+            if (!currentAttrMap.containsKey(attrTO.getSchema())) {\n+                attributableTO.addVirtualAttribute(\n+                        evaluateAttrTemplate(attributableTO, attrTO));\n+            }\n+        }\n+    }\n+\n     /**\n      * Build an UserTO out of connector object attributes and schema mapping.\n      *\n@@ -186,14 +235,8 @@ private UserTO getUserTO(final ConnectorObject obj) {\n         final SyncTask syncTask = (SyncTask) this.task;\n \n         final UserTO userTO = new UserTO();\n-        userTO.setResources(syncTask.getDefaultResourceNames());\n-        MembershipTO membershipTO;\n-        for (Long roleId : syncTask.getDefaultRoleIds()) {\n-            membershipTO = new MembershipTO();\n-            membershipTO.setRoleId(roleId);\n-            userTO.addMembership(membershipTO);\n-        }\n \n+        // 1. fill with data from connector object\n         for (SchemaMapping mapping : syncTask.getResource().getMappings()) {\n             Attribute attribute;\n             if (mapping.isAccountid()) {\n@@ -211,8 +254,12 @@ private UserTO getUserTO(final ConnectorObject obj) {\n                     break;\n \n                 case Password:\n-                    userTO.setPassword(getPassword(attribute == null\n-                            ? Collections.EMPTY_LIST : attribute.getValue()));\n+                    if (attribute != null && attribute.getValue() != null\n+                            && !attribute.getValue().isEmpty()) {\n+\n+                        userTO.setPassword(\n+                                getPassword(attribute.getValue().get(0)));\n+                    }\n                     break;\n \n                 case Username:\n@@ -248,6 +295,54 @@ private UserTO getUserTO(final ConnectorObject obj) {\n             }\n         }\n \n+        // 2. add data from defined template (if any)\n+        UserTO template = syncTask.getUserTemplate();\n+        if (template != null) {\n+            if (StringUtils.isBlank(userTO.getUsername())\n+                    && StringUtils.isNotBlank(template.getUsername())) {\n+\n+                String evaluated =\n+                        jexlUtil.evaluate(template.getUsername(), userTO);\n+                if (StringUtils.isNotBlank(evaluated)) {\n+                    userTO.setUsername(template.getUsername());\n+                }\n+            }\n+\n+            if (StringUtils.isBlank(userTO.getPassword())\n+                    && StringUtils.isNotBlank(template.getPassword())) {\n+\n+                String evaluated =\n+                        jexlUtil.evaluate(template.getPassword(), userTO);\n+                if (StringUtils.isNotBlank(evaluated)) {\n+                    userTO.setPassword(template.getPassword());\n+                }\n+            }\n+\n+            fillFromTemplate(userTO, template);\n+\n+            for (String resource : template.getResources()) {\n+                userTO.addResource(resource);\n+            }\n+\n+            Map<Long, MembershipTO> currentMembs = userTO.getMembershipMap();\n+            for (MembershipTO membTO : template.getMemberships()) {\n+                MembershipTO membTBU;\n+                if (currentMembs.containsKey(membTO.getRoleId())) {\n+                    membTBU = currentMembs.get(membTO.getRoleId());\n+                } else {\n+                    membTBU = new MembershipTO();\n+                    membTBU.setRoleId(membTO.getRoleId());\n+                    userTO.addMembership(membTBU);\n+                }\n+                fillFromTemplate(membTBU, membTO);\n+            }\n+        }\n+\n+        // 3. if password was not set above, generate a random string\n+        if (StringUtils.isBlank(userTO.getPassword())) {\n+            userTO.setPassword(RandomStringUtils.randomAlphanumeric(16));\n+        }\n+\n         return userTO;\n     }\n \n@@ -265,13 +360,6 @@ private UserMod getUserMod(final SyncopeUser user,\n \n         final UserMod userMod = new UserMod();\n         userMod.setId(user.getId());\n-        userMod.setResourcesToBeAdded(syncTask.getDefaultResourceNames());\n-        MembershipMod membershipMod;\n-        for (Long roleId : syncTask.getDefaultRoleIds()) {\n-            membershipMod = new MembershipMod();\n-            membershipMod.setRole(roleId);\n-            userMod.addMembershipToBeAdded(membershipMod);\n-        }\n \n         for (SchemaMapping mapping : syncTask.getResource().getMappings()) {\n             Attribute attribute = obj.getAttributeByName(\n@@ -288,18 +376,22 @@ private UserMod getUserMod(final SyncopeUser user,\n                     attribute = obj.getAttributeByName(\n                             OperationalAttributes.PASSWORD_NAME);\n \n-                    final String password = getPassword(attribute == null\n-                            ? Collections.EMPTY_LIST : attribute.getValue());\n+                    if (attribute != null && attribute.getValue() != null\n+                            && !attribute.getValue().isEmpty()) {\n \n-                    final SyncopeUser passwordUser = new SyncopeUser();\n-                    passwordUser.setPassword(\n-                            password, user.getCipherAlgoritm(), 0);\n+                        String password =\n+                                getPassword(attribute.getValue().get(0));\n+                        SyncopeUser passwordUser = new SyncopeUser();\n+                        passwordUser.setPassword(\n+                                password, user.getCipherAlgoritm(), 0);\n \n-                    // update password if and only if password is really changed\n-                    if (!user.getPassword().equals(\n-                            passwordUser.getPassword())) {\n+                        // update password if and only if password has really \n+                        // changed\n+                        if (!user.getPassword().equals(\n+                                passwordUser.getPassword())) {\n \n-                        userMod.setPassword(password);\n+                            userMod.setPassword(password);\n+                        }\n                     }\n                     break;\n \n@@ -352,15 +444,16 @@ private UserMod getUserMod(final SyncopeUser user,\n      * @return list of matching users\n      */\n     private List<SyncopeUser> findExistingUsers(final SyncDelta delta) {\n+        final SyncTask syncTask = (SyncTask) this.task;\n+\n         final String uid = delta.getPreviousUid() == null\n                 ? delta.getUid().getUidValue()\n                 : delta.getPreviousUid().getUidValue();\n \n         // ---------------------------------\n         // Get sync policy specification\n         // ---------------------------------\n-        final SyncPolicy policy =\n-                ((SyncTask) this.task).getResource().getSyncPolicy();\n+        final SyncPolicy policy = syncTask.getResource().getSyncPolicy();\n \n         final SyncPolicySpec policySpec = policy != null\n                 ? (SyncPolicySpec) policy.getSpecification() : null;\n@@ -378,9 +471,7 @@ private List<SyncopeUser> findExistingUsers(final SyncDelta delta) {\n             final Map<String, Attribute> extValues =\n                     new HashMap<String, Attribute>();\n \n-            for (SchemaMapping mapping :\n-                    ((SyncTask) this.task).getResource().getMappings()) {\n-\n+            for (SchemaMapping mapping : syncTask.getResource().getMappings()) {\n                 String key;\n                 switch (mapping.getIntMappingType()) {\n                     case SyncopeUserId:\n@@ -457,8 +548,8 @@ private List<SyncopeUser> findExistingUsers(final SyncDelta delta) {\n         } else {\n             final SyncopeUser user;\n \n-            final SchemaMapping accountIdMap = ((SyncTask) this.task).\n-                    getResource().getAccountIdMapping();\n+            final SchemaMapping accountIdMap =\n+                    syncTask.getResource().getAccountIdMapping();\n             switch (accountIdMap.getIntMappingType()) {\n                 case Username:\n                     user = userDAO.find(uid);\n@@ -515,7 +606,7 @@ private SyncResult createUser(final SyncDelta delta, final boolean dryRun)\n         } else {\n             try {\n                 WorkflowResult<Map.Entry<Long, Boolean>> created =\n-                        wfAdapter.create(userTO);\n+                        wfAdapter.create(userTO, true);\n                 List<PropagationTask> tasks =\n                         propagationManager.getCreateTaskIds(\n                         created.getResult().getKey(), userTO.getPassword(),\n@@ -561,9 +652,7 @@ private void updateUsers(final SyncDelta delta,\n             final SyncResult result = new SyncResult();\n             result.setOperation(Operation.UPDATE);\n \n-            UserTO userTO = userDataBinder.getUserTO(user.getId());\n-\n-\n+            UserTO userTO = userDataBinder.getUserTO(user);\n             try {\n                 final UserMod userMod = getUserMod(user, delta.getObject());\n                 actions.beforeUpdate(delta, userTO, userMod);\n@@ -615,7 +704,7 @@ private void deleteUsers(final SyncDelta delta,\n         for (SyncopeUser user : users) {\n             Long userId = user.getId();\n \n-            UserTO userTO = userDataBinder.getUserTO(userId);\n+            UserTO userTO = userDataBinder.getUserTO(user);\n             actions.beforeDelete(delta, userTO);\n \n             final SyncResult result = new SyncResult();"},{"sha":"7de63d60a58fa04a12f8c059d74b63482c02ac82","filename":"core/src/main/java/org/syncope/core/util/JexlUtil.java","status":"modified","additions":92,"deletions":83,"changes":175,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FJexlUtil.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -15,7 +15,6 @@\n package org.syncope.core.util;\n \n import java.util.Collection;\n-import java.util.Iterator;\n import java.util.List;\n import org.apache.commons.jexl2.Expression;\n import org.apache.commons.jexl2.JexlContext;\n@@ -25,10 +24,12 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.syncope.client.to.AbstractAttributableTO;\n+import org.syncope.client.to.AttributeTO;\n+import org.syncope.client.to.UserTO;\n import org.syncope.core.persistence.beans.AbstractAttr;\n import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.AbstractDerAttr;\n-import org.syncope.core.persistence.beans.AbstractVirAttr;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n \n /**\n@@ -60,23 +61,24 @@ public boolean isExpressionValid(final String expression) {\n     public String evaluate(final String expression,\n             final JexlContext jexlContext) {\n \n-        String result;\n+        String result = \"\";\n \n         if (expression != null\n                 && !expression.isEmpty() && jexlContext != null) {\n \n             try {\n                 Expression jexlExpression =\n                         jexlEngine.createExpression(expression);\n-                result = jexlExpression.evaluate(jexlContext).toString();\n+                Object evaluated = jexlExpression.evaluate(jexlContext);\n+                if (evaluated != null) {\n+                    result = evaluated.toString();\n+                }\n             } catch (JexlException e) {\n                 LOG.error(\"Invalid jexl expression: \" + expression, e);\n                 result = \"\";\n             }\n-\n         } else {\n             LOG.debug(\"Expression not provided or invalid context\");\n-            result = \"\";\n         }\n \n         return result;\n@@ -88,34 +90,35 @@ public String evaluate(final String expression,\n         final JexlContext jexlContext = new MapContext();\n \n         if (attributable instanceof SyncopeUser) {\n+            SyncopeUser user = (SyncopeUser) attributable;\n+\n             jexlContext.set(\"username\",\n-                    ((SyncopeUser) attributable).getUsername() != null\n-                    ? ((SyncopeUser) attributable).getUsername() : \"\");\n+                    user.getUsername() != null\n+                    ? user.getUsername()\n+                    : \"\");\n             jexlContext.set(\"creationDate\",\n-                    ((SyncopeUser) attributable).getCreationDate() != null\n-                    ? ((SyncopeUser) attributable).getDateFormatter().\n-                    format(((SyncopeUser) attributable).getCreationDate())\n+                    user.getCreationDate() != null\n+                    ? user.getDateFormatter().format(user.getCreationDate())\n                     : \"\");\n             jexlContext.set(\"lastLoginDate\",\n-                    ((SyncopeUser) attributable).getLastLoginDate() != null\n-                    ? ((SyncopeUser) attributable).getDateFormatter().\n-                    format(((SyncopeUser) attributable).getLastLoginDate())\n+                    user.getLastLoginDate() != null\n+                    ? user.getDateFormatter().format(user.getLastLoginDate())\n                     : \"\");\n             jexlContext.set(\"failedLogins\",\n-                    ((SyncopeUser) attributable).getFailedLogins() != null\n-                    ? ((SyncopeUser) attributable).getFailedLogins() : \"\");\n+                    user.getFailedLogins() != null\n+                    ? user.getFailedLogins()\n+                    : \"\");\n             jexlContext.set(\"changePwdDate\",\n-                    ((SyncopeUser) attributable).getChangePwdDate() != null\n-                    ? ((SyncopeUser) attributable).getDateFormatter().\n-                    format(((SyncopeUser) attributable).getChangePwdDate())\n+                    user.getChangePwdDate() != null\n+                    ? user.getDateFormatter().format(user.getChangePwdDate())\n                     : \"\");\n         }\n \n-        addAttributesToContext(\n+        addAttrsToContext(\n                 attributable.getAttributes(),\n                 jexlContext);\n \n-        addDerAttributesToContext(\n+        addDerAttrsToContext(\n                 attributable.getDerivedAttributes(),\n                 attributable.getAttributes(),\n                 jexlContext);\n@@ -124,97 +127,103 @@ public String evaluate(final String expression,\n         return evaluate(expression, jexlContext);\n     }\n \n-    public JexlContext addAttributesToContext(\n+    public JexlContext addAttrsToContext(\n             final Collection<? extends AbstractAttr> attributes,\n-            JexlContext jexlContext) {\n-\n-        if (jexlContext == null) {\n-            jexlContext = new MapContext();\n-        }\n+            final JexlContext jexlContext) {\n \n-        List<String> attributeValues;\n-        String expressionValue;\n-        AbstractAttr attribute;\n-        for (Iterator<? extends AbstractAttr> itor =\n-                attributes.iterator(); itor.hasNext();) {\n+        JexlContext context = jexlContext == null\n+                ? new MapContext() : jexlContext;\n \n-            attribute = itor.next();\n-            attributeValues = attribute.getValuesAsStrings();\n-            if (attributeValues.isEmpty()) {\n-                expressionValue = \"\";\n-            } else {\n-                expressionValue = attributeValues.iterator().next();\n-            }\n+        for (AbstractAttr attribute : attributes) {\n+            List<String> attributeValues = attribute.getValuesAsStrings();\n+            String expressionValue = attributeValues.isEmpty()\n+                    ? \"\" : attributeValues.get(0);\n \n             LOG.debug(\"Add attribute {} with value {}\",\n                     new Object[]{attribute.getSchema().getName(),\n-                        expressionValue\n-                    });\n+                        expressionValue});\n \n-            jexlContext.set(attribute.getSchema().getName(), expressionValue);\n+            context.set(attribute.getSchema().getName(), expressionValue);\n         }\n \n-        return jexlContext;\n+        return context;\n     }\n \n-    public JexlContext addVirAttributesToContext(\n-            final Collection<? extends AbstractVirAttr> attributes,\n-            JexlContext jexlContext) {\n-\n-        if (jexlContext == null) {\n-            jexlContext = new MapContext();\n-        }\n+    public JexlContext addDerAttrsToContext(\n+            final Collection<? extends AbstractDerAttr> derAttributes,\n+            final Collection<? extends AbstractAttr> attributes,\n+            final JexlContext jexlContext) {\n \n-        List<String> attributeValues;\n-        String expressionValue;\n+        JexlContext context = jexlContext == null\n+                ? new MapContext() : jexlContext;\n \n-        for (AbstractVirAttr attribute : attributes) {\n-            attributeValues = attribute.getValues();\n-            if (attributeValues.isEmpty()) {\n+        for (AbstractDerAttr attribute : derAttributes) {\n+            String expressionValue = attribute.getValue(attributes);\n+            if (expressionValue == null) {\n                 expressionValue = \"\";\n-            } else {\n-                expressionValue = attributeValues.iterator().next();\n             }\n \n-            LOG.debug(\"Add virtual attribute {} with value {}\",\n-                    new Object[]{attribute.getVirtualSchema().getName(),\n-                        expressionValue\n-                    });\n+            LOG.debug(\"Add derived attribute {} with value {}\",\n+                    new Object[]{attribute.getDerivedSchema().getName(),\n+                        expressionValue});\n \n-            jexlContext.set(\n-                    attribute.getVirtualSchema().getName(), expressionValue);\n+            context.set(\n+                    attribute.getDerivedSchema().getName(), expressionValue);\n         }\n \n-        return jexlContext;\n+        return context;\n     }\n \n-    public JexlContext addDerAttributesToContext(\n-            final Collection<? extends AbstractDerAttr> derAttributes,\n-            final Collection<? extends AbstractAttr> attributes,\n-            JexlContext jexlContext) {\n+    public String evaluate(final String expression,\n+            final AbstractAttributableTO attributableTO) {\n+\n+        final JexlContext context = new MapContext();\n+\n+        if (attributableTO instanceof UserTO) {\n+            UserTO user = (UserTO) attributableTO;\n \n-        if (jexlContext == null) {\n-            jexlContext = new MapContext();\n+            context.set(\"username\",\n+                    user.getUsername() != null\n+                    ? user.getUsername()\n+                    : \"\");\n+            context.set(\"password\",\n+                    user.getPassword() != null\n+                    ? user.getPassword()\n+                    : \"\");\n         }\n \n-        String expressionValue;\n+        for (AttributeTO attribute : attributableTO.getAttributes()) {\n+            List<String> attributeValues = attribute.getValues();\n+            String expressionValue = attributeValues.isEmpty()\n+                    ? \"\" : attributeValues.get(0);\n \n-        for (AbstractDerAttr attribute : derAttributes) {\n-            expressionValue = attribute.getValue(attributes);\n+            LOG.debug(\"Add attribute {} with value {}\",\n+                    new Object[]{attribute.getSchema(), expressionValue});\n \n-            if (expressionValue == null) {\n-                expressionValue = \"\";\n-            }\n+            context.set(attribute.getSchema(), expressionValue);\n+        }\n+        for (AttributeTO attribute : attributableTO.getDerivedAttributes()) {\n+            List<String> attributeValues = attribute.getValues();\n+            String expressionValue = attributeValues.isEmpty()\n+                    ? \"\" : attributeValues.get(0);\n \n-            LOG.debug(\"Add derived attribute {} with value {}\",\n-                    new Object[]{attribute.getDerivedSchema().getName(),\n-                        expressionValue\n-                    });\n+            LOG.debug(\"Add attribute {} with value {}\",\n+                    new Object[]{attribute.getSchema(), expressionValue});\n \n-            jexlContext.set(\n-                    attribute.getDerivedSchema().getName(), expressionValue);\n+            context.set(attribute.getSchema(), expressionValue);\n         }\n+        for (AttributeTO attribute : attributableTO.getVirtualAttributes()) {\n+            List<String> attributeValues = attribute.getValues();\n+            String expressionValue = attributeValues.isEmpty()\n+                    ? \"\" : attributeValues.get(0);\n \n-        return jexlContext;\n+            LOG.debug(\"Add attribute {} with value {}\",\n+                    new Object[]{attribute.getSchema(), expressionValue});\n+\n+            context.set(attribute.getSchema(), expressionValue);\n+        }\n+\n+        // Evaluate expression using the context prepared before\n+        return evaluate(expression, context);\n     }\n }"},{"sha":"9c634d4d7aec939969513c7596c8ebf2b935d761","filename":"core/src/main/java/org/syncope/core/util/XMLSerializer.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FXMLSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FXMLSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FXMLSerializer.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.util;\n+\n+import com.thoughtworks.xstream.XStream;\n+import java.io.UnsupportedEncodingException;\n+import java.net.URLDecoder;\n+import java.net.URLEncoder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Helper class for serialization and deserialization of configuration objects,\n+ * empowering XStream.\n+ * @see http://xstream.codehaus.org/\n+ */\n+public class XMLSerializer {\n+\n+    private static final Logger LOG =\n+            LoggerFactory.getLogger(XMLSerializer.class);\n+\n+    public static String serialize(final Object object) {\n+        String result = null;\n+\n+        XStream xstream = new XStream();\n+        try {\n+            result = URLEncoder.encode(\n+                    xstream.toXML(object), \"UTF-8\");\n+        } catch (UnsupportedEncodingException e) {\n+            LOG.error(\"During serialization\", e);\n+        }\n+\n+        return result;\n+    }\n+\n+    public static <T extends Object> T deserialize(\n+            final String serialized) {\n+\n+        T result = null;\n+\n+        XStream xstream = new XStream();\n+        try {\n+            result = (T) xstream.fromXML(\n+                    URLDecoder.decode(serialized, \"UTF-8\"));\n+        } catch (UnsupportedEncodingException e) {\n+            LOG.error(\"During deserialization\", e);\n+        }\n+\n+        return result;\n+    }\n+}"},{"sha":"767945e62f84fed630aabfaa05b9e2a4f851aa3b","filename":"core/src/main/java/org/syncope/core/util/XmlSerializer.java","status":"removed","additions":0,"deletions":71,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/58ce60c256bfdbf7c6eefbe3522c3fd52d395b40/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FXmlSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/58ce60c256bfdbf7c6eefbe3522c3fd52d395b40/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FXmlSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FXmlSerializer.java?ref=58ce60c256bfdbf7c6eefbe3522c3fd52d395b40","patch":"@@ -1,71 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.util;\n-\n-import java.beans.XMLDecoder;\n-import java.beans.XMLEncoder;\n-import java.io.ByteArrayInputStream;\n-import java.io.ByteArrayOutputStream;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.io.Serializable;\n-import java.net.URLDecoder;\n-import java.net.URLEncoder;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n- * Helper class for serialization and deserialization of configuration objects.\n- * It uses the JDK XMLEncoder and XMLDecoder.\n- * \n- */\n-public class XmlSerializer {\n-\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(XmlSerializer.class);\n-\n-    public static String serialize(final Serializable object) {\n-        try {\n-            OutputStream os = new ByteArrayOutputStream();\n-            XMLEncoder encoder = new XMLEncoder(os);\n-            encoder.writeObject(object);\n-            encoder.flush();\n-            encoder.close();\n-\n-            return URLEncoder.encode(os.toString(), \"UTF-8\");\n-        } catch (Throwable t) {\n-            LOG.error(\"During serialization\", t);\n-            return null;\n-        }\n-    }\n-\n-    public static <T extends Serializable> T deserialize(\n-            final String serialized) {\n-\n-        try {\n-            InputStream is = new ByteArrayInputStream(\n-                    URLDecoder.decode(serialized, \"UTF-8\").getBytes());\n-\n-            XMLDecoder decoder = new XMLDecoder(is);\n-            T object = (T) decoder.readObject();\n-            decoder.close();\n-            return object;\n-        } catch (Throwable t) {\n-            LOG.error(\"During deserialization\", t);\n-            return null;\n-        }\n-    }\n-}"},{"sha":"918f1d9e2736f1e3792ef52c04ffd467606928c6","filename":"core/src/main/java/org/syncope/core/workflow/AbstractUserWorkflowAdapter.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FAbstractUserWorkflowAdapter.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -14,10 +14,12 @@\n package org.syncope.core.workflow;\n \n import java.util.Map;\n+import java.util.Map.Entry;\n import javassist.NotFoundException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.mod.UserMod;\n+import org.syncope.client.to.UserTO;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.propagation.PropagationByResource;\n@@ -36,6 +38,13 @@\n     @Autowired\n     protected UserDAO userDAO;\n \n+    @Override\n+    public WorkflowResult<Entry<Long, Boolean>> create(final UserTO userTO)\n+            throws UnauthorizedRoleException, WorkflowException {\n+\n+        return create(userTO, false);\n+    }\n+\n     protected abstract WorkflowResult<Long> doActivate(\n             SyncopeUser user, String token)\n             throws WorkflowException;"},{"sha":"46b143cc09139f215a5da2e9d81e2c937a97931a","filename":"core/src/main/java/org/syncope/core/workflow/ActivitiUserWorkflowAdapter.java","status":"modified","additions":23,"deletions":15,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -143,7 +143,8 @@ private Set<String> getPerformedTasks(final SyncopeUser user) {\n     }\n \n     @Override\n-    public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO)\n+    public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO,\n+            final boolean disablePwdPolicyCheck)\n             throws WorkflowException {\n \n         final Map<String, Object> variables = new HashMap<String, Object>();\n@@ -159,6 +160,13 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO)\n \n         SyncopeUser user = (SyncopeUser) runtimeService.getVariable(\n                 processInstance.getProcessInstanceId(), SYNCOPE_USER);\n+\n+        // this will make SyncopeUserValidator not to consider\n+        // password policies at all\n+        if (disablePwdPolicyCheck) {\n+            user.removeClearPassword();\n+        }\n+\n         updateStatus(user);\n         user = userDAO.save(user);\n \n@@ -514,7 +522,7 @@ public WorkflowFormTO getForm(final String workflowId)\n     }\n \n     private Map.Entry<Task, TaskFormData> checkTask(final String taskId,\n-            final String userName)\n+            final String username)\n             throws NotFoundException {\n \n         Task task;\n@@ -531,10 +539,10 @@ private Map.Entry<Task, TaskFormData> checkTask(final String taskId,\n             throw new NotFoundException(\"Form for Activiti Task \" + taskId, e);\n         }\n \n-        if (!adminUser.equals(userName)) {\n-            SyncopeUser user = userDAO.find(userName);\n+        if (!adminUser.equals(username)) {\n+            SyncopeUser user = userDAO.find(username);\n             if (user == null) {\n-                throw new NotFoundException(\"Syncope User \" + userName);\n+                throw new NotFoundException(\"Syncope User \" + username);\n             }\n         }\n \n@@ -543,23 +551,23 @@ private Map.Entry<Task, TaskFormData> checkTask(final String taskId,\n \n     @Override\n     public WorkflowFormTO claimForm(final String taskId,\n-            final String userName)\n+            final String username)\n             throws NotFoundException, WorkflowException {\n \n-        Map.Entry<Task, TaskFormData> checked = checkTask(taskId, userName);\n+        Map.Entry<Task, TaskFormData> checked = checkTask(taskId, username);\n \n-        if (!adminUser.equals(userName)) {\n+        if (!adminUser.equals(username)) {\n             List<Task> tasksForUser = taskService.createTaskQuery().taskId(\n-                    taskId).taskCandidateUser(userName).list();\n+                    taskId).taskCandidateUser(username).list();\n             if (tasksForUser.isEmpty()) {\n                 throw new WorkflowException(new RuntimeException(\n-                        userName + \" is not candidate for task \" + taskId));\n+                        username + \" is not candidate for task \" + taskId));\n             }\n         }\n \n         Task task;\n         try {\n-            taskService.setOwner(taskId, userName);\n+            taskService.setOwner(taskId, username);\n             task = taskService.createTaskQuery().taskId(taskId).singleResult();\n         } catch (ActivitiException e) {\n             throw new WorkflowException(e);\n@@ -569,17 +577,17 @@ public WorkflowFormTO claimForm(final String taskId,\n     }\n \n     @Override\n-    public Long submitForm(final WorkflowFormTO form, final String userName)\n+    public Long submitForm(final WorkflowFormTO form, final String username)\n             throws NotFoundException, WorkflowException {\n \n         Map.Entry<Task, TaskFormData> checked =\n-                checkTask(form.getTaskId(), userName);\n+                checkTask(form.getTaskId(), username);\n \n-        if (!checked.getKey().getOwner().equals(userName)) {\n+        if (!checked.getKey().getOwner().equals(username)) {\n             throw new WorkflowException(new RuntimeException(\n                     \"Task \" + form.getTaskId() + \" assigned to \"\n                     + checked.getKey().getOwner() + \" but submited by \"\n-                    + userName));\n+                    + username));\n         }\n \n         try {"},{"sha":"c464e435c965559a54f35b2baa24f1142a344774","filename":"core/src/main/java/org/syncope/core/workflow/NoOpUserWorkflowAdapter.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -43,11 +43,19 @@ public class NoOpUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n                 \"suspend\", \"reactivate\", \"delete\"});\n \n     @Override\n-    public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO)\n+    public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO,\n+            final boolean disablePwdPolicyCheck)\n             throws WorkflowException {\n \n         SyncopeUser user = new SyncopeUser();\n         dataBinder.create(user, userTO);\n+        \n+        // this will make SyncopeUserValidator not to consider\n+        // password policies at all\n+        if (disablePwdPolicyCheck) {\n+            user.removeClearPassword();\n+        }\n+        \n         user.setStatus(\"created\");\n         user = userDAO.save(user);\n \n@@ -157,15 +165,15 @@ public WorkflowFormTO getForm(final String workflowId)\n     }\n \n     @Override\n-    public WorkflowFormTO claimForm(final String taskId, final String userName)\n+    public WorkflowFormTO claimForm(final String taskId, final String username)\n             throws NotFoundException, WorkflowException {\n \n         throw new WorkflowException(\n                 new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public Long submitForm(final WorkflowFormTO form, final String userName)\n+    public Long submitForm(final WorkflowFormTO form, final String username)\n             throws NotFoundException, WorkflowException {\n \n         throw new WorkflowException("},{"sha":"8a5ef2cdbbe2d03738bc8bc25a6efba850542a2f","filename":"core/src/main/java/org/syncope/core/workflow/UserWorkflowAdapter.java","status":"modified","additions":17,"deletions":4,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserWorkflowAdapter.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -39,6 +39,19 @@ public interface UserWorkflowAdapter {\n      */\n     WorkflowResult<Map.Entry<Long, Boolean>> create(UserTO userTO)\n             throws UnauthorizedRoleException, WorkflowException;\n+    \n+    /**\n+     * Create an user, optionally disabling password policy check.\n+     *\n+     * @param userTO user to be created and wether to propagate it as active\n+     * @param disablePwdPolicyCheck disable password policy check?\n+     * @return user just created\n+     * @throws UnauthorizedRoleException authorization exception\n+     * @throws WorkflowException workflow exception\n+     */\n+    WorkflowResult<Map.Entry<Long, Boolean>> create(UserTO userTO,\n+            boolean disablePwdPolicyCheck)\n+            throws UnauthorizedRoleException, WorkflowException;\n \n     /**\n      * Execute a task on an user.\n@@ -181,23 +194,23 @@ WorkflowFormTO getForm(String workflowId)\n      * Claim a form for a given user.\n      *\n      * @param taskId Workflow task to which the form is associated\n-     * @param userName claiming username\n+     * @param username claiming username\n      * @return updated form\n      * @throws NotFoundException not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    WorkflowFormTO claimForm(String taskId, String userName)\n+    WorkflowFormTO claimForm(String taskId, String username)\n             throws NotFoundException, WorkflowException;\n \n     /**\n      * Submit a form.\n      *\n      * @param form to be submitted\n-     * @param userName submitting username\n+     * @param username submitting username\n      * @return user updated by this form submit\n      * @throws NotFoundException not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    Long submitForm(WorkflowFormTO form, String userName)\n+    Long submitForm(WorkflowFormTO form, String username)\n             throws NotFoundException, WorkflowException;\n }"},{"sha":"7ea52cb0cf520a99497daa4fc1dde41aeb88bf80","filename":"core/src/main/resources/content.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -22,9 +22,9 @@\n     <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"MD5\"/>\n     <SyncopeConf confKey=\"createRequest.allowed\" confValue=\"false\"/>\n     \n-    <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"Global Sync Policy\" type=\"SYNC\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.SyncPolicySpec%22/%3E%0A%3C/java%3E+%0A\"/>\n-    <Policy DTYPE=\"PasswordPolicy\" id=\"2\" description=\"Global Password Policy\" type=\"GLOBAL_PASSWORD\" specification=\"%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%20%0A%3Cjava%20version%3D%221.6.0_26%22%20class%3D%22java.beans.XMLDecoder%22%3E%20%0A%20%3Cobject%20class%3D%22org.syncope.types.PasswordPolicySpec%22%3E%20%20%0A%20%3C%2Fobject%3E%20%0A%3C%2Fjava%3E%20\"/>\n-    <Policy DTYPE=\"AccountPolicy\" id=\"3\" description=\"Global Account Policy\" type=\"GLOBAL_ACCOUNT\" specification=\"%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%20%0A%3Cjava%20version%3D%221.6.0_26%22%20class%3D%22java.beans.XMLDecoder%22%3E%20%0A%20%3Cobject%20class%3D%22org.syncope.types.AccountPolicySpec%22%3E%0A%20%3C%2Fobject%3E%20%0A%3C%2Fjava%3E%20\"/>\n+    <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"Global Sync Policy\" type=\"SYNC\" specification=\"%3Corg.syncope.types.SyncPolicySpec%2F%3E\"/>\n+    <Policy DTYPE=\"PasswordPolicy\" id=\"2\" description=\"Global Password Policy\" type=\"GLOBAL_PASSWORD\" specification=\"%3Corg.syncope.types.PasswordPolicySpec%3E%0A++%3ChistoryLength%3E0%3C%2FhistoryLength%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E0%3C%2FminLength%3E%0A++%3CnonAlphanumericRequired%3Efalse%3C%2FnonAlphanumericRequired%3E%0A++%3CalphanumericRequired%3Efalse%3C%2FalphanumericRequired%3E%0A++%3CdigitRequired%3Efalse%3C%2FdigitRequired%3E%0A++%3ClowercaseRequired%3Efalse%3C%2FlowercaseRequired%3E%0A++%3CuppercaseRequired%3Efalse%3C%2FuppercaseRequired%3E%0A++%3CmustStartWithDigit%3Efalse%3C%2FmustStartWithDigit%3E%0A++%3CmustntStartWithDigit%3Efalse%3C%2FmustntStartWithDigit%3E%0A++%3CmustEndWithDigit%3Efalse%3C%2FmustEndWithDigit%3E%0A++%3CmustntEndWithDigit%3Efalse%3C%2FmustntEndWithDigit%3E%0A++%3CmustStartWithNonAlpha%3Efalse%3C%2FmustStartWithNonAlpha%3E%0A++%3CmustStartWithAlpha%3Efalse%3C%2FmustStartWithAlpha%3E%0A++%3CmustntStartWithNonAlpha%3Efalse%3C%2FmustntStartWithNonAlpha%3E%0A++%3CmustntStartWithAlpha%3Efalse%3C%2FmustntStartWithAlpha%3E%0A++%3CmustEndWithNonAlpha%3Efalse%3C%2FmustEndWithNonAlpha%3E%0A++%3CmustEndWithAlpha%3Efalse%3C%2FmustEndWithAlpha%3E%0A++%3CmustntEndWithNonAlpha%3Efalse%3C%2FmustntEndWithNonAlpha%3E%0A++%3CmustntEndWithAlpha%3Efalse%3C%2FmustntEndWithAlpha%3E%0A%3C%2Forg.syncope.types.PasswordPolicySpec%3E\"/>\n+    <Policy DTYPE=\"AccountPolicy\" id=\"3\" description=\"Global Account Policy\" type=\"GLOBAL_ACCOUNT\" specification=\"%3Corg.syncope.types.AccountPolicySpec%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E0%3C%2FminLength%3E%0A++%3CallUpperCase%3Efalse%3C%2FallUpperCase%3E%0A++%3CallLowerCase%3Efalse%3C%2FallLowerCase%3E%0A++%3CpropagateSuspension%3Efalse%3C%2FpropagateSuspension%3E%0A++%3CpermittedLoginRetries%3E0%3C%2FpermittedLoginRetries%3E%0A%3C%2Forg.syncope.types.AccountPolicySpec%3E\"/>\n     \n     <USchema name=\"surname\" type=\"String\"\n                 mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>"},{"sha":"e396970992045475cc5a14671087688ba33bfa48","filename":"core/src/test/java/org/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -24,6 +24,7 @@\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.client.to.UserTO;\n import org.syncope.core.AbstractTest;\n import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.PropagationTask;\n@@ -94,7 +95,7 @@ public final void saveSyncTask() {\n         assertNotNull(resource);\n \n         SyncTask task = new SyncTask();\n-        task.addDefaultResource(resource);\n+        task.setUserTemplate(new UserTO());\n         task.setCronExpression(\"BLA BLA\");\n \n         // this save() fails because of an invalid Cron Expression"},{"sha":"49e5563bfdb321301327f62958f58d429fddf511","filename":"core/src/test/java/org/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":57,"deletions":11,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -22,6 +22,7 @@\n import org.springframework.http.HttpStatus;\n import org.springframework.web.client.HttpStatusCodeException;\n import org.syncope.client.to.AttributeTO;\n+import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.TaskExecTO;\n import org.syncope.client.to.PropagationTaskTO;\n import org.syncope.client.to.SchedTaskTO;\n@@ -37,8 +38,13 @@ public class TaskTestITCase extends AbstractTest {\n     public final void create() {\n         SyncTaskTO task = new SyncTaskTO();\n         task.setResource(\"ws-target-resource-2\");\n-        task.addDefaultResource(\"ws-target-resource-2\");\n-        task.addDefaultRole(8L);\n+\n+        UserTO template = new UserTO();\n+        template.addResource(\"ws-target-resource-2\");\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(8L);\n+        template.addMembership(membershipTO);\n+        task.setUserTemplate(template);\n \n         SyncTaskTO actual = restTemplate.postForObject(\n                 BASE_URL + \"task/create/sync\",\n@@ -232,30 +238,51 @@ public void sync() {\n         csvuseridTO.setSchema(\"csvuserid\");\n         userTO.addDerivedAttribute(csvuseridTO);\n \n-        userTO.addResource(\"resource-csv\");\n-\n         userTO = restTemplate.postForObject(\n                 BASE_URL + \"user/create\", userTO, UserTO.class);\n-\n         assertNotNull(userTO);\n         //-----------------------------\n \n         Integer usersPre = restTemplate.getForObject(\n                 BASE_URL + \"user/count.json\", Integer.class);\n         assertNotNull(usersPre);\n \n-        // Update sync task by adding custom SyncJob actions\n+        // Update sync task\n         SyncTaskTO task = restTemplate.getForObject(\n                 BASE_URL + \"task/read/{taskId}\", SyncTaskTO.class, 4);\n         assertNotNull(task);\n \n+        //  add custom SyncJob actions\n         task.setJobActionsClassName(TestSyncJobActions.class.getName());\n \n+        //  add user template\n+        UserTO template = new UserTO();\n+\n+        AttributeTO attrTO = new AttributeTO();\n+        attrTO.setSchema(\"type\");\n+        attrTO.addValue(\"email == 'test8@syncope.org'? 'TYPE_8': 'TYPE_OTHER'\");\n+        template.addAttribute(attrTO);\n+\n+        attrTO = new AttributeTO();\n+        attrTO.setSchema(\"cn\");\n+        template.addDerivedAttribute(attrTO);\n+\n+        template.addResource(\"resource-testdb\");\n+\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(8L);\n+        AttributeTO membershipAttr = new AttributeTO();\n+        membershipAttr.setSchema(\"subscriptionDate\");\n+        membershipAttr.addValue(\"'2009-08-18T16:33:12.203+0200'\");\n+        membershipTO.addAttribute(membershipAttr);\n+        template.addMembership(membershipTO);\n+\n+        task.setUserTemplate(template);\n+\n         SyncTaskTO actual = restTemplate.postForObject(\n                 BASE_URL + \"task/update/sync\",\n                 task, SyncTaskTO.class);\n         assertNotNull(actual);\n-\n         assertEquals(task.getId(), actual.getId());\n         assertEquals(TestSyncJobActions.class.getName(),\n                 actual.getJobActionsClassName());\n@@ -266,15 +293,13 @@ public void sync() {\n         assertEquals(\"JOB_FIRED\", execution.getStatus());\n \n         try {\n-            Thread.sleep(5000);\n+            Thread.sleep(10000);\n         } catch (InterruptedException e) {\n         }\n \n         // check for sync policy\n-\n         userTO = restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\",\n                 UserTO.class, userTO.getId());\n-\n         assertNotNull(userTO);\n         assertEquals(\"test9\", userTO.getUsername());\n         assertEquals(\"test9@syncope.org\",\n@@ -284,10 +309,31 @@ public void sync() {\n         assertTrue(Integer.valueOf(userTO.getAttributeMap().\n                 get(\"fullname\").getValues().get(0)) <= 10);\n \n+        // check for user template\n+        userTO = restTemplate.getForObject(\n+                BASE_URL + \"user/read.json?username=test7\",\n+                UserTO.class);\n+        assertNotNull(userTO);\n+        assertEquals(\"TYPE_OTHER\",\n+                userTO.getAttributeMap().get(\"type\").getValues().get(0));\n+        assertEquals(2, userTO.getResources().size());\n+        assertTrue(userTO.getResources().contains(\"resource-testdb\"));\n+        assertTrue(userTO.getResources().contains(\"ws-target-resource-2\"));\n+        assertEquals(1, userTO.getMemberships().size());\n+        assertTrue(userTO.getMemberships().get(0).getAttributeMap().\n+                containsKey(\"subscriptionDate\"));\n+\n+        userTO = restTemplate.getForObject(\n+                BASE_URL + \"user/read.json?username=test8\",\n+                UserTO.class);\n+        assertNotNull(userTO);\n+        assertEquals(\"TYPE_8\",\n+                userTO.getAttributeMap().get(\"type\").getValues().get(0));\n+\n+        // check for sync results\n         Integer usersPost = restTemplate.getForObject(\n                 BASE_URL + \"user/count.json\", Integer.class);\n         assertNotNull(usersPost);\n-\n         assertTrue(\"Expected \" + (usersPre + 9) + \", found \" + usersPost,\n                 usersPost == usersPre + 9);\n     }"},{"sha":"836ba5b9707ba541a5bbac7093eb5cf1719f1895","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -106,7 +106,7 @@ public static UserTO getSampleTO(final String email) {\n         // add a virtual attribute\n         AttributeTO virtualdata = new AttributeTO();\n         virtualdata.setSchema(\"virtualdata\");\n-        virtualdata.setValues(Collections.singletonList(\"virtualvalue\"));\n+        virtualdata.addValue(\"virtualvalue\");\n         userTO.addVirtualAttribute(virtualdata);\n \n         return userTO;\n@@ -644,7 +644,7 @@ public final void createWithReject() {\n \n         // User with role 9 are defined in workflow as subject to approval\n         MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(9);\n+        membershipTO.setRoleId(9L);\n         userTO.addMembership(membershipTO);\n \n         // 1. create user with role 9\n@@ -714,7 +714,7 @@ public final void createWithApproval() {\n \n         // User with role 9 are defined in workflow as subject to approval\n         MembershipTO membershipTO = new MembershipTO();\n-        membershipTO.setRoleId(9);\n+        membershipTO.setRoleId(9L);\n         userTO.addMembership(membershipTO);\n \n         // 1. create user with role 9"},{"sha":"5c0f038ed6f69f46e54c35d145a3564333c987f5","filename":"core/src/test/resources/content.xml","status":"modified","additions":18,"deletions":17,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -23,13 +23,13 @@\n     <SyncopeConf confKey=\"createRequest.allowed\" confValue=\"true\"/>\n \n     <!-- sample policies -->\n-    <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"sync policy 1\" type=\"SYNC\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.SyncPolicySpec%22/%3E%0A%3C/java%3E+%0A\"/>\n-    <Policy DTYPE=\"PasswordPolicy\" id=\"2\" description=\"global password policy\" type=\"GLOBAL_PASSWORD\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.PasswordPolicySpec%22%3E+%0A++%3Cvoid+property%3D%22historyLength%22%3E+%0A+++%3Cint%3E1%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22minLength%22%3E+%0A+++%3Cint%3E8%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22prefixesNotPermitted%22%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted1%3C/string%3E+%0A+++%3C/void%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted2%3C/string%3E+%0A+++%3C/void%3E+%0A++%3C/void%3E+%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n-    <Policy DTYPE=\"SyncPolicy\" id=\"3\" description=\"sync policy 2\" type=\"SYNC\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_29%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.SyncPolicySpec%22%3E+%0A++%3Cvoid+property%3D%22conflictResolutionAction%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConflictResolutionAction%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3EALL%3C/string%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22alternativeSearchAttrs%22%3E%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Eusername%3C/string%3E+%0A+++%3C/void%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Efirstname%3C/string%3E+%0A+++%3C/void%3E+%0A++%3C/void%3E+%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n-    <Policy DTYPE=\"PasswordPolicy\" id=\"4\" description=\"sample password policy\" type=\"PASSWORD\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.PasswordPolicySpec%22%3E+%0A++%3Cvoid+property%3D%22historyLength%22%3E+%0A+++%3Cint%3E0%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22minLength%22%3E+%0A+++%3Cint%3E10%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22prefixesNotPermitted%22%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted1%3C/string%3E+%0A+++%3C/void%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted2%3C/string%3E+%0A+++%3C/void%3E+%0A++%3C/void%3E+%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n-    <Policy DTYPE=\"AccountPolicy\" id=\"5\" description=\"global account policy\" type=\"GLOBAL_ACCOUNT\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.AccountPolicySpec%22%3E%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n-    <Policy DTYPE=\"AccountPolicy\" id=\"6\" description=\"sample account policy\" type=\"ACCOUNT\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.AccountPolicySpec%22%3E+%0A++%3Cvoid+property%3D%22minLength%22%3E+%0A+++%3Cint%3E4%3C/int%3E+%0A++%3C/void%3E%0A++%3Cvoid+property%3D%22permittedLoginRetries%22%3E+%0A+++%3Cint%3E3%3C/int%3E+%0A++%3C/void%3E+%0A++%3Cvoid+property%3D%22prefixesNotPermitted%22%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted1%3C/string%3E+%0A+++%3C/void%3E+%0A+++%3Cvoid+method%3D%22add%22%3E+%0A++++%3Cstring%3Enotpermitted2%3C/string%3E+%0A+++%3C/void%3E+%0A++%3C/void%3E+%0A+%3C/object%3E+%0A%3C/java%3E+\"/>\n-    <Policy DTYPE=\"SyncPolicy\" id=\"7\" description=\"sync policy 1\" type=\"SYNC\" specification=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.types.SyncPolicySpec%22/%3E%0A%3C/java%3E+%0A\"/>\n+    <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"sync policy 1\" type=\"SYNC\" specification=\"%3Corg.syncope.types.SyncPolicySpec%2F%3E\"/>\n+    <Policy DTYPE=\"PasswordPolicy\" id=\"2\" description=\"global password policy\" type=\"GLOBAL_PASSWORD\" specification=\"%3Corg.syncope.types.PasswordPolicySpec%3E%0A++%3ChistoryLength%3E1%3C%2FhistoryLength%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E8%3C%2FminLength%3E%0A++%3CnonAlphanumericRequired%3Efalse%3C%2FnonAlphanumericRequired%3E%0A++%3CalphanumericRequired%3Efalse%3C%2FalphanumericRequired%3E%0A++%3CdigitRequired%3Efalse%3C%2FdigitRequired%3E%0A++%3ClowercaseRequired%3Efalse%3C%2FlowercaseRequired%3E%0A++%3CuppercaseRequired%3Efalse%3C%2FuppercaseRequired%3E%0A++%3CmustStartWithDigit%3Efalse%3C%2FmustStartWithDigit%3E%0A++%3CmustntStartWithDigit%3Efalse%3C%2FmustntStartWithDigit%3E%0A++%3CmustEndWithDigit%3Efalse%3C%2FmustEndWithDigit%3E%0A++%3CmustntEndWithDigit%3Efalse%3C%2FmustntEndWithDigit%3E%0A++%3CmustStartWithNonAlpha%3Efalse%3C%2FmustStartWithNonAlpha%3E%0A++%3CmustStartWithAlpha%3Efalse%3C%2FmustStartWithAlpha%3E%0A++%3CmustntStartWithNonAlpha%3Efalse%3C%2FmustntStartWithNonAlpha%3E%0A++%3CmustntStartWithAlpha%3Efalse%3C%2FmustntStartWithAlpha%3E%0A++%3CmustEndWithNonAlpha%3Efalse%3C%2FmustEndWithNonAlpha%3E%0A++%3CmustEndWithAlpha%3Efalse%3C%2FmustEndWithAlpha%3E%0A++%3CmustntEndWithNonAlpha%3Efalse%3C%2FmustntEndWithNonAlpha%3E%0A++%3CmustntEndWithAlpha%3Efalse%3C%2FmustntEndWithAlpha%3E%0A++%3CprefixesNotPermitted%3E%0A++++%3Cstring%3Enotpermitted1%3C%2Fstring%3E%0A++++%3Cstring%3Enotpermitted2%3C%2Fstring%3E%0A++%3C%2FprefixesNotPermitted%3E%0A%3C%2Forg.syncope.types.PasswordPolicySpec%3E\"/>\n+    <Policy DTYPE=\"SyncPolicy\" id=\"3\" description=\"sync policy 2\" type=\"SYNC\" specification=\"%3Corg.syncope.types.SyncPolicySpec%3E%0A++%3CalternativeSearchAttrs%3E%0A++++%3Cstring%3Eusername%3C%2Fstring%3E%0A++++%3Cstring%3Efirstname%3C%2Fstring%3E%0A++%3C%2FalternativeSearchAttrs%3E%0A++%3CconflictResolutionAction%3EALL%3C%2FconflictResolutionAction%3E%0A%3C%2Forg.syncope.types.SyncPolicySpec%3E\"/>\n+    <Policy DTYPE=\"PasswordPolicy\" id=\"4\" description=\"sample password policy\" type=\"PASSWORD\" specification=\"%3Corg.syncope.types.PasswordPolicySpec%3E%0A++%3ChistoryLength%3E0%3C%2FhistoryLength%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E10%3C%2FminLength%3E%0A++%3CnonAlphanumericRequired%3Efalse%3C%2FnonAlphanumericRequired%3E%0A++%3CalphanumericRequired%3Efalse%3C%2FalphanumericRequired%3E%0A++%3CdigitRequired%3Efalse%3C%2FdigitRequired%3E%0A++%3ClowercaseRequired%3Efalse%3C%2FlowercaseRequired%3E%0A++%3CuppercaseRequired%3Efalse%3C%2FuppercaseRequired%3E%0A++%3CmustStartWithDigit%3Efalse%3C%2FmustStartWithDigit%3E%0A++%3CmustntStartWithDigit%3Efalse%3C%2FmustntStartWithDigit%3E%0A++%3CmustEndWithDigit%3Efalse%3C%2FmustEndWithDigit%3E%0A++%3CmustntEndWithDigit%3Efalse%3C%2FmustntEndWithDigit%3E%0A++%3CmustStartWithNonAlpha%3Efalse%3C%2FmustStartWithNonAlpha%3E%0A++%3CmustStartWithAlpha%3Efalse%3C%2FmustStartWithAlpha%3E%0A++%3CmustntStartWithNonAlpha%3Efalse%3C%2FmustntStartWithNonAlpha%3E%0A++%3CmustntStartWithAlpha%3Efalse%3C%2FmustntStartWithAlpha%3E%0A++%3CmustEndWithNonAlpha%3Efalse%3C%2FmustEndWithNonAlpha%3E%0A++%3CmustEndWithAlpha%3Efalse%3C%2FmustEndWithAlpha%3E%0A++%3CmustntEndWithNonAlpha%3Efalse%3C%2FmustntEndWithNonAlpha%3E%0A++%3CmustntEndWithAlpha%3Efalse%3C%2FmustntEndWithAlpha%3E%0A++%3CprefixesNotPermitted%3E%0A++++%3Cstring%3Enotpermitted1%3C%2Fstring%3E%0A++++%3Cstring%3Enotpermitted2%3C%2Fstring%3E%0A++%3C%2FprefixesNotPermitted%3E%0A%3C%2Forg.syncope.types.PasswordPolicySpec%3E\"/>\n+    <Policy DTYPE=\"AccountPolicy\" id=\"5\" description=\"global account policy\" type=\"GLOBAL_ACCOUNT\" specification=\"%3Corg.syncope.types.AccountPolicySpec%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E0%3C%2FminLength%3E%0A++%3CallUpperCase%3Efalse%3C%2FallUpperCase%3E%0A++%3CallLowerCase%3Efalse%3C%2FallLowerCase%3E%0A++%3CpropagateSuspension%3Efalse%3C%2FpropagateSuspension%3E%0A++%3CpermittedLoginRetries%3E0%3C%2FpermittedLoginRetries%3E%0A%3C%2Forg.syncope.types.AccountPolicySpec%3E\"/>\n+    <Policy DTYPE=\"AccountPolicy\" id=\"6\" description=\"sample account policy\" type=\"ACCOUNT\" specification=\"%3Corg.syncope.types.AccountPolicySpec%3E%0A++%3CmaxLength%3E0%3C%2FmaxLength%3E%0A++%3CminLength%3E4%3C%2FminLength%3E%0A++%3CprefixesNotPermitted%3E%0A++++%3Cstring%3Enotpermitted1%3C%2Fstring%3E%0A++++%3Cstring%3Enotpermitted2%3C%2Fstring%3E%0A++%3C%2FprefixesNotPermitted%3E%0A++%3CallUpperCase%3Efalse%3C%2FallUpperCase%3E%0A++%3CallLowerCase%3Efalse%3C%2FallLowerCase%3E%0A++%3CpropagateSuspension%3Efalse%3C%2FpropagateSuspension%3E%0A++%3CpermittedLoginRetries%3E3%3C%2FpermittedLoginRetries%3E%0A%3C%2Forg.syncope.types.AccountPolicySpec%3E\"/>\n+    <Policy DTYPE=\"SyncPolicy\" id=\"7\" description=\"sync policy 1\" type=\"SYNC\" specification=\"%3Corg.syncope.types.SyncPolicySpec%2F%3E\"/>\n     \n     <SyncopeUser id=\"1\" workflowId=\"0\" status=\"active\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\" cipherAlgorithm=\"MD5\"\n                  username=\"user1\" creationDate=\"2010-10-20 11:00:00\"/>\n@@ -197,7 +197,7 @@\n                        bundleName=\"org.connid.bundles.soap\"\n                        connectorName=\"org.connid.bundles.soap.WebServiceConnector\"\n                        version=\"${connid.soap.version}\"\n-\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwssample%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.connid.bundles.soap.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+\t\t       xmlConfiguration=\"%3Cset%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eendpoint%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwssample%2Fservices%2Fprovisioning%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eservicename%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Eorg.connid.bundles.soap.provisioning.interfaces.Provisioning%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A%3C%2Fset%3E\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"100\" capabilities=\"SYNC_CREATE\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"100\" capabilities=\"SYNC_UPDATE\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"100\" capabilities=\"SYNC_DELETE\"/>\n@@ -210,7 +210,7 @@\n                        bundleName=\"org.connid.bundles.db.table\"\n                        connectorName=\"org.identityconnectors.databasetable.DatabaseTableConnector\"\n                        version=\"${connid.db.table.version}\"\n-                       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Epassword%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Eorg.identityconnectors.common.security.GuardedString%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Esa%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EjdbcDriver%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.h2.Driver%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Etable%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C/boolean%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Etest%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EpasswordColumn%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Epassword%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Euser%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Esa%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EkeyColumn%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C/boolean%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eid%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EjdbcUrlTemplate%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ejdbc%3Ah2%3Atcp%3A//localhost%3A9092/testdb%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EstatusColumn%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Estatus%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EdisabledStatusValue%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Efalse%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EenabledStatusValue%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Etrue%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EdefaultStatusValue%3C/string%3E+%0A++++++%3C/void%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C/string%3E+%0A++++++%3C/void%3E+%0A+++++%3C/object%3E+%0A++++%3C/void%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Etrue%3C/string%3E+%0A++++%3C/void%3E+%0A+++%3C/object%3E+%0A++%3C/void%3E%0A+%3C/object%3E+%0A%3C/java%3E\"/>\n+                       xmlConfiguration=\"%3Cset%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Euser%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Esa%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EenabledStatusValue%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Etrue%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EstatusColumn%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Estatus%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdisabledStatusValue%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Efalse%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EkeyColumn%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Eid%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcUrlTemplate%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Ejdbc%3Ah2%3Atcp%3A%2F%2Flocalhost%3A9092%2Ftestdb%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordColumn%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Epassword%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdefaultStatusValue%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Etrue%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Etable%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Etest%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Epassword%3C%2Fname%3E%0A++++++%3Ctype%3Eorg.identityconnectors.common.security.GuardedString%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Esa%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcDriver%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Eorg.h2.Driver%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A%3C%2Fset%3E%3Cset%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Euser%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Esa%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EenabledStatusValue%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Etrue%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EstatusColumn%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Estatus%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdisabledStatusValue%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Efalse%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EkeyColumn%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Eid%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcUrlTemplate%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Ejdbc%3Ah2%3Atcp%3A%2F%2Flocalhost%3A9092%2Ftestdb%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordColumn%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Epassword%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdefaultStatusValue%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Etrue%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Etable%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Etest%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Epassword%3C%2Fname%3E%0A++++++%3Ctype%3Eorg.identityconnectors.common.security.GuardedString%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Esa%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcDriver%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Eorg.h2.Driver%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A%3C%2Fset%3E\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"SYNC_CREATE\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"SYNC_UPDATE\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"SYNC_DELETE\"/>\n@@ -223,7 +223,7 @@\n                        bundleName=\"org.connid.bundles.soap\"\n                        connectorName=\"org.connid.bundles.soap.WebServiceConnector\"\n                        version=\"${connid.soap.version}\"\n-\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.connid.bundles.soap.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22overridable%22%3E+%0A+++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwssample%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+\t\t       xmlConfiguration=\"%3Cset%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eservicename%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Eorg.connid.bundles.soap.provisioning.interfaces.Provisioning%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eendpoint%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwssample%2Fservices%2Fprovisioning%3C%2Fvalue%3E%0A++++%3Coverridable%3Etrue%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A%3C%2Fset%3E\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"102\" capabilities=\"SYNC_CREATE\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"102\" capabilities=\"SYNC_UPDATE\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"102\" capabilities=\"SYNC_DELETE\"/>\n@@ -236,13 +236,13 @@\n                        bundleName=\"org.connid.bundles.soap\"\n                        connectorName=\"org.connid.bundles.soap.WebServiceConnector\"\n                        version=\"${connid.soap.version}\"\n-\t\t       xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eendpoint%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwssample%2Fservices%2Fprovisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eservicename%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eorg.connid.bundles.soap.provisioning.interfaces.Provisioning%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+\t\t       xmlConfiguration=\"%3Cset%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eendpoint%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Ehttp%3A%2F%2Flocalhost%3A9080%2Fwssample%2Fservices%2Fprovisioning%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eservicename%3C%2Fname%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Eorg.connid.bundles.soap.provisioning.interfaces.Provisioning%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A%3C%2Fset%3E\"/>\n \n     <ConnInstance id=\"104\" displayName=\"CSVDir\"\n                   bundleName=\"org.connid.bundles.csvdir\"\n                   connectorName=\"org.connid.csvdir.CSVDirConnector\"\n                   version=\"${connid.csvdir.version}\"\n-                  xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EfieldDelimiter%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EfieldDelimiter%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EfieldDelimiter%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Echar%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E%2C%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3ESource+path%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EAbsolute+path+of+a+directory+where+are+located+CSV+files+to+be+processed%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EsourcePath%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E%2F${urlencoded.java.io.tmpdir}%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EIgnore+header%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ESpecify+it+first+line+file+must+be+ignored%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EignoreHeader%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.Boolean%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Efalse%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EFile+encoding%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EBasic+encoding+of+the+file%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eencoding%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3Efields%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EColumn+names+separated+by+comma%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Efields%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3E%5BLjava.lang.String%3B%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eid+name+surname+email+password+deleted%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EDelete+column+name%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EName+of+the+column+used+to+specify+users+to+be+deleted%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EdeleteColumnName%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Edeleted%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EKey+separator%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ECharacter+used+to+separate+keys+in+a+multi-key+scenario%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Ekeyseparator%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E%2C%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EKey+column+name%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EName+of+the+column+used+to+identify+user+uniquely%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EkeyColumnNames%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3E%5BLjava.lang.String%3B%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ename+surname%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EText+qualifier%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EDelimiter+to+determine+begin+and+end+of+text+in+value%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EtextQualifier%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Echar%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EPassword+column+name%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EName+of+the+column+used+to+specify+user+password%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EpasswordColumnName%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Epassword%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EFile+mask%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ERegular+expression+describing+files+to+be+processed%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EfileMask%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E.*%5C.csv%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EValue+quotation+required%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ESpecify+if+value+quotation+is+required%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EquotationRequired%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.Boolean%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Efalse%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+                  xmlConfiguration=\"%3Cset%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Ekeyseparator%3C%2Fname%3E%0A++++++%3CdisplayName%3EKey+separator%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ECharacter+used+to+separate+keys+in+a+multi-key+scenario%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3E%2C%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eencoding%3C%2Fname%3E%0A++++++%3CdisplayName%3EFile+encoding%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EBasic+encoding+of+the+file%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EquotationRequired%3C%2Fname%3E%0A++++++%3CdisplayName%3EValue+quotation+required%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ESpecify+if+value+quotation+is+required%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.Boolean%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Efalse%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EfileMask%3C%2Fname%3E%0A++++++%3CdisplayName%3EFile+mask%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ERegular+expression+describing+files+to+be+processed%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3E.*%5C.csv%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordColumnName%3C%2Fname%3E%0A++++++%3CdisplayName%3EPassword+column+name%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EName+of+the+column+used+to+specify+user+password%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Epassword%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EtextQualifier%3C%2Fname%3E%0A++++++%3CdisplayName%3EText+qualifier%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EDelimiter+to+determine+begin+and+end+of+text+in+value%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Echar%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdeleteColumnName%3C%2Fname%3E%0A++++++%3CdisplayName%3EDelete+column+name%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EName+of+the+column+used+to+specify+users+to+be+deleted%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Efalse%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Edeleted%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EsourcePath%3C%2Fname%3E%0A++++++%3CdisplayName%3ESource+path%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EAbsolute+path+of+a+directory+where+are+located+CSV+files+to+be+processed%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3E%2F${urlencoded.java.io.tmpdir}%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EfieldDelimiter%3C%2Fname%3E%0A++++++%3CdisplayName%3EfieldDelimiter%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EfieldDelimiter%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Echar%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3E%2C%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EkeyColumnNames%3C%2Fname%3E%0A++++++%3CdisplayName%3EKey+column+name%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EName+of+the+column+used+to+identify+user+uniquely%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Ename+surname%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EignoreHeader%3C%2Fname%3E%0A++++++%3CdisplayName%3EIgnore+header%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3ESpecify+it+first+line+file+must+be+ignored%3C%2FhelpMessage%3E%0A++++++%3Ctype%3Ejava.lang.Boolean%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Efalse%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A++%3Corg.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Efields%3C%2Fname%3E%0A++++++%3CdisplayName%3Efields%3C%2FdisplayName%3E%0A++++++%3ChelpMessage%3EColumn+names+separated+by+comma%3C%2FhelpMessage%3E%0A++++++%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A++++++%3Crequired%3Etrue%3C%2Frequired%3E%0A++++%3C%2Fschema%3E%0A++++%3Cvalue%3Eid+name+surname+email+password+deleted%3C%2Fvalue%3E%0A++++%3Coverridable%3Efalse%3C%2Foverridable%3E%0A++%3C%2Forg.syncope.types.ConnConfProperty%3E%0A%3C%2Fset%3E\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"104\" capabilities=\"SYNC\"/>\n     \n     <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" propagationMode=\"ASYNC\"\n@@ -264,7 +264,7 @@\n     <ExternalResource name=\"resource-csv\" connector_id=\"104\" forceMandatoryConstraint=\"0\" propagationMode=\"ASYNC\" syncPolicy_id=\"3\"\n                       propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n     <ExternalResource name=\"ws-target-resource-update-resetsynctoken\" connector_id=\"100\" forceMandatoryConstraint=\"1\" propagationMode=\"ASYNC\"\n-                      propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" serializedSyncToken=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%3Cjava+version%3D%221.6.0_24%22+class%3D%22java.beans.XMLDecoder%22%3E%3C%2Fjava%3E\"/>\n+                      propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" serializedSyncToken=\"%3Corg.identityconnectors.framework.common.objects.SyncToken%2F%3E\"/>\n                       \n     <SyncopeUser_ExternalResource users_id=\"3\" externalResources_name=\"ws-target-resource-delete\" />\n     <SyncopeRole_ExternalResource roles_id=\"3\" externalResources_name=\"ws-target-resource-list-mappings-1\" />\n@@ -511,6 +511,7 @@\n     <SyncopeRole_Entitlement entitlements_name=\"USER_READ\" roles_id=\"7\"/>\n     <SyncopeRole_Entitlement entitlements_name=\"USER_LIST\" roles_id=\"7\"/>\n     <SyncopeRole_Entitlement entitlements_name=\"ROLE_8\" roles_id=\"7\"/>\n+    <SyncopeRole_Entitlement entitlements_name=\"ROLE_9\" roles_id=\"7\"/>\n     <SyncopeRole_Entitlement entitlements_name=\"ROLE_7\" roles_id=\"7\"/>\n     <SyncopeRole_Entitlement entitlements_name=\"ROLE_1\" roles_id=\"7\"/>\n     <SyncopeRole_Entitlement entitlements_name=\"WORKFLOW_FORM_CLAIM\" roles_id=\"7\"/>\n@@ -520,11 +521,11 @@\n     <SyncopeRole_Entitlement entitlements_name=\"WORKFLOW_FORM_CLAIM\" roles_id=\"8\"/>\n     \n     <Notification id=\"100\" sender=\"test@syncope-idm.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n-                  xmlAbout=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++%3Cvoid+property%3D%22leftNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25o%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+id%3D%22AttributeCond%24Type0%22+class%3D%22org.syncope.client.search.AttributeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++++%3Cstring%3ELIKE%3C%2Fstring%3E+%0A+++++++%3C%2Fobject%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+id%3D%22NodeCond%24Type0%22+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++%3Cstring%3ELEAF%3C%2Fstring%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22rightNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25i%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+idref%3D%22AttributeCond%24Type0%22%2F%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+idref%3D%22NodeCond%24Type0%22%2F%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22type%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3EAND%3C%2Fstring%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E\"\n-                  xmlRecipients=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++%3Cvoid+property%3D%22membershipCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.MembershipCond%22%3E+%0A++++%3Cvoid+property%3D%22roleId%22%3E+%0A+++++%3Clong%3E7%3C%2Flong%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22type%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3ELEAF%3C%2Fstring%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+                  xmlAbout=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3EAND%3C%2Ftype%3E%0A++%3CleftNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25o%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FleftNodeCond%3E%0A++%3CrightNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25i%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FrightNodeCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\"\n+                  xmlRecipients=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\"/>\n     <Notification id=\"101\" sender=\"test@syncope-idm.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n-                  xmlAbout=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++%3Cvoid+property%3D%22leftNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25o%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+id%3D%22AttributeCond%24Type0%22+class%3D%22org.syncope.client.search.AttributeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++++%3Cstring%3ELIKE%3C%2Fstring%3E+%0A+++++++%3C%2Fobject%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+id%3D%22NodeCond%24Type0%22+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++++%3Cstring%3ELEAF%3C%2Fstring%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22rightNodeCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++++%3Cvoid+property%3D%22attributeCond%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.client.search.AttributeCond%22%3E+%0A++++++%3Cvoid+property%3D%22expression%22%3E+%0A+++++++%3Cstring%3E%25i%25%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++++%3Cstring%3Efullname%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cobject+idref%3D%22AttributeCond%24Type0%22%2F%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22type%22%3E+%0A+++++%3Cobject+idref%3D%22NodeCond%24Type0%22%2F%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22type%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3EAND%3C%2Fstring%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E\"\n-                  xmlRecipients=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22org.syncope.client.search.NodeCond%22%3E+%0A++%3Cvoid+property%3D%22membershipCond%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.MembershipCond%22%3E+%0A++++%3Cvoid+property%3D%22roleId%22%3E+%0A+++++%3Clong%3E7%3C%2Flong%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+property%3D%22type%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.client.search.NodeCond%24Type%22+method%3D%22valueOf%22%3E+%0A++++%3Cstring%3ELEAF%3C%2Fstring%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n+                  xmlAbout=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3EAND%3C%2Ftype%3E%0A++%3CleftNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25o%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FleftNodeCond%3E%0A++%3CrightNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25i%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FrightNodeCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\"\n+                  xmlRecipients=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\"/>\n     <Notification_events Notification_id=\"100\" events=\"unexisting1\"/>\n     <Notification_events Notification_id=\"100\" events=\"unexisting2\"/>\n     <Notification_events Notification_id=\"101\" events=\"unexisting1\"/>"},{"sha":"69a11ebbb54153a17271ebab70f0100af7eadf46","filename":"core/src/test/resources/test.csv","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Ftest%2Fresources%2Ftest.csv","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/core%2Fsrc%2Ftest%2Fresources%2Ftest.csv","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Ftest.csv?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -1,6 +1,6 @@\n test0,nome0,cognome0,test0@syncope.org,password0,false\n test1,nome1,cognome1,test1@syncope.org,password1,false\n-test2,nome2,cognome2,test2@syncope.org,password2,false\n+test2,nome2,cognome2,test2@syncope.org,notpermitted1,false\n test3,nome3,cognome3,test3@syncope.org,password3,false\n test4,nome4,cognome4,test4@syncope.org,password4,false\n test5,nome5,cognome5,test5@syncope.org,password5,false"},{"sha":"19a9dd866d5b6644ae0dd264008a2311e547113b","filename":"pom.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/73f0f9b0a403ec80435377dd304ee40dc25b3f0d/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=73f0f9b0a403ec80435377dd304ee40dc25b3f0d","patch":"@@ -77,7 +77,7 @@\n         \n         <connid.version>1.3.1</connid.version>\n         <connid.soap.version>1.1</connid.soap.version>\n-        <connid.db.table.version>2.0-SNAPSHOT</connid.db.table.version>\n+        <connid.db.table.version>2.0</connid.db.table.version>\n         <connid.csvdir.version>0.1</connid.csvdir.version>\n \n         <commons-jexl.version>2.0.1</commons-jexl.version>\n@@ -87,13 +87,13 @@\n         <javamail-specs.version>1.6</javamail-specs.version>\n         <javamail-provider.version>1.8.2</javamail-provider.version>\n \n-        <cxf.version>2.4.2</cxf.version>\n+        <cxf.version>2.4.4</cxf.version>\n \n         <activiti.version>5.8</activiti.version>\n \n         <spring.version>3.0.6.RELEASE</spring.version>\n-        <jackson.version>1.9.1</jackson.version>\n-        <xstream.version>1.4.1</xstream.version>\n+        <jackson.version>1.9.2</jackson.version>\n+        <xstream.version>1.4.2</xstream.version>\n         <velocity.version>1.7</velocity.version>\n         <quartz.version>1.8.5</quartz.version>\n \n@@ -105,7 +105,7 @@\n \n         <groovy.version>1.8.4</groovy.version>\n \n-        <h2.version>1.3.160</h2.version>\n+        <h2.version>1.3.161</h2.version>\n \n         <reflections.version>0.9.5</reflections.version>\n "}]}