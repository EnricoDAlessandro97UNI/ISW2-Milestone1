{"sha":"f561358688c6ae7892326b522f55c6e36f89519c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY1NjEzNTg2ODhjNmFlNzg5MjMyNmI1MjJmNTVjNmUzNmY4OTUxOWM=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-03-03T15:16:39Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-03-03T15:16:39Z"},"message":"[SYNCOPE-752] Add console test for security questions","tree":{"sha":"0a63d6c9db810f9210c32f6a634614f569c45692","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0a63d6c9db810f9210c32f6a634614f569c45692"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f561358688c6ae7892326b522f55c6e36f89519c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f561358688c6ae7892326b522f55c6e36f89519c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f561358688c6ae7892326b522f55c6e36f89519c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f561358688c6ae7892326b522f55c6e36f89519c/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"936d5422bc6df7a4bb647c4ca91002163c9c50a2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/936d5422bc6df7a4bb647c4ca91002163c9c50a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/936d5422bc6df7a4bb647c4ca91002163c9c50a2"}],"stats":{"total":186,"additions":159,"deletions":27},"files":[{"sha":"b8af0a4aee194dadf8e15bdac6825e35936ea94a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RolesITCase.java","status":"added","additions":122,"deletions":0,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f561358688c6ae7892326b522f55c6e36f89519c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f561358688c6ae7892326b522f55c6e36f89519c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java?ref=f561358688c6ae7892326b522f55c6e36f89519c","patch":"@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.console;\n+\n+import static org.apache.syncope.fit.console.AbstractConsoleITCase.KEY;\n+import static org.junit.Assert.assertNull;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.pages.Roles;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.util.tester.FormTester;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+\n+@FixMethodOrder(MethodSorters.JVM)\n+public class RolesITCase extends AbstractConsoleITCase<String> {\n+\n+    @Before\n+    public void login() {\n+        doLogin(ADMIN_UNAME, ADMIN_PWD);\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:rolesLI:roles\");\n+        wicketTester.assertRenderedPage(Roles.class);\n+    }\n+\n+    @Test\n+    public void read() {\n+        Assert.assertNull(findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n+                + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"OTHER\"));\n+    }\n+\n+    @Test\n+    public void create() {\n+        wicketTester.clickLink(\"body:content:rolesPanel:container:content:add\");\n+\n+        wicketTester.assertComponent(\"body:content:rolesPanel:modal\", Modal.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(\"body:content:rolesPanel:modal:form\");\n+        formTester.setValue(\"content:form:view:key:textField\", \"testRole\");\n+        formTester.submit(\"content:form:buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(\"body:content:rolesPanel:modal:form\");\n+        formTester.setValue(\"content:form:view:entitlements:paletteField:recorder\",\n+                \"WORKFLOW_DEF_READ,NOTIFICATION_UPDATE,RELATIONSHIPTYPE_READ,RELATIONSHIPTYPE_LIST\");\n+        formTester.submit(\"content:form:buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(\"body:content:rolesPanel:modal:form\");\n+        formTester.submit(\"content:form:buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+    }\n+\n+    @Test\n+    public void update() {\n+        Component result = findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n+                + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"testRole\");\n+\n+        wicketTester.assertLabel(\n+                result.getPageRelativePath() + \":cells:1:cell\", \"testRole\");\n+\n+        wicketTester.clickLink(\n+                result.getPageRelativePath() + \":cells:4:cell:panelEdit:editLink\");\n+\n+        FormTester formTester = wicketTester.newFormTester(\"body:content:rolesPanel:modal:form\");\n+        formTester.setValue(\"content:form:view:key:textField\", \"testRole\");\n+        formTester.submit(\"content:form:buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(\"body:content:rolesPanel:modal:form\");\n+        formTester.setValue(\"content:form:view:entitlements:paletteField:recorder\",\n+                \"WORKFLOW_DEF_READ,NOTIFICATION_UPDATE\");\n+        formTester.submit(\"content:form:buttons:next\");\n+\n+        formTester = wicketTester.newFormTester(\"body:content:rolesPanel:modal:form\");\n+        formTester.submit(\"content:form:buttons:finish\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+    }\n+\n+    @Test\n+    public void delete() {\n+        Component result = findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n+                + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"testRole\");\n+\n+        wicketTester.assertLabel(\n+                result.getPageRelativePath() + \":cells:1:cell\", \"testRole\");\n+\n+        wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n+        wicketTester.clickLink(\n+                wicketTester.getComponentFromLastRenderedPage(\n+                        result.getPageRelativePath() + \":cells:4:cell:panelDelete:deleteLink\"));\n+\n+        wicketTester.executeAjaxEvent(wicketTester.getComponentFromLastRenderedPage(\n+                result.getPageRelativePath() + \":cells:3:cell:panelDelete:deleteLink\"), \"onclick\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        assertNull(findComponentByProp(KEY, \"body:content:rolesPanel:container:content:searchContainer:\"\n+                + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"testRole\"));\n+    }\n+\n+}"},{"sha":"02a615faf2083ff5642581b00bb5a740969605bf","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SecurityQuestionsITCase.java","status":"modified","additions":37,"deletions":27,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f561358688c6ae7892326b522f55c6e36f89519c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f561358688c6ae7892326b522f55c6e36f89519c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java?ref=f561358688c6ae7892326b522f55c6e36f89519c","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.fit.console;\n \n-import static org.apache.syncope.fit.console.AbstractConsoleITCase.KEY;\n+import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n@@ -32,7 +32,26 @@\n import org.junit.runners.MethodSorters;\n \n @FixMethodOrder(MethodSorters.JVM)\n-public class SecurityQuestionsITCase extends AbstractConsoleITCase<Long> {\n+public class SecurityQuestionsITCase extends AbstractConsoleITCase<String> {\n+\n+    private void createRealm(final String name) {\n+        wicketTester.clickLink(\"body:content:securityQuestionPanel:container:content:add\");\n+\n+        wicketTester.assertComponent(\n+                \"body:content:securityQuestionPanel:modal\", Modal.class);\n+\n+        FormTester formTester = wicketTester.newFormTester(\"body:content:securityQuestionPanel\"\n+                + \":modal:form\");\n+        formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n+                name);\n+\n+        wicketTester.clickLink(\"body:content:securityQuestionPanel:modal:dialog:footer:inputs:0:submit\");\n+\n+        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n+        wicketTester.cleanupFeedbackMessages();\n+\n+        wicketTester.clickLink(\"body:configurationLI:configurationUL:securityquestionsLI:securityquestions\");\n+    }\n \n     @Before\n     public void login() {\n@@ -57,34 +76,22 @@ public void read() {\n \n     @Test\n     public void create() {\n-        wicketTester.clickLink(\"body:content:securityQuestionPanel:container:content:add\");\n-\n-        wicketTester.assertComponent(\n-                \"body:content:securityQuestionPanel:modal\", Modal.class);\n-\n-        final FormTester formTester = wicketTester.newFormTester(\"body:content:securityQuestionPanel\"\n-                + \":modal:form\");\n-        formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n-                \"What's your favorite team?\");\n-\n-        wicketTester.clickLink(\"body:content:securityQuestionPanel:modal:dialog:footer:inputs:0:submit\");\n-\n-        wicketTester.assertInfoMessages(\"Operation executed successfully\");\n-        wicketTester.cleanupFeedbackMessages();\n+        createRealm(\"What's your favorite team?\");\n     }\n \n     @Test\n     public void update() {\n-        Component result = findComponentByProp(KEY, \"body:content:securityQuestionPanel:container:content:\"\n-                + \"searchContainer:resultTable\", 100L);\n+        createRealm(\"What's your favorite color?\");\n+        Component result = findComponentByProp(\"content\", \"body:content:securityQuestionPanel:container:content:\"\n+                + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n+                \"What's your favorite color?\");\n \n-        wicketTester.assertLabel(\n-                result.getPageRelativePath() + \":cells:1:cell\", \"100\");\n+        assertNotNull(result);\n \n         wicketTester.clickLink(\n                 result.getPageRelativePath() + \":cells:3:cell:panelEdit:editLink\");\n \n-        final FormTester formTester = wicketTester.newFormTester(\"body:content:securityQuestionPanel\"\n+        FormTester formTester = wicketTester.newFormTester(\"body:content:securityQuestionPanel\"\n                 + \":modal:form\");\n         formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n                 \"What's your favorite car?\");\n@@ -97,11 +104,14 @@ public void update() {\n \n     @Test\n     public void delete() {\n-        Component result = findComponentByProp(KEY, \"body:content:securityQuestionPanel:container:content:\"\n-                + \"searchContainer:resultTable:\", 100L);\n+        String name = \"What's your favorite color?\";\n+        createRealm(name);\n \n-        wicketTester.assertLabel(\n-                result.getPageRelativePath() + \":cells:1:cell\", \"100\");\n+        Component result = findComponentByProp(\"content\", \"body:content:securityQuestionPanel:container:content:\"\n+                + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n+                name);\n+\n+        assertNotNull(result);\n \n         wicketTester.getRequest().addParameter(\"confirm\", \"true\");\n         wicketTester.clickLink(\n@@ -114,9 +124,9 @@ public void delete() {\n         wicketTester.assertInfoMessages(\"Operation executed successfully\");\n         wicketTester.cleanupFeedbackMessages();\n \n-        assertNull(findComponentByProp(KEY,\n+        assertNull(findComponentByProp(\"content\",\n                 \"body:content:securityQuestionPanel:container:content:\"\n                 + \"searchContainer:resultTable:\"\n-                + \"tablePanel:groupForm:checkgroup:dataTable\", 100L));\n+                + \"tablePanel:groupForm:checkgroup:dataTable\", name));\n     }\n }"}]}