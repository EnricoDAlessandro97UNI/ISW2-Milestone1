{"sha":"44cbf349ad92ecc7059186ceaf47e01a666b055c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ0Y2JmMzQ5YWQ5MmVjYzcwNTkxODZjZWFmNDdlMDFhNjY2YjA1NWM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-09-24T12:49:23Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-09-24T12:49:23Z"},"message":"[SYNCOPE-697] No more PHASES","tree":{"sha":"f6ed2dd3bf89085782bfac9f86dd0cb5973175af","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f6ed2dd3bf89085782bfac9f86dd0cb5973175af"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/44cbf349ad92ecc7059186ceaf47e01a666b055c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/44cbf349ad92ecc7059186ceaf47e01a666b055c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/44cbf349ad92ecc7059186ceaf47e01a666b055c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/44cbf349ad92ecc7059186ceaf47e01a666b055c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c14a20d7422805fe5b93e40915722e3e9474ddd2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c14a20d7422805fe5b93e40915722e3e9474ddd2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c14a20d7422805fe5b93e40915722e3e9474ddd2"}],"stats":{"total":566,"additions":137,"deletions":429},"files":[{"sha":"59ab76f16abbe92ed014c806a1d1ea436ec6b720","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -94,12 +93,6 @@ public ResourceDetailsPanel(final String id, final ResourceTO resourceTO, final\n                 new PropertyModel<Integer>(resourceTO, \"propagationPriority\"), null, null);\n         add(propagationPriority);\n \n-        final AjaxDropDownChoicePanel<PropagationMode> propagationMode = new AjaxDropDownChoicePanel<>(\n-                \"propagationMode\", new ResourceModel(\"propagationMode\", \"propagationMode\").getObject(),\n-                new PropertyModel<PropagationMode>(resourceTO, \"propagationMode\"));\n-        propagationMode.setChoices(Arrays.asList(PropagationMode.values()));\n-        add(propagationMode);\n-\n         final AjaxCheckBoxPanel randomPwdIfNotProvided = new AjaxCheckBoxPanel(\"randomPwdIfNotProvided\",\n                 new ResourceModel(\"randomPwdIfNotProvided\", \"randomPwdIfNotProvided\").getObject(),\n                 new PropertyModel<Boolean>(resourceTO, \"randomPwdIfNotProvided\"));"},{"sha":"7d518ceed2a45734f14dc5471dd00f2ca725385b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceDetailsPanel.html","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.html?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -64,15 +64,6 @@\n         </div>\n       </div>\n \n-      <div class=\"tablerow\">\n-        <div class=\"tablecolumn_label medium_fixedsize\">\n-          <label for=\"propagationMode\"><wicket:message key=\"propagationMode\"/></label>\n-        </div>\n-        <div class=\"tablecolumn_field medium_dynamicsize\">\n-          <span wicket:id=\"propagationMode\">[propagationMode]</span>\n-        </div>\n-      </div>\n-\n       <div class=\"tablerow alt\">\n         <div class=\"tablecolumn_label medium_fixedsize\">\n           <label for=\"randomPwdIfNotProvided\"><wicket:message key=\"randomPwdIfNotProvided\"/></label>"},{"sha":"1b1d556cf9cd201ae808f075c2073bf9aa71dca7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PropagationTaskTO.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -21,7 +21,6 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n \n @XmlRootElement(name = \"propagationTask\")\n@@ -30,8 +29,6 @@ public class PropagationTaskTO extends AbstractTaskTO {\n \n     private static final long serialVersionUID = 386450127003321197L;\n \n-    private PropagationMode mode;\n-\n     private ResourceOperation operation;\n \n     private String connObjectKey;\n@@ -64,14 +61,6 @@ public void setOldConnObjectKey(final String oldConnObjectKey) {\n         this.oldConnObjectKey = oldConnObjectKey;\n     }\n \n-    public PropagationMode getMode() {\n-        return mode;\n-    }\n-\n-    public void setPropagationMode(final PropagationMode mode) {\n-        this.mode = mode;\n-    }\n-\n     public String getResource() {\n         return resource;\n     }"},{"sha":"419b8520d706d5ed43feccf6d6dbfd522201795b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":5,"deletions":28,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -32,7 +32,6 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n @XmlRootElement(name = \"resource\")\n@@ -57,21 +56,19 @@ public class ResourceTO extends AbstractAnnotatedBean {\n \n     private boolean propagationPrimary;\n \n-    private int propagationPriority;\n+    private int propagationPriority = 0;\n \n     private boolean randomPwdIfNotProvided;\n \n-    private PropagationMode propagationMode;\n-\n     private boolean enforceMandatoryCondition;\n \n-    private TraceLevel createTraceLevel;\n+    private TraceLevel createTraceLevel = TraceLevel.ALL;\n \n-    private TraceLevel updateTraceLevel;\n+    private TraceLevel updateTraceLevel = TraceLevel.ALL;\n \n-    private TraceLevel deleteTraceLevel;\n+    private TraceLevel deleteTraceLevel = TraceLevel.ALL;\n \n-    private TraceLevel syncTraceLevel;\n+    private TraceLevel syncTraceLevel = TraceLevel.ALL;\n \n     private Long passwordPolicy;\n \n@@ -83,18 +80,6 @@ public class ResourceTO extends AbstractAnnotatedBean {\n \n     private final List<String> propagationActionsClassNames = new ArrayList<>();\n \n-    public ResourceTO() {\n-        super();\n-\n-        propagationMode = PropagationMode.TWO_PHASES;\n-        propagationPriority = 0;\n-\n-        createTraceLevel = TraceLevel.ALL;\n-        updateTraceLevel = TraceLevel.ALL;\n-        deleteTraceLevel = TraceLevel.ALL;\n-        syncTraceLevel = TraceLevel.ALL;\n-    }\n-\n     public String getKey() {\n         return key;\n     }\n@@ -152,14 +137,6 @@ public void setRandomPwdIfNotProvided(final boolean randomPwdIfNotProvided) {\n         this.randomPwdIfNotProvided = randomPwdIfNotProvided;\n     }\n \n-    public PropagationMode getPropagationMode() {\n-        return propagationMode;\n-    }\n-\n-    public void setPropagationMode(final PropagationMode propagationMode) {\n-        this.propagationMode = propagationMode;\n-    }\n-\n     public TraceLevel getCreateTraceLevel() {\n         return createTraceLevel;\n     }"},{"sha":"41b1e4a27ff16d7ea2aa6464178c2fff7354d215","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ConnectorCapability.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -27,12 +27,9 @@\n public enum ConnectorCapability {\n \n     AUTHENTICATE,\n-    ONE_PHASE_CREATE,\n-    TWO_PHASES_CREATE,\n-    ONE_PHASE_UPDATE,\n-    TWO_PHASES_UPDATE,\n-    ONE_PHASE_DELETE,\n-    TWO_PHASES_DELETE,\n+    CREATE,\n+    UPDATE,\n+    DELETE,\n     SEARCH,\n     SYNC;\n "},{"sha":"8b10bc8d90cfac34932a161f04ae59b777abbe6c","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/PropagationMode.java","status":"removed","additions":0,"deletions":29,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c14a20d7422805fe5b93e40915722e3e9474ddd2/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationMode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c14a20d7422805fe5b93e40915722e3e9474ddd2/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationMode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationMode.java?ref=c14a20d7422805fe5b93e40915722e3e9474ddd2","patch":"@@ -1,29 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib.types;\n-\n-import javax.xml.bind.annotation.XmlEnum;\n-\n-@XmlEnum\n-public enum PropagationMode {\n-\n-    ONE_PHASE,\n-    TWO_PHASES\n-\n-}"},{"sha":"c676c3b52b2bed20d69315caac2982f1b21318e8","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/PropagationTaskExecStatus.java","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationTaskExecStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationTaskExecStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationTaskExecStatus.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -22,26 +22,12 @@\n \n /**\n  * Status of a propagation task execution.\n- *\n- * CREATED -&gt; SUBMITTED or UBSUBMITTED (depending on the external resource to\n- * return success or failure).\n- * SUBMITTED -&gt; SUCCESS or FAILURE (depending on the external resource to\n- * report success or failure).\n  */\n @XmlEnum\n public enum PropagationTaskExecStatus {\n \n     CREATED,\n-    SUBMITTED,\n-    UNSUBMITTED,\n     SUCCESS,\n     FAILURE;\n \n-    public boolean isSuccessful() {\n-        return this == SUCCESS || this == SUBMITTED;\n-    }\n-\n-    public static PropagationTaskExecStatus fromString(final String value) {\n-        return PropagationTaskExecStatus.valueOf(value.toUpperCase());\n-    }\n }"},{"sha":"d8814d3d69e761d708590c93c3fcdb5d39a5989b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -38,7 +38,6 @@\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n-import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.types.JobAction;\n@@ -141,17 +140,6 @@ <T extends AbstractTaskTO> PagedResult<T> list(\n     TaskExecTO execute(@NotNull @PathParam(\"key\") Long key,\n             @QueryParam(\"dryRun\") @DefaultValue(\"false\") boolean dryRun);\n \n-    /**\n-     * Reports task execution result.\n-     *\n-     * @param executionKey key of task execution being reported\n-     * @param reportExec execution being reported\n-     */\n-    @POST\n-    @Path(\"executions/{executionKey}/report\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void report(@NotNull @PathParam(\"executionKey\") Long executionKey, @NotNull ReportExecTO reportExec);\n-\n     /**\n      * Executes the provided bulk action.\n      *"},{"sha":"3c9647e028897efee86fad3463a9550d91a0971f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":0,"deletions":44,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -37,8 +37,6 @@\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.lib.types.JobStatusType;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n-import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n@@ -247,48 +245,6 @@ public TaskExecTO execute(final Long taskKey, final boolean dryRun) {\n         return result;\n     }\n \n-    @PreAuthorize(\"hasRole('\" + Entitlement.TASK_READ + \"')\")\n-    public TaskExecTO report(final Long execKey, final PropagationTaskExecStatus status, final String message) {\n-        TaskExec exec = taskExecDAO.find(execKey);\n-        if (exec == null) {\n-            throw new NotFoundException(\"Task execution \" + execKey);\n-        }\n-\n-        SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPropagationTaskExecReport);\n-\n-        TaskUtils taskUtils = taskUtilsFactory.getInstance(exec.getTask());\n-        if (TaskType.PROPAGATION == taskUtils.getType()) {\n-            PropagationTask task = (PropagationTask) exec.getTask();\n-            if (task.getMode() != PropagationMode.TWO_PHASES) {\n-                sce.getElements().add(\"Propagation mode: \" + task.getMode());\n-            }\n-        } else {\n-            sce.getElements().add(\"Task type: \" + taskUtils);\n-        }\n-\n-        switch (status) {\n-            case SUCCESS:\n-            case FAILURE:\n-                break;\n-\n-            case CREATED:\n-            case SUBMITTED:\n-            case UNSUBMITTED:\n-                sce.getElements().add(\"Execution status to be set: \" + status);\n-                break;\n-\n-            default:\n-        }\n-\n-        if (!sce.isEmpty()) {\n-            throw sce;\n-        }\n-\n-        exec.setStatus(status.toString());\n-        exec.setMessage(message);\n-        return binder.getTaskExecTO(taskExecDAO.save(exec));\n-    }\n-\n     @PreAuthorize(\"hasRole('\" + Entitlement.TASK_DELETE + \"')\")\n     public <T extends AbstractTaskTO> T delete(final Long taskKey) {\n         Task task = taskDAO.find(taskKey);"},{"sha":"26aa9a13c507fca0cc189d86df9f5b05811b54fd","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/ExternalResource.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.AnnotatedEntity;\n@@ -73,10 +72,6 @@ public interface ExternalResource extends AnnotatedEntity<String> {\n \n     List<String> getPropagationActionsClassNames();\n \n-    PropagationMode getPropagationMode();\n-\n-    void setPropagationMode(PropagationMode propagationMode);\n-\n     Integer getPropagationPriority();\n \n     void setPropagationPriority(Integer priority);"},{"sha":"db9e5a3a1f1dd2fe5f1217a0b1aed49e6b73a54a","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PropagationTask.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -20,7 +20,6 @@\n \n import java.util.Set;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -43,10 +42,6 @@ public interface PropagationTask extends Task {\n \n     void setObjectClassName(String objectClassName);\n \n-    PropagationMode getMode();\n-\n-    void setMode(PropagationMode mode);\n-\n     ResourceOperation getOperation();\n \n     void setOperation(ResourceOperation operation);"},{"sha":"e9e59fd39040e98fbdb08599d4882def9759a984","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAExternalResource.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -44,7 +44,6 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n@@ -123,10 +122,6 @@ public class JPAExternalResource extends AbstractAnnotatedEntity<String> impleme\n     @Max(1)\n     private Integer randomPwdIfNotProvided;\n \n-    @Enumerated(EnumType.STRING)\n-    @Column(nullable = false)\n-    private PropagationMode propagationMode;\n-\n     @Enumerated(EnumType.STRING)\n     @Column(nullable = false)\n     private TraceLevel createTraceLevel;\n@@ -178,7 +173,6 @@ public JPAExternalResource() {\n         propagationPrimary = 0;\n         propagationPriority = 0;\n         randomPwdIfNotProvided = 0;\n-        propagationMode = PropagationMode.TWO_PHASES;\n \n         createTraceLevel = TraceLevel.FAILURES;\n         updateTraceLevel = TraceLevel.FAILURES;\n@@ -278,16 +272,6 @@ public void setRandomPwdIfNotProvided(final boolean randomPwdIfNotProvided) {\n         this.randomPwdIfNotProvided = getBooleanAsInteger(randomPwdIfNotProvided);\n     }\n \n-    @Override\n-    public PropagationMode getPropagationMode() {\n-        return propagationMode;\n-    }\n-\n-    @Override\n-    public void setPropagationMode(final PropagationMode propagationMode) {\n-        this.propagationMode = propagationMode;\n-    }\n-\n     @Override\n     public String getKey() {\n         return name;"},{"sha":"2bdd0f3648a2b5a16cd591859a99a5e2afa3952c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPropagationTask.java","status":"modified","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTask.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -29,7 +29,6 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n@@ -49,12 +48,6 @@ public class JPAPropagationTask extends AbstractTask implements PropagationTask\n \n     private static final long serialVersionUID = 7086054884614511210L;\n \n-    /**\n-     * @see PropagationMode\n-     */\n-    @Enumerated(EnumType.STRING)\n-    private PropagationMode mode;\n-\n     /**\n      * @see ResourceOperation\n      */\n@@ -132,18 +125,6 @@ public void setAttributes(final Set<Attribute> attributes) {\n \n     @Override\n \n-    public PropagationMode getMode() {\n-        return mode;\n-    }\n-\n-    @Override\n-\n-    public void setMode(final PropagationMode mode) {\n-        this.mode = mode;\n-    }\n-\n-    @Override\n-\n     public ResourceOperation getOperation() {\n         return operation;\n     }"},{"sha":"6c8a9495dbe2856a2d3612ed496b628d53953137","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PropagationTaskValidator.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPropagationTaskValidator.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -35,8 +35,7 @@ public boolean isValid(final PropagationTask task, final ConstraintValidatorCont\n         if (task == null) {\n             isValid = true;\n         } else {\n-            isValid = task.getMode() != null\n-                    && task.getOperation() != null\n+            isValid = task.getOperation() != null\n                     && !task.getAttributes().isEmpty()\n                     && task.getResource() != null;\n "},{"sha":"7377475aba2c0dc04e5feee0121974bb2a321c02","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/TaskTest.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -29,7 +29,6 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n@@ -114,7 +113,6 @@ public void savePropagationTask() {\n         PropagationTask task = entityFactory.newEntity(PropagationTask.class);\n         task.setResource(resource);\n         task.setAnyTypeKind(AnyTypeKind.USER);\n-        task.setMode(PropagationMode.TWO_PHASES);\n         task.setOperation(ResourceOperation.CREATE);\n         task.setConnObjectKey(\"one@two.com\");\n "},{"sha":"2b3d6c7655b66198e4ce4bcf52706484ce93affd","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/TaskTest.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -31,7 +31,6 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.MatchingRule;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.TaskType;\n@@ -93,7 +92,6 @@ public void save() {\n         PropagationTask task = entityFactory.newEntity(PropagationTask.class);\n         task.setResource(resource);\n         task.setAnyTypeKind(AnyTypeKind.USER);\n-        task.setMode(PropagationMode.TWO_PHASES);\n         task.setOperation(ResourceOperation.CREATE);\n         task.setConnObjectKey(\"one@two.com\");\n "},{"sha":"7ee800273a0908929f4f2bfa4bcea998c087bac1","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":47,"deletions":62,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -493,12 +493,9 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.soap.WebServiceConnector\"\n                 version=\"${connid.soap.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"endpoint\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"http://localhost:${cargo.servlet.port}/wssample/services/provisioning\"]},{\"schema\":{\"name\":\"servicename\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.soap.provisioning.interfaces.Provisioning\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"TWO_PHASES_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"TWO_PHASES_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"SEARCH\"/>\n \n   <ConnInstance id=\"101\" displayName=\"H2\"\n@@ -508,12 +505,9 @@ under the License.\n                 version=\"${connid.database.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":null,\"helpMessage\":null,\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA1\"]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"password\"]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"table\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"test\"]},{\"schema\":{\"name\":\"password\",\"displayName\":null,\"helpMessage\":null,\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"status\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]}]'/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"AUTHENTICATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"TWO_PHASES_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"TWO_PHASES_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"SYNC\"/>\n \n@@ -524,12 +518,9 @@ under the License.\n                 version=\"${connid.soap.version}\"\n                 connRequestTimeout=\"10\"\n                 jsonConf='[{\"schema\":{\"name\":\"servicename\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.soap.provisioning.interfaces.Provisioning\"]},{\"schema\":{\"name\":\"endpoint\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":true,\"values\":[\"http://localhost:${cargo.servlet.port}/wssample/services/provisioning\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"TWO_PHASES_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"TWO_PHASES_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"SEARCH\"/>\n \n   <ConnInstance id=\"103\" displayName=\"ConnInstance103\"\n@@ -545,12 +536,9 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.csvdir.CSVDirConnector\"\n                 version=\"${connid.csvdir.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"fields\",\"displayName\":\"fields\",\"helpMessage\":\"Column names separated by comma\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\",\"name\",\"surname\",\"email\",\"password\",\"theirgroup\",\"membership\",\"status\",\"deleted\"]},{\"schema\":{\"name\":\"keyColumnNames\",\"displayName\":\"Key column name\",\"helpMessage\":\"Name of the column used to identify user uniquely\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"name\",\"surname\"]},{\"schema\":{\"name\":\"deleteColumnName\",\"displayName\":\"Delete column name\",\"helpMessage\":\"Name of the column used to specify users to be deleted\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"deleted\"]},{\"schema\":{\"name\":\"passwordColumnName\",\"displayName\":\"Password column name\",\"helpMessage\":\"Name of the column used to specify user password\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"password\"]},{\"schema\":{\"name\":\"keyseparator\",\"displayName\":\"Key separator\",\"helpMessage\":\"Character used to separate keys in a multi-key scenario\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\",\"]},{\"schema\":{\"name\":\"ignoreHeader\",\"displayName\":\"Ignore header\",\"helpMessage\":\"Specify it first line file must be ignored\",\"type\":\"java.lang.Boolean\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[false]},{\"schema\":{\"name\":\"fieldDelimiter\",\"displayName\":\"fieldDelimiter\",\"helpMessage\":\"fieldDelimiter\",\"type\":\"char\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\",\"]},{\"schema\":{\"name\":\"quotationRequired\",\"displayName\":\"Value quotation required\",\"helpMessage\":\"Specify if value quotation is required\",\"type\":\"java.lang.Boolean\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[false]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":\"statusColumn\",\"helpMessage\":\"Status column\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"status\"]},{\"schema\":{\"name\":\"sourcePath\",\"displayName\":\"Source path\",\"helpMessage\":\"Absolute path of a directory where are located CSV files to be processed\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${test.csvdir.path}\"]},{\"schema\":{\"name\":\"fileMask\",\"displayName\":\"File mask\",\"helpMessage\":\"Regular expression describing files to be processed\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"test.csv\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"TWO_PHASES_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"TWO_PHASES_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"SYNC\"/>\n     \n@@ -559,9 +547,9 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.ldap.LdapConnector\"\n                 version=\"${connid.ldap.version}\" \n                 jsonConf='[{\"schema\":{\"name\":\"synchronizePasswords\",\"displayName\":\"Enable Password Synchronization\",\"helpMessage\":\"If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"displayName\":\"Maintain LDAP Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"The name or IP address of the host where the LDAP server is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"localhost\"]},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"displayName\":\"Password Hash Algorithm\",\"helpMessage\":\"Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SSHA1, and SHA1. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA\"]},{\"schema\":{\"name\":\"port\",\"displayName\":\"TCP Port\",\"helpMessage\":\"TCP/IP port number used to communicate with the LDAP server.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[1389]},{\"schema\":{\"name\":\"vlvSortAttribute\",\"displayName\":\"VLV Sort Attribute\",\"helpMessage\":\"Specify the sort attribute to use for VLV indexes on the resource.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusManagementClass\",\"displayName\":\"Status management class \",\"helpMessage\":\"Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"]},{\"schema\":{\"name\":\"accountObjectClasses\",\"displayName\":\"Account Object Classes\",\"helpMessage\":\"The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\"]},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"displayName\":\"Account User Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the account user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid\"]},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"displayName\":\"Base Contexts to Synchronize\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"displayName\":\"LDAP Filter for Accounts to Synchronize\",\"helpMessage\":\"An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"displayName\":\"Remove Log Entry Object Class from Filter\",\"helpMessage\":\"If this property is set (the default), the filter used to fetch change log entries does not contain the \\\"changeLogEntry\\\" object class, expecting that there are no entries of other object types in the change log.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"displayName\":\"Password Decryption Key\",\"helpMessage\":\"The key to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"readSchema\",\"displayName\":\"Read Schema\",\"helpMessage\":\"If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"ssl\",\"displayName\":\"SSL\",\"helpMessage\":\"Select the check box to connect to the LDAP server using SSL.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"displayName\":\"Password Attribute to Synchronize\",\"helpMessage\":\"The name of the password attribute to synchronize when performing password synchronization.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"accountSearchFilter\",\"displayName\":\"LDAP Filter for Retrieving Accounts\",\"helpMessage\":\"An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=*\"]},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"displayName\":\"Password Decryption Initialization Vector\",\"helpMessage\":\"The initialization vector to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupMemberAttribute\",\"displayName\":\"Group Member Attribute\",\"helpMessage\":\"The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"failover\",\"displayName\":\"Failover Servers\",\"helpMessage\":\"List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \\\"ldap://ldap.example.com:389/\\\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"displayName\":\"Filter Out Changes By\",\"helpMessage\":\"The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \\\"modifiersName\\\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \\\"cn=Directory Manager\\\".\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupNameAttributes\",\"displayName\":\"Group Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the group name.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"displayName\":\"Respect Resource Password Policy Change-After-Reset\",\"helpMessage\":\"When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"displayName\":\"Filter with Or Instead of And\",\"helpMessage\":\"Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"principal\",\"displayName\":\"Principal\",\"helpMessage\":\"The distinguished name with which to authenticate to the LDAP server.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=admin,ou=system\"]},{\"schema\":{\"name\":\"changeLogBlockSize\",\"displayName\":\"Change Log Block Size\",\"helpMessage\":\"The number of change log entries to fetch per query.\",\"type\":\"int\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[100]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"passwordAttribute\",\"displayName\":\"Password Attribute\",\"helpMessage\":\"The name of the LDAP attribute which holds the password. When changing an user password, the new password is set to this attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"userpassword\"]},{\"schema\":{\"name\":\"changeNumberAttribute\",\"displayName\":\"Change Number Attribute\",\"helpMessage\":\"The name of the change number attribute in the change log entry.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"changeNumber\"]},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"displayName\":\"Object Classes to Synchronize\",\"helpMessage\":\"The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \\\"inetOrgPerson\\\" objects should be synchronized, but the superclasses of \\\"inetOrgPerson\\\" (\\\"person\\\", \\\"organizationalperson\\\" and \\\"top\\\") should be filtered out, then list only \\\"inetOrgPerson\\\" here. All objects in LDAP are subclassed from \\\"top\\\". For this reason, you should never list \\\"top\\\", otherwise no object would be filtered.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"]},{\"schema\":{\"name\":\"credentials\",\"displayName\":\"Password\",\"helpMessage\":\"Password for the principal.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"secret\"]},{\"schema\":{\"name\":\"attributesToSynchronize\",\"displayName\":\"Attributes to Synchronize\",\"helpMessage\":\"The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \\\"department\\\" is listed, then only changes that affect \\\"department\\\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"displayName\":\"Maintain POSIX Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"ONE_PHASE_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"SEARCH\"/>\n   \n   <ConnInstance id=\"106\" displayName=\"H2-test2\"\n@@ -570,8 +558,8 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.db.table.DatabaseTableConnector\"\n                 version=\"${connid.database.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA1\"]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"password\"]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.Boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"password\",\"displayName\":null,\"helpMessage\":null,\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"status\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]},{\"schema\":{\"name\":\"table\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"test2\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"ONE_PHASE_UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"UPDATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"SYNC\"/>\n   \n@@ -580,106 +568,103 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.db.table.DatabaseTableConnector\" \n                 displayName=\"H2-testsync\" version=\"${connid.database.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"changeLogColumn\",\"displayName\":\"Change Log Column (Sync)\",\"helpMessage\":\"=&lt;b&gt;Change Log Column&lt;/b&gt;&lt;br&gt;The change log column store the latest change time. Providing this value the Sync capabilities are activated.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"nativeTimestamps\",\"displayName\":\"Native Timestamps \",\"helpMessage\":\"&lt;b&gt;Native Timestamps&lt;/b&gt;&lt;br&gt;Select to retrieve Timestamp data type of the columns in java.sql.Timestamp format from the database table.\",\"type\":\"boolean\",\"required\":false,\"order\":18,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":\"Password cipher algorithm (defaults to CLEARTEXT)\",\"helpMessage\":\"Cipher algorithm used to encode password before to store it onto the database table.\\nSpecify one of the values among CLEARTEXT,AES, MD5, SHA1, SHA256 or a custom implementation identified by its class name.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":24,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":\"Enabled Status Value\",\"helpMessage\":\"&lt;b&gt;Enabled Status Value&lt;/b&gt;&lt;br&gt;Enter the value for enabled status.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":12,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":\"Retrieve password\",\"helpMessage\":\"Specify if password must be retrieved by default.\",\"type\":\"boolean\",\"required\":true,\"order\":27,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"datasource\",\"displayName\":\"Datasource Path\",\"helpMessage\":\"&lt;b&gt;JDBC Data Source Name/Path&lt;/b&gt;&lt;br&gt;Enter the JDBC Data Source Name/Path to connect to the Oracle server. If specified, connector will only try to connect using Datasource and ignore other resource parameters specified.&lt;br&gt;the example value is: &lt;CODE&gt;jdbc/SampleDataSourceName&lt;/CODE&gt;\",\"type\":\"java.lang.String\",\"required\":false,\"order\":22,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"allNative\",\"displayName\":\"All native\",\"helpMessage\":\"&lt;b&gt;All native&lt;/b&gt;&lt;br&gt;Select to retrieve all data type of the columns in a native format from the database table.\",\"type\":\"boolean\",\"required\":false,\"order\":19,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":\"User\",\"helpMessage\":\"&lt;b&gt;User&lt;/b&gt;&lt;br&gt;Enter the name of the mandatory Database user with permission to account table.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":4,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"pwdEncodeToLowerCase\",\"displayName\":\"Force password encoding to lower case\",\"helpMessage\":\"Force password encoding to lower case.\",\"type\":\"boolean\",\"required\":false,\"order\":26,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":\"JDBC Connection URL\",\"helpMessage\":\"&lt;b&gt;JDBC Connection URL&lt;/b&gt;&lt;br&gt;Specify the JDBC Driver Connection URL.&lt;br&gt; Oracle template is jdbc:oracle:thin:@[host]:[port(1521)]:[DB].&lt;br&gt;  MySQL template is jdbc:mysql://[host]:[port(3306)]/[db], for more info, read the JDBC driver documentation.&lt;br&gt;Could be empty if datasource is provided.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":15,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":\"Key Column\",\"helpMessage\":\"&lt;b&gt;Key Column&lt;/b&gt;&lt;br&gt;This mandatory column value will be used as the unique identifier for rows in the table.&lt;br&gt;\",\"type\":\"java.lang.String\",\"required\":true,\"order\":8,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"validConnectionQuery\",\"displayName\":\"Validate Connection Query\",\"helpMessage\":\"&lt;b&gt;Validate Connection Query&lt;/b&gt;&lt;br&gt;There can be specified the check connection alive query. If empty, default implementation will test it using the switch on/off the autocommit. Some select 1 from dummy table could be more efficient.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":20,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"rethrowAllSQLExceptions\",\"displayName\":\"Rethrow all SQLExceptions\",\"helpMessage\":\"If this is not checked, SQL statements which throw SQLExceptions with a 0 ErrorCode will be have the exception caught and suppressed. Check it to have exceptions with 0 ErrorCodes rethrown.\",\"type\":\"boolean\",\"required\":false,\"order\":17,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":\"Password Column\",\"helpMessage\":\"&lt;b&gt;Password Column&lt;/b&gt;&lt;br&gt;Enter the name of the column in the table that will hold the password values. If empty, no validation on resource and passwords are activated.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":9,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"jndiProperties\",\"displayName\":\"Initial JNDI Properties\",\"helpMessage\":\"&lt;b&gt;Initial JNDI Properties&lt;/b&gt;&lt;br&gt;Could be empty or enter the JDBC JNDI Initial context factory, context provider in a format: key = value.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"password\",\"displayName\":\"User Password\",\"helpMessage\":\"&lt;b&gt;User Password&lt;/b&gt;&lt;br&gt;Enter a user account that has permission to access accounts table.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":5,\"confidential\":true,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"&lt;b&gt;Host&lt;/b&gt;&lt;br&gt;Enter the name of the host where the database is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":2,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"port\",\"displayName\":\"Port\",\"helpMessage\":\"&lt;b&gt;TCP Port&lt;/b&gt;&lt;br&gt;Enter the port number the database server is listening on.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":3,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":\"Status Column\",\"helpMessage\":\"&lt;b&gt;Status Column&lt;/b&gt;&lt;br&gt;Enter the name of the column in the table that will hold the status values. If empty enabled and disabled operation wont be performed.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":10,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"pwdEncodeToUpperCase\",\"displayName\":\"Force password encoding to upper case\",\"helpMessage\":\"Force password encoding to upper case.\",\"type\":\"boolean\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"enableEmptyString\",\"displayName\":\"Enable writing empty string\",\"helpMessage\":\"&lt;b&gt;Enable writing empty string&lt;/b&gt;&lt;br&gt;Select to enable support for writing an empty strings, instead of a NULL value, in character based columns defined as not-null in the table schema. This option does not influence the way strings are written for Oracle based tables. By default empty strings are written as a NULL value.\",\"type\":\"boolean\",\"required\":false,\"order\":16,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"database\",\"displayName\":\"Database\",\"helpMessage\":\"&lt;b&gt;Database&lt;/b&gt;&lt;br&gt;Enter the name of the database on the database server that contains the table.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":6,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":\"Default Status Value\",\"helpMessage\":\"&lt;b&gt;Default Status Value&lt;/b&gt;&lt;br&gt;Enter the value for status in case of status not specified.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":13,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"table\",\"displayName\":\"Table\",\"helpMessage\":\"&lt;b&gt;Table&lt;/b&gt;&lt;br&gt;Enter the name of the table in the database that contains the accounts.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"testsync\"]},{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":\"Disabled Status Value\",\"helpMessage\":\"&lt;b&gt;Disabled Status Value&lt;/b&gt;&lt;br&gt;Enter the value for disabled status.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":11,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":\"JDBC Driver\",\"helpMessage\":\"&lt;b&gt;JDBC Driver&lt;/b&gt;&lt;br&gt;Specify the JDBC Driver class name. Oracle is oracle.jdbc.driver.OracleDriver. MySQL is org.gjt.mm.mysql.Driver.&lt;br&gt;Could be empty if datasource is provided.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":14,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"quoting\",\"displayName\":\"Name Quoting\",\"helpMessage\":\"&lt;b&gt;Name Quoting&lt;/b&gt;&lt;br&gt;Select whether database column names for this resource should be quoted, and the quoting characters. By default, database column names are not quoted (None). For other selections (Single, Double, Back, or Brackets), column names will appear between single quotes, double quotes, back quotes, or brackets in the SQL generated to access the database.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":1,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"cipherKey\",\"displayName\":\"Password cipher key\",\"helpMessage\":\"Specify key in case of reversible algorithm.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"TWO_PHASES_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"TWO_PHASES_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"SEARCH\"/>\n   \n   <ConnInstance id=\"108\" bundleName=\"net.tirasa.connid.bundles.db.scriptedsql\" \n                 location=\"connid://${testconnectorserver.key}@localhost:${testconnectorserver.port}\"\n                 connectorName=\"net.tirasa.connid.bundles.db.scriptedsql.ScriptedSQLConnector\"\n                 displayName=\"Scripted SQL\" version=\"${connid.database.version}\"\n                 jsonConf='[{&quot;schema&quot;:{&quot;name&quot;:&quot;updateScriptFileName&quot;,&quot;displayName&quot;:&quot;updateScriptFileName&quot;,&quot;helpMessage&quot;:&quot;updateScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/UpdateScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;testScript&quot;,&quot;displayName&quot;:&quot;testScript&quot;,&quot;helpMessage&quot;:&quot;testScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;host&quot;,&quot;displayName&quot;:&quot;Host&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Host&lt;/b&gt;&lt;br/&gt;Enter the name of the host where the database is running.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:2,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;localhost&quot;]},&quot;overridable&quot;:false},{&quot;schema&quot;:{&quot;name&quot;:&quot;port&quot;,&quot;displayName&quot;:&quot;Port&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;TCP Port&lt;/b&gt;&lt;br/&gt;Enter the port number the database server is listening on.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:3,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;3306&quot;]},&quot;overridable&quot;:false},{&quot;schema&quot;:{&quot;name&quot;:&quot;database&quot;,&quot;displayName&quot;:&quot;Database&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Database&lt;/b&gt;&lt;br/&gt;Enter the name of the database on the database server that contains the table.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:6,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false},{&quot;schema&quot;:{&quot;name&quot;:&quot;createScript&quot;,&quot;displayName&quot;:&quot;createScript&quot;,&quot;helpMessage&quot;:&quot;createScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;jdbcUrlTemplate&quot;,&quot;displayName&quot;:&quot;JDBC Connection URL&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;JDBC Connection URL&lt;/b&gt;&lt;br/&gt;Specify the JDBC Driver Connection URL.&lt;br/&gt; Oracle template is jdbc:oracle:thin:@[host]:[port(1521)]:[DB].&lt;br/&gt;  MySQL template is jdbc:mysql://[host]:[port(3306)]/[db], for more info, read the JDBC driver documentation.&lt;br/&gt;Could be empty if datasource is provided.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:11,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;jdbc:mysql://%h:%p/%d&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.url}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;jndiProperties&quot;,&quot;displayName&quot;:&quot;Initial JNDI Properties&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Initial JNDI Properties&lt;/b&gt;&lt;br/&gt;Could be empty or enter the JDBC JNDI Initial context factory, context provider in a format: key = value.&quot;,&quot;type&quot;:&quot;[Ljava.lang.String;&quot;,&quot;required&quot;:false,&quot;order&quot;:21,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;enableEmptyString&quot;,&quot;displayName&quot;:&quot;Enable writing empty string&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Enable writing empty string&lt;/b&gt;&lt;br/&gt;Select to enable support for writing an empty strings, instead of a NULL value, in character based columns defined as not-null in the table schema. This option does not influence the way strings are written for Oracle based tables. By default empty strings are written as a NULL value.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:12,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;false&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;allNative&quot;,&quot;displayName&quot;:&quot;All native&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;All native&lt;/b&gt;&lt;br/&gt;Select to retrieve all data type of the columns in a native format from the database table.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:16,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[false]},{&quot;schema&quot;:{&quot;name&quot;:&quot;password&quot;,&quot;displayName&quot;:&quot;User Password&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;User Password&lt;/b&gt;&lt;br/&gt;Enter a user account that has permission to access accounts table.&quot;,&quot;type&quot;:&quot;org.identityconnectors.common.security.GuardedString&quot;,&quot;required&quot;:false,&quot;order&quot;:5,&quot;confidential&quot;:true,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.password}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;validConnectionQuery&quot;,&quot;displayName&quot;:&quot;Validate Connection Query&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Validate Connection Query&lt;/b&gt;&lt;br/&gt;There can be specified the check connection alive query. If empty, default implementation will test it using the switch on/off the autocommit. Some select 1 from dummy table could be more efficient.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:17,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;reloadScriptOnExecution&quot;,&quot;displayName&quot;:&quot;reloadScriptOnExecution&quot;,&quot;helpMessage&quot;:&quot;reloadScriptOnExecution&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;true&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;schemaScriptFileName&quot;,&quot;displayName&quot;:&quot;schemaScriptFileName&quot;,&quot;helpMessage&quot;:&quot;schemaScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/SchemaScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;jdbcDriver&quot;,&quot;displayName&quot;:&quot;JDBC Driver&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;JDBC Driver&lt;/b&gt;&lt;br/&gt;Specify the JDBC Driver class name. Oracle is oracle.jdbc.driver.OracleDriver. MySQL is org.gjt.mm.mysql.Driver.&lt;br/&gt;Could be empty if datasource is provided.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:10,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;com.mysql.jdbc.Driver&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.driver}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;testScriptFileName&quot;,&quot;displayName&quot;:&quot;testScriptFileName&quot;,&quot;helpMessage&quot;:&quot;testScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/TestScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;quoting&quot;,&quot;displayName&quot;:&quot;Name Quoting&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Name Quoting&lt;/b&gt;&lt;br/&gt;Select whether database column names for this resource should be quoted, and the quoting characters. By default, database column names are not quoted (None). For other selections (Single, Double, Back, or Brackets), column names will appear between single quotes, double quotes, back quotes, or brackets in the SQL generated to access the database.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:-1,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;createScriptFileName&quot;,&quot;displayName&quot;:&quot;createScriptFileName&quot;,&quot;helpMessage&quot;:&quot;createScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/CreateScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;clearTextPasswordToScript&quot;,&quot;displayName&quot;:&quot;clearTextPasswordToScript&quot;,&quot;helpMessage&quot;:&quot;clearTextPasswordToScript&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[true]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;false&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;nativeTimestamps&quot;,&quot;displayName&quot;:&quot;Native Timestamps&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Native Timestamps&lt;/b&gt;&lt;br/&gt;Select to retrieve Timestamp data type of the columns in java.sql.Timestamp format from the database table.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:15,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[false]},{&quot;schema&quot;:{&quot;name&quot;:&quot;syncScript&quot;,&quot;displayName&quot;:&quot;syncScript&quot;,&quot;helpMessage&quot;:&quot;syncScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;autoCommit&quot;,&quot;displayName&quot;:&quot;autoCommit&quot;,&quot;helpMessage&quot;:&quot;autoCommit&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[true]},&quot;overridable&quot;:false,&quot;values&quot;:[true]},{&quot;schema&quot;:{&quot;name&quot;:&quot;scriptingLanguage&quot;,&quot;displayName&quot;:&quot;scriptingLanguage&quot;,&quot;helpMessage&quot;:&quot;scriptingLanguage&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;GROOVY&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;GROOVY&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;datasource&quot;,&quot;displayName&quot;:&quot;Datasource Path&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;JDBC Data Source Name/Path&lt;/b&gt;&lt;br/&gt;Enter the JDBC Data Source Name/Path to connect to the Oracle server. If specified, connector will only try to connect using Datasource and ignore other resource parameters specified.&lt;br/&gt;the example value is: &lt;CODE&gt;jdbc/SampleDataSourceName&lt;/CODE&gt;&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:20,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;deleteScript&quot;,&quot;displayName&quot;:&quot;deleteScript&quot;,&quot;helpMessage&quot;:&quot;deleteScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;rethrowAllSQLExceptions&quot;,&quot;displayName&quot;:&quot;Rethrow all SQLExceptions&quot;,&quot;helpMessage&quot;:&quot;If this is not checked, SQL statements which throw SQLExceptions with a 0 ErrorCode will be have the exception caught and suppressed. Check it to have exceptions with 0 ErrorCodes rethrown.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:14,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[true]},&quot;overridable&quot;:false,&quot;values&quot;:[true]},{&quot;schema&quot;:{&quot;name&quot;:&quot;syncScriptFileName&quot;,&quot;displayName&quot;:&quot;syncScriptFileName&quot;,&quot;helpMessage&quot;:&quot;syncScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/SyncScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;updateScript&quot;,&quot;displayName&quot;:&quot;updateScript&quot;,&quot;helpMessage&quot;:&quot;updateScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;user&quot;,&quot;displayName&quot;:&quot;User&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;User&lt;/b&gt;&lt;br/&gt;Enter the name of the mandatory Database user with permission to account table.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:4,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.username}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;deleteScriptFileName&quot;,&quot;displayName&quot;:&quot;deleteScriptFileName&quot;,&quot;helpMessage&quot;:&quot;deleteScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/DeleteScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;searchScriptFileName&quot;,&quot;displayName&quot;:&quot;searchScriptFileName&quot;,&quot;helpMessage&quot;:&quot;searchScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/SearchScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;searchScript&quot;,&quot;displayName&quot;:&quot;searchScript&quot;,&quot;helpMessage&quot;:&quot;searchScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"ONE_PHASE_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"SYNC\"/>\n   \n   <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-2\" connector_id=\"100\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     syncPolicy_id=\"9\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-timeout\" connector_id=\"102\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     jsonConf='[{\"schema\":{\"name\":\"endpoint\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":true,\"values\":[\"http://localhost:${cargo.servlet.port}/syncope-fit-build-tools/services/provisioning\"]}]'\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-delete\" connector_id=\"102\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\"\n                     propagationPriority=\"2\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-update\" connector_id=\"100\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-testdb\" connector_id=\"101\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-testdb2\" connector_id=\"106\"\n-                    randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n+                    randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-csv\" connector_id=\"104\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" propagationMode=\"ONE_PHASE\" syncPolicy_id=\"3\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" syncPolicy_id=\"3\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n-  <ExternalResource name=\"ws-target-resource-update-resetsynctoken\" connector_id=\"100\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-update-resetsynctoken\" connector_id=\"100\" enforceMandatoryCondition=\"1\"\n                     randomPwdIfNotProvided=\"0\" propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-ldap\" connector_id=\"105\"\n-                    randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n+                    randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource_PropActions resource_name=\"resource-ldap\"\n                                 actionClassName=\"org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions\"/>\n   <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" \n                     passwordPolicy_id=\"4\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   \n   <!-- The following three resources has been added to verify the issue SYNCOPE-68 -->\n-  <ExternalResource name=\"ws-target-resource-nopropagation2\" connector_id=\"103\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-nopropagation2\" connector_id=\"103\" enforceMandatoryCondition=\"1\"\n                     randomPwdIfNotProvided=\"0\" propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n-  <ExternalResource name=\"ws-target-resource-nopropagation3\" connector_id=\"103\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-nopropagation3\" connector_id=\"103\" enforceMandatoryCondition=\"1\"\n                     randomPwdIfNotProvided=\"0\" propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n-  <ExternalResource name=\"ws-target-resource-nopropagation4\" connector_id=\"103\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-nopropagation4\" connector_id=\"103\" enforceMandatoryCondition=\"1\"\n                     randomPwdIfNotProvided=\"0\" propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n@@ -688,22 +673,22 @@ under the License.\n   <ExternalResource name=\"resource-db-sync\" connector_id=\"107\"\n                     randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n                     enforceMandatoryCondition=\"0\" \n-                    propagationMode=\"TWO_PHASES\" propagationPrimary=\"0\" propagationPriority=\"0\"\n+                    propagationPrimary=\"0\" propagationPriority=\"0\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n                     \n   <!-- External resource for issue SYNCOPE-267 -->\n   <ExternalResource name=\"resource-db-virattr\" connector_id=\"107\"\n                     randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n                     enforceMandatoryCondition=\"0\" \n-                    propagationMode=\"TWO_PHASES\" propagationPrimary=\"0\" propagationPriority=\"0\"\n+                    propagationPrimary=\"0\" propagationPriority=\"0\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n \n   <ExternalResource name=\"resource-db-scripted\" connector_id=\"108\"\n                     randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n                     enforceMandatoryCondition=\"0\"\n-                    propagationMode=\"ONE_PHASE\" propagationPrimary=\"0\" propagationPriority=\"0\"\n+                    propagationPrimary=\"0\" propagationPriority=\"0\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n \n@@ -984,14 +969,14 @@ under the License.\n                intAttrName=\"location\" intMappingType=\"AnyObjectPlainSchema\"\n                mandatoryCondition=\"false\" connObjectKey=\"0\" password=\"0\" purpose=\"BOTH\"/>\n     \n-  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"1\" mode=\"TWO_PHASES\" operation=\"UPDATE\"\n+  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"1\" operation=\"UPDATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <TaskExec id=\"1\" task_id=\"1\" status=\"SUCCESS\"/>\n-  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"2\" mode=\"ONE_PHASE\" operation=\"CREATE\"\n+  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"2\" operation=\"CREATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n-  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"3\" mode=\"TWO_PHASES\" operation=\"DELETE\"\n+  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"3\" operation=\"DELETE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"4\" name=\"CSV (update matching; assign unmatching)\" resource_name=\"resource-csv\"\n@@ -1003,7 +988,7 @@ under the License.\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"adynMembershipCond\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"propagationStatuses\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"SchedTask\" type=\"SCHEDULED\" id=\"5\" name=\"SampleJob Task\" \n         jobDelegateClassName=\"org.apache.syncope.fit.core.reference.TestSampleJobDelegate\" cronExpression=\"0 0 0 1 * ?\"/>\n-  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"6\" mode=\"TWO_PHASES\" operation=\"UPDATE\"\n+  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"6\" operation=\"UPDATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-nopropagation\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <TaskExec id=\"6\" task_id=\"6\" status=\"SUCCESS\"/>\n@@ -1102,7 +1087,7 @@ under the License.\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"26\" name=\"CSV (ignore matching; assign unmatching)\" resource_name=\"resource-csv\"\n         destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n         unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\"/>\n-  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"27\" mode=\"ONE_PHASE\" operation=\"CREATE\"\n+  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"27\" operation=\"CREATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"resource-testdb\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"28\" name=\"Scripted SQL\" resource_name=\"resource-db-scripted\""},{"sha":"cce2ec862334aecb305924a3ea9edde52a5bea9a","filename":"core/persistence-jpa/src/test/resources/domains/TwoContent.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -112,9 +112,9 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.ldap.LdapConnector\"\n                 version=\"${connid.ldap.version}\" \n                 jsonConf='[{\"schema\":{\"name\":\"synchronizePasswords\",\"displayName\":\"Enable Password Synchronization\",\"helpMessage\":\"If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"displayName\":\"Maintain LDAP Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"The name or IP address of the host where the LDAP server is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"localhost\"]},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"displayName\":\"Password Hash Algorithm\",\"helpMessage\":\"Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SSHA1, and SHA1. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA\"]},{\"schema\":{\"name\":\"port\",\"displayName\":\"TCP Port\",\"helpMessage\":\"TCP/IP port number used to communicate with the LDAP server.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[1389]},{\"schema\":{\"name\":\"vlvSortAttribute\",\"displayName\":\"VLV Sort Attribute\",\"helpMessage\":\"Specify the sort attribute to use for VLV indexes on the resource.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusManagementClass\",\"displayName\":\"Status management class \",\"helpMessage\":\"Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"]},{\"schema\":{\"name\":\"accountObjectClasses\",\"displayName\":\"Account Object Classes\",\"helpMessage\":\"The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\"]},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"displayName\":\"Account User Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the account user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid\"]},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"displayName\":\"Base Contexts to Synchronize\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"displayName\":\"LDAP Filter for Accounts to Synchronize\",\"helpMessage\":\"An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"displayName\":\"Remove Log Entry Object Class from Filter\",\"helpMessage\":\"If this property is set (the default), the filter used to fetch change log entries does not contain the \\\"changeLogEntry\\\" object class, expecting that there are no entries of other object types in the change log.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"displayName\":\"Password Decryption Key\",\"helpMessage\":\"The key to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"readSchema\",\"displayName\":\"Read Schema\",\"helpMessage\":\"If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"ssl\",\"displayName\":\"SSL\",\"helpMessage\":\"Select the check box to connect to the LDAP server using SSL.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"displayName\":\"Password Attribute to Synchronize\",\"helpMessage\":\"The name of the password attribute to synchronize when performing password synchronization.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"accountSearchFilter\",\"displayName\":\"LDAP Filter for Retrieving Accounts\",\"helpMessage\":\"An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=*\"]},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"displayName\":\"Password Decryption Initialization Vector\",\"helpMessage\":\"The initialization vector to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupMemberAttribute\",\"displayName\":\"Group Member Attribute\",\"helpMessage\":\"The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"failover\",\"displayName\":\"Failover Servers\",\"helpMessage\":\"List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \\\"ldap://ldap.example.com:389/\\\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"displayName\":\"Filter Out Changes By\",\"helpMessage\":\"The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \\\"modifiersName\\\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \\\"cn=Directory Manager\\\".\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupNameAttributes\",\"displayName\":\"Group Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the group name.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"displayName\":\"Respect Resource Password Policy Change-After-Reset\",\"helpMessage\":\"When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"displayName\":\"Filter with Or Instead of And\",\"helpMessage\":\"Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"principal\",\"displayName\":\"Principal\",\"helpMessage\":\"The distinguished name with which to authenticate to the LDAP server.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=admin,ou=system\"]},{\"schema\":{\"name\":\"changeLogBlockSize\",\"displayName\":\"Change Log Block Size\",\"helpMessage\":\"The number of change log entries to fetch per query.\",\"type\":\"int\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[100]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"passwordAttribute\",\"displayName\":\"Password Attribute\",\"helpMessage\":\"The name of the LDAP attribute which holds the password. When changing an user password, the new password is set to this attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"userpassword\"]},{\"schema\":{\"name\":\"changeNumberAttribute\",\"displayName\":\"Change Number Attribute\",\"helpMessage\":\"The name of the change number attribute in the change log entry.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"changeNumber\"]},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"displayName\":\"Object Classes to Synchronize\",\"helpMessage\":\"The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \\\"inetOrgPerson\\\" objects should be synchronized, but the superclasses of \\\"inetOrgPerson\\\" (\\\"person\\\", \\\"organizationalperson\\\" and \\\"top\\\") should be filtered out, then list only \\\"inetOrgPerson\\\" here. All objects in LDAP are subclassed from \\\"top\\\". For this reason, you should never list \\\"top\\\", otherwise no object would be filtered.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"]},{\"schema\":{\"name\":\"credentials\",\"displayName\":\"Password\",\"helpMessage\":\"Password for the principal.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"secret\"]},{\"schema\":{\"name\":\"attributesToSynchronize\",\"displayName\":\"Attributes to Synchronize\",\"helpMessage\":\"The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \\\"department\\\" is listed, then only changes that affect \\\"department\\\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"displayName\":\"Maintain POSIX Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"truemaintainLdapGroupMembership\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"SEARCH\"/>\n   \n </dataset>"},{"sha":"1be141f3f41874e0e49766d65086e35d51b05f12","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/Connector.java","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -21,7 +21,6 @@\n import java.util.Collection;\n import java.util.List;\n import java.util.Set;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n@@ -54,42 +53,42 @@ public interface Connector {\n     /**\n      * Create user / group on a connector instance.\n      *\n-     * @param propagationMode propagation mode\n      * @param objectClass ConnId's object class\n      * @param attrs attributes for creation\n      * @param options ConnId's OperationOptions\n      * @param propagationAttempted if creation is actually performed (based on connector instance's capabilities)\n      * @return Uid for created object\n      */\n-    Uid create(PropagationMode propagationMode, ObjectClass objectClass,\n-            Set<Attribute> attrs, OperationOptions options,\n+    Uid create(ObjectClass objectClass,\n+            Set<Attribute> attrs,\n+            OperationOptions options,\n             Set<String> propagationAttempted);\n \n     /**\n      * Update user / group on a connector instance.\n      *\n-     * @param propagationMode propagation mode\n      * @param objectClass ConnId's object class\n      * @param uid user to be updated\n      * @param attrs attributes for update\n      * @param options ConnId's OperationOptions\n      * @param propagationAttempted if update is actually performed (based on connector instance's capabilities)\n      * @return Uid for updated object\n      */\n-    Uid update(PropagationMode propagationMode, ObjectClass objectClass,\n-            Uid uid, Set<Attribute> attrs, OperationOptions options,\n+    Uid update(ObjectClass objectClass,\n+            Uid uid,\n+            Set<Attribute> attrs,\n+            OperationOptions options,\n             Set<String> propagationAttempted);\n \n     /**\n      * Delete user / group on a connector instance.\n      *\n-     * @param propagationMode propagation mode\n      * @param objectClass ConnId's object class\n      * @param uid user to be deleted\n      * @param options ConnId's OperationOptions\n      * @param propagationAttempted if deletion is actually performed (based on connector instance's capabilities)\n      */\n-    void delete(PropagationMode propagationMode, ObjectClass objectClass,\n+    void delete(ObjectClass objectClass,\n             Uid uid, OperationOptions options, Set<String> propagationAttempted);\n \n     /**\n@@ -133,15 +132,13 @@ void delete(PropagationMode propagationMode, ObjectClass objectClass,\n      * Get remote object used by the propagation manager in order to choose for a create (object doesn't exist) or an\n      * update (object exists).\n      *\n-     * @param propagationMode propagation mode\n      * @param operationType resource operation type\n      * @param objectClass ConnId's object class\n      * @param uid ConnId's Uid\n      * @param options ConnId's OperationOptions\n      * @return ConnId's connector object for given uid\n      */\n     ConnectorObject getObject(\n-            PropagationMode propagationMode,\n             ResourceOperation operationType,\n             ObjectClass objectClass,\n             Uid uid,"},{"sha":"a28f44e6ba7ddc3f60f7998ba6f91153fe3ce7c4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":27,"deletions":28,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -31,7 +31,6 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n import org.apache.syncope.core.provisioning.api.ConnIdBundleManager;\n@@ -165,15 +164,15 @@ public Uid authenticate(final String username, final String password, final Oper\n     }\n \n     @Override\n-    public Uid create(final PropagationMode propagationMode, final ObjectClass objectClass, final Set<Attribute> attrs,\n-            final OperationOptions options, final Set<String> propagationAttempted) {\n+    public Uid create(\n+            final ObjectClass objectClass,\n+            final Set<Attribute> attrs,\n+            final OperationOptions options,\n+            final Set<String> propagationAttempted) {\n \n         Uid result = null;\n \n-        if (propagationMode == PropagationMode.ONE_PHASE\n-                ? activeConnInstance.getCapabilities().contains(ConnectorCapability.ONE_PHASE_CREATE)\n-                : activeConnInstance.getCapabilities().contains(ConnectorCapability.TWO_PHASES_CREATE)) {\n-\n+        if (activeConnInstance.getCapabilities().contains(ConnectorCapability.CREATE)) {\n             propagationAttempted.add(\"create\");\n \n             Future<Uid> future = asyncFacade.create(connector, objectClass, attrs, options);\n@@ -199,15 +198,16 @@ public Uid create(final PropagationMode propagationMode, final ObjectClass objec\n     }\n \n     @Override\n-    public Uid update(final PropagationMode propagationMode, final ObjectClass objectClass, final Uid uid,\n-            final Set<Attribute> attrs, final OperationOptions options, final Set<String> propagationAttempted) {\n+    public Uid update(\n+            final ObjectClass objectClass,\n+            final Uid uid,\n+            final Set<Attribute> attrs,\n+            final OperationOptions options,\n+            final Set<String> propagationAttempted) {\n \n         Uid result = null;\n \n-        if (propagationMode == PropagationMode.ONE_PHASE\n-                ? activeConnInstance.getCapabilities().contains(ConnectorCapability.ONE_PHASE_UPDATE)\n-                : activeConnInstance.getCapabilities().contains(ConnectorCapability.TWO_PHASES_UPDATE)) {\n-\n+        if (activeConnInstance.getCapabilities().contains(ConnectorCapability.UPDATE)) {\n             propagationAttempted.add(\"update\");\n \n             Future<Uid> future = asyncFacade.update(connector, objectClass, uid, attrs, options);\n@@ -235,13 +235,13 @@ public Uid update(final PropagationMode propagationMode, final ObjectClass objec\n     }\n \n     @Override\n-    public void delete(final PropagationMode propagationMode, final ObjectClass objectClass, final Uid uid,\n-            final OperationOptions options, final Set<String> propagationAttempted) {\n-\n-        if (propagationMode == PropagationMode.ONE_PHASE\n-                ? activeConnInstance.getCapabilities().contains(ConnectorCapability.ONE_PHASE_DELETE)\n-                : activeConnInstance.getCapabilities().contains(ConnectorCapability.TWO_PHASES_DELETE)) {\n+    public void delete(\n+            final ObjectClass objectClass,\n+            final Uid uid,\n+            final OperationOptions options,\n+            final Set<String> propagationAttempted) {\n \n+        if (activeConnInstance.getCapabilities().contains(ConnectorCapability.DELETE)) {\n             propagationAttempted.add(\"delete\");\n \n             Future<Uid> future = asyncFacade.delete(connector, objectClass, uid, options);\n@@ -307,12 +307,15 @@ public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n \n     @Override\n     public ConnectorObject getObject(final ObjectClass objectClass, final Uid uid, final OperationOptions options) {\n-        return getObject(null, null, objectClass, uid, options);\n+        return getObject(null, objectClass, uid, options);\n     }\n \n     @Override\n-    public ConnectorObject getObject(final PropagationMode propagationMode, final ResourceOperation operationType,\n-            final ObjectClass objectClass, final Uid uid, final OperationOptions options) {\n+    public ConnectorObject getObject(\n+            final ResourceOperation operationType,\n+            final ObjectClass objectClass,\n+            final Uid uid,\n+            final OperationOptions options) {\n \n         boolean hasCapablities = false;\n \n@@ -322,15 +325,11 @@ public ConnectorObject getObject(final PropagationMode propagationMode, final Re\n             } else {\n                 switch (operationType) {\n                     case CREATE:\n-                        hasCapablities = propagationMode == null || (propagationMode == PropagationMode.ONE_PHASE\n-                                ? activeConnInstance.getCapabilities().contains(ConnectorCapability.ONE_PHASE_CREATE)\n-                                : activeConnInstance.getCapabilities().contains(ConnectorCapability.TWO_PHASES_CREATE));\n+                        hasCapablities = activeConnInstance.getCapabilities().contains(ConnectorCapability.CREATE);\n                         break;\n \n                     case UPDATE:\n-                        hasCapablities = propagationMode == null || (propagationMode == PropagationMode.ONE_PHASE\n-                                ? activeConnInstance.getCapabilities().contains(ConnectorCapability.ONE_PHASE_UPDATE)\n-                                : activeConnInstance.getCapabilities().contains(ConnectorCapability.TWO_PHASES_UPDATE));\n+                        hasCapablities = activeConnInstance.getCapabilities().contains(ConnectorCapability.UPDATE);\n                         break;\n \n                     default:"},{"sha":"e5dfadfdcfc6de984fd81fedc63469feb2930bf0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -108,8 +108,6 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n \n         resource.setRandomPwdIfNotProvided(resourceTO.isRandomPwdIfNotProvided());\n \n-        resource.setPropagationMode(resourceTO.getPropagationMode());\n-\n         // 1. add or update all (valid) provisions from TO\n         for (ProvisionTO provisionTO : resourceTO.getProvisions()) {\n             AnyType anyType = anyTypeDAO.find(provisionTO.getAnyType());\n@@ -323,8 +321,6 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n \n         resourceTO.setRandomPwdIfNotProvided(resource.isRandomPwdIfNotProvided());\n \n-        resourceTO.setPropagationMode(resource.getPropagationMode());\n-\n         resourceTO.setCreateTraceLevel(resource.getCreateTraceLevel());\n         resourceTO.setUpdateTraceLevel(resource.getUpdateTraceLevel());\n         resourceTO.setDeleteTraceLevel(resource.getDeleteTraceLevel());"},{"sha":"4ccc0c4f3b264e2bb123b100df8cce4fedfcfc8c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":6,"deletions":13,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -29,7 +29,6 @@\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n@@ -182,7 +181,6 @@ protected void createOrUpdate(\n         if (beforeObj == null) {\n             LOG.debug(\"Create {} on {}\", attributes, task.getResource().getKey());\n             connector.create(\n-                    task.getResource().getPropagationMode(),\n                     new ObjectClass(task.getObjectClassName()),\n                     attributes,\n                     null,\n@@ -229,8 +227,8 @@ protected void createOrUpdate(\n                 // 3. provision entry\n                 LOG.debug(\"Update {} on {}\", strictlyModified, task.getResource().getKey());\n \n-                connector.update(task.getResource().getPropagationMode(), beforeObj.getObjectClass(),\n-                        beforeObj.getUid(), strictlyModified, null, propagationAttempted);\n+                connector.update(\n+                        beforeObj.getObjectClass(), beforeObj.getUid(), strictlyModified, null, propagationAttempted);\n             }\n         }\n     }\n@@ -303,7 +301,6 @@ protected void delete(final PropagationTask task, final ConnectorObject beforeOb\n                 LOG.debug(\"Delete {} on {}\", beforeObj.getUid(), task.getResource().getKey());\n \n                 connector.delete(\n-                        task.getMode(),\n                         beforeObj.getObjectClass(),\n                         beforeObj.getUid(),\n                         null,\n@@ -359,9 +356,7 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n                 default:\n             }\n \n-            execution.setStatus(task.getMode() == PropagationMode.ONE_PHASE\n-                    ? PropagationTaskExecStatus.SUCCESS.name()\n-                    : PropagationTaskExecStatus.SUBMITTED.name());\n+            execution.setStatus(PropagationTaskExecStatus.SUCCESS.name());\n \n             for (PropagationActions action : actions) {\n                 action.after(task, execution, afterObj);\n@@ -390,9 +385,7 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n             }\n \n             try {\n-                execution.setStatus(task.getMode() == PropagationMode.ONE_PHASE\n-                        ? PropagationTaskExecStatus.FAILURE.name()\n-                        : PropagationTaskExecStatus.UNSUBMITTED.name());\n+                execution.setStatus(PropagationTaskExecStatus.FAILURE.name());\n             } catch (Exception wft) {\n                 LOG.error(\"While executing KO action on {}\", execution, wft);\n             }\n@@ -486,7 +479,7 @@ public void execute(final Collection<PropagationTask> tasks) {\n     protected boolean hasToBeregistered(final PropagationTask task, final TaskExec execution) {\n         boolean result;\n \n-        final boolean failed = !PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful();\n+        boolean failed = PropagationTaskExecStatus.valueOf(execution.getStatus()) != PropagationTaskExecStatus.SUCCESS;\n \n         switch (task.getOperation()) {\n \n@@ -530,7 +523,7 @@ protected ConnectorObject getRemoteObject(final PropagationTask task, final Conn\n \n         ConnectorObject obj = null;\n         try {\n-            obj = connector.getObject(task.getMode(),\n+            obj = connector.getObject(\n                     task.getOperation(),\n                     new ObjectClass(task.getObjectClassName()),\n                     new Uid(connObjectKey),"},{"sha":"a3c495157fe56e2bcfb325431357bdd915076931","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PriorityPropagationTaskExecutor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -64,7 +64,7 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationRe\n                     LOG.error(\"Unexpected execution status found {}\", execution.getStatus());\n                     execStatus = PropagationTaskExecStatus.FAILURE;\n                 }\n-                if (task.getResource().isPropagationPrimary() && !execStatus.isSuccessful()) {\n+                if (task.getResource().isPropagationPrimary() && execStatus != PropagationTaskExecStatus.SUCCESS) {\n                     result = Result.FAILURE;\n                     throw new PropagationException(task.getResource().getKey(), execution.getMessage());\n                 }"},{"sha":"b8bc838a9458f1c59e48a203e6b5fc9fc4c2f78e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -380,7 +380,6 @@ protected List<PropagationTask> createTasks(final Any<?, ?, ?> any,\n                         task.setAnyKey(any.getKey());\n                     }\n                     task.setOperation(operation);\n-                    task.setMode(resource.getPropagationMode());\n                     task.setOldConnObjectKey(propByRes.getOldConnObjectKey(resource.getKey()));\n \n                     Pair<String, Set<Attribute>> preparedAttrs = MappingUtils.prepareAttrs("},{"sha":"061b17a4a30ffbf7a5e3b8f955670e529fc819ae","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/ResourceDataBinderTest.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FResourceDataBinderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FResourceDataBinderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FResourceDataBinderTest.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n@@ -78,7 +77,6 @@ public void issue42() {\n         ResourceTO resourceTO = new ResourceTO();\n         resourceTO.setKey(\"resource-issue42\");\n         resourceTO.setConnector(100L);\n-        resourceTO.setPropagationMode(PropagationMode.ONE_PHASE);\n         resourceTO.setEnforceMandatoryCondition(true);\n \n         ProvisionTO provisionTO = new ProvisionTO();"},{"sha":"5da1042ebc3f8a8bca28c6d85c059e6a36eb3ae3","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -27,13 +27,11 @@\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n-import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.lib.types.JobStatusType;\n-import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n@@ -109,13 +107,6 @@ public TaskExecTO readExecution(final Long executionKey) {\n         return logic.readExecution(executionKey);\n     }\n \n-    @Override\n-    public void report(final Long executionKey, final ReportExecTO reportExec) {\n-        reportExec.setKey(executionKey);\n-        logic.report(\n-                executionKey, PropagationTaskExecStatus.fromString(reportExec.getStatus()), reportExec.getMessage());\n-    }\n-\n     @Override\n     public void update(final AbstractTaskTO taskTO) {\n         if (taskTO instanceof SyncTaskTO) {"},{"sha":"cc979367bd0d6726cb90bc22f4bff0fcbfaac12b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ConnectorITCase.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -149,9 +149,8 @@ public void create() {\n         connectorTO.getConfiguration().addAll(conf);\n \n         // set connector capabilities\n-        connectorTO.getCapabilities().add(ConnectorCapability.TWO_PHASES_CREATE);\n-        connectorTO.getCapabilities().add(ConnectorCapability.ONE_PHASE_CREATE);\n-        connectorTO.getCapabilities().add(ConnectorCapability.TWO_PHASES_UPDATE);\n+        connectorTO.getCapabilities().add(ConnectorCapability.CREATE);\n+        connectorTO.getCapabilities().add(ConnectorCapability.UPDATE);\n \n         // set connector pool conf\n         ConnPoolConfTO cpc = new ConnPoolConfTO();\n@@ -180,7 +179,7 @@ public void create() {\n         Throwable t = null;\n \n         // check update\n-        actual.getCapabilities().remove(ConnectorCapability.TWO_PHASES_UPDATE);\n+        actual.getCapabilities().remove(ConnectorCapability.UPDATE);\n         actual.getPoolConf().setMaxObjects(null);\n \n         try {\n@@ -193,8 +192,7 @@ public void create() {\n \n         assertNull(t);\n         assertNotNull(actual);\n-        assertEquals(EnumSet.of(ConnectorCapability.ONE_PHASE_CREATE, ConnectorCapability.TWO_PHASES_CREATE),\n-                actual.getCapabilities());\n+        assertEquals(EnumSet.of(ConnectorCapability.CREATE), actual.getCapabilities());\n         assertEquals(10, actual.getPoolConf().getMaxObjects(), 0);\n \n         // check also for the deletion of the created object"},{"sha":"c1ce3b0e27d6d8dd69f55e1abc760398293cb0be","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/MultitenancyITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -21,7 +21,6 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n import java.security.AccessControlException;\n@@ -202,7 +201,7 @@ public void createResourceAndSync() {\n         // verify execution status\n         String status = execution.getStatus();\n         assertNotNull(status);\n-        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(status));\n \n         // verify that synchronized user is found\n         PagedResult<UserTO> matchingUsers = adminClient.getService(UserService.class).search("},{"sha":"4115bfa33883bfb193830d84f74b1f5b464341e3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/PropagationTaskITCase.java","status":"modified","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPropagationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPropagationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPropagationTaskITCase.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -25,17 +25,13 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n-import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -88,34 +84,6 @@ public void readExecution() {\n         assertNotNull(taskTO);\n     }\n \n-    @Test\n-    public void deal() {\n-        // Currently test is not re-runnable.\n-        // To successfully run test second time it is necessary to restart cargo\n-        try {\n-            taskService.delete(0L);\n-        } catch (SyncopeClientException e) {\n-            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n-        }\n-        TaskExecTO exec = taskService.execute(1L, false);\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED.name(), exec.getStatus());\n-\n-        ReportExecTO report = new ReportExecTO();\n-        report.setStatus(PropagationTaskExecStatus.SUCCESS.name());\n-        report.setMessage(\"OK\");\n-        taskService.report(exec.getKey(), report);\n-        exec = taskService.readExecution(exec.getKey());\n-        assertEquals(PropagationTaskExecStatus.SUCCESS.name(), exec.getStatus());\n-        assertEquals(\"OK\", exec.getMessage());\n-\n-        taskService.delete(1L);\n-        try {\n-            taskService.readExecution(exec.getKey());\n-        } catch (SyncopeClientException e) {\n-            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n-        }\n-    }\n-\n     @Test\n     public void issue196() {\n         TaskExecTO exec = taskService.execute(6L, false);"},{"sha":"d980345ef78ce94f0a1b6c0af607fbf82df68935","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/PushTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -326,7 +326,7 @@ public void issueSYNCOPE598() {\n \n             // execute the new task\n             TaskExecTO pushExec = execProvisioningTask(taskService, push.getKey(), 50, false);\n-            assertTrue(PropagationTaskExecStatus.valueOf(pushExec.getStatus()).isSuccessful());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(pushExec.getStatus()));\n         } finally {\n             groupService.delete(groupTO.getKey());\n             if (newResourceTO != null) {"},{"sha":"eaff578675ee3abb497a60548f1dc2ab70dbc830","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SyncTaskITCase.java","status":"modified","additions":8,"deletions":16,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -253,7 +253,7 @@ public void reconcileFromDB() {\n         // update sync task\n         TaskExecTO execution = execProvisioningTask(taskService, 7L, 50, false);\n         assertNotNull(execution.getStatus());\n-        assertTrue(PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n         UserTO userTO = readUser(\"testuser1\");\n         assertNotNull(userTO);\n@@ -267,7 +267,7 @@ public void reconcileFromDB() {\n         // re-execute the same SyncTask: now user must be active\n         execution = execProvisioningTask(taskService, 7L, 50, false);\n         assertNotNull(execution.getStatus());\n-        assertTrue(PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n         userTO = readUser(\"testuser1\");\n         assertNotNull(userTO);\n@@ -317,9 +317,7 @@ public void reconcileFromLDAP() {\n         TaskExecTO execution = execProvisioningTask(taskService, 11L, 50, false);\n \n         // 1. verify execution status\n-        String status = execution.getStatus();\n-        assertNotNull(status);\n-        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n         // 2. verify that synchronized group is found\n         PagedResult<GroupTO> matchingGroups = groupService.search(\n@@ -455,9 +453,7 @@ public void issueSYNCOPE68() {\n             assertFalse(((UserTO) actual.getTemplates().get(AnyTypeKind.USER.name())).getMemberships().isEmpty());\n \n             TaskExecTO execution = execProvisioningTask(taskService, actual.getKey(), 50, false);\n-            final String status = execution.getStatus();\n-            assertNotNull(status);\n-            assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n             userTO = readUser(\"testuser2\");\n             assertNotNull(userTO);\n@@ -560,12 +556,12 @@ public void issueSYNCOPE272() {\n         try {\n             assertNotNull(userTO);\n             assertEquals(1, userTO.getPropagationStatusTOs().size());\n-            assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n             TaskExecTO taskExecTO = execProvisioningTask(taskService, 24L, 50, false);\n \n             assertNotNull(taskExecTO.getStatus());\n-            assertTrue(PropagationTaskExecStatus.valueOf(taskExecTO.getStatus()).isSuccessful());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(taskExecTO.getStatus()));\n \n             userTO = userService.read(userTO.getKey());\n             assertNotNull(userTO);\n@@ -669,9 +665,7 @@ public void issueSYNCOPE313DB() throws Exception {\n         assertEquals(actual.getJobDelegateClassName(), syncTask.getJobDelegateClassName());\n \n         TaskExecTO execution = execProvisioningTask(taskService, syncTask.getKey(), 50, false);\n-        final String status = execution.getStatus();\n-        assertNotNull(status);\n-        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n         // 5. Test the sync'd user\n         UserTO updatedUser = userService.read(user.getKey());\n@@ -743,9 +737,7 @@ public void issueSYNCOPE313LDAP() throws Exception {\n         assertEquals(actual.getJobDelegateClassName(), syncTask.getJobDelegateClassName());\n \n         TaskExecTO execution = execProvisioningTask(taskService, syncTask.getKey(), 50, false);\n-        String status = execution.getStatus();\n-        assertNotNull(status);\n-        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n         // 7. Test the sync'd user\n         String syncedPassword = Encryptor.getInstance().encode(\"security123\", CipherAlgorithm.SHA1);"},{"sha":"283f5326221a8d424380c29ad3acbe2cc2b35fb0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserITCase.java","status":"modified","additions":16,"deletions":21,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -295,7 +295,7 @@ public void createUserWithDbPropagation() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n     }\n \n     @Test(expected = SyncopeClientException.class)\n@@ -504,7 +504,7 @@ public void delete() {\n \n         // check for propagation result\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         try {\n             userService.delete(userTO.getKey());\n@@ -532,7 +532,7 @@ public void deleteByUsername() {\n \n         // check for propagation result\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         try {\n             userService.read(userTO.getKey());\n@@ -1058,9 +1058,7 @@ public final void issue280() {\n         assertNotNull(propagations);\n         assertEquals(1, propagations.size());\n \n-        PropagationTaskExecStatus status = propagations.get(0).getStatus();\n-        assertNotNull(status);\n-        assertTrue(status.isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, propagations.get(0).getStatus());\n \n         String resource = propagations.get(0).getResource();\n         assertEquals(RESOURCE_NAME_TESTDB, resource);\n@@ -1077,17 +1075,14 @@ public void issue281() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n-        final List<PropagationStatus> propagations = userTO.getPropagationStatusTOs();\n-\n+        List<PropagationStatus> propagations = userTO.getPropagationStatusTOs();\n         assertNotNull(propagations);\n         assertEquals(1, propagations.size());\n \n-        final PropagationTaskExecStatus status = propagations.get(0).getStatus();\n-        final String resource = propagations.get(0).getResource();\n+        assertNotEquals(PropagationTaskExecStatus.SUCCESS, propagations.get(0).getStatus());\n \n-        assertNotNull(status);\n+        String resource = propagations.get(0).getResource();\n         assertEquals(RESOURCE_NAME_CSV, resource);\n-        assertFalse(status.isSuccessful());\n     }\n \n     @Test\n@@ -1365,7 +1360,7 @@ public void issueSYNCOPE267() {\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(RESOURCE_NAME_DBVIRATTR, userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_DBVIRATTR, AnyTypeKind.USER.name(), userTO.getKey());\n@@ -1407,7 +1402,7 @@ public void issueSYNCOPE279() {\n         userTO = createUser(userTO);\n         assertEquals(RESOURCE_NAME_TIMEOUT, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n-        assertEquals(PropagationTaskExecStatus.UNSUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.FAILURE, userTO.getPropagationStatusTOs().get(0).getStatus());\n     }\n \n     @Test\n@@ -1510,7 +1505,7 @@ public void isseSYNCOPE136AES() {\n             PropagationStatus prop = props.iterator().next();\n             assertNotNull(prop);\n             assertEquals(RESOURCE_NAME_WS1, prop.getResource());\n-            assertEquals(PropagationTaskExecStatus.SUBMITTED, prop.getStatus());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, prop.getStatus());\n         } finally {\n             // restore initial cipher algorithm\n             pwdCipherAlgo.getValues().set(0, origpwdCipherAlgo);\n@@ -1734,7 +1729,7 @@ public void issueSYNCOPE383() {\n                 operation(PatchOperation.ADD_REPLACE).value(RESOURCE_NAME_TESTDB).build());\n         userTO = updateUser(userPatch);\n         assertEquals(RESOURCE_NAME_TESTDB, userTO.getResources().iterator().next());\n-        assertFalse(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertNotEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n \n         // 3. request to change password only on testdb\n@@ -1745,7 +1740,7 @@ public void issueSYNCOPE383() {\n \n         userTO = updateUser(userPatch);\n         assertEquals(RESOURCE_NAME_TESTDB, userTO.getResources().iterator().next());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n     }\n \n     @Test\n@@ -1789,7 +1784,7 @@ public void issueSYNCOPE402() {\n         assertNotNull(ws1PropagationStatus);\n         assertEquals(RESOURCE_NAME_WS1, ws1PropagationStatus.getResource());\n         assertNotNull(ws1PropagationStatus.getFailureReason());\n-        assertEquals(PropagationTaskExecStatus.UNSUBMITTED, ws1PropagationStatus.getStatus());\n+        assertEquals(PropagationTaskExecStatus.FAILURE, ws1PropagationStatus.getStatus());\n     }\n \n     @Test\n@@ -2103,7 +2098,7 @@ public void issueSYNCOPE435() {\n \n         userTO = userService.update(userPatch).readEntity(UserTO.class);\n         assertEquals(Collections.singleton(RESOURCE_NAME_WS1), userTO.getResources());\n-        assertFalse(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertNotEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getFailureReason().\n                 startsWith(\"Not attempted because there are mandatory attributes without value(s): [__PASSWORD__]\"));\n     }\n@@ -2181,7 +2176,7 @@ public void issueSYNCOPE493() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         ConnObjectTO actual =\n                 resourceService.readConnObject(RESOURCE_NAME_WS1, AnyTypeKind.USER.name(), userTO.getKey());\n@@ -2221,7 +2216,7 @@ public void issueSYNCOPE493() {\n         userTO = updateUser(userPatch);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         ConnObjectTO newUser =\n                 resourceService.readConnObject(RESOURCE_NAME_WS1, AnyTypeKind.USER.name(), userTO.getKey());"},{"sha":"0ceceda40f2f6b475444dc78408263c0354cf886","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/VirAttrITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44cbf349ad92ecc7059186ceaf47e01a666b055c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java?ref=44cbf349ad92ecc7059186ceaf47e01a666b055c","patch":"@@ -101,7 +101,7 @@ public void issueSYNCOPE260() {\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n@@ -120,7 +120,7 @@ public void issueSYNCOPE260() {\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(connObjectTO);\n@@ -164,7 +164,7 @@ public void issueSYNCOPE260() {\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(connObjectTO);\n@@ -189,7 +189,7 @@ public void issueSYNCOPE260() {\n         assertTrue(userTO.getVirAttrs().isEmpty());\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(connObjectTO);\n@@ -502,8 +502,8 @@ public void issueSYNCOPE453() {\n \n         userTO = createUser(userTO);\n         assertEquals(2, userTO.getPropagationStatusTOs().size());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n-        assertTrue(userTO.getPropagationStatusTOs().get(1).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(1).getStatus());\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n "}]}