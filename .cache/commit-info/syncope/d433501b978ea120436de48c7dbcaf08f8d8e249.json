{"sha":"d433501b978ea120436de48c7dbcaf08f8d8e249","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ0MzM1MDFiOTc4ZWExMjA0MzZkZTQ4YzdkYmNhZjA4ZjhkOGUyNDk=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-12-01T10:27:54Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-12-01T10:27:54Z"},"message":"Improved IT, SYNCOPE-158","tree":{"sha":"dab478c1f964eebf72217ff5dbcb205505eb6bd5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dab478c1f964eebf72217ff5dbcb205505eb6bd5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d433501b978ea120436de48c7dbcaf08f8d8e249","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d433501b978ea120436de48c7dbcaf08f8d8e249","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d433501b978ea120436de48c7dbcaf08f8d8e249","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d433501b978ea120436de48c7dbcaf08f8d8e249/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"234819b6e9300d7f3923a4eb193ade3773461e46","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/234819b6e9300d7f3923a4eb193ade3773461e46","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/234819b6e9300d7f3923a4eb193ade3773461e46"}],"stats":{"total":144,"additions":93,"deletions":51},"files":[{"sha":"b1b1e08a398a600aeb6cd94ddd606efd37a47200","filename":"client/cli/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fpom.xml?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -30,8 +30,8 @@ under the License.\n \n   <name>Apache Syncope Client CLI</name>\n   <description>Apache Syncope Client CLI</description>\n-\n-  <groupId>org.apache.syncope</groupId>\n+  \n+  <groupId>org.apache.syncope.client</groupId>\n   <artifactId>syncope-client-cli</artifactId>\n   <packaging>jar</packaging>\n "},{"sha":"aeec15c4853d0a4636bbe2a0932bb1c0eb994b72","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -71,7 +71,7 @@ public String getHelpMessage() {\n         return connectorResultManager.commandHelpMessage(getClass());\n     }\n \n-    private enum ConnectorOptions {\n+    public enum ConnectorOptions {\n \n         HELP(\"--help\"),\n         LIST(\"--list\"),"},{"sha":"42949a73067a72211879961e3a4a0863e0fc3c27","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -65,7 +65,7 @@ public String getHelpMessage() {\n         return entitlementResultManager.commandHelpMessage(getClass());\n     }\n \n-    private enum EntitlementOptions {\n+    public enum EntitlementOptions {\n \n         HELP(\"--help\"),\n         LIST(\"--list\"),"},{"sha":"fee82523990b0efac82867901bcf6e10867762dd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupCommand.java?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -67,7 +67,7 @@ public String getHelpMessage() {\n         return groupResultManager.commandHelpMessage(getClass());\n     }\n \n-    private enum GroupOptions {\n+    public enum GroupOptions {\n \n         HELP(\"--help\"),\n         DETAILS(\"--details\"),"},{"sha":"172e26135955868b00d661a4d62bbbb244c9fecd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -77,7 +77,7 @@ public String getHelpMessage() {\n         return HELP_MESSAGE;\n     }\n \n-    private enum Options {\n+    public enum Options {\n \n         HELP(\"--help\"),\n         SETUP(\"--setup\"),"},{"sha":"f334888dd09f6890d3866a6008aa0079eaf08149","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyCommand.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -33,10 +33,10 @@ public class PolicyCommand extends AbstractCommand {\n     @Override\n     public void execute(final Input input) {\n         if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n+            input.setOption(PolicyOptions.HELP.getOptionName());\n         }\n \n-        switch (Options.fromName(input.getOption())) {\n+        switch (PolicyOptions.fromName(input.getOption())) {\n             case DETAILS:\n                 new PolicyDetails(input).details();\n                 break;\n@@ -62,7 +62,7 @@ public String getHelpMessage() {\n         return policyResultManager.commandHelpMessage(getClass());\n     }\n \n-    private enum Options {\n+    public enum PolicyOptions {\n \n         HELP(\"--help\"),\n         DETAILS(\"--details\"),\n@@ -72,7 +72,7 @@ private enum Options {\n \n         private final String optionName;\n \n-        Options(final String optionName) {\n+        PolicyOptions(final String optionName) {\n             this.optionName = optionName;\n         }\n \n@@ -84,9 +84,9 @@ public boolean equalsOptionName(final String otherName) {\n             return (otherName == null) ? false : optionName.equals(otherName);\n         }\n \n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n+        public static PolicyOptions fromName(final String name) {\n+            PolicyOptions optionToReturn = HELP;\n+            for (final PolicyOptions option : PolicyOptions.values()) {\n                 if (option.equalsOptionName(name)) {\n                     optionToReturn = option;\n                 }\n@@ -96,7 +96,7 @@ public static Options fromName(final String name) {\n \n         public static List<String> toList() {\n             final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n+            for (final PolicyOptions value : values()) {\n                 options.add(value.getOptionName());\n             }\n             return options;"},{"sha":"ff7860a295dd32778c849dd824970ae35b324cf5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportCommand.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -33,10 +33,10 @@ public class ReportCommand extends AbstractCommand {\n     @Override\n     public void execute(final Input input) {\n         if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n+            input.setOption(ReportOptions.HELP.getOptionName());\n         }\n \n-        switch (Options.fromName(input.getOption())) {\n+        switch (ReportOptions.fromName(input.getOption())) {\n             case LIST:\n                 new ReportList(input).list();\n                 break;\n@@ -77,7 +77,7 @@ public String getHelpMessage() {\n         return reportResultManager.commandHelpMessage(getClass());\n     }\n \n-    private enum Options {\n+    public enum ReportOptions {\n \n         HELP(\"--help\"),\n         DETAILS(\"--details\"),\n@@ -92,7 +92,7 @@ private enum Options {\n \n         private final String optionName;\n \n-        Options(final String optionName) {\n+        ReportOptions(final String optionName) {\n             this.optionName = optionName;\n         }\n \n@@ -104,9 +104,9 @@ public boolean equalsOptionName(final String otherName) {\n             return (otherName == null) ? false : optionName.equals(otherName);\n         }\n \n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n+        public static ReportOptions fromName(final String name) {\n+            ReportOptions optionToReturn = HELP;\n+            for (final ReportOptions option : ReportOptions.values()) {\n                 if (option.equalsOptionName(name)) {\n                     optionToReturn = option;\n                 }\n@@ -116,7 +116,7 @@ public static Options fromName(final String name) {\n \n         public static List<String> toList() {\n             final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n+            for (final ReportOptions value : values()) {\n                 options.add(value.getOptionName());\n             }\n             return options;"},{"sha":"52974ac6b77681c9e77183e609f34312fc79ffdd","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -62,7 +62,7 @@ public String getHelpMessage() {\n         return roleResultManager.commandHelpMessage(getClass());\n     }\n \n-    private enum RoleOptions {\n+    public enum RoleOptions {\n \n         HELP(\"--help\"),\n         DETAILS(\"--details\"),"},{"sha":"ec0aff4d5fc566911c583326cf1b646b1c44a458","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -86,7 +86,7 @@ public String getHelpMessage() {\n         return userResultManager.commandHelpMessage(getClass());\n     }\n \n-    private enum UserOptions {\n+    public enum UserOptions {\n \n         HELP(\"--help\"),\n         DETAILS(\"--details\"),"},{"sha":"e686bdcc78a625b0ca71d44f56edd4d003c69b5c","filename":"fit/core-reference/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -137,6 +137,12 @@ under the License.\n       <version>${project.version}</version>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.client</groupId>\n+      <artifactId>syncope-client-cli</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n     <dependency>\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-test</artifactId>"},{"sha":"746459f274170fa3b429e7f8ae4baab9cf44c577","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/CLIITCase.java","status":"modified","additions":63,"deletions":27,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d433501b978ea120436de48c7dbcaf08f8d8e249/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d433501b978ea120436de48c7dbcaf08f8d8e249/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java?ref=d433501b978ea120436de48c7dbcaf08f8d8e249","patch":"@@ -33,6 +33,15 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.SystemUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.commands.connector.ConnectorCommand;\n+import org.apache.syncope.client.cli.commands.entitlement.EntitlementCommand;\n+import org.apache.syncope.client.cli.commands.group.GroupCommand;\n+import org.apache.syncope.client.cli.commands.install.InstallCommand;\n+import org.apache.syncope.client.cli.commands.policy.PolicyCommand;\n+import org.apache.syncope.client.cli.commands.report.ReportCommand;\n+import org.apache.syncope.client.cli.commands.role.RoleCommand;\n+import org.apache.syncope.client.cli.commands.user.UserCommand;\n import org.junit.BeforeClass;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -57,7 +66,9 @@ public static void install() {\n             PROCESS_BUILDER = new ProcessBuilder();\n             PROCESS_BUILDER.directory(workDir);\n \n-            PROCESS_BUILDER.command(getCommand(\"install\", \"--setup-debug\"));\n+            PROCESS_BUILDER.command(getCommand(\n+                    new InstallCommand().getClass().getAnnotation(Command.class).name(),\n+                    InstallCommand.Options.SETUP_DEBUG.getOptionName()));\n             Process process = PROCESS_BUILDER.start();\n             process.waitFor();\n \n@@ -94,9 +105,14 @@ public void runScriptWithoutOptions() {\n \n             String result = IOUtils.toString(process.getInputStream());\n             assertTrue(result.startsWith(\"\\nUsage: Main [options]\"));\n-            assertTrue(result.contains(\"entitlement --help\"));\n-            assertTrue(result.contains(\"group --help\"));\n-\n+            assertTrue(result.contains(\n+                    new EntitlementCommand().getClass().getAnnotation(Command.class).name()\n+                    + \" \"\n+                    + EntitlementCommand.EntitlementOptions.HELP.getOptionName()));\n+            assertTrue(result.contains(\n+                    new GroupCommand().getClass().getAnnotation(Command.class).name()\n+                    + \" \"\n+                    + GroupCommand.GroupOptions.HELP.getOptionName()));\n             process.destroy();\n         } catch (IOException e) {\n             fail(e.getMessage());\n@@ -106,17 +122,19 @@ public void runScriptWithoutOptions() {\n     @Test\n     public void entitlementCount() {\n         try {\n-            PROCESS_BUILDER.command(getCommand(\"entitlement\", \"--list\"));\n+            PROCESS_BUILDER.command(getCommand(\n+                    new EntitlementCommand().getClass().getAnnotation(Command.class).name(),\n+                    EntitlementCommand.EntitlementOptions.LIST.getOptionName()));\n             Process process = PROCESS_BUILDER.start();\n \n             long entitlements = IterableUtils.countMatches(IOUtils.readLines(process.getInputStream()),\n                     new Predicate<String>() {\n \n-                @Override\n-                public boolean evaluate(final String line) {\n-                    return line.startsWith(\"-\");\n-                }\n-            });\n+                        @Override\n+                        public boolean evaluate(final String line) {\n+                            return line.startsWith(\"-\");\n+                        }\n+                    });\n             assertEquals(syncopeService.info().getEntitlements().size(), entitlements);\n \n             process.destroy();\n@@ -128,17 +146,19 @@ public boolean evaluate(final String line) {\n     @Test\n     public void connectorCount() {\n         try {\n-            PROCESS_BUILDER.command(getCommand(\"connector\", \"--list-bundles\"));\n+            PROCESS_BUILDER.command(getCommand(\n+                    new ConnectorCommand().getClass().getAnnotation(Command.class).name(),\n+                    ConnectorCommand.ConnectorOptions.LIST_BUNDLES.getOptionName()));\n             Process process = PROCESS_BUILDER.start();\n \n             long bundles = IterableUtils.countMatches(IOUtils.readLines(process.getInputStream()),\n                     new Predicate<String>() {\n \n-                @Override\n-                public boolean evaluate(final String line) {\n-                    return line.startsWith(\" > BUNDLE NAME:\");\n-                }\n-            });\n+                        @Override\n+                        public boolean evaluate(final String line) {\n+                            return line.startsWith(\" > BUNDLE NAME:\");\n+                        }\n+                    });\n             assertEquals(connectorService.getBundles(null).size(), bundles);\n \n             process.destroy();\n@@ -155,30 +175,37 @@ public void userRead() {\n         final long userId4 = 4;\n         final long userId5 = 5;\n         try {\n-            PROCESS_BUILDER.command(getCommand(\"user\", \"--read-by-userid\", String.valueOf(userId1)));\n+            PROCESS_BUILDER.command(getCommand(\n+                    new UserCommand().getClass().getAnnotation(Command.class).name(),\n+                    UserCommand.UserOptions.READ_BY_ID.getOptionName(),\n+                    String.valueOf(userId1)));\n             Process process = PROCESS_BUILDER.start();\n             String result = IOUtils.toString(process.getInputStream());\n             assertTrue(result.contains(\"username: \" + userService.read(userId1).getUsername()));\n             process.destroy();\n \n             PROCESS_BUILDER.command(getCommand(\n-                    \"user\", \"--read-by-userid\", String.valueOf(userId1), String.valueOf(userId2),\n+                    new UserCommand().getClass().getAnnotation(Command.class).name(),\n+                    UserCommand.UserOptions.READ_BY_ID.getOptionName(),\n+                    String.valueOf(userId1), String.valueOf(userId2),\n                     String.valueOf(userId3), String.valueOf(userId4), String.valueOf(userId5)));\n             Process process2 = PROCESS_BUILDER.start();\n             long users = IterableUtils.countMatches(IOUtils.readLines(process2.getInputStream()),\n                     new Predicate<String>() {\n \n-                @Override\n-                public boolean evaluate(final String line) {\n-                    return line.startsWith(\" > USER ID:\");\n-                }\n-            });\n+                        @Override\n+                        public boolean evaluate(final String line) {\n+                            return line.startsWith(\" > USER ID:\");\n+                        }\n+                    });\n             assertEquals(5, users);\n \n             process2.destroy();\n \n             PROCESS_BUILDER.command(getCommand(\n-                    \"user\", \"--read-by-userid\", String.valueOf(userId1), String.valueOf(userId2),\n+                    new UserCommand().getClass().getAnnotation(Command.class).name(),\n+                    UserCommand.UserOptions.READ_BY_ID.getOptionName(),\n+                    String.valueOf(userId1), String.valueOf(userId2),\n                     String.valueOf(userId3), String.valueOf(userId4), String.valueOf(userId5)));\n             Process process3 = PROCESS_BUILDER.start();\n             String result3 = IOUtils.toString(process3.getInputStream());\n@@ -198,7 +225,10 @@ public boolean evaluate(final String line) {\n     public void roleRead() {\n         final String roleId = \"Search for realm evenTwo\";\n         try {\n-            PROCESS_BUILDER.command(getCommand(\"role\", \"--read\", roleId));\n+            PROCESS_BUILDER.command(getCommand(\n+                    new RoleCommand().getClass().getAnnotation(Command.class).name(),\n+                    RoleCommand.RoleOptions.READ.getOptionName(),\n+                    roleId));\n             final Process process = PROCESS_BUILDER.start();\n             final String result = IOUtils.toString(process.getInputStream());\n             assertTrue(result.contains(roleService.read(roleId).getEntitlements().iterator().next()));\n@@ -212,7 +242,10 @@ public void roleRead() {\n     @Test\n     public void reportNotExists() {\n         try {\n-            PROCESS_BUILDER.command(getCommand(\"report\", \"--read\", \"2\"));\n+            PROCESS_BUILDER.command(getCommand(\n+                    new ReportCommand().getClass().getAnnotation(Command.class).name(),\n+                    ReportCommand.ReportOptions.READ.getOptionName(),\n+                    \"2\"));\n             final Process process = PROCESS_BUILDER.start();\n             final String result = IOUtils.toString(process.getInputStream());\n             assertTrue(result.contains(\"- Report 2 doesn't exist\"));\n@@ -226,7 +259,10 @@ public void reportNotExists() {\n     @Test\n     public void policyError() {\n         try {\n-            PROCESS_BUILDER.command(getCommand(\"policy\", \"--read\", \"wrong\"));\n+            PROCESS_BUILDER.command(getCommand(\n+                    new PolicyCommand().getClass().getAnnotation(Command.class).name(),\n+                    PolicyCommand.PolicyOptions.READ.getOptionName(),\n+                    \"wrong\"));\n             final Process process = PROCESS_BUILDER.start();\n             final String result = IOUtils.toString(process.getInputStream());\n             assertTrue(result.contains("}]}