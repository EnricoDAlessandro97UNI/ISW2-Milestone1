{"sha":"599b090ad5714a21d443cfe1409c9d14881a3431","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU5OWIwOTBhZDU3MTRhMjFkNDQzY2ZlMTQwOWM5ZDE0ODgxYTM0MzE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-11-28T09:50:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-11-28T09:50:11Z"},"message":"[SYNCOPE-1511] Use AuditDAO.TABLE_NAME","tree":{"sha":"85e3ba25171b4124883f64114fe1d971f3951bf9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/85e3ba25171b4124883f64114fe1d971f3951bf9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/599b090ad5714a21d443cfe1409c9d14881a3431","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/599b090ad5714a21d443cfe1409c9d14881a3431","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/599b090ad5714a21d443cfe1409c9d14881a3431","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/599b090ad5714a21d443cfe1409c9d14881a3431/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"33e36297fe1ad7447a868d6f457fdca5231e6b4a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/33e36297fe1ad7447a868d6f457fdca5231e6b4a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/33e36297fe1ad7447a868d6f457fdca5231e6b4a"}],"stats":{"total":14,"additions":8,"deletions":6},"files":[{"sha":"17e357c8f0e07720de897aeae7465decee1746aa","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/LoggerLoader.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/599b090ad5714a21d443cfe1409c9d14881a3431/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/599b090ad5714a21d443cfe1409c9d14881a3431/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java?ref=599b090ad5714a21d443cfe1409c9d14881a3431","patch":"@@ -41,6 +41,7 @@\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n+import org.apache.syncope.core.persistence.api.dao.AuditDAO;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -97,7 +98,7 @@ public void load(final String domain, final DataSource datasource) {\n                     setIgnoreExceptions(false).\n                     setConnectionSource(new DataSourceConnectionSource(domain, datasource)).\n                     setBufferSize(0).\n-                    setTableName(\"SYNCOPEAUDIT\").\n+                    setTableName(AuditDAO.TABLE_NAME).\n                     setColumnConfigs(buildColumnConfigs(ctx)).\n                     setColumnMappings(new ColumnMapping[0]).\n                     build();\n@@ -155,9 +156,9 @@ public List<AuditAppender> auditAppenders(final String domain) throws BeansExcep\n     }\n \n     public static void addAppenderToContext(\n-        final LoggerContext ctx,\n-        final AuditAppender auditAppender,\n-        final LoggerConfig eventLogConf) {\n+            final LoggerContext ctx,\n+            final AuditAppender auditAppender,\n+            final LoggerConfig eventLogConf) {\n \n         Appender targetAppender = ctx.getConfiguration().getAppender(auditAppender.getTargetAppenderName());\n         if (targetAppender == null) {"},{"sha":"7b9c555d3e4b18aa81802e680730a961cfcf7335","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/AuditReportlet.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/599b090ad5714a21d443cfe1409c9d14881a3431/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAuditReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/599b090ad5714a21d443cfe1409c9d14881a3431/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAuditReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FAuditReportlet.java?ref=599b090ad5714a21d443cfe1409c9d14881a3431","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.common.lib.report.AuditReportletConf;\n import org.apache.syncope.common.lib.report.ReportletConf;\n import org.apache.syncope.core.persistence.api.DomainHolder;\n+import org.apache.syncope.core.persistence.api.dao.AuditDAO;\n import org.apache.syncope.core.persistence.api.entity.AuditEntry;\n import org.apache.syncope.core.provisioning.api.AuditEntryImpl;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n@@ -48,12 +49,12 @@ public class AuditReportlet extends AbstractReportlet {\n     private DataSource datasource;\n \n     private void doExtractConf(final ContentHandler handler, final AtomicReference<String> status) throws SAXException {\n-        status.set(\"Fetching \" + conf.getSize() + \" rows from the SYNCOPEAUDIT table\");\n+        status.set(\"Fetching \" + conf.getSize() + \" rows from the \" + AuditDAO.TABLE_NAME + \" table\");\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(datasource);\n         jdbcTemplate.setMaxRows(conf.getSize());\n         List<Map<String, Object>> rows = jdbcTemplate.\n-                queryForList(\"SELECT * FROM SYNCOPEAUDIT ORDER BY EVENT_DATE DESC\");\n+                queryForList(\"SELECT * FROM \" + AuditDAO.TABLE_NAME + \" ORDER BY EVENT_DATE DESC\");\n \n         handler.startElement(\"\", \"\", \"events\", null);\n         AttributesImpl atts = new AttributesImpl();"}]}