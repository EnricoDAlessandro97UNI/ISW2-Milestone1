{"sha":"e851b2818d72137f5e049d4b810504f51d6a0d70","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU4NTFiMjgxOGQ3MjEzN2Y1ZTA0OWQ0YjgxMDUwNGY1MWQ2YTBkNzA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-23T12:26:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-23T12:27:01Z"},"message":"[SYNCOPE-1387] Clearing up calls between link() and update()","tree":{"sha":"6fe88fc22a3fd5bf54433f9c95fd90f299b1b63b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6fe88fc22a3fd5bf54433f9c95fd90f299b1b63b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e851b2818d72137f5e049d4b810504f51d6a0d70","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e851b2818d72137f5e049d4b810504f51d6a0d70","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e851b2818d72137f5e049d4b810504f51d6a0d70","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e851b2818d72137f5e049d4b810504f51d6a0d70/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d9a879af89a98fc170ea211b0e2f769ddb8c8a5c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d9a879af89a98fc170ea211b0e2f769ddb8c8a5c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d9a879af89a98fc170ea211b0e2f769ddb8c8a5c"}],"stats":{"total":28,"additions":14,"deletions":14},"files":[{"sha":"1e1fdd23028cb91fb61265d903de9fc7555b59bf","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e851b2818d72137f5e049d4b810504f51d6a0d70/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e851b2818d72137f5e049d4b810504f51d6a0d70/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=e851b2818d72137f5e049d4b810504f51d6a0d70","patch":"@@ -274,7 +274,7 @@ private void create(\n         finalize(operation, resultStatus, null, output, delta);\n     }\n \n-    private List<ProvisioningReport> update(final SyncDelta delta, final List<String> keys)\n+    private List<ProvisioningReport> update(final SyncDelta delta, final List<String> keys, final boolean inLink)\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformUpdate()) {\n@@ -314,8 +314,10 @@ private List<ProvisioningReport> update(final SyncDelta delta, final List<String\n                     output = null;\n                 } else {\n                     try {\n-                        for (PullActions action : profile.getActions()) {\n-                            action.beforeUpdate(profile, delta, before, null);\n+                        if (!inLink) {\n+                            for (PullActions action : profile.getActions()) {\n+                                action.beforeUpdate(profile, delta, before, null);\n+                            }\n                         }\n \n                         PropagationByResource propByRes = binder.update(realm, before);\n@@ -414,15 +416,17 @@ private List<ProvisioningReport> deprovision(final SyncDelta delta, final List<S\n                         propByRes.add(ResourceOperation.DELETE, profile.getTask().getResource().getKey());\n                         taskExecutor.execute(propagationManager.createTasks(realm, propByRes, null), false);\n \n+                        RealmTO realmTO;\n                         if (unlink) {\n                             realm.getResources().remove(profile.getTask().getResource());\n-                            output = binder.getRealmTO(realmDAO.save(realm), true);\n+                            realmTO = binder.getRealmTO(realmDAO.save(realm), true);\n                         } else {\n-                            output = binder.getRealmTO(realm, true);\n+                            realmTO = binder.getRealmTO(realm, true);\n                         }\n+                        output = realmTO;\n \n                         for (PullActions action : profile.getActions()) {\n-                            action.after(profile, delta, RealmTO.class.cast(output), result);\n+                            action.after(profile, delta, realmTO, result);\n                         }\n \n                         resultStatus = Result.SUCCESS;\n@@ -510,11 +514,7 @@ private List<ProvisioningReport> link(final SyncDelta delta, final List<String>\n                         } else {\n                             realm.add(profile.getTask().getResource());\n                         }\n-                        output = update(delta, Collections.singletonList(key));\n-\n-                        for (PullActions action : profile.getActions()) {\n-                            action.after(profile, delta, RealmTO.class.cast(output), result);\n-                        }\n+                        output = update(delta, Collections.singletonList(key), true);\n \n                         resultStatus = Result.SUCCESS;\n \n@@ -687,8 +687,8 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n         if (keys.size() > 1) {\n             switch (profile.getConflictResolutionAction()) {\n                 case IGNORE:\n-                        throw new IgnoreProvisionException(\"More than one match found for \"\n-                                + processed.getObject().getUid().getUidValue() + \": \" + keys);\n+                    throw new IgnoreProvisionException(\"More than one match found for \"\n+                            + processed.getObject().getUid().getUidValue() + \": \" + keys);\n \n                 case FIRSTMATCH:\n                     keys = keys.subList(0, 1);\n@@ -725,7 +725,7 @@ private void doHandle(final SyncDelta delta, final OrgUnit orgUnit) throws JobEx\n                 } else {\n                     switch (profile.getTask().getMatchingRule()) {\n                         case UPDATE:\n-                            profile.getResults().addAll(update(processed, keys));\n+                            profile.getResults().addAll(update(processed, keys, false));\n                             break;\n \n                         case DEPROVISION:"}]}