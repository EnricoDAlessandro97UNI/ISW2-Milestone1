{"sha":"628866065eab8e4445e5d1c0b191b536586d234a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjYyODg2NjA2NWVhYjhlNDQ0NWU1ZDFjMGIxOTFiNTM2NTg2ZDIzNGE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-04-26T13:32:39Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-04-26T13:32:39Z"},"message":"[SYNCOPE-1458] Docker verified working","tree":{"sha":"c995fb7f5bed151ea2a279c4dfd7e2275f287727","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c995fb7f5bed151ea2a279c4dfd7e2275f287727"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/628866065eab8e4445e5d1c0b191b536586d234a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/628866065eab8e4445e5d1c0b191b536586d234a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/628866065eab8e4445e5d1c0b191b536586d234a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/628866065eab8e4445e5d1c0b191b536586d234a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9957701e964409247e284ed0262d5afbeb965d80","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9957701e964409247e284ed0262d5afbeb965d80","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9957701e964409247e284ed0262d5afbeb965d80"}],"stats":{"total":438,"additions":384,"deletions":54},"files":[{"sha":"507ccbc0b7b2acba7fc1b8187066ccaa9bbd85ca","filename":"common/keymaster/client-zookeeper/src/main/java/org/apache/syncope/common/keymaster/client/zookeper/ZookeeperKeymasterClientContext.java","status":"modified","additions":23,"deletions":16,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperKeymasterClientContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperKeymasterClientContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fkeymaster%2Fclient-zookeeper%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fkeymaster%2Fclient%2Fzookeper%2FZookeeperKeymasterClientContext.java?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -22,6 +22,7 @@\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n import javax.security.auth.login.AppConfigurationEntry;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.curator.framework.CuratorFramework;\n import org.apache.curator.framework.CuratorFrameworkFactory;\n import org.apache.curator.framework.api.ACLProvider;\n@@ -79,24 +80,30 @@ public AppConfigurationEntry[] getAppConfigurationEntry(final String name) {\n     @ConditionalOnExpression(\"#{'${keymaster.address}' matches '^(?!http).+'}\")\n     @Bean\n     public CuratorFramework curatorFramework() throws InterruptedException {\n-        javax.security.auth.login.Configuration.setConfiguration(createJaasConfig());\n+        if (StringUtils.isNotBlank(username) && StringUtils.isNotBlank(password)) {\n+            javax.security.auth.login.Configuration.setConfiguration(createJaasConfig());\n+        }\n \n-        CuratorFramework client = CuratorFrameworkFactory.builder().\n+        CuratorFrameworkFactory.Builder clientBuilder = CuratorFrameworkFactory.builder().\n                 connectString(address).\n-                retryPolicy(new ExponentialBackoffRetry(baseSleepTimeMs, maxRetries)).\n-                authorization(\"digest\", (username).getBytes()).\n-                aclProvider(new ACLProvider() {\n-\n-                    @Override\n-                    public List<ACL> getDefaultAcl() {\n-                        return ZooDefs.Ids.CREATOR_ALL_ACL;\n-                    }\n-\n-                    @Override\n-                    public List<ACL> getAclForPath(final String path) {\n-                        return ZooDefs.Ids.CREATOR_ALL_ACL;\n-                    }\n-                }).build();\n+                retryPolicy(new ExponentialBackoffRetry(baseSleepTimeMs, maxRetries));\n+        if (StringUtils.isNotBlank(username)) {\n+            clientBuilder.\n+                    authorization(\"digest\", (username).getBytes()).\n+                    aclProvider(new ACLProvider() {\n+\n+                        @Override\n+                        public List<ACL> getDefaultAcl() {\n+                            return ZooDefs.Ids.CREATOR_ALL_ACL;\n+                        }\n+\n+                        @Override\n+                        public List<ACL> getAclForPath(final String path) {\n+                            return ZooDefs.Ids.CREATOR_ALL_ACL;\n+                        }\n+                    });\n+        }\n+        CuratorFramework client = clientBuilder.build();\n         client.start();\n         client.blockUntilConnected(3, TimeUnit.SECONDS);\n "},{"sha":"0e4851a7cc2e9c618f6b6ca713bf4cb0d485ad53","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthDataAccessor.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -31,7 +31,6 @@\n import java.util.stream.Collectors;\n import javax.annotation.Resource;\n import org.apache.commons.lang3.BooleanUtils;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -67,7 +66,6 @@\n import org.springframework.security.authentication.AuthenticationServiceException;\n import org.springframework.security.authentication.DisabledException;\n import org.springframework.security.core.Authentication;\n-import org.springframework.security.core.userdetails.UsernameNotFoundException;\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n@@ -237,7 +235,7 @@ public Pair<User, Boolean> authenticate(final String domain, final Authenticatio\n             }\n         }\n \n-        return ImmutablePair.of(user, authenticated);\n+        return Pair.of(user, authenticated);\n     }\n \n     protected boolean authenticate(final User user, final String password) {\n@@ -360,10 +358,10 @@ public Set<SyncopeGrantedAuthority> getAuthorities(final String username) {\n         } else {\n             User user = userDAO.findByUsername(username);\n             if (user == null) {\n-                throw new UsernameNotFoundException(\"Could not find any user with id \" + username);\n+                authorities = Collections.emptySet();\n+            } else {\n+                authorities = getUserAuthorities(user);\n             }\n-\n-            authorities = getUserAuthorities(user);\n         }\n \n         return authorities;"},{"sha":"a805b45a6c1895b4ba2b9d4d9e847d6efeabf4e8","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/UsernamePasswordAuthenticationProvider.java","status":"modified","additions":45,"deletions":32,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FUsernamePasswordAuthenticationProvider.java?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.spring.security;\n \n import javax.annotation.Resource;\n+import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AuditElements;\n@@ -50,7 +51,7 @@ public class UsernamePasswordAuthenticationProvider implements AuthenticationPro\n     protected UserProvisioningManager provisioningManager;\n \n     @Autowired\n-    private DefaultCredentialChecker credentialChecker;\n+    protected DefaultCredentialChecker credentialChecker;\n \n     @Resource(name = \"adminUser\")\n     protected String adminUser;\n@@ -90,43 +91,42 @@ public void setAnonymousKey(final String anonymousKey) {\n \n     @Override\n     public Authentication authenticate(final Authentication authentication) {\n-        String domainKey = SyncopeAuthenticationDetails.class.cast(authentication.getDetails()).getDomain();\n+        String domain = SyncopeAuthenticationDetails.class.cast(authentication.getDetails()).getDomain();\n \n-        final String[] username = new String[1];\n-        Boolean authenticated;\n+        String[] username = new String[1];\n+        boolean authenticated;\n \n         if (anonymousUser.equals(authentication.getName())) {\n             username[0] = anonymousUser;\n             credentialChecker.checkIsDefaultAnonymousKeyInUse();\n             authenticated = authentication.getCredentials().toString().equals(anonymousKey);\n         } else if (adminUser.equals(authentication.getName())) {\n             username[0] = adminUser;\n-            if (SyncopeConstants.MASTER_DOMAIN.equals(domainKey)) {\n+            if (SyncopeConstants.MASTER_DOMAIN.equals(domain)) {\n                 credentialChecker.checkIsDefaultAdminPasswordInUse();\n                 authenticated = ENCRYPTOR.verify(\n                         authentication.getCredentials().toString(),\n                         CipherAlgorithm.valueOf(adminPasswordAlgorithm),\n                         adminPassword);\n             } else {\n-                final String domainToFind = domainKey;\n                 authenticated = AuthContextUtils.callAsAdmin(SyncopeConstants.MASTER_DOMAIN, () -> {\n-                    Domain domain = dataAccessor.findDomain(domainToFind);\n+                    Domain domainEntity = dataAccessor.findDomain(domain);\n \n                     return ENCRYPTOR.verify(\n                             authentication.getCredentials().toString(),\n-                            domain.getAdminCipherAlgorithm(),\n-                            domain.getAdminPwd());\n+                            domainEntity.getAdminCipherAlgorithm(),\n+                            domainEntity.getAdminPwd());\n                 });\n             }\n         } else {\n-            Pair<User, Boolean> authResult = AuthContextUtils.callAsAdmin(domainKey,\n-                    () -> dataAccessor.authenticate(domainKey, authentication));\n-            authenticated = authResult.getValue();\n+            Pair<User, Boolean> authResult = AuthContextUtils.callAsAdmin(domain,\n+                    () -> dataAccessor.authenticate(domain, authentication));\n+            authenticated = BooleanUtils.toBoolean(authResult.getRight());\n             if (authResult.getLeft() != null && authResult.getRight() != null) {\n                 username[0] = authResult.getLeft().getUsername();\n \n                 if (!authResult.getRight()) {\n-                    AuthContextUtils.callAsAdmin(domainKey, () -> {\n+                    AuthContextUtils.callAsAdmin(domain, () -> {\n                         provisioningManager.internalSuspend(authResult.getLeft().getKey());\n                         return null;\n                     });\n@@ -137,45 +137,58 @@ public Authentication authenticate(final Authentication authentication) {\n             username[0] = authentication.getPrincipal().toString();\n         }\n \n-        final boolean isAuthenticated = authenticated != null && authenticated;\n+        return finalizeAuthentication(authenticated, domain, username[0], authentication);\n+    }\n+\n+    protected Authentication finalizeAuthentication(\n+            final boolean authenticated,\n+            final String domain,\n+            final String username,\n+            final Authentication authentication) {\n+\n         UsernamePasswordAuthenticationToken token;\n-        if (isAuthenticated) {\n-            token = AuthContextUtils.callAsAdmin(domainKey, () -> {\n-                UsernamePasswordAuthenticationToken token1 = new UsernamePasswordAuthenticationToken(\n-                        username[0],\n+        if (authenticated) {\n+            token = AuthContextUtils.callAsAdmin(domain, () -> {\n+                UsernamePasswordAuthenticationToken upat = new UsernamePasswordAuthenticationToken(\n+                        username,\n                         null,\n-                        dataAccessor.getAuthorities(username[0]));\n-                token1.setDetails(authentication.getDetails());\n+                        dataAccessor.getAuthorities(username));\n+                upat.setDetails(authentication.getDetails());\n                 dataAccessor.audit(\n-                        username[0],\n+                        username,\n                         AuditElements.EventCategoryType.LOGIC,\n-                        AuditElements.AUTHENTICATION_CATEGORY, null,\n-                        AuditElements.LOGIN_EVENT, Result.SUCCESS, null, isAuthenticated, authentication,\n-                        \"Successfully authenticated, with entitlements: \" + token1.getAuthorities());\n-                return token1;\n+                        AuditElements.AUTHENTICATION_CATEGORY,\n+                        null,\n+                        AuditElements.LOGIN_EVENT,\n+                        Result.SUCCESS,\n+                        null,\n+                        authenticated,\n+                        authentication,\n+                        \"User \" + username + \" successfully authenticated with entitlements: \" + upat.getAuthorities());\n+                return upat;\n             });\n \n             LOG.debug(\"User {} successfully authenticated, with entitlements {}\",\n-                    username[0], token.getAuthorities());\n+                    username, token.getAuthorities());\n         } else {\n-            AuthContextUtils.callAsAdmin(domainKey, () -> {\n+            AuthContextUtils.callAsAdmin(domain, () -> {\n                 dataAccessor.audit(\n-                        username[0],\n+                        username,\n                         AuditElements.EventCategoryType.LOGIC,\n                         AuditElements.AUTHENTICATION_CATEGORY,\n                         null,\n                         AuditElements.LOGIN_EVENT,\n                         Result.FAILURE,\n                         null,\n-                        isAuthenticated,\n+                        authenticated,\n                         authentication,\n-                        \"User \" + username[0] + \" not authenticated\");\n+                        \"User \" + username + \" not authenticated\");\n                 return null;\n             });\n \n-            LOG.debug(\"User {} not authenticated\", username[0]);\n+            LOG.debug(\"User {} not authenticated\", username);\n \n-            throw new BadCredentialsException(\"User \" + username[0] + \" not authenticated\");\n+            throw new BadCredentialsException(\"User \" + username + \" not authenticated\");\n         }\n \n         return token;"},{"sha":"29e9e5c4be66c835ba5540c98522330b511beaa4","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/WebSecurityContext.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.spring.security;\n \n import javax.annotation.Resource;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.context.annotation.Bean;\n import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n@@ -60,6 +61,7 @@ public void configure(final WebSecurity web) throws Exception {\n         web.httpFirewall(allowUrlEncodedSlashHttpFirewall());\n     }\n \n+    @ConditionalOnMissingBean\n     @Bean\n     public UsernamePasswordAuthenticationProvider usernamePasswordAuthenticationProvider() {\n         return new UsernamePasswordAuthenticationProvider();"},{"sha":"5016a0f70d96ea72403b83f522bea2eca51038d3","filename":"docker/console/pom.xml","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fpom.xml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -49,6 +49,17 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.common.keymaster</groupId>\n+      <artifactId>syncope-common-keymaster-client-zookeeper</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.ext.flowable</groupId>\n       <artifactId>syncope-ext-flowable-client-console</artifactId>"},{"sha":"14e8ca6cf0494f0e8e28d69cdfcd1d39b36603d5","filename":"docker/console/src/main/resources/keymaster.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+keymaster.address=${KEYMASTER_ADDRESS}\n+keymaster.username=${KEYMASTER_USERNAME}\n+keymaster.password=${KEYMASTER_PASSWORD}"},{"sha":"b58170c54e22c1d3c4c669700b8caba37d4cecf8","filename":"docker/core/pom.xml","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fpom.xml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -53,6 +53,27 @@ under the License.\n       <artifactId>syncope-core-idm-rest-cxf</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.core.am</groupId>\n+      <artifactId>syncope-core-am-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+      <artifactId>syncope-ext-self-keymaster-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+      <artifactId>syncope-ext-self-keymaster-persistence-jpa</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.common.keymaster</groupId>\n+      <artifactId>syncope-common-keymaster-client-zookeeper</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n \n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>"},{"sha":"14e8ca6cf0494f0e8e28d69cdfcd1d39b36603d5","filename":"docker/core/src/main/resources/keymaster.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+keymaster.address=${KEYMASTER_ADDRESS}\n+keymaster.username=${KEYMASTER_USERNAME}\n+keymaster.password=${KEYMASTER_PASSWORD}"},{"sha":"e58ab489f360e426f0552ab03860fef32e0cee88","filename":"docker/enduser/pom.xml","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fpom.xml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -49,6 +49,17 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.self-keymaster</groupId>\n+      <artifactId>syncope-ext-self-keymaster-client</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.common.keymaster</groupId>\n+      <artifactId>syncope-common-keymaster-client-zookeeper</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.ext.flowable</groupId>\n       <artifactId>syncope-ext-flowable-client-enduser</artifactId>"},{"sha":"14e8ca6cf0494f0e8e28d69cdfcd1d39b36603d5","filename":"docker/enduser/src/main/resources/keymaster.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fkeymaster.properties?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+keymaster.address=${KEYMASTER_ADDRESS}\n+keymaster.username=${KEYMASTER_USERNAME}\n+keymaster.password=${KEYMASTER_PASSWORD}"},{"sha":"1c08942449ea6ca5c5a26155e2e15600ce8dd611","filename":"docker/src/main/resources/docker-compose/docker-compose-ha.yml","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ha.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ha.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-ha.yml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -44,6 +44,9 @@ services:\n        DB_POOL_MAX: 10\n        DB_POOL_MIN: 2\n        OPENJPA_REMOTE_COMMIT: tcp(Addresses=syncope1;syncope2)\n+       KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope2:\n      depends_on:\n@@ -60,6 +63,9 @@ services:\n        DB_POOL_MAX: 10\n        DB_POOL_MIN: 2\n        OPENJPA_REMOTE_COMMIT: tcp(Addresses=syncope1;syncope2)\n+       KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-console:\n      depends_on:\n@@ -72,6 +78,9 @@ services:\n        CORE_SCHEME: http\n        CORE_HOST: syncope1\n        CORE_PORT: 8080\n+       KEYMASTER_ADDRESS: http://syncope1:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-enduser:\n      depends_on:\n@@ -85,3 +94,6 @@ services:\n        CORE_HOST: syncope1\n        CORE_PORT: 8080\n        DOMAIN: Master\n+       KEYMASTER_ADDRESS: http://syncope1:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}"},{"sha":"11ad7c1a1f38e45ffa6393e46654678ce01a3603","filename":"docker/src/main/resources/docker-compose/docker-compose-mariadb.yml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mariadb.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mariadb.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mariadb.yml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -44,6 +44,9 @@ services:\n        DB_POOL_MAX: 10\n        DB_POOL_MIN: 2\n        OPENJPA_REMOTE_COMMIT: sjvm\n+       KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-console:\n      depends_on:\n@@ -56,6 +59,9 @@ services:\n        CORE_SCHEME: http\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-enduser:\n      depends_on:\n@@ -69,3 +75,6 @@ services:\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n        DOMAIN: Master\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}"},{"sha":"daeed50c6ab96fac0c4bd243ce4f62d8b737a86c","filename":"docker/src/main/resources/docker-compose/docker-compose-mssql.yml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mssql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mssql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mssql.yml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -46,6 +46,9 @@ services:\n        DB_POOL_MAX: 10\n        DB_POOL_MIN: 2\n        OPENJPA_REMOTE_COMMIT: sjvm\n+       KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-console:\n      depends_on:\n@@ -58,6 +61,9 @@ services:\n        CORE_SCHEME: http\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-enduser:\n      depends_on:\n@@ -71,3 +77,6 @@ services:\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n        DOMAIN: Master\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}"},{"sha":"4c4abb9756eda4dcc5b8b57a6a831e50c1611086","filename":"docker/src/main/resources/docker-compose/docker-compose-myjson.yml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-myjson.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-myjson.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-myjson.yml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -44,6 +44,9 @@ services:\n        DB_POOL_MAX: 10\n        DB_POOL_MIN: 2\n        OPENJPA_REMOTE_COMMIT: sjvm\n+       KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-console:\n      depends_on:\n@@ -56,6 +59,9 @@ services:\n        CORE_SCHEME: http\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-enduser:\n      depends_on:\n@@ -69,3 +75,6 @@ services:\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n        DOMAIN: Master\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}"},{"sha":"510440ad51e4064894673a2680a2bde0926f356e","filename":"docker/src/main/resources/docker-compose/docker-compose-mysql.yml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mysql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mysql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-mysql.yml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -44,6 +44,9 @@ services:\n        DB_POOL_MAX: 10\n        DB_POOL_MIN: 2\n        OPENJPA_REMOTE_COMMIT: sjvm\n+       KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-console:\n      depends_on:\n@@ -56,6 +59,9 @@ services:\n        CORE_SCHEME: http\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-enduser:\n      depends_on:\n@@ -69,3 +75,6 @@ services:\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n        DOMAIN: Master\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}"},{"sha":"745931e9bd97078d16ef5f0788b3afb70d88043d","filename":"docker/src/main/resources/docker-compose/docker-compose-pgjsonb.yml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -43,6 +43,9 @@ services:\n        DB_POOL_MAX: 10\n        DB_POOL_MIN: 2\n        OPENJPA_REMOTE_COMMIT: sjvm\n+       KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-console:\n      depends_on:\n@@ -55,6 +58,9 @@ services:\n        CORE_SCHEME: http\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-enduser:\n      depends_on:\n@@ -68,3 +74,6 @@ services:\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n        DOMAIN: Master\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}"},{"sha":"3509caaf703b2f949c9aed1f0ba76e3b18a3b5ca","filename":"docker/src/main/resources/docker-compose/docker-compose-postgresql.yml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-postgresql.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-postgresql.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-postgresql.yml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -43,6 +43,9 @@ services:\n        DB_POOL_MAX: 10\n        DB_POOL_MIN: 2\n        OPENJPA_REMOTE_COMMIT: sjvm\n+       KEYMASTER_ADDRESS: http://localhost:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-console:\n      depends_on:\n@@ -55,6 +58,9 @@ services:\n        CORE_SCHEME: http\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}\n \n    syncope-enduser:\n      depends_on:\n@@ -68,3 +74,6 @@ services:\n        CORE_HOST: syncope\n        CORE_PORT: 8080\n        DOMAIN: Master\n+       KEYMASTER_ADDRESS: http://syncope:8080/syncope/rest/keymaster\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD}"},{"sha":"a4be37a80050732a49b10e012b2f10ed263180e0","filename":"docker/src/main/resources/docker-compose/docker-compose-zookeeper.yml","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-zookeeper.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-zookeeper.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-zookeeper.yml?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -0,0 +1,86 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# Full deployment (Core, Console, Enduser) on PostgreSQL, with Keymaster on Zookeeper\n+\n+# Zookeeper is configured without JAAS, hence empty KEYMASTER_USERNAME / KEYMASTER_PASSWORD\n+# are passed to other containers\n+\n+version: '3.3'\n+\n+services:\n+   keymaster:\n+     image: zookeeper:3.4.14\n+     restart: always\n+\n+   db:\n+     image: postgres:11.2\n+     restart: always\n+     environment:\n+       POSTGRES_DB: syncope\n+       POSTGRES_USER: syncope\n+       POSTGRES_PASSWORD: syncope\n+\n+   syncope:\n+     depends_on:\n+       - db\n+     image: apache/syncope:${SYNCOPE_VERSION}\n+     ports:\n+       - \"18080:8080\"\n+     restart: always\n+     environment:\n+       DBMS: postgresql\n+       DB_URL: jdbc:postgresql://db:5432/syncope\n+       DB_USER: syncope\n+       DB_PASSWORD: syncope\n+       DB_POOL_MAX: 10\n+       DB_POOL_MIN: 2\n+       OPENJPA_REMOTE_COMMIT: sjvm\n+       KEYMASTER_ADDRESS: keymaster:2181\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME:-}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD:-}\n+\n+   syncope-console:\n+     depends_on:\n+       - syncope\n+     image: apache/syncope-console:${SYNCOPE_VERSION}\n+     ports:\n+       - \"28080:8080\"\n+     restart: always\n+     environment:\n+       CORE_SCHEME: http\n+       CORE_HOST: syncope\n+       CORE_PORT: 8080\n+       KEYMASTER_ADDRESS: keymaster:2181\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME:-}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD:-}\n+\n+   syncope-enduser:\n+     depends_on:\n+       - syncope\n+     image: apache/syncope-enduser:${SYNCOPE_VERSION}\n+     ports:\n+       - \"38080:8080\"\n+     restart: always\n+     environment:\n+       CORE_SCHEME: http\n+       CORE_HOST: syncope\n+       CORE_PORT: 8080\n+       DOMAIN: Master\n+       KEYMASTER_ADDRESS: keymaster:2181\n+       KEYMASTER_USERNAME: ${KEYMASTER_USERNAME:-}\n+       KEYMASTER_PASSWORD: ${KEYMASTER_PASSWORD:-}"},{"sha":"4b16893772e27cb26aa269917087d3ea549bd737","filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/SelfKeymasterContext.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2FSelfKeymasterContext.java?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -31,8 +31,12 @@\n import org.apache.cxf.transport.common.gzip.GZIPInInterceptor;\n import org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n+import org.apache.syncope.core.spring.security.UsernamePasswordAuthenticationProvider;\n+import org.apache.syncope.core.spring.security.WebSecurityContext;\n import org.apache.syncope.ext.self.keymaster.cxf.client.SelfKeymasterInternalConfParamOps;\n+import org.apache.syncope.ext.self.keymaster.cxf.security.SelfKeymasterUsernamePasswordAuthenticationProvider;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n@@ -44,6 +48,7 @@\n @PropertySource(value = \"file:${conf.directory}/keymaster.properties\", ignoreResourceNotFound = true)\n @ComponentScan(\"org.apache.syncope.ext.self.keymaster.cxf.service\")\n @Configuration\n+@AutoConfigureBefore(WebSecurityContext.class)\n @ConditionalOnExpression(\"'${keymaster.address}' matches '^http.+'\")\n public class SelfKeymasterContext {\n \n@@ -108,6 +113,11 @@ public Server selfKeymasterContainer() {\n         return selfKeymasterContainer.create();\n     }\n \n+    @Bean\n+    public UsernamePasswordAuthenticationProvider usernamePasswordAuthenticationProvider() {\n+        return new SelfKeymasterUsernamePasswordAuthenticationProvider();\n+    }\n+\n     @Bean\n     public ConfParamOps internalConfParamOps() {\n         return new SelfKeymasterInternalConfParamOps();"},{"sha":"20683264b8013db21363384a2d7ea0653d10ed06","filename":"ext/self-keymaster/rest-cxf/src/main/java/org/apache/syncope/ext/self/keymaster/cxf/security/SelfKeymasterUsernamePasswordAuthenticationProvider.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/628866065eab8e4445e5d1c0b191b536586d234a/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fsecurity%2FSelfKeymasterUsernamePasswordAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/628866065eab8e4445e5d1c0b191b536586d234a/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fsecurity%2FSelfKeymasterUsernamePasswordAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fself-keymaster%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fself%2Fkeymaster%2Fcxf%2Fsecurity%2FSelfKeymasterUsernamePasswordAuthenticationProvider.java?ref=628866065eab8e4445e5d1c0b191b536586d234a","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.self.keymaster.cxf.security;\n+\n+import org.apache.syncope.core.spring.security.SyncopeAuthenticationDetails;\n+import org.apache.syncope.core.spring.security.UsernamePasswordAuthenticationProvider;\n+import org.springframework.beans.factory.annotation.Configurable;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.security.core.Authentication;\n+\n+@Configurable\n+public class SelfKeymasterUsernamePasswordAuthenticationProvider extends UsernamePasswordAuthenticationProvider {\n+\n+    @Value(\"${keymaster.username}\")\n+    private String keymasterUsername;\n+\n+    @Value(\"${keymaster.password}\")\n+    private String keymasterPassword;\n+\n+    @Override\n+    public Authentication authenticate(final Authentication authentication) {\n+        if (keymasterUsername.equals(authentication.getName())) {\n+            return finalizeAuthentication(\n+                    authentication.getCredentials().toString().equals(keymasterPassword),\n+                    SyncopeAuthenticationDetails.class.cast(authentication.getDetails()).getDomain(),\n+                    keymasterUsername,\n+                    authentication);\n+        }\n+\n+        return super.authenticate(authentication);\n+    }\n+}"}]}