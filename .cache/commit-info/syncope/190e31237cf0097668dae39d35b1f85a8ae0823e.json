{"sha":"190e31237cf0097668dae39d35b1f85a8ae0823e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE5MGUzMTIzN2NmMDA5NzY2OGRhZTM5ZDM1YjFmODVhOGFlMDgyM2U=","commit":{"author":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-15T13:10:48Z"},"committer":{"name":"Andrei Shakirin","email":"ashakirin@apache.org","date":"2013-01-15T13:10:48Z"},"message":"[SYNCOPE-259] Fixed policy service list method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1433389 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"23c25913fe61ff80977dd0c1bd72e3507ef1213c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/23c25913fe61ff80977dd0c1bd72e3507ef1213c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/190e31237cf0097668dae39d35b1f85a8ae0823e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/190e31237cf0097668dae39d35b1f85a8ae0823e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/190e31237cf0097668dae39d35b1f85a8ae0823e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/190e31237cf0097668dae39d35b1f85a8ae0823e/comments","author":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"committer":{"login":"ashakirin-apache","id":77056600,"node_id":"MDQ6VXNlcjc3MDU2NjAw","avatar_url":"https://avatars.githubusercontent.com/u/77056600?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin-apache","html_url":"https://github.com/ashakirin-apache","followers_url":"https://api.github.com/users/ashakirin-apache/followers","following_url":"https://api.github.com/users/ashakirin-apache/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin-apache/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin-apache/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin-apache/subscriptions","organizations_url":"https://api.github.com/users/ashakirin-apache/orgs","repos_url":"https://api.github.com/users/ashakirin-apache/repos","events_url":"https://api.github.com/users/ashakirin-apache/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin-apache/received_events","type":"User","site_admin":false},"parents":[{"sha":"72e4d9d7ee46bbe48411b22f7776f4cec128abf4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/72e4d9d7ee46bbe48411b22f7776f4cec128abf4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/72e4d9d7ee46bbe48411b22f7776f4cec128abf4"}],"stats":{"total":50,"additions":34,"deletions":16},"files":[{"sha":"4ca82867ccb65c35894000bbf677ec4d07a4835a","filename":"client/src/main/java/org/apache/syncope/services/proxy/PolicyServiceProxy.java","status":"modified","additions":33,"deletions":15,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/190e31237cf0097668dae39d35b1f85a8ae0823e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FPolicyServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/190e31237cf0097668dae39d35b1f85a8ae0823e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FPolicyServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FPolicyServiceProxy.java?ref=190e31237cf0097668dae39d35b1f85a8ae0823e","patch":"@@ -18,6 +18,7 @@\n  */\r\n package org.apache.syncope.services.proxy;\r\n \r\n+import java.util.Arrays;\r\n import java.util.List;\r\n \r\n import org.apache.syncope.client.to.AccountPolicyTO;\r\n@@ -37,7 +38,7 @@ public PolicyServiceProxy(String baseUrl, SpringRestTemplate callback) {\n     public <T extends PolicyTO> T create(PolicyType type, final T policyTO) {\r\n         @SuppressWarnings(\"unchecked\")\r\n         T result = (T) getRestTemplate().postForObject(baseUrl + \"policy/{kind}/create\", policyTO, policyTO.getClass(),\r\n-                typeToUrl(policyTO.getType()));\r\n+        \t\ttypeToUrl(policyTO.getType()));\r\n         return result;\r\n     }\r\n \r\n@@ -49,10 +50,27 @@ public <T extends PolicyTO> T delete(PolicyType type, Long policyId) {\n     }\r\n \r\n     @Override\r\n+    @SuppressWarnings(\"unchecked\")\r\n     public <T extends PolicyTO> List<T> listByType(PolicyType type) {\r\n-        @SuppressWarnings(\"unchecked\")\r\n-        List<T> result = getRestTemplate().getForObject(baseUrl + \"policy/{kind}/list\", List.class, typeToUrl(type));\r\n-        return result;\r\n+        switch (type) {\r\n+        case ACCOUNT:\r\n+        case GLOBAL_ACCOUNT:\r\n+\t\t\treturn (List<T>) Arrays.asList(getRestTemplate().getForObject(\r\n+\t\t\t\t\tbaseUrl + \"policy/{kind}/list\", AccountPolicyTO[].class,\r\n+\t\t\t\t\ttype));\r\n+        case PASSWORD:\r\n+        case GLOBAL_PASSWORD:\r\n+\t\t\treturn (List<T>) Arrays.asList(getRestTemplate().getForObject(\r\n+\t\t\t\t\tbaseUrl + \"policy/{kind}/list\", PasswordPolicyTO[].class,\r\n+\t\t\t\t\ttype));\r\n+        case SYNC:\r\n+        case GLOBAL_SYNC:\r\n+\t\t\treturn (List<T>) Arrays.asList(getRestTemplate().getForObject(\r\n+\t\t\t\t\tbaseUrl + \"policy/{kind}/list\", SyncPolicyTO[].class,\r\n+\t\t\t\t\ttype));\r\n+        default:\r\n+            throw new IllegalArgumentException(\"Policy Type not supported: \" + type);\r\n+        }\r\n     }\r\n \r\n     @SuppressWarnings(\"unchecked\")\r\n@@ -70,21 +88,11 @@ public <T extends PolicyTO> T readGlobal(PolicyType type) {\n         return result;\r\n     }\r\n \r\n-    private String typeToUrl(PolicyType type) {\r\n-        String url = type.name().toLowerCase();\r\n-        int index = url.indexOf(\"_\");\r\n-        if (index != -1) {\r\n-            return url.substring(index + 1);\r\n-        } else {\r\n-            return url;\r\n-        }\r\n-    }\r\n-\r\n     @Override\r\n     public <T extends PolicyTO> T update(PolicyType type, Long policyId, T policyTO) {\r\n         @SuppressWarnings(\"unchecked\")\r\n         T result = (T) getRestTemplate().postForObject(baseUrl + \"policy/{kind}/update\", policyTO, policyTO.getClass(),\r\n-                typeToUrl(policyTO.getType()));\r\n+        \t\ttypeToUrl(policyTO.getType()));\r\n         return result;\r\n     }\r\n \r\n@@ -104,4 +112,14 @@ private Class<? extends PolicyTO> getTOClass(PolicyType type) {\n         }\r\n     }\r\n \r\n+    private String typeToUrl(PolicyType type) {\r\n+        String url = type.name().toLowerCase();\r\n+        int index = url.indexOf(\"_\");\r\n+        if (index != -1) {\r\n+            return url.substring(index + 1);\r\n+        } else {\r\n+            return url;\r\n+        }\r\n+    }\r\n+\r\n }\r"},{"sha":"c55470fc6a5f6c9b8f35a3e80150287785ca6b7a","filename":"client/src/main/java/org/apache/syncope/services/proxy/TaskServiceProxy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/190e31237cf0097668dae39d35b1f85a8ae0823e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FTaskServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/190e31237cf0097668dae39d35b1f85a8ae0823e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FTaskServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fservices%2Fproxy%2FTaskServiceProxy.java?ref=190e31237cf0097668dae39d35b1f85a8ae0823e","patch":"@@ -123,7 +123,7 @@ public <T extends TaskTO> List<T> list(TaskType type, int page, int size) {\n             return (List<T>) Arrays.asList(getRestTemplate().getForObject(baseUrl + \"task/{type}/list/{page}/{size}.json\",\r\n                     SyncTaskTO[].class, type, page, size));\r\n         default:\r\n-            throw new IllegalArgumentException(\"TaskType is not supported.\");\r\n+            throw new IllegalArgumentException(\"TaskType is not supported :\" + type);\r\n         }\r\n     }\r\n \r"}]}