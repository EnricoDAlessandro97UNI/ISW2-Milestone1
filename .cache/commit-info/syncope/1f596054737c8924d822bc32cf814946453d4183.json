{"sha":"1f596054737c8924d822bc32cf814946453d4183","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFmNTk2MDU0NzM3Yzg5MjRkODIyYmMzMmNmODE0OTQ2NDUzZDQxODM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-16T14:45:23Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-16T14:45:23Z"},"message":"(Deep) Refactoring AttributeValue\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246095 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"25903203f920ac4d539f0ff955fe5cebacf62a0a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/25903203f920ac4d539f0ff955fe5cebacf62a0a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1f596054737c8924d822bc32cf814946453d4183","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1f596054737c8924d822bc32cf814946453d4183","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1f596054737c8924d822bc32cf814946453d4183","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1f596054737c8924d822bc32cf814946453d4183/comments","author":null,"committer":null,"parents":[{"sha":"52bab7f5dc19530803e4986551a7d1351b313baf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/52bab7f5dc19530803e4986551a7d1351b313baf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/52bab7f5dc19530803e4986551a7d1351b313baf"}],"stats":{"total":572,"additions":128,"deletions":444},"files":[{"sha":"858db09fc4137f3165b9cc01255eb04d1c3f2ca7","filename":"core/src/main/java/org/syncope/core/persistence/beans/Attribute.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java?ref=1f596054737c8924d822bc32cf814946453d4183","patch":"@@ -75,6 +75,7 @@ public void addValue(Object value)\n \n         AttributeValue actualValue =\n                 getSchema().getValidator().getValue(value);\n+        actualValue.setAttribute(this);\n \n         if (!schema.isMultivalue()) {\n             values.clear();"},{"sha":"e4419c3c2fdecfccb764a6a40564c0e9cef41d9d","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValue.java","status":"modified","additions":88,"deletions":6,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValue.java?ref=1f596054737c8924d822bc32cf814946453d4183","patch":"@@ -14,21 +14,27 @@\n  */\n package org.syncope.core.persistence.beans;\n \n+import java.util.Date;\n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;\n import javax.persistence.GenerationType;\n import javax.persistence.Id;\n-import javax.persistence.Inheritance;\n-import javax.persistence.InheritanceType;\n import javax.persistence.ManyToOne;\n+import javax.persistence.Temporal;\n+import javax.persistence.TemporalType;\n \n @Entity\n-@Inheritance(strategy = InheritanceType.JOINED)\n-public abstract class AttributeValue extends AbstractBaseBean {\n+public class AttributeValue extends AbstractBaseBean {\n \n     @Id\n     @GeneratedValue(strategy = GenerationType.AUTO)\n     protected Long id;\n+    private String stringValue;\n+    @Temporal(TemporalType.TIMESTAMP)\n+    private Date dateValue;\n+    private Boolean booleanValue;\n+    private Long longValue;\n+    private Double doubleValue;\n     @ManyToOne\n     private Attribute attribute;\n \n@@ -44,6 +50,34 @@ public void setAttribute(Attribute Attribute) {\n         this.attribute = Attribute;\n     }\n \n+    public void setBooleanValue(Boolean booleanValue) {\n+        this.booleanValue = booleanValue;\n+    }\n+\n+    public void setDateValue(Date dateValue) {\n+        this.dateValue = dateValue;\n+    }\n+\n+    public void setDoubleValue(Double doubleValue) {\n+        this.doubleValue = doubleValue;\n+    }\n+\n+    public void setLongValue(Long longValue) {\n+        this.longValue = longValue;\n+    }\n+\n+    public void setStringValue(String stringValue) {\n+        this.stringValue = stringValue;\n+    }\n+\n+    public <T> T getValue() {\n+        return (T) (booleanValue != null\n+                ? booleanValue : (dateValue != null\n+                ? dateValue : (doubleValue != null\n+                ? doubleValue : (longValue != null\n+                ? longValue : stringValue))));\n+    }\n+\n     @Override\n     public boolean equals(Object obj) {\n         if (obj == null) {\n@@ -58,13 +92,61 @@ public boolean equals(Object obj) {\n \n             return false;\n         }\n+        if ((this.stringValue == null)\n+                ? (other.stringValue != null)\n+                : !this.stringValue.equals(other.stringValue)) {\n+\n+            return false;\n+        }\n+        if (this.dateValue != other.dateValue\n+                && (this.dateValue == null\n+                || !this.dateValue.equals(other.dateValue))) {\n+            return false;\n+        }\n+        if (this.booleanValue != other.booleanValue\n+                && (this.booleanValue == null\n+                || !this.booleanValue.equals(other.booleanValue))) {\n+\n+            return false;\n+        }\n+        if (this.longValue != other.longValue\n+                && (this.longValue == null\n+                || !this.longValue.equals(other.longValue))) {\n+\n+            return false;\n+        }\n+        if (this.doubleValue != other.doubleValue\n+                && (this.doubleValue == null\n+                || !this.doubleValue.equals(other.doubleValue))) {\n+\n+            return false;\n+        }\n+        if (this.attribute != other.attribute\n+                && (this.attribute == null\n+                || !this.attribute.equals(other.attribute))) {\n+\n+            return false;\n+        }\n+\n         return true;\n     }\n \n     @Override\n     public int hashCode() {\n-        int hash = 5;\n-        hash = 97 * hash + (this.id != null ? this.id.hashCode() : 0);\n+        int hash = 7;\n+        hash = 41 * hash + (this.id != null ? this.id.hashCode() : 0);\n+        hash = 41 * hash + (this.stringValue != null\n+                ? this.stringValue.hashCode() : 0);\n+        hash = 41 * hash + (this.dateValue != null\n+                ? this.dateValue.hashCode() : 0);\n+        hash = 41 * hash + (this.booleanValue != null\n+                ? this.booleanValue.hashCode() : 0);\n+        hash = 41 * hash + (this.longValue != null\n+                ? this.longValue.hashCode() : 0);\n+        hash = 41 * hash + (this.doubleValue != null\n+                ? this.doubleValue.hashCode() : 0);\n+        hash = 41 * hash + (this.attribute != null\n+                ? this.attribute.hashCode() : 0);\n         return hash;\n     }\n }"},{"sha":"18ad0299321a3c663b4614713df986808156835e","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValueAsBoolean.java","status":"removed","additions":0,"deletions":70,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/52bab7f5dc19530803e4986551a7d1351b313baf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsBoolean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/52bab7f5dc19530803e4986551a7d1351b313baf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsBoolean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsBoolean.java?ref=52bab7f5dc19530803e4986551a7d1351b313baf","patch":"@@ -1,70 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.beans;\n-\n-import javax.persistence.Entity;\n-\n-@Entity\n-public class AttributeValueAsBoolean extends AttributeValue {\n-\n-    Boolean actualValue;\n-\n-    public AttributeValueAsBoolean() {\n-    }\n-\n-    public AttributeValueAsBoolean(Boolean actualValue) {\n-        super();\n-        this.actualValue = actualValue;\n-    }\n-\n-    public Boolean getActualValue() {\n-        return actualValue;\n-    }\n-\n-    public void setActualValue(Boolean actualValue) {\n-        this.actualValue = actualValue;\n-    }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (!super.equals(obj)) {\n-            return false;\n-        }\n-\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final AttributeValueAsBoolean other =\n-                (AttributeValueAsBoolean) obj;\n-        if (this.actualValue != other.actualValue\n-                && (this.actualValue == null\n-                || !this.actualValue.equals(other.actualValue))) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 97 * hash + (this.actualValue != null\n-                ? this.actualValue.hashCode() : 0);\n-        return super.hashCode() + hash;\n-    }\n-}"},{"sha":"9516ad11cf5386a3a78a59511f83910dc93ed790","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValueAsDate.java","status":"removed","additions":0,"deletions":73,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/52bab7f5dc19530803e4986551a7d1351b313baf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/52bab7f5dc19530803e4986551a7d1351b313baf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDate.java?ref=52bab7f5dc19530803e4986551a7d1351b313baf","patch":"@@ -1,73 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.beans;\n-\n-import java.util.Date;\n-import javax.persistence.Entity;\n-import javax.persistence.Temporal;\n-import javax.persistence.TemporalType;\n-\n-@Entity\n-public class AttributeValueAsDate extends AttributeValue {\n-\n-    @Temporal(TemporalType.TIMESTAMP)\n-    Date actualValue;\n-\n-    public AttributeValueAsDate() {\n-    }\n-\n-    public AttributeValueAsDate(Date actualValue) {\n-        super();\n-        this.actualValue = actualValue;\n-    }\n-\n-    public Date getActualValue() {\n-        return actualValue;\n-    }\n-\n-    public void setActualValue(Date actualValue) {\n-        this.actualValue = actualValue;\n-    }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (!super.equals(obj)) {\n-            return false;\n-        }\n-\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final AttributeValueAsDate other = (AttributeValueAsDate) obj;\n-        if (this.actualValue != other.actualValue\n-                && (this.actualValue == null\n-                || !this.actualValue.equals(other.actualValue))) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 61 * hash + (this.actualValue != null\n-                ? this.actualValue.hashCode() : 0);\n-        return super.hashCode() + hash;\n-    }\n-}"},{"sha":"7355d927adb9f4b8ed5cdef77fe1e96861d66128","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValueAsDouble.java","status":"removed","additions":0,"deletions":70,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/52bab7f5dc19530803e4986551a7d1351b313baf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDouble.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/52bab7f5dc19530803e4986551a7d1351b313baf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDouble.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsDouble.java?ref=52bab7f5dc19530803e4986551a7d1351b313baf","patch":"@@ -1,70 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.beans;\n-\n-import javax.persistence.Entity;\n-\n-@Entity\n-public class AttributeValueAsDouble extends AttributeValue {\n-\n-    Double actualValue;\n-\n-    public AttributeValueAsDouble() {\n-    }\n-\n-    public AttributeValueAsDouble(Double actualValue) {\n-        super();\n-        this.actualValue = actualValue;\n-    }\n-\n-    public Double getActualValue() {\n-        return actualValue;\n-    }\n-\n-    public void setActualValue(Double actualValue) {\n-        this.actualValue = actualValue;\n-    }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (!super.equals(obj)) {\n-            return false;\n-        }\n-\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final AttributeValueAsDouble other =\n-                (AttributeValueAsDouble) obj;\n-        if (this.actualValue != other.actualValue\n-                && (this.actualValue == null\n-                || !this.actualValue.equals(other.actualValue))) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 5;\n-        hash = 97 * hash + (this.actualValue != null\n-                ? this.actualValue.hashCode() : 0);\n-        return super.hashCode() + hash;\n-    }\n-}"},{"sha":"f6353aafb27217147736d840e092a26e4ce4ec53","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValueAsLong.java","status":"removed","additions":0,"deletions":69,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/52bab7f5dc19530803e4986551a7d1351b313baf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsLong.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/52bab7f5dc19530803e4986551a7d1351b313baf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsLong.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsLong.java?ref=52bab7f5dc19530803e4986551a7d1351b313baf","patch":"@@ -1,69 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.beans;\n-\n-import javax.persistence.Entity;\n-\n-@Entity\n-public class AttributeValueAsLong extends AttributeValue {\n-\n-    Long actualValue;\n-\n-    public AttributeValueAsLong() {\n-    }\n-\n-    public AttributeValueAsLong(Long actualValue) {\n-        super();\n-        this.actualValue = actualValue;\n-    }\n-\n-    public Long getActualValue() {\n-        return actualValue;\n-    }\n-\n-    public void setActualValue(Long actualValue) {\n-        this.actualValue = actualValue;\n-    }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (!super.equals(obj)) {\n-            return false;\n-        }\n-\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final AttributeValueAsLong other = (AttributeValueAsLong) obj;\n-        if (this.actualValue != other.actualValue\n-                && (this.actualValue == null\n-                || !this.actualValue.equals(other.actualValue))) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 53 * hash + (this.actualValue != null\n-                ? this.actualValue.hashCode() : 0);\n-        return super.hashCode() + hash;\n-    }\n-}"},{"sha":"00cda3b6c2873f5859841e5146282f485a402526","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValueAsString.java","status":"removed","additions":0,"deletions":70,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/52bab7f5dc19530803e4986551a7d1351b313baf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsString.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/52bab7f5dc19530803e4986551a7d1351b313baf/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsString.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValueAsString.java?ref=52bab7f5dc19530803e4986551a7d1351b313baf","patch":"@@ -1,70 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.beans;\n-\n-import javax.persistence.Entity;\n-\n-@Entity\n-public class AttributeValueAsString extends AttributeValue {\n-\n-    String actualValue;\n-\n-    public AttributeValueAsString() {\n-    }\n-\n-    public AttributeValueAsString(String actualValue) {\n-        super();\n-        this.actualValue = actualValue;\n-    }\n-\n-    public String getActualValue() {\n-        return actualValue;\n-    }\n-\n-    public void setActualValue(String actualValue) {\n-        this.actualValue = actualValue;\n-    }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (!super.equals(obj)) {\n-            return false;\n-        }\n-\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final AttributeValueAsString other =\n-                (AttributeValueAsString) obj;\n-        if ((this.actualValue == null)\n-                ? (other.actualValue != null)\n-                : !this.actualValue.equals(other.actualValue)) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 5;\n-        hash = 71 * hash + (this.actualValue != null\n-                ? this.actualValue.hashCode() : 0);\n-        return super.hashCode() + hash;\n-    }\n-}"},{"sha":"b89eb588f4b3008082695f1e6b7437951bae8dea","filename":"core/src/main/java/org/syncope/core/persistence/beans/DerivedAttribute.java","status":"modified","additions":1,"deletions":28,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java?ref=1f596054737c8924d822bc32cf814946453d4183","patch":"@@ -14,8 +14,6 @@\n  */\n package org.syncope.core.persistence.beans;\n \n-import java.text.DecimalFormat;\n-import java.text.SimpleDateFormat;\n import java.util.Set;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n@@ -68,32 +66,7 @@ public String getValue(Set<Attribute> attributes) {\n                 expressionValue = \"\";\n             } else {\n                 attributeValue = attributeValues.iterator().next();\n-\n-                switch (attribute.getSchema().getType()) {\n-                    case Boolean:\n-                        expressionValue =\n-                                ((AttributeValueAsBoolean) attributeValue).getActualValue().toString();\n-                        break;\n-                    case Date:\n-                        expressionValue = attribute.getSchema().getFormatter(\n-                                SimpleDateFormat.class).format(\n-                                ((AttributeValueAsDate) attributeValue).getActualValue());\n-                        break;\n-                    case Double:\n-                        expressionValue = attribute.getSchema().getFormatter(\n-                                DecimalFormat.class).format(\n-                                ((AttributeValueAsDouble) attributeValue).getActualValue());\n-                        break;\n-                    case Long:\n-                        expressionValue = attribute.getSchema().getFormatter(\n-                                DecimalFormat.class).format(\n-                                ((AttributeValueAsDouble) attributeValue).getActualValue());\n-                        break;\n-                    case String:\n-                        expressionValue =\n-                                ((AttributeValueAsString) attributeValue).getActualValue();\n-                        break;\n-                }\n+                expressionValue = attributeValue.getValue();\n             }\n \n             jexlContext.set(attribute.getSchema().getName(), expressionValue);"},{"sha":"f6395d8031ec7a38473c9cfe61aabd5684eb9a0b","filename":"core/src/main/java/org/syncope/core/persistence/validation/AlwaysTrueValidator.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAlwaysTrueValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAlwaysTrueValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAlwaysTrueValidator.java?ref=1f596054737c8924d822bc32cf814946453d4183","patch":"@@ -18,7 +18,6 @@\n \n import org.syncope.core.persistence.beans.AttributeSchema;\n import org.syncope.core.persistence.beans.AttributeValue;\n-import org.syncope.core.persistence.beans.AttributeValueAsBoolean;\n \n public class AlwaysTrueValidator extends AttributeValidator {\n \n@@ -32,9 +31,7 @@ public AlwaysTrueValidator(AttributeSchema schema)\n     protected void doValidate(AttributeValue attributeValue)\n             throws ValidationFailedException {\n \n-        Boolean value =\n-                ((AttributeValueAsBoolean) attributeValue).getActualValue();\n-\n+        Boolean value = attributeValue.getValue();\n         if (!value) {\n             throw new ValidationFailedException(attributeValue);\n         }"},{"sha":"cc1f217cc76fe4bb3ff194ece1190c80a5c1ee31","filename":"core/src/main/java/org/syncope/core/persistence/validation/AttributeValidator.java","status":"modified","additions":11,"deletions":20,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAttributeValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAttributeValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FAttributeValidator.java?ref=1f596054737c8924d822bc32cf814946453d4183","patch":"@@ -19,11 +19,6 @@\n import java.util.Date;\n import org.syncope.core.persistence.beans.AttributeSchema;\n import org.syncope.core.persistence.beans.AttributeValue;\n-import org.syncope.core.persistence.beans.AttributeValueAsBoolean;\n-import org.syncope.core.persistence.beans.AttributeValueAsDate;\n-import org.syncope.core.persistence.beans.AttributeValueAsDouble;\n-import org.syncope.core.persistence.beans.AttributeValueAsLong;\n-import org.syncope.core.persistence.beans.AttributeValueAsString;\n \n public abstract class AttributeValidator {\n \n@@ -59,24 +54,22 @@ public AttributeValue getValue(Object value)\n     protected AttributeValue parseValue(String value)\n             throws ParseException {\n \n-        AttributeValue result = null;\n+        AttributeValue result = new AttributeValue();\n         Exception exception = null;\n \n         switch (schema.getType()) {\n \n             case String:\n-                result = new AttributeValueAsString(value);\n+                result.setStringValue(value);\n                 break;\n \n             case Boolean:\n-                result = new AttributeValueAsBoolean(\n-                        Boolean.parseBoolean(value));\n+                result.setBooleanValue(Boolean.parseBoolean(value));\n                 break;\n \n             case Long:\n                 try {\n-                    result = new AttributeValueAsLong(\n-                            Long.valueOf(schema.getFormatter(\n+                    result.setLongValue(Long.valueOf(schema.getFormatter(\n                             DecimalFormat.class).parse(value).longValue()));\n                 } catch (java.text.ParseException pe) {\n                     exception = pe;\n@@ -85,8 +78,7 @@ protected AttributeValue parseValue(String value)\n \n             case Double:\n                 try {\n-                    result = new AttributeValueAsDouble(\n-                            Double.valueOf(schema.getFormatter(\n+                    result.setDoubleValue(Double.valueOf(schema.getFormatter(\n                             DecimalFormat.class).parse(value).doubleValue()));\n                 } catch (java.text.ParseException pe) {\n                     exception = pe;\n@@ -95,8 +87,7 @@ protected AttributeValue parseValue(String value)\n \n             case Date:\n                 try {\n-                    result = new AttributeValueAsDate(\n-                            new Date(schema.getFormatter(\n+                    result.setDateValue(new Date(schema.getFormatter(\n                             SimpleDateFormat.class).parse(value).getTime()));\n                 } catch (java.text.ParseException pe) {\n                     exception = pe;\n@@ -120,23 +111,23 @@ protected AttributeValue parseValue(Object value)\n         switch (schema.getType()) {\n \n             case String:\n-                result = new AttributeValueAsString((String) value);\n+                result.setStringValue((String) value);\n                 break;\n \n             case Boolean:\n-                result = new AttributeValueAsBoolean((Boolean) value);\n+                result.setBooleanValue((Boolean) value);\n                 break;\n \n             case Long:\n-                result = new AttributeValueAsLong((Long) value);\n+                result.setLongValue((Long) value);\n                 break;\n \n             case Double:\n-                result = new AttributeValueAsDouble((Double) value);\n+                result.setDoubleValue((Double) value);\n                 break;\n \n             case Date:\n-                result = new AttributeValueAsDate((Date) value);\n+                result.setDateValue((Date) value);\n                 break;\n         }\n "},{"sha":"0211299134f206c68e342b39b0c364ddffd8133a","filename":"core/src/main/java/org/syncope/core/persistence/validation/EmailAddressValidator.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FEmailAddressValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FEmailAddressValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2FEmailAddressValidator.java?ref=1f596054737c8924d822bc32cf814946453d4183","patch":"@@ -18,7 +18,6 @@\n import java.util.regex.Pattern;\n import org.syncope.core.persistence.beans.AttributeSchema;\n import org.syncope.core.persistence.beans.AttributeValue;\n-import org.syncope.core.persistence.beans.AttributeValueAsString;\n \n public class EmailAddressValidator extends AttributeValidator {\n \n@@ -28,16 +27,15 @@ public class EmailAddressValidator extends AttributeValidator {\n \n     public EmailAddressValidator(AttributeSchema schema)\n             throws ClassNotFoundException {\n-        \n+\n         super(schema);\n     }\n \n     @Override\n     protected void doValidate(AttributeValue attributeValue)\n             throws ValidationFailedException {\n \n-        CharSequence emailAddress =\n-                ((AttributeValueAsString) attributeValue).getActualValue();\n+        CharSequence emailAddress = attributeValue.getValue();\n         Matcher matcher = emailValidationPattern.matcher(emailAddress);\n \n         if (!matcher.matches()) {"},{"sha":"7111b67cd35b6dfeae1475e5002ca1e9638ca389","filename":"core/src/test/java/org/syncope/core/persistence/test/AbstractDAOTest.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAbstractDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAbstractDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAbstractDAOTest.java?ref=1f596054737c8924d822bc32cf814946453d4183","patch":"@@ -86,6 +86,7 @@ public void setUpTestDataWithinTransaction() throws Exception {\n                 new HsqldbDataTypeFactory());\n \n         FlatXmlDataSetBuilder dataSetBuilder = new FlatXmlDataSetBuilder();\n+        dataSetBuilder.setColumnSensing(true);\n         IDataSet dataSet = dataSetBuilder.build(\n                 new FileInputStream(\"./src/test/resources/dbunitTestData.xml\"));\n         try {"},{"sha":"df6dd8de877d187c9573ff2f7b6dac33b029a3e1","filename":"core/src/test/java/org/syncope/core/persistence/test/DerivedAttributeDAOTest.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java?ref=1f596054737c8924d822bc32cf814946453d4183","patch":"@@ -20,8 +20,8 @@\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.core.persistence.beans.AttributeValue;\n import org.syncope.core.persistence.beans.SyncopeUser;\n-import org.syncope.core.persistence.beans.AttributeValueAsString;\n import org.syncope.core.persistence.beans.DerivedAttribute;\n import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n@@ -85,16 +85,14 @@ public final void save() throws ClassNotFoundException {\n         assertNotNull(\"expected save to work\", actual);\n         assertEquals(derivedAttribute, actual);\n \n-        AttributeValueAsString firstnameAttribute =\n-                (AttributeValueAsString) owner.getAttribute(\n+        AttributeValue firstnameAttribute = owner.getAttribute(\n                 \"firstname\").getValues().iterator().next();\n-        AttributeValueAsString surnameAttribute =\n-                (AttributeValueAsString) owner.getAttribute(\n+        AttributeValue surnameAttribute = owner.getAttribute(\n                 \"surname\").getValues().iterator().next();\n \n         assertEquals(\"expected derived value\",\n-                firstnameAttribute.getActualValue() + \" \"\n-                + surnameAttribute.getActualValue(),\n+                firstnameAttribute.getValue() + \" \"\n+                + surnameAttribute.getValue(),\n                 derivedAttribute.getValue(owner.getAttributes()));\n     }\n "},{"sha":"a48a58ed19c8565fed92de6831709641e8c05fbe","filename":"core/src/test/resources/dbunitTestData.xml","status":"modified","additions":18,"deletions":23,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1f596054737c8924d822bc32cf814946453d4183/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml?ref=1f596054737c8924d822bc32cf814946453d4183","patch":"@@ -45,29 +45,24 @@\n     <Attribute id=\"700\" schema_name=\"icon\"/>\n     <Attribute id=\"800\" schema_name=\"show\"/>\n \n-    <AttributeValue attribute_id=\"100\" id=\"10\"/>\n-    <AttributeValue attribute_id=\"200\" id=\"20\"/>\n-    <AttributeValue attribute_id=\"200\" id=\"21\"/>\n-    <AttributeValue attribute_id=\"300\" id=\"11\"/>\n-    <AttributeValue attribute_id=\"400\" id=\"30\"/>\n-    <AttributeValue attribute_id=\"500\" id=\"31\"/>\n-    <AttributeValue attribute_id=\"600\" id=\"40\"/>\n-    <AttributeValue attribute_id=\"700\" id=\"41\"/>\n-    <AttributeValue attribute_id=\"800\" id=\"42\"/>\n-        \n-    <AttributeValueAsString id=\"10\" actualValue=\"chicchiricco\"/>\n-    <AttributeValueAsString id=\"11\" actualValue=\"fabio.martelli\"/>\n-\n-    <AttributeValueAsDate id=\"20\" actualValue=\"2009-05-26\"/>\n-    <AttributeValueAsDate id=\"21\" actualValue=\"2010-05-26 15:40:04\"/>\n-\n-    <AttributeValueAsString id=\"30\" actualValue=\"John\"/>\n-    <AttributeValueAsString id=\"31\" actualValue=\"Doe\"/>\n-\n-    <AttributeValueAsString id=\"40\" actualValue=\"niceIcon\"/>\n-    <AttributeValueAsString id=\"41\" actualValue=\"badIcon\"/>\n-\n-    <AttributeValueAsBoolean id=\"42\" actualValue=\"TRUE\"/>\n+    <AttributeValue attribute_id=\"100\" id=\"10\"\n+                    stringValue=\"chicchiricco\"/>\n+    <AttributeValue attribute_id=\"300\" id=\"11\"\n+                    stringValue=\"fabio.martelli\"/>\n+    <AttributeValue attribute_id=\"200\" id=\"20\"\n+                    dateValue=\"2009-05-26\"/>\n+    <AttributeValue attribute_id=\"200\" id=\"21\"\n+                    dateValue=\"2010-05-26 15:40:04\"/>\n+    <AttributeValue attribute_id=\"400\" id=\"30\"\n+                    stringValue=\"John\"/>\n+    <AttributeValue attribute_id=\"500\" id=\"31\"\n+                    stringValue=\"Doe\"/>\n+    <AttributeValue attribute_id=\"600\" id=\"40\"\n+                    stringValue=\"niceIcon\"/>\n+    <AttributeValue attribute_id=\"700\" id=\"41\"\n+                    stringValue=\"badIcon\"/>\n+    <AttributeValue attribute_id=\"800\" id=\"42\"\n+                    booleanValue=\"TRUE\"/>\n \n     <SyncopeUser_Attribute SyncopeUser_id='1'\n                            attributes_id='100'/>"}]}