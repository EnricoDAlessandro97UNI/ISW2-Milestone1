{"sha":"4cc92c657e542394291b5279d9fbe22861c20593","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRjYzkyYzY1N2U1NDIzOTQyOTFiNTI3OWQ5ZmJlMjI4NjFjMjA1OTM=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-03-14T16:51:13Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-03-14T16:51:13Z"},"message":"SYNCOPE-198: provided table implementation and bulk actions for resources and connectors\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1456529 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f1fc05bf03e077e7d51738b4cb586964e7a15af7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f1fc05bf03e077e7d51738b4cb586964e7a15af7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4cc92c657e542394291b5279d9fbe22861c20593","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4cc92c657e542394291b5279d9fbe22861c20593","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4cc92c657e542394291b5279d9fbe22861c20593","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4cc92c657e542394291b5279d9fbe22861c20593/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"d3fd295a23f96072f35d5be6f43cc73dc100d6b5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d3fd295a23f96072f35d5be6f43cc73dc100d6b5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d3fd295a23f96072f35d5be6f43cc73dc100d6b5"}],"stats":{"total":317,"additions":276,"deletions":41},"files":[{"sha":"2a500954c5b0b0fa71ed8413b2077cdb85d46d52","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/ConnectorServiceProxy.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConnectorServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConnectorServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FConnectorServiceProxy.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -24,6 +24,8 @@\n import java.util.List;\r\n import javax.ws.rs.core.Response;\r\n import org.apache.syncope.common.services.ConnectorService;\r\n+import org.apache.syncope.common.to.BulkAction;\r\n+import org.apache.syncope.common.to.BulkActionRes;\r\n import org.apache.syncope.common.to.ConnBundleTO;\r\n import org.apache.syncope.common.to.ConnInstanceTO;\r\n import org.apache.syncope.common.to.SchemaTO;\r\n@@ -119,4 +121,9 @@ public ConnInstanceTO readByResource(final String resourceName) {\n     public void reload() {\r\n         getRestTemplate().postForLocation(baseUrl + \"connector/reload\", null);\r\n     }\r\n+\r\n+    @Override\r\n+    public BulkActionRes bulkAction(final BulkAction bulkAction) {\r\n+        return getRestTemplate().postForObject(baseUrl + \"connector/bulk\", bulkAction, BulkActionRes.class);\r\n+    }\r\n }\r"},{"sha":"728ea31a0dbf8098d0f4c32ce0db7e35bfe09627","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/ResourceServiceProxy.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FResourceServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FResourceServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FResourceServiceProxy.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -31,6 +31,8 @@\n \r\n import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.ResourceService;\r\n+import org.apache.syncope.common.to.BulkAction;\r\n+import org.apache.syncope.common.to.BulkActionRes;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n import org.apache.syncope.common.to.PropagationActionClassTO;\r\n import org.apache.syncope.common.to.ResourceTO;\r\n@@ -110,4 +112,9 @@ public boolean check(final ResourceTO resourceTO) {\n         return getRestTemplate().postForObject(baseUrl + \"resource/check.json\", resourceTO, Boolean.class).\r\n                 booleanValue();\r\n     }\r\n+\r\n+    @Override\r\n+    public BulkActionRes bulkAction(final BulkAction bulkAction) {\r\n+        return getRestTemplate().postForObject(baseUrl + \"resource/bulk\", bulkAction, BulkActionRes.class);\r\n+    }\r\n }\r"},{"sha":"b868a0521b2e788b02938c458682f861bc0d283d","filename":"common/src/main/java/org/apache/syncope/common/services/ConnectorService.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConnectorService.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -29,6 +29,8 @@\n import javax.ws.rs.PathParam;\r\n import javax.ws.rs.QueryParam;\r\n import javax.ws.rs.core.Response;\r\n+import org.apache.syncope.common.to.BulkAction;\r\n+import org.apache.syncope.common.to.BulkActionRes;\r\n import org.apache.syncope.common.to.ConnBundleTO;\r\n import org.apache.syncope.common.to.ConnInstanceTO;\r\n import org.apache.syncope.common.to.SchemaTO;\r\n@@ -124,4 +126,8 @@ List<SchemaTO> getSchemaNames(@PathParam(\"connInstanceId\") Long connInstanceId,\n     @POST\r\n     @Path(\"reload\")\r\n     void reload();\r\n+\r\n+    @POST\r\n+    @Path(\"bulk\")\r\n+    BulkActionRes bulkAction(BulkAction bulkAction);\r\n }\n\\ No newline at end of file"},{"sha":"6b2581eea77a45488047ce989048752c57b54553","filename":"common/src/main/java/org/apache/syncope/common/services/ResourceService.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FResourceService.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -28,7 +28,8 @@\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n import javax.ws.rs.core.Response;\r\n-\r\n+import org.apache.syncope.common.to.BulkAction;\r\n+import org.apache.syncope.common.to.BulkActionRes;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n import org.apache.syncope.common.to.PropagationActionClassTO;\r\n import org.apache.syncope.common.to.ResourceTO;\r\n@@ -106,4 +107,7 @@ ConnObjectTO getConnectorObject(@PathParam(\"resourceName\") String resourceName,\n     @Path(\"{resourceName}\")\r\n     void update(@PathParam(\"resourceName\") String resourceName, ResourceTO resourceTO);\r\n \r\n+    @POST\r\n+    @Path(\"bulk\")\r\n+    BulkActionRes bulkAction(BulkAction bulkAction);\r\n }\r"},{"sha":"fdc8ad5397a7dfc0c1bf9fc91db5e6e48c712d91","filename":"console/src/main/java/org/apache/syncope/console/pages/Resources.java","status":"modified","additions":56,"deletions":27,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.console.pages;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n@@ -28,6 +29,8 @@\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.PreferenceManager;\n import org.apache.syncope.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.console.pages.panels.AbstractSearchResultPanel;\n+import org.apache.syncope.console.pages.panels.AjaxDataTablePanel;\n import org.apache.syncope.console.rest.ConnectorRestClient;\n import org.apache.syncope.console.rest.ResourceRestClient;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n@@ -42,12 +45,13 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -58,7 +62,7 @@\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n@@ -151,11 +155,12 @@ public CharSequence getPrecondition(final Component component) {\n     }\n \n     private void setupResources() {\n-        List<IColumn> columns = new ArrayList<IColumn>();\n+        List<IColumn<ResourceTO, String>> columns = new ArrayList<IColumn<ResourceTO, String>>();\n \n-        columns.add(new PropertyColumn(new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new PropertyColumn(new StringResourceModel(\"name\", this, null), \"name\", \"name\"));\n \n-        columns.add(new AbstractColumn<ResourceTO, String>(new ResourceModel(\"connector\", \"connector\")) {\n+        columns.add(new AbstractColumn<ResourceTO, String>(\n+                new StringResourceModel(\"connector\", this, null, \"connector\")) {\n \n             private static final long serialVersionUID = 8263694778917279290L;\n \n@@ -196,12 +201,12 @@ public Page createPage() {\n             }\n         });\n \n-        columns.add(new PropertyColumn(new ResourceModel(\"propagationPrimary\"), \"propagationPrimary\",\n-                \"propagationPrimary\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"propagationPriority\"), \"propagationPriority\",\n-                \"propagationPriority\"));\n+        columns.add(new PropertyColumn(new StringResourceModel(\n+                \"propagationPrimary\", this, null), \"propagationPrimary\", \"propagationPrimary\"));\n+        columns.add(new PropertyColumn(new StringResourceModel(\n+                \"propagationPriority\", this, null), \"propagationPriority\", \"propagationPriority\"));\n \n-        columns.add(new AbstractColumn<ResourceTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<ResourceTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -266,8 +271,16 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable table = new AjaxFallbackDefaultDataTable(\"resourceDatatable\", columns,\n-                new ResourcesProvider(), resourcePaginatorRows);\n+        final AjaxDataTablePanel<ResourceTO, String> table = new AjaxDataTablePanel<ResourceTO, String>(\n+                \"resourceDatatable\",\n+                columns,\n+                (ISortableDataProvider<ResourceTO, String>) new ResourcesProvider(),\n+                resourcePaginatorRows,\n+                Arrays.asList(new ActionLink.ActionType[]{ActionLink.ActionType.DELETE}),\n+                resourceRestClient,\n+                \"name\",\n+                \"Resources\",\n+                getPageReference());\n \n         resourceContainer = new WebMarkupContainer(\"resourceContainer\");\n         resourceContainer.add(table);\n@@ -339,19 +352,19 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     }\n \n     private void setupConnectors() {\n-        List<IColumn> columns = new ArrayList<IColumn>();\n-\n-        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n-\n-        columns.add(new PropertyColumn(new ResourceModel(\"name\"), \"connectorName\", \"connectorName\"));\n-\n-        columns.add(new PropertyColumn(new ResourceModel(\"displayName\"), \"displayName\", \"displayName\"));\n-\n-        columns.add(new PropertyColumn(new ResourceModel(\"version\"), \"version\", \"version\"));\n-\n-        columns.add(new PropertyColumn(new ResourceModel(\"bundleName\"), \"bundleName\", \"bundleName\"));\n-\n-        columns.add(new AbstractColumn<ConnInstanceTO, String>(new ResourceModel(\"actions\", \"\")) {\n+        List<IColumn<ConnInstanceTO, String>> columns = new ArrayList<IColumn<ConnInstanceTO, String>>();\n+\n+        columns.add(new PropertyColumn(\n+                new StringResourceModel(\"id\", this, null), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(\n+                new StringResourceModel(\"name\", this, null), \"connectorName\", \"connectorName\"));\n+        columns.add(new PropertyColumn(\n+                new StringResourceModel(\"displayName\", this, null), \"displayName\", \"displayName\"));\n+        columns.add(new PropertyColumn(\n+                new StringResourceModel(\"version\", this, null), \"version\", \"version\"));\n+        columns.add(new PropertyColumn(\n+                new StringResourceModel(\"bundleName\", this, null), \"bundleName\", \"bundleName\"));\n+        columns.add(new AbstractColumn<ConnInstanceTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -413,8 +426,16 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable table = new AjaxFallbackDefaultDataTable(\"connectorDatatable\", columns,\n-                new ConnectorsProvider(), connectorPaginatorRows);\n+        final AjaxDataTablePanel<ConnInstanceTO, String> table = new AjaxDataTablePanel<ConnInstanceTO, String>(\n+                \"connectorDatatable\",\n+                columns,\n+                (ISortableDataProvider<ConnInstanceTO, String>) new ConnectorsProvider(),\n+                connectorPaginatorRows,\n+                Arrays.asList(new ActionLink.ActionType[]{ActionLink.ActionType.DELETE}),\n+                connectorRestClient,\n+                \"id\",\n+                \"Connectors\",\n+                getPageReference());\n \n         connectorContainer = new WebMarkupContainer(\"connectorContainer\");\n         connectorContainer.add(table);\n@@ -579,4 +600,12 @@ public List<ConnInstanceTO> getConnectorsListDB() {\n             return connectorRestClient.getAllConnectors();\n         }\n     }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof AbstractSearchResultPanel.EventDataWrapper) {\n+            ((AbstractSearchResultPanel.EventDataWrapper) event.getPayload()).getTarget().add(resourceContainer);\n+            ((AbstractSearchResultPanel.EventDataWrapper) event.getPayload()).getTarget().add(connectorContainer);\n+        }\n+    }\n }\n\\ No newline at end of file"},{"sha":"25f687fc46c09beab770124f56255e5cf0f5cfd0","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AjaxDataTablePanel.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAjaxDataTablePanel.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -170,4 +170,8 @@ public final long getCurrentPage() {\n     public final long getPageCount() {\n         return dataTable.getPageCount();\n     }\n+\n+    public void setItemsPerPage(final int resourcePaginatorRows) {\n+        dataTable.setItemsPerPage(resourcePaginatorRows);\n+    }\n }"},{"sha":"bacdd90ad0fd3fb508a4ff825cfde83e6d2ff632","filename":"console/src/main/java/org/apache/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -25,6 +25,8 @@\n import java.util.Set;\n import org.apache.syncope.common.services.ConnectorService;\n import org.apache.syncope.common.services.ResourceService;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.ConnBundleTO;\n import org.apache.syncope.common.to.ConnInstanceTO;\n import org.apache.syncope.common.to.ResourceTO;\n@@ -192,4 +194,8 @@ public List<String> getSchemaNames(final ConnInstanceTO connectorTO) {\n     public void reload() {\n         getService(ConnectorService.class).reload();\n     }\n+\n+    public BulkActionRes bulkAction(final BulkAction action) {\n+        return getService(ConnectorService.class).bulkAction(action);\n+    }\n }"},{"sha":"b8cc8f87f0c9a4458687a8696f30f2a0ee61b491","filename":"console/src/main/java/org/apache/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -18,11 +18,11 @@\n  */\n package org.apache.syncope.console.rest;\n \n-import java.util.ArrayList;\n import java.util.List;\n import java.util.Set;\n-\n import org.apache.syncope.common.services.ResourceService;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.PropagationActionClassTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.util.CollectionWrapper;\n@@ -83,4 +83,8 @@ public void update(final ResourceTO resourceTO) {\n     public void delete(final String name) {\n         getService(ResourceService.class).delete(name);\n     }\n+\n+    public BulkActionRes bulkAction(final BulkAction action) {\n+        return getService(ResourceService.class).bulkAction(action);\n+    }\n }"},{"sha":"4f55cddc25a3f80732b8ca7298b27043e25576e2","filename":"console/src/main/resources/org/apache/syncope/console/pages/Resources.html","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.html?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -28,8 +28,7 @@\n     <div id=\"tabs-1\">\n       <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n         <span wicket:id=\"resourceContainer\">\n-          <table class=\"ui-widget ui-widget-content table-hover\"\n-                 wicket:id=\"resourceDatatable\"/>\n+          <span wicket:id=\"resourceDatatable\">[resources]</span>\n         </span>\n \n         <span style=\"float:right\">\n@@ -51,8 +50,7 @@\n     <div id=\"tabs-2\">\n       <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n         <span wicket:id=\"connectorContainer\">\n-          <table class=\"ui-widget ui-widget-content table-hover\"\n-                 wicket:id=\"connectorDatatable\"/>\n+          <span wicket:id=\"connectorDatatable\">[connectors]</span>\n         </span>\n \n         <span style=\"float:right\">"},{"sha":"7a702441d423536e12e660ddfd39e4805c2c3096","filename":"console/src/test/java/org/apache/syncope/console/ConnInstanceTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -49,7 +49,7 @@ public void browseEditModal() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n-        selenium.click(\"//tr[4]/td[6]/div/span[9]/a\");\n+        selenium.click(\"//tr[4]/td[7]/div/span[9]/a\");\n \n         selenium.waitForCondition(\"\"\n                 + \"selenium.isElementPresent(\\\"//div[2]/form/div[2]/div/div/div[3]/div[2]/span/select\\\");\", \"30000\");\n@@ -70,7 +70,7 @@ public void delete() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n-        selenium.click(\"//tr[4]/td[6]/div/span[11]/a\");\n+        selenium.click(\"//tr[4]/td[7]/div/span[11]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n \n@@ -85,7 +85,7 @@ public void checkConnection() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n-        selenium.click(\"//tr[2]/td[6]/div/span[9]/a\");\n+        selenium.click(\"//tr[2]/td[7]/div/span[9]/a\");\n \n         selenium.waitForCondition(\n                 \"selenium.isElementPresent(\\\"//select[@name='version:dropDownChoiceField']\\\");\", \"30000\");"},{"sha":"0ad53b36359e65dc710ca1e162ab2668dd9e92d0","filename":"console/src/test/java/org/apache/syncope/console/ResourceTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FResourceTestITCase.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -42,7 +42,7 @@ public void browseEditModal() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//td[5]/div/span[9]/a\");\n+        selenium.click(\"//td[6]/div/span[9]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[3]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");\n@@ -64,7 +64,7 @@ public void delete() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//tr[3]/td[5]/div/span[11]/a\");\n+        selenium.click(\"//tr[3]/td[6]/div/span[11]/a\");\n \n         assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }\n@@ -75,7 +75,7 @@ public void checkSecurityTab() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//td[5]/div/span[9]/a\");\n+        selenium.click(\"//td[6]/div/span[9]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[3]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");\n@@ -97,7 +97,7 @@ public void checkConnection() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=\\\"ws-target-resource-delete\\\"]/../td[5]/div/span[9]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[div=\\\"ws-target-resource-delete\\\"]/../td[6]/div/span[9]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//form/div[3]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");"},{"sha":"1d8f78709c3bfd52480e1d5fc08e3d635e8a4388","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConnInstanceController.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -25,6 +25,8 @@\n import java.util.Set;\n import javax.servlet.http.HttpServletResponse;\n import org.apache.commons.lang.StringUtils;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.ConnBundleTO;\n import org.apache.syncope.common.to.ConnInstanceTO;\n import org.apache.syncope.common.types.AuditElements.Category;\n@@ -393,4 +395,28 @@ public void reload() {\n         auditManager.audit(Category.connector, ConnectorSubCategory.reload, Result.success,\n                 \"Successfully reloaded all connector bundles and instances\");\n     }\n+\n+    @PreAuthorize(\"hasRole('CONNECTOR_DELETE') and #bulkAction.operation == #bulkAction.operation.DELETE\")\n+    @RequestMapping(method = RequestMethod.POST, value = \"/bulk\")\n+    public BulkActionRes bulkAction(@RequestBody final BulkAction bulkAction) {\n+        LOG.debug(\"Bulk action '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n+\n+        BulkActionRes res = new BulkActionRes();\n+\n+        switch (bulkAction.getOperation()) {\n+            case DELETE:\n+                for (String id : bulkAction.getTargets()) {\n+                    try {\n+                        res.add(delete(Long.valueOf(id)).getId(), BulkActionRes.Status.SUCCESS);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error performing delete for connector {}\", id, e);\n+                        res.add(id, BulkActionRes.Status.FAILURE);\n+                    }\n+                }\n+                break;\n+            default:\n+        }\n+\n+        return res;\n+    }\n }\n\\ No newline at end of file"},{"sha":"3650168490d008daf27a5ffd7d986f12d9705550","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -23,6 +23,8 @@\n import javax.persistence.EntityExistsException;\n import javax.servlet.http.HttpServletResponse;\n import org.apache.commons.lang.StringUtils;\n+import org.apache.syncope.common.to.BulkAction;\n+import org.apache.syncope.common.to.BulkActionRes;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.types.AttributableType;\n@@ -299,4 +301,28 @@ public ModelAndView check(@RequestBody final ResourceTO resourceTO) {\n \n         return new ModelAndView().addObject(result);\n     }\n+\n+    @PreAuthorize(\"hasRole('RESOURCE_DELETE') and #bulkAction.operation == #bulkAction.operation.DELETE\")\n+    @RequestMapping(method = RequestMethod.POST, value = \"/bulk\")\n+    public BulkActionRes bulkAction(@RequestBody final BulkAction bulkAction) {\n+        LOG.debug(\"Bulk action '{}' called on '{}'\", bulkAction.getOperation(), bulkAction.getTargets());\n+\n+        BulkActionRes res = new BulkActionRes();\n+\n+        switch (bulkAction.getOperation()) {\n+            case DELETE:\n+                for (String name : bulkAction.getTargets()) {\n+                    try {\n+                        res.add(delete(name).getName(), BulkActionRes.Status.SUCCESS);\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error performing delete for resource {}\", name, e);\n+                        res.add(name, BulkActionRes.Status.FAILURE);\n+                    }\n+                }\n+                break;\n+            default:\n+        }\n+\n+        return res;\n+    }\n }"},{"sha":"5b45b83a428d80273cd82bfe8d081aac790e5fe4","filename":"core/src/main/java/org/apache/syncope/core/services/ConnectorServiceImpl.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConnectorServiceImpl.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -25,6 +25,8 @@\n import javax.ws.rs.core.UriInfo;\r\n import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.ConnectorService;\r\n+import org.apache.syncope.common.to.BulkAction;\r\n+import org.apache.syncope.common.to.BulkActionRes;\r\n import org.apache.syncope.common.to.ConnBundleTO;\r\n import org.apache.syncope.common.to.ConnInstanceTO;\r\n import org.apache.syncope.common.to.SchemaTO;\r\n@@ -111,4 +113,9 @@ public void setUriInfo(final UriInfo ui) {\n     public void reload() {\r\n         connInstanceController.reload();\r\n     }\r\n+\r\n+    @Override\r\n+    public BulkActionRes bulkAction(final BulkAction bulkAction) {\r\n+        return connInstanceController.bulkAction(bulkAction);\r\n+    }\r\n }\r"},{"sha":"ddec9cb7294686fa1abd8c25a21ce49da80d30de","filename":"core/src/main/java/org/apache/syncope/core/services/ResourceServiceImpl.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FResourceServiceImpl.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -27,6 +27,8 @@\n \r\n import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.ResourceService;\r\n+import org.apache.syncope.common.to.BulkAction;\r\n+import org.apache.syncope.common.to.BulkActionRes;\r\n import org.apache.syncope.common.to.ConnObjectTO;\r\n import org.apache.syncope.common.to.PropagationActionClassTO;\r\n import org.apache.syncope.common.to.ResourceTO;\r\n@@ -100,4 +102,9 @@ public boolean check(final ResourceTO resourceTO) {\n     public void setUriInfo(final UriInfo ui) {\r\n         this.uriInfo = ui;\r\n     }\r\n+\r\n+    @Override\r\n+    public BulkActionRes bulkAction(final BulkAction bulkAction) {\r\n+        return resourceController.bulkAction(bulkAction);\r\n+    }\r\n }\r"},{"sha":"4d15c492d523c8dfc82304a37670790d7238a44f","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -23,17 +23,20 @@\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n \n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Collections;\n import java.util.HashSet;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import java.util.Properties;\n import java.util.Set;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.ConnBundleTO;\n import org.apache.syncope.common.to.ConnInstanceTO;\n import org.apache.syncope.common.to.MappingItemTO;\n@@ -646,4 +649,45 @@ public void issueSYNCOPE112() {\n     public void reload() {\n         connectorService.reload();\n     }\n+\n+    @Test\n+    public void bulkAction() {\n+        final BulkAction bulkAction = new BulkAction();\n+        bulkAction.setOperation(BulkAction.Type.DELETE);\n+\n+        ConnInstanceTO conn = connectorService.read(101L);\n+\n+        conn.setId(0);\n+        conn.setDisplayName(\"forBulk1\");\n+\n+        bulkAction.addTarget(String.valueOf(\n+                getObject(connectorService.create(conn), ConnInstanceTO.class, connectorService).getId()));\n+\n+        conn.setDisplayName(\"forBulk2\");\n+\n+        bulkAction.addTarget(String.valueOf(\n+                getObject(connectorService.create(conn), ConnInstanceTO.class, connectorService).getId()));\n+\n+\n+        Iterator<String> iter = bulkAction.getTargets().iterator();\n+\n+        assertNotNull(connectorService.read(Long.valueOf(iter.next())));\n+        assertNotNull(connectorService.read(Long.valueOf(iter.next())));\n+\n+        connectorService.bulkAction(bulkAction);\n+\n+        iter = bulkAction.getTargets().iterator();\n+\n+        try {\n+            connectorService.read(Long.valueOf(iter.next()));\n+            fail();\n+        } catch (SyncopeClientCompositeErrorException e) {\n+        }\n+\n+        try {\n+            connectorService.read(Long.valueOf(iter.next()));\n+            fail();\n+        } catch (SyncopeClientCompositeErrorException e) {\n+        }\n+    }\n }"},{"sha":"1719c845dee0f08e08ff1863ae802a111863c0f5","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -32,6 +32,7 @@\n import java.util.Set;\n \n import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.to.BulkAction;\n \n import org.apache.syncope.common.to.MappingItemTO;\n import org.apache.syncope.common.to.MappingTO;\n@@ -410,6 +411,35 @@ public void issueSYNCOPE323() {\n         }\n     }\n \n+    @Test\n+    public void bulkAction() {\n+        resourceService.create(buildResourceTO(\"forBulk1\"));\n+        resourceService.create(buildResourceTO(\"forBulk2\"));\n+\n+        assertNotNull(resourceService.read(\"forBulk1\"));\n+        assertNotNull(resourceService.read(\"forBulk2\"));\n+\n+        final BulkAction bulkAction = new BulkAction();\n+        bulkAction.setOperation(BulkAction.Type.DELETE);\n+\n+        bulkAction.addTarget(String.valueOf(\"forBulk1\"));\n+        bulkAction.addTarget(String.valueOf(\"forBulk2\"));\n+\n+        resourceService.bulkAction(bulkAction);\n+\n+        try {\n+            resourceService.read(\"forBulk1\");\n+            fail();\n+        } catch (SyncopeClientCompositeErrorException e) {\n+        }\n+\n+        try {\n+            resourceService.read(\"forBulk2\");\n+            fail();\n+        } catch (SyncopeClientCompositeErrorException e) {\n+        }\n+    }\n+\n     private ResourceTO buildResourceTO(String resourceName) {\n         ResourceTO resourceTO = new ResourceTO();\n "},{"sha":"be25cf81712ab5ec893fbe3cb31bc4dc0f6bd74a","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4cc92c657e542394291b5279d9fbe22861c20593/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=4cc92c657e542394291b5279d9fbe22861c20593","patch":"@@ -24,6 +24,7 @@\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n@@ -35,6 +36,7 @@\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.BulkAction;\n import org.apache.syncope.common.to.JobClassTO;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.NotificationTO;\n@@ -883,6 +885,34 @@ public void issueSYNCOPE307() {\n         }\n     }\n \n+    @Test\n+    public void bulkAction() {\n+        final List<PropagationTaskTO> before = (List<PropagationTaskTO>) taskService.list(TaskType.PROPAGATION);\n+\n+        // create user with testdb resource\n+        final UserTO userTO = UserTestITCase.getUniqueSampleTO(\"taskBulk@apache.org\");\n+        userTO.addResource(\"resource-testdb\");\n+        createUser(userTO);\n+\n+        final List<PropagationTaskTO> after =\n+                new ArrayList<PropagationTaskTO>((List<PropagationTaskTO>) taskService.list(TaskType.PROPAGATION));\n+\n+        after.removeAll(before);\n+\n+        assertFalse(after.isEmpty());\n+\n+        final BulkAction bulkAction = new BulkAction();\n+        bulkAction.setOperation(BulkAction.Type.DELETE);\n+\n+        for (TaskTO taskTO : after) {\n+            bulkAction.addTarget(String.valueOf(taskTO.getId()));\n+        }\n+\n+        taskService.bulkAction(bulkAction);\n+\n+        assertFalse(taskService.list(TaskType.PROPAGATION).containsAll(after));\n+    }\n+\n     /**\n      * remove initial and synchronized users to make test re-runnable\n      */"}]}