{"sha":"f8ffa6c2fecb48e5b53642dd4f7b927585b68336","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY4ZmZhNmMyZmVjYjQ4ZTViNTM2NDJkZDRmN2I5Mjc1ODViNjgzMzY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-09T11:26:39Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-09T11:26:39Z"},"message":"[SYNCOPE-156] Various small tweaks","tree":{"sha":"f8c722824db6ab4e09f4ef3185dbee75ec3a9a56","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f8c722824db6ab4e09f4ef3185dbee75ec3a9a56"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f8ffa6c2fecb48e5b53642dd4f7b927585b68336","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f8ffa6c2fecb48e5b53642dd4f7b927585b68336","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f8ffa6c2fecb48e5b53642dd4f7b927585b68336","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b99b684ab0e7a8f2df9fa4442937d870d1939e59","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b99b684ab0e7a8f2df9fa4442937d870d1939e59","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b99b684ab0e7a8f2df9fa4442937d870d1939e59"}],"stats":{"total":119,"additions":70,"deletions":49},"files":[{"sha":"ccce28f77dcc9bb1773f0c41f66ddc650c2fdd4e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":12,"deletions":14,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=f8ffa6c2fecb48e5b53642dd4f7b927585b68336","patch":"@@ -75,15 +75,9 @@ public class BasePage extends WebPage implements IAjaxIndicatorAware {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(BasePage.class);\n \n-    protected static final String CANCEL = \"cancel\";\n+    protected static final HeaderItem META_IE_EDGE = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n \n-    protected static final String SUBMIT = \"submit\";\n-\n-    protected static final String APPLY = \"apply\";\n-\n-    protected static final String FORM = \"form\";\n-\n-    protected final HeaderItem meta = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n+    protected static SystemInfo SYSTEM_INFO;\n \n     protected final WebMarkupContainer body;\n \n@@ -134,11 +128,15 @@ protected void onConnect(final ConnectedMessage message) {\n         body.add(new ApprovalsWidget(\"approvalsWidget\", getPageReference()).setRenderBodyOnly(true));\n \n         // right sidebar\n-        SystemInfo systemInfo = SyncopeConsoleSession.get().getService(SyncopeService.class).system();\n-        body.add(new Label(\"hostname\", systemInfo.getHostname()));\n-        body.add(new Label(\"processors\", systemInfo.getAvailableProcessors()));\n-        body.add(new Label(\"os\", systemInfo.getOs()));\n-        body.add(new Label(\"jvm\", systemInfo.getJvm()));\n+        synchronized (this) {\n+            if (SYSTEM_INFO == null) {\n+                SYSTEM_INFO = SyncopeConsoleSession.get().getService(SyncopeService.class).system();\n+            }\n+        }\n+        body.add(new Label(\"hostname\", SYSTEM_INFO.getHostname()));\n+        body.add(new Label(\"processors\", SYSTEM_INFO.getAvailableProcessors()));\n+        body.add(new Label(\"os\", SYSTEM_INFO.getOs()));\n+        body.add(new Label(\"jvm\", SYSTEM_INFO.getJvm()));\n \n         Link<Void> dbExportLink = new Link<Void>(\"dbExportLink\") {\n \n@@ -380,7 +378,7 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n     @Override\n     public void renderHead(final IHeaderResponse response) {\n         super.renderHead(response);\n-        response.render(new PriorityHeaderItem(meta));\n+        response.render(new PriorityHeaderItem(META_IE_EDGE));\n     }\n \n     private String getLIContainerId(final String linkId) {"},{"sha":"231a90914186c07ba388a468f0c6c78abedcbfeb","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=f8ffa6c2fecb48e5b53642dd4f7b927585b68336","patch":"@@ -47,12 +47,12 @@\n \n     public abstract int count(String realm, String type);\n \n-    public abstract List<TO> list(String realm, int page, int size, final SortParam<String> sort, final String type);\n+    public abstract List<TO> list(String realm, int page, int size, SortParam<String> sort, String type);\n \n-    public abstract int searchCount(String realm, String fiql, final String type);\n+    public abstract int searchCount(String realm, String fiql, String type);\n \n     public abstract List<TO> search(\n-            String realm, String fiql, int page, int size, final SortParam<String> sort, final String type);\n+            String realm, String fiql, int page, int size, SortParam<String> sort, String type);\n \n     public TO read(final String key) {\n         return getService(getAnyServiceClass()).read(key);"},{"sha":"f8ed1b3e4927e93d9f89b7013cc950897afcf4cd","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=f8ffa6c2fecb48e5b53642dd4f7b927585b68336","patch":"@@ -19,8 +19,11 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n import java.util.List;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.collections4.ComparatorUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.ResourceDeassociationPatch;\n import org.apache.syncope.common.lib.to.BulkAction;\n@@ -93,7 +96,15 @@ public ResourceTO read(final String name) {\n     }\n \n     public List<ResourceTO> list() {\n-        return getService(ResourceService.class).list();\n+        List<ResourceTO> resources = getService(ResourceService.class).list();\n+        Collections.sort(resources, new Comparator<ResourceTO>() {\n+\n+            @Override\n+            public int compare(final ResourceTO o1, final ResourceTO o2) {\n+                return ComparatorUtils.<String>naturalComparator().compare(o1.getKey(), o2.getKey());\n+            }\n+        });\n+        return resources;\n     }\n \n     public ResourceTO create(final ResourceTO resourceTO) {"},{"sha":"5aa59aa6935b94cb30b2af1a596fc227a57587fb","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AuxClasses.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java?ref=f8ffa6c2fecb48e5b53642dd4f7b927585b68336","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n@@ -44,6 +45,7 @@ public <T extends AnyTO> AuxClasses(final T anyTO, final List<String> anyTypeCla\n                 choices.add(aux.getKey());\n             }\n         }\n+        Collections.sort(choices);\n         add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\"auxClasses\",\n                 new PropertyModel<List<String>>(anyTO, \"auxClasses\"),\n                 new ListModel<>(choices)).hideLabel().setOutputMarkupId(true));"},{"sha":"8c84cdabb7d02cc540d400ff38c5086560526212","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":36,"deletions":24,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=f8ffa6c2fecb48e5b53642dd4f7b927585b68336","patch":"@@ -19,8 +19,12 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n import java.util.List;\n+import java.util.Map;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n@@ -68,12 +72,14 @@ public String getIdValue(final MembershipTO object, final int index) {\n                     @Override\n                     public MembershipTO getObject(\n                             final String id, final IModel<? extends List<? extends MembershipTO>> choices) {\n-                        for (MembershipTO membershipTO : choices.getObject()) {\n-                            if (id.equalsIgnoreCase(membershipTO.getGroupName())) {\n-                                return membershipTO;\n+\n+                        return IterableUtils.find(choices.getObject(), new Predicate<MembershipTO>() {\n+\n+                            @Override\n+                            public boolean evaluate(final MembershipTO object) {\n+                                return id.equalsIgnoreCase(object.getGroupName());\n                             }\n-                        }\n-                        return null;\n+                        });\n                     }\n                 });\n \n@@ -97,31 +103,37 @@ public List<MembershipTO> execute(final String filter) {\n \n                     @Override\n                     public MembershipTO transform(final GroupTO input) {\n-                        final MembershipTO membershipTO = new MembershipTO();\n-                        membershipTO.setGroupName(input.getName());\n-                        membershipTO.setRightKey(input.getKey() == null ? null : input.getKey());\n-                        membershipTO.setRightType(input.getType());\n-                        membershipTO.setLeftKey(anyTO.getKey() == null ? null : anyTO.getKey());\n-                        membershipTO.setLeftType(anyTO.getType());\n-                        return membershipTO;\n+                        return new MembershipTO.Builder().\n+                                group(input.getKey(), input.getName()).\n+                                left(anyTO.getKey(), anyTO.getType()).\n+                                build();\n                     }\n                 }, new ArrayList<MembershipTO>());\n             }\n         }).hideLabel().setOutputMarkupId(true));\n \n-        List<String> dynamics = CollectionUtils.collect(GroupableTO.class.cast(anyTO).getDynGroups(),\n-                new Transformer<String, String>() {\n-\n-            @Override\n-            public String transform(final String input) {\n-                final GroupTO groupTO = groupRestClient.read(input);\n-                return String.format(\"[%s] %s\", groupTO.getKey(), groupTO.getName());\n-            }\n-        }, new ArrayList<String>());\n-\n+        List<GroupTO> allGroups = groupRestClient.list(anyTO.getRealm(), -1, -1, new SortParam<>(\"name\", true), null);\n+        final Map<String, GroupTO> allGroupsByKey = new LinkedHashMap<>(allGroups.size());\n+        for (GroupTO group : allGroups) {\n+            allGroupsByKey.put(group.getKey(), group);\n+        }\n         add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\n                 \"dyngroups\",\n-                new ListModel<>(dynamics),\n-                new ListModel<>(dynamics)).hideLabel().setEnabled(false).setOutputMarkupId(true));\n+                new ListModel<>(CollectionUtils.collect(GroupableTO.class.cast(anyTO).getDynGroups(),\n+                        new Transformer<String, String>() {\n+\n+                    @Override\n+                    public String transform(final String input) {\n+                        return allGroupsByKey.get(input).getName();\n+                    }\n+                }, new ArrayList<String>())),\n+                new ListModel<>(CollectionUtils.collect(allGroups, new Transformer<GroupTO, String>() {\n+\n+                    @Override\n+                    public String transform(final GroupTO input) {\n+                        return input.getName();\n+                    }\n+                }, new ArrayList<String>()))).\n+                hideLabel().setEnabled(false).setOutputMarkupId(true));\n     }\n }"},{"sha":"c22b094dde9e9e484e7ee08bca69914c09f5b3b2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Resources.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java?ref=f8ffa6c2fecb48e5b53642dd4f7b927585b68336","patch":"@@ -40,7 +40,7 @@ public <T extends AnyTO> Resources(final T entityTO) {\n         add(new AjaxPalettePanel.Builder<String>().build(\"resources\",\n                 new PropertyModel<List<String>>(entityTO, \"resources\") {\n \n-            private static final long serialVersionUID = 1L;\n+            private static final long serialVersionUID = 3799387950428254072L;\n \n             @Override\n             public List<String> getObject() {"},{"sha":"26ac475fb48579d2bfb4800e1c4bb75ef78a86ad","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/ResultPage.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResultPage.java?ref=f8ffa6c2fecb48e5b53642dd4f7b927585b68336","patch":"@@ -26,10 +26,6 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.syncope.client.console.panels.WizardModalPanel;\n \n-/**\n- *\n- * @param <T> item input type\n- */\n public abstract class ResultPage<T extends Serializable> extends Panel implements WizardModalPanel<T> {\n \n     private static final long serialVersionUID = -1619945285130369086L;"},{"sha":"7133b16bc29f5c599cad763567acd8815b928b8b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=f8ffa6c2fecb48e5b53642dd4f7b927585b68336","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n@@ -38,8 +39,9 @@ public class Roles extends WizardStep {\n     public <T extends AnyTO> Roles(final UserTO entityTO) {\n         this.setOutputMarkupId(true);\n \n-        final ArrayList<String> allRoles = CollectionUtils.collect(new RoleRestClient().list(),\n+        List<String> allRoles = CollectionUtils.collect(new RoleRestClient().list(),\n                 EntityTOUtils.<RoleTO>keyTransformer(), new ArrayList<String>());\n+        Collections.sort(allRoles);\n \n         add(new AjaxPalettePanel.Builder<String>().build(\"roles\",\n                 new PropertyModel<List<String>>(entityTO, \"roles\"),"},{"sha":"b890f50bab28dc9c842cbfc7d84788e81ba67b72","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f8ffa6c2fecb48e5b53642dd4f7b927585b68336/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=f8ffa6c2fecb48e5b53642dd4f7b927585b68336","patch":"@@ -621,7 +621,7 @@ public List<PlainAttrValue> getIntValues(final Provision provision,\n                 for (Any<?> any : anys) {\n                     AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n                     PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n-                    attrValue.setStringValue(any.getKey().toString());\n+                    attrValue.setStringValue(any.getKey());\n                     values.add(attrValue);\n                 }\n                 break;"}]}