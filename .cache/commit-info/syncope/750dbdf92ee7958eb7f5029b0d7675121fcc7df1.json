{"sha":"750dbdf92ee7958eb7f5029b0d7675121fcc7df1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc1MGRiZGY5MmVlNzk1OGViN2Y1MDI5YjBkNzY3NTEyMWZjYzdkZjE=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-24T09:15:17Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-24T09:15:17Z"},"message":"SYNCOPE-231 NotficationService for CXF. Changing create in interface of service to reflect concept of returning url and id\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1437918 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9ee318e220e89094565f8bbdf12bdda09ab41e0f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9ee318e220e89094565f8bbdf12bdda09ab41e0f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/750dbdf92ee7958eb7f5029b0d7675121fcc7df1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/750dbdf92ee7958eb7f5029b0d7675121fcc7df1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/750dbdf92ee7958eb7f5029b0d7675121fcc7df1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"2560d7eadac005814c7f708a211b07a1767dafdf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2560d7eadac005814c7f708a211b07a1767dafdf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2560d7eadac005814c7f708a211b07a1767dafdf"}],"stats":{"total":147,"additions":131,"deletions":16},"files":[{"sha":"7a5209f3f1645f5d2a3e37cd0ea0122c9bbdb869","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/NotificationServiceProxy.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java?ref=750dbdf92ee7958eb7f5029b0d7675121fcc7df1","patch":"@@ -18,8 +18,12 @@\n  */\r\n package org.apache.syncope.client.services.proxy;\r\n \r\n+import java.net.URI;\r\n import java.util.Arrays;\r\n import java.util.List;\r\n+\r\n+import javax.ws.rs.core.Response;\r\n+\r\n import org.apache.syncope.common.services.NotificationService;\r\n import org.apache.syncope.common.to.NotificationTO;\r\n import org.springframework.web.client.RestTemplate;\r\n@@ -43,9 +47,11 @@ public List<NotificationTO> list() {\n     }\r\n \r\n     @Override\r\n-    public NotificationTO create(final NotificationTO notificationTO) {\r\n-        return getRestTemplate().postForObject(baseUrl + \"notification/create.json\", notificationTO,\r\n+    public Response create(final NotificationTO notificationTO) {\r\n+        NotificationTO notification = getRestTemplate().postForObject(baseUrl + \"notification/create.json\", notificationTO,\r\n                 NotificationTO.class);\r\n+        URI location = URI.create(baseUrl + \"notification/read/\" + notification.getId() + \".json\");\r\n+        return Response.created(location).entity(notification.getId()).build();\r\n     }\r\n \r\n     @Override\r"},{"sha":"8bfe2ef9bafa6c5db52712c78f76553768a1b572","filename":"common/src/main/java/org/apache/syncope/common/services/NotificationService.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FNotificationService.java?ref=750dbdf92ee7958eb7f5029b0d7675121fcc7df1","patch":"@@ -21,26 +21,27 @@\n import java.util.List;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n+import javax.ws.rs.NotFoundException;\r\n import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n+import javax.ws.rs.core.Response;\r\n \r\n import org.apache.syncope.common.to.NotificationTO;\r\n \r\n @Path(\"notifications\")\r\n public interface NotificationService {\r\n+    @POST\r\n+    Response create(NotificationTO notificationTO);\r\n \r\n     @GET\r\n     @Path(\"{notificationId}\")\r\n-    NotificationTO read(@PathParam(\"notificationId\") Long notificationId);\r\n+    NotificationTO read(@PathParam(\"notificationId\") Long notificationId) throws NotFoundException;\r\n \r\n     @GET\r\n     List<NotificationTO> list();\r\n \r\n-    @POST\r\n-    NotificationTO create(NotificationTO notificationTO);\r\n-\r\n     @PUT\r\n     @Path(\"{notificationId}\")\r\n     NotificationTO update(@PathParam(\"notificationId\") Long notificationId, NotificationTO notificationTO);\r"},{"sha":"662946868443bf83b53df17d84cfce8aa0692f89","filename":"common/src/main/java/org/apache/syncope/common/to/NotificationTO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FNotificationTO.java?ref=750dbdf92ee7958eb7f5029b0d7675121fcc7df1","patch":"@@ -21,11 +21,14 @@\n import java.util.ArrayList;\r\n import java.util.List;\r\n \r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n import org.apache.syncope.common.search.NodeCond;\r\n import org.apache.syncope.common.types.IntMappingType;\r\n import org.apache.syncope.common.types.TraceLevel;\r\n \r\n+@XmlRootElement\r\n public class NotificationTO extends AbstractBaseBean {\r\n \r\n     private static final long serialVersionUID = -6145117115632592612L;\r"},{"sha":"f1212af11b06413d301eb442c8c97e01d142edeb","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/NotificationController.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FNotificationController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FNotificationController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FNotificationController.java?ref=750dbdf92ee7958eb7f5029b0d7675121fcc7df1","patch":"@@ -69,7 +69,7 @@ public NotificationTO read(@PathVariable(\"notificationId\") final Long notificati\n \n     @PreAuthorize(\"hasRole('NOTIFICATION_LIST')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/list\")\n-    public List<NotificationTO> list() throws NotFoundException {\n+    public List<NotificationTO> list() {\n \n         List<Notification> notifications = notificationDAO.findAll();\n \n@@ -88,15 +88,17 @@ public List<NotificationTO> list() throws NotFoundException {\n     @RequestMapping(method = RequestMethod.POST, value = \"/create\")\n     public NotificationTO create(final HttpServletResponse response, @RequestBody final NotificationTO notificationTO)\n             throws NotFoundException {\n+        NotificationTO savedNotificationTO = createInternal(notificationTO);\n+        response.setStatus(HttpServletResponse.SC_CREATED);\n+        return savedNotificationTO;\n+    }\n \n+    public NotificationTO createInternal(final NotificationTO notificationTO)\n+            throws NotFoundException {\n         LOG.debug(\"Notification create called with parameter {}\", notificationTO);\n-\n         Notification notification = notificationDAO.save(binder.createNotification(notificationTO));\n-\n         auditManager.audit(Category.notification, NotificationSubCategory.create, Result.success,\n                 \"Successfully created notification: \" + notification.getId());\n-\n-        response.setStatus(HttpServletResponse.SC_CREATED);\n         return binder.getNotificationTO(notification);\n     }\n "},{"sha":"e0639563a738988c9b0ce9c4a412bdab1dac1a96","filename":"core/src/main/java/org/apache/syncope/core/services/NotificationServiceImpl.java","status":"added","additions":91,"deletions":0,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java?ref=750dbdf92ee7958eb7f5029b0d7675121fcc7df1","patch":"@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.services;\n+\n+import java.net.URI;\n+import java.util.List;\n+\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.UriInfo;\n+\n+import org.apache.syncope.common.services.NotificationService;\n+import org.apache.syncope.common.to.NotificationTO;\n+import org.apache.syncope.core.rest.controller.NotificationController;\n+import org.apache.syncope.core.util.NotFoundException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class NotificationServiceImpl implements NotificationService, ContextAware {\n+\n+    @Autowired\n+    private NotificationController notificationController;\n+    \n+    private UriInfo uriInfo;\n+\n+    @Override\n+    public Response create(NotificationTO notificationTO) {\n+        try {\n+            NotificationTO createdNotificationTO = notificationController.createInternal(notificationTO);\n+            URI location = uriInfo.getAbsolutePathBuilder().path(\"\" + createdNotificationTO.getId()).build();\n+            return Response.created(location).build();\n+        } catch (NotFoundException e) {\n+            throw new javax.ws.rs.NotFoundException(e);\n+        }\n+    }\n+\n+    @Override\n+    public NotificationTO read(@PathParam(\"notificationId\") Long notificationId) throws javax.ws.rs.NotFoundException {\n+        try {\n+            return notificationController.read(notificationId);\n+        } catch (NotFoundException e) {\n+            throw new javax.ws.rs.NotFoundException(e);\n+        }\n+    }\n+\n+    @Override\n+    public List<NotificationTO> list() {\n+        return notificationController.list();\n+    }\n+\n+    @Override\n+    public NotificationTO update(@PathParam(\"notificationId\") Long notificationId,\n+            NotificationTO notificationTO) {\n+        try {\n+            return notificationController.update(notificationTO);\n+        } catch (NotFoundException e) {\n+            throw new javax.ws.rs.NotFoundException(e);\n+        }\n+    }\n+\n+    @Override\n+    public NotificationTO delete(@PathParam(\"notificationId\") Long notificationId) {\n+        try {\n+            return notificationController.delete(notificationId);\n+        } catch (NotFoundException e) {\n+            throw new javax.ws.rs.NotFoundException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void setUriInfo(final UriInfo ui) {\n+        this.uriInfo = ui;\n+    }\n+}"},{"sha":"508511a44c61726828b73a81296bec4ad78bb746","filename":"core/src/main/resources/restContext.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml?ref=750dbdf92ee7958eb7f5029b0d7675121fcc7df1","patch":"@@ -67,6 +67,7 @@ under the License.\n   <jaxrs:server id=\"restContainer\" address=\"/\">\n     <jaxrs:serviceBeans>\n       <ref bean=\"configurationServiceImpl\"/>\n+      <ref bean=\"notificationServiceImpl\"/>\n       <ref bean=\"connectorServiceImpl\"/>\n       <ref bean=\"entitlementServiceImpl\"/>\n       <ref bean=\"policyServiceImpl\"/>"},{"sha":"2c5fa9e4b902a9f5652891ebc9fecc0de04e6e0a","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=750dbdf92ee7958eb7f5029b0d7675121fcc7df1","patch":"@@ -25,6 +25,8 @@\n \n import java.util.List;\n \n+import javax.ws.rs.core.Response;\n+\n import org.apache.syncope.common.search.AttributeCond;\n import org.apache.syncope.common.search.MembershipCond;\n import org.apache.syncope.common.search.NodeCond;\n@@ -66,7 +68,9 @@ public void create() {\n         NodeCond recipients = NodeCond.getLeafCond(membCond);\n         notificationTO.setRecipients(recipients);\n \n-        NotificationTO actual = notificationService.create(notificationTO);\n+        Response response = notificationService.create(notificationTO);\n+        Long notificationId = (Long) response.getEntity();\n+        NotificationTO actual = notificationService.read(notificationId);\n \n         assertNotNull(actual);\n         assertNotNull(actual.getId());\n@@ -110,7 +114,8 @@ public void delete() {\n     \t\tassertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n     \t\tnotification = buildNotificationTO();\n             notification.setSelfAsRecipient(true);\n-            notification = notificationService.create(notification);\n+            Response response = notificationService.create(notification);\n+            notification = response.readEntity(NotificationTO.class);\n     \t}\n     \t\n         NotificationTO deletedNotification = notificationService.delete(notification.getId());\n@@ -133,8 +138,9 @@ public void issueSYNCOPE83() {\n         NotificationTO actual = null;\n         SyncopeClientException exception = null;\n         try {\n-            actual = notificationService.create(notificationTO);\n-\n+            Response response = notificationService.create(notificationTO);\n+            Long notificationId = (Long) response.getEntity();\n+            actual = notificationService.read(notificationId);\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.InvalidNotification);\n         }"},{"sha":"b8f9874bb655f3ea8deb87090ec515b74f8699c5","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/750dbdf92ee7958eb7f5029b0d7675121fcc7df1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=750dbdf92ee7958eb7f5029b0d7675121fcc7df1","patch":"@@ -27,6 +27,9 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n+\n+import javax.ws.rs.core.Response;\n+\n import org.apache.syncope.common.search.AttributableCond;\n import org.apache.syncope.common.search.AttributeCond;\n import org.apache.syncope.common.search.MembershipCond;\n@@ -524,7 +527,9 @@ private String createNotificationTask() {\n         notification.setSubject(subject);\n         notification.setTemplate(\"optin\");\n \n-        notification = notificationService.create(notification);\n+        Response response = notificationService.create(notification);\n+        Long notificationId = (Long) response.getEntity();\n+        notification = notificationService.read(notificationId);\n         assertNotNull(notification);\n \n         // 2. create user"}]}