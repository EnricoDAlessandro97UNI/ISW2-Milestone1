{"sha":"3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNkYmJmZWMyMWE1YjFjYWRjYjVjODBiNGJkYmYxOThhMDY3YjllNTA=","commit":{"author":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-03T17:11:27Z"},"committer":{"name":"René Mulder","email":"rene@apache.org","date":"2012-05-03T17:11:27Z"},"message":"sonar: create final string before performing as SQL statement\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1333555 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e36c839e36db2f7990f828ab84c3270b5ae532e9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e36c839e36db2f7990f828ab84c3270b5ae532e9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50/comments","author":null,"committer":null,"parents":[{"sha":"e2f69893e62e256506b4a26a49f93ecf7307f300","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e2f69893e62e256506b4a26a49f93ecf7307f300","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e2f69893e62e256506b4a26a49f93ecf7307f300"}],"stats":{"total":13,"additions":8,"deletions":5},"files":[{"sha":"8c008bf6fd9869b9152591e5a9bab5d7214778e0","filename":"core/src/main/java/org/apache/syncope/core/init/ContentLoader.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java?ref=3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50","patch":"@@ -65,8 +65,8 @@ public void load() {\n         boolean existingData = false;\n         try {\n             statement = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);\n-\n-            resultSet = statement.executeQuery(\"SELECT * FROM \" + SyncopeConf.class.getSimpleName());\n+            final String queryContent = \"SELECT * FROM \" + SyncopeConf.class.getSimpleName();\n+            resultSet = statement.executeQuery(queryContent);\n             resultSet.last();\n \n             existingData = resultSet.getRow() > 0;\n@@ -111,7 +111,8 @@ public void load() {\n \n                 try {\n                     statement = conn.createStatement();\n-                    statement.executeUpdate(views.get(idx).toString().replaceAll(\"\\\\n\", \" \"));\n+                    final String updateViews = views.get(idx).toString().replaceAll(\"\\\\n\", \" \");\n+                    statement.executeUpdate(updateViews);\n                     statement.close();\n                 } catch (SQLException e) {\n                     LOG.error(\"Could not create view \", e);\n@@ -135,7 +136,8 @@ public void load() {\n \n                 try {\n                     statement = conn.createStatement();\n-                    statement.executeUpdate(indexes.get(idx).toString());\n+                    final String updateIndexed = indexes.get(idx).toString();\n+                    statement.executeUpdate(updateIndexed);\n                     statement.close();\n                 } catch (SQLException e) {\n                     LOG.error(\"Could not create index \", e);"},{"sha":"a3414742c881780316196b11eaeaab92b967759c","filename":"core/src/main/java/org/apache/syncope/core/util/ImportExport.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java?ref=3dbbfec21a5b1cadcb5c80b4bdbf198a067b9e50","patch":"@@ -131,7 +131,8 @@ private void setParameters(final String tableName, final Attributes attrs, final\n \n         try {\n             stmt = conn.createStatement();\n-            rs = stmt.executeQuery(\"SELECT * FROM \" + tableName);\n+            final String queryString = \"SELECT * FROM \" + tableName;\n+            rs = stmt.executeQuery(queryString);\n             for (int i = 0; i < rs.getMetaData().getColumnCount(); i++) {\n                 colTypes.put(rs.getMetaData().getColumnName(i + 1).toUpperCase(), rs.getMetaData().getColumnType(i + 1));\n             }"}]}