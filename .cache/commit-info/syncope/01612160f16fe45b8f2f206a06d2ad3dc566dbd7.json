{"sha":"01612160f16fe45b8f2f206a06d2ad3dc566dbd7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAxNjEyMTYwZjE2ZmU0NWI4ZjJmMjA2YTA2ZDJhZDNkYzU2NmRiZDc=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-11-12T10:26:05Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-11-12T10:31:05Z"},"message":"[SYNCOPE-156] Schemas management","tree":{"sha":"ba4e0a8c2db8a105b7249bb643724981334bcf2a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ba4e0a8c2db8a105b7249bb643724981334bcf2a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/01612160f16fe45b8f2f206a06d2ad3dc566dbd7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/01612160f16fe45b8f2f206a06d2ad3dc566dbd7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/01612160f16fe45b8f2f206a06d2ad3dc566dbd7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"93ed788b5aed6761d230b36cf7e8f13301ddccae","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93ed788b5aed6761d230b36cf7e8f13301ddccae","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/93ed788b5aed6761d230b36cf7e8f13301ddccae"}],"stats":{"total":2202,"additions":2194,"deletions":8},"files":[{"sha":"a0435e03bcb7277179dc7c19b3ee5ef552e1688b","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -83,6 +83,12 @@ public BasePage(final PageParameters parameters) {\n         WebMarkupContainer confULContainer = new WebMarkupContainer(getULContainerId(\"configuration\"));\n         confLIContainer.add(confULContainer);\n \n+        liContainer = new WebMarkupContainer(getLIContainerId(\"schemas\"));\n+        confULContainer.add(liContainer);\n+        BookmarkablePageLink<Page> schemaLink = new BookmarkablePageLink<>(\"schemas\", Schemas.class);\n+//        MetaDataRoleAuthorizationStrategy.authorize(schemaLink, WebPage.ENABLE, Entitlement.SCHEMA_LIST);\n+        liContainer.add(schemaLink);\n+\n         liContainer = new WebMarkupContainer(getLIContainerId(\"workflow\"));\n         confULContainer.add(liContainer);\n         BookmarkablePageLink<Page> link = new BookmarkablePageLink<>(\"workflow\", Workflow.class);"},{"sha":"421ef0009ae894084c52a7c1e4b0b862d53c5fcf","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Schemas.java","status":"added","additions":143,"deletions":0,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,143 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import static org.apache.wicket.Component.ENABLE;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.SchemasPanel;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.types.Entitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.EmptyPanel;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.syncope.client.console.panels.SchemaModalPanel;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+\n+public class Schemas extends BasePage {\n+\n+    private static final long serialVersionUID = 8091922398776299403L;\n+\n+    private final BaseModal<AbstractSchemaTO> modal;\n+\n+    public Schemas(final PageParameters parameters) {\n+        super(parameters);\n+\n+        this.modal = new BaseModal<>(\"modal\");\n+\n+        final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.add(new Label(\"header\", \"AnyTypeClasses/Schemas\"));\n+        content.setOutputMarkupId(true);\n+        content.add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(getPageReference())));\n+        content.add(buildCreateSchemaLink());\n+        add(content);\n+\n+        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                target.add();\n+                modal.show(false);\n+\n+                if (((AbstractBasePage) Schemas.this.getPage()).isModalResult()) {\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    feedbackPanel.refresh(target);\n+                    ((AbstractBasePage) Schemas.this.getPage()).setModalResult(false);\n+                }\n+            }\n+        });\n+\n+        add(modal);\n+\n+    }\n+\n+    private List<ITab> buildTabList(final PageReference pageReference) {\n+\n+        final List<ITab> tabs = new ArrayList<>();\n+\n+        tabs.add(new AbstractTab(new Model<>(\"AnyTypeClasses\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+//                final AnyTypeClassesPanel objectClassesPanel =\n+//                        new AnyTypeClassesPanel(panelId, getPageReference(), false);\n+//                objectClassesPanel.setEnabled(false);\n+//                return objectClassesPanel;\n+                return new EmptyPanel(panelId);\n+            }\n+        });\n+\n+        tabs.add(new AbstractTab(new Model<>(\"Schemas\")) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new SchemasPanel(panelId, getPageReference(), modal);\n+            }\n+        });\n+\n+        return tabs;\n+    }\n+\n+    private AjaxLink<Void> buildCreateSchemaLink() {\n+\n+        final AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\"createSchemaLink\", getPageReference()) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            protected void onClickInternal(final AjaxRequestTarget target) {\n+                modal.header(new ResourceModel(\"createSchema\"));\n+\n+                final SchemaModalPanel panel = new SchemaModalPanel(modal, getPageReference(), true);\n+\n+                target.add(modal.setContent(panel));\n+                modal.addSumbitButton();\n+                modal.show(true);\n+            }\n+        };\n+\n+        if (SyncopeConsoleSession.get().owns(Entitlement.SCHEMA_CREATE)) {\n+            MetaDataRoleAuthorizationStrategy.authorize(createLink, ENABLE, Entitlement.SCHEMA_CREATE);\n+        }\n+\n+        return createLink;\n+    }\n+}"},{"sha":"8522d3372c34322e4a11419b57af757caf0b3973","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSchemaDetailsPanel.java","status":"added","additions":82,"deletions":0,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSchemaDetailsPanel.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import static org.apache.syncope.client.console.panels.AbstractModalPanel.FORM;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public abstract class AbstractSchemaDetailsPanel extends Panel {\n+\n+    private static final long serialVersionUID = -9096843774956370327L;\n+\n+    /**\n+     * Schema rest client for create and update operations\n+     */\n+    protected final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    /**\n+     * Feedback panel specified by the caller.\n+     */\n+    protected final NotificationPanel feedbackPanel;\n+\n+    /**\n+     * Schema form\n+     */\n+    protected final Form<AbstractSchemaTO> schemaForm;\n+\n+    protected final AbstractSchemaTO schemaTO;\n+    \n+    private final AbstractBasePage page;\n+    \n+    public AbstractSchemaDetailsPanel(\n+            final String id,\n+            final PageReference pageReference,\n+            final BaseModal<AbstractSchemaTO> modal) {\n+        super(id);\n+\n+        this.page = (AbstractBasePage) pageReference.getPage();\n+        this.feedbackPanel = page.getFeedbackPanel();\n+        this.schemaTO = modal.getFormModel();\n+\n+        schemaForm = new Form<>(FORM);\n+        schemaForm.setModel(new CompoundPropertyModel<>(schemaTO));\n+        schemaForm.setOutputMarkupId(true);\n+\n+        final AjaxTextFieldPanel name =\n+                new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(schemaTO, \"key\"));\n+        name.addRequiredLabel();\n+        name.setEnabled(schemaTO.getKey() == null || schemaTO.getKey().isEmpty());\n+\n+        schemaForm.add(name);\n+        add(schemaForm);\n+    }\n+\n+    public abstract void getOnSubmit(final AjaxRequestTarget target, final BaseModal<?> modal, final Form<?> form,\n+            final PageReference pageReference, final boolean createFlag);\n+}"},{"sha":"2d1c07ff817fdb535342adcf28c226271e1fa2a4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class AnyTypeClassesPanel extends Panel {\n+\n+    private static final long serialVersionUID = -2356760296223908382L;\n+\n+    public AnyTypeClassesPanel(final String id, final PageReference pageReference, final boolean unwraped) {\n+        super(id);\n+    }\n+    \n+}"},{"sha":"d8b42be3932c8e4b096b482c2d1aa6181ce0eee3","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DerSchemaDetails.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.JexlHelpUtils;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.to.DerSchemaTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class DerSchemaDetails extends AbstractSchemaDetailsPanel {\n+\n+    private static final long serialVersionUID = 6668789770131753386L;\n+\n+    public DerSchemaDetails(final String id,\n+            final PageReference pageReference,\n+            final BaseModal<AbstractSchemaTO> modal) {\n+        super(id, pageReference, modal);\n+\n+        final AjaxTextFieldPanel expression = new AjaxTextFieldPanel(\"expression\", getString(\"expression\"),\n+                new PropertyModel<String>(schemaTO, \"expression\"));\n+        expression.addRequiredLabel();\n+        schemaForm.add(expression);\n+\n+        final WebMarkupContainer jexlHelp = JexlHelpUtils.getJexlHelpWebContainer(\"jexlHelp\");\n+\n+        final AjaxLink<Void> questionMarkJexlHelp = JexlHelpUtils.getAjaxLink(jexlHelp, \"questionMarkJexlHelp\");\n+        schemaForm.add(questionMarkJexlHelp);\n+        questionMarkJexlHelp.add(jexlHelp);\n+    }\n+\n+    @Override\n+    public void getOnSubmit(final AjaxRequestTarget target,\n+            final BaseModal<?> modal, final Form<?> form, final PageReference pageReference, final boolean createFlag) {\n+        \n+        try {\n+            final DerSchemaTO updatedDerSchemaTO = DerSchemaTO.class.cast(form.getModelObject());\n+            if (createFlag) {\n+                schemaRestClient.createDerSchema(updatedDerSchemaTO);\n+            } else {\n+                schemaRestClient.updateDerSchema(updatedDerSchemaTO);\n+            }\n+\n+            if (pageReference.getPage() instanceof AbstractBasePage) {\n+                ((AbstractBasePage) pageReference.getPage()).setModalResult(true);\n+            }\n+            modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While creating or updating derived schema\", e);\n+            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            modal.getFeedbackPanel().refresh(target);\n+        }\n+    }\n+}"},{"sha":"2e5acdad4563dfe56fe704def0717ba04771bb6a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/PlainSchemaDetails.java","status":"added","additions":425,"deletions":0,"changes":425,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,425 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.JexlHelpUtils;\n+import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.util.string.Strings;\n+\n+public class PlainSchemaDetails extends AbstractSchemaDetailsPanel {\n+\n+    private static final long serialVersionUID = 5378100729213456451L;\n+\n+    private static final MIMETypesLoader MIME_TYPES_INITIALIZER = new MIMETypesLoader();\n+\n+    private final MultiFieldPanel<String> enumerationValues;\n+\n+    private final MultiFieldPanel<String> enumerationKeys;\n+\n+    public PlainSchemaDetails(\n+            final String id,\n+            final PageReference pageReference,\n+            final BaseModal<AbstractSchemaTO> modal) {\n+        super(id, pageReference, modal);\n+\n+        final AjaxDropDownChoicePanel<AttrSchemaType> type = new AjaxDropDownChoicePanel<>(\n+                \"type\", getString(\"type\"), new PropertyModel<AttrSchemaType>(schemaTO, \"type\"));\n+\n+        type.setChoices(Arrays.asList(AttrSchemaType.values()));\n+        type.setEnabled(schemaTO.getKey() == null || schemaTO.getKey().isEmpty());\n+        type.addRequiredLabel();\n+\n+        schemaForm.add(type);\n+\n+        // long, double, date\n+        final AjaxTextFieldPanel conversionPattern = new AjaxTextFieldPanel(\"conversionPattern\",\n+                getString(\"conversionPattern\"), new PropertyModel<String>(schemaTO, \"conversionPattern\"));\n+\n+        schemaForm.add(conversionPattern);\n+\n+        final WebMarkupContainer conversionParams = new WebMarkupContainer(\"conversionParams\");\n+        conversionParams.setOutputMarkupPlaceholderTag(true);\n+        conversionParams.add(conversionPattern);\n+\n+        schemaForm.add(conversionParams);\n+\n+        final WebMarkupContainer typeParams = new WebMarkupContainer(\"typeParams\");\n+\n+        typeParams.setOutputMarkupPlaceholderTag(true);\n+\n+        // enum\n+        final AjaxTextFieldPanel enumerationValuesPanel =\n+                new AjaxTextFieldPanel(\"panel\", \"enumerationValues\", new Model<String>(null));\n+\n+        enumerationValues = new MultiFieldPanel.Builder<>(\n+                new ListModel<String>()).build(\n+                        \"enumerationValues\",\n+                        \"enumerationValues\",\n+                        enumerationValuesPanel);\n+        enumerationValues.setModelObject(getEnumValuesAsList(((PlainSchemaTO) schemaTO).getEnumerationValues()));\n+\n+        enumerationKeys = new MultiFieldPanel.Builder<>(\n+                new ListModel<String>()).build(\n+                        \"enumerationKeys\",\n+                        \"enumerationKeys\",\n+                        new AjaxTextFieldPanel(\"panel\", \"enumerationKeys\", new Model<String>()));\n+        enumerationKeys.setModelObject(getEnumValuesAsList(((PlainSchemaTO) schemaTO).getEnumerationKeys()));\n+\n+        final WebMarkupContainer enumParams = new WebMarkupContainer(\"enumParams\");\n+        enumParams.setOutputMarkupPlaceholderTag(true);\n+        enumParams.add(enumerationValues);\n+        enumParams.add(enumerationKeys);\n+        typeParams.add(enumParams);\n+\n+        // encrypted\n+        final AjaxTextFieldPanel secretKey = new AjaxTextFieldPanel(\"secretKey\",\n+                getString(\"secretKey\"), new PropertyModel<String>(schemaTO, \"secretKey\"));\n+\n+        final AjaxDropDownChoicePanel<CipherAlgorithm> cipherAlgorithm = new AjaxDropDownChoicePanel<>(\n+                \"cipherAlgorithm\", getString(\"cipherAlgorithm\"),\n+                new PropertyModel<CipherAlgorithm>(schemaTO, \"cipherAlgorithm\"));\n+\n+        cipherAlgorithm.setChoices(Arrays.asList(CipherAlgorithm.values()));\n+\n+        final WebMarkupContainer encryptedParams = new WebMarkupContainer(\"encryptedParams\");\n+        encryptedParams.setOutputMarkupPlaceholderTag(true);\n+        encryptedParams.add(secretKey);\n+        encryptedParams.add(cipherAlgorithm);\n+\n+        typeParams.add(encryptedParams);\n+\n+        // binary\n+        final AjaxTextFieldPanel mimeType = new AjaxTextFieldPanel(\"mimeType\",\n+                getString(\"mimeType\"), new PropertyModel<String>(schemaTO, \"mimeType\"));\n+\n+        mimeType.setChoices(MIME_TYPES_INITIALIZER.getMimeTypes());\n+\n+        final WebMarkupContainer binaryParams = new WebMarkupContainer(\"binaryParams\");\n+        binaryParams.setOutputMarkupPlaceholderTag(true);\n+        binaryParams.add(mimeType);\n+        typeParams.add(binaryParams);\n+        schemaForm.add(typeParams);\n+\n+        // show or hide\n+        showHide(schemaTO, type,\n+                conversionParams, conversionPattern,\n+                enumParams, enumerationValuesPanel, enumerationValues, enumerationKeys,\n+                encryptedParams, secretKey, cipherAlgorithm,\n+                binaryParams, mimeType);\n+\n+        type.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                PlainSchemaDetails.this.showHide(schemaTO, type,\n+                        conversionParams, conversionPattern,\n+                        enumParams, enumerationValuesPanel, enumerationValues, enumerationKeys,\n+                        encryptedParams, secretKey, cipherAlgorithm,\n+                        binaryParams, mimeType);\n+                target.add(conversionParams);\n+                target.add(typeParams);\n+            }\n+        }\n+        );\n+\n+        final IModel<List<String>> validatorsList = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                return schemaRestClient.getAllValidatorClasses();\n+            }\n+        };\n+\n+        final AjaxDropDownChoicePanel<String> validatorClass = new AjaxDropDownChoicePanel<>(\"validatorClass\",\n+                getString(\"validatorClass\"), new PropertyModel<String>(schemaTO, \"validatorClass\"));\n+        ((DropDownChoice) validatorClass.getField()).setNullValid(true);\n+        validatorClass.setChoices(validatorsList.getObject());\n+        schemaForm.add(validatorClass);\n+\n+        final AutoCompleteTextField<String> mandatoryCondition =\n+                new AutoCompleteTextField<String>(\"mandatoryCondition\") {\n+\n+                    private static final long serialVersionUID = -2428903969518079100L;\n+\n+                    @Override\n+                    protected Iterator<String> getChoices(final String input) {\n+                        List<String> choices = new ArrayList<>();\n+\n+                        if (Strings.isEmpty(input)) {\n+                            choices = Collections.emptyList();\n+                        } else if (\"true\".startsWith(input.toLowerCase())) {\n+                            choices.add(\"true\");\n+                        } else if (\"false\".startsWith(input.toLowerCase())) {\n+                            choices.add(\"false\");\n+                        }\n+\n+                        return choices.iterator();\n+                    }\n+                };\n+        mandatoryCondition.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+            }\n+        });\n+        schemaForm.add(mandatoryCondition);\n+\n+        final WebMarkupContainer pwdJexlHelp = JexlHelpUtils.getJexlHelpWebContainer(\"jexlHelp\");\n+\n+        final AjaxLink<Void> pwdQuestionMarkJexlHelp = JexlHelpUtils.getAjaxLink(pwdJexlHelp, \"questionMarkJexlHelp\");\n+        schemaForm.add(pwdQuestionMarkJexlHelp);\n+        pwdQuestionMarkJexlHelp.add(pwdJexlHelp);\n+\n+        final AjaxCheckBoxPanel multivalue = new AjaxCheckBoxPanel(\"multivalue\", getString(\"multivalue\"),\n+                new PropertyModel<Boolean>(schemaTO, \"multivalue\"));\n+        schemaForm.add(multivalue);\n+\n+        final AjaxCheckBoxPanel readonly = new AjaxCheckBoxPanel(\"readonly\", getString(\"readonly\"),\n+                new PropertyModel<Boolean>(schemaTO, \"readonly\"));\n+        schemaForm.add(readonly);\n+\n+        final AjaxCheckBoxPanel uniqueConstraint = new AjaxCheckBoxPanel(\"uniqueConstraint\",\n+                getString(\"uniqueConstraint\"), new PropertyModel<Boolean>(schemaTO, \"uniqueConstraint\"));\n+        schemaForm.add(uniqueConstraint);\n+\n+    }\n+\n+    private void showHide(final AbstractSchemaTO schema, final AjaxDropDownChoicePanel<AttrSchemaType> type,\n+            final WebMarkupContainer conversionParams, final AjaxTextFieldPanel conversionPattern,\n+            final WebMarkupContainer enumParams, final AjaxTextFieldPanel enumerationValuesPanel,\n+            final MultiFieldPanel<String> enumerationValues, final MultiFieldPanel<String> enumerationKeys,\n+            final WebMarkupContainer encryptedParams,\n+            final AjaxTextFieldPanel secretKey, final AjaxDropDownChoicePanel<CipherAlgorithm> cipherAlgorithm,\n+            final WebMarkupContainer binaryParams, final AjaxTextFieldPanel mimeType) {\n+\n+        final int typeOrdinal = Integer.parseInt(type.getField().getValue());\n+        if (AttrSchemaType.Long.ordinal() == typeOrdinal\n+                || AttrSchemaType.Double.ordinal() == typeOrdinal\n+                || AttrSchemaType.Date.ordinal() == typeOrdinal) {\n+\n+            conversionParams.setVisible(true);\n+\n+            enumParams.setVisible(false);\n+            if (enumerationValuesPanel.isRequired()) {\n+                enumerationValuesPanel.removeRequiredLabel();\n+            }\n+            enumerationValues.setModelObject(getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+\n+            encryptedParams.setVisible(false);\n+            if (secretKey.isRequired()) {\n+                secretKey.removeRequiredLabel();\n+            }\n+            secretKey.setModelObject(null);\n+            if (cipherAlgorithm.isRequired()) {\n+                cipherAlgorithm.removeRequiredLabel();\n+            }\n+            cipherAlgorithm.setModelObject(null);\n+\n+            binaryParams.setVisible(false);\n+            mimeType.setModelObject(null);\n+        } else if (AttrSchemaType.Enum.ordinal() == typeOrdinal) {\n+            conversionParams.setVisible(false);\n+            conversionPattern.setModelObject(null);\n+\n+            enumParams.setVisible(true);\n+            if (!enumerationValuesPanel.isRequired()) {\n+                enumerationValuesPanel.addRequiredLabel();\n+            }\n+            enumerationValues.setModelObject(getEnumValuesAsList(((PlainSchemaTO) schema).getEnumerationValues()));\n+            enumerationKeys.setModelObject(getEnumValuesAsList(((PlainSchemaTO) schema).getEnumerationKeys()));\n+\n+            encryptedParams.setVisible(false);\n+            if (secretKey.isRequired()) {\n+                secretKey.removeRequiredLabel();\n+            }\n+            secretKey.setModelObject(null);\n+            if (cipherAlgorithm.isRequired()) {\n+                cipherAlgorithm.removeRequiredLabel();\n+            }\n+            cipherAlgorithm.setModelObject(null);\n+\n+            binaryParams.setVisible(false);\n+            mimeType.setModelObject(null);\n+        } else if (AttrSchemaType.Encrypted.ordinal() == typeOrdinal) {\n+            conversionParams.setVisible(false);\n+            conversionPattern.setModelObject(null);\n+\n+            enumParams.setVisible(false);\n+            if (enumerationValuesPanel.isRequired()) {\n+                enumerationValuesPanel.removeRequiredLabel();\n+            }\n+            enumerationValues.setModelObject(getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+\n+            encryptedParams.setVisible(true);\n+            if (!secretKey.isRequired()) {\n+                secretKey.addRequiredLabel();\n+            }\n+            if (cipherAlgorithm.isRequired()) {\n+                cipherAlgorithm.addRequiredLabel();\n+            }\n+\n+            binaryParams.setVisible(false);\n+            mimeType.setModelObject(null);\n+        } else if (AttrSchemaType.Binary.ordinal() == typeOrdinal) {\n+            conversionParams.setVisible(false);\n+            conversionPattern.setModelObject(null);\n+\n+            enumParams.setVisible(false);\n+            if (enumerationValuesPanel.isRequired()) {\n+                enumerationValuesPanel.removeRequiredLabel();\n+            }\n+            enumerationValues.setModelObject(getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+\n+            encryptedParams.setVisible(false);\n+            if (secretKey.isRequired()) {\n+                secretKey.removeRequiredLabel();\n+            }\n+            secretKey.setModelObject(null);\n+            if (cipherAlgorithm.isRequired()) {\n+                cipherAlgorithm.removeRequiredLabel();\n+            }\n+            cipherAlgorithm.setModelObject(null);\n+\n+            binaryParams.setVisible(true);\n+        } else {\n+            conversionParams.setVisible(false);\n+            conversionPattern.setModelObject(null);\n+\n+            enumParams.setVisible(false);\n+            if (enumerationValuesPanel.isRequired()) {\n+                enumerationValuesPanel.removeRequiredLabel();\n+            }\n+            enumerationValues.setModelObject(getEnumValuesAsList(null));\n+            enumerationKeys.setModelObject(getEnumValuesAsList(null));\n+\n+            encryptedParams.setVisible(false);\n+            if (secretKey.isRequired()) {\n+                secretKey.removeRequiredLabel();\n+            }\n+            secretKey.setModelObject(null);\n+            if (cipherAlgorithm.isRequired()) {\n+                cipherAlgorithm.removeRequiredLabel();\n+            }\n+            cipherAlgorithm.setModelObject(null);\n+\n+            binaryParams.setVisible(false);\n+            mimeType.setModelObject(null);\n+        }\n+    }\n+\n+    private String getEnumValuesAsString(final List<String> enumerationValues) {\n+        final StringBuilder builder = new StringBuilder();\n+\n+        for (String str : enumerationValues) {\n+            if (StringUtils.isNotBlank(str)) {\n+                if (builder.length() > 0) {\n+                    builder.append(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n+                }\n+\n+                builder.append(str.trim());\n+            }\n+        }\n+\n+        return builder.toString();\n+    }\n+\n+    private List<String> getEnumValuesAsList(final String enumerationValues) {\n+        final List<String> values = new ArrayList<>();\n+\n+        if (StringUtils.isNotBlank(enumerationValues)) {\n+            for (String value : enumerationValues.split(SyncopeConstants.ENUM_VALUES_SEPARATOR)) {\n+                values.add(value.trim());\n+            }\n+        } else {\n+            values.add(StringUtils.EMPTY);\n+        }\n+\n+        return values;\n+    }\n+\n+    @Override\n+    public void getOnSubmit(final AjaxRequestTarget target, final BaseModal<?> modal,\n+            final Form<?> form, final PageReference pageReference, final boolean createFlag) {\n+\n+        try {\n+            final PlainSchemaTO updatedPlainSchemaTO = PlainSchemaTO.class.cast(form.getModelObject());\n+\n+            updatedPlainSchemaTO.setEnumerationValues(\n+                    getEnumValuesAsString(enumerationValues.getView().getModelObject()));\n+            updatedPlainSchemaTO.setEnumerationKeys(getEnumValuesAsString(enumerationKeys.getView().getModelObject()));\n+\n+            if (createFlag) {\n+                schemaRestClient.createPlainSchema(updatedPlainSchemaTO);\n+            } else {\n+                schemaRestClient.updatePlainSchema(updatedPlainSchemaTO);\n+            }\n+\n+            if (pageReference.getPage() instanceof AbstractBasePage) {\n+                ((AbstractBasePage) pageReference.getPage()).setModalResult(true);\n+            }\n+            modal.close(target);\n+        } catch (Exception e) {\n+            LOG.error(\"While creating or updating plain schema\", e);\n+            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            modal.getFeedbackPanel().refresh(target);\n+        }\n+    }\n+}"},{"sha":"2f589cc0caadf5b227a5ef7be6a591f6555d649a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaModalPanel.java","status":"added","additions":119,"deletions":0,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.util.Arrays;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+\n+public class SchemaModalPanel extends AbstractModalPanel {\n+\n+    private static final long serialVersionUID = -4681998932778822125L;\n+\n+    private AbstractSchemaDetailsPanel schemaPanel;\n+\n+    private final boolean createFlag;\n+\n+    public SchemaModalPanel(\n+            final BaseModal<AbstractSchemaTO> modal,\n+            final PageReference pageRef, final boolean createFlag) {\n+        super(modal, pageRef);\n+\n+        this.createFlag = createFlag;\n+        final BaseModal<AbstractSchemaTO> schemaModal = modal;\n+\n+        final Panel panel = this;\n+        final Form<SchemaType> kindForm = new Form<>(\"kindForm\");\n+        add(kindForm);\n+\n+        final AjaxDropDownChoicePanel<SchemaType> kind = new AjaxDropDownChoicePanel<>(\n+                \"kind\", getString(\"kind\"), new Model<SchemaType>());\n+        kind.setChoices(Arrays.asList(SchemaType.values()));\n+        kind.setOutputMarkupId(true);\n+\n+        SchemaType schemaType = SchemaType.PLAIN;\n+        if (!createFlag) {\n+            schemaType = SchemaType.fromToClass(schemaModal.getFormModel().getClass());\n+            kind.setModelObject(schemaType);\n+            kind.setEnabled(false);\n+        }\n+\n+        ((DropDownChoice) kind.getField()).setNullValid(false);\n+        kindForm.add(kind);\n+\n+        kind.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                schemaPanel = getSchemaPanel(\"details\", kind.getModelObject(), modal);\n+                panel.addOrReplace(schemaPanel);\n+                target.add(panel);\n+            }\n+        });\n+\n+        schemaPanel = getSchemaPanel(\"details\", schemaType, modal);\n+        schemaPanel.setOutputMarkupId(true);\n+        addOrReplace(schemaPanel);\n+    }\n+\n+    private AbstractSchemaDetailsPanel getSchemaPanel(final String id,\n+            final SchemaType schemaType, final BaseModal<AbstractSchemaTO> modal) {\n+        final AbstractSchemaDetailsPanel panel;\n+\n+        if (createFlag) {\n+            try {\n+                Class<? extends AbstractSchemaTO> schemaTOClass = schemaType.getToClass();\n+                modal.setFormModel((AbstractSchemaTO) schemaTOClass.newInstance());\n+            } catch (InstantiationException | IllegalAccessException ex) {\n+                LOG.error(\"SchemaType not found\", ex);\n+            }\n+        }\n+\n+        switch (schemaType) {\n+            case DERIVED:\n+                panel = new DerSchemaDetails(id, pageRef, modal);\n+                break;\n+            case VIRTUAL:\n+                panel = new VirSchemaDetails(id, pageRef, modal);\n+                break;\n+            case PLAIN:\n+            default:\n+                panel = new PlainSchemaDetails(id, pageRef, modal);\n+        }\n+        panel.setOutputMarkupId(true);\n+        return panel;\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        schemaPanel.getOnSubmit(target, modal, form, pageRef, createFlag);\n+    }\n+}"},{"sha":"a66afa6ddcaa350ab1cf5ea43e4cef4fc157890c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemasPanel.java","status":"added","additions":372,"deletions":0,"changes":372,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,372 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.Collapsible;\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.PreferenceManager;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.SelectChoiceRenderer;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.types.Entitlement;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.springframework.beans.BeanWrapper;\n+import org.springframework.beans.BeanWrapperImpl;\n+import org.springframework.util.ReflectionUtils;\n+\n+public class SchemasPanel extends Panel {\n+\n+    private static final long serialVersionUID = -1140213992451232279L;\n+\n+    private static final Map<SchemaType, String> PAGINATOR_ROWS_KEYS =\n+            new HashMap<SchemaType, String>() {\n+\n+                private static final long serialVersionUID = 3109256773218160485L;\n+\n+                {\n+                    put(SchemaType.PLAIN, Constants.PREF_CONF_SCHEMA_PAGINATOR_ROWS);\n+                    put(SchemaType.DERIVED, Constants.PREF_CONF_SCHEMA_PAGINATOR_ROWS);\n+                    put(SchemaType.VIRTUAL, Constants.PREF_CONF_SCHEMA_PAGINATOR_ROWS);\n+                }\n+            };\n+\n+    private static final Map<SchemaType, List<String>> COL_NAMES = new HashMap<SchemaType, List<String>>() {\n+\n+        private static final long serialVersionUID = 3109256773218160485L;\n+\n+        {\n+            put(SchemaType.PLAIN, Arrays.asList(new String[] { \"key\", \"type\",\n+                \"mandatoryCondition\", \"uniqueConstraint\", \"multivalue\", \"readonly\" }));\n+            put(SchemaType.DERIVED, Arrays.asList(new String[] { \"key\", \"expression\" }));\n+            put(SchemaType.VIRTUAL, Arrays.asList(new String[] { \"key\", \"provision\", \"extAttrName\", \"readonly\" }));\n+        }\n+    };\n+\n+    private final NotificationPanel feedbackPanel;\n+\n+    private final AbstractBasePage page;\n+\n+    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+    private final PreferenceManager prefMan = new PreferenceManager();\n+\n+    private final PageReference pageReference;\n+\n+    private final BaseModal<AbstractSchemaTO> modal;\n+\n+    public SchemasPanel(final String id, final PageReference pageReference, final BaseModal<AbstractSchemaTO> modal) {\n+        super(id);\n+\n+        this.pageReference = pageReference;\n+        this.page = (AbstractBasePage) pageReference.getPage();\n+        this.feedbackPanel = page.getFeedbackPanel();\n+        this.modal = modal;\n+\n+        final Collapsible collapsible = new Collapsible(\"collapsePanel\", buildTabList());\n+        collapsible.setOutputMarkupId(true);\n+        add(collapsible);\n+\n+    }\n+\n+    private List<ITab> buildTabList() {\n+\n+        final List<ITab> tabs = new ArrayList<>();\n+\n+        for (final SchemaType schemaType : SchemaType.values()) {\n+            tabs.add(new AbstractTab(new Model<>(schemaType.name())) {\n+\n+                private static final long serialVersionUID = 1037272333056449378L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new SchemaTypePanel(panelId, schemaType);\n+                }\n+            });\n+        }\n+        return tabs;\n+    }\n+\n+    private <T extends SchemaModalPanel> List<IColumn<AbstractSchemaTO, String>> getColumns(\n+            final WebMarkupContainer webContainer,\n+            final SchemaType schemaType,\n+            final Collection<String> fields) {\n+\n+        final List<IColumn<AbstractSchemaTO, String>> columns = new ArrayList<>();\n+\n+        for (final String field : fields) {\n+            final Field clazzField = ReflectionUtils.findField(schemaType.getToClass(), field);\n+\n+            if (clazzField != null) {\n+                if (clazzField.getType().equals(Boolean.class) || clazzField.getType().equals(boolean.class)) {\n+                    columns.add(new AbstractColumn<AbstractSchemaTO, String>(new ResourceModel(field)) {\n+\n+                        private static final long serialVersionUID = 8263694778917279290L;\n+\n+                        @Override\n+                        public void populateItem(final Item<ICellPopulator<AbstractSchemaTO>> item,\n+                                final String componentId, final IModel<AbstractSchemaTO> model) {\n+\n+                            BeanWrapper bwi = new BeanWrapperImpl(model.getObject());\n+                            Object obj = bwi.getPropertyValue(field);\n+\n+                            item.add(new Label(componentId, StringUtils.EMPTY));\n+                            if (Boolean.valueOf(obj.toString())) {\n+                                item.add(new AttributeModifier(\"class\", \"glyphicon glyphicon-ok\"));\n+                                item.add(new AttributeModifier(\"style\", \"display: table-cell; text-align: center;\"));\n+                            }\n+                        }\n+\n+                        @Override\n+                        public String getCssClass() {\n+                            return \"short_fixedsize\";\n+                        }\n+                    });\n+                } else {\n+                    final IColumn<AbstractSchemaTO, String> column =\n+                            new PropertyColumn<AbstractSchemaTO, String>(new ResourceModel(field), field, field) {\n+\n+                                private static final long serialVersionUID = 3282547854226892169L;\n+\n+                                @Override\n+                                public String getCssClass() {\n+                                    String css = super.getCssClass();\n+                                    if (\"key\".equals(field)) {\n+                                        css = StringUtils.isBlank(css)\n+                                                ? \"medium_fixedsize\"\n+                                                : css + \" medium_fixedsize\";\n+                                    }\n+                                    return css;\n+                                }\n+                            };\n+                    columns.add(column);\n+                }\n+            }\n+        }\n+\n+        columns.add(new AbstractColumn<AbstractSchemaTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<AbstractSchemaTO>> item, final String componentId,\n+                    final IModel<AbstractSchemaTO> model) {\n+\n+                final AbstractSchemaTO schemaTO = model.getObject();\n+\n+                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(pageReference);\n+                actionLinks.setDisableIndicator(true);\n+                actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        modal.header(Model.of(schemaTO.getKey()));\n+                        modal.setFormModel(schemaTO);\n+                        modal.addSumbitButton();\n+                        modal.show(true);\n+                        target.add(modal.setContent(new SchemaModalPanel(modal, pageReference, false)));\n+                    }\n+                }, ActionLink.ActionType.EDIT, Entitlement.SCHEMA_UPDATE).addWithRoles(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+\n+                        switch (schemaType) {\n+                            case DERIVED:\n+                                schemaRestClient.deleteDerSchema(schemaTO.getKey());\n+                                break;\n+\n+                            case VIRTUAL:\n+                                schemaRestClient.deleteVirSchema(schemaTO.getKey());\n+                                break;\n+\n+                            default:\n+                                schemaRestClient.deletePlainSchema(schemaTO.getKey());\n+                                break;\n+                        }\n+\n+                        info(getString(Constants.OPERATION_SUCCEEDED));\n+                        feedbackPanel.refresh(target);\n+\n+                        target.add(webContainer);\n+                    }\n+                }, ActionLink.ActionType.DELETE, Entitlement.SCHEMA_DELETE);\n+\n+                item.add(actionLinks.build(componentId));\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    private final class SchemaTypePanel extends Panel {\n+\n+        private static final long serialVersionUID = 2854050613688773575L;\n+\n+        private int pageRows;\n+\n+        private SchemaTypePanel(final String id, final SchemaType schemaType) {\n+            super(id);\n+            setup(schemaType);\n+        }\n+\n+        private void setup(final SchemaType schemaType) {\n+\n+            final WebMarkupContainer schemaWrapContainer = new WebMarkupContainer(\"schemaWrapContainer\");\n+            schemaWrapContainer.setOutputMarkupId(true);\n+            add(schemaWrapContainer);\n+\n+            if (schemaType != SchemaType.VIRTUAL) {\n+                schemaWrapContainer.add(new AttributeModifier(\"style\", \"width:auto;\"));\n+            }\n+\n+            final WebMarkupContainer schemaContainer = new WebMarkupContainer(\"schemaContainer\");\n+            schemaContainer.setOutputMarkupId(true);\n+            schemaWrapContainer.add(schemaContainer);\n+\n+            final String paginatorRowsKey = PAGINATOR_ROWS_KEYS.get(schemaType);\n+            pageRows = prefMan.getPaginatorRows(getRequest(), paginatorRowsKey);\n+\n+            final List<IColumn<AbstractSchemaTO, String>> tableCols = getColumns(schemaContainer,\n+                    schemaType, COL_NAMES.get(schemaType));\n+\n+            final AjaxFallbackDataTable<AbstractSchemaTO, String> table =\n+                    new AjaxFallbackDataTable<>(\"datatable\",\n+                            tableCols, new SchemaProvider(schemaType), pageRows, schemaContainer);\n+            table.setOutputMarkupId(true);\n+            schemaContainer.add(table);\n+\n+            schemaWrapContainer.add(getPaginatorForm(schemaContainer, table, \"paginator\", this, paginatorRowsKey));\n+        }\n+    }\n+\n+    private Form<Void> getPaginatorForm(final WebMarkupContainer webContainer,\n+            final AjaxFallbackDataTable<AbstractSchemaTO, String> dataTable,\n+            final String formname, final SchemaTypePanel schemaTypePanel, final String rowsPerPagePrefName) {\n+\n+        final Form<Void> form = new Form<>(formname);\n+\n+        final DropDownChoice<Integer> rowChooser = new DropDownChoice<>(\"rowsChooser\",\n+                new PropertyModel<Integer>(schemaTypePanel, \"pageRows\"), prefMan.getPaginatorChoices(),\n+                new SelectChoiceRenderer<Integer>());\n+\n+        rowChooser.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                prefMan.set(getRequest(), getResponse(), rowsPerPagePrefName, rowChooser.getInput());\n+                dataTable.setItemsPerPage(rowChooser.getModelObject());\n+\n+                target.add(webContainer);\n+            }\n+        });\n+\n+        form.add(rowChooser);\n+\n+        return form;\n+    }\n+\n+    private final class SchemaProvider extends SortableDataProvider<AbstractSchemaTO, String> {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private final SortableDataProviderComparator<AbstractSchemaTO> comparator;\n+\n+        private final SchemaType schemaType;\n+\n+        private SchemaProvider(final SchemaType schemaType) {\n+            super();\n+\n+            this.schemaType = schemaType;\n+\n+            // Default sorting\n+            setSort(\"key\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<AbstractSchemaTO> iterator(final long first, final long count) {\n+            @SuppressWarnings(\"unchecked\")\n+            final List<AbstractSchemaTO> list = schemaRestClient.getSchemas(this.schemaType);\n+\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return schemaRestClient.getSchemas(this.schemaType).size();\n+        }\n+\n+        @Override\n+        public IModel<AbstractSchemaTO> model(final AbstractSchemaTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"4914e84f0b746b85b66edd21719167c38444eec4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/VirSchemaDetails.java","status":"added","additions":162,"deletions":0,"changes":162,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,162 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.to.ProvisionTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.form.ChoiceRenderer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class VirSchemaDetails extends AbstractSchemaDetailsPanel {\n+\n+    private static final long serialVersionUID = 5979623248182851337L;\n+\n+    private final ResourceRestClient resourceRestClient = new ResourceRestClient();\n+\n+    private Map<Long, String> anys = new HashMap<>();\n+\n+    private final AjaxDropDownChoicePanel<Long> provision;\n+\n+    public VirSchemaDetails(final String id,\n+            final PageReference pageReference,\n+            final BaseModal<AbstractSchemaTO> modal) {\n+        super(id, pageReference, modal);\n+\n+        final AjaxCheckBoxPanel readonly = new AjaxCheckBoxPanel(\"readonly\", getString(\"readonly\"),\n+                new PropertyModel<Boolean>(schemaTO, \"readonly\"));\n+        schemaForm.add(readonly);\n+\n+        final AjaxDropDownChoicePanel<String> resource = new AjaxDropDownChoicePanel<>(\n+                \"resource\", getString(\"resource\"), new PropertyModel<String>(schemaTO, \"resource\"));\n+        resource.setChoices(\n+                CollectionUtils.collect(resourceRestClient.getAll(), new Transformer<ResourceTO, String>() {\n+\n+                    @Override\n+                    public String transform(final ResourceTO input) {\n+                        return input.getKey();\n+                    }\n+                }, new ArrayList<String>()));\n+\n+        resource.setOutputMarkupId(true);\n+        resource.addRequiredLabel();\n+        schemaForm.add(resource);\n+\n+        provision = new AjaxDropDownChoicePanel<>(\n+                \"provision\", getString(\"provision\"), new PropertyModel<Long>(schemaTO, \"provision\"));\n+\n+        provision.setChoices(new ArrayList<>(anys.keySet()));\n+        provision.setChoiceRenderer(new AnyTypeRenderer());\n+        provision.setOutputMarkupId(true);\n+        provision.setOutputMarkupPlaceholderTag(true);\n+        provision.addRequiredLabel();\n+        provision.setVisible(false);\n+\n+        schemaForm.add(provision);\n+\n+        final AjaxTextFieldPanel extAttrName = new AjaxTextFieldPanel(\n+                \"extAttrName\", getString(\"extAttrName\"), new PropertyModel<String>(schemaTO, \"extAttrName\"));\n+        extAttrName.addRequiredLabel();\n+        schemaForm.add(extAttrName);\n+\n+        add(schemaForm);\n+\n+        resource.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                anys.clear();\n+                if (resource != null & resource.getModelObject() != null) {\n+                    for (ProvisionTO provisionTO : resourceRestClient.read(resource.getModelObject()).getProvisions()) {\n+                        anys.put(provisionTO.getKey(), provisionTO.getAnyType());\n+                    }\n+                }\n+                provision.setChoices(new ArrayList<>(anys.keySet()));\n+                provision.setModelObject(0L);\n+                provision.setVisible(true);\n+                target.add(provision);\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void getOnSubmit(final AjaxRequestTarget target,\n+            final BaseModal<?> modal, final Form<?> form, final PageReference pageReference, final boolean createFlag) {\n+\n+        try {\n+            final VirSchemaTO updatedVirSchemaTO = VirSchemaTO.class.cast(form.getModelObject());\n+\n+            if (createFlag) {\n+                schemaRestClient.createVirSchema(updatedVirSchemaTO);\n+            } else {\n+                schemaRestClient.updateVirSchema(updatedVirSchemaTO);\n+            }\n+\n+            if (pageReference.getPage() instanceof AbstractBasePage) {\n+                ((AbstractBasePage) pageReference.getPage()).setModalResult(true);\n+            }\n+            modal.close(target);\n+\n+        } catch (Exception e) {\n+            LOG.error(\"While creating or updating VirSchema\", e);\n+            error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+            modal.getFeedbackPanel().refresh(target);\n+        }\n+    }\n+\n+    private class AnyTypeRenderer extends ChoiceRenderer<Long> {\n+\n+        private static final long serialVersionUID = 2840364232128308553L;\n+\n+        AnyTypeRenderer() {\n+            super();\n+        }\n+\n+        @Override\n+        public Object getDisplayValue(final Long object) {\n+            return anys.get(object);\n+        }\n+\n+        @Override\n+        public String getIdValue(final Long object, final int index) {\n+            return String.valueOf(object != null ? object : 0L);\n+        }\n+    }\n+}"},{"sha":"2237d394dc311e4bd9b47921f93e7a17460191d8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -71,7 +71,7 @@ private MultiFieldPanel(\n         container.add(form);\n         // -----------------------\n \n-        if (model.getObject().isEmpty()) {\n+        if (model.getObject() != null && model.getObject().isEmpty()) {\n             form.addOrReplace(getNoDataFragment(model, name));\n         } else {\n             form.addOrReplace(getDataFragment(model, name));"},{"sha":"49574c81cc1b0aea23eee2b617657022660497c0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -207,7 +207,7 @@ private FieldPanel getFieldPanel(final PlainSchemaTO schemaTO, final Form form,\n                         \"panel\", schemaTO.getKey(), new Model<Date>(), schemaTO.getConversionPattern());\n                 break;\n             case Enum:\n-                panel = new AjaxDropDownChoicePanel<String>(\"panel\", schemaTO.getKey(), new Model<String>(), false);\n+                panel = new AjaxDropDownChoicePanel<>(\"panel\", schemaTO.getKey(), new Model<String>(), false);\n                 ((AjaxDropDownChoicePanel<String>) panel).setChoices(getEnumeratedValues(schemaTO));\n \n                 if (StringUtils.isNotBlank(schemaTO.getEnumerationKeys())) {\n@@ -241,15 +241,15 @@ public String getObject(\n                 break;\n \n             case Long:\n-                panel = new SpinnerFieldPanel<Long>(\"panel\", schemaTO.getKey(), Long.class, new Model<Long>());\n+                panel = new SpinnerFieldPanel<>(\"panel\", schemaTO.getKey(), Long.class, new Model<Long>());\n \n                 if (required) {\n                     panel.addRequiredLabel();\n                 }\n                 break;\n \n             case Double:\n-                panel = new SpinnerFieldPanel<Double>(\"panel\", schemaTO.getKey(), Double.class, new Model<Double>());\n+                panel = new SpinnerFieldPanel<>(\"panel\", schemaTO.getKey(), Double.class, new Model<Double>());\n \n                 if (required) {\n                     panel.addRequiredLabel();"},{"sha":"dc84f3043ed5c2fb70681625db7894d13cc64398","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -53,3 +53,4 @@ jexl_ex2='new.' + surname\n jexl_syntax_url=Full JEXL reference\n create=Create\n key=Key\n+types=Types"},{"sha":"536cb4e3aba4e4b51fc00e58e721b45d4011bbe7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -52,3 +52,4 @@ jexl_ex2='new.' + surname\n jexl_syntax_url=Sintassi JEXL completa\n create=Crea\n key=Chiave\n+types=Tipi"},{"sha":"58c022b41a7a8e4a74c168b63183eb5ad70386f0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -52,3 +52,4 @@ jexl_ex2='novo.' + sobrenome\n jexl_syntax_url=Refer\\u00eancia JEXL completa\n create=Criar\n key=Chave\n+types=Tipos"},{"sha":"755a8464ecce3724e8922dfb4f33bb58a8fa3f26","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -116,7 +116,7 @@\n                 <li wicket:id=\"workflowLI\"><a href=\"#\" wicket:id=\"workflow\"><i class=\"fa fa-circle-o\"></i>Workflow</a></li>\n                 <li><a href=\"#\"><i class=\"fa fa-circle-o\"></i>Logs</a></li>\n                 <li><a href=\"#\"><i class=\"fa fa-circle-o\"></i>Layouts</a></li>\n-                <li><a href=\"#\"><i class=\"fa fa-circle-o\"></i>Schemas</a></li>\n+                <li wicket:id=\"schemasLI\"><a href=\"#\" wicket:id=\"schemas\"><i class=\"fa fa-circle-o\"></i><wicket:message key=\"types\"/></a></li>\n                 <li><a href=\"#\"><i class=\"fa fa-circle-o\"></i>Notifications</a></li>\n               </ul>\n             </li>"},{"sha":"301bff886f7a4b31d9bc199c7083db9adb2ff519","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage_pt_BR.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -15,5 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n displayRows=Linhas para mostrar\\:\n-home=In\\u00EDcio\n-version=VERS\\u00C3O\n+home=In\\u00edcio\n+version=VERS\\u00c3O"},{"sha":"d16dd648d43f9e4bacea6cdeec3da9fa54d66d06","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schemas.html","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas.html?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,54 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div class=\"wrapper\">\n+      <div class=\"admin-content-page\" wicket:id=\"content\">\n+        <div class=\"box box-solid box-primary\">\n+          <div class=\"box-header with-border\">\n+            <h3 class=\"box-title\">\n+              <span wicket:id=\"header\"></span>\n+            </h3>\n+            <div class=\"box-tools pull-right\">\n+              <ul class=\"nav navbar-nav actions\">\n+                <li>\n+                  <a wicket:message=\"title:createAnyTypeClass\"><!--                  <a wicket:id=\"createAnyTypeClassLink\">-->\n+                    <i class=\"glyphicon glyphicon-duplicate\"></i>\n+                  </a>                  \n+                </li>\n+                <li>\n+                  <a wicket:message=\"title:createSchema\" wicket:id=\"createSchemaLink\">\n+                    <i class=\"glyphicon glyphicon-list-alt\"></i>\n+                  </a>                  \n+                </li>\n+              </ul>\n+            </div>\n+          </div>\n+          <div class=\"box-body\">\n+            <div class=\"realms\">\n+              <div wicket:id=\"tabbedPanel\"></div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+      <div wicket:id=\"modal\"></div>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"9defe372f953d8e177dc89963da28e4035c6cd33","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schemas.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+createSchema=Create new schema\n+createAnyTypeClass=Create new AnyTypeClass"},{"sha":"e9994ec7c9903b95e35e6b5cdc1fda5a3b09c694","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schemas_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas_it.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+createSchema=Crea un nuovo schema\n+createAnyTypeClass=Crea un nuovo AnyTypeClass"},{"sha":"1d42eb5f44e29f7a82354c0aea75fe452aad923b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Schemas_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSchemas_pt_BR.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+createSchema=Cria um novo schema \n+createAnyTypeClass=Cria um novo AnyTypeClass"},{"sha":"c6281ebb875fd450a6838e3d75180950fb59bfc0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DerSchemaDetails.html","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.html?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,47 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div style=\"margin: 5px;\">\n+      <form wicket:id=\"form\">\n+        <div id=\"formtable\">\n+          <div class=\"form-group\">\n+            <span wicket:id=\"key\">[name]</span>\n+          </div>\n+          <div class=\"form-group\">\n+            <div class=\"form-group\">\n+              <span wicket:id=\"expression\">[expression]</span>\n+              <a class=\"tooltips\" wicket:id=\"questionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\">\n+                <span class=\"glyphicon glyphicon-info-sign\"></span>\n+                <span wicket:id=\"jexlHelp\" class=\"tooltips\">\n+                  <wicket:message key=\"jexl_info\"/>\n+                  <ul>\n+                    <li><wicket:message key=\"jexl_ex1\"/></li>\n+                    <li><wicket:message key=\"jexl_ex2\"/></li>\n+                  </ul>\n+                  <a href=\"#\" wicket:id=\"jexlLink\" target=\"_blank\"><wicket:message key=\"jexl_syntax_url\"/></a>\n+                </span>\n+              </a>\n+            </div>\n+          </div>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"f12956efeb122ab21a8744d0736389dd5e55e799","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DerSchemaDetails.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=All form fields are required.\n+expression=Expression\n+edit_attribute=Edit attribute\n+attributes=Derived attributes\n+title=Derived Schema"},{"sha":"641869569e3236f554176487f565b62b87cd4f59","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DerSchemaDetails_it.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails_it.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=Tutti i campi sono richiesti.\n+expression=Expression\n+edit_attribute=Modifica attributo\n+attributes=Attributi derivati\n+title=Schema Derivato"},{"sha":"cf896b583fafe0a719bdc8cee19bdf3f2cada708","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DerSchemaDetails_pt_BR.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDerSchemaDetails_pt_BR.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=Todos os campos do formaul\\u00e1rio s\\u00e3o obrigat\\u00f3rios\n+expression=Express\\u00e3o\n+edit_attribute=Alterar Atributo\n+attributes=Atributos Derivados\n+title=Esquema Derivado"},{"sha":"79ef7a1cfb56582b0974df4d8436bc283c6f7b7f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/PlainSchemaDetails.html","status":"added","additions":89,"deletions":0,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.html?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,89 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n+  <wicket:panel>\n+    <form wicket:id=\"form\">\n+      <div class=\"form-group\">\n+        <span wicket:id=\"key\">[name]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"type\">[type]</span>\n+      </div>\n+\n+      <div class=\"form-group\" wicket:id=\"conversionParams\">\n+        <span wicket:id=\"conversionPattern\">[conversionPattern]</span>\n+      </div>\n+\n+      <div class=\"form-group\" wicket:id=\"typeParams\">\n+        <div wicket:id=\"enumParams\">\n+          <div class=\"form-group\">\n+            <span wicket:id=\"enumerationValues\">[enumerationValues]</span>\n+          </div>\n+          <div class=\"form-group\">\n+            <span wicket:id=\"enumerationKeys\">[enumerationKeys]</span>\n+          </div>\n+        </div>\n+        <div wicket:id=\"encryptedParams\">\n+          <div class=\"form-group\">\n+            <span wicket:id=\"secretKey\">[secretKey]</span>\n+          </div>\n+          <div class=\"form-group\">\n+            <span wicket:id=\"cipherAlgorithm\">[cipherAlgorithm]</span>\n+          </div>\n+        </div>\n+        <div wicket:id=\"binaryParams\">\n+          <div class=\"form-group\">\n+            <span wicket:id=\"mimeType\">[mimeType]</span>\n+          </div>\n+        </div>\n+      </div>\n+\n+      <div class=\"form-group\">\n+        <span wicket:id=\"validatorClass\">[validatorClass]</span>\n+      </div>\n+\n+      <div class=\"form-group\">\n+        <label for=\"mandatoryCondition\"><wicket:message key=\"mandatoryCondition\"/></label>\n+        <input type=\"text\" id=\"mandatoryCondition\" class=\"form-control col-xs-4\" wicket:id=\"mandatoryCondition\"/>\n+        <a class=\"tooltips\" wicket:id=\"questionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\">\n+          <span class=\"glyphicon glyphicon-info-sign\"></span>\n+          <span wicket:id=\"jexlHelp\" class=\"tooltips\">\n+            <wicket:message key=\"jexl_info\"/>\n+            <ul>\n+              <li><wicket:message key=\"jexl_ex1\"/></li>\n+              <li><wicket:message key=\"jexl_ex2\"/></li>\n+            </ul>\n+            <a href=\"#\" wicket:id=\"jexlLink\" target=\"_blank\"><wicket:message key=\"jexl_syntax_url\"/></a>\n+          </span>\n+        </a>\n+      </div>\n+      <div class=\"form-group\">\n+        <div class=\"form-group\">\n+          <span wicket:id=\"uniqueConstraint\">[uniqueConstraint]</span>\n+        </div>\n+        <div class=\"form-group\">\n+          <span wicket:id=\"multivalue\">[multivalue]</span>\n+        </div>\n+        <div class=\"form-group\">\n+          <span wicket:id=\"readonly\">[readonly]</span>\n+        </div>\n+      </div>\n+    </form>\n+  </wicket:panel>\n+</html>"},{"sha":"512fc01bc0e646fad4bcec160c828e75715210b0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/PlainSchemaDetails.properties","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,33 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=All form fields are required.\n+mandatoryCondition=Mandatory\n+enumerationValues= Enumeration values\n+enumerationKeys= Enumeration labels\n+uniqueConstraint=Unique\n+multivalue=Multivalue\n+multivalueAndUniqueConstr.validation='Multivalue' and 'Unique constraint' options can't be both checked\n+type=Type\n+validatorClass=Validator class\n+conversionPattern=Conversion pattern\n+action=Action\n+edit_attribute=Edit attribute\n+title=Schema\n+readonly=Read-only\n+secretKey=Secret key\n+cipherAlgorithm=Cipher algorithm\n+mimeType=MIME Type"},{"sha":"4896749e3376d2aadaaf1f30367384c2d15e3cb1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/PlainSchemaDetails_it.properties","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_it.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,33 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=Tutti i campi sono richiesti\n+mandatoryCondition=Obbligatorio\n+enumerationValues= Valori enumeration\n+enumerationKeys= Label enumeration\n+multivalue=Multivalore\n+type=Tipo\n+validatorClass=Validatore\n+conversionPattern=Conversion pattern\n+action=Azione\n+edit_attribute=Modifica attributo\n+title=Schema\n+readonly=Read-only\n+uniqueConstraint=Univoco\n+multivalueAndUniqueConstr.validation=Le opzioni 'Multivalore' e 'Vincolo unique' non possono essere entrambe impostate\n+secretKey=Chiave segreta\n+cipherAlgorithm=Algoritmo di cifratura\n+mimeType=MIME Type"},{"sha":"beae7514e2ccd15a49fc187c382ad1aadfd5e05f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/PlainSchemaDetails_pt_BR.properties","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails_pt_BR.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,33 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=Todos os campos s\\u00e3o obrigat\\u00f3rios\n+mandatoryCondition=obrigat\\u00f3rio\n+enumerationValues= Valores enumerados\n+enumerationKeys= R\\u00f3tulos de enumera\\u00e7\\u00e3o\n+uniqueConstraint=\\u00danico\n+multivalue=Multivalorado\n+multivalueAndUniqueConstr.validation=As op\\u00e7\\u00f5es 'Multivalorado' e 'Restri\\u00e7\\u00e3o \\u00fanica' n\\u00e3o podem serem ambas selecionadas\n+type=Tipo\n+validatorClass=Classe de Valida\\u00e7\\u00e3o\n+conversionPattern=Padr\\u00e3o de Convers\\u00e3o\n+action=A\\u00e7\\u00e3o\n+edit_attribute=Editar Atributo\n+title=Esquema\n+readonly=Apenas leitura\n+secretKey=Chave secreta\n+cipherAlgorithm=Algoritmo de criptografia\n+mimeType=MIME Type"},{"sha":"b11fa1da688fd3b0dafde62673b5f20f39b6f429","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaModalPanel.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.html?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div class=\"form-group\">\n+      <form wicket:id=\"kindForm\">\n+        <span wicket:id=\"kind\">[kind]</span>\n+      </form>\n+    </div>\n+    <div wicket:id=\"details\">[details]</div>\n+  </wicket:extend>\n+</html>"},{"sha":"881403b1b0e9449ef16898366a117254549fc783","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaModalPanel.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+kind=Schema type\n+createSchema=Create new schema"},{"sha":"5c438b96a01d84278cda77eb01159560dd76756f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaModalPanel_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel_it.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+kind=Tipo schema\n+createSchema=Crea un nuovo schema"},{"sha":"f31e84e964d83731f6bbcd567cb439911fbd1bc6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemaModalPanel_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaModalPanel_pt_BR.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+kind=Schema type\n+createSchema=Cria um novo schema"},{"sha":"47be190fd715bd0bf65af6bbc37a8ce961ae67f0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel$SchemaTypePanel.html","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel%24SchemaTypePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel%24SchemaTypePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel%24SchemaTypePanel.html?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,39 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"schemaWrapContainer\">\n+      <span wicket:id=\"schemaContainer\">\n+        <table class=\"table table-bordered table-hover dataTable\" wicket:id=\"datatable\">[datatable]</table>\n+      </span>\n+      <span style=\"float:right\">\n+        <form wicket:id=\"paginator\" style=\"display:inline\">\n+          <div class=\"col-sm-6\">\n+            <div class=\"dataTables_length\">\n+              <label>\n+                <wicket:message key=\"displayRows\"/>\n+                <select class=\"form-control input-sm\" wicket:id=\"rowsChooser\"/>\n+              </label>\n+            </div>\n+          </div>\n+        </form>\n+      </span>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"a006d12c5e50e9ababd523f4f118349b0a97c601","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.html?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,28 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n+  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n+  <body>\n+    <wicket:panel>\n+      <div wicket:id=\"collapsePanel\"></div>\n+    </wicket:panel>\n+  </body>\n+</html>\n\\ No newline at end of file"},{"sha":"f9b8e4ba1448bacf8cb813f4075baf765b97f9d3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mandatoryCondition=Mandatory\n+enumerationValues= Enumeration values\n+enumerationKeys= Enumeration labels\n+uniqueConstraint=Unique\n+multivalue=Multivalue\n+type=Type\n+title=Schema\n+readonly=Read-only\n+expression=Expression\n+provision=Provision\n+extAttrName=ExtAttrName"},{"sha":"d6f5f257462f8020a3bc0924f70d5c6b5fb44fc7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel_it.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_it.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mandatoryCondition=Obbligatorio\n+enumerationValues= Valori enumeration\n+enumerationKeys= Label enumeration\n+multivalue=Multivalore\n+type=Tipo\n+title=Schema\n+readonly=Read-only\n+uniqueConstraint=Univoco\n+expression=Express\\u00e3o\n+provision=Provision\n+extAttrName=ExtAttrName"},{"sha":"9700c5be6dfd01f80ab64a5ce858df41d6f0d1f6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/SchemasPanel_pt_BR.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemasPanel_pt_BR.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+mandatoryCondition=obrigat\\u00f3rio\n+enumerationValues= Valores enumerados\n+enumerationKeys= R\\u00f3tulos de enumera\\u00e7\\u00e3o\n+uniqueConstraint=\\u00danico\n+multivalue=Multivalorado\n+type=Tipo\n+title=Esquema\n+readonly=Apenas leitura\n+expression=Espressione\n+provision=Provision\n+extAttrName=ExtAttrName"},{"sha":"abdf05bbdb39f729d7675746684da91b72972c8a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/VirSchemaDetails.html","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.html?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,43 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <form wicket:id=\"form\">\n+        <div class=\"form-group\">\n+          <div class=\"form-group\">\n+            <span wicket:id=\"key\">[name]</span>\n+          </div>\n+          <div class=\"form-group\">\n+            <span wicket:id=\"readonly\">[readonly]</span>\n+          </div>\n+          <div class=\"form-group\">\n+            <span wicket:id=\"resource\">[resource]</span>\n+          </div>\n+          <div class=\"form-group\">\n+            <span wicket:id=\"provision\">[provision]</span>\n+          </div>\n+          <div class=\"form-group\">\n+            <span wicket:id=\"extAttrName\">[extAttrName]</span>\n+          </div>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"d76fa24fc122e8103f10ac5a310076f351775a70","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/VirSchemaDetails.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=All form fields are required.\n+edit_attribute=Edit attribute\n+attributes=Virtual attributes\n+title=Virtual Schema\n+readonly=Read-only\n+resource=Resource\n+provision=Provision\n+extAttrName=External attribute"},{"sha":"1dc21b0dd9daaa7098fcda17aba0f92b53f67dc2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/VirSchemaDetails_it.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails_it.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=Tutti i campi sono richiesti.\n+edit_attribute=Modifica attributo\n+attributes=Attributi virtuali\n+title=Schema Virtuale\n+readonly=Read-only\n+resource=Risorsa\n+provision=Provision\n+extAttrName=Attributo esterno"},{"sha":"e47e9e8834edffee2798e91efb866b39f557d375","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/VirSchemaDetails_pt_BR.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails_pt_BR.properties?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+required_alert=Todos os campos do formul\\u00e1rio s\\u00e3o obrigat\\u00f3rios\n+edit_attribute=Editar Atributo\n+attributes=Atributos Virtuais\n+title=Esquema Virtual\n+readonly=Apenas Leitura\n+resource=Recurso\n+provision=Provision\n+extAttrName=Atributo Externo"},{"sha":"1d0534dbf4794aff344bf90ceaebedc6e65eceae","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/VirSchemaTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -27,6 +27,8 @@ public class VirSchemaTO extends AbstractSchemaTO {\n \n     private boolean readonly;\n \n+    private String resource;\n+\n     private long provision;\n \n     private String extAttrName;\n@@ -39,6 +41,14 @@ public void setReadonly(final boolean readonly) {\n         this.readonly = readonly;\n     }\n \n+    public String getResource() {\n+        return resource;\n+    }\n+\n+    public void setResource(final String resource) {\n+        this.resource = resource;\n+    }\n+\n     public long getProvision() {\n         return provision;\n     }"},{"sha":"002fbd962457829283fec2560906e588ff2dc70c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/SchemaDataBinderImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSchemaDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01612160f16fe45b8f2f206a06d2ad3dc566dbd7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSchemaDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSchemaDataBinderImpl.java?ref=01612160f16fe45b8f2f206a06d2ad3dc566dbd7","patch":"@@ -52,7 +52,7 @@ public class SchemaDataBinderImpl implements SchemaDataBinder {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SchemaDataBinder.class);\n \n-    private static final String[] IGNORE_PROPERTIES = { \"anyTypeClass\", \"provision\" };\n+    private static final String[] IGNORE_PROPERTIES = { \"anyTypeClass\", \"provision\", \"resource\" };\n \n     @Autowired\n     private AnyTypeClassDAO anyTypeClassDAO;\n@@ -264,6 +264,7 @@ public VirSchemaTO getVirSchemaTO(final VirSchema schema) {\n         VirSchemaTO schemaTO = new VirSchemaTO();\n         BeanUtils.copyProperties(schema, schemaTO, IGNORE_PROPERTIES);\n         schemaTO.setAnyTypeClass(schema.getAnyTypeClass() == null ? null : schema.getAnyTypeClass().getKey());\n+        schemaTO.setResource(schema.getProvision().getResource().getKey());\n         schemaTO.setProvision(schema.getProvision().getKey());\n \n         return schemaTO;"}]}