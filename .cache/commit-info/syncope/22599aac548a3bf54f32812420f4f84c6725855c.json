{"sha":"22599aac548a3bf54f32812420f4f84c6725855c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIyNTk5YWFjNTQ4YTNiZjU0ZjMyODEyNDIwZjRmODRjNjcyNTg1NWM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-02T10:50:12Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-02T10:50:12Z"},"message":"Replacing SimpleDateFormat with FastDateFormat everywhere possible","tree":{"sha":"ba0df2c0434c95b0bdacd2de84c16dce18d70b83","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ba0df2c0434c95b0bdacd2de84c16dce18d70b83"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/22599aac548a3bf54f32812420f4f84c6725855c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/22599aac548a3bf54f32812420f4f84c6725855c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/22599aac548a3bf54f32812420f4f84c6725855c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/22599aac548a3bf54f32812420f4f84c6725855c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"16ffd3ef9e0f39f466526fd1c0ed0102a317872e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/16ffd3ef9e0f39f466526fd1c0ed0102a317872e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/16ffd3ef9e0f39f466526fd1c0ed0102a317872e"}],"stats":{"total":100,"additions":39,"deletions":61},"files":[{"sha":"0cb5118d99dc17a3e2077238ef61d4e41e76be89","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDateFieldPanel.java","status":"modified","additions":26,"deletions":33,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/22599aac548a3bf54f32812420f4f84c6725855c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/22599aac548a3bf54f32812420f4f84c6725855c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDateFieldPanel.java?ref=22599aac548a3bf54f32812420f4f84c6725855c","patch":"@@ -27,11 +27,11 @@\n import java.io.Serializable;\n import java.text.DateFormat;\n import java.text.ParseException;\n-import java.text.ParsePosition;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n import java.util.List;\n import java.util.Locale;\n+import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.markup.html.list.ListItem;\n@@ -53,46 +53,37 @@ public AjaxDateFieldPanel(final String id, final String name, final IModel<Date>\n         this.datePattern = pattern == null ? SyncopeConstants.DEFAULT_DATE_PATTERN : pattern;\n \n         if (this.datePattern.contains(\"H\")) {\n-            field = new DatetimePicker(\"date\", model, new DatetimePickerConfig()\n-                    .withFormat(this.datePattern.replaceAll(\"'\", \"\"))\n-                    .setShowToday(true)\n-                    .useSideBySide(true)\n-                    .with(new DatetimePickerIconConfig()\n+            field = new DatetimePicker(\"date\", model, new DatetimePickerConfig().\n+                    withFormat(this.datePattern.replaceAll(\"'\", \"\")).\n+                    setShowToday(true).\n+                    useSideBySide(true).\n+                    with(new DatetimePickerIconConfig()\n                             .useDateIcon(FontAwesomeIconType.calendar)\n                             .useTimeIcon(FontAwesomeIconType.clock_o)\n                             .useUpIcon(FontAwesomeIconType.arrow_up)\n                             .useDownIcon(FontAwesomeIconType.arrow_down)\n                     )) {\n \n-                        private static final long serialVersionUID = 1L;\n+                private static final long serialVersionUID = -6308790460702853262L;\n \n-                        // T0DO: trying to resolve issue 730.\n-                        @Override\n-                        @SuppressWarnings(\"unchecked\")\n-                        public <C> IConverter<C> getConverter(final Class<C> type) {\n-                            return (IConverter<C>) new DateConverter() {\n-\n-                                private static final long serialVersionUID = 1L;\n-\n-                                @Override\n-                                public DateFormat getDateFormat(final Locale locale) {\n-                                    return new SimpleDateFormat(\n-                                            datePattern,\n-                                            locale == null ? SyncopeConsoleSession.get().getLocale() : locale) {\n+                // T0DO: trying to fix SYNCOPE-730\n+                // Check if SimpleDateFormat can be replaced by FastDateFormat (see usage below)\n+                @Override\n+                @SuppressWarnings(\"unchecked\")\n+                public <C> IConverter<C> getConverter(final Class<C> type) {\n+                    return (IConverter<C>) new DateConverter() {\n \n-                                                private static final long serialVersionUID = 1L;\n+                        private static final long serialVersionUID = 8025900377461981157L;\n \n-                                                @Override\n-                                                public Date parse(final String text, final ParsePosition pos) {\n-                                                    return super.parse(text, pos);\n-                                                }\n-\n-                                            };\n-                                }\n-                            };\n+                        @Override\n+                        public DateFormat getDateFormat(final Locale locale) {\n+                            return new SimpleDateFormat(\n+                                    datePattern,\n+                                    locale == null ? SyncopeConsoleSession.get().getLocale() : locale);\n                         }\n-\n                     };\n+                }\n+            };\n         } else {\n             field = new DateTextField(\"date\", model, new DateTextFieldConfig()\n                     .withFormat(this.datePattern)\n@@ -154,9 +145,11 @@ public void setObject(final Date object) {\n     @SuppressWarnings(\"rawtypes\")\n     @Override\n     public FieldPanel<Date> setNewModel(final ListItem item) {\n-        final SimpleDateFormat formatter = datePattern == null\n-                ? new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN, Locale.getDefault())\n-                : new SimpleDateFormat(datePattern, Locale.getDefault());\n+        final FastDateFormat formatter = datePattern == null\n+                ? FastDateFormat.getInstance(\n+                        SyncopeConstants.DEFAULT_DATE_PATTERN, SyncopeConsoleSession.get().getLocale())\n+                : FastDateFormat.getInstance(\n+                        datePattern, SyncopeConsoleSession.get().getLocale());\n \n         IModel<Date> model = new Model<Date>() {\n "},{"sha":"1a826fdf1cbe15ba5b0894bd231b8de87a279ca5","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/DateParamConverterProvider.java","status":"modified","additions":4,"deletions":12,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/22599aac548a3bf54f32812420f4f84c6725855c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FDateParamConverterProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/22599aac548a3bf54f32812420f4f84c6725855c/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FDateParamConverterProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FDateParamConverterProvider.java?ref=22599aac548a3bf54f32812420f4f84c6725855c","patch":"@@ -21,38 +21,30 @@\n import java.lang.annotation.Annotation;\n import java.lang.reflect.Type;\n import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n import java.util.Date;\n import javax.ws.rs.ext.ParamConverter;\n import javax.ws.rs.ext.ParamConverterProvider;\n+import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.syncope.common.lib.SyncopeConstants;\n \n public class DateParamConverterProvider implements ParamConverterProvider {\n \n-    private static final ThreadLocal<SimpleDateFormat> DATE_FORMAT = new ThreadLocal<SimpleDateFormat>() {\n-\n-        @Override\n-        protected SimpleDateFormat initialValue() {\n-            SimpleDateFormat sdf = new SimpleDateFormat();\n-            sdf.applyPattern(SyncopeConstants.DEFAULT_DATE_PATTERN);\n-            return sdf;\n-        }\n-    };\n+    private static final FastDateFormat DATE_FORMAT = FastDateFormat.getInstance(SyncopeConstants.DEFAULT_DATE_PATTERN);\n \n     private static class DateParamConverter implements ParamConverter<Date> {\n \n         @Override\n         public Date fromString(final String value) {\n             try {\n-                return DATE_FORMAT.get().parse(value);\n+                return DATE_FORMAT.parse(value);\n             } catch (final ParseException e) {\n                 throw new IllegalArgumentException(\"Unparsable date: \" + value, e);\n             }\n         }\n \n         @Override\n         public String toString(final Date value) {\n-            return DATE_FORMAT.get().format(value);\n+            return DATE_FORMAT.format(value);\n         }\n     }\n "},{"sha":"16063dbded9c9da5dd3ce82f1c2ca55d9e45bebd","filename":"fit/core-reference/src/main/webapp/cacheStats.jsp","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/22599aac548a3bf54f32812420f4f84c6725855c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fwebapp%2FcacheStats.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/22599aac548a3bf54f32812420f4f84c6725855c/fit%2Fcore-reference%2Fsrc%2Fmain%2Fwebapp%2FcacheStats.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fwebapp%2FcacheStats.jsp?ref=22599aac548a3bf54f32812420f4f84c6725855c","patch":"@@ -16,13 +16,13 @@ KIND, either express or implied.  See the License for the\n specific language governing permissions and limitations\n under the License.\n --%>\n-<%@page import=\"org.springframework.beans.factory.support.DefaultListableBeanFactory\"%>\n-<%@page import=\"org.apache.syncope.common.lib.SyncopeConstants\"%>\n-<%@page import=\"org.apache.syncope.core.misc.spring.ApplicationContextProvider\"%>\n <%@page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n <%@taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%>\n <%@taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\"%>\n-<%@page import=\"java.text.SimpleDateFormat\"%>\n+<%@page import=\"org.springframework.beans.factory.support.DefaultListableBeanFactory\"%>\n+<%@page import=\"org.apache.syncope.common.lib.SyncopeConstants\"%>\n+<%@page import=\"org.apache.syncope.core.misc.spring.ApplicationContextProvider\"%>\n+<%@page import=\"org.apache.commons.lang3.time.FastDateFormat\"%>\n <%@page import=\"java.util.Date\"%>\n <%@page import=\"org.apache.openjpa.datacache.CacheStatisticsImpl\"%>\n <%@page import=\"javax.persistence.EntityManagerFactory\"%>\n@@ -98,7 +98,7 @@ under the License.\n             info.append(\"Statistics cleared\\n\");\n         }\n \n-        SimpleDateFormat sdf = new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN);\n+        FastDateFormat sdf = FastDateFormat.getInstance(SyncopeConstants.DEFAULT_DATE_PATTERN);\n         if (info.length() > 0) {\n     %>\n     <p/><div class=\"success\">"},{"sha":"bdd0fbf3a1261ee0602e9c7dacdf86544e478158","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":4,"deletions":11,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/22599aac548a3bf54f32812420f4f84c6725855c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/22599aac548a3bf54f32812420f4f84c6725855c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=22599aac548a3bf54f32812420f4f84c6725855c","patch":"@@ -30,7 +30,6 @@\n \n import java.io.IOException;\n import java.security.AccessControlException;\n-import java.text.SimpleDateFormat;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Date;\n@@ -44,6 +43,8 @@\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.MapUtils;\n import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.time.DateFormatUtils;\n+import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.common.util.Base64Utility;\n import org.apache.cxf.helpers.IOUtils;\n@@ -111,15 +112,7 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class UserITCase extends AbstractITCase {\n \n-    private static final ThreadLocal<SimpleDateFormat> DATE_FORMAT = new ThreadLocal<SimpleDateFormat>() {\n-\n-        @Override\n-        protected SimpleDateFormat initialValue() {\n-            SimpleDateFormat sdf = new SimpleDateFormat();\n-            sdf.applyPattern(\"yyyy-MM-dd\");\n-            return sdf;\n-        }\n-    };\n+    private static final FastDateFormat DATE_FORMAT = DateFormatUtils.ISO_DATE_FORMAT;\n \n     private boolean getBooleanAttribute(final ConnObjectTO connObjectTO, final String attrName) {\n         return Boolean.parseBoolean(connObjectTO.getPlainAttrMap().get(attrName).getValues().get(0));\n@@ -141,7 +134,7 @@ public static UserTO getSampleTO(final String email) {\n         userTO.getPlainAttrs().add(attrTO(\"type\", \"a type\"));\n         userTO.getPlainAttrs().add(attrTO(\"userId\", email));\n         userTO.getPlainAttrs().add(attrTO(\"email\", email));\n-        userTO.getPlainAttrs().add(attrTO(\"loginDate\", DATE_FORMAT.get().format(new Date())));\n+        userTO.getPlainAttrs().add(attrTO(\"loginDate\", DATE_FORMAT.format(new Date())));\n         userTO.getDerAttrs().add(attrTO(\"cn\", null));\n         return userTO;\n     }"}]}