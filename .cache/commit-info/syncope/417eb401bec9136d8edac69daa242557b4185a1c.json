{"sha":"417eb401bec9136d8edac69daa242557b4185a1c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQxN2ViNDAxYmVjOTEzNmQ4ZWRhYzY5ZGFhMjQyNTU3YjQxODVhMWM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-12-14T15:56:43Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-12-14T15:56:43Z"},"message":"[SYNCOPE-666] Fixed small bug during group update","tree":{"sha":"cb8b8ce5b83eb4428f21cbe9b41562fd465a5c6a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cb8b8ce5b83eb4428f21cbe9b41562fd465a5c6a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/417eb401bec9136d8edac69daa242557b4185a1c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/417eb401bec9136d8edac69daa242557b4185a1c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/417eb401bec9136d8edac69daa242557b4185a1c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/417eb401bec9136d8edac69daa242557b4185a1c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1d48e5f29ceabdee460325f061709d5ded7b3847","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1d48e5f29ceabdee460325f061709d5ded7b3847","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1d48e5f29ceabdee460325f061709d5ded7b3847"}],"stats":{"total":48,"additions":41,"deletions":7},"files":[{"sha":"9fae1d5fdc3ee3c97474850ed7cc7422c76fdbe2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAGroupDAO.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/417eb401bec9136d8edac69daa242557b4185a1c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/417eb401bec9136d8edac69daa242557b4185a1c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java?ref=417eb401bec9136d8edac69daa242557b4185a1c","patch":"@@ -172,20 +172,22 @@ private SearchCond buildDynMembershipCond(final String baseCondFIQL, final Realm\n \n     @Override\n     public Group save(final Group group) {\n+        Group merged = super.save(group);\n+\n         // refresh dynaminc memberships\n-        if (group.getUDynMembership() != null) {\n+        if (merged.getUDynMembership() != null) {\n             List<User> matching = searchDAO.search(\n-                    buildDynMembershipCond(group.getUDynMembership().getFIQLCond(), group.getRealm()),\n+                    buildDynMembershipCond(merged.getUDynMembership().getFIQLCond(), merged.getRealm()),\n                     AnyTypeKind.USER);\n \n-            group.getUDynMembership().getMembers().clear();\n+            merged.getUDynMembership().getMembers().clear();\n             for (User user : matching) {\n-                group.getUDynMembership().add(user);\n+                merged.getUDynMembership().add(user);\n             }\n         }\n-        for (ADynGroupMembership memb : group.getADynMemberships()) {\n+        for (ADynGroupMembership memb : merged.getADynMemberships()) {\n             List<AnyObject> matching = searchDAO.search(\n-                    buildDynMembershipCond(memb.getFIQLCond(), group.getRealm()),\n+                    buildDynMembershipCond(memb.getFIQLCond(), merged.getRealm()),\n                     AnyTypeKind.ANY_OBJECT);\n \n             memb.getMembers().clear();\n@@ -194,7 +196,7 @@ public Group save(final Group group) {\n             }\n         }\n \n-        return super.save(group);\n+        return merged;\n     }\n \n     @Override"},{"sha":"0f80766e109f7ab01c1af7ef14a7822d6dc37f40","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/GroupITCase.java","status":"modified","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/417eb401bec9136d8edac69daa242557b4185a1c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/417eb401bec9136d8edac69daa242557b4185a1c/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FGroupITCase.java?ref=417eb401bec9136d8edac69daa242557b4185a1c","patch":"@@ -26,7 +26,9 @@\n import static org.junit.Assert.fail;\n \n import java.security.AccessControlException;\n+import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n import javax.naming.NamingEnumeration;\n import javax.naming.NamingException;\n import javax.naming.directory.DirContext;\n@@ -37,6 +39,7 @@\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n@@ -230,6 +233,35 @@ public void update() {\n         assertFalse(groupTO.getPlainAttrMap().containsKey(\"show\"));\n     }\n \n+    @Test\n+    public void patch() {\n+        GroupTO original = getBasicSampleTO(\"patch\");\n+        original.setUDynMembershipCond(\"(($groups==3;$resources!=ws-target-resource-1);aLong==1)\");\n+        original.getADynMembershipConds().put(\n+                \"PRINTER\",\n+                \"(($groups==7;cool==ss);$resources==ws-target-resource-2);$type==PRINTER\");\n+\n+        GroupTO updated = createGroup(original).getAny();\n+\n+        updated.getPlainAttrs().add(new AttrTO.Builder().schema(\"icon\").build());\n+        updated.getPlainAttrs().add(new AttrTO.Builder().schema(\"show\").build());\n+        updated.getPlainAttrs().add(new AttrTO.Builder().schema(\"rderived_sx\").value(\"sx\").build());\n+        updated.getPlainAttrs().add(new AttrTO.Builder().schema(\"rderived_dx\").value(\"dx\").build());\n+        updated.getPlainAttrs().add(new AttrTO.Builder().schema(\"title\").value(\"mr\").build());\n+\n+        original = groupService.read(updated.getKey());\n+\n+        GroupPatch patch = AnyOperations.diff(updated, original, true);\n+        GroupTO group = updateGroup(patch).getAny();\n+\n+        Map<String, AttrTO> attrs = group.getPlainAttrMap();\n+        assertFalse(attrs.containsKey(\"icon\"));\n+        assertFalse(attrs.containsKey(\"show\"));\n+        assertEquals(Collections.singletonList(\"sx\"), attrs.get(\"rderived_sx\").getValues());\n+        assertEquals(Collections.singletonList(\"dx\"), attrs.get(\"rderived_dx\").getValues());\n+        assertEquals(Collections.singletonList(\"mr\"), attrs.get(\"title\").getValues());\n+    }\n+\n     @Test\n     public void updateAsGroupOwner() {\n         // 1. read group as admin"}]}