{"sha":"d6ab9c3957a3107e38de4696297aca3b3fdfccfe","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ2YWI5YzM5NTdhMzEwN2UzOGRlNDY5NjI5N2FjYTNiM2ZkZmNjZmU=","commit":{"author":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-28T14:34:22Z"},"committer":{"name":"Jan Bernhardt","email":"jbernhardt@apache.org","date":"2013-01-28T14:34:22Z"},"message":"[SYNCOPE-231] Fixing Notification CXF Test\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1439425 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fa3a298afef798b33c49d57993043e78af979fe1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fa3a298afef798b33c49d57993043e78af979fe1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d6ab9c3957a3107e38de4696297aca3b3fdfccfe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d6ab9c3957a3107e38de4696297aca3b3fdfccfe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d6ab9c3957a3107e38de4696297aca3b3fdfccfe","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d6ab9c3957a3107e38de4696297aca3b3fdfccfe/comments","author":null,"committer":null,"parents":[{"sha":"859094ba23a34cfc579c7c1a452bbb1a3126c9d9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/859094ba23a34cfc579c7c1a452bbb1a3126c9d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/859094ba23a34cfc579c7c1a452bbb1a3126c9d9"}],"stats":{"total":33,"additions":15,"deletions":18},"files":[{"sha":"64c52d2fb84ea969a7794373a04a3fe0440b76bc","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/NotificationServiceProxy.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d6ab9c3957a3107e38de4696297aca3b3fdfccfe/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d6ab9c3957a3107e38de4696297aca3b3fdfccfe/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FNotificationServiceProxy.java?ref=d6ab9c3957a3107e38de4696297aca3b3fdfccfe","patch":"@@ -24,6 +24,7 @@\n \r\n import javax.ws.rs.core.Response;\r\n \r\n+import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.NotificationService;\r\n import org.apache.syncope.common.to.NotificationTO;\r\n import org.springframework.web.client.RestTemplate;\r\n@@ -51,7 +52,7 @@ public Response create(final NotificationTO notificationTO) {\n         NotificationTO notification = getRestTemplate().postForObject(baseUrl + \"notification/create.json\", notificationTO,\r\n                 NotificationTO.class);\r\n         URI location = URI.create(baseUrl + \"notification/read/\" + notification.getId() + \".json\");\r\n-        return Response.created(location).entity(notification.getId()).build();\r\n+        return Response.created(location).header(SyncopeConstants.REST_HEADER_ID, notification.getId()).build();\r\n     }\r\n \r\n     @Override\r"},{"sha":"0ba7d8ca12ebde65e2f8a9c7b511422a4470d3b1","filename":"core/src/main/java/org/apache/syncope/core/services/NotificationServiceImpl.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d6ab9c3957a3107e38de4696297aca3b3fdfccfe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d6ab9c3957a3107e38de4696297aca3b3fdfccfe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FNotificationServiceImpl.java?ref=d6ab9c3957a3107e38de4696297aca3b3fdfccfe","patch":"@@ -21,7 +21,6 @@\n import java.net.URI;\n import java.util.List;\n \n-import javax.ws.rs.PathParam;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.UriInfo;\n \n@@ -37,11 +36,11 @@ public class NotificationServiceImpl implements NotificationService, ContextAwar\n \n     @Autowired\n     private NotificationController notificationController;\n-    \n+\n     private UriInfo uriInfo;\n \n     @Override\n-    public Response create(NotificationTO notificationTO) {\n+    public Response create(final NotificationTO notificationTO) {\n         try {\n             NotificationTO createdNotificationTO = notificationController.createInternal(notificationTO);\n             URI location = uriInfo.getAbsolutePathBuilder().path(\"\" + createdNotificationTO.getId()).build();\n@@ -52,7 +51,7 @@ public Response create(NotificationTO notificationTO) {\n     }\n \n     @Override\n-    public NotificationTO read(@PathParam(\"notificationId\") Long notificationId) throws javax.ws.rs.NotFoundException {\n+    public NotificationTO read(final Long notificationId) {\n         try {\n             return notificationController.read(notificationId);\n         } catch (NotFoundException e) {\n@@ -66,8 +65,8 @@ public List<NotificationTO> list() {\n     }\n \n     @Override\n-    public NotificationTO update(@PathParam(\"notificationId\") Long notificationId,\n-            NotificationTO notificationTO) {\n+    public NotificationTO update(final Long notificationId,\n+            final NotificationTO notificationTO) {\n         try {\n             return notificationController.update(notificationTO);\n         } catch (NotFoundException e) {\n@@ -76,7 +75,7 @@ public NotificationTO update(@PathParam(\"notificationId\") Long notificationId,\n     }\n \n     @Override\n-    public NotificationTO delete(@PathParam(\"notificationId\") Long notificationId) {\n+    public NotificationTO delete(final Long notificationId) {\n         try {\n             return notificationController.delete(notificationId);\n         } catch (NotFoundException e) {"},{"sha":"4eb1c560f13e70d48f1e04c79f2a5b8203691d6d","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d6ab9c3957a3107e38de4696297aca3b3fdfccfe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d6ab9c3957a3107e38de4696297aca3b3fdfccfe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=d6ab9c3957a3107e38de4696297aca3b3fdfccfe","patch":"@@ -69,8 +69,7 @@ public void create() {\n         notificationTO.setRecipients(recipients);\n \n         Response response = notificationService.create(notificationTO);\n-        Long notificationId = (Long) response.getEntity();\n-        NotificationTO actual = notificationService.read(notificationId);\n+        NotificationTO actual = getObject(response, NotificationTO.class, notificationService);\n \n         assertNotNull(actual);\n         assertNotNull(actual.getId());\n@@ -106,7 +105,7 @@ public void update() {\n \n     @Test\n     public void delete() {\n-    \tNotificationTO notification = buildNotificationTO();\n+        NotificationTO notification = buildNotificationTO();\n         notification.setSelfAsRecipient(true);\n         Response response = notificationService.create(notification);\n         notification = getObject(response, NotificationTO.class, notificationService);\n@@ -132,8 +131,7 @@ public void issueSYNCOPE83() {\n         SyncopeClientException exception = null;\n         try {\n             Response response = notificationService.create(notificationTO);\n-            Long notificationId = (Long) response.getEntity();\n-            actual = notificationService.read(notificationId);\n+            actual = getObject(response, NotificationTO.class, notificationService);\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.InvalidNotification);\n         }\n@@ -144,7 +142,7 @@ public void issueSYNCOPE83() {\n         assertEquals(actual, notificationTO);\n     }\n \n-\tprivate NotificationTO buildNotificationTO() {\n+    private NotificationTO buildNotificationTO() {\n         NotificationTO notificationTO = new NotificationTO();\n         notificationTO.setTraceLevel(TraceLevel.SUMMARY);\n         notificationTO.addEvent(\"create\");\n@@ -166,6 +164,6 @@ private NotificationTO buildNotificationTO() {\n         notificationTO.setSender(\"syncope@syncope.apache.org\");\n         notificationTO.setSubject(\"Test notification\");\n         notificationTO.setTemplate(\"test\");\n-\t\treturn notificationTO;\n-\t}\n+        return notificationTO;\n+    }\n }"},{"sha":"3bb9490dcf6fb29314c1e039356377530e1a282a","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d6ab9c3957a3107e38de4696297aca3b3fdfccfe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d6ab9c3957a3107e38de4696297aca3b3fdfccfe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=d6ab9c3957a3107e38de4696297aca3b3fdfccfe","patch":"@@ -528,8 +528,7 @@ private String createNotificationTask() {\n         notification.setTemplate(\"optin\");\n \n         Response response = notificationService.create(notification);\n-        Long notificationId = (Long) response.getEntity();\n-        notification = notificationService.read(notificationId);\n+        notification = getObject(response, NotificationTO.class, notificationService);\n         assertNotNull(notification);\n \n         // 2. create user"}]}