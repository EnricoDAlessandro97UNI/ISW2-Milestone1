{"sha":"97607b16e4ed807ff055b3ae55f0c722717c6472","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk3NjA3YjE2ZTRlZDgwN2ZmMDU1YjNhZTU1ZjBjNzIyNzE3YzY0NzI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-07-07T07:37:35Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-07-07T07:37:35Z"},"message":"[SYNCOPE-676] Merge from 1_2_X","tree":{"sha":"bb3468e135caff051472a66c1869e1ac145b197b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bb3468e135caff051472a66c1869e1ac145b197b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/97607b16e4ed807ff055b3ae55f0c722717c6472","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/97607b16e4ed807ff055b3ae55f0c722717c6472","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/97607b16e4ed807ff055b3ae55f0c722717c6472","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/97607b16e4ed807ff055b3ae55f0c722717c6472/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3eb0bfb6cc6b09a9d09247d8810b83ac6c1e18c5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3eb0bfb6cc6b09a9d09247d8810b83ac6c1e18c5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3eb0bfb6cc6b09a9d09247d8810b83ac6c1e18c5"},{"sha":"2612337228f1fbd3818f61c4dd3371b7bf1d37fb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2612337228f1fbd3818f61c4dd3371b7bf1d37fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2612337228f1fbd3818f61c4dd3371b7bf1d37fb"}],"stats":{"total":392,"additions":212,"deletions":180},"files":[{"sha":"98339ec0897d5c0f16b371b8082faf4f1f2a6171","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -46,8 +46,6 @@ public final class Constants {\n \n     public static final String PREF_USERS_DERIVED_ATTRIBUTES_VIEW = \"users.derived.attributes.view\";\n \n-    public static final String PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW = \"users.virtual.attributes.view\";\n-\n     public static final String PREF_CONF_SCHEMA_PAGINATOR_ROWS = \"conf.schema.paginator.rows\";\n \n     public static final String PREF_USER_PLAIN_SCHEMA_PAGINATOR_ROWS = \"user.schema.paginator.rows\";"},{"sha":"512e08fd97d9b5eac40ad8473de24ac8e94f17cb","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -59,7 +59,7 @@ public int count(final String realm) {\n     public List<GroupTO> list(final String realm, final int page, final int size, final SortParam<String> sort) {\n         return getService(GroupService.class).\n                 list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(page).size(size).\n-                        orderBy(toOrderBy(sort)).build()).\n+                        orderBy(toOrderBy(sort)).details(false).build()).\n                 getResult();\n     }\n \n@@ -76,7 +76,7 @@ public List<GroupTO> search(\n \n         return getService(GroupService.class).\n                 search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(page).size(size).\n-                        orderBy(toOrderBy(sort)).build()).\n+                        orderBy(toOrderBy(sort)).details(false).build()).\n                 getResult();\n     }\n "},{"sha":"338851dccd1e5d9bb3a11ac76f95ab128ba28305","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -60,7 +60,7 @@ public int count(final String realm) {\n     public List<UserTO> list(final String realm, final int page, final int size, final SortParam<String> sort) {\n         return getService(UserService.class).\n                 list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(page).size(size).\n-                        orderBy(toOrderBy(sort)).build()).\n+                        orderBy(toOrderBy(sort)).details(false).build()).\n                 getResult();\n     }\n \n@@ -113,7 +113,7 @@ public List<UserTO> search(\n \n         return getService(UserService.class).\n                 search(SyncopeClient.getAnySearchQueryBuilder().realm(realm).fiql(fiql).page(page).size(size).\n-                        orderBy(toOrderBy(sort)).build()).\n+                        orderBy(toOrderBy(sort)).details(false).build()).\n                 getResult();\n     }\n "},{"sha":"e25daef1d25aca9c592911a3817b66919d547c14","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/builders/AnyListQueryBuilder.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyListQueryBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyListQueryBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyListQueryBuilder.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -41,6 +41,11 @@ public AnyListQueryBuilder orderBy(final String orderBy) {\n         return AnyListQueryBuilder.class.cast(super.orderBy(orderBy));\n     }\n \n+    @Override\n+    public AnyListQueryBuilder details(final boolean details) {\n+        return AnyListQueryBuilder.class.cast(super.details(details));\n+    }\n+\n     public AnyListQueryBuilder realm(final String realm) {\n         if (instance.getRealms() == null) {\n             instance.setRealms(new ArrayList<String>());\n@@ -56,6 +61,7 @@ public AnyListQuery build() {\n         instance.setPage(lq.getPage());\n         instance.setSize(lq.getSize());\n         instance.setOrderBy(lq.getOrderBy());\n+        instance.setDetails(lq.isDetails());\n \n         return instance;\n     }"},{"sha":"5bffdcc6aab2ce538840b2e8aa81e6fc9ad40cc3","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/builders/AnySearchQueryBuilder.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnySearchQueryBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnySearchQueryBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnySearchQueryBuilder.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -45,6 +45,11 @@ public AnySearchQueryBuilder orderBy(final String orderBy) {\n         return AnySearchQueryBuilder.class.cast(super.orderBy(orderBy));\n     }\n \n+    @Override\n+    public AnySearchQueryBuilder details(final boolean details) {\n+        return AnySearchQueryBuilder.class.cast(super.details(details));\n+    }\n+\n     public AnySearchQueryBuilder fiql(final String fiql) {\n         instance.setFiql(fiql);\n \n@@ -58,6 +63,7 @@ public AnySearchQuery build() {\n         instance.setPage(slq.getPage());\n         instance.setSize(slq.getSize());\n         instance.setOrderBy(slq.getOrderBy());\n+        instance.setDetails(slq.isDetails());\n \n         return instance;\n     }"},{"sha":"bce0e739b20934998f52b1f85f53fc83a7ba93db","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/builders/ListQueryBuilder.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FListQueryBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FListQueryBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FListQueryBuilder.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -42,6 +42,12 @@ public ListQueryBuilder orderBy(final String orderBy) {\n         return this;\n     }\n \n+    public ListQueryBuilder details(final boolean details) {\n+        instance.setDetails(details);\n+\n+        return this;\n+    }\n+\n     public ListQuery build() {\n         return instance;\n     }"},{"sha":"d588a0183c5c968f1bffa03c785f371b11fe59ce","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":3,"deletions":45,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -68,10 +68,8 @@ public class DisplayAttributesModalPage extends BaseModalPage {\n \n     private final List<String> selectedDerSchemas;\n \n-    private final List<String> selectedVirSchemas;\n-\n     public DisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n-            final List<String> schemaNames, final List<String> dSchemaNames, final List<String> vSchemaNames) {\n+            final List<String> schemaNames, final List<String> dSchemaNames) {\n \n         super();\n \n@@ -105,16 +103,6 @@ protected List<String> load() {\n             }\n         };\n \n-        final IModel<List<String>> vsnames = new LoadableDetachableModel<List<String>>() {\n-\n-            private static final long serialVersionUID = 5275935387613157437L;\n-\n-            @Override\n-            protected List<String> load() {\n-                return vSchemaNames;\n-            }\n-        };\n-\n         final Form form = new Form(FORM);\n         form.setModel(new CompoundPropertyModel(this));\n \n@@ -124,8 +112,6 @@ protected List<String> load() {\n \n         selectedDerSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW);\n \n-        selectedVirSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW);\n-\n         final CheckGroup dgroup = new CheckGroup(\"dCheckGroup\", new PropertyModel(this, \"selectedDetails\"));\n         form.add(dgroup);\n \n@@ -191,54 +177,26 @@ protected void populateItem(ListItem<String> item) {\n             dsgroup.add(derSchemas);\n         }\n \n-        if (vsnames.getObject() == null || vsnames.getObject().isEmpty()) {\n-            final Fragment fragment = new Fragment(\"vschemas\", \"emptyFragment\", form);\n-            form.add(fragment);\n-\n-            selectedVirSchemas.clear();\n-        } else {\n-            final Fragment fragment = new Fragment(\"vschemas\", \"vsfragment\", form);\n-            form.add(fragment);\n-\n-            final CheckGroup vsgroup = new CheckGroup(\"vsCheckGroup\", new PropertyModel(this, \"selectedVirSchemas\"));\n-            fragment.add(vsgroup);\n-\n-            final ListView<String> virSchemas = new ListView<String>(\"virSchemas\", vsnames) {\n-\n-                private static final long serialVersionUID = 9101744072914090143L;\n-\n-                @Override\n-                protected void populateItem(ListItem<String> item) {\n-                    item.add(new Check(\"vscheck\", item.getModel()));\n-                    item.add(new Label(\"vsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n-                }\n-            };\n-            vsgroup.add(virSchemas);\n-        }\n-\n         final AjaxButton submit = new IndicatingAjaxButton(SUBMIT, new ResourceModel(SUBMIT)) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                if (selectedDetails.size() + selectedPlainSchemas.size() + selectedVirSchemas.size() + selectedDerSchemas.\n-                        size()\n+                if (selectedDetails.size() + selectedPlainSchemas.size() + selectedDerSchemas.size()\n                         > MAX_SELECTIONS) {\n \n                     error(getString(\"tooManySelections\"));\n                     onError(target, form);\n                 } else {\n-                    final Map<String, List<String>> prefs = new HashMap<String, List<String>>();\n+                    final Map<String, List<String>> prefs = new HashMap<>();\n \n                     prefs.put(Constants.PREF_USERS_DETAILS_VIEW, selectedDetails);\n \n                     prefs.put(Constants.PREF_USERS_ATTRIBUTES_VIEW, selectedPlainSchemas);\n \n                     prefs.put(Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW, selectedDerSchemas);\n \n-                    prefs.put(Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW, selectedVirSchemas);\n-\n                     prefMan.setList(getRequest(), getResponse(), prefs);\n \n                     ((BasePage) pageRef.getPage()).setModalResult(true);"},{"sha":"16f7a22465d723b7d52f553044aef17c0d79ce65","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -69,16 +69,13 @@ public class UserSearchResultPanel extends AbstractSearchResultPanel {\n \n     private final List<String> dSchemaNames;\n \n-    private final List<String> vSchemaNames;\n-\n     public <T extends AbstractAttributableTO> UserSearchResultPanel(final String id, final boolean filtered,\n             final String fiql, final PageReference callerRef, final AbstractSubjectRestClient restClient) {\n \n         super(id, filtered, fiql, callerRef, restClient);\n \n         this.pSchemaNames = schemaRestClient.getPlainSchemaNames(AttributableType.USER);\n         this.dSchemaNames = schemaRestClient.getDerSchemaNames(AttributableType.USER);\n-        this.vSchemaNames = schemaRestClient.getVirSchemaNames(AttributableType.USER);\n \n         initResultTable();\n     }\n@@ -112,12 +109,6 @@ protected List<IColumn<AbstractAttributableTO, String>> getColumns() {\n             }\n         }\n \n-        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW)) {\n-            if (vSchemaNames.contains(name)) {\n-                columns.add(new AttrColumn(name, SchemaType.VIRTUAL));\n-            }\n-        }\n-\n         // Add defaults in case of no selection\n         if (columns.isEmpty()) {\n             for (String name : DisplayAttributesModalPage.DEFAULT_SELECTION) {\n@@ -252,7 +243,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             @Override\n                             public Page createPage() {\n                                 return new DisplayAttributesModalPage(page.getPageReference(), displaymodal,\n-                                        pSchemaNames, dSchemaNames, vSchemaNames);\n+                                        pSchemaNames, dSchemaNames);\n                             }\n                         });\n "},{"sha":"fff02bba14fdbb0c4e8e0396ee325f8393461196","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -55,7 +55,7 @@ public int count() {\n \n     @Override\n     public List<UserTO> list(final int page, final int size, final SortParam<String> sort) {\n-        return getService(UserService.class).list(page, size, toOrderBy(sort)).getResult();\n+        return getService(UserService.class).list(page, size, toOrderBy(sort), false).getResult();\n     }\n \n     public UserTO create(final UserTO userTO, final boolean storePassword) {\n@@ -101,7 +101,7 @@ public int searchCount(final String fiql) {\n \n     @Override\n     public List<UserTO> search(final String fiql, final int page, final int size, final SortParam<String> sort) {\n-        return getService(UserService.class).search(fiql, page, size, toOrderBy(sort)).getResult();\n+        return getService(UserService.class).search(fiql, page, size, toOrderBy(sort), false).getResult();\n     }\n \n     @Override"},{"sha":"4e4064c67f49b245f681e9f1e47fd35d14785223","filename":"client/old_console/src/main/resources/org/apache/syncope/client/console/pages/DisplayAttributesModalPage.html","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -81,8 +81,6 @@\n \n         <span wicket:id=\"dschemas\">[derived schemas]</span>\n \n-        <span wicket:id=\"vschemas\">[virtual schemas]</span>\n-\n       </div>\n \n       <wicket:fragment wicket:id=\"sfragment\">"},{"sha":"96fe5144adc02658384574718d32a0409490689e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/ListQuery.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FListQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FListQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FListQuery.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -38,6 +38,8 @@ public class ListQuery implements Serializable {\n \n     private String orderBy;\n \n+    private Boolean details;\n+\n     public Integer getPage() {\n         return page;\n     }\n@@ -69,6 +71,16 @@ public void setOrderBy(final String orderBy) {\n         this.orderBy = orderBy;\n     }\n \n+    @QueryParam(JAXRSService.PARAM_DETAILS)\n+    @DefaultValue(\"true\")\n+    public boolean isDetails() {\n+        return details == null ? true : details;\n+    }\n+\n+    public void setDetails(final boolean details) {\n+        this.details = details;\n+    }\n+\n     @Override\n     public boolean equals(final Object obj) {\n         return EqualsBuilder.reflectionEquals(this, obj);"},{"sha":"c6c73d5a664b40bd3704fef1323c84a8f538c7b0","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/JAXRSService.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -28,4 +28,6 @@ public interface JAXRSService {\n \n     String PARAM_ORDERBY = \"orderby\";\n \n+    String PARAM_DETAILS = \"details\";\n+\n }"},{"sha":"6f6611399b4af3d3157b1a1434dd64bd031b60b1","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractAnyLogic.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -77,10 +77,16 @@ protected Set<String> getEffectiveRealms(\n \n     public abstract TO delete(Long key);\n \n-    public abstract List<TO> list(int page, int size, List<OrderByClause> orderBy, List<String> realms);\n+    public abstract List<TO> list(\n+            int page, int size, List<OrderByClause> orderBy,\n+            List<String> realms,\n+            boolean details);\n \n     public abstract List<TO> search(\n-            SearchCond searchCondition, int page, int size, List<OrderByClause> orderBy, List<String> realms);\n+            SearchCond searchCondition,\n+            int page, int size, List<OrderByClause> orderBy,\n+            List<String> realms,\n+            boolean details);\n \n     public abstract int searchCount(SearchCond searchCondition, List<String> realms);\n }"},{"sha":"05db8b5030e48dcdb63a31e1ed678c51dc8fd40d","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -106,15 +106,17 @@ public int count(final List<String> realms) {\n     @Transactional(readOnly = true)\n     @Override\n     public List<AnyObjectTO> list(\n-            final int page, final int size, final List<OrderByClause> orderBy, final List<String> realms) {\n+            final int page, final int size, final List<OrderByClause> orderBy,\n+            final List<String> realms, final boolean details) {\n \n-        return list(null, page, size, orderBy, realms);\n+        return list(null, page, size, orderBy, realms, details);\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.ANY_OBJECT_LIST + \"')\")\n     @Transactional(readOnly = true)\n     public List<AnyObjectTO> list(final String type,\n-            final int page, final int size, final List<OrderByClause> orderBy, final List<String> realms) {\n+            final int page, final int size, final List<OrderByClause> orderBy,\n+            final List<String> realms, final boolean details) {\n \n         Set<String> effectiveRealms = getEffectiveRealms(SyncopeConstants.FULL_ADMIN_REALMS, realms);\n \n@@ -125,7 +127,7 @@ public List<AnyObjectTO> list(final String type,\n \n                     @Override\n                     public AnyObjectTO transform(final AnyObject input) {\n-                        return binder.getAnyObjectTO(input);\n+                        return binder.getAnyObjectTO(input, details);\n                     }\n                 }, new ArrayList<AnyObjectTO>());\n     }\n@@ -143,7 +145,7 @@ public int searchCount(final SearchCond searchCondition, final List<String> real\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     @Override\n     public List<AnyObjectTO> search(final SearchCond searchCondition, final int page, final int size,\n-            final List<OrderByClause> orderBy, final List<String> realms) {\n+            final List<OrderByClause> orderBy, final List<String> realms, final boolean details) {\n \n         List<AnyObject> matchingAnyObjects = searchDAO.search(\n                 getEffectiveRealms(AuthContextUtils.getAuthorizations().get(Entitlement.ANY_OBJECT_SEARCH), realms),\n@@ -152,7 +154,7 @@ public List<AnyObjectTO> search(final SearchCond searchCondition, final int page\n \n             @Override\n             public AnyObjectTO transform(final AnyObject input) {\n-                return binder.getAnyObjectTO(input);\n+                return binder.getAnyObjectTO(input, details);\n             }\n         }, new ArrayList<AnyObjectTO>());\n     }\n@@ -288,7 +290,7 @@ public AnyObjectTO deprovision(final Long anyObjectKey, final Collection<String>\n \n         List<PropagationStatus> statuses = provisioningManager.deprovision(anyObjectKey, resources);\n \n-        AnyObjectTO updatedTO = binder.getAnyObjectTO(anyObject);\n+        AnyObjectTO updatedTO = binder.getAnyObjectTO(anyObject, true);\n         updatedTO.getPropagationStatusTOs().addAll(statuses);\n         return updatedTO;\n     }"},{"sha":"ff5cd6454630f9c66716ec22ada94712b7d06fe0","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -108,7 +108,7 @@ public List<GroupTO> own() {\n \n                     @Override\n                     public GroupTO transform(final Group input) {\n-                        return binder.getGroupTO(input);\n+                        return binder.getGroupTO(input, true);\n                     }\n                 }, new ArrayList<GroupTO>());\n     }\n@@ -124,7 +124,8 @@ public int count(final List<String> realms) {\n     @Transactional(readOnly = true)\n     @Override\n     public List<GroupTO> list(\n-            final int page, final int size, final List<OrderByClause> orderBy, final List<String> realms) {\n+            final int page, final int size, final List<OrderByClause> orderBy,\n+            final List<String> realms, final boolean details) {\n \n         return CollectionUtils.collect(groupDAO.findAll(\n                 getEffectiveRealms(SyncopeConstants.FULL_ADMIN_REALMS, realms),\n@@ -133,7 +134,7 @@ public List<GroupTO> list(\n \n                     @Override\n                     public GroupTO transform(final Group input) {\n-                        return binder.getGroupTO(input);\n+                        return binder.getGroupTO(input, details);\n                     }\n                 }, new ArrayList<GroupTO>());\n     }\n@@ -151,7 +152,7 @@ public int searchCount(final SearchCond searchCondition, final List<String> real\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     @Override\n     public List<GroupTO> search(final SearchCond searchCondition, final int page, final int size,\n-            final List<OrderByClause> orderBy, final List<String> realms) {\n+            final List<OrderByClause> orderBy, final List<String> realms, final boolean details) {\n \n         final List<Group> matchingGroups = searchDAO.search(\n                 getEffectiveRealms(AuthContextUtils.getAuthorizations().get(Entitlement.GROUP_SEARCH), realms),\n@@ -160,7 +161,7 @@ public List<GroupTO> search(final SearchCond searchCondition, final int page, fi\n \n             @Override\n             public GroupTO transform(final Group input) {\n-                return binder.getGroupTO(input);\n+                return binder.getGroupTO(input, details);\n             }\n         }, new ArrayList<GroupTO>());\n     }\n@@ -306,7 +307,7 @@ public GroupTO deprovision(final Long groupKey, final Collection<String> resourc\n \n         List<PropagationStatus> statuses = provisioningManager.deprovision(groupKey, resources);\n \n-        GroupTO updatedTO = binder.getGroupTO(group);\n+        GroupTO updatedTO = binder.getGroupTO(group, true);\n         updatedTO.getPropagationStatusTOs().addAll(statuses);\n         return updatedTO;\n     }"},{"sha":"3aec28c388dde03a604b33be30d0b95a6617b4ed","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -121,7 +121,8 @@ public int count(final List<String> realms) {\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     @Override\n     public List<UserTO> list(\n-            final int page, final int size, final List<OrderByClause> orderBy, final List<String> realms) {\n+            final int page, final int size, final List<OrderByClause> orderBy,\n+            final List<String> realms, final boolean details) {\n \n         return CollectionUtils.collect(userDAO.findAll(\n                 getEffectiveRealms(AuthContextUtils.getAuthorizations().get(Entitlement.USER_LIST), realms),\n@@ -130,7 +131,7 @@ public List<UserTO> list(\n \n                     @Override\n                     public UserTO transform(final User input) {\n-                        return binder.getUserTO(input);\n+                        return binder.getUserTO(input, details);\n                     }\n                 }, new ArrayList<UserTO>());\n     }\n@@ -163,7 +164,7 @@ public int searchCount(final SearchCond searchCondition, final List<String> real\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     @Override\n     public List<UserTO> search(final SearchCond searchCondition, final int page, final int size,\n-            final List<OrderByClause> orderBy, final List<String> realms) {\n+            final List<OrderByClause> orderBy, final List<String> realms, final boolean details) {\n \n         List<User> matchingUsers = searchDAO.search(\n                 getEffectiveRealms(AuthContextUtils.getAuthorizations().get(Entitlement.USER_SEARCH), realms),\n@@ -172,7 +173,7 @@ public List<UserTO> search(final SearchCond searchCondition, final int page, fin\n \n             @Override\n             public UserTO transform(final User input) {\n-                return binder.getUserTO(input);\n+                return binder.getUserTO(input, details);\n             }\n         }, new ArrayList<UserTO>());\n     }\n@@ -404,11 +405,11 @@ public UserTO assign(\n     @Transactional(rollbackFor = { Throwable.class })\n     @Override\n     public UserTO deprovision(final Long key, final Collection<String> resources) {\n-        final User user = userDAO.authFind(key);\n+        User user = userDAO.authFind(key);\n \n         List<PropagationStatus> statuses = provisioningManager.deprovision(key, resources);\n \n-        final UserTO updatedUserTO = binder.getUserTO(user);\n+        final UserTO updatedUserTO = binder.getUserTO(user, true);\n         updatedUserTO.getPropagationStatusTOs().addAll(statuses);\n         return updatedUserTO;\n     }"},{"sha":"5b89421be0bb04f56eae8f61b2f09352b7b30881","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/GroupReportlet.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -223,7 +223,7 @@ private void doExtract(final ContentHandler handler, final List<Group> groups) t\n \n             // Using GroupTO for attribute values, since the conversion logic of\n             // values to String is already encapsulated there\n-            GroupTO groupTO = groupDataBinder.getGroupTO(group);\n+            GroupTO groupTO = groupDataBinder.getGroupTO(group, true);\n \n             doExtractAttributes(handler, groupTO, conf.getPlainAttrs(), conf.getDerAttrs(), conf.getVirAttrs());\n "},{"sha":"b626dd18c8103c517ae02240bfc54467d8504890","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/UserReportlet.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -266,7 +266,7 @@ private void doExtract(final ContentHandler handler, final List<User> users) thr\n \n             // Using UserTO for attribute values, since the conversion logic of\n             // values to String is already encapsulated there\n-            UserTO userTO = userDataBinder.getUserTO(user);\n+            UserTO userTO = userDataBinder.getUserTO(user, true);\n \n             doExtractAttributes(handler, userTO, conf.getPlainAttrs(), conf.getDerAttrs(), conf.getVirAttrs());\n \n@@ -286,7 +286,8 @@ private void doExtract(final ContentHandler handler, final List<User> users) thr\n                             LOG.warn(\"Unexpected: cannot find relationship for any object {} for user {}\",\n                                     rel.getRightKey(), user);\n                         } else {\n-                            doExtractResources(handler, anyObjectDataBinder.getAnyObjectTO(actualRel.getRightEnd()));\n+                            doExtractResources(\n+                                    handler, anyObjectDataBinder.getAnyObjectTO(actualRel.getRightEnd(), true));\n                         }\n                     }\n \n@@ -313,7 +314,7 @@ private void doExtract(final ContentHandler handler, final List<User> users) thr\n                             LOG.warn(\"Unexpected: cannot find membership for group {} for user {}\",\n                                     memb.getRightKey(), user);\n                         } else {\n-                            doExtractResources(handler, groupDataBinder.getGroupTO(actualMemb.getRightEnd()));\n+                            doExtractResources(handler, groupDataBinder.getGroupTO(actualMemb.getRightEnd(), true));\n                         }\n                     }\n "},{"sha":"c5dc13cb4340b1d45f047b673c1c61a70108e67e","filename":"core/logic/src/test/java/org/apache/syncope/core/logic/NotificationTest.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationTest.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -223,10 +223,10 @@ private boolean verifyMail(final String sender, final String subject) throws Exc\n         inbox.open(Folder.READ_WRITE);\n \n         Message[] messages = inbox.getMessages();\n-        for (int i = 0; i < messages.length; i++) {\n-            if (sender.equals(messages[i].getFrom()[0].toString()) && subject.equals(messages[i].getSubject())) {\n+        for (Message message : messages) {\n+            if (sender.equals(message.getFrom()[0].toString()) && subject.equals(message.getSubject())) {\n                 found = true;\n-                messages[i].setFlag(Flag.DELETED, true);\n+                message.setFlag(Flag.DELETED, true);\n             }\n         }\n \n@@ -534,6 +534,7 @@ public void issueSYNCOPE445() throws Exception {\n \n         assertNotNull(taskId);\n         assertNotNull(textBody);\n+        assertNotNull(recipients);\n         assertTrue(recipients.contains(\"syncope445@syncope.apache.org\"));\n \n         // 5. execute Notification task and verify e-mail"},{"sha":"ff42b8446125bf5e936c5445b807b785763785c3","filename":"core/persistence-jpa/src/main/resources/indexes.xml","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -26,20 +26,51 @@ under the License.\n   <entry key=\"UPlainAttrValue_longvalueIndex\">CREATE INDEX UAttrValue_longvalueIndex ON UPlainAttrValue(longvalue)</entry>\n   <entry key=\"UPlainAttrValue_doublevalueIndex\">CREATE INDEX UAttrValue_doublevalueIndex ON UPlainAttrValue(doublevalue)</entry>\n   <entry key=\"UPlainAttrValue_booleanvalueIndex\">CREATE INDEX UAttrValue_booleanvalueIndex ON UPlainAttrValue(booleanvalue)</entry>\n+\n   <entry key=\"APlainAttrValue_stringvalueIndex\">CREATE INDEX AAttrValue_stringvalueIndex ON APlainAttrValue(stringvalue)</entry>\n   <entry key=\"APlainAttrValue_datevalueIndex\">CREATE INDEX AAttrValue_datevalueIndex ON APlainAttrValue(datevalue)</entry>\n   <entry key=\"APlainAttrValue_longvalueIndex\">CREATE INDEX AAttrValue_longvalueIndex ON APlainAttrValue(longvalue)</entry>\n   <entry key=\"APlainAttrValue_doublevalueIndex\">CREATE INDEX AAttrValue_doublevalueIndex ON APlainAttrValue(doublevalue)</entry>\n   <entry key=\"APlainAttrValue_booleanvalueIndex\">CREATE INDEX AAttrValue_booleanvalueIndex ON APlainAttrValue(booleanvalue)</entry>\n+\n   <entry key=\"GPlainAttrValue_stringvalueIndex\">CREATE INDEX GAttrValue_stringvalueIndex ON GPlainAttrValue(stringvalue)</entry>\n   <entry key=\"GPlainAttrValue_datevalueIndex\">CREATE INDEX GAttrValue_datevalueIndex ON GPlainAttrValue(datevalue)</entry>\n   <entry key=\"GPlainAttrValue_longvalueIndex\">CREATE INDEX GAttrValue_longvalueIndex ON GPlainAttrValue(longvalue)</entry>\n   <entry key=\"GPlainAttrValue_doublevalueIndex\">CREATE INDEX GAttrValue_doublevalueIndex ON GPlainAttrValue(doublevalue)</entry>\n   <entry key=\"GPlainAttrValue_booleanvalueIndex\">CREATE INDEX GAttrValue_booleanvalueIndex ON GPlainAttrValue(booleanvalue)</entry>\n+\n   <entry key=\"CPlainAttrValue_stringvalueIndex\">CREATE INDEX CAttrValue_stringvalueIndex ON CPlainAttrValue(stringvalue)</entry>\n   <entry key=\"CPlainAttrValue_datevalueIndex\">CREATE INDEX CAttrValue_datevalueIndex ON CPlainAttrValue(datevalue)</entry>\n   <entry key=\"CPlainAttrValue_longvalueIndex\">CREATE INDEX CAttrValue_longvalueIndex ON CPlainAttrValue(longvalue)</entry>\n   <entry key=\"CPlainAttrValue_doublevalueIndex\">CREATE INDEX CAttrValue_doublevalueIndex ON CPlainAttrValue(doublevalue)</entry>\n   <entry key=\"CPlainAttrValue_booleanvalueIndex\">CREATE INDEX CAttrValue_booleanvalueIndex ON CPlainAttrValue(booleanvalue)</entry>\n+\n+  <entry key=\"UMembership_GroupIndex\">CREATE INDEX UMembership_GroupIndex ON UMembership(group_id)</entry>\n+  <entry key=\"UMembership_UserIndex\">CREATE INDEX UMembership_UserIndex ON UMembership(user_id)</entry>\n+  <entry key=\"AMembership_GroupIndex\">CREATE INDEX AMembership_GroupIndex ON AMembership(group_id)</entry>\n+  <entry key=\"AMembership_AnyObjectIndex\">CREATE INDEX AMembership_AnyObjectIndex ON AMembership(anyObject_id)</entry>\n+\n+  <entry key=\"URelationship_RightIndex\">CREATE INDEX URelationship_RightIndex ON URelationship(anyObject_id)</entry>\n+  <entry key=\"URelationship_LeftIndex\">CREATE INDEX URelationship_LeftIndex ON URelationship(user_id)</entry>\n+  <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_id)</entry>\n+  <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_id)</entry>\n+\n+  <entry key=\"UPlainAttrValue_attributeIdIndex\">CREATE INDEX UPlainAttrValue_attributeIdIndex on UPlainAttrValue(attribute_id)</entry>\n+  <entry key=\"GPlainAttrValue_attributeIdIndex\">CREATE INDEX GPlainAttrValue_attributeIdIndex on GPlainAttrValue(attribute_id)</entry>\n+  <entry key=\"APlainAttrValue_attributeIdIndex\">CREATE INDEX APlainAttrValue_attributeIdIndex on APlainAttrValue(attribute_id)</entry>\n+  <entry key=\"CPlainAttrValue_attributeIdIndex\">CREATE INDEX CPlainAttrValue_attributeIdIndex on CPlainAttrValue(attribute_id)</entry>\n+\n+  <entry key=\"UPlainAttr_owner_id_index\">CREATE INDEX UPlainAttr_owner_id_index on UPlainAttr(owner_id)</entry>\n+  <entry key=\"GPlainAttr_owner_id_index\">CREATE INDEX GPlainAttr_owner_id_index on GPlainAttr(owner_id)</entry>\n+  <entry key=\"APlainAttr_owner_id_index\">CREATE INDEX APlainAttr_owner_id_index on APlainAttr(owner_id)</entry>\n+\n+  <entry key=\"UDerAttr_owner_id_index\">CREATE INDEX UDerAttr_owner_id_index on UDerAttr(owner_id)</entry>\n+  <entry key=\"GDerAttr_owner_id_index\">CREATE INDEX GDerAttr_owner_id_index on GDerAttr(owner_id)</entry>\n+  <entry key=\"ADerAttr_owner_id_index\">CREATE INDEX ADerAttr_owner_id_index on ADerAttr(owner_id)</entry>\n+\n+  <entry key=\"UVirAttr_owner_id_index\">CREATE INDEX UVirAttr_owner_id_index on UVirAttr(owner_id)</entry>\n+  <entry key=\"GVirAttr_owner_id_index\">CREATE INDEX GVirAttr_owner_id_index on GVirAttr(owner_id)</entry>\n+  <entry key=\"AVirAttr_owner_id_index\">CREATE INDEX AVirAttr_owner_id_index on AVirAttr(owner_id)</entry>\n+\n   <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n </properties>"},{"sha":"597b639f20d7aa5e3f44916646957b447e480323","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/AnyObjectDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FAnyObjectDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FAnyObjectDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FAnyObjectDataBinder.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -27,7 +27,7 @@ public interface AnyObjectDataBinder {\n \n     AnyObjectTO getAnyObjectTO(Long key);\n \n-    AnyObjectTO getAnyObjectTO(AnyObject anyObject);\n+    AnyObjectTO getAnyObjectTO(AnyObject anyObject, boolean details);\n \n     void create(AnyObject anyObject, AnyObjectTO anyObjectTO);\n "},{"sha":"f472aef9acd4063fd7c1f74c046490d208a2e6ed","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/GroupDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FGroupDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FGroupDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FGroupDataBinder.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -27,7 +27,7 @@ public interface GroupDataBinder {\n \n     GroupTO getGroupTO(Long key);\n \n-    GroupTO getGroupTO(Group group);\n+    GroupTO getGroupTO(Group group, boolean details);\n \n     Group create(Group group, GroupTO groupTO);\n "},{"sha":"fbfe084cb0db710e1d1214f73e5942b6c7266d60","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/UserDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FUserDataBinder.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -31,7 +31,7 @@ public interface UserDataBinder {\n \n     UserTO getUserTO(Long key);\n \n-    UserTO getUserTO(User user);\n+    UserTO getUserTO(User user, boolean details);\n \n     void create(User user, UserTO userTO, boolean storePassword);\n "},{"sha":"258e71317842a78802e9ac6855c2752b2139d104","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":29,"deletions":24,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -63,48 +63,53 @@ public class AnyObjectDataBinderImpl extends AbstractAnyDataBinder implements An\n     @Transactional(readOnly = true)\n     @Override\n     public AnyObjectTO getAnyObjectTO(final Long key) {\n-        return getAnyObjectTO(anyObjectDAO.authFind(key));\n+        return getAnyObjectTO(anyObjectDAO.authFind(key), true);\n     }\n \n     @Override\n-    public AnyObjectTO getAnyObjectTO(final AnyObject anyObject) {\n+    public AnyObjectTO getAnyObjectTO(final AnyObject anyObject, final boolean details) {\n         AnyObjectTO anyObjectTO = new AnyObjectTO();\n         anyObjectTO.setType(anyObject.getType().getKey());\n \n         BeanUtils.copyProperties(anyObject, anyObjectTO, IGNORE_PROPERTIES);\n \n-        virAttrHander.retrieveVirAttrValues(anyObject);\n+        if (details) {\n+            virAttrHander.retrieveVirAttrValues(anyObject);\n+        }\n+\n         fillTO(anyObjectTO, anyObject.getRealm().getFullPath(), anyObject.getAuxClasses(),\n                 anyObject.getPlainAttrs(), anyObject.getDerAttrs(), anyObject.getVirAttrs(),\n                 anyObjectDAO.findAllResources(anyObject));\n \n-        // relationships\n-        CollectionUtils.collect(anyObject.getRelationships(), new Transformer<ARelationship, RelationshipTO>() {\n+        if (details) {\n+            // relationships\n+            CollectionUtils.collect(anyObject.getRelationships(), new Transformer<ARelationship, RelationshipTO>() {\n \n-            @Override\n-            public RelationshipTO transform(final ARelationship relationship) {\n-                return AnyObjectDataBinderImpl.this.getRelationshipTO(relationship);\n-            }\n+                @Override\n+                public RelationshipTO transform(final ARelationship relationship) {\n+                    return AnyObjectDataBinderImpl.this.getRelationshipTO(relationship);\n+                }\n \n-        }, anyObjectTO.getRelationships());\n+            }, anyObjectTO.getRelationships());\n \n-        // memberships\n-        CollectionUtils.collect(anyObject.getMemberships(), new Transformer<AMembership, MembershipTO>() {\n+            // memberships\n+            CollectionUtils.collect(anyObject.getMemberships(), new Transformer<AMembership, MembershipTO>() {\n \n-            @Override\n-            public MembershipTO transform(final AMembership membership) {\n-                return AnyObjectDataBinderImpl.this.getMembershipTO(membership);\n-            }\n-        }, anyObjectTO.getMemberships());\n+                @Override\n+                public MembershipTO transform(final AMembership membership) {\n+                    return AnyObjectDataBinderImpl.this.getMembershipTO(membership);\n+                }\n+            }, anyObjectTO.getMemberships());\n \n-        // dynamic memberships\n-        CollectionUtils.collect(anyObjectDAO.findDynGroupMemberships(anyObject), new Transformer<Group, Long>() {\n+            // dynamic memberships\n+            CollectionUtils.collect(anyObjectDAO.findDynGroupMemberships(anyObject), new Transformer<Group, Long>() {\n \n-            @Override\n-            public Long transform(final Group group) {\n-                return group.getKey();\n-            }\n-        }, anyObjectTO.getDynGroups());\n+                @Override\n+                public Long transform(final Group group) {\n+                    return group.getKey();\n+                }\n+            }, anyObjectTO.getDynGroups());\n+        }\n \n         return anyObjectTO;\n     }"},{"sha":"b40cc887cc87cf7c9ee3161791aa3ceb0b9448c4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/GroupDataBinderImpl.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FGroupDataBinderImpl.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -187,9 +187,7 @@ public PropagationByResource update(final Group toBeUpdated, final GroupMod grou\n     @SuppressWarnings(\"unchecked\")\n     @Transactional(readOnly = true)\n     @Override\n-    public GroupTO getGroupTO(final Group group) {\n-        virAttrHander.retrieveVirAttrValues(group);\n-\n+    public GroupTO getGroupTO(final Group group, final boolean details) {\n         GroupTO groupTO = new GroupTO();\n \n         // set sys info\n@@ -208,6 +206,10 @@ public GroupTO getGroupTO(final Group group) {\n             groupTO.setGroupOwner(group.getGroupOwner().getKey());\n         }\n \n+        if (details) {\n+            virAttrHander.retrieveVirAttrValues(group);\n+        }\n+\n         fillTO(groupTO, group.getRealm().getFullPath(), group.getAuxClasses(),\n                 group.getPlainAttrs(), group.getDerAttrs(), group.getVirAttrs(), group.getResources());\n \n@@ -224,6 +226,6 @@ public GroupTO getGroupTO(final Group group) {\n     @Transactional(readOnly = true)\n     @Override\n     public GroupTO getGroupTO(final Long key) {\n-        return getGroupTO(groupDAO.authFind(key));\n+        return getGroupTO(groupDAO.authFind(key), true);\n     }\n }"},{"sha":"b0fb8b03795145976635ec6b8008d68637579213","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":44,"deletions":39,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -99,7 +99,7 @@ public UserTO getAuthenticatedUserTO() {\n             authUserTO.setUsername(adminUser);\n         } else {\n             User authUser = userDAO.find(authUsername);\n-            authUserTO = getUserTO(authUser);\n+            authUserTO = getUserTO(authUser, true);\n         }\n \n         return authUserTO;\n@@ -393,7 +393,7 @@ public void execute(final Long roleKey) {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public UserTO getUserTO(final User user) {\n+    public UserTO getUserTO(final User user, final boolean details) {\n         UserTO userTO = new UserTO();\n \n         BeanUtils.copyProperties(user, userTO, IGNORE_PROPERTIES);\n@@ -402,67 +402,72 @@ public UserTO getUserTO(final User user) {\n             userTO.setSecurityQuestion(user.getSecurityQuestion().getKey());\n         }\n \n-        virAttrHander.retrieveVirAttrValues(user);\n+        if (details) {\n+            virAttrHander.retrieveVirAttrValues(user);\n+        }\n+\n         fillTO(userTO, user.getRealm().getFullPath(), user.getAuxClasses(),\n                 user.getPlainAttrs(), user.getDerAttrs(), user.getVirAttrs(), userDAO.findAllResources(user));\n \n-        // roles\n-        CollectionUtils.collect(user.getRoles(), new Transformer<Role, Long>() {\n+        if (details) {\n+            // roles\n+            CollectionUtils.collect(user.getRoles(), new Transformer<Role, Long>() {\n \n-            @Override\n-            public Long transform(final Role role) {\n-                return role.getKey();\n-            }\n-        }, userTO.getRoles());\n+                @Override\n+                public Long transform(final Role role) {\n+                    return role.getKey();\n+                }\n+            }, userTO.getRoles());\n \n-        // relationships\n-        CollectionUtils.collect(user.getRelationships(), new Transformer<URelationship, RelationshipTO>() {\n+            // relationships\n+            CollectionUtils.collect(user.getRelationships(), new Transformer<URelationship, RelationshipTO>() {\n \n-            @Override\n-            public RelationshipTO transform(final URelationship relationship) {\n-                return UserDataBinderImpl.this.getRelationshipTO(relationship);\n-            }\n+                @Override\n+                public RelationshipTO transform(final URelationship relationship) {\n+                    return UserDataBinderImpl.this.getRelationshipTO(relationship);\n+                }\n \n-        }, userTO.getRelationships());\n+            }, userTO.getRelationships());\n \n-        // memberships\n-        CollectionUtils.collect(user.getMemberships(), new Transformer<UMembership, MembershipTO>() {\n+            // memberships\n+            CollectionUtils.collect(user.getMemberships(), new Transformer<UMembership, MembershipTO>() {\n \n-            @Override\n-            public MembershipTO transform(final UMembership membership) {\n-                return UserDataBinderImpl.this.getMembershipTO(membership);\n-            }\n-        }, userTO.getMemberships());\n+                @Override\n+                public MembershipTO transform(final UMembership membership) {\n+                    return UserDataBinderImpl.this.getMembershipTO(membership);\n+                }\n+            }, userTO.getMemberships());\n \n-        // dynamic memberships\n-        CollectionUtils.collect(userDAO.findDynRoleMemberships(user), new Transformer<Role, Long>() {\n+            // dynamic memberships\n+            CollectionUtils.collect(userDAO.findDynRoleMemberships(user), new Transformer<Role, Long>() {\n \n-            @Override\n-            public Long transform(final Role role) {\n-                return role.getKey();\n-            }\n-        }, userTO.getDynRoles());\n-        CollectionUtils.collect(userDAO.findDynGroupMemberships(user), new Transformer<Group, Long>() {\n+                @Override\n+                public Long transform(final Role role) {\n+                    return role.getKey();\n+                }\n+            }, userTO.getDynRoles());\n+            CollectionUtils.collect(userDAO.findDynGroupMemberships(user), new Transformer<Group, Long>() {\n \n-            @Override\n-            public Long transform(final Group group) {\n-                return group.getKey();\n-            }\n-        }, userTO.getDynGroups());\n+                @Override\n+                public Long transform(final Group group) {\n+                    return group.getKey();\n+                }\n+            }, userTO.getDynGroups());\n+        }\n \n         return userTO;\n     }\n \n     @Transactional(readOnly = true)\n     @Override\n     public UserTO getUserTO(final String username) {\n-        return getUserTO(userDAO.authFind(username));\n+        return getUserTO(userDAO.authFind(username), true);\n     }\n \n     @Transactional(readOnly = true)\n     @Override\n     public UserTO getUserTO(final Long key) {\n-        return getUserTO(userDAO.authFind(key));\n+        return getUserTO(userDAO.authFind(key), true);\n     }\n \n }"},{"sha":"65b4618d28ede0d7dfe8e0ee4d153e9518302d81","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/NotificationManagerImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -199,7 +199,7 @@ private NotificationTask getNotificationTask(\n                 LOG.warn(\"{} cannot be notified: {} not found\", recipient, notification.getRecipientAttrName());\n             } else {\n                 recipientEmails.add(email);\n-                recipientTOs.add(userDataBinder.getUserTO(recipient));\n+                recipientTOs.add(userDataBinder.getUserTO(recipient, true));\n             }\n         }\n \n@@ -316,9 +316,9 @@ public List<NotificationTask> createTasks(\n                     model.put(\"input\", input);\n \n                     if (any instanceof User) {\n-                        model.put(\"user\", userDataBinder.getUserTO((User) any));\n+                        model.put(\"user\", userDataBinder.getUserTO((User) any, true));\n                     } else if (any instanceof Group) {\n-                        model.put(\"group\", groupDataBinder.getGroupTO((Group) any));\n+                        model.put(\"group\", groupDataBinder.getGroupTO((Group) any, true));\n                     }\n \n                     NotificationTask notificationTask = getNotificationTask(notification, any, model);"},{"sha":"1d00cc33a6852312db43b4a3f41881961e5213d0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AnyObjectPushResultHandlerImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAnyObjectPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAnyObjectPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAnyObjectPushResultHandlerImpl.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -47,7 +47,7 @@ protected AnyUtils getAnyUtils() {\n \n     @Override\n     protected Any<?, ?, ?> deprovision(final Any<?, ?, ?> sbj) {\n-        AnyObjectTO before = anyObjectDataBinder.getAnyObjectTO(AnyObject.class.cast(sbj));\n+        AnyObjectTO before = anyObjectDataBinder.getAnyObjectTO(AnyObject.class.cast(sbj), true);\n \n         List<String> noPropResources = new ArrayList<>(before.getResources());\n         noPropResources.remove(profile.getTask().getResource().getKey());\n@@ -59,7 +59,7 @@ protected AnyUtils getAnyUtils() {\n \n     @Override\n     protected Any<?, ?, ?> provision(final Any<?, ?, ?> sbj, final Boolean enabled) {\n-        AnyObjectTO before = anyObjectDataBinder.getAnyObjectTO(AnyObject.class.cast(sbj));\n+        AnyObjectTO before = anyObjectDataBinder.getAnyObjectTO(AnyObject.class.cast(sbj), true);\n \n         List<String> noPropResources = new ArrayList<>(before.getResources());\n         noPropResources.remove(profile.getTask().getResource().getKey());"},{"sha":"df26d588aa603d7d51c7c6074653632a28a0835e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/GroupPushResultHandlerImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupPushResultHandlerImpl.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -46,7 +46,7 @@ protected AnyUtils getAnyUtils() {\n \n     @Override\n     protected Any<?, ?, ?> deprovision(final Any<?, ?, ?> sbj) {\n-        GroupTO before = groupDataBinder.getGroupTO(Group.class.cast(sbj));\n+        GroupTO before = groupDataBinder.getGroupTO(Group.class.cast(sbj), true);\n \n         List<String> noPropResources = new ArrayList<>(before.getResources());\n         noPropResources.remove(profile.getTask().getResource().getKey());\n@@ -58,7 +58,7 @@ protected AnyUtils getAnyUtils() {\n \n     @Override\n     protected Any<?, ?, ?> provision(final Any<?, ?, ?> sbj, final Boolean enabled) {\n-        GroupTO before = groupDataBinder.getGroupTO(Group.class.cast(sbj));\n+        GroupTO before = groupDataBinder.getGroupTO(Group.class.cast(sbj), true);\n \n         List<String> noPropResources = new ArrayList<>(before.getResources());\n         noPropResources.remove(profile.getTask().getResource().getKey());"},{"sha":"600b6d0eea00c7bdc9863e0dd054baf9f6bede59","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -71,7 +71,8 @@ public String transform(final String input) {\n                         listQuery.getPage(),\n                         listQuery.getSize(),\n                         getOrderByClauses(listQuery.getOrderBy()),\n-                        listQuery.getRealms()),\n+                        listQuery.getRealms(),\n+                        listQuery.isDetails()),\n                 listQuery.getPage(),\n                 listQuery.getSize(),\n                 getAnyLogic().count(listQuery.getRealms()));\n@@ -94,7 +95,8 @@ public String transform(final String input) {\n                         searchQuery.getPage(),\n                         searchQuery.getSize(),\n                         getOrderByClauses(searchQuery.getOrderBy()),\n-                        searchQuery.getRealms()),\n+                        searchQuery.getRealms(),\n+                        searchQuery.isDetails()),\n                 searchQuery.getPage(),\n                 searchQuery.getSize(),\n                 getAnyLogic().searchCount(cond, searchQuery.getRealms()));"},{"sha":"9265bcb565192c02dfa8865b90de025a55d02dc0","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractServiceImpl.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -48,9 +48,6 @@\n \n abstract class AbstractServiceImpl implements JAXRSService {\n \n-    /**\n-     * Logger.\n-     */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractServiceImpl.class);\n \n     protected static final String OPTIONS_ALLOW = \"GET,POST,OPTIONS,HEAD\";"},{"sha":"859d008147122a9a91c4d4aeff01510b1da78e1b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyObjectServiceImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceImpl.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -63,7 +63,8 @@ public String transform(final String input) {\n                         listQuery.getPage(),\n                         listQuery.getSize(),\n                         getOrderByClauses(listQuery.getOrderBy()),\n-                        listQuery.getRealms()),\n+                        listQuery.getRealms(),\n+                        listQuery.isDetails()),\n                 listQuery.getPage(),\n                 listQuery.getSize(),\n                 getAnyLogic().count(listQuery.getRealms()));"},{"sha":"e44a66f2c6698f90b91aa47ca4694c00f305cca8","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -387,7 +387,7 @@ protected WorkflowResult<Long> doReactivate(final User user) {\n     @Override\n     protected void doRequestPasswordReset(final User user) {\n         Map<String, Object> variables = new HashMap<>(2);\n-        variables.put(USER_TO, userDataBinder.getUserTO(user));\n+        variables.put(USER_TO, userDataBinder.getUserTO(user, true));\n         variables.put(EVENT, \"requestPasswordReset\");\n \n         doExecuteTask(user, \"requestPasswordReset\", variables);\n@@ -399,7 +399,7 @@ protected void doConfirmPasswordReset(final User user, final String token, final\n         Map<String, Object> variables = new HashMap<>(4);\n         variables.put(TOKEN, token);\n         variables.put(PASSWORD, password);\n-        variables.put(USER_TO, userDataBinder.getUserTO(user));\n+        variables.put(USER_TO, userDataBinder.getUserTO(user, true));\n         variables.put(EVENT, \"confirmPasswordReset\");\n \n         doExecuteTask(user, \"confirmPasswordReset\", variables);"},{"sha":"1898c075b31df79a6077a66e306cd11783a98ee2","filename":"fit/console-reference/src/test/java/org/apache/syncope/fit/console/reference/ReportITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/97607b16e4ed807ff055b3ae55f0c722717c6472/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2Freference%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/97607b16e4ed807ff055b3ae55f0c722717c6472/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2Freference%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2Freference%2FReportITCase.java?ref=97607b16e4ed807ff055b3ae55f0c722717c6472","patch":"@@ -33,7 +33,7 @@ public void readReportlet() {\n         seleniumDriver.findElement(By.xpath(\"//img[@alt=\\\"Reports\\\"]\")).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//div[@id='tabs']\")));\n-        seleniumDriver.findElement(By.xpath(\"//table/tbody/tr/td[8]/div/span[13]/a\")).click();\n+        seleniumDriver.findElement(By.xpath(\"//table/tbody/tr/td[9]/div/span[13]/a\")).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//iframe\")));\n         seleniumDriver.switchTo().frame(0);\n@@ -75,7 +75,7 @@ public void executeReport() {\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//div[@id='tabs']\")));\n \n-        seleniumDriver.findElement(By.xpath(\"//table/tbody/tr/td[8]/div/span[6]/a\")).click();\n+        seleniumDriver.findElement(By.xpath(\"//table/tbody/tr/td[9]/div/span[6]/a\")).click();\n \n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"feedback\")));\n         assertTrue(seleniumDriver.findElement("}]}