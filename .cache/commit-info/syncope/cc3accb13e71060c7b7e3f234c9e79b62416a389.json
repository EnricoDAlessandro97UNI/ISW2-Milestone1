{"sha":"cc3accb13e71060c7b7e3f234c9e79b62416a389","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNjM2FjY2IxM2U3MTA2MGM3YjdlM2YyMzRjOWU3OWI2MjQxNmEzODk=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2016-01-22T16:48:10Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2016-01-22T16:48:20Z"},"message":"[SYNCOPE-719] Removed duplicated TO classes","tree":{"sha":"87c7dc84d4a19b1fc0d9fbf43f0339fdb1871834","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/87c7dc84d4a19b1fc0d9fbf43f0339fdb1871834"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cc3accb13e71060c7b7e3f234c9e79b62416a389","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cc3accb13e71060c7b7e3f234c9e79b62416a389","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cc3accb13e71060c7b7e3f234c9e79b62416a389","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cc3accb13e71060c7b7e3f234c9e79b62416a389/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"95709c9bd23e28e0564f93d663de313c4c35caf1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/95709c9bd23e28e0564f93d663de313c4c35caf1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/95709c9bd23e28e0564f93d663de313c4c35caf1"}],"stats":{"total":752,"additions":135,"deletions":617},"files":[{"sha":"280c4eac3512407126a7bea19b10457af1ec28cf","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/adapters/GroupTOAdapter.java","status":"removed","additions":0,"deletions":41,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FGroupTOAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FGroupTOAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FGroupTOAdapter.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -1,41 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.adapters;\n-\n-import java.util.List;\n-import org.apache.syncope.client.enduser.model.GroupResponse;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class GroupTOAdapter {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(GroupTOAdapter.class);\n-\n-    public GroupResponse fromGroupTO(final List<GroupTO> groupTOs) {\n-\n-        GroupResponse groupTOResponse = new GroupResponse();\n-\n-        for (GroupTO groupTO : groupTOs) {\n-            groupTOResponse.getGroups().put(groupTO.getKey(), groupTO.getName());\n-        }\n-\n-        return groupTOResponse;\n-    }\n-}"},{"sha":"52459012714f7a70099f18ad70996f1eb0de2756","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/adapters/ResourceTOAdapter.java","status":"removed","additions":0,"deletions":41,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FResourceTOAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FResourceTOAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FResourceTOAdapter.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -1,41 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.adapters;\n-\n-import java.util.List;\n-import org.apache.syncope.client.enduser.model.ResourceResponse;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class ResourceTOAdapter {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ResourceTOAdapter.class);\n-\n-    public ResourceResponse fromResourceTO(final List<ResourceTO> resourceTOs) {\n-\n-        ResourceResponse resourceTOResponse = new ResourceResponse();\n-\n-        for (ResourceTO resourceTO : resourceTOs) {\n-            resourceTOResponse.getResources().add(resourceTO.getKey());\n-        }\n-\n-        return resourceTOResponse;\n-    }\n-}"},{"sha":"5585a41f757c1912f5c50e0f15900263816b300c","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/adapters/UserTOAdapter.java","status":"removed","additions":0,"deletions":89,"changes":89,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FUserTOAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FUserTOAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FUserTOAdapter.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -1,89 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.adapters;\n-\n-import org.apache.syncope.client.enduser.model.UserTORequest;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserTOAdapter {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserTOAdapter.class);\n-\n-    public UserTO fromUserTORequest(final UserTORequest userTORequest, final String oldSelfPassword) {\n-\n-        final UserTO userTO = new UserTO();\n-        // set key if in update mode\n-        final Long key = userTORequest.getKey();\n-        if (key != null) {\n-            userTO.setKey(key);\n-        }\n-        // set username...\n-        userTO.setUsername(userTORequest.getUsername());\n-        // ...and password\n-        String requestPassword = userTORequest.getPassword();\n-        if (requestPassword == null || requestPassword.isEmpty()) {\n-            userTO.setPassword(oldSelfPassword == null ? null : oldSelfPassword);\n-        } else {\n-            userTO.setPassword(requestPassword);\n-        }\n-\n-        //set security question and answer\n-        userTO.setSecurityQuestion(userTORequest.getSecurityQuestion());\n-        userTO.setSecurityAnswer(userTORequest.getSecurityAnswer());\n-        //set realm\n-        userTO.setRealm(userTORequest.getRealm());\n-        // add attributes\n-        userTO.getPlainAttrs().addAll(userTORequest.getPlainAttrs().values());\n-        userTO.getDerAttrs().addAll(userTORequest.getDerAttrs().values());\n-        userTO.getVirAttrs().addAll(userTORequest.getVirAttrs().values());\n-        // add resources\n-        userTO.getResources().addAll(userTORequest.getResources());\n-        // add memberships\n-        userTO.getMemberships().addAll(userTORequest.getMemberships());\n-        // add auxiliary classes\n-        userTO.getAuxClasses().addAll(userTORequest.getAuxClasses());\n-\n-        return userTO;\n-    }\n-\n-    public UserTORequest toUserTORequest(final UserTO userTO) {\n-\n-        final UserTORequest userTORequest = new UserTORequest().\n-                key(userTO.getKey()).\n-                username(userTO.getUsername()).\n-                securityQuestion(userTO.getSecurityQuestion()).\n-                securityAnswer(userTO.getSecurityAnswer()).\n-                realm(userTO.getRealm());\n-\n-        userTORequest.getPlainAttrs().putAll(userTO.getPlainAttrMap());\n-        userTORequest.getDerAttrs().putAll(userTO.getDerAttrMap());\n-        userTORequest.getVirAttrs().putAll(userTO.getVirAttrMap());\n-\n-        userTORequest.getResources().addAll(userTO.getResources());\n-\n-        userTORequest.getMemberships().addAll(userTO.getMemberships());\n-\n-        userTORequest.getAuxClasses().addAll(userTO.getAuxClasses());\n-\n-        return userTORequest;\n-    }\n-\n-}"},{"sha":"3c05d34a5b86324fb29c2acd7ce1790703dcbe29","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/model/CaptchaRequest.java","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FCaptchaRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FCaptchaRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FCaptchaRequest.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -1,49 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.model;\n-\n-import java.io.Serializable;\n-\n-public class CaptchaRequest implements Serializable {\n-\n-    private static final long serialVersionUID = -8608459099587628110L;\n-\n-    private String value;\n-\n-    public CaptchaRequest() {\n-    }\n-\n-    public String getValue() {\n-        return value;\n-    }\n-\n-    public void setValue(final String value) {\n-        this.value = value;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        StringBuilder toStringBuilder;\n-        toStringBuilder = new StringBuilder(\"CaptchaRequest{\");\n-        toStringBuilder.append(\"value=\").append(this.value);\n-        toStringBuilder.append('}');\n-        return toStringBuilder.toString();\n-    }\n-\n-}"},{"sha":"49c2992d8e2ad8419d1cba5a026b683df842753d","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/model/GroupResponse.java","status":"removed","additions":0,"deletions":45,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FGroupResponse.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FGroupResponse.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FGroupResponse.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -1,45 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.model;\n-\n-import java.io.Serializable;\n-import java.util.HashMap;\n-import java.util.Map;\n-import org.apache.commons.lang3.builder.ToStringBuilder;\n-\n-public class GroupResponse implements Serializable {\n-\n-    private static final long serialVersionUID = -7499232727784886980L;\n-\n-    private Map<Long, String> groups = new HashMap<>();\n-\n-    public Map<Long, String> getGroups() {\n-        return groups;\n-    }\n-\n-    public void setGroups(final Map<Long, String> groups) {\n-        this.groups = groups;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return ToStringBuilder.reflectionToString(this);\n-    }\n-\n-}"},{"sha":"77efecc526289468a80f1ad273915a86e075ad15","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/model/ResourceResponse.java","status":"removed","additions":0,"deletions":45,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FResourceResponse.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FResourceResponse.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FResourceResponse.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -1,45 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.model;\n-\n-import java.io.Serializable;\n-import java.util.HashSet;\n-import java.util.Set;\n-import org.apache.commons.lang3.builder.ToStringBuilder;\n-\n-public class ResourceResponse implements Serializable {\n-\n-    private static final long serialVersionUID = -7499232727784886980L;\n-\n-    private Set<String> resources = new HashSet<>();\n-\n-    public Set<String> getResources() {\n-        return resources;\n-    }\n-\n-    public void setResources(final Set<String> resources) {\n-        this.resources = resources;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return ToStringBuilder.reflectionToString(this);\n-    }\n-\n-}"},{"sha":"375bc21add5863e6191d82437034572e247c2731","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/model/UserTORequest.java","status":"removed","additions":0,"deletions":234,"changes":234,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FUserTORequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95709c9bd23e28e0564f93d663de313c4c35caf1/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FUserTORequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FUserTORequest.java?ref=95709c9bd23e28e0564f93d663de313c4c35caf1","patch":"@@ -1,234 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.model;\n-\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import org.apache.commons.lang3.builder.ToStringBuilder;\n-import org.apache.syncope.common.lib.to.AttrTO;\n-import org.apache.syncope.common.lib.to.MembershipTO;\n-\n-public class UserTORequest implements Serializable {\n-\n-    private static final long serialVersionUID = -6763020920564016374L;\n-\n-    private Long key;\n-\n-    private String username;\n-\n-    private String password;\n-\n-    private Long securityQuestion;\n-\n-    private String securityAnswer;\n-\n-    private String realm;\n-\n-    private Map<String, AttrTO> plainAttrs = new HashMap<>();\n-\n-    private Map<String, AttrTO> derAttrs = new HashMap<>();\n-\n-    private Map<String, AttrTO> virAttrs = new HashMap<>();\n-\n-    private Set<String> resources = new HashSet<>();\n-\n-    private List<MembershipTO> memberships = new ArrayList<>();\n-\n-    private List<String> auxClasses = new ArrayList<>();\n-\n-    private String captcha;\n-\n-    public UserTORequest() {\n-    }\n-\n-    public Long getKey() {\n-        return key;\n-    }\n-\n-    public void setKey(final Long key) {\n-        this.key = key;\n-    }\n-\n-    public String getUsername() {\n-        return username;\n-    }\n-\n-    public void setUsername(final String username) {\n-        this.username = username;\n-    }\n-\n-    public String getPassword() {\n-        return password;\n-    }\n-\n-    public void setPassword(final String password) {\n-        this.password = password;\n-    }\n-\n-    public Long getSecurityQuestion() {\n-        return securityQuestion;\n-    }\n-\n-    public void setSecurityQuestion(final Long securityQuestion) {\n-        this.securityQuestion = securityQuestion;\n-    }\n-\n-    public String getSecurityAnswer() {\n-        return securityAnswer;\n-    }\n-\n-    public void setSecurityAnswer(final String securityAnswer) {\n-        this.securityAnswer = securityAnswer;\n-    }\n-\n-    public String getRealm() {\n-        return realm;\n-    }\n-\n-    public void setRealm(final String realm) {\n-        this.realm = realm;\n-    }\n-\n-    public Map<String, AttrTO> getPlainAttrs() {\n-        return plainAttrs;\n-    }\n-\n-    public void setPlainAttrs(final Map<String, AttrTO> plainAttrs) {\n-        this.plainAttrs = plainAttrs;\n-    }\n-\n-    public Map<String, AttrTO> getDerAttrs() {\n-        return derAttrs;\n-    }\n-\n-    public void setDerAttrs(final Map<String, AttrTO> derAttrs) {\n-        this.derAttrs = derAttrs;\n-    }\n-\n-    public Map<String, AttrTO> getVirAttrs() {\n-        return virAttrs;\n-    }\n-\n-    public void setVirAttrs(final Map<String, AttrTO> virAttrs) {\n-        this.virAttrs = virAttrs;\n-    }\n-\n-    public Set<String> getResources() {\n-        return resources;\n-    }\n-\n-    public void setResources(final Set<String> resources) {\n-        this.resources = resources;\n-    }\n-\n-    public List<MembershipTO> getMemberships() {\n-        return memberships;\n-    }\n-\n-    public void setMemberships(final List<MembershipTO> memberships) {\n-        this.memberships = memberships;\n-    }\n-\n-    public List<String> getAuxClasses() {\n-        return this.auxClasses;\n-    }\n-\n-    public void setAuxClasses(final List<String> auxClasses) {\n-        this.auxClasses = auxClasses;\n-    }\n-\n-    public String getCaptcha() {\n-        return captcha;\n-    }\n-\n-    public void setCaptcha(final String captcha) {\n-        this.captcha = captcha;\n-    }\n-\n-    public UserTORequest key(final Long value) {\n-        this.key = value;\n-        return this;\n-    }\n-\n-    public UserTORequest username(final String value) {\n-        this.username = value;\n-        return this;\n-    }\n-\n-    public UserTORequest password(final String value) {\n-        this.password = value;\n-        return this;\n-    }\n-\n-    public UserTORequest securityQuestion(final Long value) {\n-        this.securityQuestion = value;\n-        return this;\n-    }\n-\n-    public UserTORequest securityAnswer(final String value) {\n-        this.securityAnswer = value;\n-        return this;\n-    }\n-\n-    public UserTORequest realm(final String value) {\n-        this.realm = value;\n-        return this;\n-    }\n-\n-    public UserTORequest plainAttrs(final Map<String, AttrTO> value) {\n-        this.plainAttrs = value;\n-        return this;\n-    }\n-\n-    public UserTORequest derAttrs(final Map<String, AttrTO> value) {\n-        this.derAttrs = value;\n-        return this;\n-    }\n-\n-    public UserTORequest virAttrs(final Map<String, AttrTO> value) {\n-        this.virAttrs = value;\n-        return this;\n-    }\n-\n-    public UserTORequest resources(final Set<String> value) {\n-        this.resources = value;\n-        return this;\n-    }\n-\n-    public UserTORequest auxClasses(final List<String> value) {\n-        this.auxClasses = value;\n-        return this;\n-    }\n-\n-    public UserTORequest captcha(final String value) {\n-        this.captcha = value;\n-        return this;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return ToStringBuilder.reflectionToString(this);\n-    }\n-\n-}"},{"sha":"25281508dd6e827186ce707747f2e86f83bd6814","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeAnyClassTypeResource.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyClassTypeResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyClassTypeResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyClassTypeResource.java?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -23,7 +23,6 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.client.enduser.adapters.GroupTOAdapter;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n import org.apache.syncope.core.misc.serialization.POJOHelper;\n@@ -39,10 +38,7 @@ public class SyncopeAnyClassTypeResource extends AbstractBaseResource {\n \n     private final AnyTypeClassService anyTypeClassService;\n \n-    private final GroupTOAdapter groupTOAdapter;\n-\n-    public SyncopeAnyClassTypeResource() {\n-        groupTOAdapter = new GroupTOAdapter();\n+    public SyncopeAnyClassTypeResource() {        \n         anyTypeClassService = SyncopeEnduserSession.get().getService(AnyTypeClassService.class);\n     }\n "},{"sha":"8ae82ce4893c954cbb85b4323a20c3d454c56cc4","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeGroupResource.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeGroupResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeGroupResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeGroupResource.java?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -23,7 +23,6 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.client.enduser.adapters.GroupTOAdapter;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n@@ -41,10 +40,7 @@ public class SyncopeGroupResource extends AbstractBaseResource {\n \n     private final GroupService groupService;\n \n-    private final GroupTOAdapter groupTOAdapter;\n-\n     public SyncopeGroupResource() {\n-        groupTOAdapter = new GroupTOAdapter();\n         groupService = SyncopeEnduserSession.get().getService(GroupService.class);\n     }\n \n@@ -73,7 +69,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n                 @Override\n                 public void writeData(final Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(POJOHelper.serialize(groupTOAdapter.fromGroupTO(groupTOs)));\n+                    attributes.getResponse().write(POJOHelper.serialize(groupTOs));\n                 }\n             });\n             response.setStatusCode(Response.Status.OK.getStatusCode());"},{"sha":"8d08ac2120223247790537fed3b3968623b61975","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeResourceResource.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeResourceResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeResourceResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeResourceResource.java?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -23,7 +23,6 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.client.enduser.adapters.ResourceTOAdapter;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.core.misc.serialization.POJOHelper;\n@@ -40,10 +39,7 @@ public class SyncopeResourceResource extends AbstractBaseResource {\n \n     private final ResourceService resourceService;\n \n-    private final ResourceTOAdapter resourceTOAdapter;\n-\n     public SyncopeResourceResource() {\n-        resourceTOAdapter = new ResourceTOAdapter();\n         resourceService = SyncopeEnduserSession.get().getService(ResourceService.class);\n     }\n \n@@ -69,7 +65,7 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n \n                 @Override\n                 public void writeData(final IResource.Attributes attributes) throws IOException {\n-                    attributes.getResponse().write(POJOHelper.serialize(resourceTOAdapter.fromResourceTO(resourceTOs)));\n+                    attributes.getResponse().write(POJOHelper.serialize(resourceTOs));\n                 }\n             });\n             response.setStatusCode(Response.Status.OK.getStatusCode());"},{"sha":"88059d60e7cd7d4c57e86d6b92516817d5a15930","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":9,"deletions":13,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -23,8 +23,7 @@\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.client.enduser.adapters.UserTOAdapter;\n-import org.apache.syncope.client.enduser.model.UserTORequest;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.slf4j.Logger;\n@@ -38,10 +37,7 @@ public class UserSelfCreateResource extends AbstractBaseResource {\n \n     private final UserSelfService userSelfService;\n \n-    private final UserTOAdapter userTOAdapter;\n-\n     public UserSelfCreateResource() {\n-        userTOAdapter = new UserTOAdapter();\n         userSelfService = SyncopeEnduserSession.get().getService(UserSelfService.class);\n     }\n \n@@ -62,27 +58,27 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n             String jsonString = request.getReader().readLine();\n \n-            final UserTORequest userTORequest = POJOHelper.deserialize(jsonString, UserTORequest.class);\n+            final UserTO userTO = POJOHelper.deserialize(jsonString, UserTO.class);\n \n-            if (!captchaCheck(userTORequest.getCaptcha(), request.getSession().getAttribute(\n+            if (!captchaCheck(request.getHeader(\"captcha\"), request.getSession().getAttribute(\n                     SyncopeEnduserConstants.CAPTCHA_SESSION_KEY).toString())) {\n                 LOG.error(\"Entered captcha is not matching\");\n                 throw new Exception(\"Entered captcha is not matching\");\n             }\n \n-            if (isSelfRegistrationAllowed() && userTORequest != null) {\n-                LOG.debug(\"Received user self registration request for user: [{}]\", userTORequest.getUsername());\n-                LOG.trace(\"Received user self registration request is: [{}]\", userTORequest);\n+            if (isSelfRegistrationAllowed() && userTO != null) {\n+                LOG.debug(\"Received user self registration request for user: [{}]\", userTO.getUsername());\n+                LOG.trace(\"Received user self registration request is: [{}]\", userTO);\n                 // adapt request and create user\n-                final Response res = userSelfService.create(userTOAdapter.fromUserTORequest(userTORequest, null), true);\n+                final Response res = userSelfService.create(userTO, true);\n \n                 response.setWriteCallback(new WriteCallback() {\n \n                     @Override\n                     public void writeData(final Attributes attributes) throws IOException {\n                         attributes.getResponse().write(res.getStatusInfo().getFamily().equals(\n                                 Response.Status.Family.SUCCESSFUL)\n-                                        ? responseMessage.append(\"User: \").append(userTORequest.getUsername()).append(\n+                                        ? responseMessage.append(\"User: \").append(userTO.getUsername()).append(\n                                                 \" successfully created\")\n                                         : new StringBuilder().append(\"ErrorMessage{{ \").\n                                         append(res.getStatusInfo().getReasonPhrase()).append(\" }}\"));\n@@ -91,7 +87,7 @@ public void writeData(final Attributes attributes) throws IOException {\n                 response.setStatusCode(res.getStatus());\n             } else {\n                 response.setError(Response.Status.FORBIDDEN.getStatusCode(), new StringBuilder().\n-                        append(\"ErrorMessage{{\").append(userTORequest == null\n+                        append(\"ErrorMessage{{\").append(userTO == null\n                                         ? \"Request received is not valid }}\"\n                                         : \"Self registration not allowed }}\").toString());\n             }"},{"sha":"d17b636df2278706f3d22316aa6c5fc131a626fd","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfPasswordReset.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -56,12 +56,15 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n             }\n \n             Map<String, String[]> parameters = request.getParameterMap();\n+            String username;\n             if (parameters.get(\"username\") == null || parameters.get(\"username\").length == 0) {\n                 throw new Exception(\"A valid username should be provided\");\n+            } else {\n+                username = parameters.get(\"username\")[0];\n             }\n \n-            if (parameters.get(\"captcha\") == null || parameters.get(\"captcha\").length == 0 || !captchaCheck(parameters.\n-                    get(\"captcha\")[0], request.getSession().getAttribute(SyncopeEnduserConstants.CAPTCHA_SESSION_KEY).\n+            if (request.getHeader(\"captcha\") == null || !captchaCheck(request.getHeader(\"captcha\"), request.\n+                    getSession().getAttribute(SyncopeEnduserConstants.CAPTCHA_SESSION_KEY).\n                     toString())) {\n                 LOG.error(\"Entered captcha is not matching\");\n                 throw new Exception(\"Entered captcha is not matching\");\n@@ -71,13 +74,13 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 if (parameters.get(\"securityanswer\") == null || parameters.get(\"securityanswer\").length == 0) {\n                     throw new Exception(\"A correct security answer should be provided\");\n                 }\n-                userSelfService.requestPasswordReset(parameters.get(\"username\")[0],\n+                userSelfService.requestPasswordReset(username,\n                         parameters.get(\"securityanswer\")[0]);\n             } else {\n-                userSelfService.requestPasswordReset(parameters.get(\"username\")[0], null);\n+                userSelfService.requestPasswordReset(username, null);\n             }\n             final String responseMessage = new StringBuilder().append(\"Password reset request sent for user \").append(\n-                    parameters.get(\"username\")[0]).toString();\n+                    username).toString();\n \n             response.setWriteCallback(new WriteCallback() {\n "},{"sha":"2cca02032fe63efc301af7f1868dc08a74030312","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -22,7 +22,6 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.client.enduser.adapters.UserTOAdapter;\n import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n@@ -38,10 +37,8 @@ public class UserSelfReadResource extends AbstractBaseResource {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(UserSelfReadResource.class);\n \n-    private final UserTOAdapter userTOAdapter;\n-\n     public UserSelfReadResource() {\n-        userTOAdapter = new UserTOAdapter();\n+    \n     }\n \n     @Override\n@@ -59,8 +56,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 return response;\n             }\n \n-            final String selfTOJson = POJOHelper.serialize(userTOAdapter.toUserTORequest(SyncopeEnduserSession.get().\n-                    getSelfTO()));\n+            final String selfTOJson = POJOHelper.serialize(SyncopeEnduserSession.get().getSelfTO());\n \n             response.setWriteCallback(new WriteCallback() {\n "},{"sha":"d913e6e5a3785d5a726c89cfc4f98a83496980fa","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfUpdateResource.java","status":"modified","additions":12,"deletions":14,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -21,15 +21,13 @@\n import java.io.IOException;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.apache.syncope.client.enduser.adapters.UserTOAdapter;\n-import org.apache.syncope.client.enduser.model.UserTORequest;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n-import org.apache.wicket.util.io.IOUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -41,10 +39,8 @@ public class UserSelfUpdateResource extends AbstractBaseResource {\n \n     private final UserSelfService userSelfService;\n \n-    private final UserTOAdapter userTOAdapter;\n \n     public UserSelfUpdateResource() {\n-        userTOAdapter = new UserTOAdapter();\n         userSelfService = SyncopeEnduserSession.get().getService(UserSelfService.class);\n     }\n \n@@ -61,24 +57,26 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 return response;\n             }\n \n-            final UserTORequest userTOResponse = POJOHelper.deserialize(IOUtils.toString(request.getInputStream()),\n-                    UserTORequest.class);\n+            String jsonString = request.getReader().readLine();\n \n-            LOG.trace(\"userTOResponse: {}\", userTOResponse);\n-\n-            // adapt user, change self password only value passed is not null and has changed\n-            UserTO userTO = userTOAdapter.fromUserTORequest(userTOResponse, SyncopeEnduserSession.get().getPassword());\n+            final UserTO userTO = POJOHelper.deserialize(jsonString, UserTO.class);\n \n+            if (!captchaCheck(request.getHeader(\"captcha\"), request.getSession().getAttribute(\n+                    SyncopeEnduserConstants.CAPTCHA_SESSION_KEY).toString())) {\n+                LOG.error(\"Entered captcha is not matching\");\n+                throw new Exception(\"Entered captcha is not matching\");\n+            }\n+            \n             LOG.debug(\"User {} id updating himself\", userTO.getUsername());\n \n             // update user\n             Response res = userSelfService.update(userTO);\n \n             final String responseMessage = res.getStatusInfo().getFamily().equals(Response.Status.Family.SUCCESSFUL)\n-                            ? new StringBuilder().append(\"User\").append(userTO.getUsername()).append(\n+                    ? new StringBuilder().append(\"User\").append(userTO.getUsername()).append(\n                             \" successfully updated\").toString()\n-                            : new StringBuilder().append(\"ErrorMessage{{ \").\n-                            append(res.getStatusInfo().getReasonPhrase()).append(\" }}\").toString();\n+                    : new StringBuilder().append(\"ErrorMessage{{ \").\n+                    append(res.getStatusInfo().getReasonPhrase()).append(\" }}\").toString();\n \n             response.setWriteCallback(new WriteCallback() {\n "},{"sha":"01b9846e6e057586cbde494f3a0109c7d557cef9","filename":"client/enduser/src/main/resources/META-INF/resources/app/index.html","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -113,7 +113,8 @@\n     <script src=\"js/directives/auxClasses.js\"></script>\n     <!--filters-->\n     <script src=\"js/filters/propsFilter.js\"></script>\n-\n+    <!--util-->\n+    <script src=\"js/util/userUtil.js\"></script>\n \n     <link rel=\"shortcut icon\" href=\"img/favicon.png\" type=\"image/png\"/>\n     <link href=\"css/login.css\" rel=\"stylesheet\" type=\"text/css\" />"},{"sha":"71f80548bf120abcff54c73687521eab969616c6","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -21,9 +21,9 @@\n \n angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$location', '$compile', 'AuthService',\n   'UserSelfService', 'SchemaService', 'RealmService', 'ResourceService', 'SecurityQuestionService', 'CaptchaService',\n-  'GroupService', 'AnyService',\n+  'GroupService', 'AnyService', 'UserUtil',\n   function ($scope, $rootScope, $location, $compile, AuthService, UserSelfService, SchemaService, RealmService,\n-          ResourceService, SecurityQuestionService, CaptchaService, GroupService, AnyService) {\n+          ResourceService, SecurityQuestionService, CaptchaService, GroupService, AnyService, UserUtil) {\n \n     $scope.user = {};\n     $scope.confirmPassword = {\n@@ -179,16 +179,18 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n \n       var initResources = function () {\n         ResourceService.getResources().then(function (response) {\n-          $scope.dynamicForm.resources = response.resources;\n+          for (var i in response) {\n+            $scope.dynamicForm.resources.push(response[i].key);\n+          }\n         });\n       };\n \n       var initGroups = function () {\n         var realm = $scope.user.realm || \"/\";\n         GroupService.getGroups(realm).then(function (response) {\n           $scope.dynamicForm.groups = new Array();\n-          for (var key in response.groups) {\n-            $scope.dynamicForm.groups.push({\"rightKey\": key, \"groupName\": response.groups[key]});\n+          for (var i in response) {\n+            $scope.dynamicForm.groups.push({\"rightKey\": response[i].key, \"groupName\": response[i].name});\n           }\n         }, function (e) {\n           $scope.showError(\"An error occur during retrieving groups \" + e, $scope.notification)\n@@ -217,7 +219,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n \n       var readUser = function () {\n         UserSelfService.read().then(function (response) {\n-          $scope.user = response;\n+          $scope.user = UserUtil.getUnwrappedUser(response);\n           $scope.user.password = undefined;\n           $scope.initialSecurityQuestion = $scope.user.securityQuestion;\n           // initialize already assigned resources\n@@ -324,12 +326,12 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n \n     $scope.saveUser = function (user) {\n       console.log(\"Save user: \", user);\n-      // setting captcha value while saving user\n-      user.captcha = $scope.captchaInput.value;\n+\n+      var wrappedUser = UserUtil.getWrappedUser(user);\n \n       if ($scope.createMode) {\n \n-        UserSelfService.create(user).then(function (response) {\n+        UserSelfService.create(wrappedUser, $scope.captchaInput.value).then(function (response) {\n           console.log(\"Created user: \", response);\n           $scope.showSuccess(\"User \" + $scope.user.username + \" successfully created\", $scope.notification);\n           $location.path('/self');\n@@ -346,7 +348,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n \n       } else {\n \n-        UserSelfService.update(user).then(function (response) {\n+        UserSelfService.update(wrappedUser, $scope.captchaInput.value).then(function (response) {\n           console.log(\"Updated user: \", response);\n           AuthService.logout().then(function (response) {\n             console.log(\"LOGOUT SUCCESS: \", response);\n@@ -392,9 +394,7 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n     $scope.resetPassword = function (user) {\n       if (user && user.username) {\n         $scope.retrieveSecurityQuestion(user);\n-        // setting captcha value while saving user\n-        user.captcha = $scope.captchaInput.value;\n-        UserSelfService.passwordReset(user).then(function (data) {\n+        UserSelfService.passwordReset(user,$scope.captchaInput.value).then(function (data) {\n           $scope.showSuccess(data, $scope.notification);\n           $location.path('/self');\n         }, function (response) {"},{"sha":"6a5206f71495f8be047a90a25886695b7c8fd1f1","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/userSelfService.js","status":"modified","additions":15,"deletions":6,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FuserSelfService.js?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -34,9 +34,12 @@ angular.module('login')\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };\n-            userSelfService.create = function (user) {\n+            userSelfService.create = function (user, captcha) {\n               return $http\n-                      .post('/syncope-enduser/api/self/create', user)\n+                      .post('/syncope-enduser/api/self/create', user,\n+                              {\n+                                headers: {'captcha': captcha}\n+                              })\n                       .then(function (response) {\n                         console.log(\"response save: \", response);\n                         var username = response;\n@@ -45,21 +48,27 @@ angular.module('login')\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };\n-            userSelfService.update = function (user) {\n+            userSelfService.update = function (user, captcha) {\n               return $http\n-                      .post('/syncope-enduser/api/self/update', user)\n+                      .post('/syncope-enduser/api/self/update', user,\n+                              {\n+                                headers: {'captcha': captcha}\n+                              })\n                       .then(function (response) {\n                         var username = response;\n                       }, function (response) {\n                         console.log(\"Something went wrong during user self update, exit with status: \", response);\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };\n-            userSelfService.passwordReset = function (user) {\n+            userSelfService.passwordReset = function (user, captcha) {\n               return $http\n                       .post('/syncope-enduser/api/self/requestPasswordReset', user,\n                               {\n-                                headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'},\n+                                headers: {\n+                                  'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\n+                                  'captcha': captcha\n+                                },\n                                 transformRequest: function (obj) {\n                                   var str = [];\n                                   for (var p in obj)"},{"sha":"57b0ad351287595f49d0575827d4e40363675b6a","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/util/userUtil.js","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Futil%2FuserUtil.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc3accb13e71060c7b7e3f234c9e79b62416a389/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Futil%2FuserUtil.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Futil%2FuserUtil.js?ref=cc3accb13e71060c7b7e3f234c9e79b62416a389","patch":"@@ -0,0 +1,71 @@\n+/* \n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+'use strict';\n+\n+angular.module('SyncopeEnduserApp')\n+        .factory('UserUtil', ['$resource', '$q',\n+          function ($resource, $q) {\n+\n+            var userUtil = {};\n+\n+            //Prepare the user object passed as parameter to be compliant to the REST API.\n+            //return a clone of the initial user with those modifications.\n+            userUtil.getWrappedUser = function (user) {\n+\n+              var wrappedUser = $.extend(true, {}, user);\n+\n+              wrappedUser.plainAttrs = $.map(user.plainAttrs, function (el) {\n+                return el\n+              });\n+              wrappedUser.derAttrs = $.map(user.derAttrs, function (el) {\n+                return el\n+              });\n+              wrappedUser.virAttrs = $.map(user.virAttrs, function (el) {\n+                return el\n+              });\n+              wrappedUser[\"@class\"] = \"org.apache.syncope.common.lib.to.UserTO\";\n+\n+              return wrappedUser;\n+            };\n+\n+            //Converts all the user attributes from an array of object to an associatice\n+            userUtil.getUnwrappedUser = function (user) {\n+\n+              var unwrappedUser = $.extend(true, {}, user);\n+\n+              unwrappedUser.plainAttrs = {}\n+              for (var i in user.plainAttrs) {\n+                unwrappedUser.plainAttrs[user.plainAttrs[i].schema] = user.plainAttrs[i];\n+              }\n+              unwrappedUser.derAttrs = {}\n+              for (var i in user.derAttrs) {\n+                unwrappedUser.derAttrs[user.derAttrs[i].schema] = user.derAttrs[i];\n+              }\n+              unwrappedUser.virAttrs = {}\n+              for (var i in user.virAttrs) {\n+                unwrappedUser.virAttrs[user.virAttrs[i].schema] = user.virAttrs[i];\n+              }\n+\n+              return unwrappedUser;\n+            };\n+\n+            return userUtil;\n+\n+          }]);"}]}