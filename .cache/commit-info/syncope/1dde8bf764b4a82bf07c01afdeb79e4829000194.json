{"sha":"1dde8bf764b4a82bf07c01afdeb79e4829000194","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFkZGU4YmY3NjRiNGE4MmJmMDdjMDFhZmRlYjc5ZTQ4MjkwMDAxOTQ=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-10-31T16:06:08Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-10-31T16:06:08Z"},"message":"Merge from 1.1.X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1537541 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c1571eccf5b72972cd48666620e65130c740f4d4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c1571eccf5b72972cd48666620e65130c740f4d4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1dde8bf764b4a82bf07c01afdeb79e4829000194","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1dde8bf764b4a82bf07c01afdeb79e4829000194","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1dde8bf764b4a82bf07c01afdeb79e4829000194","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1dde8bf764b4a82bf07c01afdeb79e4829000194/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"f4d05ad6a64c446abd26710c65b76db586148050","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f4d05ad6a64c446abd26710c65b76db586148050","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f4d05ad6a64c446abd26710c65b76db586148050"},{"sha":"28c4ac21ab3196a9b8435e477a06f940662f4533","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/28c4ac21ab3196a9b8435e477a06f940662f4533","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/28c4ac21ab3196a9b8435e477a06f940662f4533"}],"stats":{"total":603,"additions":596,"deletions":7},"files":[{"sha":"351571a621eaa8bbea87d2c8329f4dfc295a0e63","filename":"common/src/main/java/org/apache/syncope/common/types/ReportExecExportFormat.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FReportExecExportFormat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FReportExecExportFormat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FReportExecExportFormat.java?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -26,6 +26,7 @@ public enum ReportExecExportFormat {\n     XML,\r\n     HTML,\r\n     PDF,\r\n-    RTF\r\n+    RTF,\r\n+    CSV\r\n \r\n }\r"},{"sha":"8ca82d64744c43286e3362278bfe6732d742015a","filename":"core/src/main/java/org/apache/syncope/core/report/RoleReportlet.java","status":"modified","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -275,8 +275,51 @@ private void doExtract(final ContentHandler handler, final List<SyncopeRole> rol\n         }\n     }\n \n+    private void doExtractConf(final ContentHandler handler) throws SAXException {\n+\n+        if (conf == null) {\n+            LOG.debug(\"Report configuration is not present\");\n+        }\n+\n+        AttributesImpl atts = new AttributesImpl();\n+        handler.startElement(\"\", \"\", \"configurations\", null);\n+        handler.startElement(\"\", \"\", \"roleAttributes\", atts);\n+\n+        for (Feature feature : conf.getFeatures()) {\n+            atts.clear();\n+            handler.startElement(\"\", \"\", \"feature\", atts);\n+            handler.characters(feature.name().toCharArray(), 0, feature.name().length());\n+            handler.endElement(\"\", \"\", \"feature\");\n+        }\n+\n+        for (String attr : conf.getAttrs()) {\n+            atts.clear();\n+            handler.startElement(\"\", \"\", \"attribute\", atts);\n+            handler.characters(attr.toCharArray(), 0, attr.length());\n+            handler.endElement(\"\", \"\", \"attribute\");\n+        }\n+\n+        for (String derAttr : conf.getDerAttrs()) {\n+            atts.clear();\n+            handler.startElement(\"\", \"\", \"derAttribute\", atts);\n+            handler.characters(derAttr.toCharArray(), 0, derAttr.length());\n+            handler.endElement(\"\", \"\", \"derAttribute\");\n+        }\n+\n+        for (String virAttr : conf.getVirAttrs()) {\n+            atts.clear();\n+            handler.startElement(\"\", \"\", \"virAttribute\", atts);\n+            handler.characters(virAttr.toCharArray(), 0, virAttr.length());\n+            handler.endElement(\"\", \"\", \"virAttribute\");\n+        }\n+\n+        handler.endElement(\"\", \"\", \"roleAttributes\");\n+        handler.endElement(\"\", \"\", \"configurations\");\n+    }\n+\n     @Override\n     protected void doExtract(final ContentHandler handler) throws SAXException, ReportException {\n+        doExtractConf(handler);\n         for (int i = 1; i <= (count() / PAGE_SIZE) + 1; i++) {\n             doExtract(handler, getPagedRoles(i));\n         }"},{"sha":"b5afdfc25e88eef38d5020591182dc3a16014328","filename":"core/src/main/java/org/apache/syncope/core/report/StaticReportlet.java","status":"modified","additions":46,"deletions":5,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FStaticReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FStaticReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FStaticReportlet.java?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -23,13 +23,54 @@\n import org.springframework.util.StringUtils;\n import org.xml.sax.ContentHandler;\n import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.AttributesImpl;\n \n @ReportletConfClass(StaticReportletConf.class)\n public class StaticReportlet extends AbstractReportlet<StaticReportletConf> {\n \n+    private void doExtractConf(final ContentHandler handler) throws SAXException {\n+\n+        AttributesImpl atts = new AttributesImpl();\n+        handler.startElement(\"\", \"\", \"configurations\", null);\n+        handler.startElement(\"\", \"\", \"staticAttributes\", atts);\n+\n+        handler.startElement(\"\", \"\", \"string\", atts);\n+        handler.characters(\"string\".toCharArray(), 0, \"string\".length());\n+        handler.endElement(\"\", \"\", \"string\");\n+\n+        handler.startElement(\"\", \"\", \"long\", atts);\n+        handler.characters(\"long\".toCharArray(), 0, \"long\".length());\n+        handler.endElement(\"\", \"\", \"long\");\n+\n+        handler.startElement(\"\", \"\", \"double\", atts);\n+        handler.characters(\"double\".toCharArray(), 0, \"double\".length());\n+        handler.endElement(\"\", \"\", \"double\");\n+\n+        handler.startElement(\"\", \"\", \"date\", atts);\n+        handler.characters(\"date\".toCharArray(), 0, \"date\".length());\n+        handler.endElement(\"\", \"\", \"date\");\n+\n+        handler.startElement(\"\", \"\", \"double\", atts);\n+        handler.characters(\"double\".toCharArray(), 0, \"double\".length());\n+        handler.endElement(\"\", \"\", \"double\");\n+\n+        handler.startElement(\"\", \"\", \"enum\", atts);\n+        handler.characters(\"enum\".toCharArray(), 0, \"enum\".length());\n+        handler.endElement(\"\", \"\", \"enum\");\n+\n+        handler.startElement(\"\", \"\", \"list\", atts);\n+        handler.characters(\"list\".toCharArray(), 0, \"list\".length());\n+        handler.endElement(\"\", \"\", \"list\");\n+\n+        handler.endElement(\"\", \"\", \"staticAttributes\");\n+        handler.endElement(\"\", \"\", \"configurations\");\n+    }\n+\n     @Override\n     public void doExtract(final ContentHandler handler) throws SAXException, ReportException {\n \n+        doExtractConf(handler);\n+\n         if (StringUtils.hasText(conf.getStringField())) {\n             handler.startElement(\"\", \"\", \"string\", null);\n             handler.characters(conf.getStringField().toCharArray(), 0, conf.getStringField().length());\n@@ -39,28 +80,28 @@ public void doExtract(final ContentHandler handler) throws SAXException, ReportE\n         if (conf.getLongField() != null) {\n             handler.startElement(\"\", \"\", \"long\", null);\n             String printed = String.valueOf(conf.getLongField());\n-            handler.characters(printed.toCharArray(), 0, printed.length() - 1);\n+            handler.characters(printed.toCharArray(), 0, printed.length());\n             handler.endElement(\"\", \"\", \"long\");\n         }\n \n         if (conf.getDoubleField() != null) {\n             handler.startElement(\"\", \"\", \"double\", null);\n             String printed = String.valueOf(conf.getDoubleField());\n-            handler.characters(printed.toCharArray(), 0, printed.length() - 1);\n+            handler.characters(printed.toCharArray(), 0, printed.length());\n             handler.endElement(\"\", \"\", \"double\");\n         }\n \n         if (conf.getDateField() != null) {\n             handler.startElement(\"\", \"\", \"date\", null);\n             String printed = DataFormat.format(conf.getDateField());\n-            handler.characters(printed.toCharArray(), 0, printed.length() - 1);\n+            handler.characters(printed.toCharArray(), 0, printed.length());\n             handler.endElement(\"\", \"\", \"date\");\n         }\n \n         if (conf.getTraceLevel() != null) {\n             handler.startElement(\"\", \"\", \"enum\", null);\n             String printed = conf.getTraceLevel().name();\n-            handler.characters(printed.toCharArray(), 0, printed.length() - 1);\n+            handler.characters(printed.toCharArray(), 0, printed.length());\n             handler.endElement(\"\", \"\", \"enum\");\n         }\n \n@@ -69,7 +110,7 @@ public void doExtract(final ContentHandler handler) throws SAXException, ReportE\n             for (String item : conf.getListField()) {\n                 if (StringUtils.hasText(item)) {\n                     handler.startElement(\"\", \"\", \"string\", null);\n-                    handler.characters(item.toCharArray(), 0, item.length() - 1);\n+                    handler.characters(item.toCharArray(), 0, item.length());\n                     handler.endElement(\"\", \"\", \"string\");\n                 }\n             }"},{"sha":"70d4894d9899af8f93c6801dc46e046a20d1e60f","filename":"core/src/main/java/org/apache/syncope/core/report/UserReportlet.java","status":"modified","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -310,8 +310,47 @@ private void doExtract(final ContentHandler handler, final List<SyncopeUser> use\n         }\n     }\n \n+    private void doExtractConf(final ContentHandler handler) throws SAXException {\n+\n+        AttributesImpl atts = new AttributesImpl();\n+        handler.startElement(\"\", \"\", \"configurations\", null);\n+        handler.startElement(\"\", \"\", \"userAttributes\", atts);\n+\n+        for (Feature feature : conf.getFeatures()) {\n+            atts.clear();\n+            handler.startElement(\"\", \"\", \"feature\", atts);\n+            handler.characters(feature.name().toCharArray(), 0, feature.name().length());\n+            handler.endElement(\"\", \"\", \"feature\");\n+        }\n+\n+        for (String attr : conf.getAttrs()) {\n+            atts.clear();\n+            handler.startElement(\"\", \"\", \"attribute\", atts);\n+            handler.characters(attr.toCharArray(), 0, attr.length());\n+            handler.endElement(\"\", \"\", \"attribute\");\n+        }\n+\n+        for (String derAttr : conf.getDerAttrs()) {\n+            atts.clear();\n+            handler.startElement(\"\", \"\", \"derAttribute\", atts);\n+            handler.characters(derAttr.toCharArray(), 0, derAttr.length());\n+            handler.endElement(\"\", \"\", \"derAttribute\");\n+        }\n+\n+        for (String virAttr : conf.getVirAttrs()) {\n+            atts.clear();\n+            handler.startElement(\"\", \"\", \"virAttribute\", atts);\n+            handler.characters(virAttr.toCharArray(), 0, virAttr.length());\n+            handler.endElement(\"\", \"\", \"virAttribute\");\n+        }\n+\n+        handler.endElement(\"\", \"\", \"userAttributes\");\n+        handler.endElement(\"\", \"\", \"configurations\");\n+    }\n+\n     @Override\n     protected void doExtract(final ContentHandler handler) throws SAXException, ReportException {\n+        doExtractConf(handler);\n         for (int i = 1; i <= (count() / PAGE_SIZE) + 1; i++) {\n             doExtract(handler, getPagedUsers(i));\n         }"},{"sha":"992df5fe8b699bd2272fe48fb7e17e1deca944cd","filename":"core/src/main/java/org/apache/syncope/core/report/cocoon/TextSerializer.java","status":"added","additions":101,"deletions":0,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2Fcocoon%2FTextSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2Fcocoon%2FTextSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2Fcocoon%2FTextSerializer.java?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.report.cocoon;\n+\n+import org.apache.cocoon.sax.component.XMLSerializer;\n+import org.xml.sax.Attributes;\n+import org.xml.sax.Locator;\n+import org.xml.sax.SAXException;\n+\n+/**\n+ * Converts XML into plain text. It omits all XML tags and writes only character events to the output. Input document\n+ * must have at least one element - root element - which should wrap all the text inside it.\n+ *\n+ */\n+public class TextSerializer extends XMLSerializer {\n+\n+    private static final String UTF_8 = \"UTF-8\";\n+\n+    private static final String TXT = \"text\";\n+\n+    public TextSerializer() {\n+        super();\n+        super.setOmitXmlDeclaration(true);\n+    }\n+\n+    @Override\n+    public void setDocumentLocator(final Locator locator) {\n+        // nothing\n+    }\n+\n+    @Override\n+    public void processingInstruction(final String target, final String data)\n+            throws SAXException {\n+        // nothing\n+    }\n+\n+    @Override\n+    public void startDTD(final String name, final String publicId, final String systemId)\n+            throws SAXException {\n+        // nothing\n+    }\n+\n+    @Override\n+    public void endDTD() throws SAXException {\n+        // nothing\n+    }\n+\n+    @Override\n+    public void startElement(final String uri, final String loc, final String raw, final Attributes atts)\n+            throws SAXException {\n+        // nothing\n+    }\n+\n+    @Override\n+    public void endElement(final String uri, final String name, final String raw)\n+            throws SAXException {\n+        // nothing\n+    }\n+\n+    @Override\n+    public void endDocument() throws SAXException {\n+        super.endDocument();\n+    }\n+\n+    /**\n+     * @throws SAXException if text is encountered before root element.\n+     */\n+    @Override\n+    public void characters(final char buffer[], final int start, final int len) throws SAXException {\n+        super.characters(buffer, start, len);\n+    }\n+\n+    @Override\n+    public void recycle() {\n+        super.recycle();\n+    }\n+\n+    public static TextSerializer createPlainSerializer() {\n+        final TextSerializer serializer = new TextSerializer();\n+        serializer.setContentType(\"text/plain; charset=\" + UTF_8);\n+        serializer.setEncoding(UTF_8);\n+        serializer.setMethod(TXT);\n+        return serializer;\n+    }\n+}\n\\ No newline at end of file"},{"sha":"840ca68a33db8428e35d4d5df7f0716248c400b1","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ReportController.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -44,6 +44,7 @@\n import org.apache.syncope.common.types.AuditElements.ReportSubCategory;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.ReportExecExportFormat;\n+import static org.apache.syncope.common.types.ReportExecExportFormat.RTF;\n import org.apache.syncope.common.types.ReportExecStatus;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeException;\n@@ -56,6 +57,7 @@\n import org.apache.syncope.core.persistence.dao.ReportDAO;\n import org.apache.syncope.core.persistence.dao.ReportExecDAO;\n import org.apache.syncope.core.report.Reportlet;\n+import org.apache.syncope.core.report.cocoon.TextSerializer;\n import org.apache.syncope.core.rest.data.ReportDataBinder;\n import org.apache.xmlgraphics.util.MimeConstants;\n import org.quartz.JobKey;\n@@ -232,7 +234,7 @@ public void exportExecutionResult(final OutputStream os, final ReportExec report\n \n             Pipeline<SAXPipelineComponent> pipeline = new NonCachingPipeline<SAXPipelineComponent>();\n             pipeline.addComponent(new XMLGenerator(zis));\n-\n+            \n             Map<String, Object> parameters = new HashMap<String, Object>();\n             parameters.put(\"status\", reportExec.getStatus());\n             parameters.put(\"message\", reportExec.getMessage());\n@@ -261,6 +263,13 @@ public void exportExecutionResult(final OutputStream os, final ReportExec report\n                     pipeline.addComponent(new FopSerializer(MimeConstants.MIME_RTF));\n                     break;\n \n+                case CSV:\n+                    XSLTTransformer xsl2csv = new XSLTTransformer(getClass().getResource(\"/report/report2csv.xsl\"));\n+                    xsl2csv.setParameters(parameters);\n+                    pipeline.addComponent(xsl2csv);\n+                    pipeline.addComponent(new TextSerializer());\n+                    break;\n+\n                 case XML:\n                 default:\n                     pipeline.addComponent(XMLSerializer.createXMLSerializer());"},{"sha":"b1e2c716d5a3949f6dce1bcd8537a5d22958785e","filename":"core/src/main/resources/report/report2csv.xsl","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2csv.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2csv.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2csv.xsl?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                version=\"1.0\">\n+\n+  <xsl:import href=\"userReportlet2csv.xsl\"/>\n+  <xsl:import href=\"roleReportlet2csv.xsl\"/>\n+  <xsl:import href=\"staticReportlet2csv.xsl\"/>\n+ \n+  <xsl:param name=\"status\"/>\n+  <xsl:param name=\"message\"/>\n+  <xsl:param name=\"startDate\"/>\n+  <xsl:param name=\"endDate\"/>\n+    \n+  <xsl:template match=\"/\">\n+    <xsl:apply-templates/>\n+  </xsl:template>\n+\n+</xsl:stylesheet>\n\\ No newline at end of file"},{"sha":"ad092d58060bc587b3424e00346357564b729aa3","filename":"core/src/main/resources/report/roleReportlet2csv.xsl","status":"added","additions":118,"deletions":0,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fresources%2Freport%2FroleReportlet2csv.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fresources%2Freport%2FroleReportlet2csv.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FroleReportlet2csv.xsl?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -0,0 +1,118 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+  \n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                version=\"1.0\">\n+\n+  <xsl:variable name=\"delimiter\" select=\"';'\"/>\n+  \n+  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.RoleReportlet']\">\n+    \n+    <xsl:call-template name=\"header\">\n+      <xsl:with-param name=\"node\" select=\"configurations/roleAttributes\"/>\n+    </xsl:call-template>\n+    <xsl:for-each select=\"role\">\n+      <xsl:call-template name=\"roleAttributes\">\n+        <xsl:with-param name=\"header\" select=\"../configurations/roleAttributes\"/>\n+        <xsl:with-param name=\"attrs\" select=\".\"/>\n+      </xsl:call-template>\n+      <xsl:text>&#10;</xsl:text>\n+    </xsl:for-each>\n+  </xsl:template>\n+  \n+  <xsl:template name=\"header\">\n+    <xsl:param name=\"node\"/>  \n+    <xsl:for-each select=\"$node/*\">\n+      <xsl:value-of select=\"text()\"/>   \n+      <xsl:if test=\"position() != last()\">\n+        <xsl:value-of select=\"$delimiter\"/>\n+      </xsl:if>\n+    </xsl:for-each>\n+    <xsl:text>&#10;</xsl:text>\n+  </xsl:template>\n+    \n+  <xsl:template name=\"roleAttributes\">\n+    <xsl:param name=\"header\"/>\n+    <xsl:param name=\"attrs\"/>\n+    \n+    <xsl:for-each select=\"$header/*\">\n+      <xsl:variable name=\"nameAttr\" select=\"text()\"/>\n+      \n+      <xsl:choose> \n+        <xsl:when test=\"string-length($attrs/@*[name()=$nameAttr]) &gt; 0\">\n+          <xsl:variable name=\"roleAttr\" select=\"$attrs/@*[name()=$nameAttr]\"/>\n+          <xsl:text>\"</xsl:text>\n+          <xsl:value-of select=\"$roleAttr/.\"/>\n+          <xsl:text>\"</xsl:text>\n+        </xsl:when>\n+        <xsl:when test=\"name($attrs/*[name(.)=$nameAttr]/*[name(.)='entitlement']) \n+                        and count($attrs/*[name(.)=$nameAttr]/node()) &gt; 0\">\n+          <xsl:text>\"</xsl:text>       \n+          <xsl:for-each select=\"$attrs/*/entitlement\">\n+            <xsl:variable name=\"value\" select=\"@id\"/>\n+            <xsl:value-of select=\"$value\"/>\n+            <xsl:if test=\"position() != last()\">\n+              <xsl:value-of select=\"$delimiter\"/>\n+            </xsl:if>\n+          </xsl:for-each>\n+          <xsl:text>\"</xsl:text>\n+        </xsl:when>\n+        <xsl:when test=\"name($attrs/*[name(.)=$nameAttr]/*[name(.)='resource']) \n+                        and count($attrs/*[name(.)=$nameAttr]/node()) &gt; 0\">\n+          <xsl:text>\"</xsl:text>       \n+          <xsl:for-each select=\"$attrs/*/resource\">\n+            <xsl:variable name=\"value\" select=\"@name\"/>\n+            <xsl:value-of select=\"$value\"/>\n+            <xsl:if test=\"position() != last()\">\n+              <xsl:value-of select=\"$delimiter\"/>\n+            </xsl:if>\n+          </xsl:for-each>\n+          <xsl:text>\"</xsl:text>\n+        </xsl:when>\n+        <xsl:when test=\"name($attrs/*[name(.)=$nameAttr]/*[name(.)='user']) \n+                        and count($attrs/*[name(.)=$nameAttr]/node()) &gt; 0\">\n+          <xsl:text>\"</xsl:text>       \n+          <xsl:for-each select=\"$attrs/*/user\">\n+            <xsl:variable name=\"value\" select=\"@userUsername\"/>\n+            <xsl:value-of select=\"$value\"/>\n+            <xsl:if test=\"position() != last()\">\n+              <xsl:value-of select=\"$delimiter\"/>\n+            </xsl:if>\n+          </xsl:for-each>\n+          <xsl:text>\"</xsl:text>\n+        </xsl:when>\n+        <xsl:otherwise>\n+          <xsl:text>\"</xsl:text>\n+          <xsl:if test=\"string-length($attrs/*/*[@name=$nameAttr]/value/text()) &gt; 0\"> \n+            <xsl:variable name=\"value\" select=\"$attrs/*/*[@name=$nameAttr]/value/text()\"/>\n+            <xsl:value-of select=\"$value\"/>\n+          </xsl:if>\n+          <xsl:text>\"</xsl:text>\n+        </xsl:otherwise>\n+      </xsl:choose>\n+      <xsl:if test=\"position() != last()\">\n+        <xsl:value-of select=\"$delimiter\"/>\n+      </xsl:if>\n+    \n+    </xsl:for-each>\n+  </xsl:template>\n+  \n+</xsl:stylesheet>\n+"},{"sha":"90879d980e6223c8f079890a5a1fbfe228146951","filename":"core/src/main/resources/report/staticReportlet2csv.xsl","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2csv.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2csv.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2csv.xsl?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -0,0 +1,81 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n+\n+  <xsl:variable name=\"delimiter\" select=\"';'\"/>\n+   \n+  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.StaticReportlet']\">\n+    <xsl:call-template name=\"header\">\n+      <xsl:with-param name=\"node\" select=\"configurations/staticAttributes\"/>\n+    </xsl:call-template>\n+    \n+    <xsl:call-template name=\"staticAttributes\">\n+      <xsl:with-param name=\"header\" select=\"configurations/staticAttributes\"/>\n+    </xsl:call-template>\n+  </xsl:template>\n+  \n+  <xsl:template name=\"header\">\n+    <xsl:param name=\"node\"/>  \n+    <xsl:for-each select=\"$node/*\">\n+      <xsl:text>\"</xsl:text>\n+      <xsl:value-of select=\"text()\"/>\n+      <xsl:text>\"</xsl:text> \n+      <xsl:if test=\"position() != last()\">\n+        <xsl:value-of select=\"$delimiter\"/>\n+      </xsl:if>\n+    </xsl:for-each>\n+    <xsl:text>&#10;</xsl:text>\n+  </xsl:template>\n+    \n+  <xsl:template name=\"staticAttributes\">\n+    <xsl:param name=\"header\"/>\n+    \n+    <xsl:variable name=\"attrs\" select=\".\"/>\n+    <xsl:for-each select=\"$header/*\">\n+      <xsl:variable name=\"nameAttr\" select=\"text()\"/> \n+      <xsl:if test=\"string-length($attrs/*[name(.)=$nameAttr]/text()) &gt; 0 \n+                      and count($attrs/*[name(.)=$nameAttr]/*/node()) = 0\">\n+        <xsl:variable name=\"value\" select=\"$attrs/*[name(.)=$nameAttr]/text()\"/>\n+        <xsl:text>\"</xsl:text>\n+        <xsl:value-of select=\"$value\"/>\n+        <xsl:text>\"</xsl:text>\n+      </xsl:if>\n+      \n+      <xsl:if test=\"string-length($attrs/*[name(.)=$nameAttr]/*/text()) &gt; 0 \n+                      and count($attrs/*[name(.)=$nameAttr]/*/node()) &gt; 0\">\n+        <xsl:text>\"</xsl:text>\n+        <xsl:for-each select=\"$attrs/*[name(.)=$nameAttr]/*\">\n+          <xsl:variable name=\"value\" select=\"text()\"/>\n+          <xsl:text></xsl:text>\n+          <xsl:value-of select=\"$value\"/>\n+          <xsl:if test=\"position() != last()\">\n+            <xsl:value-of select=\"$delimiter\"/>\n+          </xsl:if>\n+        </xsl:for-each>\n+        <xsl:text>\"</xsl:text>\n+      </xsl:if>\n+      \n+      <xsl:if test=\"position() != last()\">\n+        <xsl:value-of select=\"$delimiter\"/>\n+      </xsl:if>\n+    \n+    </xsl:for-each>\n+  </xsl:template>\n+</xsl:stylesheet>"},{"sha":"87c670f9d113a3f00986ef121b15bb961c5f0876","filename":"core/src/main/resources/report/userReportlet2csv.xsl","status":"added","additions":119,"deletions":0,"changes":119,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2csv.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2csv.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FuserReportlet2csv.xsl?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -0,0 +1,119 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                version=\"1.0\">\n+\n+  <xsl:variable name=\"delimiter\" select=\"';'\"/>\n+  \n+  <xsl:template match=\"reportlet[@class='org.apache.syncope.core.report.UserReportlet']\">\n+    \n+    <xsl:call-template name=\"header\">\n+      <xsl:with-param name=\"node\" select=\"configurations/userAttributes\"/>\n+    </xsl:call-template>\n+    <xsl:for-each select=\"user\">\n+      <xsl:call-template name=\"userAttributes\">\n+        <xsl:with-param name=\"header\" select=\"../configurations/userAttributes\"/>\n+      </xsl:call-template>\n+      <xsl:text>&#10;</xsl:text>\n+    </xsl:for-each>\n+  </xsl:template>\n+  \n+  <xsl:template name=\"header\">\n+    <xsl:param name=\"node\"/>  \n+    <xsl:for-each select=\"$node/*\">\n+      <xsl:text>\"</xsl:text>\n+      <xsl:value-of select=\"text()\"/>   \n+      <xsl:text>\"</xsl:text>\n+      <xsl:if test=\"position() != last()\">\n+        <xsl:value-of select=\"$delimiter\"/>\n+      </xsl:if>\n+    </xsl:for-each>\n+    <xsl:text>&#10;</xsl:text>\n+  </xsl:template>\n+    \n+  <xsl:template name=\"userAttributes\">\n+    <xsl:param name=\"header\"/>\n+  \n+    <xsl:variable name=\"attrs\" select=\".\"/>\n+    <xsl:for-each select=\"$header/*\">\n+      <xsl:variable name=\"nameAttr\" select=\"text()\"/>\n+      <xsl:choose>      \n+        <xsl:when test=\"count($attrs/@*[name()=$nameAttr]) &gt; 0\">\n+          <xsl:variable name=\"userAttr\" select=\"$attrs/@*[name()=$nameAttr]\"/>\n+          <xsl:text>\"</xsl:text>\n+          <xsl:value-of select=\"$userAttr/.\"/>\n+          <xsl:text>\"</xsl:text>\n+        </xsl:when>\n+        <xsl:when test=\"string-length($attrs/*/*[@name=$nameAttr]/value/text()) &gt; 0 \n+                        and count($attrs/*/*[@name=$nameAttr]/node()) = 0\">\n+          <xsl:variable name=\"value\" select=\"$attrs/*/*[@name=$nameAttr]/value/text()\"/>\n+          <xsl:text>\"</xsl:text>\n+          <xsl:value-of select=\"$value\"/>\n+          <xsl:text>\"</xsl:text>\n+        </xsl:when>\n+        <xsl:when test=\"string-length($attrs/*/*[@name=$nameAttr]/value/text()) &gt; 0 \n+                        and count($attrs/*/*[@name=$nameAttr]/node()) &gt; 0\">\n+          <xsl:text>\"</xsl:text>\n+          <xsl:for-each select=\"$attrs/*/*[@name=$nameAttr]/*\">\n+            <xsl:variable name=\"value\" select=\"$attrs/*/*[@name=$nameAttr]/value/text()\"/>\n+            <xsl:value-of select=\"$value\"/>\n+            <xsl:if test=\"position() != last()\">\n+              <xsl:value-of select=\"$delimiter\"/>\n+            </xsl:if>\n+          </xsl:for-each>\n+          <xsl:text>\"</xsl:text>\n+        </xsl:when>\n+        <xsl:when test=\"name($attrs/*[name(.)=$nameAttr]/*[name(.)='membership']) \n+                        and count($attrs/*[name(.)=$nameAttr]/node()) &gt; 0\">\n+          <xsl:text>\"</xsl:text>       \n+          <xsl:variable name=\"value\" select=\"@roleName\"/>\n+          <xsl:for-each select=\"$attrs/*/membership\">\n+            <xsl:variable name=\"value\" select=\"@roleName\"/>\n+            <xsl:value-of select=\"$value\"/>\n+            <xsl:if test=\"position() != last()\">\n+              <xsl:value-of select=\"$delimiter\"/>\n+            </xsl:if>\n+          </xsl:for-each>\n+          <xsl:text>\"</xsl:text>\n+        </xsl:when>\n+        <xsl:when test=\"name($attrs/*[name(.)=$nameAttr]/*[name(.)='resource']) \n+                        and count($attrs/*[name(.)=$nameAttr]/node()) &gt; 0\">\n+          <xsl:text>\"</xsl:text>\n+          <xsl:variable name=\"value\" select=\"@name\"/>\n+          <xsl:for-each select=\"$attrs/*/resource\">\n+            <xsl:variable name=\"value\" select=\"@name\"/>\n+            <xsl:value-of select=\"$value\"/>\n+            <xsl:if test=\"position() != last()\">\n+              <xsl:value-of select=\"$delimiter\"/>\n+            </xsl:if>\n+          </xsl:for-each>\n+          <xsl:text>\"</xsl:text>\n+        </xsl:when>\n+        <xsl:otherwise>\n+          <xsl:text>\"\"</xsl:text> \n+        </xsl:otherwise>  \n+      </xsl:choose>\n+      <xsl:if test=\"position() != last()\">\n+        <xsl:value-of select=\"$delimiter\"/>\n+      </xsl:if>  \n+    </xsl:for-each>\n+  </xsl:template>\n+  \n+</xsl:stylesheet>\n\\ No newline at end of file"},{"sha":"d9988a62b56a147c049044018ca7470f2541f1d1","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1dde8bf764b4a82bf07c01afdeb79e4829000194/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=1dde8bf764b4a82bf07c01afdeb79e4829000194","patch":"@@ -197,6 +197,7 @@ public void executeAndExport() throws IOException {\n         checkExport(execId, ReportExecExportFormat.HTML);\n         checkExport(execId, ReportExecExportFormat.PDF);\n         checkExport(execId, ReportExecExportFormat.RTF);\n+        checkExport(execId, ReportExecExportFormat.CSV);\n     }\n \n     @Test"}]}