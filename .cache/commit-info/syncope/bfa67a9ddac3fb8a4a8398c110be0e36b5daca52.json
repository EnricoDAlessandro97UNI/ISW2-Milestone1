{"sha":"bfa67a9ddac3fb8a4a8398c110be0e36b5daca52","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJmYTY3YTlkZGFjM2ZiOGE0YTgzOThjMTEwYmUwZTM2YjVkYWNhNTI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-20T15:36:13Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-20T15:36:13Z"},"message":"Stupidfix :(\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246443 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5f0312ce7042283104e382747fe271cea2e4bc43","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5f0312ce7042283104e382747fe271cea2e4bc43"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/comments","author":null,"committer":null,"parents":[{"sha":"b91c7452356693ccf596d2c9eb681edf74fc58e5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b91c7452356693ccf596d2c9eb681edf74fc58e5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b91c7452356693ccf596d2c9eb681edf74fc58e5"}],"stats":{"total":80,"additions":39,"deletions":41},"files":[{"sha":"cd58b31a30741458521ae6a9154cd2bf90166ef5","filename":"core/src/main/java/org/syncope/core/persistence/DefaultContentLoader.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FDefaultContentLoader.java?ref=bfa67a9ddac3fb8a4a8398c110be0e36b5daca52","patch":"@@ -107,7 +107,6 @@ public void contextInitialized(ServletContextEvent sce) {\n             } catch (SQLException e) {\n             }\n         }\n-        log.info(\"OOOOOOOO \" + existingData);\n         try {\n             IDatabaseConnection dbUnitConn = dbSchema == null\n                     ? new DatabaseConnection(conn)"},{"sha":"a6ad7e38bde1e40feceab3c4fc0f1f42379459f6","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributeValue.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributeValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributeValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributeValue.java?ref=bfa67a9ddac3fb8a4a8398c110be0e36b5daca52","patch":"@@ -96,10 +96,10 @@ public void setStringValue(String stringValue) {\n \n     public <T> T getValue() {\n         return (T) (booleanValue != null\n-                ? booleanValue : (dateValue != null\n-                ? dateValue : (doubleValue != null\n-                ? doubleValue : (longValue != null\n-                ? longValue : stringValue))));\n+                ? getBooleanValue() : (dateValue != null\n+                ? getDateValue() : (doubleValue != null\n+                ? getDoubleValue() : (longValue != null\n+                ? getLongValue() : stringValue))));\n     }\n \n     public String getValueAsString() {"},{"sha":"e246c2315966f71b71bf59fb8f572fb8fe895d6a","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":27,"deletions":28,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=bfa67a9ddac3fb8a4a8398c110be0e36b5daca52","patch":"@@ -147,8 +147,8 @@ private Set<String> provision(SyncopeUser user,\n         // synchronous propagation ...\n         if (log.isDebugEnabled()) {\n             log.debug(\n-                    \"Synchronous provisioning of \" +\n-                    syncOperations + \" with user \" + user);\n+                    \"Synchronous provisioning of \"\n+                    + syncOperations + \" with user \" + user);\n         }\n \n         for (Type type : ResourceOperations.Type.values()) {\n@@ -160,21 +160,21 @@ private Set<String> provision(SyncopeUser user,\n \n                 } catch (Throwable t) {\n                     log.error(\n-                            \"Exception during provision on resource \" +\n-                            resource.getName(), t);\n+                            \"Exception during provision on resource \"\n+                            + resource.getName(), t);\n \n                     throw new PropagationException(\n-                            \"Exception during provision on resource \" +\n-                            resource.getName(), resource.getName(), t);\n+                            \"Exception during provision on resource \"\n+                            + resource.getName(), resource.getName(), t);\n                 }\n             }\n         }\n \n         // asynchronous propagation ...\n         if (log.isDebugEnabled()) {\n             log.debug(\n-                    \"Asynchronous provisioning of \" +\n-                    asyncOperations + \" with user \" + user);\n+                    \"Asynchronous provisioning of \"\n+                    + asyncOperations + \" with user \" + user);\n         }\n \n         for (Type type : ResourceOperations.Type.values()) {\n@@ -186,8 +186,8 @@ private Set<String> provision(SyncopeUser user,\n \n                 } catch (Throwable t) {\n                     log.error(\n-                            \"Exception during provision on resource \" +\n-                            resource.getName(), t);\n+                            \"Exception during provision on resource \"\n+                            + resource.getName(), t);\n                 }\n             }\n         }\n@@ -219,8 +219,8 @@ private void propagate(SyncopeUser user, TargetResource resource, Type type)\n \n         if (connector == null) {\n             log.error(\n-                    \"Connector instance bean \" +\n-                    connectorInstance.getId().toString() + \" not found\");\n+                    \"Connector instance bean \"\n+                    + connectorInstance.getId().toString() + \" not found\");\n \n             throw new NoSuchBeanDefinitionException(\n                     \"Connector instance bean not found\");\n@@ -269,13 +269,13 @@ private void propagate(SyncopeUser user, TargetResource resource, Type type)\n \n                 if (log.isDebugEnabled()) {\n                     log.debug(\n-                            \"\\nDefine mapping for: \" +\n-                            \"\\n* Field \" + field +\n-                            \"\\n* is accountId \" + mapping.isAccountid() +\n-                            \"\\n* is password \" + mapping.isPassword() +\n-                            \"\\n* is nullable \" + mapping.isNullable() +\n-                            \"\\n* Schema \" + schema +\n-                            \"\\n* Type \" + schemaType.getClassName());\n+                            \"\\nDefine mapping for: \"\n+                            + \"\\n* Field \" + field\n+                            + \"\\n* is accountId \" + mapping.isAccountid()\n+                            + \"\\n* is password \" + mapping.isPassword()\n+                            + \"\\n* is nullable \" + mapping.isNullable()\n+                            + \"\\n* Schema \" + schema\n+                            + \"\\n* Type \" + schemaType.getClassName());\n                 }\n \n                 // get user attribute object\n@@ -323,11 +323,12 @@ private void propagate(SyncopeUser user, TargetResource resource, Type type)\n \n                 Object objValue = null;\n \n-                if (!objValues.isEmpty())\n+                if (!objValues.isEmpty()) {\n                     objValue = objValues.iterator().next();\n+                }\n \n-                if (!mapping.isPassword() &&\n-                        !mapping.isAccountid()) {\n+                if (!mapping.isPassword()\n+                        && !mapping.isAccountid()) {\n \n                     if (mapping.getUserSchema().isMultivalue()) {\n                         attrs.add(AttributeBuilder.build(\n@@ -343,13 +344,13 @@ private void propagate(SyncopeUser user, TargetResource resource, Type type)\n             } catch (ClassNotFoundException e) {\n \n                 if (log.isWarnEnabled()) {\n-                    log.warn(\"Unsupported attribute type \" +\n-                            schemaType.getClassName(), e);\n+                    log.warn(\"Unsupported attribute type \"\n+                            + schemaType.getClassName(), e);\n                 }\n \n             } catch (Throwable t) {\n-                if (log.isWarnEnabled()) {\n-                    log.warn(\"Attribute '\" + schema + \"' processing failed\", t);\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Attribute '\" + schema + \"' processing failed\", t);\n                 }\n             }\n         }\n@@ -371,8 +372,6 @@ private void propagate(SyncopeUser user, TargetResource resource, Type type)\n \n         }\n \n-\n-\n         if (userUid == null && type != Type.DELETE) {\n             log.error(\n                     \"Error creating / updating user onto resource \" + resource);"},{"sha":"244b72613a276ebd363fa8f87be28d5e22ae6f7a","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ResourceOperations.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FResourceOperations.java?ref=bfa67a9ddac3fb8a4a8398c110be0e36b5daca52","patch":"@@ -56,10 +56,13 @@ public boolean add(Type type, TargetResource resource) {\n         switch (type) {\n             case CREATE:\n                 result = toBeCreated.add(resource);\n+                break;\n             case UPDATE:\n                 result = toBeUpdated.add(resource);\n+                break;\n             case DELETE:\n                 result = toBeDeleted.add(resource);\n+                break;\n         }\n \n         return result;"},{"sha":"b1ca2417ebc361a0906956c9c5cefee6df2094af","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bfa67a9ddac3fb8a4a8398c110be0e36b5daca52/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=bfa67a9ddac3fb8a4a8398c110be0e36b5daca52","patch":"@@ -66,16 +66,12 @@ public class UserController extends AbstractController {\n \n     @Autowired\n     private SyncopeUserDAO syncopeUserDAO;\n-\n     @Autowired\n     private UserDataBinder userDataBinder;\n-\n     @Autowired\n     private Workflow userWorkflow;\n-\n     @Autowired(required = false)\n     private SpringHibernateJPAWorkflowStore workflowStore;\n-\n     @Autowired\n     private PropagationManager propagationManager;\n \n@@ -325,7 +321,8 @@ public UserTO create(HttpServletResponse response,\n             WorkflowException, PropagationException, NotFoundException {\n \n         if (log.isDebugEnabled()) {\n-            log.debug(\"create called with parameters \" + userTO + \"\\n\" + syncRoles + \"\\n\" + syncResources);\n+            log.debug(\"create called with parameters \" + userTO + \"\\n\"\n+                    + syncRoles + \"\\n\" + syncResources);\n         }\n \n         // By default, ignore id in UserTO:\n@@ -393,8 +390,8 @@ public UserTO create(HttpServletResponse response,\n                 getSyncResourceNames(user, syncRoles, syncResources);\n \n         if (log.isDebugEnabled() && !syncResourceNames.isEmpty()) {\n-            log.debug(\"About to propagate synchronously onto resources \" +\n-                    syncResourceNames);\n+            log.debug(\"About to propagate synchronously onto resources \"\n+                    + syncResourceNames);\n         }\n \n         Set<String> propagatedResources =\n@@ -415,7 +412,7 @@ public UserTO create(HttpServletResponse response,\n             userWorkflow.doAction(\n                     workflowId, availableWorkflowAction, inputs);\n         }\n-        \n+\n         user = syncopeUserDAO.save(user);\n \n         response.setStatus(HttpServletResponse.SC_CREATED);"}]}