{"sha":"d4b49cd95f6caf2710fd54dfba475795b0924311","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ0YjQ5Y2Q5NWY2Y2FmMjcxMGZkNTRkZmJhNDc1Nzk1YjA5MjQzMTE=","commit":{"author":{"name":"gonzalad","email":"adr_gonzalez@yahoo.fr","date":"2016-11-26T02:41:55Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2016-11-26T06:52:30Z"},"message":"SYNCOPE-975: ilike triggers search validation - This closes #42\n\nUsing ilike in a search triggers search field\nvalidation. It shouldn't be triggered.\nThis results in Syncope returning 0 records.\n\nFor instance: username=~*test*;(emails=~*test.com*)\ntries to validate email *test.com*, which isn't\na valid email","tree":{"sha":"76f88e350dd737b61d465eef4864f50b4c0f2713","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/76f88e350dd737b61d465eef4864f50b4c0f2713"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d4b49cd95f6caf2710fd54dfba475795b0924311","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d4b49cd95f6caf2710fd54dfba475795b0924311","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d4b49cd95f6caf2710fd54dfba475795b0924311","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d4b49cd95f6caf2710fd54dfba475795b0924311/comments","author":{"login":"gonzalad","id":777485,"node_id":"MDQ6VXNlcjc3NzQ4NQ==","avatar_url":"https://avatars.githubusercontent.com/u/777485?v=4","gravatar_id":"","url":"https://api.github.com/users/gonzalad","html_url":"https://github.com/gonzalad","followers_url":"https://api.github.com/users/gonzalad/followers","following_url":"https://api.github.com/users/gonzalad/following{/other_user}","gists_url":"https://api.github.com/users/gonzalad/gists{/gist_id}","starred_url":"https://api.github.com/users/gonzalad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gonzalad/subscriptions","organizations_url":"https://api.github.com/users/gonzalad/orgs","repos_url":"https://api.github.com/users/gonzalad/repos","events_url":"https://api.github.com/users/gonzalad/events{/privacy}","received_events_url":"https://api.github.com/users/gonzalad/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"fba91e145593bd8ac44af74dd5fa2820ea509a8e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fba91e145593bd8ac44af74dd5fa2820ea509a8e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fba91e145593bd8ac44af74dd5fa2820ea509a8e"}],"stats":{"total":11,"additions":7,"deletions":4},"files":[{"sha":"3f8e5bd682bb34ca86827ca1ebc9cf08fab3c6bd","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4b49cd95f6caf2710fd54dfba475795b0924311/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4b49cd95f6caf2710fd54dfba475795b0924311/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=d4b49cd95f6caf2710fd54dfba475795b0924311","patch":"@@ -747,8 +747,8 @@ private void fillAttributeQuery(final StringBuilder query, final PlainAttrValue\n \n         // activate ignoreCase only for EQ and LIKE operators\n         boolean ignoreCase = AttributeCond.Type.ILIKE == cond.getType() || AttributeCond.Type.IEQ == cond.getType();\n-        \n-        String column = (cond instanceof AnyCond)  ? cond.getSchema() :  svs.fieldName(schema.getType());\n+\n+        String column = (cond instanceof AnyCond) ? cond.getSchema() : svs.fieldName(schema.getType());\n         if (ignoreCase) {\n             column = \"LOWER (\" + column + \")\";\n         }\n@@ -864,7 +864,9 @@ private String getQuery(final AttributeCond cond, final boolean not, final List<\n \n         PlainAttrValue attrValue = attrUtils.newPlainAttrValue();\n         try {\n-            if (cond.getType() != AttributeCond.Type.LIKE && cond.getType() != AttributeCond.Type.ISNULL\n+            if (cond.getType() != AttributeCond.Type.LIKE\n+                    && cond.getType() != AttributeCond.Type.ILIKE\n+                    && cond.getType() != AttributeCond.Type.ISNULL\n                     && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n \n                 schema.getValidator().validate(cond.getExpression(), attrValue);\n@@ -905,7 +907,7 @@ private String getQuery(final AnyCond cond, final boolean not, final List<Object\n             final SearchSupport svs) {\n \n         AnyCond condClone = SerializationUtils.clone(cond);\n-        \n+\n         AnyUtils attrUtils = anyUtilsFactory.getInstance(svs.anyTypeKind());\n \n         // Keeps track of difference between entity's getKey() and JPA @Id fields\n@@ -960,6 +962,7 @@ private String getQuery(final AnyCond cond, final boolean not, final List<Object\n \n         PlainAttrValue attrValue = attrUtils.newPlainAttrValue();\n         if (condClone.getType() != AttributeCond.Type.LIKE\n+                && condClone.getType() != AttributeCond.Type.ILIKE\n                 && condClone.getType() != AttributeCond.Type.ISNULL\n                 && condClone.getType() != AttributeCond.Type.ISNOTNULL) {\n "}]}