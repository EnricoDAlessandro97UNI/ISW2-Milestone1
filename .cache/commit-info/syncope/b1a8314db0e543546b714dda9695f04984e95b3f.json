{"sha":"b1a8314db0e543546b714dda9695f04984e95b3f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIxYTgzMTRkYjBlNTQzNTQ2YjcxNGRkYTk2OTVmMDQ5ODRlOTViM2Y=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-18T15:50:52Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-18T15:50:52Z"},"message":"First real-world RESTful webservices in place :-)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246200 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e81ac56c7b4bc4a2981d3c64ec763e304f8eb5ea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e81ac56c7b4bc4a2981d3c64ec763e304f8eb5ea"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b1a8314db0e543546b714dda9695f04984e95b3f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b1a8314db0e543546b714dda9695f04984e95b3f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b1a8314db0e543546b714dda9695f04984e95b3f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b1a8314db0e543546b714dda9695f04984e95b3f/comments","author":null,"committer":null,"parents":[{"sha":"760c1cb2c3d60c1e78b2d905cf0a8755df4d785f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/760c1cb2c3d60c1e78b2d905cf0a8755df4d785f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/760c1cb2c3d60c1e78b2d905cf0a8755df4d785f"}],"stats":{"total":324,"additions":212,"deletions":112},"files":[{"sha":"35eb8d44091d575f4360e20da436176fa847e7a9","filename":"client/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fpom.xml?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -30,4 +30,10 @@\n     <artifactId>syncope-client</artifactId>\n     <packaging>jar</packaging>\n \n+    <dependencies>\n+        <dependency>\n+            <groupId>commons-lang</groupId>\n+            <artifactId>commons-lang</artifactId>\n+        </dependency>\n+    </dependencies>\n </project>"},{"sha":"dceaa08801b92724dea7cfaecb30f89b4501578d","filename":"client/src/main/java/org/syncope/client/to/AbstractBaseTO.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractBaseTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractBaseTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractBaseTO.java?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -0,0 +1,40 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.client.to;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang.builder.EqualsBuilder;\n+import org.apache.commons.lang.builder.HashCodeBuilder;\n+import org.apache.commons.lang.builder.ReflectionToStringBuilder;\n+import org.apache.commons.lang.builder.ToStringStyle;\n+\n+public abstract class AbstractBaseTO implements Serializable {\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        return EqualsBuilder.reflectionEquals(this, obj);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return HashCodeBuilder.reflectionHashCode(this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return ReflectionToStringBuilder.toString(this,\n+                ToStringStyle.MULTI_LINE_STYLE);\n+    }\n+}"},{"sha":"721d4640951d78964177c00ed4d734ccc36cffc7","filename":"client/src/main/java/org/syncope/client/to/AttributeSchemaTO.java","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeSchemaTO.java?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -14,11 +14,11 @@\n  */\n package org.syncope.client.to;\n \n-import java.io.Serializable;\n+import java.util.HashSet;\n import java.util.Set;\n import org.syncope.types.AttributeType;\n \n-public class AttributeSchemaTO implements Serializable {\n+public class AttributeSchemaTO extends AbstractBaseTO {\n \n     private String name;\n     private AttributeType type;\n@@ -28,6 +28,10 @@ public class AttributeSchemaTO implements Serializable {\n     private String validatorClass;\n     private Set<String> derivedAttributeSchemas;\n \n+    public AttributeSchemaTO() {\n+        derivedAttributeSchemas = new HashSet<String>();\n+    }\n+\n     public String getConversionPattern() {\n         return conversionPattern;\n     }\n@@ -36,6 +40,14 @@ public void setConversionPattern(String conversionPattern) {\n         this.conversionPattern = conversionPattern;\n     }\n \n+    public boolean addDerivedAttributeSchema(String derivedAttributeSchema) {\n+        return derivedAttributeSchemas.add(derivedAttributeSchema);\n+    }\n+\n+    public boolean removeDerivedAttributeSchema(String derivedAttributeSchema) {\n+        return derivedAttributeSchemas.remove(derivedAttributeSchema);\n+    }\n+\n     public Set<String> getDerivedAttributeSchemas() {\n         return derivedAttributeSchemas;\n     }\n@@ -83,5 +95,4 @@ public String getValidatorClass() {\n     public void setValidatorClass(String validatorClass) {\n         this.validatorClass = validatorClass;\n     }\n-\n }"},{"sha":"11c3a3b016ddff96ac7fd913730254065e6e36c9","filename":"client/src/main/java/org/syncope/client/to/AttributeTO.java","status":"modified","additions":1,"deletions":40,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -14,10 +14,9 @@\n  */\n package org.syncope.client.to;\n \n-import java.io.Serializable;\n import java.util.Set;\n \n-public class AttributeTO implements Serializable {\n+public class AttributeTO extends AbstractBaseTO {\n \n     private String name;\n     private Set<String> values;\n@@ -37,42 +36,4 @@ public Set<String> getValues() {\n     public void setValues(Set<String> values) {\n         this.values = values;\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final AttributeTO other = (AttributeTO) obj;\n-        if ((this.name == null)\n-                ? (other.name != null) : !this.name.equals(other.name)) {\n-\n-            return false;\n-        }\n-        if (this.values != other.values\n-                && (this.values == null || !this.values.equals(other.values))) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 13 * hash + (this.name != null ? this.name.hashCode() : 0);\n-        hash = 13 * hash + (this.values != null ? this.values.hashCode() : 0);\n-        return hash;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"(\"\n-                + \"name=\" + name + \",\"\n-                + \"values\" + values\n-                + \")\";\n-    }\n }"},{"sha":"916106dc90e4afee11a47a90466a67214312917c","filename":"client/src/main/java/org/syncope/client/to/DerivedAttributeSchemaTO.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FDerivedAttributeSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FDerivedAttributeSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FDerivedAttributeSchemaTO.java?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -0,0 +1,61 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.client.to;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class DerivedAttributeSchemaTO extends AbstractBaseTO {\n+\n+    private String name;\n+    private String expression;\n+    private Set<String> attributeSchemas;\n+\n+    public DerivedAttributeSchemaTO() {\n+        attributeSchemas = new HashSet<String>();\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getExpression() {\n+        return expression;\n+    }\n+\n+    public void setExpression(String expression) {\n+        this.expression = expression;\n+    }\n+\n+    public boolean addAttributeSchema(String attributeSchema) {\n+        return attributeSchemas.add(attributeSchema);\n+    }\n+\n+    public boolean removeAttributeSchema(String attributeSchema) {\n+        return attributeSchemas.remove(attributeSchema);\n+    }\n+\n+    public Set<String> getAttributeSchemas() {\n+        return attributeSchemas;\n+    }\n+\n+    public void setAttributeSchemas(Set<String> attributeSchemas) {\n+        this.attributeSchemas = attributeSchemas;\n+    }\n+}"},{"sha":"1ee30822259b9ad9337d66b7b1921367decd702a","filename":"client/src/main/java/org/syncope/client/to/SearchCondition.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSearchCondition.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSearchCondition.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSearchCondition.java?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -14,7 +14,7 @@\n  */\n package org.syncope.client.to;\n \n-public class SearchCondition {\n+public class SearchCondition extends AbstractBaseTO {\n \n     private String attributeName;\n     private SearchCondition condition;"},{"sha":"5a9c134bc44e78fa624b465917bc32e6f3af58f8","filename":"client/src/main/java/org/syncope/client/to/SearchParameters.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSearchParameters.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSearchParameters.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSearchParameters.java?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -14,16 +14,15 @@\n  */\n package org.syncope.client.to;\n \n-import java.io.Serializable;\n import java.util.HashSet;\n import java.util.Set;\n \n-public class SearchParameters implements Serializable {\n+public class SearchParameters extends AbstractBaseTO {\n \n     Set<SearchCondition> conditions = new HashSet<SearchCondition>();\n \n     public SearchParameters() {\n-       conditions = new HashSet<SearchCondition>();\n+        conditions = new HashSet<SearchCondition>();\n     }\n \n     public Set<SearchCondition> getConditions() {"},{"sha":"ca9c93a1654d8cb90d8aafe7430b11b903f5a2e1","filename":"client/src/main/java/org/syncope/client/to/UserTO.java","status":"modified","additions":1,"deletions":51,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -14,11 +14,10 @@\n  */\n package org.syncope.client.to;\n \n-import java.io.Serializable;\n import java.util.HashSet;\n import java.util.Set;\n \n-public class UserTO implements Serializable {\n+public class UserTO extends AbstractBaseTO {\n \n     private Long id;\n     private Set<AttributeTO> attributes;\n@@ -52,53 +51,4 @@ public Set<AttributeTO> getDerivedAttributes() {\n     public void setDerivedAttributes(Set<AttributeTO> derivedAttributes) {\n         this.derivedAttributes = derivedAttributes;\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final UserTO other = (UserTO) obj;\n-        if (this.id != other.id\n-                && (this.id == null || !this.id.equals(other.id))) {\n-\n-            return false;\n-        }\n-        if (this.attributes != other.attributes\n-                && (this.attributes == null\n-                || !this.attributes.equals(other.attributes))) {\n-\n-            return false;\n-        }\n-        if (this.derivedAttributes != other.derivedAttributes\n-                && (this.derivedAttributes == null\n-                || !this.derivedAttributes.equals(other.derivedAttributes))) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 5;\n-        hash = 23 * hash + (this.id != null ? this.id.hashCode() : 0);\n-        hash = 23 * hash + (this.attributes != null\n-                ? this.attributes.hashCode() : 0);\n-        hash = 23 * hash + (this.derivedAttributes != null\n-                ? this.derivedAttributes.hashCode() : 0);\n-        return hash;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"(\"\n-                + \"id=\" + id + \",\"\n-                + \"attributes=\" + attributes + \",\"\n-                + \"derivedAttributes=\" + derivedAttributes\n-                + \")\";\n-    }\n }"},{"sha":"409d02a7cbaffea5bbe33631b254ba6bf1930c92","filename":"client/src/main/java/org/syncope/types/Comparator.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FComparator.java?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.client.to;\n+package org.syncope.types;\n \n public enum Comparator {\n ","previous_filename":"client/src/main/java/org/syncope/client/to/Comparator.java"},{"sha":"517121ba3d6f62d9050d0eb6fcf6cfffa6fb3fcb","filename":"core/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -37,6 +37,7 @@\n         <logfile.persistence>/tmp/syncope-core-persistence.log</logfile.persistence>\n         <logfile.rest>/tmp/syncope-core-rest.log</logfile.rest>\n         <logfile.test>/tmp/syncope-core-test.log</logfile.test>\n+        <netbeans.hint.deploy.server>Tomcat60</netbeans.hint.deploy.server>\n     </properties>\n \n     <dependencies>"},{"sha":"5fde4114d8154ec5a188d0d345f5a24731af7c8f","filename":"core/src/main/java/org/syncope/core/rest/controller/SchemaController.java","status":"modified","additions":70,"deletions":5,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -15,18 +15,23 @@\n package org.syncope.core.rest.controller;\n \n import java.io.IOException;\n-import java.util.Collections;\n-import java.util.Set;\n+import java.util.ArrayList;\n+import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n import org.springframework.stereotype.Controller;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n import org.springframework.web.context.WebApplicationContext;\n import org.springframework.web.servlet.support.RequestContextUtils;\n import org.syncope.client.to.AttributeSchemaTO;\n+import org.syncope.client.to.DerivedAttributeSchemaTO;\n+import org.syncope.core.persistence.beans.AttributeSchema;\n+import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n+import org.syncope.core.persistence.dao.DerivedAttributeSchemaDAO;\n \n @Controller\n @RequestMapping(\"/schema\")\n@@ -35,8 +40,9 @@ public class SchemaController {\n     private static final Logger log = LoggerFactory.getLogger(\n             SchemaController.class);\n \n-    @RequestMapping(method = RequestMethod.GET, value = \"/list\")\n-    public Set<AttributeSchemaTO> list(HttpServletRequest request) throws IOException {\n+    @RequestMapping(method = RequestMethod.GET, value = \"/attribute/list\")\n+    public List<AttributeSchemaTO> attributeList(HttpServletRequest request)\n+            throws IOException {\n \n         WebApplicationContext webApplicationContext =\n                 RequestContextUtils.getWebApplicationContext(request);\n@@ -45,6 +51,65 @@ public Set<AttributeSchemaTO> list(HttpServletRequest request) throws IOExceptio\n                 (AttributeSchemaDAO) webApplicationContext.getBean(\n                 \"attributeSchemaDAOImpl\");\n \n-        return Collections.singleton(new AttributeSchemaTO());\n+        List<AttributeSchema> attributeSchemas = attributeSchemaDAO.findAll();\n+        List<AttributeSchemaTO> result = new ArrayList<AttributeSchemaTO>(\n+                attributeSchemas.size());\n+        AttributeSchemaTO attributeSchemaTO = null;\n+        String[] ignoreProperties = {\"derivedAttributeSchemas\"};\n+        for (AttributeSchema attributeSchema : attributeSchemas) {\n+            attributeSchemaTO = new AttributeSchemaTO();\n+            BeanUtils.copyProperties(attributeSchema, attributeSchemaTO,\n+                    ignoreProperties);\n+\n+            for (DerivedAttributeSchema derivedAttributeSchema :\n+                    attributeSchema.getDerivedAttributeSchemas()) {\n+\n+                attributeSchemaTO.addDerivedAttributeSchema(\n+                        derivedAttributeSchema.getName());\n+            }\n+\n+            result.add(attributeSchemaTO);\n+        }\n+\n+        return result;\n+    }\n+\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/derivedAttribute/list\")\n+    public List<DerivedAttributeSchemaTO> derivedAttributeList(\n+            HttpServletRequest request) throws IOException {\n+\n+        WebApplicationContext webApplicationContext =\n+                RequestContextUtils.getWebApplicationContext(request);\n+\n+        DerivedAttributeSchemaDAO derivedAttributeSchemaDAO =\n+                (DerivedAttributeSchemaDAO) webApplicationContext.getBean(\n+                \"derivedAttributeSchemaDAOImpl\");\n+\n+        List<DerivedAttributeSchema> derivedAttributeSchemas =\n+                derivedAttributeSchemaDAO.findAll();\n+        List<DerivedAttributeSchemaTO> result =\n+                new ArrayList<DerivedAttributeSchemaTO>(\n+                derivedAttributeSchemas.size());\n+        DerivedAttributeSchemaTO derivedAttributeSchemaTO = null;\n+        String[] ignoreProperties = {\"attributeSchemas\"};\n+        for (DerivedAttributeSchema derivedAttributeSchema :\n+                derivedAttributeSchemas) {\n+\n+            derivedAttributeSchemaTO = new DerivedAttributeSchemaTO();\n+            BeanUtils.copyProperties(derivedAttributeSchema,\n+                    derivedAttributeSchemaTO, ignoreProperties);\n+\n+            for (AttributeSchema attributeSchema :\n+                    derivedAttributeSchema.getAttributeSchemas()) {\n+\n+                derivedAttributeSchemaTO.addAttributeSchema(\n+                        attributeSchema.getName());\n+            }\n+\n+            result.add(derivedAttributeSchemaTO);\n+        }\n+\n+        return result;\n     }\n }"},{"sha":"165b63340d034f999ef76aee6f1efbe9c4e9952e","filename":"core/src/test/java/org/syncope/core/rest/test/SchemaTestITCase.java","status":"modified","additions":14,"deletions":8,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1a8314db0e543546b714dda9695f04984e95b3f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Ftest%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1a8314db0e543546b714dda9695f04984e95b3f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Ftest%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Ftest%2FSchemaTestITCase.java?ref=b1a8314db0e543546b714dda9695f04984e95b3f","patch":"@@ -14,23 +14,29 @@\n  */\n package org.syncope.core.rest.test;\n \n-import java.util.Set;\n+import org.syncope.client.to.DerivedAttributeSchemaTO;\n+import java.util.List;\n import org.junit.Test;\n import org.syncope.client.to.AttributeSchemaTO;\n import static org.junit.Assert.*;\n \n public class SchemaTestITCase extends AbstractTestITCase {\n \n     @Test\n-    public void list() {\n-        Set<AttributeSchemaTO> attributeSchemas =\n-                restTemplate.getForObject(BASE_URL + \"schema/list.json\",\n-                Set.class);\n+    public void attributeList() {\n+        List<AttributeSchemaTO> attributeSchemas =\n+                restTemplate.getForObject(BASE_URL\n+                + \"schema/attribute/list.json\", List.class);\n \n         assertNotNull(attributeSchemas);\n+    }\n+\n+    @Test\n+    public void derivedAttributeList() {\n+        List<DerivedAttributeSchemaTO> derivedAttributeSchemas =\n+                restTemplate.getForObject(BASE_URL\n+                + \"schema/derivedAttribute/list.json\", List.class);\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(attributeSchemas.toString());\n-        }\n+        assertNotNull(derivedAttributeSchemas);\n     }\n }"}]}