{"sha":"638a3a6da1749e00b2d3c546b2ff65717c8da9aa","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjYzOGEzYTZkYTE3NDllMDBiMmQzYzU0NmIyZmY2NTcxN2M4ZGE5YWE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-10-28T13:32:49Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-10-28T13:32:49Z"},"message":"Merge branch '1_2_X'","tree":{"sha":"159b18a6be8a6030e7a00cd614be6f6260e99d9c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/159b18a6be8a6030e7a00cd614be6f6260e99d9c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/638a3a6da1749e00b2d3c546b2ff65717c8da9aa","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/638a3a6da1749e00b2d3c546b2ff65717c8da9aa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/638a3a6da1749e00b2d3c546b2ff65717c8da9aa","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"cac71aef1edeca54a559b535438c52b9efbf437c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cac71aef1edeca54a559b535438c52b9efbf437c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cac71aef1edeca54a559b535438c52b9efbf437c"},{"sha":"a23ef02f2c672c009eb664e8fe91f9ae07e82adb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a23ef02f2c672c009eb664e8fe91f9ae07e82adb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a23ef02f2c672c009eb664e8fe91f9ae07e82adb"}],"stats":{"total":58,"additions":39,"deletions":19},"files":[{"sha":"3e5f9db4fdd1f5df2728c236980bb0bec85e09be","filename":"console/src/main/java/org/apache/syncope/console/commons/AttrLayoutType.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttrLayoutType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttrLayoutType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FAttrLayoutType.java?ref=638a3a6da1749e00b2d3c546b2ff65717c8da9aa","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.console.commons;\n \n+import java.util.ArrayList;\n+import java.util.List;\n import org.apache.syncope.common.types.AttributableType;\n \n public enum AttrLayoutType {\n@@ -53,6 +55,15 @@ public AttributableType getAttrType() {\n         return attrType;\n     }\n \n+    public static List<String> confKeys() {\n+        List<String> confKeys = new ArrayList<String>();\n+        for (AttrLayoutType value : values()) {\n+            confKeys.add(value.getConfKey());\n+        }\n+\n+        return confKeys;\n+    }\n+\n     public static AttrLayoutType valueOf(final Mode mode, final AttributableType attrType) {\n         AttrLayoutType result = null;\n         if (mode == Mode.ADMIN) {"},{"sha":"da97a450ed4df90770993c9ab8ac1a520de6fab6","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":3,"deletions":12,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=638a3a6da1749e00b2d3c546b2ff65717c8da9aa","patch":"@@ -145,15 +145,6 @@ protected void populateItem(final ListItem<AttributeTO> item) {\n         );\n     }\n \n-    private void filter(final List<SchemaTO> schemaTOs, final Collection<String> allowed) {\n-        for (ListIterator<SchemaTO> itor = schemaTOs.listIterator(); itor.hasNext();) {\n-            SchemaTO schema = itor.next();\n-            if (!allowed.contains(schema.getName())) {\n-                itor.remove();\n-            }\n-        }\n-    }\n-\n     private void setSchemas() {\n         AttributeTO attrLayout = null;\n         List<SchemaTO> schemaTOs;\n@@ -172,7 +163,7 @@ private void setSchemas() {\n                     allowed.addAll(roleRestClient.read(roleTO.getParent()).getRAttrTemplates());\n                 }\n             }\n-            filter(schemaTOs, allowed);\n+            schemaRestClient.filter(schemaTOs, allowed, true);\n         } else if (entityTO instanceof UserTO) {\n             attrLayout = confRestClient.readAttrLayout(AttrLayoutType.valueOf(mode, AttributableType.USER));\n             schemaTOs = schemaRestClient.getSchemas(AttributableType.USER);\n@@ -181,7 +172,7 @@ private void setSchemas() {\n             schemaTOs = schemaRestClient.getSchemas(AttributableType.MEMBERSHIP);\n             Set<String> allowed = new HashSet<String>(\n                     roleRestClient.read(((MembershipTO) entityTO).getRoleId()).getMAttrTemplates());\n-            filter(schemaTOs, allowed);\n+            schemaRestClient.filter(schemaTOs, allowed, true);\n         } else {\n             schemas = new TreeMap<String, SchemaTO>();\n             schemaTOs = schemaRestClient.getSchemas(AttributableType.CONFIGURATION);\n@@ -199,7 +190,7 @@ private void setSchemas() {\n \n         if (attrLayout != null && mode != Mode.TEMPLATE && !(entityTO instanceof ConfTO)) {\n             // 1. remove attributes not selected for display\n-            filter(schemaTOs, attrLayout.getValues());\n+            schemaRestClient.filter(schemaTOs, attrLayout.getValues(), true);\n             // 2. sort remainig attributes according to configuration, e.g. attrLayout\n             final Map<String, Integer> attrLayoutMap = new HashMap<String, Integer>(attrLayout.getValues().size());\n             for (int i = 0; i < attrLayout.getValues().size(); i++) {"},{"sha":"9eebf0e4ce170e5ab19eb63a8755f6762da6b069","filename":"console/src/main/java/org/apache/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=638a3a6da1749e00b2d3c546b2ff65717c8da9aa","patch":"@@ -19,8 +19,10 @@\n package org.apache.syncope.console.rest;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n+import java.util.ListIterator;\n \n import org.apache.syncope.common.services.ConfigurationService;\n import org.apache.syncope.common.services.SchemaService;\n@@ -33,6 +35,7 @@\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.console.commons.AttrLayoutType;\n import org.springframework.stereotype.Component;\n \n /**\n@@ -43,6 +46,23 @@ public class SchemaRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -2479730152700312373L;\n \n+    public void filter(\n+            final List<? extends AbstractSchemaTO> schemaTOs, final Collection<String> allowed, final boolean exclude) {\n+\n+        for (ListIterator<? extends AbstractSchemaTO> itor = schemaTOs.listIterator(); itor.hasNext();) {\n+            AbstractSchemaTO schema = itor.next();\n+            if (exclude) {\n+                if (!allowed.contains(schema.getName())) {\n+                    itor.remove();\n+                }\n+            } else {\n+                if (allowed.contains(schema.getName())) {\n+                    itor.remove();\n+                }\n+            }\n+        }\n+    }\n+\n     public List<? extends AbstractSchemaTO> getSchemas(final AttributableType attrType, final SchemaType schemaType) {\n         List<? extends AbstractSchemaTO> schemas = Collections.emptyList();\n \n@@ -52,6 +72,10 @@ public List<? extends AbstractSchemaTO> getSchemas(final AttributableType attrTy\n             LOG.error(\"While getting all schemas for {} and {}\", attrType, schemaType, e);\n         }\n \n+        if (attrType == AttributableType.CONFIGURATION) {\n+            filter(schemas, AttrLayoutType.confKeys(), false);\n+        }\n+\n         return schemas;\n     }\n "},{"sha":"f92a2b8cea31e4447e6c7494ccc462d094b6ced2","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=638a3a6da1749e00b2d3c546b2ff65717c8da9aa","patch":"@@ -1227,7 +1227,7 @@ under the License.\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-assembly-plugin</artifactId>\n-          <version>2.4.1</version>\n+          <version>2.5</version>\n         </plugin>      \n         <plugin>\n           <groupId>org.eclipse.m2e</groupId>"},{"sha":"b7c1ea1a78cdc41c4823a17d8d7066a289e42a7d","filename":"standalone/pom.xml","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/standalone%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/638a3a6da1749e00b2d3c546b2ff65717c8da9aa/standalone%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/standalone%2Fpom.xml?ref=638a3a6da1749e00b2d3c546b2ff65717c8da9aa","patch":"@@ -168,9 +168,6 @@ under the License.\n         <directory>../core/src/test/resources</directory>\n         <filtering>true</filtering>\n         <targetPath>core</targetPath>\n-        <includes>\n-          <include>content.xml</include>\n-        </includes>\n       </resource>\n       <resource>\n         <directory>../core/src/main/resources</directory>\n@@ -184,9 +181,6 @@ under the License.\n         <directory>../console/src/test/resources</directory>\n         <filtering>true</filtering>\n         <targetPath>console</targetPath>\n-        <includes>\n-          <include>console.properties</include>\n-        </includes>\n       </resource>\n       <resource>\n         <directory>../console/src/main/resources</directory>"}]}