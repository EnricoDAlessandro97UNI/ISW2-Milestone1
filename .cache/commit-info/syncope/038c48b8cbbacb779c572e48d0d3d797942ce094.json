{"sha":"038c48b8cbbacb779c572e48d0d3d797942ce094","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAzOGM0OGI4Y2JiYWNiNzc5YzU3MmU0OGQwZDNkNzk3OTQyY2UwOTQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-11-25T11:33:45Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-11-25T11:33:45Z"},"message":"Allow easier subclassing","tree":{"sha":"fea3931d82c2dda58efc7d3cb3b65160e7921937","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fea3931d82c2dda58efc7d3cb3b65160e7921937"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/038c48b8cbbacb779c572e48d0d3d797942ce094","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/038c48b8cbbacb779c572e48d0d3d797942ce094","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/038c48b8cbbacb779c572e48d0d3d797942ce094","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/038c48b8cbbacb779c572e48d0d3d797942ce094/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"dec2014f3f7b315353a4aaa559d51e69be04a409","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dec2014f3f7b315353a4aaa559d51e69be04a409","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dec2014f3f7b315353a4aaa559d51e69be04a409"}],"stats":{"total":39,"additions":17,"deletions":22},"files":[{"sha":"66b19a28f55951844b0e42f009606f9af549e9cf","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DBPasswordPullActions.java","status":"modified","additions":12,"deletions":15,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/038c48b8cbbacb779c572e48d0d3d797942ce094/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/038c48b8cbbacb779c572e48d0d3d797942ce094/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java?ref=038c48b8cbbacb779c572e48d0d3d797942ce094","patch":"@@ -29,7 +29,6 @@\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n-import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n@@ -51,16 +50,16 @@\n  */\n public class DBPasswordPullActions implements PullActions {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(DBPasswordPullActions.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(DBPasswordPullActions.class);\n \n-    private static final String CLEARTEXT = \"CLEARTEXT\";\n+    protected static final String CLEARTEXT = \"CLEARTEXT\";\n \n     @Autowired\n-    private UserDAO userDAO;\n+    protected UserDAO userDAO;\n \n-    private String encodedPassword;\n+    protected String encodedPassword;\n \n-    private CipherAlgorithm cipher;\n+    protected CipherAlgorithm cipher;\n \n     @Transactional(readOnly = true)\n     @Override\n@@ -86,11 +85,11 @@ public void beforeUpdate(\n         if (anyUR instanceof UserUR) {\n             PasswordPatch modPassword = ((UserUR) anyUR).getPassword();\n             parseEncodedPassword(Optional.ofNullable(modPassword)\n-                .map(AbstractPatchItem::getValue).orElse(null), profile.getConnector());\n+                    .map(AbstractPatchItem::getValue).orElse(null), profile.getConnector());\n         }\n     }\n \n-    private void parseEncodedPassword(final String password, final Connector connector) {\n+    protected void parseEncodedPassword(final String password, final Connector connector) {\n         if (password != null) {\n             ConnInstance connInstance = connector.getConnInstance();\n \n@@ -107,14 +106,12 @@ private void parseEncodedPassword(final String password, final Connector connect\n         }\n     }\n \n-    private static String getCipherAlgorithm(final ConnInstance connInstance) {\n-        Optional<ConnConfProperty> cipherAlgorithm = connInstance.getConf().stream().\n+    protected String getCipherAlgorithm(final ConnInstance connInstance) {\n+        return connInstance.getConf().stream().\n                 filter(property -> \"cipherAlgorithm\".equals(property.getSchema().getName())\n-                && property.getValues() != null && !property.getValues().isEmpty()).findFirst();\n-\n-        return cipherAlgorithm.isPresent()\n-                ? (String) cipherAlgorithm.get().getValues().get(0)\n-                : CLEARTEXT;\n+                && property.getValues() != null && !property.getValues().isEmpty()).findFirst().\n+                map(cipherAlgorithm -> cipherAlgorithm.getValues().get(0).toString()).\n+                orElse(CLEARTEXT);\n     }\n \n     @Transactional"},{"sha":"a408fb92c3469a3f7a706ac154e1d4b629d01f29","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/LDAPPasswordPullActions.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/038c48b8cbbacb779c572e48d0d3d797942ce094/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/038c48b8cbbacb779c572e48d0d3d797942ce094/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java?ref=038c48b8cbbacb779c572e48d0d3d797942ce094","patch":"@@ -20,22 +20,20 @@\n \n import java.util.Base64;\n import java.util.Optional;\n-\n import javax.xml.bind.DatatypeConverter;\n-\n import org.apache.syncope.common.lib.request.AbstractPatchItem;\n import org.apache.syncope.common.lib.request.AnyCR;\n import org.apache.syncope.common.lib.request.AnyUR;\n import org.apache.syncope.common.lib.request.PasswordPatch;\n import org.apache.syncope.common.lib.request.UserCR;\n import org.apache.syncope.common.lib.request.UserUR;\n import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.lib.to.ProvisioningReport;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n-import org.apache.syncope.common.lib.to.ProvisioningReport;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n@@ -53,11 +51,11 @@ public class LDAPPasswordPullActions implements PullActions {\n     protected static final Logger LOG = LoggerFactory.getLogger(LDAPPasswordPullActions.class);\n \n     @Autowired\n-    private UserDAO userDAO;\n+    protected UserDAO userDAO;\n \n-    private String encodedPassword;\n+    protected String encodedPassword;\n \n-    private CipherAlgorithm cipher;\n+    protected CipherAlgorithm cipher;\n \n     @Transactional(readOnly = true)\n     @Override\n@@ -86,7 +84,7 @@ public void beforeUpdate(\n         }\n     }\n \n-    private void parseEncodedPassword(final String password) {\n+    protected void parseEncodedPassword(final String password) {\n         if (password != null && password.startsWith(\"{\")) {\n             int closingBracketIndex = password.indexOf('}');\n             String digest = password.substring(1, password.indexOf('}')).toUpperCase();"}]}