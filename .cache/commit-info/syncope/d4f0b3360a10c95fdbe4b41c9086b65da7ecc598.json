{"sha":"d4f0b3360a10c95fdbe4b41c9086b65da7ecc598","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ0ZjBiMzM2MGExMGM5NWZkYmU0YjQxYzkwODZiNjVkYTdlY2M1OTg=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-09-15T22:09:11Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-09-15T22:09:11Z"},"message":"please, take care to be sure about the use of attributeValue at rows 270 and 146\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246514 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c115728678301a1e8825e22bef96bc17af30cd5b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c115728678301a1e8825e22bef96bc17af30cd5b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d4f0b3360a10c95fdbe4b41c9086b65da7ecc598","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d4f0b3360a10c95fdbe4b41c9086b65da7ecc598","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d4f0b3360a10c95fdbe4b41c9086b65da7ecc598","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d4f0b3360a10c95fdbe4b41c9086b65da7ecc598/comments","author":null,"committer":null,"parents":[{"sha":"625d6c8cc56eee382d2447b73499f56c56c96582","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/625d6c8cc56eee382d2447b73499f56c56c96582","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/625d6c8cc56eee382d2447b73499f56c56c96582"}],"stats":{"total":62,"additions":36,"deletions":26},"files":[{"sha":"3ad876320b6cd8aa34962beb98f6acd7161e1100","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":36,"deletions":26,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d4f0b3360a10c95fdbe4b41c9086b65da7ecc598/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d4f0b3360a10c95fdbe4b41c9086b65da7ecc598/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=d4f0b3360a10c95fdbe4b41c9086b65da7ecc598","patch":"@@ -65,22 +65,31 @@ public abstract class AbstractAttributableDataBinder {\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(\n             AbstractAttributableDataBinder.class);\n+\n     @Autowired\n     protected SyncopeRoleDAO syncopeRoleDAO;\n+\n     @Autowired\n     protected SchemaDAO schemaDAO;\n+\n     @Autowired\n     protected DerivedSchemaDAO derivedSchemaDAO;\n+\n     @Autowired\n     protected AttributeDAO attributeDAO;\n+\n     @Autowired\n     protected DerivedAttributeDAO derivedAttributeDAO;\n+\n     @Autowired\n     protected AttributeValueDAO attributeValueDAO;\n+\n     @Autowired\n     protected SyncopeUserDAO syncopeUserDAO;\n+\n     @Autowired\n     protected ResourceDAO resourceDAO;\n+\n     @Autowired\n     protected MembershipDAO membershipDAO;\n \n@@ -96,12 +105,12 @@ private <T extends AbstractSchema> T getSchema(\n                 LOG.debug(\"Ignoring invalid schema \" + schemaName);\n             }\n         } else if (schema.isVirtual() || schema.isReadonly()) {\n-            schema = null;\n+                schema = null;\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Ignoring virtual or readonly schema \" + schemaName);\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.debug(\"Ignoring virtual or readonly schema \" + schemaName);\n+                }\n             }\n-        }\n \n         return schema;\n     }\n@@ -119,24 +128,23 @@ private <T extends AbstractDerivedSchema> T getDerivedSchema(\n         return derivedSchema;\n     }\n \n-    private TargetResource getResource(String resourceName) {\n+    private TargetResource getResource(final String resourceName) {\n         TargetResource resource = resourceDAO.find(resourceName);\n \n-        if (resource == null) {\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Ignoring invalid resource \" + resourceName);\n-            }\n+        if (resource == null && LOG.isDebugEnabled()) {\n+            LOG.debug(\"Ignoring invalid resource \" + resourceName);\n         }\n \n         return resource;\n     }\n \n-    private void fillAttribute(Set<String> values,\n-            AttributableUtil attributableUtil,\n-            AbstractSchema schema,\n-            AbstractAttribute attribute,\n+    private void fillAttribute(\n+            final Set<String> values,\n+            final AttributableUtil attributableUtil,\n+            final AbstractSchema schema,\n+            final AbstractAttribute attribute,\n             AbstractAttributeValue attributeValue,\n-            SyncopeClientException invalidValues) {\n+            final SyncopeClientException invalidValues) {\n \n         // if the schema is multivale, all values are considered for\n         // addition, otherwise only the fist one - if provided - is\n@@ -171,8 +179,8 @@ private void fillAttribute(Set<String> values,\n     }\n \n     private <T extends AbstractSchema> SyncopeClientException checkMandatory(\n-            Class<T> referenceSchema,\n-            AbstractAttributable attributable) {\n+            final Class<T> referenceSchema,\n+            final AbstractAttributable attributable) {\n \n         SyncopeClientException requiredValuesMissing =\n                 new SyncopeClientException(\n@@ -208,22 +216,19 @@ private <T extends AbstractSchema> SyncopeClientException checkMandatory(\n     }\n \n     protected ResourceOperations fill(\n-            AbstractAttributable attributable,\n-            AbstractAttributableMod attributableMod,\n-            AttributableUtil attributableUtil,\n-            SyncopeClientCompositeErrorException compositeErrorException)\n+            final AbstractAttributable attributable,\n+            final AbstractAttributableMod attributableMod,\n+            final AttributableUtil attributableUtil,\n+            final SyncopeClientCompositeErrorException compositeErrorException)\n             throws SyncopeClientCompositeErrorException {\n \n         ResourceOperations resourceOperations = new ResourceOperations();\n \n         SyncopeClientException invalidValues = new SyncopeClientException(\n                 SyncopeClientExceptionType.InvalidValues);\n \n-        AbstractSchema schema = null;\n-        AbstractAttribute attribute = null;\n-        AbstractAttributeValue attributeValue = null;\n-        AbstractDerivedSchema derivedSchema = null;\n-        AbstractDerivedAttribute derivedAttribute = null;\n+        AbstractSchema schema;\n+        AbstractAttribute attribute;\n \n         // 1. attributes to be removed\n         for (String attributeToBeRemoved :\n@@ -262,8 +267,10 @@ protected ResourceOperations fill(\n             LOG.debug(\"About attributes to be removed:\\n\" + resourceOperations);\n         }\n \n+        AbstractAttributeValue attributeValue = null;\n+\n         // 2. attributes to be updated\n-        Set<Long> valuesToBeRemoved = null;\n+        Set<Long> valuesToBeRemoved;\n         for (AttributeMod attributeMod :\n                 attributableMod.getAttributesToBeUpdated()) {\n \n@@ -333,6 +340,9 @@ protected ResourceOperations fill(\n             LOG.debug(\"About attributes to be updated:\\n\" + resourceOperations);\n         }\n \n+        AbstractDerivedSchema derivedSchema;\n+        AbstractDerivedAttribute derivedAttribute;\n+\n         // 3. derived attributes to be removed\n         for (String derivedAttributeToBeRemoved :\n                 attributableMod.getDerivedAttributesToBeRemoved()) {"}]}