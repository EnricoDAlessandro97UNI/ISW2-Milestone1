{"sha":"14c89a0cc00308adfc0a988413a1a44b77eecce3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE0Yzg5YTBjYzAwMzA4YWRmYzBhOTg4NDEzYTFhNDRiNzdlZWNjZTM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-03T14:06:08Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-03T14:06:08Z"},"message":"Improving exception reporting from identity connectors to propagation manager\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246766 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"49d54fc55dedf66c7d2aab069e5c5851be55a2a4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/49d54fc55dedf66c7d2aab069e5c5851be55a2a4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/14c89a0cc00308adfc0a988413a1a44b77eecce3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/14c89a0cc00308adfc0a988413a1a44b77eecce3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/14c89a0cc00308adfc0a988413a1a44b77eecce3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/14c89a0cc00308adfc0a988413a1a44b77eecce3/comments","author":null,"committer":null,"parents":[{"sha":"5f9e9446bcb02992804b4b9de96b8b047fc76845","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5f9e9446bcb02992804b4b9de96b8b047fc76845","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5f9e9446bcb02992804b4b9de96b8b047fc76845"}],"stats":{"total":495,"additions":194,"deletions":301},"files":[{"sha":"7d8726ca3512e8e8adfb7bee2293575a37ff1ab7","filename":"core/src/main/java/jpasymphony/workflow/spi/jpa/JPAWorkflowStore.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fworkflow%2Fspi%2Fjpa%2FJPAWorkflowStore.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fworkflow%2Fspi%2Fjpa%2FJPAWorkflowStore.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Fjpasymphony%2Fworkflow%2Fspi%2Fjpa%2FJPAWorkflowStore.java?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -175,7 +175,6 @@ public Step markFinished(final Step step,\n \n         currentStep.setActionId(actionId);\n         currentStep.setFinishDate(finishDate);\n-        currentStep.setStatus(status);\n         currentStep.setCaller(caller);\n \n         workflowEntryDAO.save(currentStep.getWorkflowEntry());"},{"sha":"b5abd7a283193195825454860ccd87af8f8370f4","filename":"core/src/main/java/org/syncope/core/persistence/propagation/ConnectorFacadeProxy.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FConnectorFacadeProxy.java?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -167,9 +167,6 @@ public Uid create(\n             }\n \n             result = connector.create(oclass, attrs, options);\n-            if (result == null) {\n-                throw new IllegalStateException(\"Error creating user\");\n-            }\n         }\n \n         return result;\n@@ -238,9 +235,6 @@ public Uid update(final PropagationMode propagationMode,\n \n             result = connector.update(\n                     objclass, uid, replaceAttributes, options);\n-            if (result == null) {\n-                throw new IllegalStateException(\"Error updating user\");\n-            }\n         }\n \n         return result;"},{"sha":"c5fdbfec81a931c328770373854eb0c362166b61","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -26,6 +26,7 @@\n import java.util.Set;\n import javax.annotation.Resource;\n import org.identityconnectors.framework.common.FrameworkUtil;\n+import org.identityconnectors.framework.common.exceptions.ConnectorException;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.Name;\n@@ -549,9 +550,14 @@ public void propagate(final TaskExecution execution) {\n             LOG.error(\"Exception during provision on resource \"\n                     + task.getResource().getName(), t);\n \n-            StringWriter execeptionWriter = new StringWriter();\n-            t.printStackTrace(new PrintWriter(execeptionWriter));\n-            taskExecutionMessage = execeptionWriter.toString();\n+            if (t instanceof ConnectorException && t.getCause() != null) {\n+                taskExecutionMessage = t.getCause().getMessage();\n+            } else {\n+                StringWriter exceptionWriter = new StringWriter();\n+                exceptionWriter.write(t.getMessage() + \"\\n\\n\");\n+                t.printStackTrace(new PrintWriter(exceptionWriter));\n+                taskExecutionMessage = exceptionWriter.toString();\n+            }\n \n             try {\n                 WFUtils.doExecuteAction(workflow,"},{"sha":"75b9cc7fcdf86b209684ab9c41862d5c6bcf502d","filename":"core/src/main/java/org/syncope/core/workflow/WFUtils.java","status":"modified","additions":16,"deletions":9,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWFUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWFUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWFUtils.java?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -18,7 +18,6 @@\n import com.opensymphony.workflow.Workflow;\n import com.opensymphony.workflow.WorkflowException;\n import com.opensymphony.workflow.loader.ActionDescriptor;\n-import com.opensymphony.workflow.loader.StepDescriptor;\n import com.opensymphony.workflow.loader.WorkflowDescriptor;\n import com.opensymphony.workflow.spi.Step;\n import java.util.HashMap;\n@@ -105,18 +104,26 @@ public static TaskExecutionStatus getTaskExecutionStatus(\n         TaskExecutionStatus result;\n \n         try {\n-            List<Step> currentSteps =\n+            List<Step> steps =\n                     workflow.getCurrentSteps(execution.getWorkflowId());\n-            if (currentSteps != null && !currentSteps.isEmpty()) {\n+            if (steps != null && !steps.isEmpty()) {\n                 result = TaskExecutionStatus.valueOf(\n-                        currentSteps.iterator().next().getStatus());\n+                        steps.iterator().next().getStatus());\n             } else {\n-                int wfState = workflow.getEntryState(execution.getWorkflowId());\n-                WorkflowDescriptor wfDesc = workflow.getWorkflowDescriptor(\n-                        Constants.TASKEXECUTION_WORKFLOW);\n-                StepDescriptor stepDesc = wfDesc.getStep(wfState);\n+                steps = workflow.getHistorySteps(execution.getWorkflowId());\n+                Step newestStep = steps.get(0);\n+                if (steps.size() > 1) {\n+                    for (int i = 1; i < steps.size(); i++) {\n+                        if (newestStep.getFinishDate().getTime()\n+                                < steps.get(i).getFinishDate().getTime()) {\n+\n+                            newestStep = steps.get(i);\n+                        }\n+                    }\n+                }\n \n-                result = TaskExecutionStatus.valueOf(stepDesc.getName());\n+                result = TaskExecutionStatus.valueOf(\n+                        newestStep.getStatus());\n             }\n         } catch (Throwable t) {\n             LOG.error(\"While getting status of {}\", execution, t);"},{"sha":"219793cc6282f82ca9c802446b0eb5aa4e608d6e","filename":"identityconnectors/bundles/staticws/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fpom.xml?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -25,7 +25,7 @@\n     <groupId>org.syncope.identityconnectors.bundles.staticws</groupId>\n     <artifactId>staticws</artifactId>\n \n-    <name>IdentityConnectors: bundles: static web service</name>\n+    <name>IdentityConnectors: bundles: static WS</name>\n     <description>bundles</description>\n \n     <packaging>pom</packaging>"},{"sha":"64edfda9e4087f5c3650e599c418fd5291e7f9ae","filename":"identityconnectors/bundles/staticws/staticwebservice/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fpom.xml?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -25,7 +25,7 @@\n     <groupId>org.syncope.identityconnectors.bundles.staticws</groupId>\n     <artifactId>staticwebservice</artifactId>\n \n-    <name>identityconnectors: bundles: static web service: connector</name>\n+    <name>identityconnectors: bundles: static WS: connector</name>\n     <url>http://maven.apache.org</url>\n \n     <packaging>jar</packaging>"},{"sha":"214c15a0df41144ab58669c9af38e6e00b7c9e27","filename":"identityconnectors/bundles/staticws/staticwebservice/src/main/java/org/syncope/identityconnectors/bundles/staticwebservice/WebServiceConnector.java","status":"modified","additions":82,"deletions":160,"changes":242,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2FWebServiceConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2FWebServiceConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fstaticwebservice%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2FWebServiceConnector.java?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -11,7 +11,7 @@\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.framework.common.objects.filter.FilterTranslator;\n import org.identityconnectors.common.security.GuardedString;\n-import org.identityconnectors.framework.common.exceptions.InvalidCredentialException;\n+import org.identityconnectors.framework.common.exceptions.ConnectorException;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.AttributeInfo;\n@@ -107,15 +107,12 @@ public Configuration getConfiguration() {\n \n     /**\n      * Callback method to receive the {@link Configuration}.\n-     * \n+     * @param cfg connector configuration\n      * @see Connector#init\n      */\n     @Override\n-    public void init(Configuration cfg) {\n-\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Connector initialization\");\n-        }\n+    public void init(final Configuration cfg) {\n+        LOG.debug(\"Connector initialization\");\n \n         this.config = (WebServiceConfiguration) cfg;\n         this.connection = new WebServiceConnection(this.config);\n@@ -128,10 +125,7 @@ public void init(Configuration cfg) {\n      */\n     @Override\n     public void dispose() {\n-\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Dispose connector resources\");\n-        }\n+        LOG.debug(\"Dispose connector resources\");\n \n         config = null;\n \n@@ -149,10 +143,7 @@ public void dispose() {\n      */\n     @Override\n     public void checkAlive() {\n-\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Connection test\");\n-        }\n+        LOG.debug(\"Connection test\");\n \n         connection.test();\n     }\n@@ -167,9 +158,7 @@ public Uid authenticate(\n             final GuardedString password,\n             final OperationOptions options) {\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"User uthentication\");\n-        }\n+        LOG.debug(\"User uthentication\");\n \n         // check objectclass\n         if (objectClass == null || (!objectClass.equals(ObjectClass.ACCOUNT))) {\n@@ -187,22 +176,14 @@ public Uid authenticate(\n             throw new IllegalStateException(\"Web Service client not found\");\n         }\n \n-        String accountid = null;\n-\n         try {\n-\n-            accountid =\n-                    provisioning.authenticate(username, password.toString());\n-\n+            return new Uid(\n+                    provisioning.authenticate(username, password.toString()));\n         } catch (ProvisioningException e) {\n-            if (LOG.isErrorEnabled()) {\n-                LOG.error(\"Authentication failed\", e);\n-            }\n-\n-            throw new InvalidCredentialException(\"Authentication failed\");\n+            throw new ConnectorException(\"Authentication failed\", e);\n+        } catch (Throwable t) {\n+            throw new ConnectorException(\"Communication exception\", t);\n         }\n-\n-        return new Uid(accountid);\n     }\n \n     /**\n@@ -214,9 +195,7 @@ public Uid create(\n             final Set<Attribute> attrs,\n             final OperationOptions options) {\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Account creation\");\n-        }\n+        LOG.debug(\"Account creation\");\n \n         // check objectclass\n         if (objClass == null || (!objClass.equals(ObjectClass.ACCOUNT))) {\n@@ -239,11 +218,8 @@ public Uid create(\n         if (name == null) {\n             throw new IllegalArgumentException(\"No name specified\");\n         }\n-        final String accountName = name.getNameValue();\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Account to be created: \" + accountName);\n-        }\n+        LOG.debug(\"Account to be created: \" + name.getNameValue());\n \n         // to be user in order to pass information to the web service\n         final List<WSAttributeValue> attributes =\n@@ -292,25 +268,20 @@ public Uid create(\n             }\n         }\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\n-                    \"\\nUser \" + accountName\n-                    + \"\\n\\tattributes: \" + attributes.size());\n-        }\n+        LOG.debug(\"\\nUser \" + name.getNameValue()\n+                + \"\\n\\tattributes: \" + attributes.size());\n \n         try {\n-\n             // user creation\n             provisioning.create(attributes);\n-\n         } catch (ProvisioningException e) {\n-            if (LOG.isErrorEnabled()) {\n-                LOG.error(\"Creation failed\", e);\n-            }\n+            throw new ConnectorException(\"Creation failed\", e);\n+        } catch (Throwable t) {\n+            throw new ConnectorException(\"Communication exception\", t);\n         }\n \n         // return Uid\n-        return new Uid(accountName);\n+        return new Uid(name.getNameValue());\n     }\n \n     /**\n@@ -322,29 +293,25 @@ public void delete(\n             final Uid uid,\n             final OperationOptions options) {\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Account deletion\");\n-        }\n+        LOG.debug(\"Account deletion\");\n \n         // check objectclass\n         if (objClass == null || (!objClass.equals(ObjectClass.ACCOUNT))) {\n             throw new IllegalArgumentException(\"Invalid objectclass\");\n         }\n \n-        final String accountName = uid.getUidValue();\n-\n         // get web service client\n         Provisioning provisioning = connection.getProvisioning();\n         if (provisioning == null) {\n             throw new IllegalStateException(\"Web Service client not found\");\n         }\n \n         try {\n-            provisioning.delete(accountName);\n+            provisioning.delete(uid.getUidValue());\n         } catch (ProvisioningException e) {\n-            if (LOG.isErrorEnabled()) {\n-                LOG.error(\"Deletion failed\", e);\n-            }\n+            throw new ConnectorException(\"Deletion failed\", e);\n+        } catch (Throwable t) {\n+            throw new ConnectorException(\"Communication exception\", t);\n         }\n     }\n \n@@ -353,10 +320,7 @@ public void delete(\n      */\n     @Override\n     public Schema schema() {\n-\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Schema retrieving\");\n-        }\n+        LOG.debug(\"Schema retrieving\");\n \n         Provisioning provisioning = connection.getProvisioning();\n \n@@ -379,25 +343,20 @@ public Schema schema() {\n             wsAttributes.put(getAttributeName(attribute), attribute);\n \n             if (LOG.isDebugEnabled()) {\n-                LOG.debug(\n-                        \"\\nAttribute: \" + \"\\n\\tName: \" + attribute.getName()\n+                LOG.debug(\"\\nAttribute: \"\n+                        + \"\\n\\tName: \" + attribute.getName()\n                         + \"\\n\\tType: \" + attribute.getType()\n                         + \"\\n\\tIsKey: \" + attribute.isKey()\n                         + \"\\n\\tIsPassword: \" + attribute.isPassword()\n                         + \"\\n\\tIsNullable: \" + attribute.isNullable());\n             }\n \n             try {\n-\n                 attributes.add(buildAttribute(attribute));\n-\n             } catch (IllegalArgumentException ila) {\n \n-                if (LOG.isErrorEnabled()) {\n-                    LOG.error(\"Invalid attribute \" + attribute.getName(), ila);\n-                }\n+                LOG.error(\"Invalid attribute \" + attribute.getName(), ila);\n             }\n-\n         }\n \n         final SchemaBuilder schemaBld = new SchemaBuilder(getClass());\n@@ -420,20 +379,14 @@ public Schema schema() {\n          * acquire the implemented interfaces by the connector class.\n          */\n         if (!provisioning.isAuthenticationSupported()) {\n-\n-            if (LOG.isDebugEnabled()) {\n-                LOG.info(\"Authentication is not supported.\");\n-            }\n+            LOG.debug(\"Authentication is not supported.\");\n \n             schemaBld.removeSupportedObjectClass(\n                     AuthenticateOp.class, objectclassInfo);\n         }\n \n         if (!provisioning.isSyncSupported()) {\n-\n-            if (LOG.isDebugEnabled()) {\n-                LOG.info(\"Synchronization is not supported.\");\n-            }\n+            LOG.debug(\"Synchronization is not supported.\");\n \n             schemaBld.removeSupportedObjectClass(\n                     SyncOp.class, objectclassInfo);\n@@ -448,30 +401,27 @@ public Schema schema() {\n      */\n     @Override\n     public FilterTranslator<Operand> createFilterTranslator(\n-            ObjectClass oclass,\n-            OperationOptions options) {\n+            final ObjectClass oclass,\n+            final OperationOptions options) {\n \n         if (oclass == null || (!oclass.equals(ObjectClass.ACCOUNT))) {\n             throw new IllegalArgumentException(\"Invalid objectclass\");\n         }\n \n         return new WebServiceFilterTranslator();\n-\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     @Override\n     public void executeQuery(\n-            ObjectClass objClass,\n-            Operand query,\n-            ResultsHandler handler,\n-            OperationOptions options) {\n+            final ObjectClass objClass,\n+            final Operand query,\n+            final ResultsHandler handler,\n+            final OperationOptions options) {\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Execute query\");\n-        }\n+        LOG.debug(\"Execute query: \" + query);\n \n         // check objectclass\n         if (objClass == null || (!objClass.equals(ObjectClass.ACCOUNT))) {\n@@ -490,33 +440,23 @@ public void executeQuery(\n         }\n \n         try {\n-\n             List<WSUser> resultSet = provisioning.query(query);\n-\n             if (resultSet == null) {\n                 return;\n             }\n \n-            Iterator i = resultSet.iterator();\n-\n-            WSUser user = null;\n+            WSUser user;\n             boolean handle = true;\n+            for (Iterator<WSUser> i = resultSet.iterator();\n+                    i.hasNext() && handle;) {\n \n-            while (i.hasNext() && handle) {\n-                user = (WSUser) i.next();\n-\n-                if (LOG.isDebugEnabled()) {\n-                    LOG.debug(\"Found user: \" + user.getAccountid());\n-                }\n+                user = i.next();\n+                LOG.debug(\"Found user: \" + user.getAccountid());\n \n                 handle = handler.handle(\n                         buildConnectorObject(user.getAttributes()).build());\n-\n-                if (LOG.isDebugEnabled()) {\n-                    LOG.debug(\"Handle:\" + handle);\n-                }\n+                LOG.debug(\"Handle:\" + handle);\n             }\n-\n         } catch (Exception e) {\n             throw new IllegalArgumentException(e);\n         }\n@@ -534,10 +474,11 @@ public void test() {\n      * {@inheritDoc}\n      */\n     @Override\n-    public Uid update(ObjectClass objclass,\n-            Uid uid,\n-            Set<Attribute> replaceAttributes,\n-            OperationOptions options) {\n+    public Uid update(final ObjectClass objclass,\n+            final Uid uid,\n+            final Set<Attribute> replaceAttributes,\n+            final OperationOptions options) {\n+\n         // check objectclass\n         if (objclass == null || (!objclass.equals(ObjectClass.ACCOUNT))) {\n             throw new IllegalArgumentException(\"Invalid objectclass\");\n@@ -583,8 +524,7 @@ public Uid update(ObjectClass objclass,\n             }\n \n             if (LOG.isDebugEnabled()) {\n-                LOG.debug(\n-                        \"\\nAttribute: \"\n+                LOG.debug(\"\\nAttribute: \"\n                         + \"\\n\\tName: \" + wsAttribute.getName()\n                         + \"\\n\\tIsKey: \" + wsAttribute.isKey()\n                         + \"\\n\\tIsPassword: \" + wsAttribute.isPassword());\n@@ -609,14 +549,12 @@ public Uid update(ObjectClass objclass,\n         Uid uuid = null;\n \n         try {\n-\n             // user creation\n             uuid = new Uid(provisioning.update(uid.getUidValue(), attributes));\n-\n         } catch (ProvisioningException e) {\n-            if (LOG.isErrorEnabled()) {\n-                LOG.error(\"Creation failed\", e);\n-            }\n+            throw new ConnectorException(\"Update failed\", e);\n+        } catch (Throwable t) {\n+            throw new ConnectorException(\"Communication exception\", t);\n         }\n \n         return uuid;\n@@ -627,9 +565,9 @@ public Uid update(ObjectClass objclass,\n      */\n     @Override\n     public void sync(\n-            ObjectClass objClass,\n-            SyncToken token,\n-            SyncResultsHandler handler,\n+            final ObjectClass objClass,\n+            final SyncToken token,\n+            final SyncResultsHandler handler,\n             final OperationOptions options) {\n \n         // check objectclass\n@@ -649,25 +587,19 @@ public void sync(\n         }\n \n         try {\n-\n             List<WSChange> changes = provisioning.sync();\n \n             SyncDeltaBuilder sdb = null;\n \n-            Iterator i = changes.iterator();\n             boolean handle = true;\n+            for (Iterator<WSChange> i = changes.iterator();\n+                    i.hasNext() && handle;) {\n \n-            while (i.hasNext() && handle) {\n-\n-                sdb = buildSyncDelta((WSChange) i.next());\n+                sdb = buildSyncDelta(i.next());\n                 handle = handler.handle(sdb.build());\n-\n             }\n-\n         } catch (ProvisioningException e) {\n-            if (LOG.isErrorEnabled()) {\n-                LOG.error(\"Synchronization failed\");\n-            }\n+            LOG.error(\"Synchronization failed\");\n \n             throw new IllegalStateException(e);\n         }\n@@ -677,7 +609,7 @@ public void sync(\n      * {@inheritDoc}\n      */\n     @Override\n-    public SyncToken getLatestSyncToken(ObjectClass objectClass) {\n+    public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n \n         // check objectclass\n         if (objectClass == null || (!objectClass.equals(ObjectClass.ACCOUNT))) {\n@@ -693,21 +625,19 @@ public SyncToken getLatestSyncToken(ObjectClass objectClass) {\n         SyncToken token = null;\n \n         try {\n-\n             token = new SyncToken(provisioning.getLatestChangeNumber());\n-\n         } catch (ProvisioningException e) {\n-            if (LOG.isErrorEnabled()) {\n-                LOG.error(\"Resolve username failed\", e);\n-            }\n+            throw new ConnectorException(\"getLatestSyncToken failed\", e);\n+        } catch (Throwable t) {\n+            throw new ConnectorException(\"Communication exception\", t);\n         }\n \n         return token;\n     }\n \n     @Override\n-    public Uid resolveUsername(ObjectClass objectClass, String username,\n-            OperationOptions options) {\n+    public Uid resolveUsername(final ObjectClass objectClass,\n+            final String username, final OperationOptions options) {\n \n         // check objectclass\n         if (objectClass == null || (!objectClass.equals(ObjectClass.ACCOUNT))) {\n@@ -725,18 +655,19 @@ public Uid resolveUsername(ObjectClass objectClass, String username,\n             throw new IllegalStateException(\"Web Service client not found\");\n         }\n \n-        Uid uuid = null;\n+        String uid = null;\n         try {\n-            String uid = provisioning.resolve(username);\n-            uuid = new Uid(uid);\n+            uid = provisioning.resolve(username);\n         } catch (ProvisioningException e) {\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Resolve username failed\", e);\n-            }\n-        } catch (IllegalArgumentException e) {\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Unexpected exception while resolving username\", e);\n-            }\n+            throw new ConnectorException(\"Resolve failed\", e);\n+        } catch (Throwable t) {\n+            throw new ConnectorException(\"Communication exception\", t);\n+        }\n+\n+        Uid uuid = null;\n+        if (uid != null) {\n+            LOG.debug(\"Not able to resolve '\" + username + \"'\");\n+            uuid = new Uid(uid);\n         }\n \n         return uuid;\n@@ -746,7 +677,6 @@ private AttributeInfo buildAttribute(WSAttribute attribute) {\n         final AttributeInfoBuilder builder = new AttributeInfoBuilder();\n \n         try {\n-\n             if (attribute.isPassword()) {\n                 return OperationalAttributeInfos.PASSWORD;\n             }\n@@ -766,27 +696,19 @@ private AttributeInfo buildAttribute(WSAttribute attribute) {\n             builder.setRequired(attribute.isNullable());\n \n             return builder.build();\n-\n         } catch (ClassNotFoundException e) {\n-\n-            if (LOG.isErrorEnabled()) {\n-                LOG.error(\"Invalid data type\", e);\n-            }\n+            LOG.error(\"Invalid data type\", e);\n \n             throw new IllegalArgumentException(e);\n-\n         } catch (Throwable t) {\n-\n-            if (LOG.isErrorEnabled()) {\n-                LOG.error(\"Unexpected exception\", t);\n-            }\n+            LOG.error(\"Unexpected exception\", t);\n \n             throw new IllegalArgumentException(t);\n         }\n     }\n \n     private ConnectorObjectBuilder buildConnectorObject(\n-            Set<WSAttributeValue> attributes) {\n+            final Set<WSAttributeValue> attributes) {\n \n         ConnectorObjectBuilder bld = new ConnectorObjectBuilder();\n \n@@ -828,7 +750,7 @@ private ConnectorObjectBuilder buildConnectorObject(\n         return bld;\n     }\n \n-    private String getAttributeName(WSAttribute attribute) {\n+    private String getAttributeName(final WSAttribute attribute) {\n         String attributeName = null;\n \n         if (attribute.isKey()) {\n@@ -846,7 +768,7 @@ private String getAttributeName(WSAttribute attribute) {\n         return attributeName;\n     }\n \n-    private SyncDeltaBuilder buildSyncDelta(WSChange change) {\n+    private SyncDeltaBuilder buildSyncDelta(final WSChange change) {\n         SyncDeltaBuilder bld = new SyncDeltaBuilder();\n \n         ConnectorObject object ="},{"sha":"0b1ac6c3957914b4fefdb1d4d36b00edc6cfe17c","filename":"identityconnectors/bundles/staticws/utilities/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Futilities%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Futilities%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Futilities%2Fpom.xml?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -25,7 +25,7 @@\n     <groupId>org.syncope.identityconnectors.bundles.staticws</groupId>\n     <artifactId>utilities</artifactId>\n \n-    <name>identityconnectors: bundles: static web service: utilities</name>\n+    <name>identityconnectors: bundles: static WS: utilities</name>\n     <url>http://maven.apache.org</url>\n \n     <packaging>jar</packaging>"},{"sha":"ce9fca21ea92f5b63f1bda73d93ab784eb491c3e","filename":"identityconnectors/bundles/staticws/utilities/src/main/java/org/syncope/identityconnectors/bundles/staticwebservice/exceptions/ProvisioningException.java","status":"modified","additions":25,"deletions":9,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Futilities%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fexceptions%2FProvisioningException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Futilities%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fexceptions%2FProvisioningException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Futilities%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fexceptions%2FProvisioningException.java?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -14,22 +14,38 @@\n  */\n package org.syncope.identityconnectors.bundles.staticwebservice.exceptions;\n \n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n import javax.xml.ws.WebFault;\n \n @WebFault(name = \"ProvisioningException\")\n public class ProvisioningException extends Exception {\n \n-    /**\n-     * Creates a new instance of <code>ProvisioningException</code> without detail message.\n-     */\n-    public ProvisioningException() {\n-    }\n+    private String wrappedCause;\n \n-    /**\n-     * Constructs an instance of <code>ProvisioningException</code> with the specified detail message.\n-     * @param msg the detail message.\n-     */\n     public ProvisioningException(String msg) {\n         super(msg);\n     }\n+\n+    public ProvisioningException(final String msg, final Throwable cause) {\n+        super(msg, cause);\n+\n+        StringWriter exceptionWriter = new StringWriter();\n+        exceptionWriter.write(cause.getMessage() + \"\\n\\n\");\n+        cause.printStackTrace(new PrintWriter(exceptionWriter));\n+        wrappedCause = exceptionWriter.toString();\n+    }\n+\n+    @Override\n+    public String getMessage() {\n+        return wrappedCause != null ? wrappedCause : super.getMessage();\n+    }\n+\n+    public String getWrappedCause() {\n+        return wrappedCause;\n+    }\n+\n+    public void setWrappedCause(String wrappedCause) {\n+        this.wrappedCause = wrappedCause;\n+    }\n }"},{"sha":"d4f295bd84614b8a907f5b536a07a4a9137e845e","filename":"identityconnectors/bundles/staticws/utilities/src/main/java/org/syncope/identityconnectors/bundles/staticwebservice/provisioning/interfaces/Provisioning.java","status":"modified","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Futilities%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fprovisioning%2Finterfaces%2FProvisioning.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Futilities%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fprovisioning%2Finterfaces%2FProvisioning.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Futilities%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fprovisioning%2Finterfaces%2FProvisioning.java?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -33,14 +33,14 @@ public interface Provisioning {\n      * @return true if the resource support authentication.\n      */\n     @WebMethod(operationName = \"isAuthenticationSupported\")\n-    public Boolean isAuthenticationSupported();\n+    Boolean isAuthenticationSupported();\n \n     /**\n      * Checks if synchronization is supported.\n      * @return true if the resource support synchronization.\n      */\n     @WebMethod(operationName = \"isSyncSupported\")\n-    public Boolean isSyncSupported();\n+    Boolean isSyncSupported();\n \n     /**\n      * Verify user creentials\n@@ -52,7 +52,7 @@ public interface Provisioning {\n      * ProvisioningException in case of authentication failed.\n      */\n     @WebMethod(operationName = \"authenticate\")\n-    public String authenticate(\n+    String authenticate(\n             @WebParam(name = \"username\") final String username,\n             @WebParam(name = \"password\") final String password)\n             throws ProvisioningException;\n@@ -62,14 +62,14 @@ public String authenticate(\n      * @return the string \"OK\" in case of availability of the resource.\n      */\n     @WebMethod(operationName = \"checkAlive\")\n-    public String checkAlive();\n+    String checkAlive();\n \n     /**\n      * Returns the schema.\n      * @return a set of attributes.\n      */\n     @WebMethod(operationName = \"schema\")\n-    public List<WSAttribute> schema();\n+    List<WSAttribute> schema();\n \n     /**\n      * Creates user account.\n@@ -78,8 +78,7 @@ public String authenticate(\n      * @throws ProvisioningException in case of failure.\n      */\n     @WebMethod(operationName = \"create\")\n-    public String create(\n-            @WebParam(name = \"data\") final List<WSAttributeValue> data)\n+    String create(@WebParam(name = \"data\") final List<WSAttributeValue> data)\n             throws ProvisioningException;\n \n     /**\n@@ -90,7 +89,7 @@ public String create(\n      * @throws ProvisioningException in case of failure\n      */\n     @WebMethod(operationName = \"update\")\n-    public String update(\n+    String update(\n             @WebParam(name = \"accountid\") final String accountid,\n             @WebParam(name = \"data\") final List<WSAttributeValue> data)\n             throws ProvisioningException;\n@@ -102,7 +101,7 @@ public String update(\n      * @throws ProvisioningException in case of failure.\n      */\n     @WebMethod(operationName = \"delete\")\n-    public String delete(@WebParam(name = \"accountid\") final String accountid)\n+    String delete(@WebParam(name = \"accountid\") final String accountid)\n             throws ProvisioningException;\n \n     /**\n@@ -111,16 +110,16 @@ public String delete(@WebParam(name = \"accountid\") final String accountid)\n      * @return a set of user accounts.\n      */\n     @WebMethod(operationName = \"query\")\n-    public List<WSUser> query(@WebParam(name = \"query\") final Operand query);\n+    List<WSUser> query(@WebParam(name = \"query\") final Operand query);\n \n     /**\n      * Returns accountid related to the specified username.\n      * @param username.\n-     * @return accountid.\n-     * @throws ProvisioningException in case of failure or username not found.\n+     * @return accountid or null if username not found\n+     * @throws ProvisioningException in case of failure.\n      */\n     @WebMethod(operationName = \"resolve\")\n-    public String resolve(@WebParam(name = \"username\") final String username)\n+    String resolve(@WebParam(name = \"username\") final String username)\n             throws ProvisioningException;\n \n     /**\n@@ -129,7 +128,7 @@ public String resolve(@WebParam(name = \"username\") final String username)\n      * @throws ProvisioningException in case of failure.\n      */\n     @WebMethod(operationName = \"getLatestChangeNumber\")\n-    public int getLatestChangeNumber()\n+    int getLatestChangeNumber()\n             throws ProvisioningException;\n \n     /**\n@@ -138,6 +137,6 @@ public int getLatestChangeNumber()\n      * @throws ProvisioningException in case of failure\n      */\n     @WebMethod(operationName = \"sync\")\n-    public List<WSChange> sync()\n+    List<WSChange> sync()\n             throws ProvisioningException;\n }"},{"sha":"53d8ddb96e85cb9d415a94929e2889998fe78f99","filename":"identityconnectors/bundles/staticws/ws-target-resource/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fpom.xml?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -25,7 +25,7 @@\n     <groupId>org.syncope.identityconnectors.bundles.staticws</groupId>\n     <artifactId>ws-target-resource</artifactId>\n \n-    <name>identityconnectors: bundles: static web service: ws provisioning sample</name>\n+    <name>identityconnectors: bundles: static WS: sample impl</name>\n     <url>http://maven.apache.org</url>\n \n     <packaging>war</packaging>"},{"sha":"4ca0985af8a4a54127b98e5e46a4576ae4ea9a39","filename":"identityconnectors/bundles/staticws/ws-target-resource/src/main/java/org/syncope/identityconnectors/bundles/staticwebservice/wstarget/ProvisioningImpl.java","status":"modified","additions":44,"deletions":94,"changes":138,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14c89a0cc00308adfc0a988413a1a44b77eecce3/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/identityconnectors%2Fbundles%2Fstaticws%2Fws-target-resource%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fidentityconnectors%2Fbundles%2Fstaticwebservice%2Fwstarget%2FProvisioningImpl.java?ref=14c89a0cc00308adfc0a988413a1a44b77eecce3","patch":"@@ -36,7 +36,9 @@\n import org.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning;\n import org.syncope.identityconnectors.bundles.staticwebservice.utilities.Operand;\n \n-@WebService(endpointInterface = \"org.syncope.identityconnectors.bundles.staticwebservice.provisioning.interfaces.Provisioning\",\n+@WebService(endpointInterface =\n+\"org.syncope.identityconnectors.bundles.staticwebservice.provisioning.\"\n++ \"interfaces.Provisioning\",\n serviceName = \"Provisioning\")\n public class ProvisioningImpl implements Provisioning {\n \n@@ -49,12 +51,10 @@ public class ProvisioningImpl implements Provisioning {\n     @Override\n     public String delete(String accountid)\n             throws ProvisioningException {\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n \n-        Connection conn = null;\n+        LOG.debug(\"Delete request received\");\n \n+        Connection conn = null;\n         try {\n             conn = connect();\n \n@@ -63,16 +63,13 @@ public String delete(String accountid)\n             String query =\n                     \"DELETE FROM user WHERE userId='\" + accountid + \"';\";\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Execute query: \" + query);\n-            }\n+            LOG.debug(\"Execute query: \" + query);\n \n             statement.executeUpdate(query);\n \n             return accountid;\n-\n-        } catch (SQLException ex) {\n-            throw new ProvisioningException(\"Delete operation failed\");\n+        } catch (SQLException e) {\n+            throw new ProvisioningException(\"Delete operation failed\", e);\n         } finally {\n \n             if (conn != null) {\n@@ -82,52 +79,41 @@ public String delete(String accountid)\n                     // ignore exception\n                 }\n             }\n-\n         }\n     }\n \n     @Override\n     public Boolean isSyncSupported() {\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n+        LOG.debug(\"isSyncSupported request received\");\n \n         return Boolean.FALSE;\n     }\n \n     @Override\n     public String checkAlive() {\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n+        LOG.debug(\"checkAlive request received\");\n \n+        String result;\n         try {\n-\n             close(connect());\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Services available\");\n-            }\n-\n-            return \"OK\";\n+            LOG.debug(\"Services available\");\n \n+            result = \"OK\";\n         } catch (Exception e) {\n+            LOG.debug(\"Services not available\");\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Services not available\");\n-            }\n-\n-            return \"KO\";\n+            result = \"KO\";\n         }\n+\n+        return result;\n     }\n \n     @Override\n     public String update(String accountid, List<WSAttributeValue> data)\n             throws ProvisioningException {\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n+        LOG.debug(\"Update request received\");\n \n         if (data == null || data.isEmpty()) {\n             LOG.warn(\"Empty data recevied\");\n@@ -187,40 +173,33 @@ public String update(String accountid, List<WSAttributeValue> data)\n                         \"UPDATE user SET \" + set.toString()\n                         + \" WHERE userId='\" + accountid + \"';\";\n \n-                if (LOG.isDebugEnabled()) {\n-                    LOG.debug(\"Execute query: \" + query);\n-                }\n+                LOG.debug(\"Execute query: \" + query);\n \n                 statement.executeUpdate(query);\n             }\n \n             return accountid;\n-        } catch (SQLException ex) {\n-            LOG.error(\"Update failed\", ex);\n-            throw new ProvisioningException(\"Update operation failed\");\n+        } catch (SQLException e) {\n+            LOG.error(\"Update failed\", e);\n+            throw new ProvisioningException(\"Update operation failed\", e);\n         } finally {\n-\n             if (conn != null) {\n                 try {\n                     close(conn);\n                 } catch (SQLException ignore) {\n                     // ignore exception\n                 }\n             }\n-\n         }\n     }\n \n     @Override\n     public List<WSUser> query(Operand query) {\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n+        LOG.debug(\"Query request received\");\n \n         List<WSUser> results = new ArrayList<WSUser>();\n \n         Connection conn = null;\n-\n         try {\n             String queryString =\n                     \"SELECT * FROM user WHERE \" + query.toString();\n@@ -240,9 +219,7 @@ public List<WSUser> query(Operand query) {\n \n             ResultSetMetaData metaData = rs.getMetaData();\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Metadata: \" + metaData.toString());\n-            }\n+            LOG.debug(\"Metadata: \" + metaData.toString());\n \n             WSUser user = null;\n             WSAttributeValue attr = null;\n@@ -269,22 +246,17 @@ public List<WSUser> query(Operand query) {\n                 results.add(user);\n             }\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Retrieved users: \" + results);\n-            }\n-\n-        } catch (SQLException ex) {\n-            LOG.error(\"Search operation failed\", ex);\n+            LOG.debug(\"Retrieved users: \" + results);\n+        } catch (SQLException e) {\n+            LOG.error(\"Search operation failed\", e);\n         } finally {\n-\n             if (conn != null) {\n                 try {\n                     close(conn);\n                 } catch (SQLException ignore) {\n                     // ignore exception\n                 }\n             }\n-\n         }\n \n         return results;\n@@ -294,9 +266,7 @@ public List<WSUser> query(Operand query) {\n     public String create(List<WSAttributeValue> data)\n             throws ProvisioningException {\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n+        LOG.debug(\"Create request received\");\n \n         List<WSAttribute> schema = schema();\n         Set<String> schemaNames = new HashSet<String>();\n@@ -361,95 +331,78 @@ public String create(List<WSAttributeValue> data)\n             query = \"INSERT INTO user (\" + keys.toString() + \")\"\n                     + \"VALUES (\" + values.toString() + \");\";\n \n-            LOG.debug(\"Execute query: {}\", query);\n+            LOG.debug(\"Execute query: \" + query);\n \n             statement.executeUpdate(query);\n \n             return accountid;\n         } catch (SQLException e) {\n             LOG.error(\"Creation failed:\\n\" + query, e);\n-            throw new ProvisioningException(\"Create operation failed\");\n+            throw new ProvisioningException(\"Create operation failed\", e);\n         } finally {\n-\n             if (conn != null) {\n                 try {\n                     close(conn);\n                 } catch (SQLException ignore) {\n                     // ignore exception\n                 }\n             }\n-\n         }\n     }\n \n     @Override\n     public int getLatestChangeNumber()\n             throws ProvisioningException {\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n+\n+        LOG.debug(\"getLatestChangeNumber request received\");\n \n         return 0;\n     }\n \n     @Override\n     public List<WSChange> sync()\n             throws ProvisioningException {\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n+\n+        LOG.debug(\"sync request received\");\n \n         return Collections.EMPTY_LIST;\n     }\n \n     @Override\n     public String resolve(String username)\n             throws ProvisioningException {\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n \n-        Connection conn = null;\n+        LOG.debug(\"Resolve request operation received: \" + username);\n \n+        Connection conn = null;\n         try {\n             conn = connect();\n             Statement statement = conn.createStatement();\n \n             String query =\n                     \"SELECT userId FROM user WHERE userId='\" + username + \"';\";\n \n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Execute query: \" + query);\n-            }\n+            LOG.debug(\"Execute query: \" + query);\n \n             ResultSet rs = statement.executeQuery(query);\n \n-            if (rs.next()) {\n-                return rs.getString(1);\n-            } else {\n-                return null;\n-            }\n-\n-        } catch (SQLException ex) {\n-            throw new ProvisioningException(\"Resolve operation failed\");\n+            return rs.next() ? rs.getString(1) : null;\n+        } catch (SQLException e) {\n+            throw new ProvisioningException(\"Resolve operation failed\", e);\n         } finally {\n-\n             if (conn != null) {\n                 try {\n                     close(conn);\n                 } catch (SQLException ignore) {\n                     // ignore exception\n                 }\n             }\n-\n         }\n     }\n \n     @Override\n     public List<WSAttribute> schema() {\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n+        LOG.debug(\"schema request received\");\n \n         List<WSAttribute> attrs = new ArrayList<WSAttribute>();\n \n@@ -646,18 +599,14 @@ public List<WSAttribute> schema() {\n     public String authenticate(String username, String password)\n             throws ProvisioningException {\n \n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n+        LOG.debug(\"authenticate request received\");\n \n         return username;\n     }\n \n     @Override\n     public Boolean isAuthenticationSupported() {\n-        if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Operation request received\");\n-        }\n+        LOG.debug(\"isAuthenticationSupported request received\");\n \n         return Boolean.FALSE;\n     }\n@@ -693,6 +642,7 @@ private Connection connect()\n      */\n     private void close(Connection conn)\n             throws SQLException {\n+\n         conn.close();\n     }\n }"}]}