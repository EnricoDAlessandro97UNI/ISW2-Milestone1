{"sha":"2ff73daa024ea1ccaf20c9c6717058d85659c43f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJmZjczZGFhMDI0ZWExY2NhZjIwYzljNjcxNzA1OGQ4NTY1OWM0M2Y=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-06-10T14:52:06Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-06-10T14:52:06Z"},"message":"[SYNCOPE-829] provides next button to browse resource connector objects. Furthermore a safety check has been provided into the method to retrieve the list of connector objects: the maximum number of returned items is set to 1k. Before to close the related issue I will wait to discuss this last feature in order to collect feedbacks and evaluate the goodness of this implementation","tree":{"sha":"26571e9030cecb869c8a819ab74c947e575bf972","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/26571e9030cecb869c8a819ab74c947e575bf972"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2ff73daa024ea1ccaf20c9c6717058d85659c43f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ff73daa024ea1ccaf20c9c6717058d85659c43f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2ff73daa024ea1ccaf20c9c6717058d85659c43f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ff73daa024ea1ccaf20c9c6717058d85659c43f/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"cc33c8deafff63079525f01e453dc7d22b393da3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cc33c8deafff63079525f01e453dc7d22b393da3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cc33c8deafff63079525f01e453dc7d22b393da3"}],"stats":{"total":458,"additions":235,"deletions":223},"files":[{"sha":"99dde2e34553d6b6f0f6a4fb93e4cf591fdf0dcb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjectDirectoryPanel.java","status":"removed","additions":0,"deletions":194,"changes":194,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cc33c8deafff63079525f01e453dc7d22b393da3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cc33c8deafff63079525f01e453dc7d22b393da3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectDirectoryPanel.java?ref=cc33c8deafff63079525f01e453dc7d22b393da3","patch":"@@ -1,194 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n-import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.panels.ConnObjectDirectoryPanel.ConnObjectDataProvider;\n-import org.apache.syncope.client.console.rest.ResourceRestClient;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n-import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n-import org.apache.syncope.common.lib.to.ConnObjectTO;\n-import org.apache.syncope.common.lib.types.SchemaType;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n-\n-public abstract class ConnObjectDirectoryPanel\n-        extends DirectoryPanel<ConnObjectTO, ConnObjectTO, ConnObjectDataProvider, ResourceRestClient>\n-        implements ModalPanel {\n-\n-    private static final long serialVersionUID = 4986172040062752781L;\n-\n-    private final String resource;\n-\n-    private final String anyType;\n-\n-    protected final BaseModal<?> baseModal;\n-\n-    private final MultilevelPanel multiLevelPanelRef;\n-\n-    protected ConnObjectDirectoryPanel(\n-            final BaseModal<?> baseModal,\n-            final MultilevelPanel multiLevelPanelRef,\n-            final String resource,\n-            final String anyType,\n-            final PageReference pageRef) {\n-\n-        super(MultilevelPanel.FIRST_LEVEL_ID, pageRef, false);\n-        this.resource = resource;\n-        this.anyType = anyType;\n-        this.baseModal = baseModal;\n-        this.multiLevelPanelRef = multiLevelPanelRef;\n-        restClient = new ResourceRestClient();\n-        setShowResultPage(false);\n-        disableCheckBoxes();\n-        initResultTable();\n-    }\n-\n-    @Override\n-    protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<ConnObjectTO, String> resultTableBuilder) {\n-        resultTableBuilder.setMultiLevelPanel(baseModal, multiLevelPanelRef);\n-    }\n-\n-    @Override\n-    protected ConnObjectDataProvider dataProvider() {\n-        return new ConnObjectDataProvider(rows);\n-    }\n-\n-    @Override\n-    protected String paginatorRowsKey() {\n-        return Constants.PREF_CONNOBJECTS_PAGINATOR_ROWS;\n-    }\n-\n-    @Override\n-    protected Collection<ActionLink.ActionType> getBulkActions() {\n-        return Collections.emptyList();\n-    }\n-\n-    @Override\n-    protected List<IColumn<ConnObjectTO, String>> getColumns() {\n-        final List<IColumn<ConnObjectTO, String>> columns = new ArrayList<>();\n-\n-        columns.add(new AttrColumn<>(ConnIdSpecialAttributeName.UID, SchemaType.PLAIN));\n-        columns.add(new AttrColumn<>(ConnIdSpecialAttributeName.NAME, SchemaType.PLAIN));\n-        columns.add(new AttrColumn<>(ConnIdSpecialAttributeName.ENABLE, SchemaType.PLAIN));\n-\n-        columns.add(new ActionColumn<ConnObjectTO, String>(new ResourceModel(\"actions\")) {\n-\n-            private static final long serialVersionUID = 906457126287899096L;\n-\n-            @Override\n-            public ActionLinksPanel<ConnObjectTO> getActions(\n-                    final String componentId, final IModel<ConnObjectTO> model) {\n-\n-                final ConnObjectTO connObjectTO = model.getObject();\n-\n-                final ActionLinksPanel<ConnObjectTO> panel = ActionLinksPanel.<ConnObjectTO>builder().\n-                        add(new ActionLink<ConnObjectTO>() {\n-\n-                            private static final long serialVersionUID = -3722207913631435501L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final ConnObjectTO ignore) {\n-                                viewConnObject(connObjectTO, target);\n-                            }\n-                        }, ActionLink.ActionType.VIEW, StandardEntitlement.RESOURCE_GET_CONNOBJECT).\n-                        build(componentId);\n-\n-                return panel;\n-            }\n-\n-            @Override\n-            public ActionLinksPanel<ConnObjectTO> getHeader(final String componentId) {\n-                final ActionLinksPanel.Builder<ConnObjectTO> panel = ActionLinksPanel.builder();\n-\n-                return panel.add(new ActionLink<ConnObjectTO>() {\n-\n-                    private static final long serialVersionUID = 7511002881490248598L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final ConnObjectTO ignore) {\n-                        if (target != null) {\n-                            target.add(container);\n-                        }\n-                    }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.RESOURCE_LIST_CONNOBJECT).build(componentId);\n-            }\n-        });\n-\n-        return columns;\n-    }\n-\n-    protected abstract void viewConnObject(ConnObjectTO connObjectTO, AjaxRequestTarget target);\n-\n-    protected class ConnObjectDataProvider extends DirectoryDataProvider<ConnObjectTO> {\n-\n-        private static final long serialVersionUID = -20112718133295756L;\n-\n-        private final SortableDataProviderComparator<ConnObjectTO> comparator;\n-\n-        private final List<ConnObjectTO> connObjectTOs;\n-\n-        public ConnObjectDataProvider(final int paginatorRows) {\n-            super(paginatorRows);\n-\n-            setSort(\"lastChangeDate\", SortOrder.DESCENDING);\n-            comparator = new SortableDataProviderComparator<>(this);\n-            connObjectTOs = restClient.listConnObjects(resource, anyType, getSort());\n-        }\n-\n-        public SortableDataProviderComparator<ConnObjectTO> getComparator() {\n-            return comparator;\n-        }\n-\n-        @Override\n-        public IModel<ConnObjectTO> model(final ConnObjectTO object) {\n-            return new CompoundPropertyModel<>(object);\n-        }\n-\n-        @Override\n-        public long size() {\n-            return connObjectTOs.size();\n-        }\n-\n-        @Override\n-        public Iterator<? extends ConnObjectTO> iterator(final long first, final long count) {\n-            List<ConnObjectTO> sublist = connObjectTOs.subList((int) first, (int) (first + count));\n-\n-            Collections.sort(sublist, getComparator());\n-            return sublist.iterator();\n-        }\n-    }\n-}"},{"sha":"53e2c69fbb3d185d00ea417485a0550f15eae769","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjectListViewPanel.java","status":"added","additions":145,"deletions":0,"changes":145,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java?ref=2ff73daa024ea1ccaf20c9c6717058d85659c43f","patch":"@@ -0,0 +1,145 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n+import org.apache.syncope.client.console.panels.ListViewPanel.ListViewReload;\n+import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public abstract class ConnObjectListViewPanel extends Panel {\n+\n+    private static final long serialVersionUID = 4986172040062752781L;\n+\n+    private static final int SIZE = 10;\n+\n+    private String nextPageCookie = null;\n+\n+    protected ConnObjectListViewPanel(\n+            final String id,\n+            final String resource,\n+            final String anyType,\n+            final PageReference pageRef) {\n+\n+        super(id);\n+\n+        final List<ConnObjectTO> listOfItems = reloadItems(resource, anyType, null);\n+\n+        final ListViewPanel.Builder<ConnObjectTO> builder = new ListViewPanel.Builder<ConnObjectTO>(\n+                ConnObjectTO.class, pageRef) {\n+\n+            private static final long serialVersionUID = -8251750413385566738L;\n+\n+            @Override\n+            protected Component getValueComponent(final String key, final ConnObjectTO bean) {\n+                final AttrTO attrTO = IterableUtils.find(bean.getPlainAttrs(), new Predicate<AttrTO>() {\n+\n+                    @Override\n+                    public boolean evaluate(final AttrTO object) {\n+                        return object.getSchema().equals(key);\n+                    }\n+                });\n+\n+                return attrTO == null || CollectionUtils.isEmpty(attrTO.getValues())\n+                        ? new Label(\"field\", StringUtils.EMPTY)\n+                        : new CollectionPanel(\"field\", attrTO.getValues());\n+            }\n+\n+        };\n+\n+        builder.setReuseItem(false);\n+        builder.addAction(new ActionLink<ConnObjectTO>() {\n+\n+            private static final long serialVersionUID = 7511002881490248598L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ConnObjectTO modelObject) {\n+                viewConnObject(modelObject, target);\n+            }\n+        }, ActionLink.ActionType.VIEW, StandardEntitlement.RESOURCE_GET_CONNOBJECT).\n+                setItems(listOfItems).\n+                includes(\n+                        ConnIdSpecialAttributeName.UID,\n+                        ConnIdSpecialAttributeName.NAME,\n+                        ConnIdSpecialAttributeName.ENABLE).\n+                withChecks(ListViewPanel.CheckAvailability.NONE).\n+                setReuseItem(false);\n+\n+        add(builder.build(\"objs\"));\n+\n+        final WebMarkupContainer arrows = new WebMarkupContainer(\"arrows\");\n+        add(arrows.setOutputMarkupId(true));\n+\n+        arrows.add(new AjaxLink<Serializable>(\"next\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                final List<ConnObjectTO> listOfItems = reloadItems(resource, anyType, nextPageCookie);\n+                target.add(arrows);\n+                send(ConnObjectListViewPanel.this, Broadcast.DEPTH,\n+                        new ListViewReload<ConnObjectTO>(listOfItems, target));\n+            }\n+\n+            @Override\n+            public boolean isVisible() {\n+                return nextPageCookie != null;\n+            }\n+        });\n+    }\n+\n+    protected abstract void viewConnObject(ConnObjectTO connObjectTO, AjaxRequestTarget target);\n+\n+    private List<ConnObjectTO> reloadItems(\n+            final String resource,\n+            final String anyType,\n+            final String cookie) {\n+\n+        final Pair<String, List<ConnObjectTO>> items = new ResourceRestClient().listConnObjects(\n+                resource,\n+                anyType,\n+                SIZE,\n+                cookie,\n+                new SortParam<String>(ConnIdSpecialAttributeName.UID, true));\n+\n+        nextPageCookie = items.getLeft();\n+        return items.getRight();\n+    }\n+}"},{"sha":"cd29d2141d5013e3b91538c32c81f244128b818d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjects.java","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java?ref=2ff73daa024ea1ccaf20c9c6717058d85659c43f","patch":"@@ -50,8 +50,8 @@ public ConnObjects(final BaseModal<?> baseModal,\n \n         super(BaseModal.CONTENT_ID);\n \n-        List<String> availableAnyTypes =\n-                CollectionUtils.collect(new ResourceRestClient().read(resource).getProvisions(),\n+        List<String> availableAnyTypes = CollectionUtils.\n+                collect(new ResourceRestClient().read(resource).getProvisions(),\n                         new Transformer<ProvisionTO, String>() {\n \n                     @Override\n@@ -104,18 +104,24 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         });\n     }\n \n-    private class NextableConnObjectDirectoryPanel extends ConnObjectDirectoryPanel {\n+    private class NextableConnObjectDirectoryPanel extends ConnObjectListViewPanel {\n \n         private static final long serialVersionUID = 956427874406567048L;\n \n+        private final BaseModal<?> baseModal;\n+\n+        private final PageReference pageRef;\n+\n         NextableConnObjectDirectoryPanel(\n                 final BaseModal<?> baseModal,\n                 final MultilevelPanel multiLevelPanelRef,\n                 final String resource,\n                 final String anyType,\n                 final PageReference pageRef) {\n \n-            super(baseModal, multiLevelPanelRef, resource, anyType, pageRef);\n+            super(MultilevelPanel.FIRST_LEVEL_ID, resource, anyType, pageRef);\n+            this.baseModal = baseModal;\n+            this.pageRef = pageRef;\n         }\n \n         @Override"},{"sha":"ca634966a0c3269cf68367c094e5118cee943713","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":27,"deletions":5,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=2ff73daa024ea1ccaf20c9c6717058d85659c43f","patch":"@@ -29,14 +29,14 @@\n import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n import org.apache.wicket.core.util.lang.PropertyResolver;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -110,7 +110,7 @@ private ListViewPanel(\n \n         final CheckGroup<T> checkGroup = new CheckGroup<>(\"group\", model);\n         checkGroup.setOutputMarkupId(true);\n-        checkGroup.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+        checkGroup.add(new IndicatorAjaxFormChoiceComponentUpdatingBehavior() {\n \n             private static final long serialVersionUID = -151291731388673682L;\n \n@@ -391,26 +391,48 @@ public void onEvent(final IEvent<?> event) {\n \n             target.add(ListViewPanel.this);\n             super.onEvent(event);\n-        } else if (event.getPayload() instanceof ListViewReload) {\n-            ((ListViewReload) event.getPayload()).getTarget().add(ListViewPanel.this);\n+        } else if (event.getPayload() instanceof ListViewPanel.ListViewReload) {\n+            final ListViewPanel.ListViewReload<?> payload = (ListViewPanel.ListViewReload<?>) event.getPayload();\n+            if (payload.getItems() != null) {\n+                ListViewPanel.this.listOfItems.clear();\n+                try {\n+                    ListViewPanel.this.listOfItems.addAll((List<T>) payload.getItems());\n+                } catch (RuntimeException re) {\n+                    LOG.warn(\"Error reloading items\", re);\n+                }\n+            }\n+            payload.getTarget().add(ListViewPanel.this);\n         } else {\n             super.onEvent(event);\n         }\n     }\n \n     protected abstract T getActualItem(final T item, final List<T> list);\n \n-    public static class ListViewReload {\n+    public static class ListViewReload<T extends Serializable> implements Serializable {\n+\n+        private static final long serialVersionUID = 1509151005816590312L;\n \n         private final AjaxRequestTarget target;\n \n+        private final List<T> items;\n+\n         public ListViewReload(final AjaxRequestTarget target) {\n             this.target = target;\n+            this.items = null;\n+        }\n+\n+        public ListViewReload(final List<T> items, final AjaxRequestTarget target) {\n+            this.target = target;\n+            this.items = items;\n         }\n \n         public AjaxRequestTarget getTarget() {\n             return target;\n         }\n \n+        public List<T> getItems() {\n+            return items;\n+        }\n     }\n }"},{"sha":"b6b8db2634fe3008527eb50770e18748f26c859a","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":14,"deletions":17,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=2ff73daa024ea1ccaf20c9c6717058d85659c43f","patch":"@@ -61,34 +61,31 @@ public ConnObjectTO readConnObject(final String resource, final String anyTypeKe\n         return getService(ResourceService.class).readConnObject(resource, anyTypeKey, anyKey);\n     }\n \n-    public List<ConnObjectTO> listConnObjects(\n+    public Pair<String, List<ConnObjectTO>> listConnObjects(\n             final String resource,\n             final String anyTypeKey,\n+            final int size,\n+            final String pagedResultCookie,\n             final SortParam<String> sort) {\n \n-        ConnObjectTOListQuery.Builder builder = new ConnObjectTOListQuery.Builder().size(100).orderBy(toOrderBy(sort));\n+        ConnObjectTOListQuery.Builder builder = new ConnObjectTOListQuery.Builder().\n+                pagedResultsCookie(pagedResultCookie).\n+                size(size).\n+                orderBy(toOrderBy(sort));\n+\n+        final List<ConnObjectTO> result = new ArrayList<>();\n+        String nextPageResultCookie = null;\n \n-        List<ConnObjectTO> result = new ArrayList<>();\n         PagedConnObjectTOResult list;\n         try {\n-            do {\n-                list = getService(ResourceService.class).listConnObjects(resource, anyTypeKey, builder.build());\n-                result.addAll(list.getResult());\n-\n-                // TMP - see SYNCOPE-829\n-                if (result.size() >= 100) {\n-                    break;\n-                }\n-\n-                if (list.getPagedResultsCookie() != null) {\n-                    builder.pagedResultsCookie(list.getPagedResultsCookie());\n-                }\n-            } while (list.getPagedResultsCookie() != null);\n+            list = getService(ResourceService.class).listConnObjects(resource, anyTypeKey, builder.build());\n+            result.addAll(list.getResult());\n+            nextPageResultCookie = list.getPagedResultsCookie();\n         } catch (Exception e) {\n             LOG.error(\"While listing objects on {} for any type {}\", resource, anyTypeKey, e);\n         }\n \n-        return result;\n+        return Pair.of(nextPageResultCookie, result);\n     }\n \n     public ResourceTO read(final String name) {"},{"sha":"c57557b5e5d1196fd35a834ec5500ea15499b84d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=2ff73daa024ea1ccaf20c9c6717058d85659c43f","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n@@ -134,7 +135,8 @@ public Panel getPanel(final String panelId) {\n                                             public void onClick(\n                                                     final AjaxRequestTarget target, final RelationshipTO modelObject) {\n                                                 removeRelationships(relationships, modelObject);\n-                                                send(Relationships.this, Broadcast.DEPTH, new ListViewReload(target));\n+                                                send(Relationships.this, Broadcast.DEPTH, \n+                                                        new ListViewReload<Serializable>(target));\n                                             }\n                                         }, ActionType.DELETE, AnyEntitlement.UPDATE.getFor(anyTO.getType())).\n                                         build(panelId);"},{"sha":"22e5e58ffb86a76367c4449afb75e9c359ad4588","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=2ff73daa024ea1ccaf20c9c6717058d85659c43f","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.panels.ListViewPanel;\n+import org.apache.syncope.client.console.panels.ListViewPanel.ListViewReload;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -167,7 +168,7 @@ public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionT\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n                         resourceTO.getProvisions().remove(provisionTO);\n-                        send(ResourceProvisionPanel.this, Broadcast.DEPTH, new ListViewPanel.ListViewReload(target));\n+                        send(ResourceProvisionPanel.this, Broadcast.DEPTH, new ListViewReload<Serializable>(target));\n                     }\n                 }, ActionLink.ActionType.DELETE, StandardEntitlement.RESOURCE_DELETE);\n "},{"sha":"d7001433346794f12e4c57801070adae1129b32b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnObjectListViewPanel.html","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ff73daa024ea1ccaf20c9c6717058d85659c43f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.html?ref=2ff73daa024ea1ccaf20c9c6717058d85659c43f","patch":"@@ -0,0 +1,26 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"objs\"/>\n+    <div wicket:id=\"arrows\">\n+      <a haref=\"#\" class=\"btn btn-primary btn-circle btn-lg pull-right\" wicket:id=\"next\"><i class=\"fa fa-chevron-right\"></i></a>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"34d9544bead627a0768bc06c687182efa6fac818","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ff73daa024ea1ccaf20c9c6717058d85659c43f/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ff73daa024ea1ccaf20c9c6717058d85659c43f/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=2ff73daa024ea1ccaf20c9c6717058d85659c43f","patch":"@@ -77,6 +77,8 @@\n @Component\n public class ResourceLogic extends AbstractTransactionalLogic<ResourceTO> {\n \n+    private static final transient int MAX_CONNOBJ_SEARCH_SIZE = 1000;\n+\n     @Autowired\n     private ExternalResourceDAO resourceDAO;\n \n@@ -334,8 +336,11 @@ public Pair<SearchResult, List<ConnObjectTO>> listConnObjects(final String key,\n \n         final SearchResult[] searchResult = new SearchResult[1];\n         final List<ConnObjectTO> connObjects = new ArrayList<>();\n+\n         connector.search(init.getRight().getObjectClass(), null, new SearchResultsHandler() {\n \n+            private int count = 0;\n+\n             @Override\n             public void handleResult(final SearchResult result) {\n                 searchResult[0] = result;\n@@ -344,7 +349,9 @@ public void handleResult(final SearchResult result) {\n             @Override\n             public boolean handle(final ConnectorObject connectorObject) {\n                 connObjects.add(connObjectUtils.getConnObjectTO(connectorObject));\n-                return true;\n+                // provide safety approach in case of pagination not supported or not required (SYNCOPE-829 reworking)\n+                count++;\n+                return count < MAX_CONNOBJ_SEARCH_SIZE;\n             }\n         }, size, pagedResultsCookie, orderBy, mapItems);\n "}]}