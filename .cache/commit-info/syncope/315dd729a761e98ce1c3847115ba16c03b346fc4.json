{"sha":"315dd729a761e98ce1c3847115ba16c03b346fc4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMxNWRkNzI5YTc2MWU5OGNlMWMzODQ3MTE1YmExNmMwM2IzNDZmYzQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-05T13:20:45Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-05T13:21:30Z"},"message":"[SYNCOPE-700] Policies","tree":{"sha":"5ec9c05effa60f499bf6b607347c16bd6a2c36af","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5ec9c05effa60f499bf6b607347c16bd6a2c36af"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/315dd729a761e98ce1c3847115ba16c03b346fc4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/315dd729a761e98ce1c3847115ba16c03b346fc4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/315dd729a761e98ce1c3847115ba16c03b346fc4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/315dd729a761e98ce1c3847115ba16c03b346fc4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9604886626041378511e47bbe029051018b42790","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9604886626041378511e47bbe029051018b42790","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9604886626041378511e47bbe029051018b42790"}],"stats":{"total":380,"additions":327,"deletions":53},"files":[{"sha":"4a4d3a2ba59f58417034fce5a9aa43fdcd8d2fd0","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicySpecModalPanel.java","status":"modified","additions":22,"deletions":20,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/315dd729a761e98ce1c3847115ba16c03b346fc4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/315dd729a761e98ce1c3847115ba16c03b346fc4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.java?ref=315dd729a761e98ce1c3847115ba16c03b346fc4","patch":"@@ -68,10 +68,11 @@ public class PolicySpecModalPanel extends AbstractModalPanel<PullPolicyTO> {\n \n     public PolicySpecModalPanel(\n             final PullPolicyTO policyTO, final BaseModal<PullPolicyTO> modal, final PageReference pageRef) {\n+\n         super(modal, pageRef);\n         modal.setFormModel(policyTO);\n \n-        add(new AjaxDropDownChoicePanel<ConflictResolutionAction>(\n+        add(new AjaxDropDownChoicePanel<>(\n                 \"conflictResolutionAction\",\n                 \"conflictResolutionAction\",\n                 new PropertyModel<ConflictResolutionAction>(policyTO.getSpecification(), \"conflictResolutionAction\")).\n@@ -89,8 +90,8 @@ public PolicySpecModalPanel(\n \n                 @Override\n                 public CorrelationRule transform(final String input) {\n-                    return new CorrelationRule(input, policyTO.getSpecification().getCorrelationRules().get(\n-                            input));\n+                    return new CorrelationRule(\n+                            input, policyTO.getSpecification().getCorrelationRules().get(input));\n                 }\n             }, new ArrayList<CorrelationRule>());\n \n@@ -137,8 +138,8 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             this.modal.close(target);\n         } catch (Exception e) {\n             LOG.error(\"While creating/updating policy\", e);\n-            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.\n-                    getMessage());\n+            SyncopeConsoleSession.get().error(\n+                    StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n         }\n         ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n     }\n@@ -150,7 +151,7 @@ public static class CorrelationRulePanel extends Panel {\n         public CorrelationRulePanel(final String id, final IModel<CorrelationRule> rule) {\n             super(id);\n \n-            final AjaxDropDownChoicePanel<String> anyType = new AjaxDropDownChoicePanel<>(\n+            AjaxDropDownChoicePanel<String> anyType = new AjaxDropDownChoicePanel<>(\n                     \"anyType\", \"any.type\", new PropertyModel<String>(rule.getObject(), \"any\")).\n                     setNullValid(true).\n                     setChoices(CollectionUtils.collect(\n@@ -167,7 +168,7 @@ public String transform(final AnyTypeTO input) {\n             final AjaxDropDownChoicePanel<String> ruleType = new AjaxDropDownChoicePanel<>(\n                     \"ruleType\", \"rule.type\", new PropertyModel<String>(rule.getObject(), \"type\"), false).\n                     setNullValid(true).\n-                    setChoices(Arrays.asList(\"PLAIN\", \"JAVA\"));\n+                    setChoices(Arrays.asList(\"PLAIN ATTRIBUTES\", \"JAVA\"));\n             add(ruleType);\n \n             // ---------------------------------------------------------------\n@@ -181,13 +182,13 @@ public String transform(final AnyTypeTO input) {\n             // ---------------------------------------------------------------\n \n             // ---------------------------------------------------------------\n-            // Json rule palette\n+            // JSON rule palette\n             // ---------------------------------------------------------------\n-            final AjaxPalettePanel.Builder<String> jsonRuleBuilder\n-                    = new AjaxPalettePanel.Builder<String>().setName(\"rule.json\");\n+            AjaxPalettePanel.Builder<String> jsonRuleBuilder =\n+                    new AjaxPalettePanel.Builder<String>().setName(\"rule.json\");\n \n-            final PropertyModel<List<String>> jsonRuleModel\n-                    = new PropertyModel<List<String>>(rule.getObject(), \"rule\") {\n+            final PropertyModel<List<String>> jsonRuleModel =\n+                    new PropertyModel<List<String>>(rule.getObject(), \"rule\") {\n \n                 private static final long serialVersionUID = 3799387950428254072L;\n \n@@ -226,8 +227,8 @@ public void setObject(final List<String> object) {\n                 }\n             };\n \n-            final AjaxPalettePanel<String> jsonRule\n-                    = jsonRuleBuilder.build(\"jsonRule\", jsonRuleModel, new AjaxPalettePanel.Builder.Query<String>() {\n+            final AjaxPalettePanel<String> jsonRule =\n+                    jsonRuleBuilder.build(\"jsonRule\", jsonRuleModel, new AjaxPalettePanel.Builder.Query<String>() {\n \n                         private static final long serialVersionUID = -7223078772249308813L;\n \n@@ -236,7 +237,7 @@ public List<String> execute(final String filter) {\n                             return getPlainSchemas(rule.getObject());\n                         }\n                     });\n-            jsonRule.setOutputMarkupPlaceholderTag(true);\n+            jsonRule.hideLabel().setOutputMarkupPlaceholderTag(true);\n \n             anyType.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n@@ -252,7 +253,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n \n-            add(jsonRule.setVisible(\"PLAIN\".equals(rule.getObject().getType())));\n+            add(jsonRule.setVisible(\"PLAIN ATTRIBUTES\".equals(rule.getObject().getType())));\n             // ---------------------------------------------------------------\n \n             ruleType.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -262,7 +263,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n                     switch (ruleType.getModelObject() == null ? StringUtils.EMPTY : ruleType.getModelObject()) {\n-                        case \"PLAIN\":\n+                        case \"PLAIN ATTRIBUTES\":\n                             jsonRule.setVisible(true);\n                             javaRule.setVisible(false);\n                             jsonRule.reload(target);\n@@ -288,7 +289,8 @@ private static List<String> getPlainSchemas(final CorrelationRule rule) {\n                     : CollectionUtils.collect(\n                             new SchemaRestClient().getSchemas(SchemaType.PLAIN,\n                                     rule.getAny().equals(AnyTypeKind.USER.name())\n-                                    ? AnyTypeKind.USER : rule.getAny().equals(AnyTypeKind.GROUP.name())\n+                                    ? AnyTypeKind.USER\n+                                    : rule.getAny().equals(AnyTypeKind.GROUP.name())\n                                     ? AnyTypeKind.GROUP\n                                     : AnyTypeKind.ANY_OBJECT), new Transformer<AbstractSchemaTO, String>() {\n \n@@ -315,13 +317,13 @@ protected static class CorrelationRule implements Serializable {\n \n         public CorrelationRule() {\n             this.any = AnyTypeKind.USER.name();\n-            this.type = \"PLAIN\";\n+            this.type = \"PLAIN ATTRIBUTES\";\n             this.rule = \"[]\";\n         }\n \n         public CorrelationRule(final String any, final String rule) {\n             this.any = any;\n-            this.type = StringUtils.isEmpty(rule) || rule.trim().startsWith(\"[\") ? \"PLAIN\" : \"JAVA\";\n+            this.type = StringUtils.isEmpty(rule) || rule.trim().startsWith(\"[\") ? \"PLAIN ATTRIBUTES\" : \"JAVA\";\n             this.rule = rule;\n         }\n "},{"sha":"a9c8a51482fa8045c01323f3dff4a89c7f53ba50","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/315dd729a761e98ce1c3847115ba16c03b346fc4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/315dd729a761e98ce1c3847115ba16c03b346fc4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel.properties?ref=315dd729a761e98ce1c3847115ba16c03b346fc4","patch":"@@ -15,10 +15,10 @@\n # specific language governing permissions and limitations\n # under the License.\n rule.java=Java Class\n-rule.json=JSON Rule\n+rule.json=Plain attributes\n rule.type=Rule Type\n-JSON=JSON Rule\n+JSON=Plain attributes\n JAVA=Java Class\n-any.type=Policy Specificaton Target\n+any.type=Applies to\n correlationRules=Correlation Rules\n conflictResolutionAction=Conflice Resolution Action"},{"sha":"0b329a8425e8a37c3a35a188105c4f3d4e8a8d2e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel_it.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/315dd729a761e98ce1c3847115ba16c03b346fc4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/315dd729a761e98ce1c3847115ba16c03b346fc4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_it.properties?ref=315dd729a761e98ce1c3847115ba16c03b346fc4","patch":"@@ -15,10 +15,10 @@\n # specific language governing permissions and limitations\n # under the License.\n rule.java=Classe Java\n-rule.json=Regola JSON\n+rule.json=Attributi\n rule.type=Tipo Regola\n-JSON=Regola JSON\n+JSON=Attributi\n JAVA=Classe Java\n-any.type=Target Specifica Policy\n+any.type=Applicata a\n correlationRules=Regole di Correlazione\n conflictResolutionAction=Azione di Risoluzione Conflitti"},{"sha":"a9c8a51482fa8045c01323f3dff4a89c7f53ba50","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel_pt_BR.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/315dd729a761e98ce1c3847115ba16c03b346fc4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/315dd729a761e98ce1c3847115ba16c03b346fc4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_pt_BR.properties?ref=315dd729a761e98ce1c3847115ba16c03b346fc4","patch":"@@ -15,10 +15,10 @@\n # specific language governing permissions and limitations\n # under the License.\n rule.java=Java Class\n-rule.json=JSON Rule\n+rule.json=Plain attributes\n rule.type=Rule Type\n-JSON=JSON Rule\n+JSON=Plain attributes\n JAVA=Java Class\n-any.type=Policy Specificaton Target\n+any.type=Applies to\n correlationRules=Correlation Rules\n conflictResolutionAction=Conflice Resolution Action"},{"sha":"ce9a3deacb99789793a2c2af698fb32242d74c78","filename":"client/console/src/main/resources/org/apache/syncope/client/console/policies/PolicySpecModalPanel_ru.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/315dd729a761e98ce1c3847115ba16c03b346fc4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/315dd729a761e98ce1c3847115ba16c03b346fc4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicySpecModalPanel_ru.properties?ref=315dd729a761e98ce1c3847115ba16c03b346fc4","patch":"@@ -17,10 +17,10 @@\n #\n # reports=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n rule.java=Java Class\n-rule.json=JSON Rule\n+rule.json=Plain attributes\n rule.type=Rule Type\n-JSON=JSON Rule\n+JSON=Plain attributes\n JAVA=Java Class\n-any.type=Policy Specificaton Target\n+any.type=Applies to\n correlationRules=Correlation Rules\n conflictResolutionAction=Conflice Resolution Action"},{"sha":"2064e9157e970dec4edbdad48419bc1b420181c3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ConflictResolutionAction.java","status":"modified","additions":13,"deletions":4,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/315dd729a761e98ce1c3847115ba16c03b346fc4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConflictResolutionAction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/315dd729a761e98ce1c3847115ba16c03b346fc4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConflictResolutionAction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConflictResolutionAction.java?ref=315dd729a761e98ce1c3847115ba16c03b346fc4","patch":"@@ -23,12 +23,21 @@\n @XmlEnum\n public enum ConflictResolutionAction {\n \n-    // ignore sync\n+    /**\n+     * Do nothing.\n+     */\n     IGNORE,\n-    // sync first matcgh\n+    /**\n+     * Pull first matching object only.\n+     */\n     FIRSTMATCH,\n-    // sync last match\n+    /**\n+     * Pull last matching object only.\n+     */\n     LASTMATCH,\n-    // sync all\n+    /**\n+     * Pull all matching objects.\n+     */\n     ALL;\n+\n }"},{"sha":"b3a44970d62d37556a855db0d2c346a8856aa510","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAUserDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/315dd729a761e98ce1c3847115ba16c03b346fc4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/315dd729a761e98ce1c3847115ba16c03b346fc4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java?ref=315dd729a761e98ce1c3847115ba16c03b346fc4","patch":"@@ -357,7 +357,7 @@ public Pair<Boolean, Boolean> enforcePolicies(final User user) {\n                     Class<? extends AccountRule> ruleClass =\n                             implementationLookup.getAccountRuleClass(ruleConf.getClass());\n                     if (ruleClass == null) {\n-                        LOG.warn(\"Could not find matching password rule for {}\", ruleConf.getClass());\n+                        LOG.warn(\"Could not find matching account rule for {}\", ruleConf.getClass());\n                     } else {\n                         // fetch (or create) rule\n                         AccountRule rule;"},{"sha":"33a96345023cc9a2e050911e821fb144f16a9d4b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PlainAttrsPullCorrelationRule.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/315dd729a761e98ce1c3847115ba16c03b346fc4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/315dd729a761e98ce1c3847115ba16c03b346fc4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java?ref=315dd729a761e98ce1c3847115ba16c03b346fc4","patch":"@@ -84,7 +84,7 @@ public SearchCond getSearchCond(final ConnectorObject connObj) {\n             SearchCond nodeCond;\n             // users: just key or username can be selected\n             // groups: just key or name can be selected\n-            // any objects: just key can be selected\n+            // any objects: just key or name can be selected\n             if (\"key\".equalsIgnoreCase(schema)\n                     || \"username\".equalsIgnoreCase(schema) || \"name\".equalsIgnoreCase(schema)) {\n "},{"sha":"62fa53e6d87ea54ca5c69211bac9178a3397f92e","filename":"src/main/asciidoc/reference-guide/concepts/concepts.adoc","status":"modified","additions":1,"deletions":15,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/315dd729a761e98ce1c3847115ba16c03b346fc4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fconcepts.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/315dd729a761e98ce1c3847115ba16c03b346fc4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fconcepts.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fconcepts.adoc?ref=315dd729a761e98ce1c3847115ba16c03b346fc4","patch":"@@ -32,21 +32,7 @@ include::roles.adoc[]\n \n include::provisioning/provisioning.adoc[]\n \n-=== Policies\n-\n-[[policies-account]]\n-==== Account\n-\n-===== Pass-through Authentication\n-\n-[[policies-password]]\n-==== Password\n-\n-[[policies-pull]]\n-==== Pull\n-\n-[[policies-push]]\n-==== Push\n+include::policies.adoc[]\n \n === Workflow and Approval\n "},{"sha":"89dd666e6d153688ed66db7df85b35f5ed1d419d","filename":"src/main/asciidoc/reference-guide/concepts/policies.adoc","status":"added","additions":277,"deletions":0,"changes":277,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/315dd729a761e98ce1c3847115ba16c03b346fc4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/315dd729a761e98ce1c3847115ba16c03b346fc4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fpolicies.adoc?ref=315dd729a761e98ce1c3847115ba16c03b346fc4","patch":"@@ -0,0 +1,277 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+=== Policies\n+\n+Policies control different aspects of the <<provisioning,provisioning>> process and can be used to fine-tune and adapt\n+the overall mechanism to the particularities of the spefic domain in which a given Apache Syncope deployment is running.\n+\n+[[policy-composition]]\n+[TIP]\n+.Policy Composition\n+====\n+When defining policies and associating to different realms and resources, it is common to observe that several policies\n+of the same kind have to be enforced to the same user, group or any object.\n+\n+In such cases, Apache Syncope transparently composes all the candidate policies and obtains a single applicable policy\n+which contains all conditions of the composing policies; this process, however, is not guaranteed to be successful,\n+as different policies of the same kind might provide conflicting clauses.\n+====\n+\n+[[policies-account]]\n+==== Account\n+\n+Account policies allow to impose constraints on username values, and are involved in the authentication process.\n+\n+[NOTE]\n+====\n+When set for realm R, an account policy is enforced to all users of R and sub-realms.\n+\n+When set for resource R, an account policy is enforced to all users that have R assigned.\n+====\n+\n+When defining an account policy, the following information is to be provided:\n+\n+* max authentication attempts - how many times users are allowed to fail authentication before getting suspended\n+* propagate suspension - when suspended as consequence of too many authentication failures, should users also be\n+suspended on associated resources or not?\n+* pass-through resources - which <<external-resource-details,external resources>> are involved with\n+<<pass-through-authentication,pass-through authentication>>\n+* rules - set of account rules to evaluate with the current policy\n+\n+===== Account Rules\n+\n+Account rules define constraints to apply to username values.\n+\n+The default account rule (enforced by\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/DefaultAccountRule.java[DefaultAccountRule^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/DefaultAccountRule.java[DefaultAccountRule^]\n+endif::[]\n+and configurable via\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAccountRuleConf.java[DefaultAccountRuleConf^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/common/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultAccountRuleConf.java[DefaultAccountRuleConf^]\n+endif::[]\n+) contains the following controls:\n+\n+* maximum length - the minimum length to allow; `0` means no limit set;\n+* minimum length - the maximum length to allow; `0` means no limit set;\n+* pattern - http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html[Java regular expression pattern^] to\n+match; `NULL` means no match is attempted;\n+* all uppercase - are lowercase characters allowed?\n+* all lowercase - are uppercase characters allowed?\n+* words not permitted - list of words that cannot be present, even as substring;\n+* schemas not permitted - list of <<schema,schemas>> whose values cannot be present, even as substring;\n+* prefixes not permitted - list of strings that cannot be present as prefix;\n+* suffixes not permitted - list of strings that cannot be present as suffix.\n+\n+[TIP]\n+====\n+Writing custom account rules means:\n+\n+. providing configuration parameters in an implementation of\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/lib/src/main/java/org/apache/syncope/common/lib/policy/AccountRuleConf.java[AccountRuleConf^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/common/lib/src/main/java/org/apache/syncope/common/lib/policy/AccountRuleConf.java[AccountRuleConf^]\n+endif::[]\n+. implementing enforcement in an implementation of\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java[AccountRule^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRule.java[AccountRule^]\n+endif::[]\n+annotated via\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRuleConfClass.java[@AccountRuleConfClass^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AccountRuleConfClass.java[@AccountRuleConfClass^]\n+endif::[]\n+referring to configuration class\n+====\n+\n+===== Pass-through Authentication\n+\n+During user authentication, if the <<policy-composition,resulting>> account policy to apply defines pass-through\n+resources, the provided credentials are verified prior against the internal storage then against each configured\n+external resource (provided that the underlying <<connector-instance-details,connector instance>> has the `AUTHENTICATE`\n+capability set): the first check succeeding will successfully authenticate the user.\n+\n+This feature allows, for example, to avoid storing password values in the internal storage and to reuse credentials\n+contained in identity stores (with no need of pulling them out), or to implement authentication chains.\n+\n+[[policies-password]]\n+==== Password\n+\n+Password policies allow to impose constraints on password values.\n+\n+[NOTE]\n+====\n+When set for realm R, a password policy is enforced to all users of R and sub-realms.\n+\n+When set for resource R, a password policy is enforced to all users that have R assigned.\n+====\n+\n+When defining a password policy, the following information is to be provided:\n+\n+* allow null password - whether password is mandatory for users or not\n+* history length - how many values shall be considered in the history\n+* rules - set of password rules to evaluate with the current policy\n+\n+===== Password Rules\n+\n+Password rules define constraints to apply to password values.\n+\n+The default password rule (enforced by\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/DefaultPasswordRule.java[DefaultPasswordRule^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/DefaultPasswordRule.java[DefaultPasswordRule^]\n+endif::[]\n+and configurable via\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPasswordRuleConf.java[DefaultPasswordRuleConf^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/common/lib/src/main/java/org/apache/syncope/common/lib/policy/DefaultPasswordRuleConf.java[DefaultPasswordRuleConf^]\n+endif::[]\n+) contains the following controls:\n+\n+* maximum length - the minimum length to allow; `0` means no limit set;\n+* minimum length - the maximum length to allow; `0` means no limit set;\n+* non-alphanumeric required\n+* alphanumeric required\n+* digit required\n+* lowercase required\n+* uppwecase required\n+* must start with digit\n+* must not start with digit\n+* must end with digit\n+* must not end with digit\n+* must start with alphanumeric\n+* must start with non-alphanumeric\n+* must not start with alphanumeric\n+* must not start with non-alphanumeric\n+* must end with alphanumeric\n+* must end with non-alphanumeric\n+* must not end with alphanumeric\n+* must not end with non-alphanumeric\n+* username allowed - whether username value can be used\n+* words not permitted - list of words that cannot be present, even as substring;\n+* schemas not permitted - list of <<schema,schemas>> whose values cannot be present, even as substring;\n+* prefixes not permitted - list of strings that cannot be present as prefix;\n+* suffixes not permitted - list of strings that cannot be present as suffix.\n+\n+[TIP]\n+====\n+Writing custom password rules means:\n+\n+. providing configuration parameters in an implementation of\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/common/lib/src/main/java/org/apache/syncope/common/lib/policy/PasswordRuleConf.java[PasswordRuleConf^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/common/lib/src/main/java/org/apache/syncope/common/lib/policy/PasswordRuleConf.java[PasswordRuleConf^]\n+endif::[]\n+. implementing enforcement in an implementation of\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRule.java[PasswordRule^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRule.java[PasswordRule^]\n+endif::[]\n+annotated via\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRuleConfClass.java[@PasswordRuleConfClass^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PasswordRuleConfClass.java[@PasswordRuleConfClass^]\n+endif::[]\n+referring to configuration class\n+====\n+\n+[[policies-pull]]\n+==== Pull\n+\n+Pull policies are evaluated during the execution of <<tasks-pull,pull tasks>> and are meant to:\n+\n+. help matching existing users, groups and any objects during <<provisioning-pull,pull>>, thus generating update events\n+(rathern than create)\n+. determine which action shall be taken in case such match is not unique (e.g. what to do if the same external account\n+can be mapped to two distinct users in Apache Syncope?)\n+\n+[NOTE]\n+====\n+When set for resource R, a pull policy is enforced to all users, groups and any objects pulled from R.\n+====\n+\n+When defining a pull policy, the following information is to be provided:\n+\n+* conflict resolution action\n+** `IGNORE` - do nothing\n+** `FIRSTMATCH` - pull first matching object only\n+** `LASTMATCH` - pull last matching object only\n+** `ALL` - pull all matching objects\n+* rules - set of correlation rules to evaluate with the current policy; for each defined <<anytype,any type>>, a\n+different rule is required\n+\n+===== Pull Correlation Rules\n+\n+Pull correlation rules define how to match objects received from <<connector-instance-details,connector instances>>\n+with existing users, groups or any objects.\n+\n+The \n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PlainAttrsPullCorrelationRule.java[default^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PlainAttrsPullCorrelationRule.java[default^]\n+endif::[]\n+implementation available attempts to match entities on the basis of the values of the provided plain attributes,\n+according to the available <<mapping,mapping>>.\n+\n+[TIP]\n+====\n+Custom pull correlation rules can be provided by implementing the\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PullCorrelationRule.java[PullCorrelationRule^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/blob/master/core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PullCorrelationRule.java[PullCorrelationRule^]\n+endif::[]\n+interface.\n+====\n+\n+[[policies-push]]\n+==== Push\n+\n+Push policies are evaluated during the execution of <<tasks-push,push tasks>>.\n+\n+[NOTE]\n+====\n+When set for resource R, a push policy is enforced to all users, groups and any objects pushed to R.\n+===="}]}