{"sha":"1ff32c0c07e8b95368f971cca5fedbc393ce3e56","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFmZjMyYzBjMDdlOGI5NTM2OGY5NzFjY2E1ZmVkYmMzOTNjZTNlNTY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-10-31T14:59:32Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-10-31T14:59:45Z"},"message":"Fixing error sample payload with OpenAPI","tree":{"sha":"444c6cb0c573a2232be2d0d948996a82a4a9fe3f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/444c6cb0c573a2232be2d0d948996a82a4a9fe3f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1ff32c0c07e8b95368f971cca5fedbc393ce3e56","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1ff32c0c07e8b95368f971cca5fedbc393ce3e56","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1ff32c0c07e8b95368f971cca5fedbc393ce3e56","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1ff32c0c07e8b95368f971cca5fedbc393ce3e56/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"263cce7fc88c8c46da7f392d2e1e66251b0c0279","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/263cce7fc88c8c46da7f392d2e1e66251b0c0279","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/263cce7fc88c8c46da7f392d2e1e66251b0c0279"}],"stats":{"total":15,"additions":12,"deletions":3},"files":[{"sha":"061becddd03bcd9d4ddb2f7c3608930430f2d68c","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeOpenApiCustomizer.java","status":"modified","additions":12,"deletions":3,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1ff32c0c07e8b95368f971cca5fedbc393ce3e56/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1ff32c0c07e8b95368f971cca5fedbc393ce3e56/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java?ref=1ff32c0c07e8b95368f971cca5fedbc393ce3e56","patch":"@@ -35,6 +35,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.ext.MessageContext;\n import org.apache.cxf.jaxrs.model.OperationResourceInfo;\n@@ -43,6 +44,7 @@\n import org.apache.cxf.jaxrs.utils.JAXRSUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ErrorTO;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.core.persistence.api.DomainHolder;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n@@ -150,13 +152,20 @@ protected void customizeResponses(final Operation operation, final OperationReso\n                 RESTHeaders.ERROR_INFO,\n                 new Header().schema(new Schema<>().type(\"string\")).description(\"Error message\"));\n \n+        ErrorTO sampleError = new ErrorTO();\n+        sampleError.setStatus(Response.Status.BAD_REQUEST.getStatusCode());\n+        sampleError.setType(ClientExceptionType.InvalidEntity);\n+        sampleError.getElements().add(\"additional information\");\n         Content content = new Content();\n         content.addMediaType(\n-                javax.ws.rs.core.MediaType.APPLICATION_JSON, new MediaType().schema(new Schema<ErrorTO>()));\n+                javax.ws.rs.core.MediaType.APPLICATION_JSON,\n+                new MediaType().schema(new Schema<ErrorTO>().example(sampleError)));\n         content.addMediaType(\n-                RESTHeaders.APPLICATION_YAML, new MediaType().schema(new Schema<ErrorTO>()));\n+                RESTHeaders.APPLICATION_YAML,\n+                new MediaType().schema(new Schema<ErrorTO>().example(sampleError)));\n         content.addMediaType(\n-                javax.ws.rs.core.MediaType.APPLICATION_XML, new MediaType().schema(new Schema<ErrorTO>()));\n+                javax.ws.rs.core.MediaType.APPLICATION_XML,\n+                new MediaType().schema(new Schema<ErrorTO>().example(sampleError)));\n \n         responses.addApiResponse(\"400\", new ApiResponse().\n                 description(\"An error occurred; HTTP status code can vary depending on the actual error: \""}]}