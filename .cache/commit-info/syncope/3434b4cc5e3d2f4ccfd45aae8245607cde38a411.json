{"sha":"3434b4cc5e3d2f4ccfd45aae8245607cde38a411","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM0MzRiNGNjNWUzZDJmNGNjZmQ0NWFhZTgyNDU2MDdjZGUzOGE0MTE=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-20T12:42:46Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-20T12:42:46Z"},"message":"(Fixes issue #57 #58)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246598 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"20db542e2e41c3710b864124ea530d00adc30de7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/20db542e2e41c3710b864124ea530d00adc30de7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3434b4cc5e3d2f4ccfd45aae8245607cde38a411","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3434b4cc5e3d2f4ccfd45aae8245607cde38a411","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3434b4cc5e3d2f4ccfd45aae8245607cde38a411","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/comments","author":null,"committer":null,"parents":[{"sha":"0b115915cca3a3df9d1f4faf90fa3aa1c504c979","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0b115915cca3a3df9d1f4faf90fa3aa1c504c979","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0b115915cca3a3df9d1f4faf90fa3aa1c504c979"}],"stats":{"total":3770,"additions":2192,"deletions":1578},"files":[{"sha":"61a5329101f2c7937054303a4e6b40bb35740080","filename":"console/src/main/java/org/syncope/console/commons/SchemaWrapper.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaWrapper.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -0,0 +1,60 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+\n+package org.syncope.console.commons;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+import org.syncope.client.to.SchemaTO;\n+\n+/**\n+ * Wrapper for User's Schema - Attribute.\n+ */\n+public class SchemaWrapper {\n+\n+    SchemaTO schemaTO;\n+    List<String> values;\n+\n+    public SchemaWrapper(SchemaTO schemaTO) {\n+        this.schemaTO = schemaTO;\n+        values = new ArrayList<String>();\n+\n+        values.add(\"\");\n+    }\n+\n+    public SchemaTO getSchemaTO() {\n+        return schemaTO;\n+    }\n+\n+    public void setSchemaTO(SchemaTO schemaTO) {\n+        this.schemaTO = schemaTO;\n+    }\n+\n+    public List<String> getValues() {\n+        return values;\n+    }\n+\n+    public void setValues(List<String> values) {\n+        this.values = values;\n+    }\n+\n+    public void setValues(Set<String> values) {\n+        this.values = new ArrayList<String>();\n+        for (String value : values) {\n+            this.values.add(value);\n+        }\n+    }\n+}"},{"sha":"840e2ccfe9aede27a738d3296bea9d8d24f711ba","filename":"console/src/main/java/org/syncope/console/pages/Configuration.java","status":"modified","additions":144,"deletions":45,"changes":189,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -14,31 +14,44 @@\n  */\n package org.syncope.console.pages;\n \n+import java.io.Serializable;\n import java.io.UnsupportedEncodingException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Iterator;\n+import java.util.List;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageParameters;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigator;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n+        .AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.PageableListView;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n import org.syncope.console.rest.ConfigurationsRestClient;\n+import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n+import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n \n /**\n  * Configurations WebPage.\n@@ -57,10 +70,11 @@ public class Configuration extends BasePage{\n     final int WIN_USER_HEIGHT = 680;\n     final int WIN_USER_WIDTH = 1133;\n \n-    WebMarkupContainer configContainer;\n+    WebMarkupContainer container;\n \n-    /** Response flag set by the Modal Window after the operation\n-     * is completed  */\n+    /* \n+     Response flag set by the Modal Window after the operation\n+     is completed  */\n     boolean operationResult = false;\n \n     FeedbackPanel feedbackPanel;\n@@ -78,29 +92,25 @@ public Configuration(PageParameters parameters) {\n         add(createConfigWin = new ModalWindow(\"createConfigurationWin\"));\n         add(editConfigWin = new ModalWindow(\"editConfigurationWin\"));\n \n-        final IModel configurations = new LoadableDetachableModel() {\n-\n-            protected Object load() {\n-                return restClient.getAllConfigurations().getConfigurations();\n-            }\n-        };\n-\n         paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n                 .CONF_CONFIGURATION_PAGINATOR_ROWS);\n \n-        final PageableListView configurationsView = new PageableListView\n-                (\"configurations\",configurations, paginatorRows) {\n+        List<IColumn> columns = new ArrayList<IColumn>();\n \n-            @Override\n-            protected void populateItem(final ListItem item) {\n-\n-                final ConfigurationTO configurationTO =\n-                        (ConfigurationTO)item.getModelObject();\n+        columns.add(new PropertyColumn(new Model(getString(\"key\")),\n+                \"confKey\", \"confKey\"));\n \n-                item.add(new Label(\"key\",configurationTO.getConfKey()));\n-                item.add(new Label(\"value\",configurationTO.getConfValue()));\n+        columns.add(new PropertyColumn(new Model(getString(\"value\")), \n+                \"confValue\", \"confValue\"));\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+        columns.add(new AbstractColumn<ConfigurationTO>(new Model<String>(\n+                getString(\"edit\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<ConfigurationTO>>\n+                    cellItem, String componentId, IModel<ConfigurationTO> model)\n+            {\n+                    final ConfigurationTO configurationTO = model.getObject();\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -121,9 +131,22 @@ public Page createPage() {\n                     }\n                 };\n \n-                item.add(editLink);\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        columns.add(new AbstractColumn<ConfigurationTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<ConfigurationTO>> \n+                    cellItem, String componentId, IModel<ConfigurationTO> model)\n+            {\n+                    final ConfigurationTO configurationTO = model.getObject();\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                    AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -140,22 +163,28 @@ public void onClick(AjaxRequestTarget target) {\n \n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n-\n-                        target.addComponent(configContainer);\n+                        \n+                        target.addComponent(container);\n                     }\n                 };\n \n-                item.add(deleteLink);\n-                \n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                cellItem.add(panel);\n             }\n-        };\n+        });\n+\n \n-        add(new AjaxPagingNavigator(\"configurationsNavigator\",\n-                configurationsView).setOutputMarkupId(true));\n+        final AjaxFallbackDefaultDataTable table =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columns,\n+                new ConfigurationsProvider(), paginatorRows);\n \n-        configContainer = new WebMarkupContainer(\"container\");\n-        configContainer.add(configurationsView);\n-        configContainer.setOutputMarkupId(true);\n+        container = new WebMarkupContainer(\"container\");\n+        container.add(table);\n+        container.setOutputMarkupId(true);\n+\n+        add(container);\n \n         createConfigWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createConfigWin.setInitialHeight(WIN_USER_HEIGHT);\n@@ -169,10 +198,8 @@ public void onClick(AjaxRequestTarget target) {\n         editConfigWin.setPageMapName(\"edit-configuration-modal\");\n         editConfigWin.setCookieName(\"edit-configuration-modal\");\n \n-        setWindowClosedCallback(createConfigWin, configContainer);\n-        setWindowClosedCallback(editConfigWin, configContainer);\n-\n-        add(configContainer);\n+        setWindowClosedCallback(createConfigWin, container);\n+        setWindowClosedCallback(editConfigWin, container);\n \n         add(new AjaxLink(\"createConfigurationLink\") {\n \n@@ -204,9 +231,9 @@ protected void onUpdate( AjaxRequestTarget target )\n               utility.updatePaginatorRows(\n                       Constants.CONF_CONFIGURATION_PAGINATOR_ROWS,\n                       paginatorRows);\n-              configurationsView.setRowsPerPage(paginatorRows);\n-              target.addComponent(configContainer);\n-              target.addComponent(getPage().get(\"configurationsNavigator\"));\n+              table.setRowsPerPage(paginatorRows);\n+              \n+              target.addComponent(container);\n             }\n \n           });\n@@ -220,7 +247,7 @@ protected void onUpdate( AjaxRequestTarget target )\n    /**\n      * Set a WindowClosedCallback for a ModalWindow instance.\n      * @param window\n-     * @param configContainer\n+     * @param container\n      */\n     public void setWindowClosedCallback(ModalWindow window,\n             final WebMarkupContainer container) {\n@@ -246,4 +273,76 @@ public boolean isOperationResult() {\n     public void setOperationResult(boolean operationResult) {\n         this.operationResult = operationResult;\n     }\n+\n+    class ConfigurationsProvider extends SortableDataProvider<ConfigurationTO> {\n+\n+        private SortableDataProviderComparator comparator =\n+                new SortableDataProviderComparator();\n+\n+        public ConfigurationsProvider() {\n+            //Default sorting\n+            setSort(\"confKey\",true);\n+        }\n+\n+        @Override\n+        public Iterator<ConfigurationTO> iterator(int first, int count) {\n+            List<ConfigurationTO> list = getConfigurationsListDB();\n+\n+            Collections.sort(list, comparator);\n+\n+            return list.subList(first, first+count).iterator();\n+        }\n+\n+        @Override\n+        public int size() {\n+            return getConfigurationsListDB().size();\n+        }\n+\n+        @Override\n+        public IModel<ConfigurationTO> model(final ConfigurationTO \n+                configuration) {\n+            return new AbstractReadOnlyModel<ConfigurationTO>() {\n+\n+                @Override\n+                public ConfigurationTO getObject() {\n+                    return configuration;\n+                }\n+            };\n+        }\n+\n+        public List<ConfigurationTO> getConfigurationsListDB(){\n+        List<ConfigurationTO> list = restClient.getAllConfigurations();\n+        \n+        return list;\n+        }\n+\n+        class SortableDataProviderComparator implements\n+                Comparator<ConfigurationTO>, Serializable {\n+            public int compare(final ConfigurationTO o1,\n+                    final ConfigurationTO o2) {\n+                    PropertyModel<Comparable> model1 =\n+                            new PropertyModel<Comparable>(o1, getSort()\n+                            .getProperty());\n+                    PropertyModel<Comparable> model2 =\n+                            new PropertyModel<Comparable>(o2, getSort()\n+                            .getProperty());\n+\n+                    int result = 1;\n+\n+                    if(model1.getObject() == null && model2.getObject() == null)\n+                        result = 0;\n+                    else if(model1.getObject() == null)\n+                        result = 1;\n+                    else if(model2.getObject() == null)\n+                        result = -1;\n+                    else\n+                        result = ((Comparable)model1.getObject()).compareTo(\n+                                model2.getObject());\n+\n+                    result = getSort().isAscending() ? result : -result;\n+\n+                    return result;\n+            }\n+\t}\n+    }\n }"},{"sha":"b598f5baad2ed9e3d42118232ef7722f7a9724c5","filename":"console/src/main/java/org/syncope/console/pages/Connectors.java","status":"modified","additions":161,"deletions":57,"changes":218,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -14,23 +14,32 @@\n  */\n package org.syncope.console.pages;\n \n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Iterator;\n import java.util.List;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageParameters;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigator;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.PageableListView;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.ConnectorInstanceTO;\n@@ -39,6 +48,8 @@\n import org.syncope.console.commons.Utility;\n import org.syncope.console.rest.ConnectorsRestClient;\n import org.syncope.console.rest.ResourcesRestClient;\n+import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n+import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n \n /**\n  * Connectors WebPage.\n@@ -57,9 +68,9 @@ public class Connectors extends BasePage {\n     final ModalWindow createConnectorWin;\n     final ModalWindow editConnectorWin;\n     \n-    WebMarkupContainer connectorsContainer;\n-\n-    /** Response flag set by the Modal Window after the operation is completed\n+    WebMarkupContainer container;\n+    /*\n+     Response flag set by the Modal Window after the operation is completed\n      */\n     boolean operationResult = false;\n     FeedbackPanel feedbackPanel;\n@@ -75,44 +86,46 @@ public Connectors(PageParameters parameters) {\n         feedbackPanel = new FeedbackPanel(\"feedback\");\n         feedbackPanel.setOutputMarkupId( true );\n \n-        add(feedbackPanel);\n-\n-        IModel connectors = new LoadableDetachableModel() {\n-\n-            protected Object load() {\n-                return restClient.getAllConnectors().getInstances();\n-            }\n-        };        \n+        add(feedbackPanel);       \n \n         paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n                 .CONF_CONNECTORS_PAGINATOR_ROWS);\n \n-        final PageableListView connectorsView = new PageableListView(\"connectors\",\n-                connectors, paginatorRows) {\n+         List<IColumn> columns = new ArrayList<IColumn>();\n \n-            @Override\n-            protected void populateItem(final ListItem item) {\n-                final ConnectorInstanceTO connectorTO =\n-                        (ConnectorInstanceTO) item.getDefaultModelObject();\n+        columns.add(new PropertyColumn(new Model(getString(\"id\")),\n+                \"id\", \"id\"));\n \n-                item.add(new Label(\"id\", connectorTO.getId()+\"\"));\n-                item.add(new Label(\"name\", connectorTO.getConnectorName()));\n-                item.add(new Label(\"version\", connectorTO.getVersion()));\n-                item.add(new Label(\"bundleName\", connectorTO.getBundleName()));\n+        columns.add(new PropertyColumn(new Model(getString(\"name\")),\n+                \"connectorName\", \"connectorName\"));\n \n+        columns.add(new PropertyColumn(new Model(getString(\"version\")),\n+                \"version\", \"version\"));\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+        columns.add(new PropertyColumn(new Model(getString(\"bundleName\")),\n+                \"bundleName\", \"bundleName\"));\n+\n+        columns.add(new AbstractColumn<ConnectorInstanceTO>(new Model<String>(\n+                getString(\"edit\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<ConnectorInstanceTO>>\n+                    cellItem, String componentId, IModel<ConnectorInstanceTO>\n+                    model)\n+            {\n+                    final ConnectorInstanceTO connectorTO = model.getObject();\n+\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        final ConnectorInstanceTO connectorTO =\n-                                (ConnectorInstanceTO) item.getDefaultModelObject();\n \n-                        editConnectorWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        editConnectorWin.setPageCreator(new ModalWindow\n+                                .PageCreator() {\n \n                             public Page createPage() {\n-                                ConnectorsModalPage form = new ConnectorsModalPage\n-                                        (Connectors.this, editConnectorWin, connectorTO, false);\n+                                ConnectorsModalPage form = \n+                                        new ConnectorsModalPage(Connectors.this,\n+                                        editConnectorWin, connectorTO, false);\n                                 return form;\n                             }\n                         });\n@@ -121,9 +134,23 @@ public Page createPage() {\n                     }\n                 };\n \n-                item.add(editLink);\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        columns.add(new AbstractColumn<ConnectorInstanceTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<ConnectorInstanceTO>>\n+                    cellItem, String componentId, IModel<ConnectorInstanceTO>\n+                    model)\n+            {\n+                    final ConnectorInstanceTO connectorTO = model.getObject();\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                    AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -135,27 +162,32 @@ public void onClick(AjaxRequestTarget target) {\n \n                         else\n                             error(getString(\"delete_error\"));\n-                            \n-                        target.addComponent(connectorsContainer);\n+\n+                        target.addComponent(container);\n                         target.addComponent(feedbackPanel);\n-                    \n+\n                 }};\n \n-                item.add(deleteLink);\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                cellItem.add(panel);\n             }\n-        };\n+        });\n \n-        add(new AjaxPagingNavigator(\"connectorsNavigator\", connectorsView)\n-                .setOutputMarkupId(true));\n \n-        connectorsContainer = new WebMarkupContainer(\"connectorsContainer\");\n-        connectorsContainer.add(connectorsView);\n-        connectorsContainer.setOutputMarkupId(true);\n+        final AjaxFallbackDefaultDataTable table =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columns,\n+                new ConnectorsProvider(), paginatorRows);\n \n-        add(connectorsContainer);\n+        container = new WebMarkupContainer(\"container\");\n+        container.add(table);\n+        container.setOutputMarkupId(true);\n \n-        setWindowClosedCallback(createConnectorWin, connectorsContainer);\n-        setWindowClosedCallback(editConnectorWin, connectorsContainer);\n+        add(container);\n+\n+        setWindowClosedCallback(createConnectorWin, container);\n+        setWindowClosedCallback(editConnectorWin, container);\n \n         createConnectorWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createConnectorWin.setPageMapName(\"create-conn-modal\");\n@@ -173,8 +205,9 @@ public void onClick(AjaxRequestTarget target) {\n                 createConnectorWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                     public Page createPage() {\n-                        ConnectorsModalPage form = new ConnectorsModalPage(Connectors.this,\n-                                editConnectorWin, new ConnectorInstanceTO(), true);\n+                        ConnectorsModalPage form = new ConnectorsModalPage(\n+                                Connectors.this, editConnectorWin,\n+                                new ConnectorInstanceTO(), true);\n                         return form;\n                     }\n                 });\n@@ -191,20 +224,18 @@ public Page createPage() {\n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n           protected void onUpdate( AjaxRequestTarget target )\n             {\n-              utility.updatePaginatorRows(Constants.CONF_CONNECTORS_PAGINATOR_ROWS,\n-                      paginatorRows);\n+              utility.updatePaginatorRows(\n+                      Constants.CONF_CONNECTORS_PAGINATOR_ROWS, paginatorRows);\n \n-              connectorsView.setRowsPerPage(paginatorRows);\n+              table.setRowsPerPage(paginatorRows);\n \n-              target.addComponent(connectorsContainer);\n-              target.addComponent(getPage().get(\"connectorsNavigator\"));\n+              target.addComponent(container);\n             }\n \n           });\n \n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n-\n     }\n \n     /**\n@@ -215,7 +246,7 @@ protected void onUpdate( AjaxRequestTarget target )\n     public boolean checkDeleteIsForbidden(ConnectorInstanceTO connectorTO){\n \n         boolean forbidden = false;\n-        List<ResourceTO> resources = resourcesRestClient.getAllResources().getResources();\n+        List<ResourceTO> resources = resourcesRestClient.getAllResources();\n \n         for(ResourceTO resourceTO : resources) {\n             if(resourceTO.getConnectorId() == connectorTO.getId())\n@@ -230,7 +261,8 @@ public boolean checkDeleteIsForbidden(ConnectorInstanceTO connectorTO){\n      * @param current window\n      * @param container to refresh\n      */\n-    public void setWindowClosedCallback(ModalWindow window, final WebMarkupContainer container) {\n+    public void setWindowClosedCallback(ModalWindow window,\n+            final WebMarkupContainer container) {\n \n         window.setWindowClosedCallback(\n                 new ModalWindow.WindowClosedCallback() {\n@@ -253,4 +285,76 @@ public boolean isOperationResult() {\n     public void setOperationResult(boolean operationResult) {\n         this.operationResult = operationResult;\n     }\n+\n+    class ConnectorsProvider extends SortableDataProvider<ConnectorInstanceTO> {\n+\n+        private SortableDataProviderComparator comparator =\n+                new SortableDataProviderComparator();\n+\n+        public ConnectorsProvider() {\n+            //Default sorting\n+            setSort(\"id\",true);\n+        }\n+\n+        @Override\n+        public Iterator<ConnectorInstanceTO> iterator(int first, int count) {\n+            List<ConnectorInstanceTO> list = getConnectorsListDB();\n+\n+            Collections.sort(list, comparator);\n+\n+            return list.subList(first, first+count).iterator();\n+        }\n+\n+        @Override\n+        public int size() {\n+            return getConnectorsListDB().size();\n+        }\n+\n+        @Override\n+        public IModel<ConnectorInstanceTO> model(final ConnectorInstanceTO\n+                connector) {\n+            return new AbstractReadOnlyModel<ConnectorInstanceTO>() {\n+\n+                @Override\n+                public ConnectorInstanceTO getObject() {\n+                    return connector;\n+                }\n+            };\n+        }\n+\n+        public List<ConnectorInstanceTO> getConnectorsListDB(){\n+        List<ConnectorInstanceTO> list = restClient.getAllConnectors();\n+\n+        return list;\n+        }\n+\n+        class SortableDataProviderComparator implements\n+                Comparator<ConnectorInstanceTO>, Serializable {\n+            public int compare(final ConnectorInstanceTO o1,\n+                    final ConnectorInstanceTO o2) {\n+                    PropertyModel<Comparable> model1 =\n+                            new PropertyModel<Comparable>(o1, getSort()\n+                            .getProperty());\n+                    PropertyModel<Comparable> model2 =\n+                            new PropertyModel<Comparable>(o2, getSort()\n+                            .getProperty());\n+\n+                    int result = 1;\n+\n+                    if(model1.getObject() == null && model2.getObject() == null)\n+                        result = 0;\n+                    else if(model1.getObject() == null)\n+                        result = 1;\n+                    else if(model2.getObject() == null)\n+                        result = -1;\n+                    else\n+                        result = ((Comparable)model1.getObject()).compareTo(\n+                                model2.getObject());\n+\n+                    result = getSort().isAscending() ? result : -result;\n+\n+                    return result;\n+            }\n+\t}\n+    }\n }\n\\ No newline at end of file"},{"sha":"cbfe209280f7778fec461b6a7217edfcc36e5d63","filename":"console/src/main/java/org/syncope/console/pages/ConnectorsModalPage.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorsModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorsModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorsModalPage.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -43,7 +43,6 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.ConnectorBundleTO;\n-import org.syncope.client.to.ConnectorBundleTOs;\n import org.syncope.client.to.ConnectorInstanceTO;\n import org.syncope.client.to.PropertyTO;\n import org.syncope.console.rest.ConnectorsRestClient;\n@@ -59,7 +58,7 @@ public class ConnectorsModalPage extends SyncopeModalPage {\n     public TextField version;\n     public CheckBoxMultipleChoice capabilitiesPalette;\n \n-    ConnectorBundleTOs bundlesTOs;\n+    List<ConnectorBundleTO> bundlesTOs;\n     ConnectorBundleTO selectedBundleTO = new ConnectorBundleTO();\n     List<PropertyTO> connectorProperties = new ArrayList<PropertyTO>();\n \n@@ -92,7 +91,7 @@ public ConnectorsModalPage(final BasePage basePage, final ModalWindow window,\n         IModel bundles =  new LoadableDetachableModel()\n         {\n             protected Object load() {\n-                return restClient.getAllBundles().getBundles();\n+                return restClient.getAllBundles();\n             }\n         };\n "},{"sha":"d9da8ac16682217876eda0000665e03ea82ba54a","filename":"console/src/main/java/org/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -79,7 +79,11 @@ protected void onSubmit(final AjaxRequestTarget target,\n                     final Form form) {\n \n                 if (saveConfiguration()) {\n-                    window.close(target);\n+\n+                Users callerPage = (Users)basePage;\n+                callerPage.setOperationResult(true);\n+                window.close(target);\n+\n                 } else {\n                     error(getString(\"generic_error\"));\n                 }"},{"sha":"b8656ea8bd2b4d8aedeef7cd9aad7facaf1a3d52","filename":"console/src/main/java/org/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":138,"deletions":149,"changes":287,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -22,9 +22,7 @@\n import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n import java.util.Date;\n-import java.util.HashSet;\n import java.util.List;\n-import java.util.Set;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n import org.apache.wicket.Application;\n@@ -44,8 +42,8 @@\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.SchemaTO;\n-import org.syncope.client.to.SchemaTOs;\n import org.syncope.console.SyncopeApplication;\n+import org.syncope.console.commons.SchemaWrapper;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -69,133 +67,161 @@ public MembershipModalPage(final Page basePage, final ModalWindow window,\n \n         setupSchemaWrappers(createFlag,membershipTO);\n \n-        final ListView userAttributesView = new ListView(\"membershipSchemas\", schemaWrappers) {\n+        final ListView userAttributesView = new ListView(\"membershipSchemas\",\n+                schemaWrappers) {\n \n             @Override\n             protected void populateItem(ListItem item) {\n-                final SchemaWrapper schemaWrapper = (SchemaWrapper) item.getDefaultModelObject();\n-\n-                final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n-\n-                item.add(new Label(\"name\", schemaWrapper.getSchemaTO().getName()));\n-\n-                item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n-\n-                    Panel panel;\n-\n-                    @Override\n-                    protected void populateItem(final ListItem item) {\n-\n-                        if (schemaTO.getType().getClassName().equals(\"java.lang.String\")) {\n-                            panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getName(), new Model() {\n-\n-                                @Override\n-                                public Serializable getObject() {\n-                                    return (String) item.getModelObject();\n-                                }\n-\n-                                @Override\n-                                public void setObject(Serializable object) {\n-                                    item.setModelObject((String) object);\n-                                }\n-                            }, schemaTO.isMandatory());\n-                        } else if (schemaTO.getType().getClassName().equals(\"java.lang.Boolean\")) {\n-                            panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getName(), new Model() {\n-\n-                                @Override\n-                                public Serializable getObject() {\n-                                    //return (String) item.getModelObject();\n-                                    return \"false\";\n-                                }\n-\n-                                @Override\n-                                public void setObject(Serializable object) {\n-                                    Boolean val = (Boolean) object;\n-                                    item.setModelObject(val.toString());\n-                                }\n-                            }, schemaTO.isMandatory());\n-\n-                        } else if (schemaTO.getType().getClassName().equals(\"java.util.Date\")) {\n-                            panel = new DateFieldPanel(\"panel\", schemaTO.getName(),\n-                                    new Model() {\n-\n-                                        @Override\n-                                        public Serializable getObject() {\n-                                            DateFormat formatter = new SimpleDateFormat(schemaTO.getConversionPattern());\n-                                            Date date = new Date();\n-                                            try {\n-                                                String dateValue = (String) item.getModelObject();\n-                                                formatter = new SimpleDateFormat(schemaTO.getConversionPattern());//Default value:yyyy-MM-dd\n-\n-                                                if(!dateValue.equals(\"\"))\n-                                                    date = formatter.parse((String) item.getModelObject());\n-                                            } catch (ParseException ex) {\n-                                                Logger.getLogger(UserModalPage.class.getName()).log(Level.SEVERE, null, ex);\n-                                            }\n-                                            return date;\n+            final SchemaWrapper schemaWrapper = (SchemaWrapper) item\n+                    .getDefaultModelObject();\n+\n+            final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n+\n+            item.add(new Label(\"name\", schemaWrapper.getSchemaTO().getName()));\n+\n+            item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n+\n+                Panel panel;\n+\n+                @Override\n+                protected void populateItem(final ListItem item) {\n+                    String mandatoryCondition =\n+                            schemaTO.getMandatoryCondition();\n+\n+                    boolean required = false;\n+\n+                    if (mandatoryCondition.equalsIgnoreCase(\"true\"))\n+                        required = true;\n+\n+                    if (schemaTO.getType().getClassName()\n+                            .equals(\"java.lang.String\")) {\n+                        panel = new AjaxTextFieldPanel(\"panel\",\n+                                schemaTO.getName(), new Model() {\n+\n+                            @Override\n+                            public Serializable getObject() {\n+                                return (String) item.getModelObject();\n+                            }\n+\n+                            @Override\n+                            public void setObject(Serializable object) {\n+                                item.setModelObject((String) object);\n+                            }\n+                        }, required);\n+                    } else if (schemaTO.getType().getClassName()\n+                            .equals(\"java.lang.Boolean\")) {\n+                        panel = new AjaxCheckBoxPanel(\"panel\", schemaTO\n+                                .getName(), new Model() {\n+\n+                            @Override\n+                            public Serializable getObject() {\n+                                //return (String) item.getModelObject();\n+                                return \"false\";\n+                            }\n+\n+                            @Override\n+                            public void setObject(Serializable object) {\n+                                Boolean val = (Boolean) object;\n+                                item.setModelObject(val.toString());\n+                            }\n+                        }, required);\n+\n+                    } else if (schemaTO.getType().getClassName()\n+                            .equals(\"java.util.Date\")) {\n+                        panel = new DateFieldPanel(\"panel\", schemaTO\n+                                .getName(),\n+                                new Model() {\n+\n+                                    @Override\n+                                    public Serializable getObject() {\n+                                        DateFormat formatter =\n+                                                new SimpleDateFormat(schemaTO\n+                                                .getConversionPattern());\n+                                        Date date = new Date();\n+                                        try {\n+                                            String dateValue = (String) item\n+                                                    .getModelObject();\n+                                            formatter = new SimpleDateFormat(\n+                                                    schemaTO\n+                                                    .getConversionPattern());//Default value:yyyy-MM-dd\n+\n+                                            if(!dateValue.equals(\"\"))\n+                                                date = formatter.parse((String)\n+                                                        item.getModelObject());\n+                                        } catch (ParseException ex) {\n+                                            Logger.getLogger(UserModalPage\n+                                                    .class.getName())\n+                                                    .log(Level.SEVERE, null, ex);\n                                         }\n-\n-                                        @Override\n-                                        public void setObject(Serializable object) {\n-                                            Date date = (Date) object;\n-                                            Format formatter = new SimpleDateFormat(schemaTO.getConversionPattern());\n-                                            String val = formatter.format(date);\n-                                            item.setModelObject(val);\n-                                        }\n-                                    }, schemaTO.isMandatory());\n-                        }\n-\n-                        item.add(panel);\n+                                        return date;\n+                                    }\n+\n+                                    @Override\n+                                    public void setObject(Serializable object) {\n+                                        Date date = (Date) object;\n+                                        Format formatter = new SimpleDateFormat(\n+                                                schemaTO.getConversionPattern());\n+                                        String val = formatter.format(date);\n+                                        item.setModelObject(val);\n+                                    }\n+                                }, required);\n                     }\n-                });\n \n-                AjaxButton addButton = new AjaxButton(\"add\", new Model(getString(\"add\"))) {\n+                    item.add(panel);\n+                }\n+            });\n \n-                    @Override\n-                    protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                        schemaWrapper.getValues().add(\"\");\n+            AjaxButton addButton = new AjaxButton(\"add\",\n+                    new Model(getString(\"add\"))) {\n \n-                        target.addComponent(container);\n-                    }\n-                };\n+                @Override\n+                protected void onSubmit(AjaxRequestTarget target, Form form) {\n+                    schemaWrapper.getValues().add(\"\");\n \n-                AjaxButton dropButton = new AjaxButton(\"drop\", new Model(getString(\"drop\"))) {\n+                    target.addComponent(container);\n+                }\n+            };\n \n-                    @Override\n-                    protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                        //Drop the last component added\n-                        schemaWrapper.getValues().remove(schemaWrapper.getValues().size() - 1);\n+            AjaxButton dropButton = new AjaxButton(\"drop\",\n+                    new Model(getString(\"drop\"))) {\n \n-                        target.addComponent(container);\n-                    }\n-                };\n+                @Override\n+                protected void onSubmit(AjaxRequestTarget target, Form form) {\n+                    //Drop the last component added\n+                    schemaWrapper.getValues().remove(schemaWrapper.getValues()\n+                            .size() - 1);\n \n-                if (schemaTO.getType().getClassName().equals(\"java.lang.Boolean\")) {\n-                    addButton.setVisible(false);\n-                    dropButton.setVisible(false);\n+                    target.addComponent(container);\n                 }\n+            };\n \n-                addButton.setDefaultFormProcessing(false);\n-                addButton.setVisible(schemaTO.isMultivalue());\n+            if (schemaTO.getType().getClassName().equals(\"java.lang.Boolean\")) {\n+                addButton.setVisible(false);\n+                dropButton.setVisible(false);\n+            }\n \n-                dropButton.setDefaultFormProcessing(false);\n-                dropButton.setVisible(schemaTO.isMultivalue());\n+            addButton.setDefaultFormProcessing(false);\n+            addButton.setVisible(schemaTO.isMultivalue());\n \n-                if (schemaWrapper.getValues().size() == 1) {\n-                    dropButton.setVisible(false);\n-                }\n+            dropButton.setDefaultFormProcessing(false);\n+            dropButton.setVisible(schemaTO.isMultivalue());\n \n-                item.add(addButton);\n-                item.add(dropButton);\n+            if (schemaWrapper.getValues().size() == 1) {\n+                dropButton.setVisible(false);\n             }\n+\n+            item.add(addButton);\n+            item.add(dropButton);\n+        }\n         };\n \n         submit = new AjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n-                MembershipTO membershipTO = (MembershipTO) form.getDefaultModelObject();\n+                MembershipTO membershipTO = (MembershipTO) form\n+                        .getDefaultModelObject();\n                 membershipTO.setAttributes(getMembershipAttributes());\n                 \n                 UserModalPage userModalPage = (UserModalPage) basePage;\n@@ -228,17 +254,17 @@ protected void onError(AjaxRequestTarget target, Form form) {\n         add(form);\n     }\n \n-        public Set<AttributeTO> getMembershipAttributes() {\n+        public List<AttributeTO> getMembershipAttributes() {\n \n-        Set<AttributeTO> attributes = new HashSet<AttributeTO>();\n+        List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n \n         AttributeTO attribute;\n \n         for (SchemaWrapper schemaWrapper : schemaWrappers) {\n \n             attribute = new AttributeTO();\n             attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n-            attribute.setValues(new HashSet<String>());\n+            attribute.setValues(new ArrayList<String>());\n \n             for (String value : schemaWrapper.getValues()) {\n                 attribute.getValues().add(value);\n@@ -255,10 +281,11 @@ public void setupSchemaWrappers(boolean create, MembershipTO membershipTO) {\n         schemaWrappers = new ArrayList<SchemaWrapper>();\n         SchemaWrapper schemaWrapper;\n \n-        SchemaRestClient schemaRestClient = (SchemaRestClient) ((SyncopeApplication)\n-                Application.get()).getApplicationContext().getBean(\"schemaRestClient\");\n+        SchemaRestClient schemaRestClient = (SchemaRestClient) \n+                ((SyncopeApplication) Application.get()).getApplicationContext()\n+                .getBean(\"schemaRestClient\");\n \n-        SchemaTOs schemas = schemaRestClient.getAllMemberhipSchemas();\n+        List<SchemaTO> schemas = schemaRestClient.getAllMemberhipSchemas();\n \n         if(create) {\n             for (SchemaTO schema : schemas) {\n@@ -278,42 +305,4 @@ public void setupSchemaWrappers(boolean create, MembershipTO membershipTO) {\n             }\n         }\n     }\n-\n-  /**\n-     * Wrapper for User's Schema - Attribute.\n-     */\n-    public class SchemaWrapper {\n-\n-        SchemaTO schemaTO;\n-        List<String> values;\n-\n-        public SchemaWrapper(SchemaTO schemaTO) {\n-            this.schemaTO = schemaTO;\n-            values = new ArrayList<String>();\n-            values.add(\"\");\n-        }\n-\n-        public SchemaTO getSchemaTO() {\n-            return schemaTO;\n-        }\n-\n-        public void setSchemaTO(SchemaTO schemaTO) {\n-            this.schemaTO = schemaTO;\n-        }\n-\n-        public List<String> getValues() {\n-            return values;\n-        }\n-\n-        public void setValues(List<String> values) {\n-            this.values = values;\n-        }\n-\n-        public void setValues(Set<String> values) {\n-            this.values = new ArrayList<String>();\n-            for (String value : values) {\n-                this.values.add(value);\n-            }\n-        }\n-    }\n }"},{"sha":"08edaefe3d1be2b5fafc2fafa60bbe60ec544ac5","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":59,"deletions":28,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -20,6 +20,7 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import org.apache.wicket.Application;\n@@ -43,15 +44,16 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.apache.wicket.util.string.Strings;\n import org.syncope.client.to.ConnectorInstanceTO;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.SchemaMappingTO;\n-import org.syncope.client.to.SchemaMappingTOs;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.SyncopeApplication;\n import org.syncope.console.rest.ConnectorsRestClient;\n import org.syncope.console.rest.ResourcesRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.console.wicket.markup.html.form.UpdatingAutoCompleteTextField;\n import org.syncope.console.wicket.markup.html.form.UpdatingCheckBox;\n import org.syncope.console.wicket.markup.html.form.UpdatingDropDownChoice;\n import org.syncope.console.wicket.markup.html.form.UpdatingTextField;\n@@ -67,7 +69,8 @@ public class ResourceModalPage extends SyncopeModalPage {\n     public CheckBox forceMandatoryConstraint;\n \n     ConnectorInstanceTO connectorTO = new ConnectorInstanceTO();\n-    SchemaMappingTOs schemaMappingTOs = new SchemaMappingTOs();\n+    List<SchemaMappingTO> schemaMappingTOs =\n+            new ArrayList<SchemaMappingTO>();\n \n     public AjaxButton submit;\n     public AjaxButton addSchemaMappingBtn;\n@@ -100,8 +103,8 @@ public class ResourceModalPage extends SyncopeModalPage {\n     public ResourceModalPage(final BasePage basePage, final ModalWindow window,\n             final ResourceTO resourceTO, final boolean createFlag) {\n \n-        schemaRestClient = (SchemaRestClient) ((SyncopeApplication) Application.get())\n-                .getApplicationContext().getBean(\"schemaRestClient\");\n+        schemaRestClient = (SchemaRestClient) ((SyncopeApplication) Application\n+                .get()).getApplicationContext().getBean(\"schemaRestClient\");\n \n         setupChoiceListsPopulators();\n \n@@ -121,10 +124,10 @@ public ResourceModalPage(final BasePage basePage, final ModalWindow window,\n             protected Object load() {\n \n                 ConnectorsRestClient connectorRestClient = (ConnectorsRestClient)\n-                        ((SyncopeApplication) Application.get()).getApplicationContext().\n-                        getBean(\"connectorsRestClient\");\n+                        ((SyncopeApplication) Application.get())\n+                        .getApplicationContext().getBean(\"connectorsRestClient\");\n \n-                return connectorRestClient.getAllConnectors().getInstances();\n+                return connectorRestClient.getAllConnectors();\n             }\n         };\n \n@@ -150,7 +153,8 @@ protected Object load() {\n         resourceForm.add(forceMandatoryConstraint);\n \n         ChoiceRenderer renderer = new ChoiceRenderer(\"displayName\", \"id\");\n-        connector = new DropDownChoice(\"connectors\", new Model(connectorTO), connectors, renderer);\n+        connector = new DropDownChoice(\"connectors\", new Model(connectorTO),\n+                connectors, renderer);\n         connector.setEnabled(createFlag);\n         connector.setModel(new IModel() {\n \n@@ -176,7 +180,7 @@ public void detach() {\n         resourceForm.add(connector);\n \n         mappingUserSchemaView = new ListView(\"mappingsUserSchema\",\n-                schemaMappingTOs.getMappings()) {\n+                schemaMappingTOs) {\n \n             SchemaMappingTO mappingTO = null;\n             UpdatingDropDownChoice schemaAttributeChoice = null;\n@@ -190,14 +194,17 @@ protected void populateItem(ListItem item) {\n                     @Override\n                     protected void onUpdate(AjaxRequestTarget target) {\n                         int id = new Integer(getParent().getId());\n-                        schemaMappingTOs.getMappings().remove(id);\n+                        schemaMappingTOs.remove(id);\n                         target.addComponent(mappingUserSchemaContainer);\n                     }\n                 });\n-                item.add(new UpdatingTextField(\"field\", new PropertyModel(mappingTO, \"field\")).\n-                        setRequired(true).setLabel(new Model(getString(\"fieldName\"))));\n+                item.add(new UpdatingTextField(\"field\",\n+                        new PropertyModel(mappingTO, \"field\")).\n+                        setRequired(true).setLabel(\n+                        new Model(getString(\"fieldName\"))));\n \n-                schemaAttributeChoice = new UpdatingDropDownChoice(\"schemaAttributes\",\n+                schemaAttributeChoice =\n+                        new UpdatingDropDownChoice(\"schemaAttributes\",\n                         new PropertyModel(mappingTO, \"schemaName\"),null);\n                 \n                 if(mappingTO.getSchemaType() == null)\n@@ -231,27 +238,52 @@ else if (mappingTO.getSchemaType().equals(SchemaType.Password)){\n                 item.add(schemaAttributeChoice);\n \n                 item.add(new SchemaTypesDropDownChoice(\"schemaTypes\",\n-                         new PropertyModel(mappingTO, \"schemaType\"), schemaTypesList, schemaAttributeChoice)\n-                        .setRequired(true)\n-                        .setOutputMarkupId(true));\n+                         new PropertyModel(mappingTO, \"schemaType\"), \n+                         schemaTypesList, schemaAttributeChoice)\n+                         .setRequired(true).setOutputMarkupId(true));\n \n-                item.add(new UpdatingCheckBox(\"nullable\", new PropertyModel(mappingTO, \"nullable\")));\n-                item.add(new UpdatingCheckBox(\"accountId\", new PropertyModel(mappingTO, \"accountid\")));\n-                item.add(new UpdatingCheckBox(\"password\", new PropertyModel(mappingTO, \"password\")));\n+                item.add(new UpdatingAutoCompleteTextField(\"mandatoryCondition\",\n+                        new PropertyModel(mappingTO,\"mandatoryCondition\")) {\n+\n+                    @Override\n+                    protected Iterator getChoices(String input) {\n+                        List<String> choices = new ArrayList<String>();\n+\n+                        if (Strings.isEmpty(input))\n+                        {\n+                            choices = Collections.emptyList();\n+                            return choices.iterator();\n+                        }\n+\n+                        if(\"true\".startsWith(input.toLowerCase()))\n+                            choices.add(\"true\");\n+                        else if (\"false\".startsWith(input.toLowerCase()))\n+                               choices.add(\"false\");\n+\n+\n+                        return choices.iterator();\n+                    }\n+                });\n+                item.add(new UpdatingCheckBox(\"accountId\",\n+                        new PropertyModel(mappingTO, \"accountid\")));\n+                item.add(new UpdatingCheckBox(\"password\",\n+                        new PropertyModel(mappingTO, \"password\")));\n             }\n         };\n \n-        mappingUserSchemaContainer = new WebMarkupContainer(\"mappingUserSchemaContainer\");\n+        mappingUserSchemaContainer =\n+                new WebMarkupContainer(\"mappingUserSchemaContainer\");\n         mappingUserSchemaContainer.add(mappingUserSchemaView);\n         mappingUserSchemaContainer.setOutputMarkupId(true);\n \n         resourceForm.add(mappingUserSchemaContainer);\n \n-        addSchemaMappingBtn = new AjaxButton(\"addUserSchemaMappingBtn\", new Model(getString(\"add\"))) {\n+        addSchemaMappingBtn = new AjaxButton(\"addUserSchemaMappingBtn\",\n+                new Model(getString(\"add\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                schemaMappingTOs.addMapping(new SchemaMappingTO());\n+                schemaMappingTOs.add(new SchemaMappingTO());\n                 target.addComponent(mappingUserSchemaContainer);\n             }\n         };\n@@ -355,16 +387,15 @@ public void resourceFormCustomValidation() {\n      * Set User and Role Schemas list for populating different views.\n      * @param schemaMappingTos\n      */\n-    public void setupSchemaMappingsList(SchemaMappingTOs schemaMappingTos) {\n-        schemaMappingTOs = new SchemaMappingTOs();\n+    public void setupSchemaMappingsList(List<SchemaMappingTO> schemaMappingTos) {\n+        schemaMappingTOs = new ArrayList<SchemaMappingTO>();\n \n         if (schemaMappingTos != null) {\n-            for (SchemaMappingTO schemaMappingTO :\n-                    schemaMappingTos.getMappings()) {\n-                schemaMappingTOs.addMapping(schemaMappingTO);\n+            for (SchemaMappingTO schemaMappingTO :  schemaMappingTos) {\n+                schemaMappingTOs.add(schemaMappingTO);\n             }\n         } else {\n-            schemaMappingTOs.addMapping(new SchemaMappingTO());\n+            schemaMappingTOs.add(new SchemaMappingTO());\n         }\n     }\n "},{"sha":"7e6bbd7d0ee37c60ff0f57dbaea62169c21c9cc9","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":139,"deletions":44,"changes":183,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -14,29 +14,41 @@\n  */\n package org.syncope.console.pages;\n \n-\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Iterator;\n+import java.util.List;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageParameters;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigator;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n+        .AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.PageableListView;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n import org.syncope.console.rest.ResourcesRestClient;\n+import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n+import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n \n /**\n  * Resources WebPage.\n@@ -55,10 +67,11 @@ public class Resources extends BasePage {\n     final int WIN_INITIAL_HEIGHT = 515;\n     final int WIN_INITIAL_WIDTH = 775;\n \n-    WebMarkupContainer resourcesContainer;\n+    WebMarkupContainer container;\n \n-    /** Response flag set by the Modal Window after the operation is completed:\n-     *  TRUE if the operation succedes, FALSE otherwise\n+    /*\n+     Response flag set by the Modal Window after the operation is completed:\n+     TRUE if the operation succedes, FALSE otherwise\n      */\n     boolean operationResult = false;\n     FeedbackPanel feedbackPanel;\n@@ -76,33 +89,26 @@ public Resources(PageParameters parameters) {\n \n         add(feedbackPanel);\n \n-        IModel resources = new LoadableDetachableModel() {\n-\n-            protected Object load() {\n-                return restClient.getAllResources().getResources();\n-            }\n-        };\n-\n         paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n                 .CONF_RESOURCES_PAGINATOR_ROWS);\n \n-        final PageableListView resourcesView = new PageableListView(\"resources\",\n-                resources, paginatorRows) {\n+        List<IColumn> columns = new ArrayList<IColumn>();\n \n-            @Override\n-            protected void populateItem(final ListItem item) {\n-                final ResourceTO resourceTO =\n-                        (ResourceTO) item.getDefaultModelObject();\n-\n-                item.add(new Label(\"name\", resourceTO.getName()));\n+        columns.add(new PropertyColumn(new Model(getString(\"name\")),\n+                \"name\", \"name\"));\n \n+        columns.add(new AbstractColumn<ResourceTO>(new Model<String>(\n+                getString(\"edit\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<ResourceTO>>\n+                    cellItem, String componentId, IModel<ResourceTO> model)\n+            {\n+                    final ResourceTO resourceTO = model.getObject();\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        final ResourceTO resourceTO =\n-                                (ResourceTO) item.getDefaultModelObject();\n \n                         editResourceWin.setPageCreator(new ModalWindow\n                                 .PageCreator() {\n@@ -117,11 +123,23 @@ public Page createPage() {\n \n                         editResourceWin.show(target);\n                     }\n-                };\n+                    };\n+\n+                    EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                    panel.add(editLink);\n+\n+                    cellItem.add(panel);\n+            }\n+        });\n \n-                item.add(editLink);\n+        columns.add(new AbstractColumn<ResourceTO>(new Model<String>\n+                (getString(\"delete\"))) {\n+            public void populateItem(Item<ICellPopulator<ResourceTO>>\n+                    cellItem, String componentId, IModel<ResourceTO> model)\n+            {\n+                    final ResourceTO resourceTO = model.getObject();\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                    AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -130,25 +148,30 @@ public void onClick(AjaxRequestTarget target) {\n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n \n-                        target.addComponent(resourcesContainer);\n+                        target.addComponent(container);\n                     }\n-                };\n+                 };\n+                    DeleteLinkPanel panel = new DeleteLinkPanel(componentId,\n+                            model);\n+                    panel.add(deleteLink);\n \n-                item.add(deleteLink);\n+                    cellItem.add(panel);\n             }\n-        };\n+        });\n \n-        add(new AjaxPagingNavigator(\"resourcesNavigator\", resourcesView)\n-                .setOutputMarkupId(true));\n \n-        resourcesContainer = new WebMarkupContainer(\"resourcesContainer\");\n-        resourcesContainer.add(resourcesView);\n-        resourcesContainer.setOutputMarkupId(true);\n+        final AjaxFallbackDefaultDataTable table =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columns,\n+                new ResourcesProvider(), paginatorRows);\n \n-        add(resourcesContainer);\n+        container = new WebMarkupContainer(\"container\");\n+        container.add(table);\n+        container.setOutputMarkupId(true);\n \n-        setWindowClosedCallback(createResourceWin, resourcesContainer);\n-        setWindowClosedCallback(editResourceWin, resourcesContainer);\n+        add(container);\n+\n+        setWindowClosedCallback(createResourceWin, container);\n+        setWindowClosedCallback(editResourceWin, container);\n \n         createResourceWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createResourceWin.setInitialHeight(WIN_INITIAL_HEIGHT);\n@@ -192,9 +215,9 @@ protected void onUpdate( AjaxRequestTarget target )\n               utility.updatePaginatorRows(Constants.CONF_RESOURCES_PAGINATOR_ROWS,\n                       paginatorRows);\n \n-              resourcesView.setRowsPerPage(paginatorRows);\n+              table.setRowsPerPage(paginatorRows);\n               \n-              target.addComponent(resourcesContainer);\n+              target.addComponent(container);\n               target.addComponent(getPage().get(\"resourcesNavigator\"));\n             }\n \n@@ -233,4 +256,76 @@ public void onClose(AjaxRequestTarget target) {\n                     }\n                 });\n     }\n+\n+    class ResourcesProvider extends SortableDataProvider<ResourceTO> {\n+\n+        private SortableDataProviderComparator comparator =\n+                new SortableDataProviderComparator();\n+\n+        public ResourcesProvider() {\n+            //Default sorting\n+            setSort(\"name\",true);\n+        }\n+\n+        @Override\n+        public Iterator<ResourceTO> iterator(int first, int count) {\n+            List<ResourceTO> list = getResourcesListDB();\n+\n+            Collections.sort(list, comparator);\n+\n+            return list.subList(first, first+count).iterator();\n+        }\n+\n+        @Override\n+        public int size() {\n+            return getResourcesListDB().size();\n+        }\n+\n+        @Override\n+        public IModel<ResourceTO> model(final ResourceTO\n+                resource) {\n+            return new AbstractReadOnlyModel<ResourceTO>() {\n+\n+                @Override\n+                public ResourceTO getObject() {\n+                    return resource;\n+                }\n+            };\n+        }\n+\n+        public List<ResourceTO> getResourcesListDB(){\n+        List<ResourceTO> list = restClient.getAllResources();\n+\n+        return list;\n+        }\n+\n+        class SortableDataProviderComparator implements\n+                Comparator<ResourceTO>, Serializable {\n+            public int compare(final ResourceTO o1,\n+                    final ResourceTO o2) {\n+                    PropertyModel<Comparable> model1 =\n+                            new PropertyModel<Comparable>(o1, getSort()\n+                            .getProperty());\n+                    PropertyModel<Comparable> model2 =\n+                            new PropertyModel<Comparable>(o2, getSort()\n+                            .getProperty());\n+\n+                    int result = 1;\n+\n+                    if(model1.getObject() == null && model2.getObject() == null)\n+                        result = 0;\n+                    else if(model1.getObject() == null)\n+                        result = 1;\n+                    else if(model2.getObject() == null)\n+                        result = -1;\n+                    else\n+                        result = ((Comparable)model1.getObject()).compareTo(\n+                                model2.getObject());\n+\n+                    result = getSort().isAscending() ? result : -result;\n+\n+                    return result;\n+            }\n+\t}\n+    }\n }\n\\ No newline at end of file"},{"sha":"6e11b7ee0299bbb8e5eced808e9209c5c2504455","filename":"console/src/main/java/org/syncope/console/pages/RoleModalPage.java","status":"modified","additions":329,"deletions":385,"changes":714,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -53,12 +53,11 @@\n import org.syncope.client.mod.RoleMod;\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.ResourceTO;\n-import org.syncope.client.to.ResourceTOs;\n import org.syncope.client.to.RoleTO;\n import org.syncope.client.to.SchemaTO;\n-import org.syncope.client.to.SchemaTOs;\n \n import org.syncope.console.SyncopeApplication;\n+import org.syncope.console.commons.SchemaWrapper;\n import org.syncope.console.rest.ResourcesRestClient;\n import org.syncope.console.rest.RolesRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n@@ -71,505 +70,450 @@\n  */\n public class RoleModalPage extends SyncopeModalPage {\n \n-    @SpringBean(name = \"rolesRestClient\")\n-    RolesRestClient restClient;\n-    AjaxButton submit;\n-    WebMarkupContainer container;\n-    List<SchemaWrapper> schemaWrappers = new ArrayList<SchemaWrapper>();\n+@SpringBean(name = \"rolesRestClient\")\n+RolesRestClient restClient;\n \n-    RoleTO oldRole;\n-    RoleMod roleMod;\n-    \n-    /**\n-     *\n-     * @param basePage base\n-     * @param modalWindow modal window\n-     * @param connectorTO\n-     * @param create : set to true only if a CREATE operation is required\n-     */\n-    public RoleModalPage(final BasePage basePage, final ModalWindow window,\n-            final RoleTO roleTO, final boolean createFlag) {\n+AjaxButton submit;\n+WebMarkupContainer container;\n \n-        Form form = new Form(\"RoleForm\");\n+List<SchemaWrapper> schemaWrappers = new ArrayList<SchemaWrapper>();\n \n-        form.setModel(new CompoundPropertyModel(roleTO));\n+RoleTO oldRole;\n+RoleMod roleMod;\n \n-        setupSchemaWrappers(createFlag, roleTO);\n+/**\n+*\n+* @param basePage base\n+* @param modalWindow modal window\n+* @param connectorTO\n+* @param create : set to true only if a CREATE operation is required\n+*/\n+public RoleModalPage(final BasePage basePage, final ModalWindow window,\n+    final RoleTO roleTO, final boolean createFlag) {\n \n-        if(!createFlag)\n-            cloneOldRoleTO(roleTO);\n+Form form = new Form(\"RoleForm\");\n \n-        final ListView roleAttributesView = new ListView(\"roleSchemas\", schemaWrappers) {\n+form.setModel(new CompoundPropertyModel(roleTO));\n \n-            @Override\n-            protected void populateItem(ListItem item) {\n-                final SchemaWrapper schemaWrapper = (SchemaWrapper) item.getDefaultModelObject();\n+setupSchemaWrappers(createFlag, roleTO);\n \n-                final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n+if(!createFlag)\n+    cloneOldRoleTO(roleTO);\n \n-                item.add(new Label(\"name\", schemaWrapper.getSchemaTO().getName()));\n+final ListView roleAttributesView = new ListView(\"roleSchemas\", schemaWrappers) {\n \n-                item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n+    @Override\n+    protected void populateItem(ListItem item) {\n+        final SchemaWrapper schemaWrapper = (SchemaWrapper) item\n+                .getDefaultModelObject();\n \n-                    Panel panel;\n+        final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n \n-                    @Override\n-                    protected void populateItem(final ListItem item) {\n+        item.add(new Label(\"name\", schemaWrapper.getSchemaTO().getName()));\n \n-                      if (schemaTO.getType().getClassName().equals(\"java.lang.Boolean\")) {\n-                            panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getName(), new Model() {\n+        item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n \n-                                @Override\n-                                public Serializable getObject() {\n-                                    return (String) item.getModelObject();\n-                                }\n+            Panel panel;\n \n-                                @Override\n-                                public void setObject(Serializable object) {\n-                                    Boolean val = (Boolean) object;\n-                                    item.setModelObject(val.toString());\n-                                }\n-                            }, schemaTO.isMandatory());\n-\n-                        } else if (schemaTO.getType().getClassName().equals(\"java.util.Date\")) {\n-                            panel = new DateFieldPanel(\"panel\", schemaTO.getName(),\n-                                    new Model() {\n-\n-                                        @Override\n-                                        public Serializable getObject() {\n-                                            DateFormat formatter = new SimpleDateFormat(schemaTO.getConversionPattern());\n-                                            Date date = new Date();\n-                                            try {\n-                                                String dateValue = (String) item.getModelObject();\n-                                                formatter = new SimpleDateFormat(schemaTO.getConversionPattern());//Default value:yyyy-MM-dd\n-                                                if(!dateValue.equals(\"\"))\n-                                                    date = formatter.parse((String) item.getModelObject());\n-                                            } catch (ParseException ex) {\n-                                                Logger.getLogger(RoleModalPage.class.getName()).log(Level.SEVERE, null, ex);\n-                                            }\n-                                            return date;\n-                                        }\n-\n-                                        @Override\n-                                        public void setObject(Serializable object) {\n-                                            Date date = (Date) object;\n-                                            Format formatter = new SimpleDateFormat(schemaTO.getConversionPattern());\n-                                            String val = formatter.format(date);\n-                                            item.setModelObject(val);\n-                                        }\n-                                    }, schemaTO.isMandatory());\n+            @Override\n+            protected void populateItem(final ListItem item) {\n+                String mandatoryCondition =\n+                        schemaTO.getMandatoryCondition();\n+\n+                boolean required = false;\n+\n+                if (mandatoryCondition.equalsIgnoreCase(\"true\")) {\n+                    required = true;\n+                }\n+\n+              if (schemaTO.getType().getClassName()\n+                        .equals(\"java.lang.Boolean\")) {\n+                    panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getName(),\n+                            new Model() {\n+\n+                        @Override\n+                        public Serializable getObject() {\n+                            return (String) item.getModelObject();\n+                        }\n+\n+                        @Override\n+                        public void setObject(Serializable object) {\n+                            Boolean val = (Boolean) object;\n+                            item.setModelObject(val.toString());\n                         }\n-                        //Common other cases : java.lang.String,java.lang.Double,java.lang.Long\n-                        else  {\n-                            panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getName(), new Model() {\n+                    }, required);\n+\n+                } else if (schemaTO.getType().getClassName()\n+                        .equals(\"java.util.Date\")) {\n+                    panel = new DateFieldPanel(\"panel\", schemaTO.getName(),\n+                            new Model() {\n \n                                 @Override\n                                 public Serializable getObject() {\n-                                    return (String) item.getModelObject();\n+                                    DateFormat formatter = new SimpleDateFormat(\n+                                            schemaTO.getConversionPattern());\n+                                    Date date = new Date();\n+                                    try {\n+                                        String dateValue = (String) item\n+                                                .getModelObject();\n+                                        formatter = new SimpleDateFormat(\n+                                                schemaTO.getConversionPattern());\n+                                        //Default value:yyyy-MM-dd\n+                                        if(!dateValue.equals(\"\"))\n+                                            date = formatter.parse((String)\n+                                                    item.getModelObject());\n+                                    } catch (ParseException ex) {\n+                                        Logger.getLogger(\n+                                                RoleModalPage.class.getName())\n+                                                .log(Level.SEVERE, null, ex);\n+                                    }\n+                                    return date;\n                                 }\n \n                                 @Override\n                                 public void setObject(Serializable object) {\n-                                    item.setModelObject((String) object);\n+                                    Date date = (Date) object;\n+                                    Format formatter = new SimpleDateFormat(\n+                                            schemaTO.getConversionPattern());\n+                                    String val = formatter.format(date);\n+                                    item.setModelObject(val);\n                                 }\n-                            }, schemaTO.isMandatory());\n+                            }, required);\n+                }\n+                //Common other cases : java.lang.String,java.lang.Double,java.lang.Long\n+                else  {\n+                    panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getName(),\n+                            new Model() {\n+\n+                        @Override\n+                        public Serializable getObject() {\n+                            return (String) item.getModelObject();\n                         }\n \n-                        item.add(panel);\n-                    }\n-                });\n-\n-                AjaxButton addButton = new AjaxButton(\"add\", new Model(getString(\"add\"))) {\n-\n-                    @Override\n-                    protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                        schemaWrapper.getValues().add(\"\");\n-\n-                        target.addComponent(container);\n-                    }\n-                };\n-\n-                AjaxButton dropButton = new AjaxButton(\"drop\", new Model(getString(\"drop\"))) {\n-\n-                    @Override\n-                    protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                        //Drop the last component added\n-                        schemaWrapper.getValues().remove(schemaWrapper.getValues().size() - 1);\n-\n-                        target.addComponent(container);\n-                    }\n-                };\n-\n-                if (schemaTO.getType().getClassName().equals(\"java.lang.Boolean\")) {\n-                    addButton.setVisible(false);\n-                    dropButton.setVisible(false);\n+                        @Override\n+                        public void setObject(Serializable object) {\n+                            item.setModelObject((String) object);\n+                        }\n+                    }, required);\n                 }\n \n-                addButton.setDefaultFormProcessing(false);\n-                addButton.setVisible(schemaTO.isMultivalue());\n+                item.add(panel);\n+            }\n+        });\n \n-                dropButton.setDefaultFormProcessing(false);\n-                dropButton.setVisible(schemaTO.isMultivalue());\n+        AjaxButton addButton = new AjaxButton(\"add\",\n+                new Model(getString(\"add\"))) {\n \n-                if (schemaWrapper.getValues().size() == 1) {\n-                    dropButton.setVisible(false);\n-                }\n+            @Override\n+            protected void onSubmit(AjaxRequestTarget target, Form form) {\n+                schemaWrapper.getValues().add(\"\");\n \n-                item.add(addButton);\n-                item.add(dropButton);\n+                target.addComponent(container);\n             }\n         };\n \n-        form.add(roleAttributesView);\n-\n-        /*final ListMultipleChoiceTransfer resourcesTransfer =\n-                new ListMultipleChoiceTransfer(\"resourcesChoiceTransfer\",\n-                getString(\"firstResourcesList\"), getString(\"secondResourcesList\")) {\n+        AjaxButton dropButton = new AjaxButton(\"drop\",\n+                new Model(getString(\"drop\"))) {\n \n-                    @Override\n-                    public List<String> setupOriginals() {\n-                        //Originals:role's resources\n-                        List<String> resources = new ArrayList<String>();\n-\n-                        for (String resourceName : roleTO.getResources()) {\n-                            resources.add(resourceName);\n-                        }\n-\n-                        return resources;\n-\n-                    }\n+            @Override\n+            protected void onSubmit(AjaxRequestTarget target, Form form) {\n+                //Drop the last component added\n+                schemaWrapper.getValues().remove(schemaWrapper.getValues()\n+                        .size() - 1);\n \n-                    @Override\n-                    public List<String> setupDestinations() {\n-                        //Destinations:available resources\n-                        List<String> resources = new ArrayList<String>();\n+                target.addComponent(container);\n+            }\n+        };\n \n-                        ResourcesRestClient resourcesRestClient = (ResourcesRestClient)\n-                                ((SyncopeApplication) Application.get()).getApplicationContext().getBean(\"resourcesRestClient\");\n+        if (schemaTO.getType().getClassName().equals(\"java.lang.Boolean\")) {\n+            addButton.setVisible(false);\n+            dropButton.setVisible(false);\n+        }\n \n-                        ResourceTOs resourcesTos = resourcesRestClient.getAllResources();\n+        addButton.setDefaultFormProcessing(false);\n+        addButton.setVisible(schemaTO.isMultivalue());\n \n-                        if (roleTO.getResources().size() == 0) {\n-                            for (ResourceTO resourceTO : resourcesTos) {\n-                                resources.add(resourceTO.getName());\n-                            }\n+        dropButton.setDefaultFormProcessing(false);\n+        dropButton.setVisible(schemaTO.isMultivalue());\n \n-                        } else {\n+        if (schemaWrapper.getValues().size() == 1) {\n+            dropButton.setVisible(false);\n+        }\n \n-                            for (String resource : roleTO.getResources()) {\n-                                for (ResourceTO resourceTO : resourcesTos) {\n-                                    if (!resource.equals(resourceTO.getName())) {\n-                                        resources.add(resourceTO.getName());\n-                                    }\n-                                }\n-                            }\n-                        }\n-                        return resources;\n-                    }\n-                };\n+        item.add(addButton);\n+        item.add(dropButton);\n+    }\n+};\n \n-        form.add(resourcesTransfer);*/\n+form.add(roleAttributesView);\n \n-        ListModel<ResourceTO> selectedResources = new ListModel<ResourceTO>();\n-        selectedResources.setObject(getSelectedResources(roleTO));\n+ListModel<ResourceTO> selectedResources = new ListModel<ResourceTO>();\n+selectedResources.setObject(getSelectedResources(roleTO));\n \n-        ListModel<ResourceTO> availableResources = new ListModel<ResourceTO>();\n-        availableResources.setObject(getAvailableResources(roleTO));\n+ListModel<ResourceTO> availableResources = new ListModel<ResourceTO>();\n+availableResources.setObject(getAvailableResources(roleTO));\n \n-        ChoiceRenderer paletteRenderer = new ChoiceRenderer(\"name\", \"name\");\n+ChoiceRenderer paletteRenderer = new ChoiceRenderer(\"name\", \"name\");\n \n-        final Palette<ResourceTO> resourcesPalette = new Palette(\"resourcesPalette\",\n-        selectedResources, availableResources, paletteRenderer, 8, false);\n+final Palette<ResourceTO> resourcesPalette = new Palette(\"resourcesPalette\",\n+selectedResources, availableResources, paletteRenderer, 8, false);\n \n-        form.add(resourcesPalette);\n+form.add(resourcesPalette);\n \n-        container = new WebMarkupContainer(\"container\");\n-        container.add(roleAttributesView);\n-        container.setOutputMarkupId(true);\n+container = new WebMarkupContainer(\"container\");\n+container.add(roleAttributesView);\n+container.setOutputMarkupId(true);\n \n-        form.add(container);\n+form.add(container);\n \n-        TextField name = new TextField(\"name\");\n-        name.setRequired(true);\n-        container.add(name);\n+TextField name = new TextField(\"name\");\n+name.setRequired(true);\n+container.add(name);\n \n-        submit = new AjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n+submit = new AjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n \n-            @Override\n-            protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                RoleTO roleTO = (RoleTO) form.getDefaultModelObject();\n+    @Override\n+    protected void onSubmit(AjaxRequestTarget target, Form form) {\n+        RoleTO roleTO = (RoleTO) form.getDefaultModelObject();\n \n-                boolean res = false;\n+        boolean res = false;\n \n-                try {\n+        try {\n \n-                    roleTO.setResources(getResourcesSet(resourcesPalette.getModelCollection()));\n-                    roleTO.setAttributes(getRoleAttributes());\n+            roleTO.setResources(getResourcesSet(resourcesPalette\n+                    .getModelCollection()));\n+            roleTO.setAttributes(getRoleAttributes());\n \n-                    if (createFlag) {\n-                        restClient.createRole(roleTO);\n+            if (createFlag) {\n+                restClient.createRole(roleTO);\n \n-                        Roles callerPage = (Roles)basePage;\n-                        callerPage.setOperationResult(true);\n+                Roles callerPage = (Roles)basePage;\n+                callerPage.setOperationResult(true);\n \n-                        window.close(target);\n-                    } else {\n-                        setupRoleMod(roleTO);\n-                        res = restClient.updateRole(roleMod);\n-                        if (!res) {\n-                            error(getString(\"error\"));\n-                        } else {\n-                            Roles callerPage = (Roles)basePage;\n-                            callerPage.setOperationResult(true);\n-                            \n-                            window.close(target);\n-                        }\n-                    }\n+                window.close(target);\n+            } else {\n+                setupRoleMod(roleTO);\n+                res = restClient.updateRole(roleMod);\n+                if (!res) {\n+                    error(getString(\"error\"));\n+                } else {\n+                    Roles callerPage = (Roles)basePage;\n+                    callerPage.setOperationResult(true);\n \n-                } catch (Exception e) {\n-                    error(getString(\"error\") + \":\" + e.getMessage());\n+                    window.close(target);\n                 }\n             }\n \n-            @Override\n-            protected void onError(AjaxRequestTarget target, Form form) {\n-                target.addComponent(form.get(\"feedback\"));\n-            }\n-        };\n+        } catch (Exception e) {\n+            error(getString(\"error\") + \":\" + e.getMessage());\n+        }\n+    }\n \n-        form.add(submit);\n+    @Override\n+    protected void onError(AjaxRequestTarget target, Form form) {\n+        target.addComponent(form.get(\"feedback\"));\n+    }\n+};\n \n-        form.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n+form.add(submit);\n \n-        add(form);\n-    }\n+form.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n \n-    /**\n-     * Covert a resources List<String> to Set<String>.\n-     * @return Set<String> of Resources.\n-     */\n-    public Set<String> getResourcesSet(Collection<ResourceTO> resourcesList) {\n-        Set<String> resourcesSet = new HashSet<String>();\n+add(form);\n+}\n \n-       for (ResourceTO resourceTO : resourcesList) {\n-            resourcesSet.add(resourceTO.getName());\n-        }\n+/**\n+* Covert a resources List<String> to Set<String>.\n+* @return Set<String> of Resources.\n+*/\n+public Set<String> getResourcesSet(Collection<ResourceTO> resourcesList) {\n+Set<String> resourcesSet = new HashSet<String>();\n+\n+for (ResourceTO resourceTO : resourcesList) {\n+    resourcesSet.add(resourceTO.getName());\n+}\n \n-        return resourcesSet;\n-    }\n+return resourcesSet;\n+}\n \n-    /**\n-     * Originals: resources provided for a stored role.\n-     * @param roleTO\n-     * @return List<ResourceTO>\n-     */\n-    public List<ResourceTO> getSelectedResources(RoleTO roleTO) {\n-        List<ResourceTO> resources = new ArrayList<ResourceTO>();\n-        ResourceTO clusterableResourceTO;\n-\n-        for (String resourceName : roleTO.getResources()) {\n-            clusterableResourceTO = new ResourceTO();\n-            clusterableResourceTO.setName(resourceName);\n-            resources.add(clusterableResourceTO);\n-        }\n-        return resources;\n-    }\n+/**\n+* Originals: resources provided for a stored role.\n+* @param roleTO\n+* @return List<ResourceTO>\n+*/\n+public List<ResourceTO> getSelectedResources(RoleTO roleTO) {\n+List<ResourceTO> resources = new ArrayList<ResourceTO>();\n+ResourceTO clusterableResourceTO;\n+\n+for (String resourceName : roleTO.getResources()) {\n+    clusterableResourceTO = new ResourceTO();\n+    clusterableResourceTO.setName(resourceName);\n+    resources.add(clusterableResourceTO);\n+}\n+return resources;\n+}\n \n \n-    /**\n-     * Destinations: all available\n-     * @param roleTO\n-     * @return List<ResourceTO>\n-     */\n-    public List<ResourceTO> getAvailableResources(RoleTO roleTO) {\n+/**\n+* Destinations: all available\n+* @param roleTO\n+* @return List<ResourceTO>\n+*/\n+public List<ResourceTO> getAvailableResources(RoleTO roleTO) {\n \n-        List<ResourceTO> resources = new ArrayList<ResourceTO>();\n+List<ResourceTO> resources = new ArrayList<ResourceTO>();\n \n-        ResourcesRestClient resourcesRestClient = (ResourcesRestClient) ((SyncopeApplication) Application.get()).getApplicationContext().getBean(\"resourcesRestClient\");\n+ResourcesRestClient resourcesRestClient = (ResourcesRestClient) \n+        ((SyncopeApplication) Application.get()).getApplicationContext()\n+        .getBean(\"resourcesRestClient\");\n \n-        ResourceTOs resourcesTos = resourcesRestClient.getAllResources();\n+List<ResourceTO> resourcesTos = resourcesRestClient.getAllResources();\n \n-        for (ResourceTO resourceTO : resourcesTos) \n-             resources.add(resourceTO);\n-                \n-        \n-        return resources;\n-    }\n+for (ResourceTO resourceTO : resourcesTos) \n+     resources.add(resourceTO);\n+\n+\n+return resources;\n+}\n \n-    public void setupSchemaWrappers(boolean create, RoleTO roleTO) {\n+public void setupSchemaWrappers(boolean create, RoleTO roleTO) {\n \n-        schemaWrappers = new ArrayList<SchemaWrapper>();\n-        SchemaWrapper schemaWrapper;\n+schemaWrappers = new ArrayList<SchemaWrapper>();\n+SchemaWrapper schemaWrapper;\n \n-        SchemaRestClient schemaRestClient = (SchemaRestClient)\n-                ((SyncopeApplication) Application.get()).getApplicationContext().getBean(\"schemaRestClient\");\n+SchemaRestClient schemaRestClient = (SchemaRestClient)\n+        ((SyncopeApplication) Application.get()).getApplicationContext()\n+        .getBean(\"schemaRestClient\");\n \n-        SchemaTOs schemas = schemaRestClient.getAllRoleSchemas();\n+List<SchemaTO> schemas = schemaRestClient.getAllRoleSchemas();\n \n-        boolean found = false;\n+boolean found = false;\n \n-        if (create) {\n-            for (SchemaTO schema : schemas) {\n+if (create) {\n+    for (SchemaTO schema : schemas) {\n+        schemaWrapper = new SchemaWrapper(schema);\n+        schemaWrappers.add(schemaWrapper);\n+    }\n+} else {\n+    for (SchemaTO schema : schemas) {\n+        for (AttributeTO attribute : roleTO.getAttributes()) {\n+            if (schema.getName().equals(attribute.getSchema())) {\n                 schemaWrapper = new SchemaWrapper(schema);\n+                schemaWrapper.setValues(attribute.getValues());\n                 schemaWrappers.add(schemaWrapper);\n+                found = true;\n             }\n+        }\n+        if (!found) {\n+            schemaWrapper = new SchemaWrapper(schema);\n+            schemaWrappers.add(schemaWrapper);\n         } else {\n-            for (SchemaTO schema : schemas) {\n-                for (AttributeTO attribute : roleTO.getAttributes()) {\n-                    if (schema.getName().equals(attribute.getSchema())) {\n-                        schemaWrapper = new SchemaWrapper(schema);\n-                        schemaWrapper.setValues(attribute.getValues());\n-                        schemaWrappers.add(schemaWrapper);\n-                        found = true;\n-                    }\n-                }\n-                if (!found) {\n-                    schemaWrapper = new SchemaWrapper(schema);\n-                    schemaWrappers.add(schemaWrapper);\n-                } else {\n-                    found = false;\n-                }\n-            }\n+            found = false;\n         }\n     }\n+}\n+}\n \n-    public Set<AttributeTO> getRoleAttributes() {\n-\n-        Set<AttributeTO> attributes = new HashSet<AttributeTO>();\n-\n-        AttributeTO attribute;\n-\n-        for (SchemaWrapper schemaWrapper : schemaWrappers) {\n-\n-            attribute = new AttributeTO();\n-            attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n-            attribute.setValues(new HashSet<String>());\n-\n-            for (String value : schemaWrapper.getValues()) {\n-                attribute.getValues().add(value);\n-            }\n+public List<AttributeTO> getRoleAttributes() {\n \n-            attributes.add(attribute);\n-        }\n+List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n \n-        return attributes;\n-    }\n+AttributeTO attribute;\n \n-    /**\n-     * Covert a resources List<String> to Set<String>.\n-     * @return Set<String>\n-     */\n-    public Set<String> getResourcesSet(List<String> resourcesList) {\n-        Set<String> resourcesSet = new HashSet<String>();\n+for (SchemaWrapper schemaWrapper : schemaWrappers) {\n \n-        for (String resource : resourcesList) {\n-            resourcesSet.add(resource);\n-        }\n+    attribute = new AttributeTO();\n+    attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n+    attribute.setValues(new ArrayList<String>());\n \n-        return resourcesSet;\n+    for (String value : schemaWrapper.getValues()) {\n+        attribute.getValues().add(value);\n     }\n \n-    /**\n-     * Create a copy of old RoleTO\n-     * @param roleTO\n-     */\n-    public void cloneOldRoleTO(RoleTO roleTO){\n-        oldRole = new RoleTO();\n+    attributes.add(attribute);\n+}\n \n-        oldRole.setName(new String(roleTO.getName()));\n-        oldRole.setParent(new Long(roleTO.getParent()));\n+return attributes;\n+}\n \n-        Set<AttributeTO> attributes = new HashSet<AttributeTO>();\n+/**\n+* Covert a resources List<String> to Set<String>.\n+* @return Set<String>\n+*/\n+public Set<String> getResourcesSet(List<String> resourcesList) {\n+Set<String> resourcesSet = new HashSet<String>();\n+\n+for (String resource : resourcesList) {\n+    resourcesSet.add(resource);\n+}\n \n-        oldRole.setAttributes(attributes);\n+return resourcesSet;\n+}\n \n-        AttributeTO attributeTO;\n-        Set<String> values;\n-        for (AttributeTO attribute : roleTO.getAttributes()) {\n-            attributeTO = new AttributeTO();\n-            attributeTO.setSchema(new String(attribute.getSchema()));\n+/**\n+* Create a copy of old RoleTO\n+* @param roleTO\n+*/\n+public void cloneOldRoleTO(RoleTO roleTO){\n+oldRole = new RoleTO();\n \n-            values = new HashSet<String>();\n-            for(String val : attribute.getValues()) {\n-                values.add(val);\n-            }\n-            attributeTO.setValues(values);\n-        }\n-    }\n+oldRole.setName(new String(roleTO.getName()));\n+oldRole.setParent(new Long(roleTO.getParent()));\n \n-    public void setupRoleMod(RoleTO roleTO){\n-        roleMod = new RoleMod();\n+List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n \n-        roleMod.setId(roleTO.getId());\n+oldRole.setAttributes(attributes);\n \n-        if(!oldRole.getName().equals(roleTO.getName()))\n-            roleMod.setName(roleTO.getName());\n+AttributeTO attributeTO;\n+List<String> values;\n+for (AttributeTO attribute : roleTO.getAttributes()) {\n+    attributeTO = new AttributeTO();\n+    attributeTO.setSchema(new String(attribute.getSchema()));\n \n-        for(AttributeTO attributeTO : roleTO.getAttributes())\n-            searchAndUpdateAttribute(attributeTO);\n+    values = new ArrayList<String>();\n+    for(String val : attribute.getValues()) {\n+        values.add(val);\n     }\n+    attributeTO.setValues(values);\n+}\n+}\n \n-    public void searchAndUpdateAttribute(AttributeTO attributeTO){\n-        boolean found = false;\n-\n-        AttributeMod attributeMod = new AttributeMod();\n-        attributeMod.setSchema(attributeTO.getSchema());\n-\n-        for(AttributeTO oldAttribute : oldRole.getAttributes()){\n-            if (attributeTO.getSchema().equals(oldAttribute.getSchema())) {\n-\n-                if (!attributeTO.equals(oldAttribute)) {\n-                    attributeMod.setValuesToBeAdded(attributeTO.getValues());\n+public void setupRoleMod(RoleTO roleTO){\n+roleMod = new RoleMod();\n \n-                    roleMod.addAttributeToBeRemoved(oldAttribute.getSchema());\n-                    roleMod.addAttributeToBeUpdated(attributeMod);\n-                }\n+roleMod.setId(roleTO.getId());\n \n-                found = true;\n-            }\n-        }\n+if(!oldRole.getName().equals(roleTO.getName()))\n+    roleMod.setName(roleTO.getName());\n \n-        if(!found){\n-            attributeMod.setValuesToBeAdded(attributeTO.getValues());\n-            roleMod.addAttributeToBeUpdated(attributeMod);\n-       }\n-    }\n+for(AttributeTO attributeTO : roleTO.getAttributes())\n+    searchAndUpdateAttribute(attributeTO);\n+}\n \n-    /**\n-     * Wrapper for User's Schema - Attribute.\n-     */\n-    public class SchemaWrapper {\n+public void searchAndUpdateAttribute(AttributeTO attributeTO){\n+boolean found = false;\n \n-        SchemaTO schemaTO;\n-        List<String> values;\n+AttributeMod attributeMod = new AttributeMod();\n+attributeMod.setSchema(attributeTO.getSchema());\n \n-        public SchemaWrapper(SchemaTO schemaTO) {\n-            this.schemaTO = schemaTO;\n-            values = new ArrayList<String>();\n-            values.add(\"\");\n-        }\n+for(AttributeTO oldAttribute : oldRole.getAttributes()){\n+    if (attributeTO.getSchema().equals(oldAttribute.getSchema())) {\n \n-        public SchemaTO getSchemaTO() {\n-            return schemaTO;\n-        }\n+        if (!attributeTO.equals(oldAttribute)) {\n+            attributeMod.setValuesToBeAdded(attributeTO.getValues());\n \n-        public void setSchemaTO(SchemaTO schemaTO) {\n-            this.schemaTO = schemaTO;\n+            roleMod.addAttributeToBeRemoved(oldAttribute.getSchema());\n+            roleMod.addAttributeToBeUpdated(attributeMod);\n         }\n \n-        public List<String> getValues() {\n-            return values;\n-        }\n+        found = true;\n+    }\n+}\n \n-        public void setValues(List<String> values) {\n-            this.values = values;\n-        }\n+if(!found){\n+    attributeMod.setValuesToBeAdded(attributeTO.getValues());\n+    roleMod.addAttributeToBeUpdated(attributeMod);\n+}\n+}\n \n-        public void setValues(Set<String> values) {\n-            for (String value : values) {\n-                this.values = new ArrayList<String>();\n-                this.values.add(value);\n-            }\n-        }\n-    }\n }"},{"sha":"3a0a91ae9006e89343e69c06cbf1e5340f2b04ab","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":501,"deletions":193,"changes":694,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -14,22 +14,34 @@\n  */\n package org.syncope.console.pages;\n \n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Iterator;\n+import java.util.List;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageParameters;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigator;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n+        .AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid\n+        .ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.PageableListView;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n@@ -38,12 +50,19 @@\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n+import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n \n /**\n  * Schema WebPage.\n  */\n public class Schema extends BasePage\n {\n+    protected enum SchemaType {RoleSchema, UserSchema, MembershipSchema};\n+\n+    protected enum SchemaDerivedType {RoleDerivedSchema, UserDerivedSchema,\n+    MembershipDerivedSchema};\n+\n     @SpringBean(name = \"schemaRestClient\")\n     SchemaRestClient restClient;\n \n@@ -89,7 +108,9 @@ public class Schema extends BasePage\n \n     private int membershipDerPageRows;\n \n-    /** Response flag set by the Modal Window after the operation is completed  */\n+    /*\n+     Response flag set by the Modal Window after the operation is completed\n+     */\n     boolean operationResult = false;\n     FeedbackPanel feedbackPanel;\n     \n@@ -100,20 +121,26 @@ public Schema(PageParameters parameters)\n         add(createRoleSchemaWin = new ModalWindow(\"createRoleSchemaWin\"));\n         add(editRoleSchemaWin = new ModalWindow(\"editRoleSchemaWin\"));\n \n-        add(createRoleDerivedSchemaWin = new ModalWindow(\"createRoleDerivedSchemaWin\"));\n-        add(editRoleDerivedSchemaWin = new ModalWindow(\"editRoleDerivedSchemaWin\"));\n+        add(createRoleDerivedSchemaWin\n+                = new ModalWindow(\"createRoleDerivedSchemaWin\"));\n+        add(editRoleDerivedSchemaWin\n+                = new ModalWindow(\"editRoleDerivedSchemaWin\"));\n \n         add(createUserSchemaWin = new ModalWindow(\"createUserSchemaWin\"));\n         add(editUserSchemaWin = new ModalWindow(\"editUserSchemaWin\"));\n         \n-        add(createUserDerivedSchemaWin = new ModalWindow(\"createUserDerSchemaWin\"));\n+        add(createUserDerivedSchemaWin\n+                = new ModalWindow(\"createUserDerSchemaWin\"));\n         add(editUserDerivedSchemaWin = new ModalWindow(\"editUserDerSchemaWin\"));\n \n-        add(createMembershipSchemaWin = new ModalWindow(\"createMembershipSchemaWin\"));\n+        add(createMembershipSchemaWin\n+                = new ModalWindow(\"createMembershipSchemaWin\"));\n         add(editMembershipSchemaWin = new ModalWindow(\"editMembershipSchemaWin\"));\n \n-        add(createMembershipDerivedSchemaWin = new ModalWindow(\"createMembershipDerSchemaWin\"));\n-        add(editMembershipDerivedSchemaWin = new ModalWindow(\"editMembershipDerSchemaWin\"));\n+        add(createMembershipDerivedSchemaWin\n+                = new ModalWindow(\"createMembershipDerSchemaWin\"));\n+        add(editMembershipDerivedSchemaWin\n+                = new ModalWindow(\"editMembershipDerSchemaWin\"));\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n         feedbackPanel.setOutputMarkupId( true );\n@@ -138,82 +165,60 @@ public Schema(PageParameters parameters)\n         membershipDerPageRows = utility.getPaginatorRowsToDisplay(Constants\n                 .CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n \n-        IModel userSchemas =  new LoadableDetachableModel()\n-        {\n-            protected Object load() {\n-                return restClient.getAllUserSchemas().getSchemas();\n-            }\n-        };\n+        List<IColumn> rolesColumns = new ArrayList<IColumn>();\n \n-        IModel userDerivedSchemas =  new LoadableDetachableModel()\n-        {\n-            protected Object load() {\n-                return restClient.getAllUserDerivedSchemas().getDerivedSchemas();\n-            }\n-        };\n-\n-        IModel roleSchemas =  new LoadableDetachableModel()\n-        {\n-            protected Object load() {\n-                return restClient.getAllRoleSchemas().getSchemas();\n-            }\n-        };\n+        rolesColumns.add(new PropertyColumn(new Model(getString(\"name\")),\n+                \"name\", \"name\"));\n \n-        IModel roleDerivedSchemas =  new LoadableDetachableModel()\n-        {\n-            protected Object load() {\n-                return restClient.getAllRoleDerivedSchemas().getDerivedSchemas();\n-            }\n-        };\n+        rolesColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n+                \"type\", \"type\"));\n \n-        IModel membershipSchemas =  new LoadableDetachableModel()\n-        {\n-            protected Object load() {\n-                return restClient.getAllMemberhipSchemas().getSchemas();\n-            }\n-        };\n+        rolesColumns.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+                \"attributes\", \"attributes\"));\n \n-        IModel membershipDerivedSchemas =  new LoadableDetachableModel()\n+        rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n+                getString(\"name\")))\n         {\n-            protected Object load() {\n-                return restClient.getAllMembershipDerivedSchemas().getDerivedSchemas();\n-            }\n-        };\n-\n-        final PageableListView roleSchemasView = new PageableListView(\"roleSchemas\",\n-                roleSchemas, rolePageRows) {\n-\n-            @Override\n-            protected void populateItem(final ListItem item) {\n-                final SchemaTO schemaTO = (SchemaTO) item.getDefaultModelObject();\n-\n-                item.add(new Label(\"name\", schemaTO.getName()));\n-                item.add(new Label(\"type\", schemaTO.getType().getClassName()));\n-                item.add(new Label(\"attributes\", schemaTO.getAttributes() + \"\"));\n-\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        final SchemaTO schemaTO = (SchemaTO) item.getDefaultModelObject();\n \n                         editRoleSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                         public Page createPage() {\n-                            SchemaModalPage form = new SchemaModalPage(Schema.this, editRoleSchemaWin, schemaTO, false);\n-                            form.setEntity(SchemaModalPage.Entity.ROLE);\n-                            return form;\n+                            SchemaModalPage window = new SchemaModalPage(\n+                                    Schema.this, editRoleSchemaWin, schemaTO, false);\n+                            window.setEntity(SchemaModalPage.Entity.ROLE);\n+                            return window;\n                         }\n                         });\n \n                         editRoleSchemaWin.show(target);\n                     }\n                 };\n \n-                item.add(editLink);\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n+\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -227,12 +232,18 @@ public void onClick(AjaxRequestTarget target) {\n \n                 };\n \n-                item.add(deleteLink);\n+\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                cellItem.add(panel);\n             }\n-        };\n+        });\n \n-        add(new AjaxPagingNavigator(\"rolesNavigator\", roleSchemasView)\n-                .setOutputMarkupId(true));\n+\n+        final AjaxFallbackDefaultDataTable tableRoles =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", rolesColumns,\n+                new SchemaProvider(SchemaType.RoleSchema), rolePageRows);\n \n         Form rolesPaginatorForm = new Form(\"RolesPaginatorForm\");\n \n@@ -242,36 +253,41 @@ public void onClick(AjaxRequestTarget target) {\n         rowsRoleChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n           protected void onUpdate( AjaxRequestTarget target )\n             {\n-              utility.updatePaginatorRows(Constants.CONF_ROLE_SCHEMA_PAGINATOR_ROWS,\n-                      rolePageRows);\n+              utility.updatePaginatorRows(Constants\n+                      .CONF_ROLE_SCHEMA_PAGINATOR_ROWS, rolePageRows);\n \n-              roleSchemasView.setRowsPerPage(rolePageRows);\n+              tableRoles.setRowsPerPage(rolePageRows);\n               \n               target.addComponent(roleSchemasContainer);\n-              target.addComponent(getPage().get(\"rolesNavigator\"));\n             }\n \n           });\n \n         rolesPaginatorForm.add(rowsRoleChooser);\n         add(rolesPaginatorForm);\n \n-        final PageableListView roleDerSchemasView = new PageableListView(\"roleDerivedSchemas\",\n-                roleDerivedSchemas, roleDerPageRows) {\n+        List<IColumn> columnsRolesDer = new ArrayList<IColumn>();\n \n-            @Override\n-            protected void populateItem(final ListItem item) {\n-               final DerivedSchemaTO schemaTO = (DerivedSchemaTO) item.getDefaultModelObject();\n+        columnsRolesDer.add(new PropertyColumn(new Model(getString(\"name\")),\n+                \"name\", \"name\"));\n \n-                item.add(new Label(\"name\", schemaTO.getName()));\n-                item.add(new Label(\"expression\", schemaTO.getExpression()));\n-                item.add(new Label(\"attributes\", schemaTO.getDerivedAttributes() + \"\"));\n+        columnsRolesDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n+                \"expression\", \"expression\"));\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+        columnsRolesDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+                \"derivedAttributes\", \"derivedAttributes\"));\n+\n+        columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n+                new Model<String>(getString(\"edit\"))) {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        final DerivedSchemaTO schemaTO = (DerivedSchemaTO) item.getDefaultModelObject();\n \n                         editRoleDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n@@ -287,9 +303,22 @@ public Page createPage() {\n                     }\n                 };\n \n-                item.add(editLink);\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -303,12 +332,19 @@ public void onClick(AjaxRequestTarget target) {\n \n                 };\n \n-                item.add(deleteLink);\n+\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                cellItem.add(panel);\n             }\n-        };\n+        });\n+\n \n-        add(new AjaxPagingNavigator(\"rolesDerivedNavigator\", roleDerSchemasView)\n-                .setOutputMarkupId(true));\n+        final AjaxFallbackDefaultDataTable tableRolesDer =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columnsRolesDer,\n+                new DerivedSchemaProvider(SchemaDerivedType.RoleDerivedSchema),\n+                roleDerPageRows);\n \n         Form rolesDerPaginatorForm = new Form(\"RolesDerPaginatorForm\");\n \n@@ -321,39 +357,47 @@ protected void onUpdate( AjaxRequestTarget target )\n               utility.updatePaginatorRows(Constants.\n                       CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS, rolePageRows);\n \n-              roleDerSchemasView.setRowsPerPage(roleDerPageRows);\n+              tableRolesDer.setRowsPerPage(roleDerPageRows);\n \n               target.addComponent(roleDerivedSchemasContainer);\n-              target.addComponent(getPage().get(\"rolesDerivedNavigator\"));\n             }\n \n           });\n \n         rolesDerPaginatorForm.add(rowsRolesDerChooser);\n         add(rolesDerPaginatorForm);\n \n-       final PageableListView userSchemasView = new PageableListView(\"userSchemas\",\n-                userSchemas, userSchemaPageRows) {\n+        List<IColumn> userColumns = new ArrayList<IColumn>();\n \n-            @Override\n-            protected void populateItem(final ListItem item) {\n-                final SchemaTO schemaTO = (SchemaTO) item.getDefaultModelObject();\n+        userColumns.add(new PropertyColumn(new Model(getString(\"name\")),\n+                \"name\", \"name\"));\n+\n+        userColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n+                \"type\", \"type\"));\n \n-                item.add(new Label(\"name\", schemaTO.getName()));\n-                item.add(new Label(\"type\", schemaTO.getType().getClassName()));\n-                item.add(new Label(\"attributes\", schemaTO.getAttributes() + \"\"));\n+        userColumns.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+                \"attributes\", \"attributes\"));\n \n+        userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n+                getString(\"edit\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editUserSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        editUserSchemaWin.setPageCreator(new ModalWindow\n+                                .PageCreator() {\n \n                         public Page createPage() {\n                             SchemaModalPage form = new SchemaModalPage(\n-                            Schema.this, editUserSchemaWin, schemaTO, false);\n+                                    Schema.this, editUserSchemaWin, schemaTO,\n+                                    false);\n                             form.setEntity(SchemaModalPage.Entity.USER);\n                             return form;\n                         }\n@@ -363,9 +407,22 @@ public Page createPage() {\n                     }\n                 };\n \n-                item.add(editLink);\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -379,12 +436,19 @@ public void onClick(AjaxRequestTarget target) {\n \n                 };\n \n-                item.add(deleteLink);\n+\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                cellItem.add(panel);\n             }\n-        };\n+        });\n+\n+\n+        final AjaxFallbackDefaultDataTable tableUsers =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", userColumns,\n+                new SchemaProvider(SchemaType.UserSchema), userSchemaPageRows);\n \n-        add(new AjaxPagingNavigator(\"usersSchemaNavigator\", userSchemasView)\n-                .setOutputMarkupId(true));\n \n         Form usersPaginatorForm = new Form(\"UsersPaginatorForm\");\n \n@@ -398,51 +462,71 @@ protected void onUpdate( AjaxRequestTarget target )\n               utility.updatePaginatorRows(Constants.CONF_USER_SCHEMA_PAGINATOR_ROWS,\n                       userSchemaPageRows);\n \n-              userSchemasView.setRowsPerPage(userSchemaPageRows);\n+              tableUsers.setRowsPerPage(userSchemaPageRows);\n \n               target.addComponent(userSchemaContainer);\n-              target.addComponent(getPage().get(\"usersSchemaNavigator\"));\n             }\n \n           });\n \n         usersPaginatorForm.add(usersRowsChooser);\n         add(usersPaginatorForm);\n \n-        final PageableListView userDerSchemasView = new PageableListView(\"userDerivedSchemas\",\n-                userDerivedSchemas, userDerSchemaPageRows) {\n+        List<IColumn> columnsUsersDer = new ArrayList<IColumn>();\n \n-            @Override\n-            protected void populateItem(final ListItem item) {\n-                final DerivedSchemaTO schemaTO = (DerivedSchemaTO) item.getDefaultModelObject();\n+        columnsUsersDer.add(new PropertyColumn(new Model(getString(\"name\")),\n+                \"name\", \"name\"));\n+\n+        columnsUsersDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n+                \"expression\", \"expression\"));\n \n-                item.add(new Label(\"name\", schemaTO.getName()));\n-                item.add(new Label(\"expression\", schemaTO.getExpression()));\n-                item.add(new Label(\"attributes\", schemaTO.getDerivedAttributes() + \"\"));\n+        columnsUsersDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+                \"derivedAttributes\", \"derivedAttributes\"));\n+\n+        columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n+                new Model<String>(getString(\"edit\"))) {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        final DerivedSchemaTO schemaTO = (DerivedSchemaTO) item.getDefaultModelObject();\n \n-                        editUserDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        editUserDerivedSchemaWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n                         public Page createPage() {\n-                            DerivedSchemaModalPage form = new DerivedSchemaModalPage\n-                                    (Schema.this, editUserSchemaWin, schemaTO, false);\n-                            form.setEntity(DerivedSchemaModalPage.Entity.USER);\n-                            return form;\n+                            DerivedSchemaModalPage window = new DerivedSchemaModalPage\n+                                    (Schema.this, editUserDerivedSchemaWin,\n+                                    schemaTO, false);\n+                            window.setEntity(DerivedSchemaModalPage.Entity.USER);\n+                            return window;\n                         }\n                         });\n \n                         editUserDerivedSchemaWin.show(target);\n                     }\n                 };\n \n-                item.add(editLink);\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -456,12 +540,18 @@ public void onClick(AjaxRequestTarget target) {\n \n                 };\n \n-                item.add(deleteLink);\n+\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                cellItem.add(panel);\n             }\n-        };\n-       \n-        add(new AjaxPagingNavigator(\"usersDerivedSchemaNavigator\", userSchemasView)\n-                .setOutputMarkupId(true));\n+        });\n+\n+        final AjaxFallbackDefaultDataTable tableUsersDer =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columnsUsersDer,\n+                new DerivedSchemaProvider(SchemaDerivedType.UserDerivedSchema),\n+                userDerSchemaPageRows);\n \n         Form usersDerPaginatorForm = new Form(\"UsersDerPaginatorForm\");\n \n@@ -476,42 +566,47 @@ protected void onUpdate( AjaxRequestTarget target )\n               utility.updatePaginatorRows(Constants.CONF_USER_DER_SCHEMA_PAGINATOR_ROWS,\n                       userDerSchemaPageRows);\n \n-              userDerSchemasView.setRowsPerPage(userDerSchemaPageRows);\n+              tableUsersDer.setRowsPerPage(userDerSchemaPageRows);\n \n               target.addComponent(userDerivedSchemaContainer);\n-              target.addComponent(getPage().get(\"usersDerivedSchemaNavigator\"));\n             }\n \n           });\n \n         usersDerPaginatorForm.add(usersDerRowsChooser);\n         add(usersDerPaginatorForm);\n \n-        add(userDerSchemasView);\n+       List<IColumn> membershipsColumns = new ArrayList<IColumn>();\n \n-       final PageableListView membershipSchemasView = new PageableListView(\"membershipSchemas\",\n-               membershipSchemas, membershipPageRows) {\n+        membershipsColumns.add(new PropertyColumn(new Model(getString(\"name\")),\n+                \"name\", \"name\"));\n \n-            @Override\n-            protected void populateItem(final ListItem item) {\n-                final SchemaTO schemaTO = (SchemaTO) item.getDefaultModelObject();\n+        membershipsColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n+                \"type\", \"type\"));\n \n-                item.add(new Label(\"name\", schemaTO.getName()));\n-                item.add(new Label(\"type\", schemaTO.getType().getClassName()));\n-                item.add(new Label(\"attributes\", schemaTO.getAttributes() + \"\"));\n+        membershipsColumns.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+                \"attributes\", \"attributes\"));\n \n+        membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n+                getString(\"name\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        final SchemaTO schemaTO = (SchemaTO) item.getDefaultModelObject();\n \n-                        editMembershipSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        editMembershipSchemaWin.setPageCreator(new ModalWindow\n+                                .PageCreator() {\n \n                         public Page createPage() {\n-                            SchemaModalPage form = new SchemaModalPage(Schema.this,\n-                                    editMembershipSchemaWin, schemaTO, false);\n+                            SchemaModalPage form = new SchemaModalPage(\n+                                    Schema.this, editMembershipSchemaWin,\n+                                    schemaTO, false);\n                             form.setEntity(SchemaModalPage.Entity.MEMBERSHIP);\n                             return form;\n                         }\n@@ -521,13 +616,26 @@ public Page createPage() {\n                     }\n                 };\n \n-                item.add(editLink);\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n+\n+                cellItem.add(panel);\n+            }\n+        });\n+\n+        membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        restClient.deleteMemberhipSchema((schemaTO.getName()));\n+                        restClient.deleteMemberhipSchema(schemaTO.getName());\n \n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n@@ -537,11 +645,18 @@ public void onClick(AjaxRequestTarget target) {\n \n                 };\n \n-                item.add(deleteLink);\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                cellItem.add(panel);\n             }\n-        };\n-       add(new AjaxPagingNavigator(\"membershipsNavigator\", membershipSchemasView)\n-               .setOutputMarkupId(true));\n+        });\n+\n+\n+        final AjaxFallbackDefaultDataTable tableMemberships =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", membershipsColumns,\n+                new SchemaProvider(SchemaType.MembershipSchema),\n+                membershipPageRows);\n \n        Form membershipPaginatorForm = new Form(\"MembershipPaginatorForm\");\n \n@@ -550,79 +665,103 @@ public void onClick(AjaxRequestTarget target) {\n                 new PropertyModel(this,\"membershipPageRows\"),\n                 utility.paginatorRowsChooser());\n \n-        membershipRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n+        membershipRowsChooser.add(new AjaxFormComponentUpdatingBehavior\n+                (\"onchange\") { protected void onUpdate\n+                        ( AjaxRequestTarget target ) {\n               utility.updatePaginatorRows(\n                       Constants.CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS,\n                       membershipPageRows);\n \n-              membershipSchemasView.setRowsPerPage(membershipPageRows);\n+              tableMemberships.setRowsPerPage(membershipPageRows);\n \n               target.addComponent(membershipSchemaContainer);\n-              target.addComponent(getPage().get(\"membershipsNavigator\"));\n             }\n \n           });\n \n         membershipPaginatorForm.add(membershipRowsChooser);\n         add(membershipPaginatorForm);\n \n-       final PageableListView membershipDerSchemasView = new PageableListView\n-               (\"membershipDerivedSchemas\", membershipDerivedSchemas, \n-               membershipDerPageRows) {\n+        List<IColumn> columnsMembershipsDer = new ArrayList<IColumn>();\n \n-            @Override\n-            protected void populateItem(final ListItem item) {\n-               final DerivedSchemaTO schemaTO = (DerivedSchemaTO) item.getDefaultModelObject();\n+        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"name\")),\n+                \"name\", \"name\"));\n \n-                item.add(new Label(\"name\", schemaTO.getName()));\n-                item.add(new Label(\"expression\", schemaTO.getExpression()));\n-                item.add(new Label(\"attributes\", schemaTO.getDerivedAttributes() + \"\"));\n+        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n+                \"expression\", \"expression\"));\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+                \"derivedAttributes\", \"derivedAttributes\"));\n+\n+        columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(\n+                new Model<String>(getString(\"edit\"))) {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        final DerivedSchemaTO schemaTO = (DerivedSchemaTO) item.getDefaultModelObject();\n \n-                        editMembershipDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        editMembershipDerivedSchemaWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n                         public Page createPage() {\n-                            DerivedSchemaModalPage form = new DerivedSchemaModalPage\n+                            DerivedSchemaModalPage window = new DerivedSchemaModalPage\n                                     (Schema.this, editMembershipDerivedSchemaWin, schemaTO, false);\n-                            form.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n-                            return form;\n+                            window.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n+                            return window;\n                         }\n                         });\n \n                         editMembershipDerivedSchemaWin.show(target);\n                     }\n                 };\n \n-                item.add(editLink);\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n+\n+                cellItem.add(panel);\n+            }\n+        });\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+        columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        restClient.deleteMembershipDerivedSchema(schemaTO.getName());\n+                        restClient.deleteMembershipDerivedSchema(\n+                                schemaTO.getName());\n \n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n \n                         target.addComponent(membershipDerivedSchemaContainer);\n-                        target.addComponent(getPage().get(\"\"));\n                     }\n \n                 };\n \n-                item.add(deleteLink);\n+\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                cellItem.add(panel);\n             }\n-        };\n+        });\n \n-        add(new AjaxPagingNavigator(\"membershipsDerNavigator\",\n-                membershipDerSchemasView).setOutputMarkupId(true));\n+        final AjaxFallbackDefaultDataTable tableMembershipsDer =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columnsMembershipsDer,\n+                new DerivedSchemaProvider(SchemaDerivedType.MembershipDerivedSchema),\n+                membershipDerPageRows);\n \n         Form membershipDerPaginatorForm = new Form(\"MembershipDerPaginatorForm\");\n \n@@ -638,10 +777,9 @@ protected void onUpdate( AjaxRequestTarget target )\n                       Constants.CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS,\n                       membershipDerPageRows);\n \n-              membershipDerSchemasView.setRowsPerPage(membershipDerPageRows);\n+              tableMembershipsDer.setRowsPerPage(membershipDerPageRows);\n \n               target.addComponent(membershipDerivedSchemaContainer);\n-              target.addComponent(getPage().get(\"membershipsDerNavigator\"));\n             }\n \n           });\n@@ -650,27 +788,27 @@ protected void onUpdate( AjaxRequestTarget target )\n         add(membershipDerPaginatorForm);\n \n         roleSchemasContainer = new WebMarkupContainer(\"roleSchemasContainer\");\n-        roleSchemasContainer.add(roleSchemasView);\n+        roleSchemasContainer.add(tableRoles);\n         roleSchemasContainer.setOutputMarkupId(true);\n \n         roleDerivedSchemasContainer = new WebMarkupContainer(\"roleDerivedSchemasContainer\");\n-        roleDerivedSchemasContainer.add(roleDerSchemasView);\n+        roleDerivedSchemasContainer.add(tableRolesDer);\n         roleDerivedSchemasContainer.setOutputMarkupId(true);\n \n         userSchemaContainer = new WebMarkupContainer(\"userSchemaContainer\");\n-        userSchemaContainer.add(userSchemasView);\n+        userSchemaContainer.add(tableUsers);\n         userSchemaContainer.setOutputMarkupId(true);\n \n         userDerivedSchemaContainer = new WebMarkupContainer(\"userDerivedSchemaContainer\");\n-        userDerivedSchemaContainer.add(userDerSchemasView);\n+        userDerivedSchemaContainer.add(tableUsersDer);\n         userDerivedSchemaContainer.setOutputMarkupId(true);\n \n         membershipSchemaContainer = new WebMarkupContainer(\"membershipSchemaContainer\");\n-        membershipSchemaContainer.add(membershipSchemasView);\n+        membershipSchemaContainer.add(tableMemberships);\n         membershipSchemaContainer.setOutputMarkupId(true);\n \n         membershipDerivedSchemaContainer = new WebMarkupContainer(\"membershipDerivedSchemaContainer\");\n-        membershipDerivedSchemaContainer.add(membershipDerSchemasView);\n+        membershipDerivedSchemaContainer.add(tableMembershipsDer);\n         membershipDerivedSchemaContainer.setOutputMarkupId(true);\n         \n         add(roleSchemasContainer);\n@@ -893,4 +1031,174 @@ public boolean isOperationResult() {\n     public void setOperationResult(boolean operationResult) {\n         this.operationResult = operationResult;\n     }\n+\n+    class SchemaProvider extends SortableDataProvider<SchemaTO> {\n+\n+        private SortableDataProviderComparator comparator =\n+                new SortableDataProviderComparator();\n+\n+        private SchemaType schema;\n+\n+        public SchemaProvider(SchemaType schema) {\n+\n+            this.schema = schema;\n+\n+            //Default sorting\n+            setSort(\"name\",true);\n+        }\n+\n+        @Override\n+        public Iterator<SchemaTO> iterator(int first, int count) {\n+            List<SchemaTO> list = getAttributesSchemaListDB();\n+\n+            Collections.sort(list, comparator);\n+\n+            return list.subList(first, first+count).iterator();\n+        }\n+\n+        @Override\n+        public int size() {\n+            return getAttributesSchemaListDB().size();\n+        }\n+\n+        @Override\n+        public IModel<SchemaTO> model(final SchemaTO\n+                user) {\n+            return new AbstractReadOnlyModel<SchemaTO>() {\n+\n+                @Override\n+                public SchemaTO getObject() {\n+                    return user;\n+                }\n+            };\n+        }\n+\n+        public List<SchemaTO> getAttributesSchemaListDB(){\n+\n+            List<SchemaTO> list = null;\n+\n+            if(schema == SchemaType.RoleSchema)\n+                list = restClient.getAllRoleSchemas();\n+            else if (schema == SchemaType.UserSchema)\n+                list = restClient.getAllUserSchemas();\n+            else if (schema == SchemaType.MembershipSchema)\n+                list = restClient.getAllMemberhipSchemas();\n+\n+            return list;\n+        }\n+\n+        class SortableDataProviderComparator implements\n+                Comparator<SchemaTO>, Serializable {\n+            public int compare(final SchemaTO o1,\n+                    final SchemaTO o2) {\n+                    PropertyModel<Comparable> model1 =\n+                            new PropertyModel<Comparable>(o1, getSort()\n+                            .getProperty());\n+                    PropertyModel<Comparable> model2 =\n+                            new PropertyModel<Comparable>(o2, getSort()\n+                            .getProperty());\n+\n+                    int result = 1;\n+\n+                    if(model1.getObject() == null && model2.getObject() == null)\n+                        result = 0;\n+                    else if(model1.getObject() == null)\n+                        result = 1;\n+                    else if(model2.getObject() == null)\n+                        result = -1;\n+                    else\n+                        result = ((Comparable)model1.getObject()).compareTo(\n+                                model2.getObject());\n+\n+                    result = getSort().isAscending() ? result : -result;\n+\n+                    return result;\n+            }\n+\t}\n+    }\n+\n+    class DerivedSchemaProvider extends SortableDataProvider<DerivedSchemaTO> {\n+\n+        private SortableDataProviderComparator comparator =\n+                new SortableDataProviderComparator();\n+\n+        private SchemaDerivedType schema;\n+\n+        public DerivedSchemaProvider(SchemaDerivedType schema) {\n+\n+            this.schema = schema;\n+\n+            //Default sorting\n+            setSort(\"name\",true);\n+        }\n+\n+        @Override\n+        public Iterator<DerivedSchemaTO> iterator(int first, int count) {\n+            List<DerivedSchemaTO> list = getAttributesSchemaListDB();\n+\n+            Collections.sort(list, comparator);\n+\n+            return list.subList(first, first+count).iterator();\n+        }\n+\n+        @Override\n+        public int size() {\n+            return getAttributesSchemaListDB().size();\n+        }\n+\n+        @Override\n+        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO\n+                schema) {\n+            return new AbstractReadOnlyModel<DerivedSchemaTO>() {\n+\n+                @Override\n+                public DerivedSchemaTO getObject() {\n+                    return schema;\n+                }\n+            };\n+        }\n+\n+        public List<DerivedSchemaTO> getAttributesSchemaListDB(){\n+\n+        List<DerivedSchemaTO> list = null;\n+\n+        if(schema == SchemaDerivedType.RoleDerivedSchema)\n+            list = restClient.getAllRoleDerivedSchemas();\n+        else if (schema == SchemaDerivedType.UserDerivedSchema)\n+            list = restClient.getAllUserDerivedSchemas();\n+        else if (schema == SchemaDerivedType.MembershipDerivedSchema)\n+            list = restClient.getAllMembershipDerivedSchemas();\n+\n+        return list;\n+        }\n+\n+        class SortableDataProviderComparator implements\n+                Comparator<DerivedSchemaTO>, Serializable {\n+            public int compare(final DerivedSchemaTO o1,\n+                    final DerivedSchemaTO o2) {\n+                    PropertyModel<Comparable> model1 =\n+                            new PropertyModel<Comparable>(o1, getSort()\n+                            .getProperty());\n+                    PropertyModel<Comparable> model2 =\n+                            new PropertyModel<Comparable>(o2, getSort()\n+                            .getProperty());\n+\n+                    int result = 1;\n+\n+                    if(model1.getObject() == null && model2.getObject() == null)\n+                        result = 0;\n+                    else if(model1.getObject() == null)\n+                        result = 1;\n+                    else if(model2.getObject() == null)\n+                        result = -1;\n+                    else\n+                        result = ((Comparable)model1.getObject()).compareTo(\n+                                model2.getObject());\n+\n+                    result = getSort().isAscending() ? result : -result;\n+\n+                    return result;\n+            }\n+\t}\n+    }\n }\n\\ No newline at end of file"},{"sha":"d17efea1e69ee87981f419c1aff275b0201af94b","filename":"console/src/main/java/org/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":35,"deletions":6,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -18,8 +18,12 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n@@ -31,8 +35,10 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.apache.wicket.util.string.Strings;\n import org.syncope.client.to.SchemaTO;\n import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.console.wicket.markup.html.form.UpdatingAutoCompleteTextField;\n import org.syncope.types.SchemaValueType;\n \n \n@@ -46,7 +52,7 @@ public class SchemaModalPage extends SyncopeModalPage\n     public DropDownChoice validatorClass;\n     public DropDownChoice type;\n     public DropDownChoice action;\n-    public RadioChoice mandatory;\n+    public AutoCompleteTextField mandatoryCondition;\n     public RadioChoice virtual;\n     public RadioChoice multivalue;\n     public RadioChoice readonly;\n@@ -85,16 +91,39 @@ public SchemaModalPage(final BasePage basePage, final ModalWindow window,\n         conversionPattern = new TextField(\"conversionPattern\");\n \n         ArrayList<String> validatorsList = new ArrayList<String>();\n-        validatorsList.add(\"org.syncope.core.persistence.validation.AlwaysTrueValidator\");\n-        validatorsList.add(\"org.syncope.core.persistence.validation.EmailAddressValidator\");\n+        validatorsList.add(\"org.syncope.core.persistence.validation\" +\n+                \".AlwaysTrueValidator\");\n+        validatorsList.add(\"org.syncope.core.persistence.validation\" +\n+                \".EmailAddressValidator\");\n \n-        validatorClass = new DropDownChoice(\"validatorClass\",new PropertyModel(schema, \"validatorClass\")\n+        validatorClass = new DropDownChoice(\"validatorClass\",\n+                new PropertyModel(schema, \"validatorClass\")\n                 ,validatorsList);\n \n         type = new DropDownChoice(\"type\",Arrays.asList(SchemaValueType.values()));\n         type.setRequired(true);\n \n-        mandatory = new RadioChoice(\"mandatory\",Arrays.asList(new Boolean[]{true,false}));\n+        mandatoryCondition = new AutoCompleteTextField(\"mandatoryCondition\") {\n+\n+            @Override\n+            protected Iterator getChoices(String input) {\n+                List<String> choices = new ArrayList<String>();\n+\n+                if (Strings.isEmpty(input))\n+                {\n+                    choices = Collections.emptyList();\n+                    return choices.iterator();\n+                }\n+\n+                if(\"true\".startsWith(input.toLowerCase()))\n+                    choices.add(\"true\");\n+                else if (\"false\".startsWith(input.toLowerCase()))\n+                       choices.add(\"false\");\n+\n+\n+                return choices.iterator();\n+            }\n+        };\n \n         virtual = new RadioChoice(\"virtual\",Arrays.asList(new Boolean[]{true,false}));\n \n@@ -158,7 +187,7 @@ protected void onError(AjaxRequestTarget target, Form form) {\n         schemaForm.add(conversionPattern);\n         schemaForm.add(validatorClass);\n         schemaForm.add(type);\n-        schemaForm.add(mandatory);\n+        schemaForm.add(mandatoryCondition);\n         schemaForm.add(virtual);\n         schemaForm.add(multivalue);\n         schemaForm.add(readonly);"},{"sha":"ab0fc14263813f5ae55e309fbc768a95bcbf923c","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":21,"deletions":57,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -63,13 +63,11 @@\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.ResourceTO;\n-import org.syncope.client.to.ResourceTOs;\n import org.syncope.client.to.RoleTO;\n-import org.syncope.client.to.RoleTOs;\n import org.syncope.client.to.SchemaTO;\n-import org.syncope.client.to.SchemaTOs;\n import org.syncope.client.to.UserTO;\n import org.syncope.console.SyncopeApplication;\n+import org.syncope.console.commons.SchemaWrapper;\n import org.syncope.console.rest.ResourcesRestClient;\n import org.syncope.console.rest.RolesRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n@@ -156,6 +154,12 @@ protected void populateItem(ListItem item) {\n     @Override\n     protected void populateItem(final ListItem item) {\n \n+        String mandatoryCondition = schemaTO.getMandatoryCondition();\n+        boolean required = false;\n+\n+        if (mandatoryCondition.equalsIgnoreCase(\"true\"))\n+            required = true;\n+\n         if (schemaTO.getType().getClassName()\n                 .equals(\"java.lang.String\")) {\n             panel = new AjaxTextFieldPanel(\"panel\",\n@@ -170,7 +174,7 @@ public Serializable getObject() {\n                 public void setObject(Serializable object) {\n                     item.setModelObject((String) object);\n                 }\n-            }, schemaTO.isMandatory(),schemaTO.isReadonly());\n+            }, required,schemaTO.isReadonly());\n         }\n         else if (schemaTO.getType().getClassName()\n                 .equals(\"java.lang.Boolean\")) {\n@@ -187,7 +191,7 @@ public void setObject(Serializable object) {\n                     Boolean val = (Boolean) object;\n                     item.setModelObject(val.toString());\n                 }\n-            }, schemaTO.isMandatory(), schemaTO.isReadonly());\n+            }, required, schemaTO.isReadonly());\n \n         } else if (schemaTO.getType().getClassName().equals(\"java.util.Date\")) {\n             panel = new DateFieldPanel(\"panel\", schemaTO.getName(),\n@@ -224,8 +228,7 @@ public void setObject(Serializable object) {\n                             String val = formatter.format(date);\n                             item.setModelObject(val);\n                         }\n-                    }, schemaTO.isMandatory(),\n-                            schemaTO.isReadonly());\n+                    }, required, schemaTO.isReadonly());\n         } else {\n             panel = new AjaxTextFieldPanel(\"panel\",\n                     schemaTO.getName(), new Model() {\n@@ -239,7 +242,7 @@ public Serializable getObject() {\n                 public void setObject(Serializable object) {\n                     item.setModelObject((String) object);\n                 }\n-            }, schemaTO.isMandatory(),schemaTO.isReadonly());\n+            }, required,schemaTO.isReadonly());\n         }\n \n         item.add(panel);\n@@ -512,7 +515,7 @@ public List<ResourceTO> getAvailableResources(UserTO userTO) {\n             ((SyncopeApplication) Application.get()).getApplicationContext()\n             .getBean(\"resourcesRestClient\");\n \n-    ResourceTOs resourcesTos = resourcesRestClient.getAllResources();\n+    List<ResourceTO> resourcesTos = resourcesRestClient.getAllResources();\n \n     for (ResourceTO resourceTO : resourcesTos)\n             resources.add(resourceTO);\n@@ -532,7 +535,7 @@ public void cloneOldUserTO(UserTO userTO) {\n     oldUser.setPassword(userTO.getPassword());\n     oldUser.setAttributes(userTO.getAttributes());\n     oldUser.setResources(userTO.getResources());\n-    oldUser.setMemberships(new HashSet<MembershipTO>());\n+    oldUser.setMemberships(new ArrayList<MembershipTO>());\n \n     MembershipTO membership;\n \n@@ -552,7 +555,7 @@ public void setupRolesMap() {\n \n     rolesMap = new HashMap();\n \n-    RoleTOs roleTOs = rolesRestClient.getAllRoles();\n+    List<RoleTO> roleTOs = rolesRestClient.getAllRoles();\n \n     for (RoleTO roleTO : roleTOs) {\n         rolesMap.put(roleTO.getId(), roleTO.getName());\n@@ -590,7 +593,7 @@ public void setupSchemaWrappers(boolean create, UserTO userTO) {\n             ((SyncopeApplication) Application.get()).getApplicationContext()\n             .getBean(\"schemaRestClient\");\n \n-    SchemaTOs schemas = schemaRestClient.getAllUserSchemas();\n+    List<SchemaTO> schemas = schemaRestClient.getAllUserSchemas();\n \n     boolean found = false;\n \n@@ -631,7 +634,7 @@ public void setupMemberships(boolean create, UserTO userTO) {\n     membershipTOs = new ArrayList<MembershipTO>();\n \n     if (!create) {\n-        Set<MembershipTO> memberships = userTO.getMemberships();\n+        List<MembershipTO> memberships = userTO.getMemberships();\n \n         for (MembershipTO membership : memberships) {\n             membershipTOs.add(membership);\n@@ -644,17 +647,17 @@ public void setupMemberships(boolean create, UserTO userTO) {\n  * @param creation flag: true if a new User is being created, false otherwise\n  * @param userTO object\n  */\n-public Set<AttributeTO> getUserAttributesSet() {\n+public List<AttributeTO> getUserAttributesSet() {\n \n-    Set<AttributeTO> attributes = new HashSet<AttributeTO>();\n+    List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n \n     AttributeTO attribute;\n \n     for (SchemaWrapper schemaWrapper : schemaWrappers) {\n \n         attribute = new AttributeTO();\n         attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n-        attribute.setValues(new HashSet<String>());\n+        attribute.setValues(new ArrayList<String>());\n         attribute.setReadonly(schemaWrapper.getSchemaTO().isReadonly());\n \n         for (String value : schemaWrapper.getValues()) {\n@@ -671,9 +674,9 @@ public Set<AttributeTO> getUserAttributesSet() {\n  * Convert a memberships ArrayList in a memberships HashSet list.\n  * @return Set<MembershipTO> selected for a new user.\n  */\n-public Set<MembershipTO> getMembershipsSet() {\n+public List<MembershipTO> getMembershipsSet() {\n \n-    HashSet<MembershipTO> memberships = new HashSet<MembershipTO>();\n+    List<MembershipTO> memberships = new ArrayList<MembershipTO>();\n \n     for (MembershipTO membership : membershipTOs) {\n         memberships.add(membership);\n@@ -931,43 +934,4 @@ public void searchAndDropMembership(MembershipTO oldMembership,\n         userMod.addMembershipToBeRemoved(oldMembership.getId());\n     }\n }\n-\n-/**\n- * Wrapper for User's Schema - Attribute.\n- */\n-public class SchemaWrapper {\n-\n-    SchemaTO schemaTO;\n-    List<String> values;\n-\n-    public SchemaWrapper(SchemaTO schemaTO) {\n-        this.schemaTO = schemaTO;\n-        values = new ArrayList<String>();\n-\n-        values.add(\"\");\n-    }\n-\n-    public SchemaTO getSchemaTO() {\n-        return schemaTO;\n-    }\n-\n-    public void setSchemaTO(SchemaTO schemaTO) {\n-        this.schemaTO = schemaTO;\n-    }\n-\n-    public List<String> getValues() {\n-        return values;\n-    }\n-\n-    public void setValues(List<String> values) {\n-        this.values = values;\n-    }\n-\n-    public void setValues(Set<String> values) {\n-        this.values = new ArrayList<String>();\n-        for (String value : values) {\n-            this.values.add(value);\n-        }\n-    }\n-}\n }\n\\ No newline at end of file"},{"sha":"16de9fa4d3dfb15fc461af7ab9076d103c3bea20","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":199,"deletions":178,"changes":377,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -14,29 +14,37 @@\n  */\n package org.syncope.console.pages;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n \n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.Iterator;\n import java.util.List;\n-import java.util.Set;\n import java.util.StringTokenizer;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageParameters;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.ajax.markup.html.navigation.paging.AjaxPagingNavigator;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.list.PageableListView;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n@@ -45,20 +53,19 @@\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.MembershipCond;\n import org.syncope.client.search.NodeCond;\n-import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.to.RoleTO;\n-import org.syncope.client.to.RoleTOs;\n import org.syncope.client.to.UserTO;\n import org.syncope.console.commons.Constants;\n-import org.syncope.client.to.UserTOs;\n import org.syncope.console.commons.SearchConditionWrapper;\n import org.syncope.console.commons.SearchConditionWrapper.OperationType;\n import org.syncope.console.commons.Utility;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.rest.ConfigurationsRestClient;\n import org.syncope.console.rest.RolesRestClient;\n import org.syncope.console.rest.UsersRestClient;\n+import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n+import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n import org.syncope.console.wicket.markup.html.form.UpdatingCheckBox;\n import org.syncope.console.wicket.markup.html.form.UpdatingDropDownChoice;\n import org.syncope.console.wicket.markup.html.form.UpdatingTextField;\n@@ -93,16 +100,17 @@ public class Users extends BasePage {\n     final int WIN_USER_HEIGHT = 680;\n     final int WIN_USER_WIDTH = 1133;\n \n-    WebMarkupContainer usersContainer;\n-    List<String> columnsList;\n+    WebMarkupContainer container;\n \n-    /** Response flag set by the Modal Window after the operation is completed*/\n+    /*\n+     Response flag set by the Modal Window after the operation is completed\n+     */\n     boolean operationResult = false;\n \n     FeedbackPanel feedbackPanel;\n     List<SearchConditionWrapper> searchConditionsList;\n \n-    UserTOs searchMatchedUsers;\n+    List<UserTO> searchMatchedUsers;\n \n     private int paginatorRows;\n \n@@ -111,7 +119,7 @@ public Users(PageParameters parameters) {\n \n         setupSearchConditionsList();\n \n-        searchMatchedUsers = new UserTOs();\n+        searchMatchedUsers = new ArrayList<UserTO>();\n \n         add(createUserWin = new ModalWindow(\"createUserWin\"));\n         add(editUserWin = new ModalWindow(\"editUserWin\"));\n@@ -122,97 +130,33 @@ public Users(PageParameters parameters) {\n \n         add(feedbackPanel);\n \n-        //table's columnsList = attributes to view\n-        final IModel columns = new LoadableDetachableModel() {\n-\n-            @Override\n-            protected Object load() {\n-                ConfigurationTO configuration =\n-                        configurationsRestClient.readConfiguration(\n-                        Constants.CONF_USERS_ATTRIBUTES_VIEW);\n-\n-                columnsList = new ArrayList<String>();\n-\n-                if (configuration != null\n-                        && configuration.getConfValue() != null) {\n-\n-                    String conf = configuration.getConfValue();\n-                    StringTokenizer st = new StringTokenizer(conf, \";\");\n-\n-                    while (st.hasMoreTokens()) {\n-                        columnsList.add(st.nextToken());\n-                    }\n-                }\n-\n-                Collections.sort(columnsList);\n-                return columnsList;\n-            }\n-        };\n-\n-        ListView columnsView = new ListView(\"usersSchema\", columns) {\n-\n-            @Override\n-            protected void populateItem(final ListItem item) {\n-                final String name =\n-                        (String) item.getDefaultModelObject();\n-\n-                item.add(new Label(\"attribute\", name));\n-            }\n-        };\n-\n-        final IModel users = new LoadableDetachableModel() {\n-\n-            protected Object load() {\n-                return usersRestClient.getAllUsers().getUsers();\n-            }\n-        };\n-\n         paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n                 .CONF_USERS_PAGINATOR_ROWS);\n \n-        final PageableListView usersView = new PageableListView(\"users\", users,\n-                paginatorRows) {\n-\n-            @Override\n-            protected void populateItem(final ListItem item) {\n-                final UserTO userTO =\n-                        (UserTO) item.getDefaultModelObject();\n-\n-                item.add(new Label(\"id\", userTO.getId() + \"\"));\n+        List<IColumn> columns = new ArrayList<IColumn>();\n \n-                item.add(new Label(\"status\", userTO.getStatus()));\n+        columns.add(new PropertyColumn(new Model(getString(\"id\")),\n+                \"id\", \"id\"));\n \n-                if (userTO.getToken() != null\n-                        && !userTO.getToken().equals(\"\")) {\n-                    item.add(new Label(\"token\", getString(\"tokenValued\")));\n-                } else {\n-                    item.add(new Label(\"token\", getString(\"tokenNotValued\")));\n-                }\n+        columns.add(new PropertyColumn(new Model(getString(\"status\")),\n+                \"status\", \"status\"));\n \n-                item.add(new ListView(\"selectedAttributes\",\n-                        attributesToDisplay(userTO)) {\n-\n-                    @Override\n-                    protected void populateItem(ListItem item) {\n-                        AttributeWrapper attribute =\n-                                (AttributeWrapper) item.getDefaultModelObject();\n-\n-                        for (String name : columnsList) {\n-                            if (name.equalsIgnoreCase(attribute.getKey())) {\n-                                item.add(new Label(\"name\",\n-                                        attribute.getValue()));\n-                            }\n-                        }\n+        columns.add(new PropertyColumn(new Model(getString(\"token\")),\n+                \"token\", \"token\"));\n \n-                    }\n-                });\n+        columns = addCustomizedUserProperties(columns);\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+        columns.add(new AbstractColumn<UserTO>(new Model<String>(\n+                getString(\"edit\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<UserTO>>\n+                    cellItem, String componentId, IModel<UserTO> model)\n+            {\n+                    final UserTO userTO = model.getObject();\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n-                    @Override\n+                        @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        final UserTO userTO =\n-                                (UserTO) item.getDefaultModelObject();\n \n                         editUserWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n@@ -225,37 +169,52 @@ public Page createPage() {\n                         });\n \n                         editUserWin.show(target);\n-                    }\n-                };\n+                        }};\n \n-                item.add(editLink);\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                cellItem.add(panel);\n+            }\n+        });\n \n+        columns.add(new AbstractColumn<UserTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<UserTO>>\n+                    cellItem, String componentId, IModel<UserTO> model)\n+            {\n+                    final UserTO userTO = model.getObject();\n+\n+                    AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n                         usersRestClient.deleteUser(userTO.getId() + \"\");\n \n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n \n-                        target.addComponent(usersContainer);\n+                        target.addComponent(container);\n                     }\n                 };\n \n-                item.add(deleteLink);\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+                panel.add(deleteLink);\n+\n+                cellItem.add(panel);\n             }\n-        };\n+        });\n+\n \n-        add(new AjaxPagingNavigator(\"usersNavigator\", usersView).\n-                setOutputMarkupId(true));\n+        final AjaxFallbackDefaultDataTable table =\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columns,\n+                new UsersProvider(), paginatorRows);\n \n-        usersContainer = new WebMarkupContainer(\"usersContainer\");\n-        usersContainer.add(usersView);\n-        usersContainer.add(columnsView);\n-        usersContainer.setOutputMarkupId(true);\n+        container = new WebMarkupContainer(\"container\");\n+        container.add(table);\n+        container.setOutputMarkupId(true);\n \n-        add(usersContainer);\n+        add(container);\n \n         createUserWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createUserWin.setInitialHeight(WIN_USER_HEIGHT);\n@@ -275,13 +234,22 @@ public void onClick(AjaxRequestTarget target) {\n         changeAttribsViewWin.setPageMapName(\"change-attribs-modal\");\n         changeAttribsViewWin.setCookieName(\"change-attribs-modal\");\n \n-        setWindowClosedCallback(createUserWin, usersContainer);\n-        setWindowClosedCallback(editUserWin, usersContainer);\n+        setWindowClosedCallback(createUserWin, container);\n+        setWindowClosedCallback(editUserWin, container);\n \n-        setWindowClosedCallback(createUserWin, usersContainer);\n-        setWindowClosedCallback(editUserWin, usersContainer);\n+        changeAttribsViewWin.setWindowClosedCallback(\n+                new ModalWindow.WindowClosedCallback() {\n \n-        setWindowClosedCallback(changeAttribsViewWin, usersContainer);\n+                    public void onClose(AjaxRequestTarget target) {\n+\n+                        if (operationResult) {\n+                            getSession().info(getString(\"operation_succeded\"));\n+                            setResponsePage(Users.class);\n+                        } //When the window is closed without calling backend\n+                        else\n+                            target.addComponent(feedbackPanel);\n+                    }\n+                });\n \n         add(new AjaxLink(\"createUserLink\") {\n \n@@ -312,10 +280,9 @@ protected void onUpdate( AjaxRequestTarget target )\n               utility.updatePaginatorRows(Constants.CONF_USERS_PAGINATOR_ROWS,\n                       paginatorRows);\n \n-              usersView.setRowsPerPage(paginatorRows);\n+              table.setRowsPerPage(paginatorRows);\n \n-              target.addComponent(usersContainer);\n-              target.addComponent(getPage().get(\"usersNavigator\"));\n+              target.addComponent(container);\n             }\n \n           });\n@@ -355,7 +322,7 @@ protected Object load() {\n         final IModel roleNames = new LoadableDetachableModel() {\n \n             protected Object load() {\n-                RoleTOs roleTOs = rolesRestClient.getAllRoles();\n+                List<RoleTO> roleTOs = rolesRestClient.getAllRoles();\n \n                 List<String> roleNames = new ArrayList<String>();\n \n@@ -385,8 +352,6 @@ protected Object load() {\n \n         form.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n \n-        final WebMarkupContainer container;\n-\n         container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n \n@@ -557,7 +522,7 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n             @Override\n             protected Object load() {\n-                return searchMatchedUsers.getUsers();\n+                return searchMatchedUsers;\n             }\n         };\n \n@@ -657,77 +622,20 @@ protected void onError(AjaxRequestTarget target, Form form) {\n         add(form);\n     }\n \n-    /**\n-     * Return the user's attributes columnsList to display, ordered\n-     * @param userTO instance\n-     * @return attributes columnsList to view depending the selection\n-     */\n-    public List<AttributeWrapper> attributesToDisplay(UserTO user) {\n-        Set<AttributeTO> attributes = user.getAttributes();\n-        List<AttributeWrapper> attributesList =\n-                new ArrayList<AttributeWrapper>();\n-\n-        ConfigurationTO configuration =\n-                configurationsRestClient.readConfiguration(\n-                Constants.CONF_USERS_ATTRIBUTES_VIEW);\n-\n-        columnsList = new ArrayList<String>();\n-\n-        if (configuration != null && configuration.getConfValue() != null &&\n-                !configuration.getConfValue().equals(\"\")) {\n-            String conf = configuration.getConfValue();\n-            StringTokenizer st = new StringTokenizer(conf, \";\");\n-\n-            while (st.hasMoreTokens()) {\n-                columnsList.add(st.nextToken());\n-            }\n-        }\n-\n-        Collections.sort(columnsList);\n-\n-        AttributeWrapper attributeWrapper = null;\n-\n-        boolean found = false;\n-        for (String name : columnsList) {\n-            for (AttributeTO attribute : attributes) {\n-                if (name.equals(attribute.getSchema()) && !found) {\n-                    attributeWrapper = new AttributeWrapper();\n-                    attributeWrapper.setKey(attribute.getSchema());\n-                    for (String value : attribute.getValues()) {\n-                        attributeWrapper.setValue(value);\n-                        found = true;\n-                    }\n-                    attributesList.add(attributeWrapper);\n-                }\n-            }\n-            //case the attribute's value is blank\n-            if (!found) {\n-                attributeWrapper = new AttributeWrapper();\n-                attributeWrapper.setKey(name);\n-                attributeWrapper.setValue(\"\");\n-\n-                attributesList.add(attributeWrapper);\n-            } else {\n-                found = false;\n-            }\n-        }\n-\n-        return attributesList;\n-    }\n-\n     /**\n      * Set a WindowClosedCallback for a ModalWindow instance.\n      * @param window\n      * @param container\n      */\n-    public void setWindowClosedCallback(ModalWindow window,\n+    public void setWindowClosedCallback(final ModalWindow window,\n             final WebMarkupContainer container) {\n \n         window.setWindowClosedCallback(\n                 new ModalWindow.WindowClosedCallback() {\n \n                     public void onClose(AjaxRequestTarget target) {\n                         target.addComponent(container);\n+\n                         if (operationResult) {\n                             info(getString(\"operation_succeded\"));\n                             target.addComponent(feedbackPanel);\n@@ -753,7 +661,6 @@ public void setOperationResult(boolean operationResult) {\n      */\n     private void setupSearchConditionsList() {\n         searchConditionsList = new ArrayList<SearchConditionWrapper>();\n-\n         searchConditionsList.add(new SearchConditionWrapper());\n     }\n \n@@ -872,6 +779,30 @@ public NodeCond buildSearchExpression(\n         }\n     }\n \n+    private List<IColumn> addCustomizedUserProperties(List<IColumn> columns) {\n+        ConfigurationTO configuration =\n+                        configurationsRestClient.readConfiguration(\n+                        Constants.CONF_USERS_ATTRIBUTES_VIEW);\n+\n+                if (configuration != null\n+                        && configuration.getConfValue() != null) {\n+\n+                    String conf = configuration.getConfValue();\n+                    StringTokenizer st = new StringTokenizer(conf, \";\");\n+\n+                    String columnName = null;\n+                    \n+                    while (st.hasMoreTokens()) {\n+                        columnName = st.nextToken();\n+\n+                        columns.add(new PropertyColumn(new Model(columnName),\n+                        \"attributeMap[\"+columnName+\"]\"));\n+                    }\n+                }\n+\n+                return columns;\n+    }\n+\n     /**\n      * Wrapper class for displaying attribute\n      */\n@@ -896,4 +827,94 @@ public void setValue(String value) {\n             this.value = value;\n         }\n     }\n+\n+    class UsersProvider extends SortableDataProvider<UserTO> {\n+\n+        private SortableUsersProviderComparator comparator =\n+                new SortableUsersProviderComparator();\n+\n+        public UsersProvider() {\n+            //Default sorting\n+            setSort(\"id\",true);\n+        }\n+\n+        @Override\n+        public Iterator<UserTO> iterator(int first, int count) {\n+            List<UserTO> list = getUsersListDB();\n+\n+            Collections.sort(list, comparator);\n+\n+            return list.subList(first, first+count).iterator();\n+        }\n+\n+        @Override\n+        public int size() {\n+            return getUsersListDB().size();\n+        }\n+\n+        @Override\n+        public IModel<UserTO> model(final UserTO\n+                user) {\n+            return new AbstractReadOnlyModel<UserTO>() {\n+\n+                @Override\n+                public UserTO getObject() {\n+                    return user;\n+                }\n+            };\n+        }\n+\n+        public List<UserTO> getUsersListDB(){\n+        List<UserTO> list = usersRestClient.getAllUsers();\n+\n+        for(UserTO user : list) {\n+\n+            if (user.getToken() != null\n+                        && !user.getToken().equals(\"\")) {\n+                    user.setToken(getString(\"tokenValued\"));\n+                } else {\n+                    user.setToken(getString(\"tokenNotValued\"));\n+                }\n+        }\n+\n+        return list;\n+        }\n+\n+        class SortableUsersProviderComparator implements\n+                Comparator<UserTO>, Serializable {\n+            public int compare(final UserTO o1,\n+                    final UserTO o2) {\n+\n+                String expression = null;\n+\n+//                if(getSort().getProperty().contains(\"attributeMap[\"))\n+//                    expression = getSort().getProperty().substring(13,\n+//                            getSort().getProperty().length()-1);\n+//\n+//                else\n+                    expression = getSort().getProperty();\n+\n+                    PropertyModel<Comparable> model1 =\n+                            new PropertyModel<Comparable>(o1, expression);\n+                    PropertyModel<Comparable> model2 =\n+                            new PropertyModel<Comparable>(o2, expression);\n+\n+                    int result = 1;\n+\n+                    if(model1.getObject() == null && model2.getObject() == null)\n+                        result = 0;\n+                    else if(model1.getObject() == null)\n+                        result = 1;\n+                    else if(model2.getObject() == null)\n+                        result = -1;\n+                    else\n+                        result = ((Comparable)model1.getObject()).compareTo(\n+                                model2.getObject());\n+\n+                    result = getSort().isAscending() ? result : -result;\n+\n+                    return result;\n+            }\n+\t}\n+    }\n }"},{"sha":"ef54c737c967e0594543424a52c07d476b72d0ac","filename":"console/src/main/java/org/syncope/console/rest/ConfigurationsRestClient.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -15,9 +15,10 @@\n package org.syncope.console.rest;\n \n import java.io.UnsupportedEncodingException;\n+import java.util.Arrays;\n+import java.util.List;\n import org.springframework.web.client.HttpStatusCodeException;\n import org.syncope.client.to.ConfigurationTO;\n-import org.syncope.client.to.ConfigurationTOs;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n@@ -31,11 +32,12 @@ public class ConfigurationsRestClient {\n      * Get all stored configurations.\n      * @return ConfigurationTOs\n      */\n-    public ConfigurationTOs getAllConfigurations() {\n+    public List<ConfigurationTO> getAllConfigurations() {\n \n-        ConfigurationTOs configurations = restClient.getRestTemplate().getForObject(\n+        List<ConfigurationTO> configurations = Arrays.asList(\n+                restClient.getRestTemplate().getForObject(\n                 restClient.getBaseURL() + \"configuration/list.json\",\n-                ConfigurationTOs.class);\n+                ConfigurationTO[].class));\n \n         return configurations;\n "},{"sha":"90d4e88f19e69f93f62d46ee7a95aa71fc5587a1","filename":"console/src/main/java/org/syncope/console/rest/ConnectorsRestClient.java","status":"modified","additions":12,"deletions":11,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorsRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorsRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorsRestClient.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -14,9 +14,10 @@\n  */\n package org.syncope.console.rest;\n \n+import java.util.Arrays;\n+import java.util.List;\n+import org.syncope.client.to.ConnectorBundleTO;\n import org.syncope.client.to.ConnectorInstanceTO;\n-import org.syncope.client.to.ConnectorInstanceTOs;\n-import org.syncope.client.to.ConnectorBundleTOs;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n@@ -30,12 +31,12 @@ public class ConnectorsRestClient {\n      * Get all connectors.\n      * @return ConnectorInstanceTOs\n      */\n-    public ConnectorInstanceTOs getAllConnectors() {\n-        ConnectorInstanceTOs connectors = null;\n+    public List<ConnectorInstanceTO> getAllConnectors() {\n+        List<ConnectorInstanceTO> connectors = null;\n \n-        connectors = restClient.getRestTemplate().getForObject\n-                (restClient.getBaseURL() + \"connector/list.json\",\n-                  ConnectorInstanceTOs.class);\n+        connectors = Arrays.asList(restClient.getRestTemplate().getForObject(\n+                restClient.getBaseURL() + \"connector/list.json\", \n+                ConnectorInstanceTO[].class));\n \n         return connectors;\n     }\n@@ -106,13 +107,13 @@ public void deleteConnector(Long id) {\n         }\n     }\n \n-    public ConnectorBundleTOs getAllBundles() {\n-        ConnectorBundleTOs bundles = null;\n+    public List<ConnectorBundleTO> getAllBundles() {\n+        List<ConnectorBundleTO> bundles = null;\n \n         try {\n-        bundles = restClient.getRestTemplate().getForObject(\n+        bundles = Arrays.asList(restClient.getRestTemplate().getForObject(\n                 restClient.getBaseURL() + \"connector/getBundles.json\",\n-                ConnectorBundleTOs.class);\n+                ConnectorBundleTO[].class));\n         }\n         catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();"},{"sha":"4277e8b0b218b3146ab03408bb13ffa5c7d7b855","filename":"console/src/main/java/org/syncope/console/rest/ResourcesRestClient.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourcesRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourcesRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourcesRestClient.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -14,8 +14,9 @@\n  */\n package org.syncope.console.rest;\n \n+import java.util.Arrays;\n+import java.util.List;\n import org.syncope.client.to.ResourceTO;\n-import org.syncope.client.to.ResourceTOs;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n@@ -29,12 +30,13 @@ public class ResourcesRestClient {\n      * Get all Connectors.\n      * @return ResourceTOs\n      */\n-    public ResourceTOs getAllResources() {\n-        ResourceTOs resources = null;\n+    public List<ResourceTO> getAllResources() {\n+        List<ResourceTO> resources = null;\n \n         try{\n-        resources = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n-                + \"resource/list.json\", ResourceTOs.class);\n+        resources = Arrays.asList(restClient.getRestTemplate()\n+                .getForObject(restClient.getBaseURL() + \"resource/list.json\",\n+                ResourceTO[].class));\n         }\n         catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();"},{"sha":"0ca554b81eaf40cdf63a89de9cfbe99d37c943f3","filename":"console/src/main/java/org/syncope/console/rest/RolesRestClient.java","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRolesRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRolesRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRolesRestClient.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -14,9 +14,10 @@\n  */\n package org.syncope.console.rest;\n \n+import java.util.Arrays;\n+import java.util.List;\n import org.syncope.client.mod.RoleMod;\n import org.syncope.client.to.RoleTO;\n-import org.syncope.client.to.RoleTOs;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n@@ -30,17 +31,17 @@ public class RolesRestClient {\n      * Get all Roles.\n      * @return SchemaTOs\n      */\n-    public RoleTOs getAllRoles() {\n-        RoleTOs roles = null;\n+    public List<RoleTO> getAllRoles() {\n+        List<RoleTO> roles = null;\n \n         try{\n-        roles = restClient.getRestTemplate().getForObject(restClient.getBaseURL()\n-                + \"role/list.json\", RoleTOs.class);\n+        roles =  Arrays.asList(restClient.getRestTemplate().getForObject(\n+                restClient.getBaseURL() + \"role/list.json\", RoleTO[].class));\n         }\n         catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n-\n+        \n         return roles;\n     }\n \n@@ -51,8 +52,8 @@ public RoleTOs getAllRoles() {\n     public void createRole(RoleTO roleTO) {\n         RoleTO newRoleTO;\n         try{\n-        newRoleTO = restClient.getRestTemplate().postForObject(restClient.getBaseURL() +\n-                \"role/create\", roleTO, RoleTO.class);\n+        newRoleTO = restClient.getRestTemplate().postForObject(\n+                restClient.getBaseURL() + \"role/create\", roleTO, RoleTO.class);\n         }\n         catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();"},{"sha":"f2161e57e98a6665c410d42bc6df236c5097f7a8","filename":"console/src/main/java/org/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":50,"deletions":51,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -15,15 +15,14 @@\n package org.syncope.console.rest;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.List;\n import java.util.Set;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.DerivedSchemaTO;\n-import org.syncope.client.to.DerivedSchemaTOs;\n import org.syncope.client.to.SchemaTO;\n-import org.syncope.client.to.SchemaTOs;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.types.SyncopeClientExceptionType;\n \n@@ -43,13 +42,14 @@ public class SchemaRestClient {\n      * Get all user's schemas.\n      * @return SchemaTOs\n      */\n-    public SchemaTOs getAllUserSchemas() {\n-        SchemaTOs userSchemas = null;\n+    public List<SchemaTO> getAllUserSchemas() {\n+        List<SchemaTO> userSchemas = null;\n \n         try {\n-            userSchemas = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"schema/user/list.json\", SchemaTOs.class);\n+            userSchemas = Arrays.asList(\n+                    restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL() + \"schema/user/list.json\",\n+                    SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             for (SyncopeClientExceptionType exceptionType :\n                     SyncopeClientExceptionType.values()) {\n@@ -72,13 +72,12 @@ public SchemaTOs getAllUserSchemas() {\n      */\n     public List<String> getAllUserSchemasNames() {\n \n-        SchemaTOs userSchemas = null;\n+        List<SchemaTO>  userSchemas = null;\n         List<String> schemasNames = new ArrayList<String>();\n         try {\n-            userSchemas =\n-                    restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"schema/user/list.json\", SchemaTOs.class);\n+            userSchemas = Arrays.asList(restClient.getRestTemplate()\n+                    .getForObject(restClient.getBaseURL()\n+                    + \"schema/user/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         } catch (RestClientException e) {\n@@ -96,13 +95,14 @@ public List<String> getAllUserSchemasNames() {\n      * Get all user's derived schemas.\n      * @return DerivedSchemaTOs\n      */\n-    public DerivedSchemaTOs getAllUserDerivedSchemas() {\n+    public List<DerivedSchemaTO> getAllUserDerivedSchemas() {\n \n-        DerivedSchemaTOs userDerivedSchemas = null;\n+        List<DerivedSchemaTO> userDerivedSchemas = null;\n         try {\n-            userDerivedSchemas = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"derivedSchema/user/list.json\", DerivedSchemaTOs.class);\n+            userDerivedSchemas = Arrays.asList(\n+                    restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL() + \"derivedSchema/user/list.json\",\n+                    DerivedSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -115,12 +115,12 @@ public DerivedSchemaTOs getAllUserDerivedSchemas() {\n      */\n     public List<String> getAllUserDerivedSchemasNames() {\n \n-        DerivedSchemaTOs userDerivedSchemas = null;\n+        List<DerivedSchemaTO> userDerivedSchemas = null;\n         List<String> userDerivedSchemasNames = new ArrayList<String>();\n         try {\n-            userDerivedSchemas = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"derivedSchema/user/list.json\", DerivedSchemaTOs.class);\n+            userDerivedSchemas = Arrays.asList(restClient.getRestTemplate()\n+                    .getForObject(restClient.getBaseURL()\n+                    + \"derivedSchema/user/list.json\", DerivedSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         } catch (RestClientException e) {\n@@ -265,14 +265,14 @@ public void setRestClient(RestClient restClient) {\n      * Get all role's schemas.\n      * @return SchemaTOs\n      */\n-    public SchemaTOs getAllRoleSchemas() {\n+    public List<SchemaTO> getAllRoleSchemas() {\n \n-        SchemaTOs roleSchemas = null;\n+         List<SchemaTO> roleSchemas = null;\n \n         try {\n-            roleSchemas = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"schema/role/list.json\",\n-                    SchemaTOs.class);\n+            roleSchemas = Arrays.asList(restClient.getRestTemplate()\n+                    .getForObject(restClient.getBaseURL() +\n+                    \"schema/role/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n         } catch (RestClientException e) {\n             e.printStackTrace();\n@@ -287,13 +287,13 @@ public SchemaTOs getAllRoleSchemas() {\n      */\n     public List<String> getAllRoleSchemasNames() {\n \n-        SchemaTOs roleSchemas = null;\n+        List<SchemaTO> roleSchemas = null;\n         List<String> roleSchemasNames = new ArrayList<String>();\n \n         try {\n-            roleSchemas = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"schema/role/list.json\", SchemaTOs.class);\n+            roleSchemas = Arrays.asList(restClient.getRestTemplate()\n+                    .getForObject( restClient.getBaseURL() +\n+                    \"schema/role/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n         } catch (RestClientException e) {\n             e.printStackTrace();\n@@ -312,13 +312,13 @@ public List<String> getAllRoleSchemasNames() {\n      */\n     public List<String> getAllMembershipSchemasNames() {\n \n-        SchemaTOs membershipSchemas = null;\n+        List<SchemaTO> membershipSchemas = null;\n         List<String> membershipSchemasNames = new ArrayList<String>();\n \n         try {\n-            membershipSchemas = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"schema/membership/list.json\", SchemaTOs.class);\n+            membershipSchemas = Arrays.asList(restClient.getRestTemplate()\n+                    .getForObject( restClient.getBaseURL() +\n+                    \"schema/membership/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n         } catch (RestClientException e) {\n             e.printStackTrace();\n@@ -394,13 +394,13 @@ public void deleteRoleSchema(String name) {\n      * Get all role's derived schemas.\n      * @return DerivedSchemaTOs\n      */\n-    public DerivedSchemaTOs getAllRoleDerivedSchemas() {\n-        DerivedSchemaTOs roleDerivedSchemas = null;\n+    public List<DerivedSchemaTO> getAllRoleDerivedSchemas() {\n+        List<DerivedSchemaTO>  roleDerivedSchemas = null;\n \n         try {\n-            roleDerivedSchemas = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"derivedSchema/role/list.json\", DerivedSchemaTOs.class);\n+            roleDerivedSchemas = Arrays.asList(restClient.getRestTemplate()\n+                    .getForObject(restClient.getBaseURL() +\n+                    \"derivedSchema/role/list.json\", DerivedSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n         }\n         return roleDerivedSchemas;\n@@ -472,15 +472,14 @@ public void deleteRoleDerivedSchema(String name) {\n      * Get all role's schemas.\n      * @return SchemaTOs\n      */\n-    public SchemaTOs getAllMemberhipSchemas() {\n+    public List<SchemaTO> getAllMemberhipSchemas() {\n \n-        SchemaTOs memberhipSchemas = null;\n+        List<SchemaTO> memberhipSchemas = null;\n \n         try {\n-            memberhipSchemas =\n-                    restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"schema/membership/list.json\", SchemaTOs.class);\n+            memberhipSchemas = Arrays.asList(restClient.getRestTemplate()\n+                    .getForObject(restClient.getBaseURL()\n+                    + \"schema/membership/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n         } catch (RestClientException e) {\n             e.printStackTrace();\n@@ -569,14 +568,14 @@ public Set<String> getAllValidatorClasses() {\n      * Get all membership's derived schemas.\n      * @return DerivedSchemaTOs\n      */\n-    public DerivedSchemaTOs getAllMembershipDerivedSchemas() {\n-        DerivedSchemaTOs roleDerivedSchemas = null;\n+    public List<DerivedSchemaTO> getAllMembershipDerivedSchemas() {\n+        List<DerivedSchemaTO> roleDerivedSchemas = null;\n \n         try {\n-            roleDerivedSchemas = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"derivedSchema/membership/list.json\",\n-                    DerivedSchemaTOs.class);\n+            roleDerivedSchemas = Arrays.asList(restClient.getRestTemplate()\n+                    .getForObject( restClient.getBaseURL() +\n+                    \"derivedSchema/membership/list.json\",\n+                    DerivedSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n         }\n         return roleDerivedSchemas;"},{"sha":"89a8b2835e7a9205a3aa923a14345d28d756c286","filename":"console/src/main/java/org/syncope/console/rest/UsersRestClient.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -15,13 +15,13 @@\n  */\n package org.syncope.console.rest;\n \n+import java.util.Arrays;\n+import java.util.List;\n import org.springframework.web.client.HttpServerErrorException;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.search.NodeCond;\n import org.syncope.client.to.UserTO;\n-import org.syncope.client.to.UserTOs;\n-import org.syncope.client.to.WorkflowActionsTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.commons.Constants;\n \n@@ -32,11 +32,11 @@ public class UsersRestClient {\n \n     protected RestClient restClient;\n \n-    public UserTOs getAllUsers() {\n-        UserTOs users = null;\n+    public List<UserTO> getAllUsers() {\n+        List<UserTO> users = null;\n         try {\n-            users = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"user/list.json\", UserTOs.class);\n+            users = Arrays.asList(restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL() + \"user/list.json\", UserTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             e.printStackTrace();\n         }\n@@ -169,13 +169,13 @@ public ConfigurationTO readConfigurationDisplayAttributes() {\n      * @param userTO\n      * @return UserTOs\n      */\n-    public UserTOs searchUsers(NodeCond nodeSearchCondition) {\n-        UserTOs matchedUsers = null;\n+    public List<UserTO> searchUsers(NodeCond nodeSearchCondition) {\n+        List<UserTO> matchedUsers = null;\n \n         try {\n             matchedUsers = restClient.getRestTemplate().postForObject(\n                     restClient.getBaseURL() + \"user/search\",\n-                    nodeSearchCondition, UserTOs.class);\n+                    nodeSearchCondition, List.class);\n         } catch (HttpServerErrorException e) {\n             e.printStackTrace();\n             throw e;"},{"sha":"505a7e35ff1d37ffd9b7c744cdd2ae4a1f8008b2","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DeleteLinkPanel.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -0,0 +1,32 @@\n+/* \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.wicket.markup.html.form;\n+\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+\n+/**\n+ * EditLinkPanel\n+ */\n+public class DeleteLinkPanel extends Panel {\n+\n+    /**\n+     * @param component id\n+     * @param model for configuration\n+     */\n+    public DeleteLinkPanel(String componentId, IModel<?> model) {\n+        super(componentId, model);\n+    }\n+}"},{"sha":"19cdf5880e425135256dbb7c2b81985a4ca200f7","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/EditLinkPanel.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEditLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEditLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEditLinkPanel.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -0,0 +1,34 @@\n+/*\n+ *  Copyright 2010 luis.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.wicket.markup.html.form;\n+\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+\n+/**\n+ * EditLinkPanel\n+ */\n+public class EditLinkPanel extends Panel {\n+\n+    /**\n+     * @param component id\n+     * @param model for configuration\n+     */\n+    public EditLinkPanel(String componentId, IModel<?> model) {\n+        super(componentId, model);\n+    }\n+}"},{"sha":"1d6b6d3328de301990e3c490ffd9c0150ba2f741","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/UpdatingAutoCompleteTextField.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingAutoCompleteTextField.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingAutoCompleteTextField.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingAutoCompleteTextField.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -0,0 +1,41 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+\n+package org.syncope.console.wicket.markup.html.form;\n+\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.ajax.markup.html.autocomplete\n+        .AutoCompleteTextField;\n+import org.apache.wicket.model.IModel;\n+\n+/**\n+ * Extension class of AutoCompleteTextField. It's purposed for storing values in\n+ * the corresponding property model after pressing 'Add' button.\n+ */\n+public abstract class UpdatingAutoCompleteTextField\n+                                                extends AutoCompleteTextField {\n+\n+    public UpdatingAutoCompleteTextField(String id,IModel model) {\n+        super(id,model);\n+        add( new AjaxFormComponentUpdatingBehavior( \"onblur\" )\n+        {\n+            protected void onUpdate( AjaxRequestTarget target )\n+            {\n+            }\n+        } );\n+    }\n+\n+}"},{"sha":"ca44998c04480ed7a18400e4d7b9f0f832ae0ed3","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/UpdatingTextField.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingTextField.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingTextField.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FUpdatingTextField.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -1,6 +1,4 @@\n /*\n- *  Copyright 2010 luis.\n- * \n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at"},{"sha":"3019e49ac2a6a2c9722f73dfbe58689e85669707","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/SyncopeRoleTree.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -44,7 +44,7 @@ public SyncopeRoleTree(RolesRestClient restClient) {\n      */\n     public TreeModel createTreeModel() {\n \n-        List<RoleTO> roles = restClient.getAllRoles().getRoles();\n+        List<RoleTO> roles = restClient.getAllRoles();\n \n         List<SyncopeTreeNode> roleTree = new ArrayList<SyncopeTreeNode>();\n         List<SyncopeTreeNode> parentNodes = new ArrayList<SyncopeTreeNode>();"},{"sha":"a00074ffdba25786bbbbfb5b20d102c00b24927f","filename":"console/src/main/resources/org/syncope/console/pages/BasePage.html","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -12,6 +12,16 @@\n  limitations under the License.\n  under the License.\n -->\n+<wicket:head>\n+    <style type=\"text/css\">\n+    /* WICKET DATATABLE HEADERS */\n+    .headers {\n+       border: 1px solid #aaaaaa;\n+       background: #cccccc url(css/images/ui-bg_highlight-soft_75_cccccc_1x100.png)\n+           50% 50% repeat-x;\n+    }\n+    </style>\n+</wicket:head>\n \n <wicket:extend>\n     "},{"sha":"f4b0bc2a83eb9f15fdae25ed8a6e86db41034557","filename":"console/src/main/resources/org/syncope/console/pages/Configuration.html","status":"modified","additions":8,"deletions":36,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -12,8 +12,6 @@\n  limitations under the License.\n  under the License.\n -->\n-\n-\n <wicket:extend>\n     <div id=\"testa\">\n         <img src=\"img/logo.png\" alt=\"syncope\" title=\"syncope\" id=\"logo\" />\n@@ -85,45 +83,19 @@\n             <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n \n                 <h1><wicket:message key=\"title\"/></h1>\n-                \n-                <table id=\"configurations\" class=\"ui-widget ui-widget-content\" wicket:id=\"container\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header\">\n-                            <th><wicket:message key=\"key\"/></th>\n-                            <th><wicket:message key=\"value\"/></th>\n-                            <th><wicket:message key=\"edit\"/></th>\n-                            <th><wicket:message key=\"delete\"/></th>\n-                        </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"configurations\">\n-                            <td>\n-                                <span wicket:id=\"key\">[key]</span>\n-                            </td>\n-                            <td>\n-                                <span wicket:id=\"value\">[value]</span>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"editLink\">\n-                                    <wicket:message key=\"edit\"/>\n-                                </a>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"deleteLink\">\n-                                    <wicket:message key=\"delete\"/>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                    </tbody>\n-                </table>\n-                <span wicket:id=\"configurationsNavigator\"/>\n+               \n+                <span wicket:id=\"container\">\n+                    <table class=\"ui-widget ui-widget-content\"\n+                           wicket:id=\"datatable\"/>\n+                </span>\n+\n                 <span style=\"float:right\">\n                     <form wicket:id=\"PaginatorForm\" style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n-                        <select wicket:id=\"rowsChooser\"/>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n                     </form>\n                 </span>\n-                \n             </div>\n                 \n             <div wicket:id=\"createConfigurationWin\">[Show modal window for creating configuration]</div>"},{"sha":"31efbedcab5b14a8119b79be00960c09d25b7aa7","filename":"console/src/main/resources/org/syncope/console/pages/Connectors.html","status":"modified","additions":7,"deletions":32,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -80,41 +80,16 @@\n \n                 <h1><wicket:message key=\"title\"/></h1>\n \n-                <table id=\"connectors\" class=\"ui-widget ui-widget-content\" wicket:id=\"connectorsContainer\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header\">\n-                            <th><wicket:message key=\"id\"/></th>\n-                            <th><wicket:message key=\"name\"/></th>\n-                            <th><wicket:message key=\"version\"/></th>\n-                            <th><wicket:message key=\"bundleName\"/></th>\n-                            <th><wicket:message key=\"edit\"/></th>\n-                            <th><wicket:message key=\"delete\"/></th>\n-                    </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"connectors\" >\n-                            <td><span wicket:id=\"id\">[label id]</span></td>\n-                            <td><span wicket:id=\"name\">[label name]</span></td>\n-                            <td><span wicket:id=\"version\">[label version]</span></td>\n-                            <td><span wicket:id=\"bundleName\">[label bundle-name]</span></td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"editLink\">\n-                                    <wicket:message key=\"edit\"/>\n-                                </a>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"deleteLink\">\n-                                    <wicket:message key=\"delete\"/>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                    </tbody>\n-                </table>\n-                <span wicket:id=\"connectorsNavigator\"/>\n+                <span wicket:id=\"container\">\n+                    <table class=\"ui-widget ui-widget-content\"\n+                           wicket:id=\"datatable\"/>\n+                </span>\n+                \n                 <span style=\"float:right\">\n                     <form wicket:id=\"PaginatorForm\" style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n-                        <select wicket:id=\"rowsChooser\"/>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n                     </form>\n                 </span>\n             </div>"},{"sha":"bd56bdd9c64a7e5dc20d631b507e975f8e985ef7","filename":"console/src/main/resources/org/syncope/console/pages/DisplayAttributesModalPage.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -18,13 +18,13 @@\n             <wicket:message key=\"title\"/>\n         </p>\n         <form wicket:id=\"UserAttributesForm\">\n-            <fieldset>\n+\n                 <span wicket:id=\"usersSchemasList\" />\n                  \n                 <div style=\"bottom:0\">\n                     <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n                 </div>\n-            </fieldset>\n+\n         </form>\n     </div>\n </wicket:extend>\n\\ No newline at end of file"},{"sha":"8e24f4af6a338e4e61991d0aabe0d4c0ba61c1b4","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.html","status":"modified","additions":39,"deletions":7,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -12,6 +12,32 @@\n  limitations under the License.\n  under the License.\n -->\n+<wicket:head>\n+    <style type=\"text/css\">\n+    /* Style for autocomplete field */\n+    div.wicket-aa {\n+        font-family: \"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Verdana;\n+        font-size: 12px;\n+        background-color: white;\n+        border-width: 1px;\n+        border-color: #cccccc;\n+        border-style: solid;\n+        padding: 2px;\n+        margin: 1px 0 0 0;\n+        text-align:left;\n+    }\n+    div.wicket-aa ul {\n+        list-style:none;\n+        padding: 2px;\n+        margin:0;\n+    }\n+    div.wicket-aa ul li.selected {\n+        background-color: #FFFF00;\n+        padding: 2px;\n+        margin:0;\n+    }\n+    </style>\n+</wicket:head>\n <wicket:extend>\n     <div id=\"dialog-form\" title=\"Create new Resource-Mappings\">\n         <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n@@ -34,7 +60,7 @@\n                             <th><wicket:message key=\"field\"/></th>\n                             <th><wicket:message key=\"schemaTypes\"/></th>\n                             <th><wicket:message key=\"schemaAttributes\"/></th>\n-                            <th><wicket:message key=\"nullable\"/></th>\n+                            <th><wicket:message key=\"mandatoryCondition\"/></th>\n                             <th><wicket:message key=\"accountId\"/></th>\n                             <th><wicket:message key=\"password\"/></th>\n                         </tr>\n@@ -56,19 +82,25 @@\n                                 <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"field\"/>\n                             </td>\n                             <td>\n-                                <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"schemaTypes\"/>\n+                                <select class=\"text ui-widget-content ui-corner-all\" \n+                                        style=\"width:100%\" wicket:id=\"schemaTypes\"/>\n                             </td>\n                             <td>\n-                                <select class=\"text ui-widget-content ui-corner-all\" wicket:id=\"schemaAttributes\"/>\n+                                <select class=\"text ui-widget-content ui-corner-all\"\n+                                        style=\"width:100%\" wicket:id=\"schemaAttributes\"/>\n                             </td>\n-                            <td align=\"center\" valign=\"middle\">\n-                                <input type=\"checkbox\" class=\"checkbox\" wicket:id=\"nullable\"/>\n+                           <td align=\"center\" valign=\"middle\">\n+                                <input type=\"text\"\n+                                       class=\"text ui-widget-content ui-corner-all\"\n+                                       wicket:id=\"mandatoryCondition\"/>\n                             </td>\n                             <td align=\"center\" valign=\"middle\">\n-                                <input type=\"checkbox\"  class=\"checkbox\" wicket:id=\"accountId\"/>\n+                                <input type=\"checkbox\"\n+                                       class=\"checkbox\" wicket:id=\"accountId\"/>\n                             </td>\n                             <td align=\"center\" valign=\"middle\">\n-                                <input type=\"checkbox\"  class=\"checkbox\" wicket:id=\"password\"/>\n+                                <input type=\"checkbox\"\n+                                       class=\"checkbox\" wicket:id=\"password\"/>\n                             </td>\n                         </tr>\n                     </tbody>"},{"sha":"83e4122ccc97711b74db048638b9395ffa7d97db","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -11,7 +11,7 @@ field=Field\n schemaTypes=Schema types\n roleSchema=Role Schema\n accountId=Account Id\n-nullable=Nullable\n+mandatoryCondition=Mandatory condition\n password=Password\n mappingUserSchema=Mapping User Schema\n mappingRoleSchema=Mapping Role Schema"},{"sha":"4bce0f5c56a5873b58bdd3c402bfb3c90014bb0a","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -11,7 +11,7 @@ field=Campo\n schemaTypes=Tipo Schema\n roleSchema=Schema Ruolo\n accountId=Id Account\n-nullable=Nullable\n+mandatoryCondition=Condizione d'obbligatoriet\\u00E0\n password=Password\n mappingUserSchema=Mapping User Schema\n mappingRoleSchema=Mapping Role Schema"},{"sha":"9b12414863fddd3b98fbf35fef70b2942cecf722","filename":"console/src/main/resources/org/syncope/console/pages/Resources.html","status":"modified","additions":7,"deletions":26,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -80,35 +80,16 @@\n \n                 <h1><wicket:message key=\"title\"/></h1>\n \n-                <table id=\"resources\" class=\"ui-widget ui-widget-content\" wicket:id=\"resourcesContainer\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header\">\n-                            <th><wicket:message key=\"name\"/></th>\n-                            <th><wicket:message key=\"edit\"/></th>\n-                            <th><wicket:message key=\"delete\"/></th>\n-                        </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"resources\">\n-                            <td><span wicket:id=\"name\">[label name]</span></td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"editLink\">\n-                                    <wicket:message key=\"edit\"/>\n-                                </a>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"deleteLink\">\n-                                    <wicket:message key=\"delete\"/>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                    </tbody>\n-                </table>\n-                <span wicket:id=\"resourcesNavigator\"/>\n+                <span wicket:id=\"container\">\n+                    <table class=\"ui-widget ui-widget-content\"\n+                           wicket:id=\"datatable\"/>\n+                </span>\n+                \n                 <span style=\"float:right\">\n                     <form wicket:id=\"PaginatorForm\" style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n-                        <select wicket:id=\"rowsChooser\"/>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n                     </form>\n                 </span>\n             </div>"},{"sha":"13e9bd4d76ffb1e2df29a3fc0ff476f06905f256","filename":"console/src/main/resources/org/syncope/console/pages/Schema.html","status":"modified","additions":53,"deletions":188,"changes":241,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -89,47 +89,25 @@\n \n                 <h1><wicket:message key=\"title\"/></h1>\n \n-                <table id=\"roleSchemas\" class=\"ui-widget ui-widget-content\" wicket:id=\"roleSchemasContainer\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header \">\n-                            <th><wicket:message key=\"name\"/></th>\n-                            <th><wicket:message key=\"type\"/></th>\n-                            <th><wicket:message key=\"attributes\"/></th>\n-                            <th><wicket:message key=\"edit\"/></th>\n-                            <th><wicket:message key=\"delete\"/></th>\n-                        </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"roleSchemas\" >\n-                            <td><span wicket:id=\"name\">[label name]</span></td>\n-                            <td><span wicket:id=\"type\">[label type]</span></td>\n-                            <td><span wicket:id=\"attributes\">[label attributes]</span></td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"editLink\">\n-                                    <wicket:message key=\"edit\"/>\n-                                </a>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"deleteLink\">\n-                                    <wicket:message key=\"delete\"/>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                    </tbody>\n-                </table>\n-                <span wicket:id=\"rolesNavigator\"/>\n+               <span wicket:id=\"roleSchemasContainer\">\n+                    <table class=\"ui-widget ui-widget-content\"\n+                           wicket:id=\"datatable\"/>\n+                </span>\n+\n                 <span style=\"float:right\">\n                     <form wicket:id=\"RolesPaginatorForm\" style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n-                        <select wicket:id=\"rowsChooser\"/>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n                     </form>\n                 </span>\n             </div>\n \n             <div wicket:id=\"createRoleSchemaWin\">[Show modal window for creating schema]</div>\n             <div wicket:id=\"editRoleSchemaWin\">[Show modal window for editing schema]</div>\n \n-            <a wicket:id=\"createRoleSchemaWinLink\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+            <a wicket:id=\"createRoleSchemaWinLink\"\n+               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n                 <wicket:message key=\"create_attribute\"/>\n             </a>\n         </div>\n@@ -139,48 +117,25 @@ <h1><wicket:message key=\"title\"/></h1>\n \n                 <h1><wicket:message key=\"title\"/></h1>\n \n-                <table id=\"roleSchemas\" class=\"ui-widget ui-widget-content\" wicket:id=\"roleDerivedSchemasContainer\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header \">\n-                            <th><wicket:message key=\"name\"/></th>\n-                    <th><wicket:message key=\"expression\"/></th>\n-                    <th><wicket:message key=\"attributes\"/></th>\n-                    <th><wicket:message key=\"edit\"/></th>\n-                    <th><wicket:message key=\"delete\"/></th>\n-                    </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"roleDerivedSchemas\" >\n-                            <td><span wicket:id=\"name\">[label name]</span></td>\n-                            <td><span wicket:id=\"expression\">[label expression]</span></td>\n-                            <td><span wicket:id=\"attributes\">[label attributes]</span></td>\n-\n-                    <td>\n-                        <a href=\"#\" wicket:id=\"editLink\">\n-                            <wicket:message key=\"edit\"/>\n-                        </a>\n-                    </td>\n-                    <td>\n-                        <a href=\"#\" wicket:id=\"deleteLink\">\n-                            <wicket:message key=\"delete\"/>\n-                        </a>\n-                    </td>\n-                    </tr>\n-                    </tbody>\n-                </table>\n-                <span wicket:id=\"rolesDerivedNavigator\"/>\n+                <span wicket:id=\"roleDerivedSchemasContainer\">\n+                    <table class=\"ui-widget ui-widget-content\"\n+                           wicket:id=\"datatable\"/>\n+                </span>\n+\n                 <span style=\"float:right\">\n                     <form wicket:id=\"RolesDerPaginatorForm\" style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n-                        <select wicket:id=\"rowsChooser\"/>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n                     </form>\n                 </span>\n             </div>\n \n             <div wicket:id=\"createRoleDerivedSchemaWin\">[Show modal window for creating schema]</div>\n             <div wicket:id=\"editRoleDerivedSchemaWin\">[Show modal window for editing schema]</div>\n \n-            <a wicket:id=\"createRoleDerivedSchemaWinLink\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+            <a wicket:id=\"createRoleDerivedSchemaWinLink\"\n+               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n                 <wicket:message key=\"create_attribute\"/>\n             </a>\n \n@@ -189,48 +144,26 @@ <h1><wicket:message key=\"title\"/></h1>\n \n             <div id=\"users-contain\" class=\"ui-widget\">\n                 <h1><wicket:message key=\"title\"/></h1>\n-                <!--div wicket:id=\"feedbackUserSchema\"/-->\n-                <table id=\"users\" class=\"ui-widget ui-widget-content\" wicket:id=\"userSchemaContainer\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header \">\n-                            <th><wicket:message key=\"name\"/></th>\n-                    <th><wicket:message key=\"type\"/></th>\n-                    <th><wicket:message key=\"attributes\"/></th>\n-                    <th><wicket:message key=\"edit\"/></th>\n-                    <th><wicket:message key=\"delete\"/></th>\n-                    </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"userSchemas\" >\n-                            <td><span wicket:id=\"name\">[label name]</span></td>\n-                            <td><span wicket:id=\"type\">[label type]</span></td>\n-                            <td><span wicket:id=\"attributes\">[label attributes]</span></td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"editLink\">\n-                                    <wicket:message key=\"edit\"/>\n-                                </a>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"deleteLink\">\n-                                    <wicket:message key=\"delete\"/>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                    </tbody>\n-                </table>\n-                <span wicket:id=\"usersSchemaNavigator\"/>\n+\n+                <span wicket:id=\"userSchemaContainer\">\n+                    <table class=\"ui-widget ui-widget-content\"\n+                           wicket:id=\"datatable\"/>\n+                </span>\n+\n                 <span style=\"float:right\">\n                     <form wicket:id=\"UsersPaginatorForm\" style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n-                        <select wicket:id=\"rowsChooser\"/>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n                     </form>\n                 </span>\n             </div>\n \n             <div wicket:id=\"createUserSchemaWin\">[Show modal window for creating schema]</div>\n             <div wicket:id=\"editUserSchemaWin\">[Show modal window for editing schema]</div>\n \n-            <a wicket:id=\"createUserSchemaWinLink\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+            <a wicket:id=\"createUserSchemaWinLink\"\n+               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n                 <wicket:message key=\"create_attribute\"/>\n             </a>\n \n@@ -240,95 +173,50 @@ <h1><wicket:message key=\"title\"/></h1>\n \n                 <h1><wicket:message key=\"title\"/></h1>\n \n-                <table id=\"users\" class=\"ui-widget ui-widget-content\" wicket:id=\"userDerivedSchemaContainer\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header \">\n-                            <th><wicket:message key=\"name\"/></th>\n-                    <th><wicket:message key=\"expression\"/></th>\n-                    <th><wicket:message key=\"attributes\"/></th>\n-                    <th><wicket:message key=\"edit\"/></th>\n-                    <th><wicket:message key=\"delete\"/></th>\n-                    </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"userDerivedSchemas\" >\n-                            <td><span wicket:id=\"name\">[label name]</span></td>\n-                            <td><span wicket:id=\"expression\">[label expression]</span></td>\n-                            <td><span wicket:id=\"attributes\">[label attributes]</span></td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"editLink\">\n-                                    <wicket:message key=\"edit\"/>\n-                                </a>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"deleteLink\">\n-                                    <wicket:message key=\"delete\"/>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                    </tbody>\n-                </table>\n-                <span wicket:id=\"usersDerivedSchemaNavigator\"/>\n+                <span wicket:id=\"userDerivedSchemaContainer\">\n+                    <table class=\"ui-widget ui-widget-content\"\n+                           wicket:id=\"datatable\"/>\n+                </span>\n                 <span style=\"float:right\">\n                     <form wicket:id=\"UsersDerPaginatorForm\" style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n-                        <select wicket:id=\"rowsChooser\"/>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n                     </form>\n                 </span>\n             </div>\n             <div wicket:id=\"createUserDerSchemaWin\">[Show modal window for creating schema]</div>\n             <div wicket:id=\"editUserDerSchemaWin\">[Show modal window for editing schema]</div>\n \n-            <a wicket:id=\"createUserDerSchemaWinLink\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+            <a wicket:id=\"createUserDerSchemaWinLink\"\n+               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n                 <wicket:message key=\"create_attribute\"/>\n             </a>\n         </div>\n         <div id=\"tabs-5\">\n             <div id=\"users-contain\" class=\"ui-widget\">\n \n                 <h1><wicket:message key=\"title\"/></h1>\n+                \n+                <span wicket:id=\"membershipSchemaContainer\">\n+                    <table class=\"ui-widget ui-widget-content\"\n+                           wicket:id=\"datatable\"/>\n+                </span>\n \n-                <table id=\"membership\" class=\"ui-widget ui-widget-content\" wicket:id=\"membershipSchemaContainer\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header \">\n-                            <th><wicket:message key=\"name\"/></th>\n-                    <th><wicket:message key=\"type\"/></th>\n-                    <th><wicket:message key=\"attributes\"/></th>\n-                    <th><wicket:message key=\"edit\"/></th>\n-                    <th><wicket:message key=\"delete\"/></th>\n-                    </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"membershipSchemas\" >\n-                            <td><span wicket:id=\"name\">[label name]</span></td>\n-                            <td><span wicket:id=\"type\">[label expression]</span></td>\n-                            <td><span wicket:id=\"attributes\">[label attributes]</span></td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"editLink\">\n-                                    <wicket:message key=\"edit\"/>\n-                                </a>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"deleteLink\">\n-                                    <wicket:message key=\"delete\"/>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                    </tbody>\n-                </table>\n-                <span wicket:id=\"membershipsNavigator\"/>\n                 <span style=\"float:right\">\n                     <form wicket:id=\"MembershipPaginatorForm\"\n                           style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n-                        <select wicket:id=\"rowsChooser\"/>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n                     </form>\n                 </span>\n             </div>\n             <div wicket:id=\"createMembershipSchemaWin\">[Show modal window for creating schema]</div>\n             <div wicket:id=\"editMembershipSchemaWin\">[Show modal window for editing schema]</div>\n \n-            <a wicket:id=\"createMembershipSchemaWinLink\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+            <a wicket:id=\"createMembershipSchemaWinLink\"\n+               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n                 <wicket:message key=\"create_attribute\"/>\n             </a>\n         </div>\n@@ -337,46 +225,23 @@ <h1><wicket:message key=\"title\"/></h1>\n \n                 <h1><wicket:message key=\"title\"/></h1>\n \n-                <table id=\"derivedMembership\" class=\"ui-widget ui-widget-content\" wicket:id=\"membershipDerivedSchemaContainer\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header \">\n-                            <th><wicket:message key=\"name\"/></th>\n-                    <th><wicket:message key=\"expression\"/></th>\n-                    <th><wicket:message key=\"attributes\"/></th>\n-                    <th><wicket:message key=\"edit\"/></th>\n-                    <th><wicket:message key=\"delete\"/></th>\n-                    </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"membershipDerivedSchemas\" >\n-                            <td><span wicket:id=\"name\">[label name]</span></td>\n-                            <td><span wicket:id=\"expression\">[label expression]</span></td>\n-                            <td><span wicket:id=\"attributes\">[label attributes]</span></td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"editLink\">\n-                                    <wicket:message key=\"edit\"/>\n-                                </a>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"deleteLink\">\n-                                    <wicket:message key=\"delete\"/>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                    </tbody>\n-                </table>\n-                <span wicket:id=\"membershipsDerNavigator\"/>\n+                <span wicket:id=\"membershipDerivedSchemaContainer\">\n+                    <table class=\"ui-widget ui-widget-content\"\n+                           wicket:id=\"datatable\"/>\n+                </span>\n                 <span style=\"float:right\">\n                     <form wicket:id=\"MembershipDerPaginatorForm\" style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n-                        <select wicket:id=\"rowsChooser\"/>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n                     </form>\n                 </span>\n             </div>\n             <div wicket:id=\"createMembershipDerSchemaWin\">[Show modal window for creating schema]</div>\n             <div wicket:id=\"editMembershipDerSchemaWin\">[Show modal window for editing schema]</div>\n \n-            <a wicket:id=\"createMembershipDerSchemaWinLink\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n+            <a wicket:id=\"createMembershipDerSchemaWinLink\"\n+               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n                 <wicket:message key=\"create_attribute\"/>    \n             </a>\n         </div>"},{"sha":"35f4c87ef9a52fb1065b7e5e379ce87af13b27b1","filename":"console/src/main/resources/org/syncope/console/pages/SchemaModalPage.html","status":"modified","additions":21,"deletions":2,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -12,6 +12,24 @@\n  limitations under the License.\n  under the License.\n -->\n+<wicket:head>\n+    <style type=\"text/css\">\n+                /* Style for autocomplete field */\n+                div.wicket-aa {\n+                    font-family: \"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Verdana;\n+                    font-size: 12px;\n+                    background-color: white;\n+                    border-width: 1px;\n+                    border-color: #cccccc;\n+                    border-style: solid;\n+                    padding: 2px;\n+                    margin: 1px 0 0 0;\n+                    text-align:left;\n+                }\n+                div.wicket-aa ul { list-style:none; padding: 2px; margin:0; }\n+                div.wicket-aa ul li.selected { background-color: #FFFF00; padding: 2px; margin:0; }\n+    </style>\n+</wicket:head>\n <wicket:extend>\n         <div id=\"dialog-form\" title=\"Create new Schema\">\n         <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n@@ -26,8 +44,9 @@\n                 <select id=\"validatorClass\" class=\"text ui-widget-content ui-corner-all\" wicket:id=\"validatorClass\"/>\n                 <label for=\"type\"><wicket:message key=\"type\"/></label>\n                 <select id=\"type\"  class=\"text ui-widget-content ui-corner-all\" wicket:id=\"type\"/>\n-                <label for=\"mandatory\"><wicket:message key=\"mandatory\"/></label>\n-                <span id=\"mandatory\" wicket:id=\"mandatory\" class=\"radio\"/>\n+                <label for=\"mandatoryCondition\"><wicket:message key=\"mandatoryCondition\"/></label>\n+                <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"\n+                       id=\"mandatoryCondition\" wicket:id=\"mandatoryCondition\"/>\n                 <label for=\"virtual\"><wicket:message key=\"virtual\"/></label>\n                 <span id=\"virtual\" wicket:id=\"virtual\" class=\"radio\"/>\n                 <label for=\"multivalue\"><wicket:message key=\"multivalue\"/></label>"},{"sha":"641c52fd1563ba8dee0b4c0f3891f4dcf6bb97c7","filename":"console/src/main/resources/org/syncope/console/pages/SchemaModalPage.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -4,7 +4,7 @@ tab3=User attributes\n tab4=User derived attributes\n create_attribute=Create new attribute\n required_alert=All form fields are required.\n-mandatory=Required\n+mandatoryCondition=Mandatory condition\n multivalue=multivalue\n virtual=Virtual\n name=Name"},{"sha":"9864a08b015e220ed3a73d8c51f6833aa5c7aef3","filename":"console/src/main/resources/org/syncope/console/pages/SchemaModalPage_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -4,7 +4,7 @@ tab3=Attributi utenti\n tab4=Attributi utenti derivati\n create_attribute=Crea nuovo attributo\n required_alert=Tutti i campi sono richiesti\n-mandatory=Obbligatorio\n+mandatoryCondition=Vincolo d'obbligatoriet\\u00E0\n multivalue=Multivalore\n virtual=Virtuale\n name=Nome"},{"sha":"60c13062bceca8057cffd326ff1f1bf11e23d922","filename":"console/src/main/resources/org/syncope/console/pages/Users.html","status":"modified","additions":8,"deletions":43,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -94,55 +94,20 @@\n         </ul>\n         <div id=\"tabs-1\">\n \n-            <div id=\"users-contain\" class=\"ui-widget\">\n+            <div id=\"users-contain\" class=\"ui-widget\" style=\"width:auto\">\n \n                 <h1><wicket:message key=\"users_title\"/></h1>\n \n-                <table id=\"users\" class=\"ui-widget ui-widget-content\" wicket:id=\"usersContainer\">\n-                    <thead>\n-                        <tr class=\"ui-widget-header\">\n-                            <th><wicket:message key=\"id\"/></th>\n-                    <th><wicket:message key=\"status\"/></th>\n-                    <th><wicket:message key=\"token\"/></th>\n-                    <th wicket:id=\"usersSchema\">\n-                        <span wicket:id=\"attribute\"/>\n-                    </th>\n-                    <th><wicket:message key=\"edit\"/></th>\n-                    <th><wicket:message key=\"delete\"/></th>\n-                    </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"users\">\n-                            <td>\n-                                <span wicket:id=\"id\">[id]</span>\n-                            </td>\n-                            <td>\n-                                <span wicket:id=\"status\">[status]</span>\n-                            </td>\n-                            <td>\n-                                <span wicket:id=\"token\">[token]</span>\n-                            </td>\n-                            <td wicket:id=\"selectedAttributes\">\n-                                <span wicket:id=\"name\">[selected attribute]</span>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"editLink\">\n-                                    <wicket:message key=\"edit\"/>\n-                                </a>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"deleteLink\">\n-                                    <wicket:message key=\"delete\"/>\n-                                </a>\n-                            </td>\n-                        </tr>\n-                    </tbody>\n-                </table>\n-                <span wicket:id=\"usersNavigator\"/>\n+                <span wicket:id=\"container\">\n+                    <table class=\"ui-widget ui-widget-content\"\n+                           wicket:id=\"datatable\"/>\n+                </span>\n+\n                 <span style=\"float:right\">\n                     <form wicket:id=\"PaginatorForm\" style=\"display:inline\">\n                         <label><wicket:message key=\"displayRows\"/></label>\n-                        <select wicket:id=\"rowsChooser\"/>\n+                        <select class=\"text ui-widget-content ui-corner-all\"\n+                                wicket:id=\"rowsChooser\"/>\n                     </form>\n                 </span>\n             </div>"},{"sha":"54889da5b8f044b0c3e570e46def381588a7c30e","filename":"console/src/main/resources/org/syncope/console/pages/Users.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -13,7 +13,7 @@ id=Id\n status=Status\n token=Token\n change_attributes=Change attributes view\n-tokenValued=valued\n+tokenValued=Valued\n tokenNotValued=Not valued\n #tab2 - USERS SEARCH\n search_title=Set criteria for user search"},{"sha":"e3b64d0a995e594da55656199ae13f76dea2d7f4","filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/DeleteLinkPanel.html","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -0,0 +1,19 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<wicket:panel>\n+  <a href=\"#\" wicket:id=\"deleteLink\">\n+       <wicket:message key=\"delete\"/>\n+  </a>\n+</wicket:panel>\n\\ No newline at end of file"},{"sha":"91333d32cc1156c9649d4fb5b0fbc3027670ee4c","filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/EditLinkPanel.html","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEditLinkPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3434b4cc5e3d2f4ccfd45aae8245607cde38a411/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEditLinkPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FEditLinkPanel.html?ref=3434b4cc5e3d2f4ccfd45aae8245607cde38a411","patch":"@@ -0,0 +1,19 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<wicket:panel>\n+  <a href=\"#\" wicket:id=\"editLink\">\n+       <wicket:message key=\"edit\"/>\n+  </a>\n+</wicket:panel>\n\\ No newline at end of file"}]}