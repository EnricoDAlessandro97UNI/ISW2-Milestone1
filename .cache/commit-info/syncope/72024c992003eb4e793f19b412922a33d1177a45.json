{"sha":"72024c992003eb4e793f19b412922a33d1177a45","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjcyMDI0Yzk5MjAwM2ViNGU3OTNmMTliNDEyOTIyYTMzZDExNzdhNDU=","commit":{"author":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2014-07-02T13:59:19Z"},"committer":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2014-07-02T13:59:19Z"},"message":"Fixed #SYNCOPE-521\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1607368 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"778b9d6ae633f55f15c8f5be1941cb2b1ab65399","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/778b9d6ae633f55f15c8f5be1941cb2b1ab65399"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/72024c992003eb4e793f19b412922a33d1177a45","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/72024c992003eb4e793f19b412922a33d1177a45","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/72024c992003eb4e793f19b412922a33d1177a45","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/72024c992003eb4e793f19b412922a33d1177a45/comments","author":null,"committer":null,"parents":[{"sha":"a427cd05c7936d2a9a85ff27361a62c2515905b4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a427cd05c7936d2a9a85ff27361a62c2515905b4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a427cd05c7936d2a9a85ff27361a62c2515905b4"}],"stats":{"total":297,"additions":167,"deletions":130},"files":[{"sha":"7c6bae09035d49e0ad2e09797783130bf680577b","filename":"installer/pom.xml","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fpom.xml?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -55,8 +55,16 @@ under the License.\n       <groupId>org.codehaus.izpack</groupId>\n       <artifactId>izpack-panel</artifactId>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.httpcomponents</groupId>\n+      <artifactId>httpclient</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.httpcomponents</groupId>\n+      <artifactId>httpmime</artifactId>\n+    </dependency>\n \n-    <!--DB DRIVERS-->\n     <dependency>\n       <groupId>org.postgresql</groupId>\n       <artifactId>postgresql</artifactId>\n@@ -67,14 +75,7 @@ under the License.\n       <artifactId>mysql-connector-java</artifactId>\n       <version>5.1.31</version>\n     </dependency>\n-    <!--DB DRIVERS-->\n     \n-    <!-- JBOSS -->\n-    <dependency>\n-      <groupId>commons-httpclient</groupId>\n-      <artifactId>commons-httpclient</artifactId>\n-      <version>3.1</version>\n-    </dependency>\n     <dependency>\n       <groupId>org.codehaus.jackson</groupId>\n       <artifactId>jackson-mapper-asl</artifactId>\n@@ -85,7 +86,7 @@ under the License.\n       <groupId>commons-codec</groupId>\n       <artifactId>commons-codec</artifactId>\n       <version>1.9</version>\n-    </dependency> \n+    </dependency>\n     <dependency>\n       <groupId>commons-logging</groupId>\n       <artifactId>commons-logging</artifactId>"},{"sha":"aed1c68e833df69ea60527bc42dc314333ca5425","filename":"installer/src/main/java/org/apache/syncope/installer/containers/Tomcat.java","status":"modified","additions":7,"deletions":11,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -23,35 +23,31 @@\n public class Tomcat {\n \n     private static final String DEPLOY_SYNCOPE_CORE_QUERY\n-            = \"%s/manager/text/deploy?path=/syncope&war=file:%s/%s/core/target/syncope.war\";\n+            = \"/manager/text/deploy?path=/syncope&war=file:%s/%s/core/target/syncope.war\";\n \n     private static final String DEPLOY_SYNCOPE_CONSOLE_QUERY\n-            = \"%s/manager/text/deploy?path=/syncope-console&war=file:%s/%s/console/target/syncope-console.war\";\n-\n-    private final String tomcatUrl;\n+            = \"/manager/text/deploy?path=/syncope-console&war=file:%s/%s/console/target/syncope-console.war\";\n \n     private final String installPath;\n \n     private final String artifactId;\n \n     private final HttpUtils httpUtils;\n \n-    public Tomcat(String tomcatUrl, String installPath, String artifactId, String tomcatUser, String tomcatPassword) {\n-        this.tomcatUrl = tomcatUrl;\n+    public Tomcat(final String tomcatHost, final String tomcatPort, final String installPath, final String artifactId,\n+            final String tomcatUser, final String tomcatPassword) {\n         this.installPath = installPath;\n         this.artifactId = artifactId;\n-        httpUtils = new HttpUtils(tomcatUser, tomcatPassword);\n+        httpUtils = new HttpUtils(tomcatHost, tomcatPort, tomcatUser, tomcatPassword);\n     }\n \n     public boolean deployCore() {\n-        int status = httpUtils.getWithBasicAuth(\n-                String.format(DEPLOY_SYNCOPE_CORE_QUERY, tomcatUrl, installPath, artifactId));\n+        int status = httpUtils.getWithBasicAuth(String.format(DEPLOY_SYNCOPE_CORE_QUERY, installPath, artifactId));\n         return status == 200;\n     }\n \n     public boolean deployConsole() {\n-        int status = httpUtils.getWithBasicAuth(\n-                String.format(DEPLOY_SYNCOPE_CONSOLE_QUERY, tomcatUrl, installPath, artifactId));\n+        int status = httpUtils.getWithBasicAuth(String.format(DEPLOY_SYNCOPE_CONSOLE_QUERY, installPath, artifactId));\n         return status == 200;\n     }\n }"},{"sha":"4aeb19923781a9657fdb1d7c9874f4ec62a886cd","filename":"installer/src/main/java/org/apache/syncope/installer/containers/jboss/JBoss.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBoss.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBoss.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBoss.java?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -48,7 +48,7 @@ public JBoss(final String jbossHost, final String jbossPort,\n         this.jbossPort = jbossPort;\n         this.installPath = installPath;\n         this.artifactId = artifactId;\n-        httpUtils = new HttpUtils(jbossAdminUsername, jbossAdminPassword);\n+        httpUtils = new HttpUtils(jbossHost, jbossPort, jbossAdminUsername, jbossAdminPassword);\n \n     }\n \n@@ -70,8 +70,9 @@ public boolean deploy(final String whatDeploy, final String warName) {\n         final JBossDeployRequestContent jBossDeployRequestContent = new JBossDeployRequestContent(\n                 jBossAddResponse.getResult().getBYTES_VALUE(), warName);\n \n-        int status = httpUtils.postWithStringEntity(String.format(enableUrl, jbossHost, jbossPort),\n-                JsonUtils.jBossDeployRequestContent(jBossDeployRequestContent));\n+        int status = httpUtils.\n+                postWithStringEntity(String.format(enableUrl, jbossHost, jbossPort),\n+                        JsonUtils.jBossDeployRequestContent(jBossDeployRequestContent));\n         return status == 200;\n     }\n }"},{"sha":"dbb6d0b451d2f2dc42a6370a184d0cbbdae39237","filename":"installer/src/main/java/org/apache/syncope/installer/processes/ContainerProcess.java","status":"modified","additions":18,"deletions":15,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -40,7 +40,9 @@ public class ContainerProcess extends AbstractProcess {\n \n     private String tomcatPassword;\n \n-    private String tomcatUrl;\n+    private String tomcatHost;\n+\n+    private String tomcatPort;\n \n     private String glassfishDir;\n \n@@ -65,18 +67,19 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         installPath = args[0];\n         artifactId = args[1];\n         final Containers selectedContainer = Containers.fromContainerName(args[2]);\n-        tomcatUrl = args[3];\n-        tomcatUser = args[4];\n-        tomcatPassword = args[5];\n-        glassfishDir = args[6];\n-        logsDirectory = args[7];\n-        bundlesDirectory = args[8];\n-        withDataSource = Boolean.valueOf(args[9]);\n-        jbossHost = args[10];\n-        jbossPort = args[11];\n-        jbossJdbcModuleName = args[12];\n-        jbossAdminUsername = args[13];\n-        jbossAdminPassword = args[14];\n+        tomcatHost = args[3];\n+        tomcatPort = args[4];\n+        tomcatUser = args[5];\n+        tomcatPassword = args[6];\n+        glassfishDir = args[7];\n+        logsDirectory = args[8];\n+        bundlesDirectory = args[9];\n+        withDataSource = Boolean.valueOf(args[10]);\n+        jbossHost = args[11];\n+        jbossPort = args[12];\n+        jbossJdbcModuleName = args[13];\n+        jbossAdminUsername = args[14];\n+        jbossAdminPassword = args[15];\n \n         if (withDataSource) {\n             writeToFile(new File(installPath + \"/\" + artifactId + WebXml.PATH), WebXml.withDataSource());\n@@ -100,8 +103,8 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n \n         switch (selectedContainer) {\n             case TOMCAT:\n-                final Tomcat tomcat = new Tomcat(tomcatUrl, installPath, artifactId, tomcatUser, tomcatPassword);\n-\n+                final Tomcat tomcat = new Tomcat(\n+                        tomcatHost, tomcatPort, installPath, artifactId, tomcatUser, tomcatPassword);\n                 boolean deployCoreResult = tomcat.deployCore();\n                 if (deployCoreResult) {\n                     handler.logOutput(\"Core successfully deployed \", true);"},{"sha":"383d35b9ba695e6d587e13374ea710508d0ccd7c","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/HttpUtils.java","status":"modified","additions":87,"deletions":49,"changes":136,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FHttpUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FHttpUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FHttpUtils.java?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -20,46 +20,62 @@\n \n import java.io.File;\n import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.List;\n-import org.apache.commons.httpclient.HttpClient;\n-import org.apache.commons.httpclient.HttpMethod;\n-import org.apache.commons.httpclient.UsernamePasswordCredentials;\n-import org.apache.commons.httpclient.auth.AuthPolicy;\n-import org.apache.commons.httpclient.auth.AuthScope;\n-import org.apache.commons.httpclient.methods.GetMethod;\n-import org.apache.commons.httpclient.methods.PostMethod;\n-import org.apache.commons.httpclient.methods.StringRequestEntity;\n-import org.apache.commons.httpclient.methods.multipart.FilePart;\n-import org.apache.commons.httpclient.methods.multipart.FilePartSource;\n-import org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity;\n-import org.apache.commons.httpclient.methods.multipart.Part;\n-import org.apache.commons.httpclient.methods.multipart.PartSource;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpHost;\n+import org.apache.http.auth.AuthScheme;\n+import org.apache.http.auth.AuthScope;\n+import org.apache.http.auth.UsernamePasswordCredentials;\n+import org.apache.http.client.AuthCache;\n+import org.apache.http.client.CredentialsProvider;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.client.protocol.HttpClientContext;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.entity.mime.MultipartEntityBuilder;\n+import org.apache.http.entity.mime.content.FileBody;\n+import org.apache.http.impl.auth.BasicScheme;\n+import org.apache.http.impl.auth.DigestScheme;\n+import org.apache.http.impl.client.BasicAuthCache;\n+import org.apache.http.impl.client.BasicCredentialsProvider;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClients;\n \n public class HttpUtils {\n \n-    private static final String APPLICATION_JSON = \"application/json\";\n+    private static final String URL_TEMPLATE = \"http://%s:%s\";\n \n-    private static final String MULTIPART_FORM_DATA = \"multipart/form-data\";\n+    private final CloseableHttpClient httpClient;\n \n-    private static final String UTF_8 = \"UTF-8\";\n+    private final String host;\n \n-    private final HttpClient httpClient;\n+    private final int port;\n \n-    public HttpUtils(final String username, final String password) {\n-        httpClient = new HttpClient();\n-        httpClient.getParams().setAuthenticationPreemptive(true);\n-        httpClient.getState().setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(username, password));\n+    private final String username;\n+\n+    private final String password;\n+\n+    private final HttpHost targetHost;\n+\n+    public HttpUtils(final String host, final String port, final String username, final String password) {\n+        httpClient = HttpClients.createDefault();\n+        this.username = username;\n+        this.password = password;\n+        this.host = host;\n+        this.port = Integer.valueOf(port);\n+        this.targetHost = new HttpHost(this.host, this.port);\n     }\n \n-    public int getWithBasicAuth(final String url) {\n-        final HttpMethod method = new GetMethod(url);\n-        final List authPrefs = new ArrayList();\n-        authPrefs.add(AuthPolicy.BASIC);\n-        httpClient.getParams().setParameter(AuthPolicy.BASIC, authPrefs);\n+    public int getWithBasicAuth(final String path) {\n+        final HttpGet httpGet = new HttpGet(String.format(URL_TEMPLATE, host, port) + path);\n         int status = 0;\n         try {\n-            status = httpClient.executeMethod(method);\n+            final CloseableHttpResponse response = httpClient.execute(\n+                    targetHost, httpGet, setAuth(targetHost, new BasicScheme()));\n+            status = response.getStatusLine().getStatusCode();\n+            response.close();\n         } catch (IOException ex) {\n         }\n         return status;\n@@ -68,33 +84,55 @@ public int getWithBasicAuth(final String url) {\n     public String postWithDigestAuth(final String url, final String file) {\n         String responseBodyAsString = \"\";\n         try {\n-            final PostMethod addContentPost = new PostMethod(url);\n-            final PartSource partSource = new FilePartSource(new File(file));\n-\n-            final String[] tmp = file.split(\"/\");\n-            final String fileName = tmp[tmp.length - 1].split(\"\\\\.\")[0];\n-            final Part[] parts = {new FilePart(fileName, partSource, MULTIPART_FORM_DATA, UTF_8)};\n-            final MultipartRequestEntity mre = new MultipartRequestEntity(parts, addContentPost.getParams());\n-            addContentPost.setRequestEntity(mre);\n-            final List authPrefs = new ArrayList();\n-            authPrefs.add(AuthPolicy.DIGEST);\n-\n-            httpClient.getParams().setParameter(AuthPolicy.AUTH_SCHEME_PRIORITY, authPrefs);\n-            httpClient.executeMethod(addContentPost);\n-            responseBodyAsString = addContentPost.getResponseBodyAsString();\n-        } catch (IOException ioe) {\n+            final CloseableHttpResponse response = httpClient.execute(targetHost,\n+                    httpPost(url, MultipartEntityBuilder.create().addPart(\"bin\", new FileBody(new File(file))).build()),\n+                    setAuth(targetHost, new DigestScheme()));\n+            responseBodyAsString = IOUtils.toString(response.getEntity().getContent());\n+            response.close();\n+        } catch (IOException ex) {\n         }\n+\n         return responseBodyAsString;\n     }\n \n     public int postWithStringEntity(final String url, final String stringEntity) {\n         int status = 0;\n         try {\n-            final StringRequestEntity requestEntity = new StringRequestEntity(stringEntity, APPLICATION_JSON, UTF_8);\n-            final PostMethod enablePost = new PostMethod(url);\n-            enablePost.setRequestEntity(requestEntity);\n-            status = httpClient.executeMethod(enablePost);\n-        } catch (IOException uee) {\n+            final HttpPost httPost = httpPost(url, new StringEntity(stringEntity));\n+            httPost.addHeader(\"Content-Type\", ContentType.APPLICATION_JSON.getMimeType());\n+            final CloseableHttpResponse response = httpClient.execute(\n+                    targetHost, httPost, setAuth(targetHost, new DigestScheme()));\n+            status = response.getStatusLine().getStatusCode();\n+            response.close();\n+        } catch (IOException ioe) {\n+        }\n+        return status;\n+    }\n+\n+    private HttpClientContext setAuth(final HttpHost targetHost, final AuthScheme authScheme) {\n+        final CredentialsProvider credsProvider = new BasicCredentialsProvider();\n+        credsProvider.setCredentials(new AuthScope(targetHost.getHostName(), targetHost.getPort()),\n+                new UsernamePasswordCredentials(username, password));\n+        final HttpClientContext context = HttpClientContext.create();\n+        final AuthCache authCache = new BasicAuthCache();\n+        authCache.put(targetHost, authScheme);\n+        context.setAuthCache(authCache);\n+        context.setCredentialsProvider(credsProvider);\n+        return context;\n+    }\n+\n+    private HttpPost httpPost(final String url, final HttpEntity reqEntity) {\n+        final HttpPost httppost = new HttpPost(url);\n+        httppost.setEntity(reqEntity);\n+        return httppost;\n+    }\n+\n+    public static int ping(final String host, final String port) {\n+        int status = 0;\n+        try {\n+            status = HttpClients.createDefault().execute(\n+                    new HttpGet(String.format(URL_TEMPLATE, host, port))).getStatusLine().getStatusCode();\n+        } catch (IOException ioe) {\n         }\n         return status;\n     }"},{"sha":"cca9ba8e73f306a0fe33b6566380210051ed6f78","filename":"installer/src/main/java/org/apache/syncope/installer/validators/ContainerValidator.java","status":"modified","additions":11,"deletions":23,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FContainerValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FContainerValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FContainerValidator.java?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -20,10 +20,8 @@\n \n import com.izforge.izpack.api.data.InstallData;\n import java.io.File;\n-import java.io.IOException;\n-import java.net.HttpURLConnection;\n-import java.net.URL;\n import org.apache.syncope.installer.enums.Containers;\n+import org.apache.syncope.installer.utilities.HttpUtils;\n \n public class ContainerValidator extends AbstractValidator {\n \n@@ -34,7 +32,8 @@ public Status validateData(final InstallData installData) {\n \n         final Containers selectedContainer = Containers.fromContainerName(\n                 installData.getVariable(\"install.container.selection\"));\n-        final String tomcatUrl = installData.getVariable(\"tomcat.container.url\");\n+        final String tomcatHost = installData.getVariable(\"tomcat.container.host\");\n+        final String tomcatPort = installData.getVariable(\"tomcat.container.port\");\n         final String tomcatUser = installData.getVariable(\"tomcat.container.user\");\n         final String tomcatPassword = installData.getVariable(\"tomcat.container.pwd\");\n         final String glassfishDir = installData.getVariable(\"glassfish.container.dir\");\n@@ -49,8 +48,12 @@ public Status validateData(final InstallData installData) {\n \n                 boolean verified = true;\n                 error = new StringBuilder(\"Required fields:\\n\");\n-                if (isEmpty(tomcatUrl)) {\n-                    error.append(\"Tomcat URL\\n\");\n+                if (isEmpty(tomcatHost)) {\n+                    error.append(\"Tomcat host\\n\");\n+                    verified = false;\n+                }\n+                if (isEmpty(tomcatPort)) {\n+                    error.append(\"Tomcat port\\n\");\n                     verified = false;\n                 }\n                 if (isEmpty(tomcatUser)) {\n@@ -66,14 +69,7 @@ public Status validateData(final InstallData installData) {\n                     return Status.ERROR;\n                 }\n \n-                int responseCode = 0;\n-\n-                try {\n-                    final HttpURLConnection connection = (HttpURLConnection) new URL(tomcatUrl).openConnection();\n-                    responseCode = connection.getResponseCode();\n-                } catch (final IOException ex) {\n-\n-                }\n+                int responseCode = HttpUtils.ping(tomcatHost, tomcatPort);\n \n                 if (responseCode == 200) {\n                     return Status.OK;\n@@ -109,15 +105,7 @@ public Status validateData(final InstallData installData) {\n                     return Status.ERROR;\n                 }\n \n-                int jResponseCode = 0;\n-\n-                try {\n-                    final HttpURLConnection connection = (HttpURLConnection) new URL(\n-                            \"http://\" + jbossHost + \":\" + jbossPort).openConnection();\n-                    jResponseCode = connection.getResponseCode();\n-                } catch (final IOException ex) {\n-\n-                }\n+                int jResponseCode = HttpUtils.ping(jbossHost, jbossPort);\n \n                 if (jResponseCode == 200) {\n                     return Status.OK;"},{"sha":"e229c5bf0e79b52a0ec0823ca06125a4f1df20f4","filename":"installer/src/main/resources/izpack/ProcessPanel.Spec.xml","status":"modified","additions":16,"deletions":15,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FProcessPanel.Spec.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FProcessPanel.Spec.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FProcessPanel.Spec.xml?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -19,7 +19,7 @@ under the License.\n -->\n <processing>\n   <logfiledir>$INSTALL_PATH</logfiledir>\n-  <job name=\"archetype\">\n+  <job name=\"Archetype creation...\">\n     <executeclass name=\"org.apache.syncope.installer.processes.ArchetypeProcess\">\n       <arg>$INSTALL_PATH</arg>\n       <arg>$mvn.groupid</arg>\n@@ -32,7 +32,7 @@ under the License.\n       <arg>$mvn.syncope.admin.password</arg>\n     </executeclass>\n   </job>\n-  <job name=\"persistence\">\n+  <job name=\"Persistence configuration...\">\n     <executeclass name=\"org.apache.syncope.installer.processes.PersistenceProcess\">\n       <arg>$INSTALL_PATH</arg><!-- 0 -->\n       <arg>$mvn.artifactid</arg><!-- 1 -->\n@@ -44,23 +44,24 @@ under the License.\n       <arg>$persistence.tablespace</arg><!-- 7 -->\n     </executeclass>\n   </job>\n-  <job name=\"container\">\n+  <job name=\"Deploy...\">\n     <executeclass name=\"org.apache.syncope.installer.processes.ContainerProcess\">\n       <arg>$INSTALL_PATH</arg><!-- 0 -->\n       <arg>$mvn.artifactid</arg><!-- 1 -->\n       <arg>$install.container.selection</arg><!-- 2 -->\n-      <arg>$tomcat.container.url</arg><!-- 3 -->\n-      <arg>$tomcat.container.user</arg><!-- 4 -->\n-      <arg>$tomcat.container.pwd</arg><!-- 5 -->\n-      <arg>$glassfish.container.dir</arg><!-- 6 -->\n-      <arg>$mvn.log.directory</arg><!-- 7 -->\n-      <arg>$mvn.bundle.directory</arg><!-- 8 -->\n-      <arg>$with.datasuorce</arg><!-- 9 -->\n-      <arg>$jboss.container.host</arg><!-- 10 -->\n-      <arg>$jboss.container.port</arg><!-- 11 -->\n-      <arg>$jboss.container.jdbc.module</arg><!-- 12 -->\n-      <arg>$jboss.container.user</arg><!-- 13 -->\n-      <arg>$jboss.container.pwd</arg><!-- 14 -->\n+      <arg>$tomcat.container.host</arg><!-- 3 -->\n+      <arg>$tomcat.container.port</arg><!-- 4 -->\n+      <arg>$tomcat.container.user</arg><!-- 5 -->\n+      <arg>$tomcat.container.pwd</arg><!-- 6 -->\n+      <arg>$glassfish.container.dir</arg><!-- 7 -->\n+      <arg>$mvn.log.directory</arg><!-- 8 -->\n+      <arg>$mvn.bundle.directory</arg><!-- 9 -->\n+      <arg>$with.datasuorce</arg><!-- 10 -->\n+      <arg>$jboss.container.host</arg><!-- 11 -->\n+      <arg>$jboss.container.port</arg><!-- 12 -->\n+      <arg>$jboss.container.jdbc.module</arg><!-- 13 -->\n+      <arg>$jboss.container.user</arg><!-- 14 -->\n+      <arg>$jboss.container.pwd</arg><!-- 15 -->\n     </executeclass>\n   </job>\n   <onFail previous=\"true\" next=\"false\" />"},{"sha":"071ad61264882239418be05ab29b3efed44510d2","filename":"installer/src/main/resources/izpack/install.xml","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2Finstall.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2Finstall.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2Finstall.xml?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -136,8 +136,11 @@ under the License.\n   <jar src=\"lib/postgresql-9.3-1101-jdbc41.jar\"/>\n   <jar src=\"lib/mysql-connector-java-5.1.31.jar\"/>\n   <jar src=\"lib/commons-logging-1.1.3.jar\"/>\n-  <jar src=\"lib/commons-httpclient-3.1.jar\"/>\n   <jar src=\"lib/commons-codec-1.9.jar\"/>\n+  <jar src=\"lib/commons-io-2.4.jar\"/>\n+  <jar src=\"lib/httpclient-4.3.4.jar\"/>\n+  <jar src=\"lib/httpmime-4.3.4.jar\"/>\n+  <jar src=\"lib/httpcore-4.3.2.jar\"/>\n   <jar src=\"lib/jackson-core-asl-1.9.13.jar\"/>\n   <jar src=\"lib/jackson-mapper-asl-1.9.13.jar\"/>\n   "},{"sha":"4e6a69dbfb06cc8c54db420e3611a0f3bb80567c","filename":"installer/src/main/resources/izpack/userInputLang.xml_eng","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_eng","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_eng","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_eng?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -35,7 +35,8 @@ under the License.\n   \n   <str id=\"with.datasuorce.id\" txt=\"DataSource with JNDI name 'java:/syncopeDataSource':\"/>\n   \n-  <str id=\"tomcat.container.url.id\" txt=\"Tomcat URL:\"/>\n+  <str id=\"tomcat.container.host.id\" txt=\"Tomcat host:\"/>\n+  <str id=\"tomcat.container.port.id\" txt=\"Tomcat port:\"/>\n   <str id=\"tomcat.container.user.id\" txt=\"Tomcat username:\"/>\n   <str id=\"tomcat.container.pwd.id\" txt=\"Tomcat password:\"/>\n   "},{"sha":"4e6a69dbfb06cc8c54db420e3611a0f3bb80567c","filename":"installer/src/main/resources/izpack/userInputLang.xml_ita","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_ita","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_ita","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputLang.xml_ita?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -35,7 +35,8 @@ under the License.\n   \n   <str id=\"with.datasuorce.id\" txt=\"DataSource with JNDI name 'java:/syncopeDataSource':\"/>\n   \n-  <str id=\"tomcat.container.url.id\" txt=\"Tomcat URL:\"/>\n+  <str id=\"tomcat.container.host.id\" txt=\"Tomcat host:\"/>\n+  <str id=\"tomcat.container.port.id\" txt=\"Tomcat port:\"/>\n   <str id=\"tomcat.container.user.id\" txt=\"Tomcat username:\"/>\n   <str id=\"tomcat.container.pwd.id\" txt=\"Tomcat password:\"/>\n   "},{"sha":"c0a61505b587e03e8fe2bfe27176643390e97aa3","filename":"installer/src/main/resources/izpack/userInputSpec.xml","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputSpec.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/72024c992003eb4e793f19b412922a33d1177a45/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputSpec.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Fizpack%2FuserInputSpec.xml?ref=72024c992003eb4e793f19b412922a33d1177a45","patch":"@@ -138,8 +138,12 @@ under the License.\n     <field type=\"divider\"/>\n     <field type=\"space\"/>\n     \n-    <field type=\"text\" variable=\"tomcat.container.url\" conditionid=\"tomcat.choice\">\n-      <spec id=\"tomcat.container.url.id\" size=\"20\" set=\"http://localhost:8080/\"/>\n+    <field type=\"text\" variable=\"tomcat.container.host\" conditionid=\"tomcat.choice\">\n+      <spec id=\"tomcat.container.host.id\" size=\"20\" set=\"localhost\"/>\n+    </field>\n+    <field type=\"space\"/>\n+    <field type=\"text\" variable=\"tomcat.container.port\" conditionid=\"tomcat.choice\">\n+      <spec id=\"tomcat.container.port.id\" size=\"20\" set=\"8080\"/>\n     </field>\n     <field type=\"space\"/>\n     <field type=\"text\" variable=\"tomcat.container.user\" conditionid=\"tomcat.choice\">"}]}