{"sha":"e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUwMzRhZmNkNWU3ZGEwMWQ1NmQ5MjIyZDg1ZjE0ZDNiMTVjYjRjNmE=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-11-17T13:59:33Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-11-17T13:59:33Z"},"message":"[SYNCOPE-156] providing status panel for any objects","tree":{"sha":"9907de60687b41d15daa3fc0e12a0d42e5c8ee9d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9907de60687b41d15daa3fc0e12a0d42e5c8ee9d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"c2ce2e800fa661cf8d5ab718dd8092aecb89c9d6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c2ce2e800fa661cf8d5ab718dd8092aecb89c9d6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c2ce2e800fa661cf8d5ab718dd8092aecb89c9d6"}],"stats":{"total":1243,"additions":1046,"deletions":197},"files":[{"sha":"6a2d226ad4ec0100b9b5fda03572082170be341a","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AnyDataProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -99,7 +99,7 @@ public long size() {\n                     ? 0\n                     : restClient.searchCount(realm, fiql, type);\n         } else {\n-            result = restClient.count(realm);\n+            result = restClient.count(type, realm);\n         }\n \n         return result;"},{"sha":"b767db07f96527d01274487627d18503f9ec9ebc","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/NotificationAwareComponent.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FNotificationAwareComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FNotificationAwareComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FNotificationAwareComponent.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.commons;\n+\n+import org.apache.syncope.client.console.panels.NotificationPanel;\n+\n+public interface NotificationAwareComponent {\n+    NotificationPanel getFeedbackPanel();\n+}"},{"sha":"3a317b8f0b22004fbcf25bb1663a41d6e118705c","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusBean.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -45,7 +45,9 @@ public class StatusBean implements Serializable {\n \n     public StatusBean(final AnyTO any, final String resourceName) {\n         this.anyKey = any.getKey();\n-        this.anyName = any instanceof UserTO ? ((UserTO) any).getUsername() : ((GroupTO) any).getName();\n+        this.anyName = any instanceof UserTO\n+                ? ((UserTO) any).getUsername()\n+                : any instanceof GroupTO ? ((GroupTO) any).getName() : String.valueOf(any.getKey());\n         this.resourceName = resourceName;\n     }\n "},{"sha":"0e5c02f1f77209e709d43d7d32a73db6acda49f4","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.ImagePanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -48,9 +49,9 @@ public class StatusUtils implements Serializable {\n \n     private static final String IMG_PREFIX = \"/img/statuses/\";\n \n-    private final AbstractAnyRestClient restClient;\n+    private final AbstractAnyRestClient<?> restClient;\n \n-    public StatusUtils(final AbstractAnyRestClient restClient) {\n+    public StatusUtils(final AbstractAnyRestClient<?> restClient) {\n         this.restClient = restClient;\n     }\n \n@@ -139,6 +140,20 @@ private String getConnObjectLink(final ConnObjectTO objectTO) {\n                 : null;\n     }\n \n+    public static PasswordPatch buildPasswordPatch(final String password, final Collection<StatusBean> statuses) {\n+        final PasswordPatch.Builder builder = new PasswordPatch.Builder();\n+        builder.value(password);\n+\n+        for (StatusBean status : statuses) {\n+            if (\"syncope\".equalsIgnoreCase(status.getResourceName())) {\n+                builder.onSyncope(true);\n+            } else {\n+                builder.resource(status.getResourceName());\n+            }\n+        }\n+        return builder.build();\n+    }\n+\n     public static StatusPatch buildStatusPatch(final Collection<StatusBean> statuses) {\n         return buildStatusPatch(statuses, null);\n     }"},{"sha":"247051e02420d3ef64f485e3383eb3ae7de8274e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractBasePage.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractBasePage.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.pages;\n \n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.NotificationAwareComponent;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n import org.apache.wicket.markup.head.HeaderItem;\n@@ -29,7 +30,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class AbstractBasePage extends WebPage {\n+public class AbstractBasePage extends WebPage implements NotificationAwareComponent {\n \n     private static final long serialVersionUID = 8611724965544132636L;\n \n@@ -64,6 +65,7 @@ public AbstractBasePage(final PageParameters parameters) {\n         add(feedbackPanel);\n     }\n \n+    @Override\n     public NotificationPanel getFeedbackPanel() {\n         return feedbackPanel;\n     }"},{"sha":"e6c7a27b270cd1aed8380ae7fc1c34f609eeedb4","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/StatusModal.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FStatusModal.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -64,7 +64,7 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class StatusModalPage<T extends AnyTO> extends AbstractStatusModalPage {\n+public class StatusModal<T extends AnyTO> extends AbstractStatusModalPage {\n \n     private static final long serialVersionUID = -9148734710505211261L;\n \n@@ -102,15 +102,15 @@\n \n     private final List<IColumn<StatusBean, String>> columns;\n \n-    public StatusModalPage(\n+    public StatusModal(\n             final BaseModal<T> modal,\n             final PageReference pageRef,\n             final AnyTO attributableTO) {\n \n         this(modal, pageRef, attributableTO, false);\n     }\n \n-    public StatusModalPage(\n+    public StatusModal(\n             final BaseModal<T> modal,\n             final PageReference pageRef,\n             final AnyTO anyTO,\n@@ -206,7 +206,7 @@ public boolean isElementEnabled(final StatusBean element) {\n         pwdMgt = new WebMarkupContainer(\"pwdMgt\");\n         pwdMgtFragment.add(pwdMgt.setOutputMarkupId(true));\n \n-        pwdMgtForm = new Form(\"pwdMgtForm\");\n+        pwdMgtForm = new Form<>(\"pwdMgtForm\");\n         pwdMgtForm.setVisible(false).setEnabled(false);\n         pwdMgt.add(pwdMgtForm);\n \n@@ -403,7 +403,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n \n                     if (anyTO instanceof UserTO) {\n-                        StatusModalPage.this.passwordManagement(\n+                        StatusModal.this.passwordManagement(\n                                 target, ResourceAssociationAction.PROVISION, table.getModelObject());\n                     } else {\n                         try {\n@@ -460,7 +460,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 @Override\n                 public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                     if (anyTO instanceof UserTO) {\n-                        StatusModalPage.this.passwordManagement(\n+                        StatusModal.this.passwordManagement(\n                                 target, ResourceAssociationAction.ASSIGN, table.getModelObject());\n                     } else {\n                         try {","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/StatusModalPage.java"},{"sha":"7a19e6cc4a92f1bc93632688c25630af01f24abd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnySearchResultPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnySearchResultPanel.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -142,8 +142,8 @@ public ActionLinksPanel<T> getActions(final String componentId, final IModel<T>\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final AnyTO anyTO) {\n-                        send(AnySearchResultPanel.this, Broadcast.BREADTH,\n-                                new AjaxWizard.NewItemActionEvent<>(model.getObject(), target));\n+                        send(AnySearchResultPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<T>() {\n "},{"sha":"186e7663fae11a9dd908fddd0dcc07dfea279d58","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -55,8 +55,6 @@ public final class GroupSearchResultPanel extends AnySearchResultPanel<GroupTO>\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    private final String entitlement = \"GROUP_READ\";\n-\n     private GroupSearchResultPanel(\n             final String type,\n             final String parentId,\n@@ -123,8 +121,8 @@ public ActionLinksPanel<GroupTO> getActions(final String componentId, final IMod\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n-                        send(GroupSearchResultPanel.this, Broadcast.BREADTH,\n-                                new AjaxWizard.NewItemActionEvent<AnyTO>(model.getObject(), target));\n+                        send(GroupSearchResultPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<AnyTO>(model.getObject(), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<GroupTO>() {\n "},{"sha":"be4703915cd3c13b69dce7606cfa150dae4df6e2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":148,"deletions":39,"changes":187,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -18,30 +18,38 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import java.beans.IntrospectionException;\n-import java.beans.PropertyDescriptor;\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.lang.reflect.InvocationTargetException;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n+import org.apache.wicket.core.util.lang.PropertyResolver;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Check;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.form.CheckGroupSelector;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.request.cycle.RequestCycle;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public final class ListViewPanel<T extends Serializable> extends WizardMgtPanel<T> {\n+public abstract class ListViewPanel<T extends Serializable> extends WizardMgtPanel<T> {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n@@ -50,6 +58,27 @@\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(ListViewPanel.class);\n \n+    public enum CheckAvailability {\n+\n+        /**\n+         * No checks.\n+         */\n+        NONE,\n+        /**\n+         * Enabled checks including check group selector.\n+         */\n+        AVAILABLE,\n+        /**\n+         * Disabled checks.\n+         */\n+        DISABLED\n+\n+    }\n+\n+    private final CheckGroupSelector groupSelector;\n+\n+    private final Model<CheckAvailability> check;\n+\n     private final List<T> listOfItems;\n \n     /**\n@@ -67,12 +96,35 @@ private ListViewPanel(\n             final Class<T> reference,\n             final List<String> includes,\n             final ActionLinksPanel.Builder<T> actions,\n+            final CheckAvailability check,\n+            final boolean reuseItem,\n+            final IModel<? extends Collection<T>> model,\n             final PageReference pageRef) {\n         super(id, pageRef);\n         setOutputMarkupId(true);\n \n+        this.check = Model.of(check);\n+\n         add(new Label(\"caption\", new ResourceModel(\"listview.caption\", StringUtils.EMPTY)));\n \n+        final CheckGroup<T> checkGroup = new CheckGroup<>(\"group\", model);\n+        checkGroup.setOutputMarkupId(true);\n+        checkGroup.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n+\n+            private static final long serialVersionUID = -151291731388673682L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                // ignore\n+            }\n+        });\n+        add(checkGroup);\n+\n+        groupSelector = new CheckGroupSelector(\"groupselector\", checkGroup);\n+        add(groupSelector.setOutputMarkupId(true)\n+                .setOutputMarkupPlaceholderTag(true)\n+                .setVisible(this.check.getObject() == CheckAvailability.AVAILABLE));\n+\n         final List<String> toBeIncluded;\n         if (includes == null || includes.isEmpty()) {\n             toBeIncluded = new ArrayList<String>();\n@@ -98,23 +150,20 @@ private ListViewPanel(\n             }\n         }\n \n-        final ListView<String> names = new ListView<String>(\"names\", toBeIncluded) {\n-\n-            private static final long serialVersionUID = 1L;\n-\n-            @Override\n-            protected void populateItem(final ListItem<String> item) {\n-                item.add(new Label(\"name\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n-            }\n-        };\n-        add(names);\n+        add(header(toBeIncluded));\n \n         final ListView<T> beans = new ListView<T>(\"beans\", listOfItems) {\n \n             private static final long serialVersionUID = 1L;\n \n             @Override\n             protected void populateItem(final ListItem<T> beanItem) {\n+                beanItem.add(new Check<T>(\"check\", beanItem.getModel(), checkGroup).setOutputMarkupId(true)\n+                        .setOutputMarkupPlaceholderTag(true)\n+                        .setVisible(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE\n+                                || ListViewPanel.this.check.getObject() == CheckAvailability.DISABLED)\n+                        .setEnabled(ListViewPanel.this.check.getObject() == CheckAvailability.AVAILABLE));\n+\n                 final T bean = beanItem.getModelObject();\n \n                 final ListView<String> fields = new ListView<String>(\"fields\", toBeIncluded) {\n@@ -123,60 +172,77 @@ protected void populateItem(final ListItem<T> beanItem) {\n \n                     @Override\n                     protected void populateItem(final ListItem<String> fieldItem) {\n-                        try {\n-                            LOG.debug(\"Processing field {}\", fieldItem.getModelObject());\n-\n-                            final Object value = new PropertyDescriptor(fieldItem.getModelObject(), bean.getClass()).\n-                                    getReadMethod().invoke(bean);\n-\n-                            LOG.debug(\"Field value {}\", value);\n-\n-                            fieldItem.add(value == null\n-                                    ? new Label(\"field\", StringUtils.EMPTY)\n-                                    : new Label(\"field\", new ResourceModel(value.toString(), value.toString())));\n-\n-                        } catch (IntrospectionException | IllegalAccessException | IllegalArgumentException \n-                                | InvocationTargetException e) {\n-                            LOG.error(\"Error retrieving value for field {}\", fieldItem.getModelObject(), e);\n-                            fieldItem.add(new Label(\"field\", StringUtils.EMPTY));\n-                        }\n+                        fieldItem.add(getValueComponent(fieldItem.getModelObject(), bean));\n                     }\n                 };\n                 beanItem.add(fields);\n                 beanItem.add(actions.build(\"actions\", bean));\n             }\n         };\n         beans.setOutputMarkupId(true);\n-        beans.setReuseItems(true);\n-        add(beans);\n+        beans.setReuseItems(reuseItem);\n+        beans.setRenderBodyOnly(true);\n+        checkGroup.add(beans);\n     }\n \n-    public static <T extends Serializable> ListViewPanel.Builder<T> builder(\n-            final Class<T> reference, final PageReference pageRef) {\n-        return new ListViewPanel.Builder<T>(reference, pageRef);\n+    private ListView<String> header(final List<String> labels) {\n+        return new ListView<String>(\"names\", labels) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<String> item) {\n+                item.add(new Label(\"name\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+            }\n+        };\n+    }\n+\n+    public void setCheckAvailability(final CheckAvailability check) {\n+        // used to perform selectable enabling check condition\n+        this.check.setObject(check);\n+\n+        final AjaxRequestTarget target = RequestCycle.get().find(AjaxRequestTarget.class);\n+\n+        // reload group selector\n+        target.add(groupSelector.setVisible(check == CheckAvailability.AVAILABLE));\n+        // reload the list view panel\n+        target.add(ListViewPanel.this);\n     }\n \n+    protected abstract Component getValueComponent(final String key, final T bean);\n+\n     /**\n      * ListViewPanel builder.\n      *\n      * @param <T> list item reference type.\n      */\n-    public static final class Builder<T extends Serializable> extends WizardMgtPanel.Builder<T> {\n+    public static class Builder<T extends Serializable> extends WizardMgtPanel.Builder<T> {\n \n         private static final long serialVersionUID = 1L;\n \n+        private IModel<? extends Collection<T>> model = new Model<>();\n+\n         private final List<String> includes = new ArrayList<>();\n \n         private final ActionLinksPanel.Builder<T> actions;\n \n         private List<T> items;\n \n-        private Builder(final Class<T> reference, final PageReference pageRef) {\n+        private CheckAvailability check = CheckAvailability.NONE;\n+\n+        private boolean reuseItem = true;\n+\n+        public Builder(final Class<T> reference, final PageReference pageRef) {\n             super(reference, pageRef);\n             this.items = null;\n             this.actions = ActionLinksPanel.<T>builder(pageRef);\n         }\n \n+        public Builder<T> setModel(final IModel<? extends Collection<T>> model) {\n+            this.model = model;\n+            return this;\n+        }\n+\n         /**\n          * Sets list of items.\n          *\n@@ -207,6 +273,15 @@ public Builder<T> addItem(final T item) {\n             return this;\n         }\n \n+        public Builder<T> withChecks(final CheckAvailability check) {\n+            this.check = check;\n+            return this;\n+        }\n+\n+        public void setReuseItem(final boolean reuseItem) {\n+            this.reuseItem = reuseItem;\n+        }\n+\n         /**\n          * Gives fields to be shown. It could be used to give an order as well.\n          *\n@@ -236,9 +311,43 @@ public Builder<T> addAction(\n             return this;\n         }\n \n+        /**\n+         * Overridable method to generate field value rendering component.\n+         *\n+         * @param key field key.\n+         * @param bean source bean.\n+         * @return field rendering component.\n+         */\n+        protected Component getValueComponent(final String key, final T bean) {\n+            LOG.debug(\"Processing field {}\", key);\n+\n+            Object value;\n+            try {\n+                value = PropertyResolver.getPropertyGetter(key, bean).invoke(bean);\n+            } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n+                LOG.error(\"Error retrieving value for field {}\", key, e);\n+                value = StringUtils.EMPTY;\n+            }\n+\n+            LOG.debug(\"Field value {}\", value);\n+\n+            return value == null\n+                    ? new Label(\"field\", StringUtils.EMPTY)\n+                    : new Label(\"field\", new ResourceModel(value.toString(), value.toString()));\n+        }\n+\n         @Override\n         protected WizardMgtPanel<T> newInstance(final String id) {\n-            return new ListViewPanel<T>(id, items, reference, includes, actions, pageRef);\n+            return new ListViewPanel<T>(id, items, reference, includes, actions, check, reuseItem, model, pageRef) {\n+\n+                private static final long serialVersionUID = 1L;\n+\n+                @Override\n+                protected Component getValueComponent(final String key, final T bean) {\n+                    return Builder.this.getValueComponent(key, bean);\n+                }\n+\n+            };\n         }\n     }\n \n@@ -249,7 +358,7 @@ public void onEvent(final IEvent<?> event) {\n \n             final T item = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getItem();\n             final AjaxRequestTarget target = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getTarget();\n-\n+            \n             if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n                 if (item != null && !this.listOfItems.contains(item)) {\n                     this.listOfItems.add(item);"},{"sha":"401f90fc5d2f74a9582ed4b483ff4f7d89957827","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -88,7 +88,7 @@ public Panel getPanel(final String panelId) {\n         //--------------------------------\n         // Resource provision panels\n         //--------------------------------\n-        final ListViewPanel.Builder<ProvisionTO> builder = ListViewPanel.builder(ProvisionTO.class, pageRef);\n+        final ListViewPanel.Builder<ProvisionTO> builder = new ListViewPanel.Builder<>(ProvisionTO.class, pageRef);\n         builder.setItems(model.getObject().getProvisions());\n         builder.includes(\"anyType\", \"objectClass\");\n "},{"sha":"1fd3289e1206edfe218a0d598acaf626db612ea0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -28,7 +28,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.pages.StatusModalPage;\n+import org.apache.syncope.client.console.pages.StatusModal;\n import org.apache.syncope.client.console.pages.UserDisplayAttributesModalPage;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n@@ -130,8 +130,8 @@ public void onClick(final AjaxRequestTarget target, final UserTO anyTO) {\n                         final IModel<UserTO> model = new CompoundPropertyModel<>(anyTO);\n                         modal.setFormModel(model);\n \n-                        target.add(modal.setContent(\n-                                new StatusModalPage<>(modal, page.getPageReference(), model.getObject())));\n+                        target.add(modal.\n+                                setContent(new StatusModal<>(modal, page.getPageReference(), model.getObject())));\n \n                         modal.header(new Model<>(MessageFormat.format(getString(\"any.edit\"), anyTO.getKey())));\n                         modal.show(true);\n@@ -145,8 +145,8 @@ public void onClick(final AjaxRequestTarget target, final UserTO anyTO) {\n                         final IModel<UserTO> model = new CompoundPropertyModel<>(anyTO);\n                         modal.setFormModel(model);\n \n-                        target.add(modal.setContent(\n-                                new StatusModalPage<>(modal, page.getPageReference(), model.getObject(), true)));\n+                        target.add(modal.setContent(new StatusModal<>(modal, page.getPageReference(), model.getObject(),\n+                                true)));\n \n                         modal.header(new Model<>(MessageFormat.format(getString(\"any.edit\"), anyTO.getKey())));\n                         modal.show(true);\n@@ -156,9 +156,9 @@ public void onClick(final AjaxRequestTarget target, final UserTO anyTO) {\n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n-                    public void onClick(final AjaxRequestTarget target, final UserTO anyTO) {\n-                        send(UserSearchResultPanel.this, Broadcast.BREADTH,\n-                                new AjaxWizard.NewItemActionEvent<AnyTO>(model.getObject(), target));\n+                    public void onClick(final AjaxRequestTarget target, final UserTO modelObject) {\n+                        send(UserSearchResultPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<AnyTO>(model.getObject(), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, entitlement).add(new ActionLink<UserTO>() {\n "},{"sha":"b477544c8d725230701974a903f19979e585f951","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -39,7 +39,7 @@\n \n     private static final long serialVersionUID = 1962529678091410544L;\n \n-    public abstract int count(String realm);\n+    public abstract int count(String realm, String type);\n \n     public abstract List<T> list(String realm, int page, int size, final SortParam<String> sort, final String type);\n "},{"sha":"b5d0fcceb09ce65d2cc2032dec0f1d4c6bb2ac86","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -48,9 +48,9 @@ public class AnyObjectRestClient extends AbstractAnyRestClient<AnyObjectTO> {\n     }\n \n     @Override\n-    public int count(final String realm) {\n-        return getService(AnyObjectService.class).list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(1).size(\n-                1).build()).getTotalCount();\n+    public int count(final String type, final String realm) {\n+        return getService(AnyObjectService.class).list(\n+                type, SyncopeClient.getAnyListQueryBuilder().realm(realm).page(1).size(1).build()).getTotalCount();\n     }\n \n     @Override"},{"sha":"fc060e43060256454958f20c809039210a7fe658","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -50,7 +50,7 @@ public class GroupRestClient extends AbstractAnyRestClient<GroupTO> {\n     }\n \n     @Override\n-    public int count(final String realm) {\n+    public int count(final String realm, final String type) {\n         return getService(GroupService.class).\n                 list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(1).size(1).build()).\n                 getTotalCount();"},{"sha":"8fb4a6e020fa9f65da7f53553c5e2e3d77d6ef7d","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -54,7 +54,7 @@ public class UserRestClient extends AbstractAnyRestClient<UserTO> {\n     }\n \n     @Override\n-    public int count(final String realm) {\n+    public int count(final String realm, final String type) {\n         return getService(UserService.class).\n                 list(SyncopeClient.getAnyListQueryBuilder().realm(realm).page(1).size(1).build()).\n                 getTotalCount();"},{"sha":"81aafcfb1480402311d0cd77d1f1a9cc035b7642","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/ClearIndicatingAjaxLink.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FClearIndicatingAjaxLink.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.console.wicket.ajax.markup.html;\n \n-import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.commons.NotificationAwareComponent;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -54,9 +54,9 @@ public ClearIndicatingAjaxLink<T> feedbackPanelAutomaticReload(final boolean rel\n \n     @Override\n     public final void onClick(final AjaxRequestTarget target) {\n-        Page page = pageRef.getPage();\n-        if (reloadFeedbackPanel && page instanceof BasePage) {\n-            target.add(((BasePage) page).getFeedbackPanel());\n+        final Page page = pageRef.getPage();\n+        if (reloadFeedbackPanel && page instanceof NotificationAwareComponent) {\n+            ((NotificationAwareComponent) page).getFeedbackPanel().refresh(target);\n         }\n         onClickInternal(target);\n     }"},{"sha":"ff5bc7a480df516d6961297a4d38c13dd141973e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -26,6 +26,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.NotificationAwareComponent;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.panels.ModalPanel;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n@@ -46,7 +47,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class BaseModal<T extends Serializable> extends Modal<T> {\n+public class BaseModal<T extends Serializable> extends Modal<T> implements NotificationAwareComponent {\n \n     private static final long serialVersionUID = -6142277554912316095L;\n \n@@ -107,6 +108,7 @@ public BaseModal(final String id) {\n \n     }\n \n+    @Override\n     public NotificationPanel getFeedbackPanel() {\n         return feedbackPanel;\n     }"},{"sha":"6508ab3cbcb03749ca987d81d2b15b535615e797","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -29,6 +29,8 @@\n \n     private T modelObject;\n \n+    private boolean enabled = true;\n+\n     public ActionLink() {\n     }\n \n@@ -99,4 +101,17 @@ public ActionLink<T> feedbackPanelAutomaticReload(final boolean reloadFeedbackPa\n         this.reloadFeedbackPanel = reloadFeedbackPanel;\n         return this;\n     }\n+\n+    protected boolean statusCondition(final T modelObject) {\n+        return true;\n+    }\n+\n+    public final ActionLink<T> disable() {\n+        this.enabled = false;\n+        return this;\n+    }\n+\n+    public final boolean isEnabled(final T modelObject) {\n+        return this.enabled && statusCondition(modelObject);\n+    }\n }"},{"sha":"868c98694605fde0b7d92d9a25109f8ed1539cc6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":81,"deletions":50,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -115,7 +115,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case MANAGE_RESOURCES:\n@@ -134,7 +135,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case MANAGE_USERS:\n@@ -153,7 +155,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case MANAGE_GROUPS:\n@@ -172,7 +175,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case MAPPING:\n@@ -191,7 +195,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case ACCOUNT_LINK:\n@@ -210,7 +215,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case RESET_TIME:\n@@ -229,7 +235,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case CLONE:\n@@ -248,7 +255,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case CREATE:\n@@ -267,7 +275,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case RESET:\n@@ -286,7 +295,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                });\n+                }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case EDIT:\n@@ -305,7 +314,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case USER_TEMPLATE:\n@@ -324,7 +334,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case GROUP_TEMPLATE:\n@@ -343,7 +354,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case ENABLE:\n@@ -362,7 +374,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case SEARCH:\n@@ -381,7 +394,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case EXECUTE:\n@@ -400,7 +414,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case DRYRUN:\n@@ -419,7 +434,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case DELETE:\n@@ -438,7 +454,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n \n                 break;\n \n@@ -458,7 +475,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n \n                 break;\n \n@@ -478,7 +496,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case SUSPEND:\n@@ -497,7 +516,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case REACTIVATE:\n@@ -516,7 +536,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case RELOAD:\n@@ -535,7 +556,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case CHANGE_VIEW:\n@@ -554,7 +576,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case UNLINK:\n@@ -573,7 +596,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case LINK:\n@@ -592,7 +616,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case UNASSIGN:\n@@ -601,18 +626,19 @@ public String getAjaxIndicatorMarkupId() {\n                 fragment.addOrReplace(\n                         new IndicatingOnConfirmAjaxLink<Void>(\"unassignLink\", pageRef, \"confirmUnassign\") {\n \n-                    private static final long serialVersionUID = -6957616042924610294L;\n+                            private static final long serialVersionUID = -6957616042924610294L;\n \n-                    @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n+                            @Override\n+                            protected void onClickInternal(final AjaxRequestTarget target) {\n+                                link.onClick(target, model.getObject());\n+                            }\n \n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                            @Override\n+                            public String getAjaxIndicatorMarkupId() {\n+                                return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                            }\n+                        }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case ASSIGN:\n@@ -631,7 +657,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case DEPROVISION:\n@@ -640,18 +667,19 @@ public String getAjaxIndicatorMarkupId() {\n                 fragment.addOrReplace(\n                         new IndicatingOnConfirmAjaxLink<Void>(\"deprovisionLink\", pageRef, \"confirmDeprovision\") {\n \n-                    private static final long serialVersionUID = -6957616042924610295L;\n+                            private static final long serialVersionUID = -6957616042924610295L;\n \n-                    @Override\n-                    protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n+                            @Override\n+                            protected void onClickInternal(final AjaxRequestTarget target) {\n+                                link.onClick(target, model.getObject());\n+                            }\n \n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                            @Override\n+                            public String getAjaxIndicatorMarkupId() {\n+                                return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                            }\n+                        }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case PROVISION:\n@@ -670,7 +698,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n             case ZOOM_IN:\n                 fragment = new Fragment(\"panelZoomIn\", \"fragmentZoomIn\", this);\n@@ -688,7 +717,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n             case ZOOM_OUT:\n                 fragment = new Fragment(\"panelZoomOut\", \"fragmentZoomOut\", this);\n@@ -706,7 +736,8 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     public String getAjaxIndicatorMarkupId() {\n                         return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n                     }\n-                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()).\n+                        setVisible(link.isEnabled(model.getObject())));\n                 break;\n             default:\n             // do nothing"},{"sha":"d9b76d6079e9bdb8d0e37312a8d6c2b1f2523faf","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"modified","additions":40,"deletions":2,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -96,7 +96,7 @@ public final void onCancel() {\n         final AjaxRequestTarget target = RequestCycle.get().find(AjaxRequestTarget.class);\n         try {\n             onCancelInternal();\n-            send(pageRef.getPage(), Broadcast.DEPTH, new NewItemCancelEvent<T>(item, target));\n+            send(AjaxWizard.this, Broadcast.BUBBLE, new NewItemCancelEvent<T>(item, target));\n         } catch (Exception e) {\n             LOG.warn(\"Wizard error on cancel\", e);\n             error(getString(\"wizard.cancel.error\"));\n@@ -112,7 +112,7 @@ public final void onFinish() {\n         final AjaxRequestTarget target = RequestCycle.get().find(AjaxRequestTarget.class);\n         try {\n             onApplyInternal();\n-            send(pageRef.getPage(), Broadcast.DEPTH, new NewItemFinishEvent<T>(item, target));\n+            send(AjaxWizard.this, Broadcast.BUBBLE, new NewItemFinishEvent<T>(item, target));\n         } catch (Exception e) {\n             LOG.warn(\"Wizard error on finish\", e);\n             error(getString(\"wizard.apply.error\"));\n@@ -153,10 +153,14 @@ public T getItem() {\n         public AjaxRequestTarget getTarget() {\n             return target;\n         }\n+\n+        public abstract String getEventDescription();\n     }\n \n     public static class NewItemActionEvent<T> extends NewItemEvent<T> {\n \n+        private static final String EVENT_DESCRIPTION = \"new\";\n+\n         private int index = 0;\n \n         public NewItemActionEvent(final T item, final AjaxRequestTarget target) {\n@@ -172,22 +176,56 @@ public int getIndex() {\n             return index;\n         }\n \n+        @Override\n+        public String getEventDescription() {\n+            return NewItemActionEvent.EVENT_DESCRIPTION;\n+        }\n+    }\n+\n+    public static class EditItemActionEvent<T> extends NewItemActionEvent<T> {\n+\n+        private static final String EVENT_DESCRIPTION = \"edit\";\n+\n+        public EditItemActionEvent(final T item, final AjaxRequestTarget target) {\n+            super(item, target);\n+        }\n+\n+        public EditItemActionEvent(final T item, final int index, final AjaxRequestTarget target) {\n+            super(item, index, target);\n+        }\n+\n+        @Override\n+        public String getEventDescription() {\n+            return EditItemActionEvent.EVENT_DESCRIPTION;\n+        }\n     }\n \n     public static class NewItemCancelEvent<T> extends NewItemEvent<T> {\n \n+        private static final String EVENT_DESCRIPTION = \"cancel\";\n+\n         public NewItemCancelEvent(final T item, final AjaxRequestTarget target) {\n             super(item, target);\n         }\n \n+        @Override\n+        public String getEventDescription() {\n+            return NewItemCancelEvent.EVENT_DESCRIPTION;\n+        }\n     }\n \n     public static class NewItemFinishEvent<T> extends NewItemEvent<T> {\n \n+        private static final String EVENT_DESCRIPTION = \"cancel\";\n+\n         public NewItemFinishEvent(final T item, final AjaxRequestTarget target) {\n             super(item, target);\n         }\n \n+        @Override\n+        public String getEventDescription() {\n+            return NewItemFinishEvent.EVENT_DESCRIPTION;\n+        }\n     }\n \n     @Override"},{"sha":"0205e7f37533a7e85851e62d9478d47a26c4100f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardBuilder.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -26,9 +26,9 @@\n \n     private final String id;\n \n-    private final PageReference pageRef;\n+    protected final PageReference pageRef;\n \n-    private T defaultItem;\n+    private final T defaultItem;\n \n     private T item;\n \n@@ -103,4 +103,8 @@ public AjaxWizardBuilder<T> setItem(final T item) {\n         this.item = item;\n         return this;\n     }\n+\n+    public PageReference getPageReference() {\n+        return pageRef;\n+    }\n }"},{"sha":"78ff7a9b782c94dd27603c64b89314088063b547","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":12,"deletions":7,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -34,7 +34,8 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.StringResourceModel;\n \n public abstract class WizardMgtPanel<T extends Serializable> extends Panel implements IEventSource {\n \n@@ -94,7 +95,7 @@ public WizardMgtPanel(final String id, final PageReference pageRef, final boolea\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                send(WizardMgtPanel.this, Broadcast.BREADTH, new AjaxWizard.NewItemActionEvent<T>(null, target));\n+                send(WizardMgtPanel.this, Broadcast.EXACT, new AjaxWizard.NewItemActionEvent<T>(null, target));\n             }\n         };\n \n@@ -107,23 +108,27 @@ public void onClick(final AjaxRequestTarget target) {\n     @SuppressWarnings(\"unchecked\")\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n-            final AjaxRequestTarget target = AjaxWizard.NewItemEvent.class.cast(event.getPayload()).getTarget();\n-\n-            final T item = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getItem();\n+            final AjaxWizard.NewItemEvent<T> newItemEvent = AjaxWizard.NewItemEvent.class.cast(event.getPayload());\n+            final AjaxRequestTarget target = newItemEvent.getTarget();\n+            final T item = newItemEvent.getItem();\n \n             if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent) {\n                 newItemPanelBuilder.setItem(item);\n \n                 final AjaxWizard<T> wizard = newItemPanelBuilder.build(\n-                        ((AjaxWizard.NewItemActionEvent<T>) event.getPayload()).getIndex(), item != null);\n+                        ((AjaxWizard.NewItemActionEvent<T>) newItemEvent).getIndex(), item != null);\n \n                 if (wizardInModal) {\n                     final IModel<T> model = new CompoundPropertyModel<>(item);\n                     modal.setFormModel(model);\n \n                     target.add(modal.setContent(wizard));\n \n-                    modal.header(new ResourceModel(\"item.new\", \"New item\"));\n+                    modal.header(new StringResourceModel(\n+                            String.format(\"any.%s\", newItemEvent.getEventDescription()),\n+                            this,\n+                            new Model<T>(wizard.getItem())));\n+\n                     modal.show(true);\n                 } else {\n                     final Fragment fragment = new Fragment(\"content\", \"wizard\", WizardMgtPanel.this);"},{"sha":"a817f170e15f04831ccfef3e5f51e3a4fb945632","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -16,8 +16,10 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.io.Serializable;\n+import java.util.Collections;\n import java.util.List;\n import org.apache.syncope.client.console.commons.Mode;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n import org.apache.syncope.common.lib.AnyOperations;\n@@ -27,6 +29,7 @@\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.model.util.ListModel;\n \n public class AnyWizardBuilder<T extends AnyTO> extends AjaxWizardBuilder<T> implements Serializable {\n \n@@ -52,6 +55,7 @@ public AnyWizardBuilder(\n \n     @Override\n     protected WizardModel buildModelSteps(final T modelObject, final WizardModel wizardModel) {\n+        addOptionalDetailsPanel(modelObject, wizardModel);\n         wizardModel.add(new PlainAttrs(modelObject, null, Mode.ADMIN, anyTypeClasses.toArray(new String[] {})));\n         wizardModel.add(new DerAttrs(modelObject, anyTypeClasses.toArray(new String[] {})));\n         wizardModel.add(new VirAttrs(modelObject, anyTypeClasses.toArray(new String[] {})));\n@@ -82,4 +86,12 @@ protected void onApplyInternal(final T modelObject) {\n             }\n         }\n     }\n+\n+    protected AnyWizardBuilder<T> addOptionalDetailsPanel(final T modelObject, final WizardModel wizardModel) {\n+        if (modelObject.getKey() > 0) {\n+            wizardModel.add(\n+                    new Details(modelObject, new ListModel<>(Collections.<StatusBean>emptyList()), pageRef, true));\n+        }\n+        return this;\n+    }\n }"},{"sha":"a5256136c54fbe6b0528a5d84ac77687fc866881","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.java","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class ConnObjectPanel extends Panel {\n+\n+    private static final long serialVersionUID = -6469290753080058487L;\n+\n+    public ConnObjectPanel(final String id, final ConnObjectTO connObjectTO) {\n+        super(id);\n+\n+        IModel<List<AttrTO>> formProps = new LoadableDetachableModel<List<AttrTO>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<AttrTO> load() {\n+                List<AttrTO> attrs = new ArrayList<>(connObjectTO.getPlainAttrs());\n+                Collections.sort(attrs, new Comparator<AttrTO>() {\n+\n+                    @Override\n+                    public int compare(final AttrTO attr1, final AttrTO attr2) {\n+                        if (attr1 == null || attr1.getSchema() == null) {\n+                            return -1;\n+                        }\n+                        if (attr2 == null || attr2.getSchema() == null) {\n+                            return 1;\n+                        }\n+                        return attr1.getSchema().compareTo(attr2.getSchema());\n+                    }\n+                });\n+\n+                return attrs;\n+            }\n+        };\n+\n+        final ListView<AttrTO> propView = new ListView<AttrTO>(\"propView\", formProps) {\n+\n+            private static final long serialVersionUID = 3109256773218160485L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<AttrTO> item) {\n+                final AttrTO prop = item.getModelObject();\n+\n+                Label label = new Label(\"key\", prop.getSchema());\n+                item.add(label);\n+\n+                Panel field;\n+                if (prop.getValues().isEmpty()) {\n+                    field = new AjaxTextFieldPanel(\"attribute\", prop.getSchema(), new Model<String>());\n+                } else if (prop.getValues().size() == 1) {\n+                    field = new AjaxTextFieldPanel(\"attribute\",\n+                            prop.getSchema(), new Model<String>(prop.getValues().get(0)));\n+                } else {\n+                    field = new MultiFieldPanel.Builder<String>(new ListModel<String>(prop.getValues())).build(\n+                            \"attribute\",\n+                            prop.getSchema(),\n+                            new AjaxTextFieldPanel(\"panel\", prop.getSchema(), new Model<String>()));\n+                }\n+                item.add(field);\n+            }\n+        };\n+        add(propView);\n+    }\n+}"},{"sha":"2ea9476328feec43e81f6f9acd553d1d52ead435","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Details.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.model.IModel;\n+\n+public class Details extends WizardStep {\n+\n+    private static final long serialVersionUID = 6592027822510220463L;\n+\n+    protected final PageReference pageRef;\n+\n+    protected final StatusPanel statusPanel;\n+\n+    public <T extends AnyTO> Details(\n+            final T anyTO,\n+            final IModel<List<StatusBean>> statusModel,\n+            final PageReference pageRef,\n+            final boolean includeStatusPanel) {\n+        this.pageRef = pageRef;\n+\n+        statusPanel = new StatusPanel(\"status\", anyTO, statusModel, pageRef);\n+        add(statusPanel.setEnabled(includeStatusPanel).setVisible(includeStatusPanel).setRenderBodyOnly(true));\n+    }\n+}"},{"sha":"0cffa2542fcd6b18cb3f971d98b82f986ae2d373","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupDetails.java","status":"modified","additions":12,"deletions":3,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -18,27 +18,29 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.util.List;\n import org.apache.syncope.client.console.commons.JexlHelpUtils;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class GroupDetails extends WizardStep {\n+public class GroupDetails extends Details {\n \n     private static final long serialVersionUID = 855618618337931784L;\n \n@@ -57,7 +59,14 @@ public class GroupDetails extends WizardStep {\n \n     private final OwnerModel groupOwnerModel;\n \n-    public GroupDetails(final GroupTO groupTO, final boolean templateMode) {\n+    public GroupDetails(\n+            final GroupTO groupTO,\n+            final IModel<List<StatusBean>> statusModel,\n+            final boolean templateMode,\n+            final PageReference pageRef,\n+            final boolean includeStatusPanel) {\n+        super(groupTO, statusModel, pageRef, includeStatusPanel);\n+\n         ownerContainer = new WebMarkupContainer(\"ownerContainer\");\n         ownerContainer.setOutputMarkupId(true);\n         this.add(ownerContainer);"},{"sha":"ee5e3cb4a88104177f6b2ad0e0ccb64997b7416d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -15,14 +15,17 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.util.Collections;\n import java.util.List;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.model.util.ListModel;\n \n public class GroupWizardBuilder extends AnyWizardBuilder<GroupTO> {\n \n@@ -43,12 +46,6 @@ public GroupWizardBuilder(\n         super(id, groupTO, anyTypeClasses, pageRef);\n     }\n \n-    @Override\n-    protected WizardModel buildModelSteps(final GroupTO modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new GroupDetails(modelObject, false));\n-        return super.buildModelSteps(modelObject, wizardModel);\n-    }\n-\n     @Override\n     protected void onApplyInternal(final GroupTO modelObject) {\n         final ProvisioningResult<GroupTO> actual;\n@@ -64,4 +61,11 @@ protected void onApplyInternal(final GroupTO modelObject) {\n             }\n         }\n     }\n+\n+    @Override\n+    protected GroupWizardBuilder addOptionalDetailsPanel(final GroupTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new GroupDetails(modelObject,\n+                new ListModel<>(Collections.<StatusBean>emptyList()), false, pageRef, modelObject.getKey() > 0));\n+        return this;\n+    }\n }"},{"sha":"b6a788a08a35fdef0ab5f4b833edaae0eb4e7ed2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PasswordPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPasswordPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPasswordPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPasswordPanel.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -38,9 +38,9 @@ public class PasswordPanel extends Panel {\n     public PasswordPanel(\n             final String id, final UserTO userTO, final boolean resetPassword, final boolean templateMode) {\n         super(id);\n-        \n+\n         setOutputMarkupId(true);\n-        \n+\n         final Form<?> form = new Form<>(\"passwordInnerForm\");\n         add(form);\n "},{"sha":"2ab5c6f4a55b20b424ad8cfd661e678c33dcb1b6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -69,8 +69,8 @@ public class PlainAttrs extends WizardStep {\n \n     private final String[] anyTypeClass;\n \n-    public <T extends AnyTO> PlainAttrs(final T entityTO, final Form<?> form, final Mode mode,\n-            final String... anyTypeClass) {\n+    public <T extends AnyTO> PlainAttrs(\n+            final T entityTO, final Form<?> form, final Mode mode, final String... anyTypeClass) {\n         this.setOutputMarkupId(true);\n \n         this.entityTO = entityTO;"},{"sha":"2b031464d1405fc6df53c6f273b1b08c330d9ab8","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"added","additions":220,"deletions":0,"changes":220,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -0,0 +1,220 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.any;\n+\n+import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n+import org.apache.syncope.client.console.commons.status.Status;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.commons.status.StatusUtils;\n+import org.apache.syncope.client.console.panels.ListViewPanel;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.IHeaderContributor;\n+import org.apache.wicket.markup.html.TransparentWebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class StatusPanel extends Panel implements IHeaderContributor {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(StatusPanel.class);\n+\n+    private static final long serialVersionUID = -4064294905566247728L;\n+\n+    private UserRestClient userRestClient = new UserRestClient();\n+\n+    private GroupRestClient groupRestClient = new GroupRestClient();\n+\n+    private final List<ConnObjectWrapper> connObjects;\n+\n+    private final Map<String, StatusBean> initialStatusBeanMap;\n+\n+    private final StatusUtils statusUtils;\n+\n+    private final ListViewPanel<?> listViewPanel;\n+\n+    private final TransparentWebMarkupContainer container;\n+\n+    private final Fragment resourceListFragment;\n+\n+    public <T extends AnyTO> StatusPanel(\n+            final String id,\n+            final T any,\n+            final IModel<List<StatusBean>> model,\n+            final PageReference pageRef) {\n+\n+        super(id);\n+\n+        container = new TransparentWebMarkupContainer(\"container\");\n+        container.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true);\n+        add(container);\n+\n+        resourceListFragment = new Fragment(\"content\", \"resources\", this);\n+        container.addOrReplace(resourceListFragment);\n+\n+        statusUtils = new StatusUtils(any instanceof GroupTO ? groupRestClient : userRestClient);\n+\n+        connObjects = statusUtils.getConnectorObjects(any);\n+\n+        final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size() + 1);\n+        initialStatusBeanMap = new LinkedHashMap<>(connObjects.size() + 1);\n+\n+        final StatusBean syncope = new StatusBean(any, \"syncope\");\n+\n+        if (any instanceof UserTO) {\n+            syncope.setConnObjectLink(((UserTO) any).getUsername());\n+\n+            Status syncopeStatus = Status.UNDEFINED;\n+            if (((UserTO) any).getStatus() != null) {\n+                try {\n+                    syncopeStatus = Status.valueOf(((UserTO) any).getStatus().toUpperCase());\n+                } catch (IllegalArgumentException e) {\n+                    LOG.warn(\"Unexpected status found: {}\", ((UserTO) any).getStatus(), e);\n+                }\n+            }\n+            syncope.setStatus(syncopeStatus);\n+        } else if (any instanceof GroupTO) {\n+            syncope.setConnObjectLink(((GroupTO) any).getDisplayName());\n+            syncope.setStatus(Status.ACTIVE);\n+        }\n+\n+        statusBeans.add(syncope);\n+        initialStatusBeanMap.put(syncope.getResourceName(), syncope);\n+\n+        for (ConnObjectWrapper entry : connObjects) {\n+            final StatusBean statusBean = statusUtils.getStatusBean(entry.getAny(),\n+                    entry.getResourceName(),\n+                    entry.getConnObjectTO(),\n+                    any instanceof GroupTO);\n+\n+            initialStatusBeanMap.put(entry.getResourceName(), statusBean);\n+            statusBeans.add(statusBean);\n+        }\n+\n+        ListViewPanel.Builder<StatusBean> builder = new ListViewPanel.Builder<StatusBean>(StatusBean.class, pageRef) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected Component getValueComponent(final String key, final StatusBean bean) {\n+                if (\"status\".equalsIgnoreCase(key)) {\n+                    return new Label(\"field\", StringUtils.EMPTY) {\n+\n+                        private static final long serialVersionUID = 1L;\n+\n+                        @Override\n+                        protected void onComponentTag(final ComponentTag tag) {\n+                            super.onComponentTag(tag);\n+                            if (bean.getStatus() == Status.OBJECT_NOT_FOUND) {\n+                                tag.put(\"class\", \"glyphicon glyphicon-remove-circle\");\n+                            } else if (bean.getStatus() == Status.UNDEFINED\n+                                    || bean.getStatus() == Status.CREATED\n+                                    || bean.getStatus() == Status.NOT_YET_SUBMITTED) {\n+                                tag.put(\"class\", \"glyphicon glyphicon-question-sign\");\n+                            } else if (bean.getStatus() == Status.SUSPENDED) {\n+                                tag.put(\"class\", \"glyphicon glyphicon-ban-circle\");\n+                            } else if (bean.getStatus() == Status.ACTIVE) {\n+                                tag.put(\"class\", \"glyphicon glyphicon-ok-circle\");\n+                            }\n+\n+                            tag.put(\"alt\", \"status icon\");\n+                            tag.put(\"title\", bean.getStatus().toString());\n+                        }\n+                    };\n+                } else {\n+                    return super.getValueComponent(key, bean);\n+                }\n+            }\n+        };\n+\n+        builder.setModel(model);\n+        builder.setItems(statusBeans);\n+        builder.includes(\"resourceName\", \"connObjectLink\", \"status\");\n+        builder.withChecks(ListViewPanel.CheckAvailability.DISABLED);\n+        builder.setReuseItem(false);\n+\n+        builder.addAction(new ActionLink<StatusBean>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            protected boolean statusCondition(final StatusBean bean) {\n+                return statusUtils.getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects) != null;\n+            }\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n+                final Fragment remoteObjectFragment = new Fragment(\"content\", \"remoteObject\", StatusPanel.this);\n+                container.addOrReplace(remoteObjectFragment);\n+\n+                remoteObjectFragment.add(new AjaxLink<StatusBean>(\"back\") {\n+\n+                    private static final long serialVersionUID = 1L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        container.addOrReplace(resourceListFragment);\n+                        target.add(container);\n+                    }\n+                });\n+\n+                remoteObjectFragment.add(\n+                        new Label(\"resource\", new ResourceModel(bean.getResourceName(), bean.getResourceName())));\n+\n+                remoteObjectFragment.add(new ConnObjectPanel(\"remoteObject\",\n+                        statusUtils.getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects)));\n+\n+                target.add(container);\n+            }\n+        }, ActionLink.ActionType.SEARCH, StandardEntitlement.RESOURCE_GET_CONNOBJECT);\n+\n+        listViewPanel = ListViewPanel.class.cast(builder.build(\"resources\"));\n+        resourceListFragment.add(listViewPanel);\n+    }\n+\n+    public void setCheckAvailability(final ListViewPanel.CheckAvailability check) {\n+        listViewPanel.setCheckAvailability(check);\n+    }\n+\n+    public Map<String, StatusBean> getInitialStatusBeanMap() {\n+        return initialStatusBeanMap;\n+    }\n+}"},{"sha":"4e4b287a00311cc7b61a81884d2200f3d3375558","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserDetails.java","status":"modified","additions":35,"deletions":13,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -20,31 +20,41 @@\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.Collapsible;\n import java.util.Collections;\n-import org.apache.syncope.client.console.commons.Constants;\n+import java.util.List;\n import org.apache.syncope.client.console.commons.JexlHelpUtils;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.panels.ListViewPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.Component;\n-import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n-import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n \n-public class UserDetails extends WizardStep {\n+public class UserDetails extends Details {\n \n     private static final long serialVersionUID = 6592027822510220463L;\n \n-    private static final String PASSWORD_CONTENT_PATH = \"tabs:0:body:content\";\n+    private static final String PASSWORD_CONTENT_PATH = \"body:content\";\n \n-    public UserDetails(final UserTO userTO, final boolean resetPassword, final boolean templateMode) {\n+    public UserDetails(\n+            final UserTO userTO,\n+            final IModel<List<StatusBean>> statusModel,\n+            final boolean resetPassword,\n+            final boolean templateMode,\n+            final PageReference pageRef,\n+            final boolean includeStatusPanel) {\n+        super(userTO, statusModel, pageRef, includeStatusPanel);\n         // ------------------------\n         // Username\n         // ------------------------\n@@ -87,24 +97,36 @@ public Panel getPanel(final String panelId) {\n \n             @Override\n             protected Component newTitle(final String markupId, final ITab tab, final Collapsible.State state) {\n-                return super.newTitle(markupId, tab, state).add(new AjaxEventBehavior(Constants.ON_CLICK) {\n+                return new AjaxLink<Integer>(markupId) {\n \n                     private static final long serialVersionUID = 1L;\n \n                     @Override\n-                    protected void onEvent(final AjaxRequestTarget target) {\n+                    protected void onComponentTag(final ComponentTag tag) {\n+                        super.onComponentTag(tag);\n+                        tag.put(\"style\", \"color: #337ab7 !important\");\n+                    }\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n                         model.setObject(model.getObject() == 0 ? -1 : 0);\n-                        final Component passwordPanel = get(PASSWORD_CONTENT_PATH);\n-                        passwordPanel.setEnabled(model.getObject() >= 0);\n+\n+                        boolean enable = model.getObject() >= 0;\n+\n+                        final Component passwordPanel = getParent().get(PASSWORD_CONTENT_PATH);\n+                        passwordPanel.setEnabled(enable);\n+                        statusPanel.setCheckAvailability(enable\n+                                ? ListViewPanel.CheckAvailability.AVAILABLE\n+                                : ListViewPanel.CheckAvailability.DISABLED);\n+\n                         target.add(passwordPanel);\n                     }\n-                });\n+                }.setBody(new ResourceModel(\"password.change\", \"Change password ...\"));\n             }\n-\n         };\n \n         collapsible.setOutputMarkupId(true);\n         add(collapsible);\n-        // ------------------------\n+        // ------------------------        \n     }\n }"},{"sha":"9c24dbcddb8ea24b0c4781f18e99887f43b123ef","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":32,"deletions":10,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -15,22 +15,29 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.util.ArrayList;\n import java.util.List;\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.commons.status.StatusUtils;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.util.ListModel;\n \n public class UserWizardBuilder extends AnyWizardBuilder<UserTO> {\n \n     private static final long serialVersionUID = 1L;\n \n     private final UserRestClient userRestClient = new UserRestClient();\n \n+    private final IModel<List<StatusBean>> statusModel;\n+\n     /**\n      * Construct.\n      *\n@@ -42,17 +49,12 @@ public class UserWizardBuilder extends AnyWizardBuilder<UserTO> {\n     public UserWizardBuilder(\n             final String id, final UserTO userTO, final List<String> anyTypeClasses, final PageReference pageRef) {\n         super(id, userTO, anyTypeClasses, pageRef);\n-    }\n-\n-    @Override\n-    protected WizardModel buildModelSteps(final UserTO modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new UserDetails(modelObject, false, false));\n-        return super.buildModelSteps(modelObject, wizardModel);\n+        statusModel = new ListModel<>(new ArrayList<StatusBean>());\n     }\n \n     @Override\n     protected void onApplyInternal(final UserTO modelObject) {\n-        Model<Boolean> storePassword = new Model<>(true);\n+        Model<Boolean> storePassword = Model.of(true);\n \n         final ProvisioningResult<UserTO> actual;\n \n@@ -61,13 +63,33 @@ protected void onApplyInternal(final UserTO modelObject) {\n         } else {\n             final UserPatch patch = AnyOperations.diff(modelObject, getOriginalItem(), true);\n \n-//            if (statusPanel != null) {\n-//                patch.setPwdPropRequest(statusPanel.getStatusMod());\n-//            }\n+            if (!statusModel.getObject().isEmpty()) {\n+                patch.setPassword(StatusUtils.buildPasswordPatch(modelObject.getPassword(), statusModel.getObject()));\n+            }\n+\n             // update user just if it is changed\n             if (!patch.isEmpty()) {\n                 actual = userRestClient.update(getOriginalItem().getETagValue(), patch);\n             }\n         }\n     }\n+\n+    @Override\n+    protected UserWizardBuilder addOptionalDetailsPanel(final UserTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new UserDetails(modelObject, statusModel, false, false, pageRef, modelObject.getKey() > 0));\n+        return this;\n+    }\n+\n+    /**\n+     * Overrides default setItem() in order to clean statusModel as well.\n+     *\n+     * @param item item to be set.\n+     * @return the current wizard.\n+     */\n+    @Override\n+    public UserWizardBuilder setItem(final UserTO item) {\n+        super.setItem(item);\n+        statusModel.getObject().clear();\n+        return this;\n+    }\n }"},{"sha":"05b594515171f175753505e00c9ab4482882a019","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.properties?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -29,6 +29,6 @@ creationDate=Creation Date\n tokenValued=Valued\n tokenNotValued=Not valued\n \n-any.edit=Edit object {0}\n-any.new=New object\n+any.edit=Edit ${type} ${key}\n+any.new=New ${type}\n any.attr.display=Attributes to be displayed"},{"sha":"278ca4d8480a023e8f1bb1275cae6d053bb550fa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_it.properties?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -29,6 +29,6 @@ creationDate=Data Creazione\n tokenValued=Valued\n tokenNotValued=Not valued\n \n-any.edit=Edit object {0}\n-any.new=New object\n+any.edit=Modifica ${type} ${key}\n+any.new=Nuovo ${type}\n any.attr.display=Attributes to be displayed"},{"sha":"5099690bed5c5b71a243fe96aaa5d0d51df2140d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel_pt_BR.properties?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -29,6 +29,6 @@ creationDate=Data de Cria\\u00e7\\u00e3o\n tokenValued=Atribu\\u00eddo\n tokenNotValued=N\\u00e3o Atribu\\u00eddo\n \n-any.edit=Edit object {0}\n-any.new=New object\n+any.edit=Alterar ${type} ${key}\n+any.new=Novo ${type}\n any.attr.display=Attributes to be displayed"},{"sha":"e30cf5066cf6fa20770935f224abfbc74835c27a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ListViewPanel.html","status":"modified","additions":18,"deletions":8,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -33,17 +33,27 @@ <h3 class=\"box-title\">\n             <table class=\"table table-hover\">\n               <tbody>\n                 <tr>\n+                  <th id=\"check\">\n+                    <input type=\"checkbox\" wicket:id=\"groupselector\" />\n+                  </th>\n                   <th wicket:id=\"names\"><span wicket:id=\"name\"/></th>\n                   <th />\n                 </tr>\n-                <tr wicket:id=\"beans\">\n-                  <td wicket:id=\"fields\"><span wicket:id=\"field\"/></td>\n-                  <td>\n-                    <div class=\"listview-actions\">\n-                      <span wicket:id=\"actions\">[actions]</span>\n-                    </div>\n-                  </td>\n-                </tr>\n+\n+                <span wicket:id=\"group\">\n+                  <tr wicket:id=\"beans\">\n+                    <td id=\"check\">\n+                      <input type=\"checkbox\" wicket:id=\"check\"/>\n+                    </td>\n+                    <td wicket:id=\"fields\"><span wicket:id=\"field\"/></td>\n+                    <td>\n+                      <div class=\"listview-actions\">\n+                        <span wicket:id=\"actions\">[actions]</span>\n+                      </div>\n+                    </td>\n+                  </tr>\n+                </span>\n+\n               </tbody></table>\n           </div><!-- /.box-body -->\n         </div><!-- /.box -->"},{"sha":"2830a7940213be52fdaa947258163bc56f87f2f2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -96,7 +96,7 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentSearch\">\n-      <a href=\"#\" wicket:id=\"searchLink\"><img id=\"actionLink\" src=\"img/actions/search.png\" alt=\"search icon\" title=\"Search and modify\"/></a>\n+      <a href=\"#\" wicket:id=\"searchLink\"><i class=\"glyphicon glyphicon-search\" alt=\"search icon\" title=\"Search\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentEnable\">"},{"sha":"9bf9518efcac40b895cb96c2a272d34e423e7871","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/WizardMgtPanel.html","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -34,9 +34,11 @@\n \n         <wicket:child />\n \n-        <div class=\"modal-footer\" style=\"text-align: right\">\n-          <a haref=\"#\"  class=\"btn btn-primary\" wicket:id=\"add\">Add</a>\n-        </div>\n+        <wicket:enclosure child=\"add\">\n+          <div class=\"modal-footer\" style=\"text-align: right\">\n+            <a haref=\"#\"  class=\"btn btn-primary\" wicket:id=\"add\">Add</a>\n+          </div>\n+        </wicket:enclosure>\n       </wicket:fragment>\n \n       <div wicket:id=\"modal\" />"},{"sha":"eed082fa41434cc12d2341c4c306df49d104bc59","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.html","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.html?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -0,0 +1,26 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <wicket:panel>\n+    <div class=\"form-group\" wicket:id=\"propView\">\n+      <span wicket:id=\"attribute\">[ATTIRIBUTE]</span>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"a7714b83857c27cc03c0a297283f2716b6570a64","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Details.html","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.html?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -0,0 +1,27 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <wicket:child/>\n+      <span wicket:id=\"status\">[STATUS]</span>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"f4792ed4b342c915d9e47b5a3ad7caf2502d0588","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/GroupDetails.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.html?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -19,7 +19,7 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <head><title></title></head>\n   <body>\n-    <wicket:panel>\n+    <wicket:extend>\n       <div class=\"form-group\">\n         <span wicket:id=\"name\"/>\n         <a class=\"tooltips\" wicket:id=\"questionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\">\n@@ -51,6 +51,6 @@\n \n       <span wicket:id=\"userOwnerSelectWin\"/>\n       <span wicket:id=\"groupOwnerSelectWin\"/>\n-    </wicket:panel>\n+    </wicket:extend>\n   </body>\n </html>"},{"sha":"9fac01f358e794305265e2a5a5c53837c826faa3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/StatusPanel.html","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.html?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -0,0 +1,46 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <wicket:panel>\n+    <span wicket:id=\"container\">\n+      <wicket:container wicket:id=\"content\" />\n+    </span>\n+\n+    <wicket:fragment wicket:id=\"resources\">\n+      <span wicket:id=\"resources\">[RESOURCES]</span>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"remoteObject\">\n+      <div class=\"col-xs-12\">\n+        <div class=\"box\">\n+          <div class=\"box-header\">\n+            <a wicket:id=\"back\" href=\"#\" alt=\"Back icon\" title=\"Back\"><i class=\"glyphicon glyphicon-arrow-left\"></i></a>\n+            <h3 class=\"box-title\">\n+              <span wicket:id=\"resource\">[RESOURCE]</span>\n+            </h3>\n+          </div>\n+          <div class=\"box-body\">\n+            <span wicket:id=\"remoteObject\">[REMTE_OBJECT]</span>\n+          </div>\n+        </div>\n+      </div>\n+    </wicket:fragment>\n+  </wicket:panel>\n+</html>"},{"sha":"ef1cdf0a7317877fc1978a227d2b68eaf7afabaa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/StatusPanel.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.properties?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resourceName=Resource\n+connObjectLink=Remote ID\n+status=Status"},{"sha":"948b49dc5ea790d411a484109d049ab1afe5549b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/StatusPanel_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel_it.properties?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resourceName=Risorsa\n+connObjectLink=ID Remoto\n+status=Stato"},{"sha":"5202d321e24a12e9ffd2cfac56353102600d7dcc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/StatusPanel_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel_pt_BR.properties?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+resourceName=Recurso\n+connObjectLink=ID Remoto\n+status=Estado"},{"sha":"78247c131ab4fb96e14861c8379d021758193242","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/UserDetails.html","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.html?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -19,7 +19,7 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <head><title></title></head>\n   <body>\n-    <wicket:panel>\n+    <wicket:extend>\n       <div class=\"form-group\">\n         <span wicket:id=\"username\"/>\n         <a class=\"tooltips\" wicket:id=\"usernameQuestionMarkJexlHelp\" href=\"#\" alt=\"Click to help\" title=\"Click to help\">\n@@ -36,7 +36,6 @@\n       </div>\n \n       <div wicket:id=\"collapsePanel\"></div>\n-\n-    </wicket:panel>\n+    </wicket:extend>\n   </body>\n </html>"},{"sha":"f4ff161ce690e3eb597333f03e91b91ed834961e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/UserDetails.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.properties?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -17,3 +17,4 @@\n username=Username\n password=Password\n confirmPassword=Password (confirm)\n+password.change=Password management ..."},{"sha":"743b35d0aa054e64cdec1ae4bf0a916c64d0e9a2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/UserDetails_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_it.properties?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -17,3 +17,4 @@\n username=Username\n password=Password\n confirmPassword=Password (conferma)\n+password.change=Gestisci password ..."},{"sha":"9d4efad99fe45369470a6b4e1ba2450985cc5ed8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/UserDetails_pt_BR.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e034afcd5e7da01d56d9222d85f14d3b15cb4c6a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails_pt_BR.properties?ref=e034afcd5e7da01d56d9222d85f14d3b15cb4c6a","patch":"@@ -14,6 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-username=Nome do Usu\\u00E1rio\n+username=Nome do Usu\\u00e1rio\n password=Senha\n confirmPassword=Senha (confirmar)\n+password.change=Gest\\u00e3o password ..."}]}