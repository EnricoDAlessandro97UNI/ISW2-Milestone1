{"sha":"ba7f1a5ce9f852e9783853b7397a64a66ac4826c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJhN2YxYTVjZTlmODUyZTk3ODM4NTNiNzM5N2E2NGE2NmFjNDgyNmM=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-08-12T13:55:08Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-08-12T13:55:08Z"},"message":"[SYNCOPE-156] providing ListView table view  + Provision wizard functionalities","tree":{"sha":"63b81a7c99b7c6a00bfe69e0cbad39aa52f158c4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/63b81a7c99b7c6a00bfe69e0cbad39aa52f158c4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ba7f1a5ce9f852e9783853b7397a64a66ac4826c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ba7f1a5ce9f852e9783853b7397a64a66ac4826c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ba7f1a5ce9f852e9783853b7397a64a66ac4826c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"6ad532ae682d355b5574f8325375ebf3fe939689","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6ad532ae682d355b5574f8325375ebf3fe939689","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6ad532ae682d355b5574f8325375ebf3fe939689"}],"stats":{"total":2849,"additions":2350,"deletions":499},"files":[{"sha":"61726395d8e2a8e2852fe5665a84408d0ac9fd36","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BulkActionModalPage.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBulkActionModalPage.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import java.io.Serializable;\n import java.lang.reflect.InvocationTargetException;\n import java.util.ArrayList;\n import java.util.Collection;\n@@ -39,7 +40,6 @@\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.beans.BeanUtils;\n \n@@ -85,7 +85,8 @@ public IModel<T> model(final T object) {\n                 Integer.MAX_VALUE).setVisible(items != null && !items.isEmpty()));\n \n         @SuppressWarnings(\"rawtypes\")\n-        final ActionLinksPanel actionPanel = new ActionLinksPanel(\"actions\", new Model(), getPageReference());\n+        final ActionLinksPanel<Serializable> actionPanel\n+                = ActionLinksPanel.builder(getPageReference()).build(\"actions\");\n         add(actionPanel);\n \n         for (ActionLink.ActionType action : actions) {\n@@ -118,12 +119,12 @@ public IModel<T> model(final T object) {\n                     LOG.error(\"Bulk action type not supported\");\n             }\n \n-            actionPanel.add(new ActionLink() {\n+            actionPanel.add(new ActionLink<Serializable>() {\n \n                 private static final long serialVersionUID = -3722207913631435501L;\n \n                 @Override\n-                public void onClick(final AjaxRequestTarget target) {\n+                public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                     try {\n                         final BulkActionResult res = (BulkActionResult) bulkActionExecutor.getClass().\n                                 getMethod(\"bulkAction\", BulkAction.class).invoke(bulkActionExecutor, bulkAction);"},{"sha":"32a492160c126024777c4228afb40cfdb815577e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ProvisioningModalPage.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FProvisioningModalPage.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.LinkedHashMap;\n@@ -129,12 +130,12 @@ public void populateItem(\n \n         final String pageId = \"Resources\";\n \n-        table.addAction(new ActionLink() {\n+        table.addAction(new ActionLink<Serializable>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 try {\n                     bulkAssociationAction(target, ResourceDeassociationActionType.UNLINK, table, columns);\n                 } catch (Exception e) {\n@@ -145,12 +146,12 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         }, ActionLink.ActionType.UNLINK, pageId);\n \n-        table.addAction(new ActionLink() {\n+        table.addAction(new ActionLink<Serializable>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 try {\n                     bulkAssociationAction(target, ResourceDeassociationActionType.DEPROVISION, table, columns);\n                 } catch (Exception e) {\n@@ -161,12 +162,12 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         }, ActionLink.ActionType.DEPROVISION, pageId);\n \n-        table.addAction(new ActionLink() {\n+        table.addAction(new ActionLink<Serializable>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 try {\n                     bulkAssociationAction(target, ResourceDeassociationActionType.UNASSIGN, table, columns);\n                 } catch (Exception e) {"},{"sha":"1ed905038987a815cf55e743dbbfd39872eff1ee","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractResourceModal.java","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.topology.TopologyNode;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+\n+/**\n+ * Modal window with Resource form.\n+ */\n+public abstract class AbstractResourceModal extends ModalContent {\n+\n+    private static final long serialVersionUID = 1734415311027284221L;\n+\n+    public AbstractResourceModal(final ModalWindow window, final PageReference pageRef) {\n+        super(window, pageRef);\n+    }\n+\n+    public static class CreateEvent extends ModalEvent {\n+\n+        private final Serializable key;\n+\n+        private final String displayName;\n+\n+        private final Serializable parent;\n+\n+        private final TopologyNode.Kind kind;\n+\n+        public CreateEvent(\n+                final Serializable key,\n+                final String displayName,\n+                final TopologyNode.Kind kind,\n+                final Serializable parent,\n+                final AjaxRequestTarget target) {\n+            super(target);\n+            this.key = key;\n+            this.displayName = displayName;\n+            this.kind = kind;\n+            this.parent = parent;\n+        }\n+\n+        public Serializable getKey() {\n+            return key;\n+        }\n+\n+        public String getDisplayName() {\n+            return displayName;\n+        }\n+\n+        public TopologyNode.Kind getKind() {\n+            return kind;\n+        }\n+\n+        public Serializable getParent() {\n+            return parent;\n+        }\n+\n+    }\n+}"},{"sha":"837c89dc5b77debac0cd4f849136d9b4a67a4a21","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ActionDataTablePanel.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FActionDataTablePanel.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.io.Serializable;\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.client.console.commons.ActionTableCheckGroup;\n@@ -37,7 +38,6 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.ISortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n \n public class ActionDataTablePanel<T, S> extends DataTablePanel<T, S> {\n@@ -48,7 +48,7 @@\n \n     private final Form<T> bulkActionForm;\n \n-    private final ActionLinksPanel actionPanel;\n+    private final ActionLinksPanel<Serializable> actionPanel;\n \n     private final PageReference pageRef;\n \n@@ -93,7 +93,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         final WebMarkupContainer actionPanelContainer = new WebMarkupContainer(\"actionPanelContainer\");\n         bulkActionForm.add(actionPanelContainer);\n \n-        actionPanel = new ActionLinksPanel(\"actions\", new Model(), pageRef);\n+        actionPanel = ActionLinksPanel.builder(pageRef).build(\"actions\");\n         actionPanelContainer.add(actionPanel);\n \n         if (dataTable.getRowCount() == 0) {\n@@ -111,11 +111,13 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n         }.setVisible(false).setEnabled(false));\n     }\n \n-    public void addAction(final ActionLink action, final ActionType type, final String entitlements) {\n-        actionPanel.add(action, type, entitlements);\n+    public void addAction(\n+            final ActionLink<Serializable> action, final ActionType type, final String entitlements) {\n+        actionPanel.add(action, type, entitlements, true);\n     }\n \n-    public void addAction(final ActionLink action, final ActionType type, final String pageId, final boolean enabled) {\n+    public void addAction(\n+            final ActionLink<Serializable> action, final ActionType type, final String pageId, final boolean enabled) {\n         actionPanel.add(action, type, pageId, enabled);\n     }\n "},{"sha":"a6859e8edee68eb95e785734613d93df2d16e147","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/BeanReflectionModal.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionModal.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+\n+/**\n+ * Modal window with Resource form.\n+ */\n+public abstract class BeanReflectionModal extends ModalContent {\n+\n+    private static final long serialVersionUID = 1734415311027284222L;\n+\n+    public BeanReflectionModal(final Serializable bean, final ModalWindow window, final PageReference pageRef) {\n+        super(window, pageRef);\n+        add(new BeanReflectionPanel(\"bean\", bean));\n+    }\n+}"},{"sha":"4f3f1d519b3f6e03cca3297f3504e7126b261440","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/BeanReflectionPanel.java","status":"added","additions":339,"deletions":0,"changes":339,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionPanel.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,339 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.beans.PropertyDescriptor;\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.rest.PolicyRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AbstractFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.list.AltListView;\n+import org.apache.syncope.common.lib.annotation.ClassList;\n+import org.apache.syncope.common.lib.annotation.SchemaList;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.util.ClassUtils;\n+import org.springframework.util.ReflectionUtils;\n+import org.springframework.util.ReflectionUtils.FieldCallback;\n+import org.springframework.util.ReflectionUtils.FieldFilter;\n+\n+public class BeanReflectionPanel extends Panel {\n+\n+    private static final long serialVersionUID = -3035998190456928143L;\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(BeanReflectionPanel.class);\n+\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    @SpringBean\n+    private PolicyRestClient policyRestClient;\n+\n+    private final IModel<List<String>> userSchemas = new LoadableDetachableModel<List<String>>() {\n+\n+        private static final long serialVersionUID = -2012833443695917883L;\n+\n+        @Override\n+        protected List<String> load() {\n+            return schemaRestClient.getPlainSchemaNames();\n+        }\n+    };\n+\n+    private final IModel<List<String>> groupSchemas = new LoadableDetachableModel<List<String>>() {\n+\n+        private static final long serialVersionUID = 5275935387613157437L;\n+\n+        @Override\n+        protected List<String> load() {\n+            return schemaRestClient.getPlainSchemaNames();\n+        }\n+    };\n+\n+    private final IModel<List<String>> correlationRules = new LoadableDetachableModel<List<String>>() {\n+\n+        private static final long serialVersionUID = 5275935387613157437L;\n+\n+        @Override\n+        protected List<String> load() {\n+            return policyRestClient.getCorrelationRuleClasses();\n+        }\n+    };\n+\n+    public BeanReflectionPanel(final String id, final Serializable bean) {\n+        super(id);\n+\n+        final List<FieldWrapper> items = new ArrayList<>();\n+        ReflectionUtils.doWithFields(bean.getClass(),\n+                new FieldCallback() {\n+\n+                    @Override\n+                    public void doWith(final Field field) throws IllegalArgumentException, IllegalAccessException {\n+                        FieldWrapper fieldWrapper = new FieldWrapper();\n+                        fieldWrapper.setName(field.getName());\n+                        fieldWrapper.setType(field.getType());\n+\n+                        final SchemaList schemaList = field.getAnnotation(SchemaList.class);\n+                        fieldWrapper.setSchemaList(schemaList);\n+\n+                        final ClassList classList = field.getAnnotation(ClassList.class);\n+                        fieldWrapper.setClassList(classList);\n+\n+                        items.add(fieldWrapper);\n+                    }\n+                },\n+                new FieldFilter() {\n+\n+                    @Override\n+                    public boolean matches(final Field field) {\n+                        return !Modifier.isStatic(field.getModifiers()) && !\"serialVersionUID\".equals(field.getName());\n+                    }\n+                });\n+\n+        final ListView<FieldWrapper> policies = new AltListView<FieldWrapper>(\"fields\", items) {\n+\n+            private static final long serialVersionUID = 9101744072914090143L;\n+\n+            @Override\n+            @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+            protected void populateItem(final ListItem<FieldWrapper> item) {\n+                final FieldWrapper field = item.getModelObject();\n+\n+                final PropertyDescriptor propDesc = BeanUtils.getPropertyDescriptor(bean.getClass(), field.getName());\n+\n+                item.add(new Label(\"label\", new ResourceModel(field.getName())));\n+\n+                AbstractFieldPanel component;\n+                try {\n+                    if (field.getClassList() != null) {\n+                        component = new AjaxDropDownChoicePanel(\"field\", field.getName(), new PropertyModel(bean,\n+                                field.getName()));\n+\n+                        final List<String> rules = correlationRules.getObject();\n+\n+                        if (rules != null && !rules.isEmpty()) {\n+                            ((AjaxDropDownChoicePanel) component).setChoices(correlationRules.getObject());\n+                        }\n+\n+                        item.add(component);\n+\n+                        item.add(getActivationControl(\n+                                component,\n+                                propDesc.getReadMethod().invoke(bean, new Object[] {}) != null,\n+                                null,\n+                                null));\n+\n+                    } else if (field.getType().isEnum()) {\n+                        component = new AjaxDropDownChoicePanel(\"field\", field.getName(), new PropertyModel(bean,\n+                                field.getName()));\n+\n+                        final Serializable[] values = (Serializable[]) field.getType().getEnumConstants();\n+\n+                        if (values != null && values.length > 0) {\n+                            ((AjaxDropDownChoicePanel) component).setChoices(Arrays.asList(values));\n+                        }\n+\n+                        item.add(component);\n+\n+                        item.add(getActivationControl(\n+                                component,\n+                                (Enum<?>) propDesc.getReadMethod().invoke(bean, new Object[] {}) != null,\n+                                values[0],\n+                                values[0]));\n+\n+                    } else if (ClassUtils.isAssignable(Boolean.class, field.getType())) {\n+                        item.add(new AjaxCheckBoxPanel(\"check\", field.getName(),\n+                                new PropertyModel<Boolean>(bean, field.getName())));\n+\n+                        item.add(new Label(\"field\", new Model(null)));\n+                    } else if (Collection.class.isAssignableFrom(field.getType())) {\n+                        if (field.getSchemaList() != null) {\n+                            final List<String> values = new ArrayList<>();\n+                            if (field.getName().charAt(0) == 'r') {\n+                                values.addAll(groupSchemas.getObject());\n+\n+                                if (field.getSchemaList().extended()) {\n+                                    values.add(\"name\");\n+                                }\n+                            } else {\n+                                values.addAll(userSchemas.getObject());\n+\n+                                if (field.getSchemaList().extended()) {\n+                                    values.add(\"key\");\n+                                    values.add(\"username\");\n+                                }\n+                            }\n+\n+                            component = new AjaxPalettePanel(\"field\", new PropertyModel(bean, field.getName()),\n+                                    new ListModel<>(values));\n+                            item.add(component);\n+\n+                            Collection<?> collection = (Collection) propDesc.getReadMethod().invoke(bean);\n+                            item.add(getActivationControl(component,\n+                                    !collection.isEmpty(), new ArrayList<String>(), new ArrayList<String>()));\n+                        } else {\n+                            final FieldPanel panel = new AjaxTextFieldPanel(\"panel\", field.getName(),\n+                                    new Model<String>(null));\n+                            panel.setRequired(true);\n+\n+                            component = new MultiFieldPanel<String>(\"field\",\n+                                    new PropertyModel(bean, field.getName()), panel);\n+\n+                            item.add(component);\n+\n+                            final List<String> reinitializedValue = new ArrayList<String>();\n+\n+                            reinitializedValue.add(\"\");\n+\n+                            item.add(getActivationControl(component,\n+                                    !((Collection) propDesc.getReadMethod().invoke(bean, new Object[] {})).isEmpty(),\n+                                    new ArrayList<String>(), (Serializable) reinitializedValue));\n+                        }\n+                    } else if (ClassUtils.isAssignable(Number.class, field.getType())) {\n+                        component = new SpinnerFieldPanel<Number>(\"field\", field.getName(),\n+                                (Class<Number>) field.getType(), new PropertyModel<Number>(bean, field.getName()),\n+                                null, null);\n+                        item.add(component);\n+\n+                        item.add(getActivationControl(component,\n+                                (Integer) propDesc.getReadMethod().invoke(bean, new Object[] {}) > 0, 0, 0));\n+                    } else if (field.getType().equals(String.class)) {\n+                        component = new AjaxTextFieldPanel(\"field\", field.getName(),\n+                                new PropertyModel(bean, field.getName()));\n+\n+                        item.add(component);\n+\n+                        item.add(getActivationControl(component,\n+                                propDesc.getReadMethod().invoke(bean, new Object[] {}) != null, null, null));\n+                    } else {\n+                        item.add(new AjaxCheckBoxPanel(\"check\", field.getName(), new Model()));\n+                        item.add(new Label(\"field\", new Model(null)));\n+                    }\n+                } catch (Exception e) {\n+                    LOG.error(\"Error retrieving bean fields\", e);\n+                }\n+            }\n+        };\n+\n+        add(policies);\n+    }\n+\n+    private <T extends Serializable> AjaxCheckBoxPanel getActivationControl(final AbstractFieldPanel<T> panel,\n+            final Boolean checked, final T defaultModelObject, final T reinitializedValue) {\n+\n+        final AjaxCheckBoxPanel check = new AjaxCheckBoxPanel(\"check\", \"check\", new Model<Boolean>(checked));\n+\n+        panel.setEnabled(checked);\n+\n+        check.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                if (check.getModelObject()) {\n+                    panel.setEnabled(true);\n+                    panel.setModelObject(reinitializedValue);\n+                } else {\n+                    panel.setModelObject(defaultModelObject);\n+                    panel.setEnabled(false);\n+                }\n+\n+                target.add(panel);\n+            }\n+        });\n+\n+        return check;\n+    }\n+\n+    private static class FieldWrapper implements Serializable {\n+\n+        private static final long serialVersionUID = -6770429509752964215L;\n+\n+        private Class<?> type;\n+\n+        private String name;\n+\n+        private transient SchemaList schemaList;\n+\n+        private transient ClassList classList;\n+\n+        public String getName() {\n+            return name;\n+        }\n+\n+        public void setName(final String name) {\n+            this.name = name;\n+        }\n+\n+        public Class<?> getType() {\n+            return type;\n+        }\n+\n+        public void setType(final Class<?> type) {\n+            this.type = type;\n+        }\n+\n+        public SchemaList getSchemaList() {\n+            return schemaList;\n+        }\n+\n+        public void setSchemaList(final SchemaList schemaList) {\n+            this.schemaList = schemaList;\n+        }\n+\n+        public ClassList getClassList() {\n+            return classList;\n+        }\n+\n+        public void setClassList(final ClassList classList) {\n+            this.classList = classList;\n+        }\n+    }\n+}"},{"sha":"9db9bd200206957b8566f7b30b4ace29db1f98a0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorModal.java","status":"modified","additions":31,"deletions":19,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -30,8 +30,11 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.topology.Topology;\n+import org.apache.syncope.client.console.topology.TopologyNode;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.CheckBoxMultipleChoiceFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.list.ConnConfPropertyListView;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -48,11 +51,11 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.CheckBoxMultipleChoice;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.list.ListView;\n@@ -67,7 +70,7 @@\n /**\n  * Modal window with Connector form.\n  */\n-public class ConnectorModal extends ModalContent {\n+public class ConnectorModal extends AbstractResourceModal {\n \n     private static final long serialVersionUID = -2025535531121434050L;\n \n@@ -143,14 +146,14 @@ public ConnectorModal(\n         connectorForm.add(displayName);\n \n         final AjaxDropDownChoicePanel<String> location = new AjaxDropDownChoicePanel<>(\"location\", \"location\",\n-                new Model<>(bundleTO == null ? null : bundleTO.getLocation()));\n+                new Model<>(bundleTO == null ? connInstanceTO.getLocation() : bundleTO.getLocation()));\n         ((DropDownChoice<String>) location.getField()).setNullValid(true);\n         location.setStyleSheet(\"long_dynamicsize\");\n         location.setChoices(new ArrayList<>(mapConnBundleTOs.keySet()));\n         location.setRequired(true);\n         location.addRequiredLabel();\n         location.setOutputMarkupId(true);\n-        location.setEnabled(connInstanceTO.getKey() == 0);\n+        location.setEnabled(connInstanceTO.getKey() == 0 && StringUtils.isBlank(connInstanceTO.getLocation()));\n         location.getField().setOutputMarkupId(true);\n         connectorForm.add(location);\n \n@@ -160,11 +163,12 @@ public ConnectorModal(\n         ((DropDownChoice<String>) connectorName.getField()).setNullValid(true);\n         connectorName.setStyleSheet(\"long_dynamicsize\");\n         connectorName.setChoices(bundleTO == null\n-                ? new ArrayList<String>()\n-                : new ArrayList<>(mapConnBundleTOs.get(connInstanceTO.getLocation()).keySet()));\n+                ? StringUtils.isBlank(connInstanceTO.getLocation())\n+                        ? new ArrayList<String>()\n+                        : new ArrayList<>(mapConnBundleTOs.get(connInstanceTO.getLocation()).keySet())\n+                : new ArrayList<>(mapConnBundleTOs.get(bundleTO.getLocation()).keySet()));\n         connectorName.setRequired(true);\n         connectorName.addRequiredLabel();\n-        connectorName.setEnabled(connInstanceTO.getLocation() != null);\n         connectorName.setOutputMarkupId(true);\n         connectorName.setEnabled(connInstanceTO.getKey() == 0);\n         connectorName.getField().setOutputMarkupId(true);\n@@ -176,7 +180,7 @@ public ConnectorModal(\n         version.setChoices(bundleTO == null\n                 ? new ArrayList<String>()\n                 : new ArrayList<>(mapConnBundleTOs.get(connInstanceTO.getLocation()).\n-                get(connInstanceTO.getBundleName()).keySet()));\n+                        get(connInstanceTO.getBundleName()).keySet()));\n         version.setRequired(true);\n         version.addRequiredLabel();\n         version.setEnabled(connInstanceTO.getBundleName() != null);\n@@ -313,19 +317,20 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         connectorPropForm.add(check);\n \n         // form - third tab (capabilities)\n-        final IModel<List<ConnectorCapability>> capabilities =\n-                new LoadableDetachableModel<List<ConnectorCapability>>() {\n+        final IModel<List<ConnectorCapability>> capabilities\n+                = new LoadableDetachableModel<List<ConnectorCapability>>() {\n \n-            private static final long serialVersionUID = 5275935387613157437L;\n+                    private static final long serialVersionUID = 5275935387613157437L;\n \n-            @Override\n-            protected List<ConnectorCapability> load() {\n-                return Arrays.asList(ConnectorCapability.values());\n-            }\n-        };\n-        CheckBoxMultipleChoice<ConnectorCapability> capabilitiesPalette = new CheckBoxMultipleChoice<>(\n-                \"capabilitiesPalette\",\n-                new PropertyModel<List<ConnectorCapability>>(this, \"selectedCapabilities\"), capabilities);\n+                    @Override\n+                    protected List<ConnectorCapability> load() {\n+                        return Arrays.asList(ConnectorCapability.values());\n+                    }\n+                };\n+        CheckBoxMultipleChoiceFieldPanel<ConnectorCapability> capabilitiesPalette\n+                = new CheckBoxMultipleChoiceFieldPanel<>(\n+                        \"capabilitiesPalette\",\n+                        new PropertyModel<List<ConnectorCapability>>(this, \"selectedCapabilities\"), capabilities);\n \n         capabilitiesPalette.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n \n@@ -373,6 +378,13 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 try {\n                     if (connInstanceTO.getKey() == 0) {\n                         connectorRestClient.create(conn);\n+                        send(pageRef.getPage(), Broadcast.BREADTH, new CreateEvent(\n+                                conn.getKey(),\n+                                conn.getDisplayName(),\n+                                TopologyNode.Kind.CONNECTOR,\n+                                conn.getLocation().startsWith(Topology.CONNECTOR_SERVER_LOCATION_PREFIX)\n+                                        ? conn.getLocation() : Topology.ROOT_NAME,\n+                                target));\n                     } else {\n                         connectorRestClient.update(conn);\n                     }"},{"sha":"f89aa9b326be68ab146b522118894bf70867b717","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"added","additions":322,"deletions":0,"changes":322,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,322 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.beans.PropertyDescriptor;\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxButton;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class ListViewPanel<T extends Serializable> extends Panel {\n+\n+    private static final long serialVersionUID = -7982691107029848579L;\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(ListViewPanel.class);\n+\n+    private final ClearIndicatingAjaxButton addButton;\n+\n+    private AjaxWizard<T> newItemPanel;\n+\n+    private final WebMarkupContainer container;\n+\n+    private final Fragment initialFragment;\n+\n+    private final List<T> listOfItems;\n+\n+    /**\n+     * Table view of a list of beans.\n+     *\n+     * @param id id.\n+     * @param list list of item.\n+     * @param reference list item reference class.\n+     * @param includes Used to sort and restrict the set of bean's fields to be shown.\n+     * @param actions item actions.\n+     */\n+    private ListViewPanel(\n+            final String id,\n+            final List<T> list,\n+            final Class<T> reference,\n+            final List<String> includes,\n+            final ActionLinksPanel.Builder<T> actions,\n+            final PageReference pageRef) {\n+        super(id);\n+        setOutputMarkupId(true);\n+\n+        container = new WebMarkupContainer(\"container\");\n+        add(container.setOutputMarkupId(true));\n+\n+        initialFragment = new Fragment(\"content\", \"table\", this);\n+        container.addOrReplace(initialFragment);\n+\n+        initialFragment.add(new Label(\"caption\", new ResourceModel(\"listview.caption\", StringUtils.EMPTY)));\n+\n+        final List<String> toBeIncluded;\n+        if (includes == null || includes.isEmpty()) {\n+            toBeIncluded = new ArrayList<String>();\n+            for (Field field : Arrays.asList(reference.getDeclaredFields())) {\n+                toBeIncluded.add(field.getName());\n+            }\n+        } else {\n+            toBeIncluded = includes;\n+        }\n+\n+        if (toBeIncluded.isEmpty()) {\n+            LOG.warn(\"No field has been retrieved from {}\", reference.getName());\n+            listOfItems = Collections.<T>emptyList();\n+        } else if (list == null || list.isEmpty()) {\n+            LOG.info(\"No item to be shown\");\n+            listOfItems = Collections.<T>emptyList();\n+        } else {\n+            listOfItems = list;\n+            if (LOG.isDebugEnabled()) {\n+                for (String field : toBeIncluded) {\n+                    LOG.debug(\"Show field {}\", field);\n+                }\n+            }\n+        }\n+\n+        final ListView<String> names = new ListView<String>(\"names\", toBeIncluded) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<String> item) {\n+                item.add(new Label(\"name\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+            }\n+        };\n+        initialFragment.add(names);\n+\n+        final ListView<T> beans = new ListView<T>(\"beans\", listOfItems) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<T> beanItem) {\n+                final T bean = beanItem.getModelObject();\n+\n+                final ListView<String> fields = new ListView<String>(\"fields\", toBeIncluded) {\n+\n+                    private static final long serialVersionUID = 1L;\n+\n+                    @Override\n+                    protected void populateItem(final ListItem<String> fieldItem) {\n+                        try {\n+                            LOG.error(\"Processing field {}\", fieldItem.getModelObject());\n+\n+                            final Object value = new PropertyDescriptor(fieldItem.getModelObject(), bean.getClass()).\n+                                    getReadMethod().invoke(bean);\n+\n+                            LOG.error(\"Field value {}\", value);\n+\n+                            fieldItem.add(value == null\n+                                    ? new Label(\"field\", StringUtils.EMPTY)\n+                                    : new Label(\"field\", new ResourceModel(value.toString(), value.toString())));\n+\n+                        } catch (Exception e) {\n+                            LOG.error(\"Error retrieving value for field {}\", fieldItem.getModelObject(), e);\n+                            fieldItem.add(new Label(\"field\", StringUtils.EMPTY));\n+                        }\n+                    }\n+                };\n+                beanItem.add(fields);\n+                beanItem.add(actions.build(\"actions\", bean));\n+            }\n+        };\n+        beans.setReuseItems(true);\n+        initialFragment.add(beans);\n+\n+        addButton = new ClearIndicatingAjaxButton(\"add\", pageRef) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                final Fragment fragment = new Fragment(\"content\", \"wizard\", ListViewPanel.this);\n+                fragment.add(newItemPanel.clone());\n+                container.addOrReplace(fragment);\n+                target.add(container);\n+            }\n+        };\n+\n+        addButton.setEnabled(false);\n+        addButton.setVisible(false);\n+\n+        initialFragment.add(addButton);\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n+            final AjaxRequestTarget target = AjaxWizard.NewItemEvent.class.cast(event.getPayload()).getTarget();\n+\n+            @SuppressWarnings(\"unchecked\")\n+            final T item = ((AjaxWizard.NewItemEvent<T>) event.getPayload()).getItem();\n+\n+            if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n+                this.listOfItems.add(item);\n+            }\n+\n+            container.addOrReplace(initialFragment);\n+            target.add(container);\n+        }\n+        super.onEvent(event);\n+    }\n+\n+    private ListViewPanel<T> addNewItemPanel(final AjaxWizard<T> panel) {\n+        this.newItemPanel = panel;\n+\n+        if (this.newItemPanel != null) {\n+            addButton.setEnabled(true);\n+            addButton.setVisible(true);\n+        }\n+\n+        return this;\n+    }\n+\n+    public static <T extends Serializable> Builder<T> builder(final Class<T> reference, final PageReference pageRef) {\n+        return new Builder<T>(reference, pageRef);\n+    }\n+\n+    /**\n+     * ListViewPanel builder.\n+     *\n+     * @param <T> list item reference type.\n+     */\n+    public static final class Builder<T extends Serializable> implements Serializable {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        private final PageReference pageRef;\n+\n+        private final Class<T> reference;\n+\n+        private final List<String> includes = new ArrayList<>();\n+\n+        private final ActionLinksPanel.Builder<T> actions;\n+\n+        private List<T> items;\n+\n+        private AjaxWizard<T> newItemPanel;\n+\n+        private Builder(final Class<T> reference, final PageReference pageRef) {\n+            this.pageRef = pageRef;\n+            this.reference = reference;\n+            this.items = null;\n+            this.actions = ActionLinksPanel.<T>builder(pageRef);\n+        }\n+\n+        /**\n+         * Builds a list view.\n+         *\n+         * @param id component id.\n+         * @return List view.\n+         */\n+        public ListViewPanel<T> build(final String id) {\n+            return new ListViewPanel<T>(id, items, reference, includes, actions, pageRef).addNewItemPanel(newItemPanel);\n+        }\n+\n+        /**\n+         * Sets list of items.\n+         *\n+         * @param items list of items.\n+         * @return current builder object.\n+         */\n+        public Builder<T> setItems(final List<T> items) {\n+            this.items = items;\n+            return this;\n+        }\n+\n+        /**\n+         * Adds item.\n+         *\n+         * @param item item.\n+         * @return current builder object.\n+         */\n+        public Builder<T> addItem(final T item) {\n+            if (item == null) {\n+                return this;\n+            }\n+\n+            if (this.items == null) {\n+                this.items = new ArrayList<>();\n+            }\n+\n+            this.items.add(item);\n+            return this;\n+        }\n+\n+        /**\n+         * Gives fields to be shown. It could be used to give an order as well.\n+         *\n+         * @param includes field names to be shown.\n+         * @return current builder object.\n+         */\n+        public Builder<T> includes(final String... includes) {\n+            for (String include : includes) {\n+                if (include != null && !this.includes.contains(include)) {\n+                    this.includes.add(include);\n+                }\n+            }\n+            return this;\n+        }\n+\n+        /**\n+         * Add item action (the given order is ignored.\n+         *\n+         * @param link action link.\n+         * @param type action type.\n+         * @param entitlements entitlements.\n+         * @return current builder object.\n+         */\n+        public Builder<T> addAction(\n+                final ActionLink<T> link, final ActionLink.ActionType type, final String entitlements) {\n+            actions.add(link, type, entitlements);\n+            return this;\n+        }\n+\n+        public Builder<T> addNewItemPanel(final AjaxWizard<T> panel) {\n+            this.newItemPanel = panel;\n+            return this;\n+        }\n+    }\n+}"},{"sha":"6a123c064b9ac2b06c0866277b69d1d69a278653","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ModalContent.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FModalContent.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -54,9 +54,9 @@ public class ModalContent extends Panel {\n \n     protected NotificationPanel feedbackPanel;\n \n-    private final PageReference pageRef;\n+    protected final PageReference pageRef;\n \n-    private final ModalWindow window;\n+    protected final ModalWindow window;\n \n     public ModalContent(final ModalWindow window, final PageReference pageRef) {\n         super(window.getContentId());\n@@ -68,6 +68,10 @@ public ModalContent(final ModalWindow window, final PageReference pageRef) {\n         add(feedbackPanel);\n     }\n \n+    public NotificationPanel getFeedbackPanel() {\n+        return feedbackPanel;\n+    }\n+\n     /**\n      * Generic modal event.\n      */"},{"sha":"b210c867b9bdf1c6964c0091ef3a7a1f2c04afa4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceMappingPanel.java","status":"modified","additions":31,"deletions":35,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -120,9 +120,9 @@ public class ResourceMappingPanel extends Panel {\n     private final ResourceTO resourceTO;\n \n     /**\n-     * User / group.\n+     * External resource provisioning configuration instance to be updated.\n      */\n-    private final AnyTypeKind anyTypeKind;\n+    private final ProvisionTO provisionTO;\n \n     /**\n      * Mapping container.\n@@ -134,31 +134,26 @@ public class ResourceMappingPanel extends Panel {\n     private final AjaxCheckBoxPanel connObjectLinkCheckbox;\n \n     private MappingTO getMapping() {\n-        ProvisionTO provision = resourceTO.getProvision(this.anyTypeKind.name());\n-        if (provision == null) {\n-            provision = new ProvisionTO();\n-            resourceTO.getProvisions().add(provision);\n-        }\n-        if (provision.getMapping() == null) {\n-            provision.setMapping(new MappingTO());\n+        if (provisionTO.getMapping() == null) {\n+            provisionTO.setMapping(new MappingTO());\n         }\n \n-        return provision.getMapping();\n+        return provisionTO.getMapping();\n     }\n \n     /**\n      * Attribute Mapping Panel.\n      *\n      * @param id panel id\n-     * @param resourceTO external resource\n-     * @param anyTypeKind USER / GROUP\n+     * @param resourceTO external resource to be updated.\n+     * @param provisionTO external resource provisioning configuration instance.\n      */\n-    public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final AnyTypeKind anyTypeKind) {\n+    public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final ProvisionTO provisionTO) {\n         super(id);\n         setOutputMarkupId(true);\n \n         this.resourceTO = resourceTO;\n-        this.anyTypeKind = anyTypeKind;\n+        this.provisionTO = provisionTO == null ? new ProvisionTO() : provisionTO;\n \n         this.mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n         this.mappingContainer.setOutputMarkupId(true);\n@@ -168,9 +163,8 @@ public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final\n         this.connObjectLinkContainer.setOutputMarkupId(true);\n         add(this.connObjectLinkContainer);\n \n-        if (this.resourceTO.getConnector() != null && this.resourceTO.getConnector() > 0) {\n-            schemaNames = getSchemaNames(this.resourceTO.getConnector(), this.resourceTO.getConnConfProperties());\n-\n+        if (resourceTO.getConnector() != null && resourceTO.getConnector() > 0) {\n+            schemaNames = getSchemaNames(resourceTO.getConnector(), resourceTO.getConnConfProperties());\n             setEnabled();\n         } else {\n             schemaNames = Collections.<String>emptyList();\n@@ -184,7 +178,8 @@ public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final\n \n         final Label passwordLabel = new Label(\"passwordLabel\", new ResourceModel(\"password\"));\n         mappingContainer.add(passwordLabel);\n-        if (AnyTypeKind.USER != ResourceMappingPanel.this.anyTypeKind) {\n+\n+        if (!AnyTypeKind.USER.name().equals(this.provisionTO.getAnyType())) {\n             passwordLabel.setVisible(false);\n         }\n \n@@ -284,9 +279,9 @@ public CharSequence getPrecondition(final Component component) {\n                     }\n                 });\n \n-                final AjaxDropDownChoicePanel<String> intAttrNames =\n-                        new AjaxDropDownChoicePanel<>(\"intAttrNames\", getString(\"intAttrNames\"),\n-                                new PropertyModel<String>(mapItem, \"intAttrName\"), false);\n+                final AjaxDropDownChoicePanel<String> intAttrNames = new AjaxDropDownChoicePanel<>(\"intAttrNames\",\n+                        getString(\"intAttrNames\"),\n+                        new PropertyModel<String>(mapItem, \"intAttrName\"), false);\n                 intAttrNames.setChoices(schemaNames);\n                 intAttrNames.setRequired(true);\n                 intAttrNames.setStyleSheet(FIELD_STYLE);\n@@ -301,22 +296,23 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 item.add(intAttrNames);\n \n                 final List<IntMappingType> attrTypes = new ArrayList<>(getAttributeTypes(entity));\n-                final AjaxDropDownChoicePanel<IntMappingType> intMappingTypes =\n-                        new AjaxDropDownChoicePanel<>(\"intMappingTypes\",\n-                                new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").getObject(),\n-                                new PropertyModel<IntMappingType>(mapItem, \"intMappingType\"));\n+                final AjaxDropDownChoicePanel<IntMappingType> intMappingTypes = new AjaxDropDownChoicePanel<>(\n+                        \"intMappingTypes\",\n+                        new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").getObject(),\n+                        new PropertyModel<IntMappingType>(mapItem, \"intMappingType\"));\n                 intMappingTypes.setRequired(true);\n                 intMappingTypes.setChoices(attrTypes);\n                 intMappingTypes.setStyleSheet(FIELD_STYLE);\n                 item.add(intMappingTypes);\n \n-                final AjaxDropDownChoicePanel<AnyTypeKind> entitiesPanel =\n-                        new AjaxDropDownChoicePanel<>(\"entities\",\n-                                new ResourceModel(\"entities\", \"entities\").getObject(),\n-                                new Model<>(entity));\n-                entitiesPanel.setChoices(anyTypeKind == AnyTypeKind.GROUP\n+                final AjaxDropDownChoicePanel<AnyTypeKind> entitiesPanel = new AjaxDropDownChoicePanel<>(\"entities\",\n+                        new ResourceModel(\"entities\", \"entities\").getObject(),\n+                        new Model<>(entity));\n+\n+                entitiesPanel.setChoices(provisionTO.getAnyType().equals(AnyTypeKind.GROUP.name())\n                         ? Collections.<AnyTypeKind>singletonList(AnyTypeKind.GROUP)\n                         : Arrays.asList(AnyTypeKind.values()));\n+\n                 entitiesPanel.setStyleSheet(DEF_FIELD_STYLE);\n                 entitiesPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n@@ -399,7 +395,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     }\n                 });\n                 item.add(password);\n-                if (AnyTypeKind.USER != ResourceMappingPanel.this.anyTypeKind) {\n+                if (!AnyTypeKind.USER.name().equals(provisionTO.getAnyType())) {\n                     password.setVisible(false);\n                 }\n \n@@ -446,7 +442,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             }\n         };\n         addMappingBtn.setDefaultFormProcessing(false);\n-        addMappingBtn.setEnabled(this.resourceTO.getConnector() != null && this.resourceTO.getConnector() > 0);\n+        addMappingBtn.setEnabled(resourceTO.getConnector() != null && resourceTO.getConnector() > 0);\n         mappingContainer.add(addMappingBtn);\n \n         boolean connObjectLinkEnabled = false;\n@@ -495,10 +491,10 @@ private List<String> getSchemaNames(final Long connectorId, final Set<ConnConfPr\n \n     private void setEnabled() {\n         ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n-        connInstanceTO.setKey(this.resourceTO.getConnector());\n-        connInstanceTO.getConfiguration().addAll(this.resourceTO.getConnConfProperties());\n+        connInstanceTO.setKey(resourceTO.getConnector());\n+        connInstanceTO.getConfiguration().addAll(resourceTO.getConnConfProperties());\n \n-        boolean enabled = resourceTO.getProvision(anyTypeKind.name()) != null;\n+        boolean enabled = provisionTO != null;\n \n         this.mappingContainer.setEnabled(enabled);\n         this.mappingContainer.setVisible(enabled);"},{"sha":"6390f01a99157ec23909222d8c42419c03843db4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceModal.java","status":"modified","additions":65,"deletions":29,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -26,10 +26,12 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.AbstractBasePage;\n+import org.apache.syncope.client.console.topology.TopologyNode;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wizards.ProvisionWizard;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -38,14 +40,15 @@\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.ResourceModel;\n \n /**\n  * Modal window with Resource form.\n  */\n-public class ResourceModal extends ModalContent {\n+public class ResourceModal extends AbstractResourceModal {\n \n     private static final long serialVersionUID = 1734415311027284221L;\n \n@@ -71,10 +74,61 @@ public ResourceModal(\n         //--------------------------------\n \n         //--------------------------------\n-        // Resource mapping panels\n+        // Resource provision panels\n         //--------------------------------\n-        form.add(new ResourceMappingPanel(\"umapping\", resourceTO, AnyTypeKind.USER));\n-        form.add(new ResourceMappingPanel(\"gmapping\", resourceTO, AnyTypeKind.GROUP));\n+        final WebMarkupContainer provisions = new WebMarkupContainer(\"pcontainer\");\n+        form.add(provisions.setOutputMarkupId(true));\n+\n+        final ListViewPanel.Builder<ProvisionTO> builder = ListViewPanel.builder(ProvisionTO.class, pageRef);\n+        builder.setItems(resourceTO.getProvisions());\n+        builder.includes(\"anyType\", \"objectClass\");\n+\n+        builder.addAction(new ActionLink<ProvisionTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435504L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n+\n+            }\n+        }, ActionLink.ActionType.MAPPING, Entitlement.RESOURCE_UPDATE).addAction(new ActionLink<ProvisionTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435514L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n+\n+            }\n+        }, ActionLink.ActionType.ACCOUNT_LINK, Entitlement.RESOURCE_UPDATE).addAction(new ActionLink<ProvisionTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435524L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n+\n+            }\n+        }, ActionLink.ActionType.RESET_TIME, Entitlement.RESOURCE_UPDATE).addAction(new ActionLink<ProvisionTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435534L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n+\n+            }\n+        }, ActionLink.ActionType.CLONE, Entitlement.RESOURCE_CREATE).addAction(new ActionLink<ProvisionTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435544L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n+                resourceTO.getProvisions().remove(provisionTO);\n+                target.add(provisions);\n+\n+            }\n+        }, ActionLink.ActionType.DELETE, Entitlement.RESOURCE_DELETE);\n+\n+        builder.addNewItemPanel(new ProvisionWizard(\"wizard\", resourceTO, pageRef));\n+        provisions.add(builder.build(\"provisions\"));\n         //--------------------------------\n \n         //--------------------------------\n@@ -129,7 +183,12 @@ public boolean evaluate(final MappingItemTO item) {\n                     try {\n                         if (createFlag) {\n                             resourceRestClient.create(resourceTO);\n-                            send(pageRef.getPage(), Broadcast.BREADTH, new ResourceCreateEvent(target, resourceTO));\n+                            send(pageRef.getPage(), Broadcast.BREADTH, new CreateEvent(\n+                                    resourceTO.getKey(),\n+                                    resourceTO.getKey(),\n+                                    TopologyNode.Kind.RESOURCE,\n+                                    resourceTO.getConnector(),\n+                                    target));\n                         } else {\n                             resourceRestClient.update(resourceTO);\n                         }\n@@ -178,27 +237,4 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 submit, ENABLE, createFlag ? Entitlement.RESOURCE_CREATE : Entitlement.RESOURCE_UPDATE);\n     }\n-\n-    public NotificationPanel getFeedbackPanel() {\n-        return feedbackPanel;\n-    }\n-\n-    public static class ResourceCreateEvent extends ModalEvent {\n-\n-        private final ResourceTO resourceTO;\n-\n-        public ResourceCreateEvent(final AjaxRequestTarget target, final ResourceTO resourceTO) {\n-            super(target);\n-            this.resourceTO = resourceTO;\n-        }\n-\n-        /**\n-         * Create resource getter.\n-         *\n-         * @return created resource.\n-         */\n-        public ResourceTO getResourceTO() {\n-            return resourceTO;\n-        }\n-    }\n }"},{"sha":"4fc5a866596c0665af9404b23fc32780a6dffcf5","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":198,"deletions":139,"changes":337,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -39,7 +39,7 @@\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.panels.ResourceModal.ResourceCreateEvent;\n+import org.apache.syncope.client.console.panels.AbstractResourceModal.CreateEvent;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n@@ -49,6 +49,7 @@\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AbstractAjaxTimerBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.IAjaxIndicatorAware;\n import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n@@ -57,9 +58,7 @@\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.protocol.ws.api.WebSocketBehavior;\n import org.apache.wicket.protocol.ws.api.WebSocketRequestHandler;\n import org.apache.wicket.protocol.ws.api.message.TextMessage;\n@@ -69,7 +68,9 @@ public class Topology extends BasePage {\n \n     private static final long serialVersionUID = -1100228004207271272L;\n \n-    private static final String CONNECTOR_SERVER_LOCATION_PREFIX = \"connid://\";\n+    public static final String CONNECTOR_SERVER_LOCATION_PREFIX = \"connid://\";\n+\n+    public static final String ROOT_NAME = \"Syncope\";\n \n     private final int origX = 3100;\n \n@@ -81,6 +82,10 @@ public class Topology extends BasePage {\n \n     private final ModalWindow modal;\n \n+    private final WebMarkupContainer newlyCreatedContainer;\n+\n+    private final ListView<TopologyNode> newlyCreated;\n+\n     private final LoadableDetachableModel<List<ResourceTO>> resModel = new LoadableDetachableModel<List<ResourceTO>>() {\n \n         private static final long serialVersionUID = 5275935387613157431L;\n@@ -92,45 +97,51 @@ protected List<ResourceTO> load() {\n         }\n     };\n \n-    private final LoadableDetachableModel<Pair<List<ConnInstanceTO>, List<ConnInstanceTO>>> connModel =\n-            new LoadableDetachableModel<Pair<List<ConnInstanceTO>, List<ConnInstanceTO>>>() {\n+    private final LoadableDetachableModel<Map<String, List<ConnInstanceTO>>> connModel\n+            = new LoadableDetachableModel<Map<String, List<ConnInstanceTO>>>() {\n \n-        private static final long serialVersionUID = 5275935387613157432L;\n+                private static final long serialVersionUID = 5275935387613157432L;\n \n-        @Override\n-        protected Pair<List<ConnInstanceTO>, List<ConnInstanceTO>> load() {\n-            final List<ConnInstanceTO> level1 = new ArrayList<>();\n-            final List<ConnInstanceTO> level2 = new ArrayList<>();\n-\n-            for (ConnInstanceTO conn : connectorRestClient.getAllConnectors()) {\n-                if (conn.getLocation().startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n-                    level2.add(conn);\n-                } else {\n-                    level1.add(conn);\n+                @Override\n+                protected Map<String, List<ConnInstanceTO>> load() {\n+                    final Map<String, List<ConnInstanceTO>> res = new HashMap<>();\n+\n+                    for (ConnInstanceTO conn : connectorRestClient.getAllConnectors()) {\n+                        final List<ConnInstanceTO> conns;\n+                        if (res.containsKey(conn.getLocation())) {\n+                            conns = res.get(conn.getLocation());\n+                        } else {\n+                            conns = new ArrayList<>();\n+                            res.put(conn.getLocation(), conns);\n+                        }\n+                        conns.add(conn);\n+                    }\n+\n+                    return res;\n                 }\n-            }\n+            };\n \n-            return Pair.of(level1, level2);\n-        }\n-    };\n+    private final LoadableDetachableModel<Pair<List<URI>, List<URI>>> csModel\n+            = new LoadableDetachableModel<Pair<List<URI>, List<URI>>>() {\n \n-    private final LoadableDetachableModel<List<URI>> csModel = new LoadableDetachableModel<List<URI>>() {\n+                private static final long serialVersionUID = 5275935387613157433L;\n \n-        private static final long serialVersionUID = 5275935387613157433L;\n+                @Override\n+                protected Pair<List<URI>, List<URI>> load() {\n+                    final List<URI> connectorServers = new ArrayList<>();\n+                    final List<URI> filePaths = new ArrayList<>();\n \n-        @Override\n-        protected List<URI> load() {\n-            final List<URI> locations = new ArrayList<>();\n+                    for (String location : SyncopeConsoleSession.get().getSyncopeTO().getConnIdLocations()) {\n+                        if (location.startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n+                            connectorServers.add(URI.create(location));\n+                        } else {\n+                            filePaths.add(URI.create(location));\n+                        }\n+                    }\n \n-            for (String location : SyncopeConsoleSession.get().getSyncopeTO().getConnIdLocations()) {\n-                if (location.startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n-                    locations.add(URI.create(location));\n+                    return Pair.of(connectorServers, filePaths);\n                 }\n-            }\n-\n-            return locations;\n-        }\n-    };\n+            };\n \n     private enum SupportedOperation {\n \n@@ -203,32 +214,33 @@ protected void onMessage(final WebSocketRequestHandler handler, final TextMessag\n         // -----------------------------------------\n         // Add Zoom panel\n         // -----------------------------------------\n-        final ActionLinksPanel zoomActionPanel = new ActionLinksPanel(\"zoom\", new Model<String>(), getPageReference());\n-        add(zoomActionPanel);\n+        final ActionLinksPanel.Builder<Serializable> zoomActionPanel = ActionLinksPanel.builder(getPageReference());\n \n-        zoomActionPanel.add(new ActionLink() {\n+        zoomActionPanel.add(new ActionLink<Serializable>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.appendJavaScript(\"zoomIn($('#drawing')[0]);\");\n             }\n-        }, ActionLink.ActionType.ZOOM_IN, Entitlement.RESOURCE_LIST).add(new ActionLink() {\n+        }, ActionLink.ActionType.ZOOM_IN, Entitlement.RESOURCE_LIST).add(new ActionLink<Serializable>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target) {\n+            public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                 target.appendJavaScript(\"zoomOut($('#drawing')[0]);\");\n             }\n         }, ActionLink.ActionType.ZOOM_OUT, Entitlement.RESOURCE_LIST);\n+\n+        add(zoomActionPanel.build(\"zoom\"));\n         // -----------------------------------------\n \n         // -----------------------------------------\n         // Add Syncope (root topologynode)\n         // -----------------------------------------\n-        final TopologyNode syncopeTopologyNode = new TopologyNode(\"Syncope\", \"Syncope\", TopologyNode.Kind.SYNCOPE);\n+        final TopologyNode syncopeTopologyNode = new TopologyNode(ROOT_NAME, ROOT_NAME, TopologyNode.Kind.SYNCOPE);\n         syncopeTopologyNode.setX(origX);\n         syncopeTopologyNode.setY(origY);\n \n@@ -250,11 +262,11 @@ public void onClick(final AjaxRequestTarget target) {\n         // -----------------------------------------\n         // Add Connector Servers\n         // -----------------------------------------\n-        final ListView<URI> connectorServers = new ListView<URI>(\"connectorServers\", csModel) {\n+        final ListView<URI> connectorServers = new ListView<URI>(\"connectorServers\", csModel.getObject().getLeft()) {\n \n             private static final long serialVersionUID = 6978621871488360380L;\n \n-            private final int size = csModel.getObject().size() + 1;\n+            private final int size = csModel.getObject().getLeft().size() + 1;\n \n             @Override\n             protected void populateItem(final ListItem<URI> item) {\n@@ -287,102 +299,114 @@ protected void populateItem(final ListItem<URI> item) {\n         // -----------------------------------------\n \n         // -----------------------------------------\n-        // Add Connector Intances (first level)\n+        // Add File Paths\n         // -----------------------------------------\n-        final ListView<ConnInstanceTO> conn1 = new ListView<ConnInstanceTO>(\"conn1\", connModel.getObject().getLeft()) {\n+        final ListView<URI> filePaths = new ListView<URI>(\"filePaths\", csModel.getObject().getRight()) {\n \n-            private static final long serialVersionUID = 6978621871488360381L;\n+            private static final long serialVersionUID = 6978621871488360380L;\n \n-            private final int size = connModel.getObject().getLeft().size() + 1;\n+            private final int size = csModel.getObject().getRight().size() + 1;\n \n             @Override\n-            protected void populateItem(final ListItem<ConnInstanceTO> item) {\n-                int kx = size >= 6 ? 800 : (130 * size);\n+            protected void populateItem(final ListItem<URI> item) {\n+                int kx = size >= 4 ? 800 : (200 * size);\n \n                 int x = (int) Math.round(origX + kx * Math.cos(Math.PI * (item.getIndex() + 1) / size));\n                 int y = (int) Math.round(origY + 100 * Math.sin(Math.PI * (item.getIndex() + 1) / size));\n \n-                final ConnInstanceTO conn = item.getModelObject();\n-                final TopologyNode topologynode = new TopologyNode(\n-                        Long.valueOf(conn.getKey()), conn.getDisplayName(), TopologyNode.Kind.CONNECTOR);\n-                topologynode.setConnectinDisplayName(conn.getBundleName());\n+                final URI location = item.getModelObject();\n+                final String url = location.toASCIIString();\n+\n+                final TopologyNode topologynode = new TopologyNode(url, url, TopologyNode.Kind.FS_PATH);\n+\n+                topologynode.setHost(location.getHost());\n+                topologynode.setPort(location.getPort());\n                 topologynode.setX(x);\n                 topologynode.setY(y);\n \n-                connectors.put(Long.class.cast(topologynode.getKey()), topologynode);\n-\n-                item.add(topologyNodePanel(\"conn\", topologynode));\n+                servers.put(String.class.cast(topologynode.getKey()), topologynode);\n \n-                if (conn.getLocation().startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n-                    final Map<Serializable, TopologyNode> remoteConnections;\n+                item.add(topologyNodePanel(\"fp\", topologynode));\n \n-                    if (connections.containsKey(conn.getLocation())) {\n-                        remoteConnections = connections.get(conn.getLocation());\n-                    } else {\n-                        remoteConnections = new HashMap<>();\n-                        connections.put(conn.getLocation(), remoteConnections);\n-                    }\n-                    remoteConnections.put(conn.getKey(), topologynode);\n-                } else {\n-                    syncopeConnections.put(conn.getKey(), topologynode);\n-                }\n+                syncopeConnections.put(url, topologynode);\n+                connections.put(url, new HashMap<Serializable, TopologyNode>());\n             }\n         };\n \n-        conn1.setOutputMarkupId(true);\n-        add(conn1);\n+        filePaths.setOutputMarkupId(true);\n+        add(filePaths);\n         // -----------------------------------------\n \n         // -----------------------------------------\n-        // Add Connector Intances (second level)\n+        // Add Connector Intances\n         // -----------------------------------------\n-        final ListView<ConnInstanceTO> conn2 = new ListView<ConnInstanceTO>(\"conn2\", connModel.getObject().getRight()) {\n+        final List<List<ConnInstanceTO>> allConns = new ArrayList<>(connModel.getObject().values());\n \n-            private static final long serialVersionUID = 6978621871488360381L;\n+        final ListView<List<ConnInstanceTO>> conns = new ListView<List<ConnInstanceTO>>(\"conns\", allConns) {\n \n-            private final int size = connModel.getObject().getRight().size() + 1;\n+            private static final long serialVersionUID = 697862187148836036L;\n \n             @Override\n-            protected void populateItem(final ListItem<ConnInstanceTO> item) {\n-                final ConnInstanceTO conn = item.getModelObject();\n+            protected void populateItem(final ListItem<List<ConnInstanceTO>> item) {\n \n-                final TopologyNode parent = servers.get(conn.getLocation());\n+                final int size = item.getModelObject().size() + 1;\n \n-                int kx = size >= 6 ? 800 : (130 * size);\n+                final ListView<ConnInstanceTO> conns = new ListView<ConnInstanceTO>(\"conns\", item.getModelObject()) {\n \n-                int x = (int) Math.round((parent == null ? origX : parent.getX())\n-                        + kx * Math.cos(Math.PI + Math.PI * (item.getIndex() + 1) / size));\n-                int y = (int) Math.round((parent == null ? origY : parent.getY())\n-                        + 100 * Math.sin(Math.PI + Math.PI * (item.getIndex() + 1) / size));\n+                    private static final long serialVersionUID = 6978621871488360381L;\n \n-                final TopologyNode topologynode = new TopologyNode(\n-                        Long.valueOf(conn.getKey()), conn.getDisplayName(), TopologyNode.Kind.CONNECTOR);\n-                topologynode.setConnectinDisplayName(conn.getBundleName());\n-                topologynode.setX(x);\n-                topologynode.setY(y);\n+                    @Override\n+                    protected void populateItem(final ListItem<ConnInstanceTO> item) {\n+                        final ConnInstanceTO conn = item.getModelObject();\n \n-                connectors.put(Long.class.cast(topologynode.getKey()), topologynode);\n+                        final TopologyNode topologynode = new TopologyNode(\n+                                Long.valueOf(conn.getKey()), conn.getDisplayName(), TopologyNode.Kind.CONNECTOR);\n \n-                item.add(topologyNodePanel(\"conn\", topologynode));\n+                        // Define the parent note\n+                        final TopologyNode parent = servers.get(conn.getLocation());\n \n-                if (conn.getLocation().startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n-                    final Map<Serializable, TopologyNode> remoteConnections;\n+                        // Set the position\n+                        int kx = size >= 6 ? 800 : (130 * size);\n \n-                    if (connections.containsKey(conn.getLocation())) {\n-                        remoteConnections = connections.get(conn.getLocation());\n-                    } else {\n-                        remoteConnections = new HashMap<>();\n-                        connections.put(conn.getLocation(), remoteConnections);\n+                        final double hpos;\n+                        if (conn.getLocation().startsWith(CONNECTOR_SERVER_LOCATION_PREFIX)) {\n+                            hpos = Math.PI;\n+                        } else {\n+                            hpos = 0.0;\n+                        }\n+\n+                        int x = (int) Math.round((parent == null ? origX : parent.getX())\n+                                + kx * Math.cos(hpos + Math.PI * (item.getIndex() + 1) / size));\n+                        int y = (int) Math.round((parent == null ? origY : parent.getY())\n+                                + 100 * Math.sin(hpos + Math.PI * (item.getIndex() + 1) / size));\n+\n+                        topologynode.setConnectionDisplayName(conn.getBundleName());\n+                        topologynode.setX(x);\n+                        topologynode.setY(y);\n+\n+                        connectors.put(Long.class.cast(topologynode.getKey()), topologynode);\n+                        item.add(topologyNodePanel(\"conn\", topologynode));\n+\n+                        // Update connections\n+                        final Map<Serializable, TopologyNode> remoteConnections;\n+\n+                        if (connections.containsKey(conn.getLocation())) {\n+                            remoteConnections = connections.get(conn.getLocation());\n+                        } else {\n+                            remoteConnections = new HashMap<>();\n+                            connections.put(conn.getLocation(), remoteConnections);\n+                        }\n+                        remoteConnections.put(conn.getKey(), topologynode);\n                     }\n-                    remoteConnections.put(conn.getKey(), topologynode);\n-                } else {\n-                    syncopeConnections.put(conn.getKey(), topologynode);\n-                }\n+                };\n+\n+                conns.setOutputMarkupId(true);\n+                item.add(conns);\n             }\n         };\n \n-        conn2.setOutputMarkupId(true);\n-        add(conn2);\n+        conns.setOutputMarkupId(true);\n+        add(conns);\n         // -----------------------------------------\n \n         // -----------------------------------------\n@@ -392,8 +416,6 @@ protected void populateItem(final ListItem<ConnInstanceTO> item) {\n         for (ResourceTO resourceTO : resModel.getObject()) {\n             final TopologyNode topologynode = new TopologyNode(\n                     resourceTO.getKey(), resourceTO.getKey(), TopologyNode.Kind.RESOURCE);\n-            topologynode.setX(origX);\n-            topologynode.setY(origY);\n \n             final Map<Serializable, TopologyNode> remoteConnections;\n \n@@ -422,37 +444,37 @@ protected void populateItem(final ListItem<Long> item) {\n                 final ListView<TopologyNode> innerListView = new ListView<TopologyNode>(\"resources\",\n                         new ArrayList<>(connections.get(connectorId).values())) {\n \n-                    private static final long serialVersionUID = 1L;\n-\n-                    private final int size = getModelObject().size() + 1;\n+                            private static final long serialVersionUID = 1L;\n \n-                    @Override\n-                    protected void populateItem(final ListItem<TopologyNode> item) {\n-                        final TopologyNode topologynode = item.getModelObject();\n-                        final TopologyNode parent = connectors.get(connectorId);\n+                            private final int size = getModelObject().size() + 1;\n \n-                        final double k;\n+                            @Override\n+                            protected void populateItem(final ListItem<TopologyNode> item) {\n+                                final TopologyNode topologynode = item.getModelObject();\n+                                final TopologyNode parent = connectors.get(connectorId);\n \n-                        if (parent == null || parent.getY() < syncopeTopologyNode.getY()) {\n-                            k = Math.PI;\n-                        } else {\n-                            k = 0.0;\n-                        }\n+                                // Set position\n+                                int kx = size >= 16 ? 800 : (48 * size);\n+                                int ky = size < 4 ? 100 : size < 6 ? 350 : 750;\n \n-                        int kx = size >= 16 ? 800 : (48 * size);\n-                        int ky = size < 4 ? 100 : size < 6 ? 350 : 750;\n+                                final double hpos;\n+                                if (parent == null || parent.getY() < syncopeTopologyNode.getY()) {\n+                                    hpos = Math.PI;\n+                                } else {\n+                                    hpos = 0.0;\n+                                }\n \n-                        int x = (int) Math.round((parent == null ? origX : parent.getX())\n-                                + kx * Math.cos(k + Math.PI * (item.getIndex() + 1) / size));\n-                        int y = (int) Math.round((parent == null ? origY : parent.getY())\n-                                + ky * Math.sin(k + Math.PI * (item.getIndex() + 1) / size));\n+                                int x = (int) Math.round((parent == null ? origX : parent.getX())\n+                                        + kx * Math.cos(hpos + Math.PI * (item.getIndex() + 1) / size));\n+                                int y = (int) Math.round((parent == null ? origY : parent.getY())\n+                                        + ky * Math.sin(hpos + Math.PI * (item.getIndex() + 1) / size));\n \n-                        topologynode.setX(x);\n-                        topologynode.setY(y);\n+                                topologynode.setX(x);\n+                                topologynode.setY(y);\n \n-                        item.add(topologyNodePanel(\"res\", topologynode));\n-                    }\n-                };\n+                                item.add(topologyNodePanel(\"res\", topologynode));\n+                            }\n+                        };\n \n                 innerListView.setOutputMarkupId(true);\n                 item.add(innerListView);\n@@ -466,7 +488,7 @@ protected void populateItem(final ListItem<TopologyNode> item) {\n         // -----------------------------------------\n         // Create connections\n         // -----------------------------------------\n-        final WebMarkupContainer jsPlace = new WebMarkupContainer(\"jsPlace\");\n+        final WebMarkupContainer jsPlace = new WebMarkupContainerNoVeil(\"jsPlace\");\n         jsPlace.setOutputMarkupId(true);\n         add(jsPlace);\n \n@@ -501,6 +523,24 @@ protected void onTimer(final AjaxRequestTarget target) {\n             }\n         });\n         // -----------------------------------------\n+\n+        newlyCreatedContainer = new WebMarkupContainer(\"newlyCreatedContainer\");\n+        newlyCreatedContainer.setOutputMarkupId(true);\n+        add(newlyCreatedContainer);\n+\n+        newlyCreated = new ListView<TopologyNode>(\"newlyCreated\", new ArrayList<TopologyNode>()) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<TopologyNode> item) {\n+                item.add(topologyNodePanel(\"el\", item.getModelObject()));\n+            }\n+        };\n+        newlyCreated.setOutputMarkupId(true);\n+        newlyCreated.setReuseItems(true);\n+\n+        newlyCreatedContainer.add(newlyCreated);\n     }\n \n     private List<String> createConnections(final Map<Serializable, Map<Serializable, TopologyNode>> targets) {\n@@ -517,9 +557,9 @@ private List<String> createConnections(final Map<Serializable, Map<Serializable,\n         return list;\n     }\n \n-    private Panel topologyNodePanel(final String id, final TopologyNode node) {\n+    private TopologyNodePanel topologyNodePanel(final String id, final TopologyNode node) {\n \n-        final Panel panel = new TopologyNodePanel(id, node, getPageReference(), modal);\n+        final TopologyNodePanel panel = new TopologyNodePanel(id, node, getPageReference(), modal);\n         panel.setMarkupId(String.valueOf(node.getKey()));\n         panel.setOutputMarkupId(true);\n \n@@ -538,24 +578,43 @@ public void renderHead(final Component component, final IHeaderResponse response\n     }\n \n     @Override\n+    @SuppressWarnings(\"unchecked\")\n     public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n \n-        if (event.getPayload() instanceof ResourceCreateEvent) {\n-            final ResourceCreateEvent resourceCreateEvent = ResourceCreateEvent.class.cast(event.getPayload());\n+        if (event.getPayload() instanceof CreateEvent) {\n+            final CreateEvent resourceCreateEvent = CreateEvent.class.cast(event.getPayload());\n+\n+            final TopologyNode node = new TopologyNode(\n+                    resourceCreateEvent.getKey(),\n+                    resourceCreateEvent.getDisplayName(),\n+                    resourceCreateEvent.getKind());\n+\n+            ((List<TopologyNode>) newlyCreated.getModelObject()).add(node);\n+            resourceCreateEvent.getTarget().add(newlyCreatedContainer);\n+\n             resourceCreateEvent.getTarget().appendJavaScript(String.format(\n                     \"window.Wicket.WebSocket.send('\"\n                     + \"{\\\"kind\\\":\\\"%s\\\",\\\"target\\\":\\\"%s\\\",\\\"source\\\":\\\"%s\\\",\\\"scope\\\":\\\"%s\\\"}\"\n                     + \"');\",\n                     SupportedOperation.ADD_ENDPOINT,\n-                    resourceCreateEvent.getResourceTO().getKey(),\n-                    resourceCreateEvent.getResourceTO().getConnector(),\n-                    TopologyNode.Kind.RESOURCE));\n+                    resourceCreateEvent.getKey(),\n+                    resourceCreateEvent.getParent(),\n+                    resourceCreateEvent.getKind()));\n         }\n     }\n \n-    @Override\n-    public String getAjaxIndicatorMarkupId() {\n-        return StringUtils.EMPTY;\n+    private static class WebMarkupContainerNoVeil extends WebMarkupContainer implements IAjaxIndicatorAware {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        public WebMarkupContainerNoVeil(final String id) {\n+            super(id);\n+        }\n+\n+        @Override\n+        public String getAjaxIndicatorMarkupId() {\n+            return StringUtils.EMPTY;\n+        }\n     }\n }"},{"sha":"ab727a0dc6037cadc50cc2dc885d96a8cf4451ab","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyNode.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNode.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -27,6 +27,7 @@ public enum Kind {\n         RESOURCE,\n         CONNECTOR,\n         CONNECTOR_SERVER,\n+        FS_PATH,\n         SYNCOPE\n \n     }\n@@ -76,8 +77,8 @@ public String getConnectionDisplayName() {\n         return connectionDisplayName;\n     }\n \n-    public void setConnectinDisplayName(final String connectinDisplayName) {\n-        this.connectionDisplayName = connectinDisplayName;\n+    public void setConnectionDisplayName(final String connectionDisplayName) {\n+        this.connectionDisplayName = connectionDisplayName;\n     }\n \n     public Kind getKind() {"},{"sha":"3dc7c481c9e8538e1a36efff23dc9e296f4f4ca8","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyNodePanel.java","status":"modified","additions":35,"deletions":12,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -27,11 +27,13 @@\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.behavior.AttributeAppender;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Fragment;\n@@ -72,20 +74,29 @@ public TopologyNodePanel(\n         switch (node.getKind()) {\n             case SYNCOPE:\n                 title = \"\";\n-                add(getSyncopeFragment(node, pageRef));\n+                add(getSyncopeFragment());\n+                add(new AttributeAppender(\"class\", \"topology_root\", \" \"));\n                 break;\n             case CONNECTOR_SERVER:\n                 title = node.getDisplayName();\n-                add(getConnectorServerFragment(node, pageRef));\n+                add(getLocationFragment(node, pageRef));\n+                add(new AttributeAppender(\"class\", \"topology_cs\", \" \"));\n+                break;\n+            case FS_PATH:\n+                title = node.getDisplayName();\n+                add(getLocationFragment(node, pageRef));\n+                add(new AttributeAppender(\"class\", \"topology_cs\", \" \"));\n                 break;\n             case CONNECTOR:\n                 title = (StringUtils.isBlank(node.getConnectionDisplayName())\n                         ? \"\" : node.getConnectionDisplayName() + \":\") + node.getDisplayName();\n                 add(getConnectorFragment(node, pageRef));\n+                add(new AttributeAppender(\"class\", \"topology_conn\", \" \"));\n                 break;\n             default:\n                 title = node.getDisplayName().length() > 20 ? node.getDisplayName() : \"\";\n                 add(getResurceFragment(node, pageRef));\n+                add(new AttributeAppender(\"class\", \"topology_res\", \" \"));\n         }\n \n         if (StringUtils.isNotEmpty(title)) {\n@@ -97,20 +108,34 @@ public TopologyNodePanel(\n         this.modal = modal;\n     }\n \n-    private Fragment getSyncopeFragment(final TopologyNode node, final PageReference pageRef) {\n-        final Fragment fragment = new Fragment(\"actions\", \"syncopeActions\", this);\n-        fragment.setOutputMarkupId(true);\n-        return fragment;\n+    private Fragment getSyncopeFragment() {\n+        return new Fragment(\"actions\", \"syncopeActions\", this);\n     }\n \n-    private Fragment getConnectorServerFragment(final TopologyNode node, final PageReference pageRef) {\n-        final Fragment fragment = new Fragment(\"actions\", \"syncopeActions\", this);\n+    private Fragment getLocationFragment(final TopologyNode node, final PageReference pageRef) {\n+        final Fragment fragment = new Fragment(\"actions\", \"locationActions\", this);\n+\n+        final AjaxLink<String> create = new ClearIndicatingAjaxLink<String>(\"create\", pageRef) {\n+\n+            private static final long serialVersionUID = 3776750333491622263L;\n+\n+            @Override\n+            public void onClickInternal(final AjaxRequestTarget target) {\n+\n+                final ConnInstanceTO connectorTO = new ConnInstanceTO();\n+                connectorTO.setLocation(node.getKey().toString());\n+                modal.setContent(new ConnectorModal(modal, pageRef, connectorTO));\n+                modal.setTitle(MessageFormat.format(getString(\"connector.new\"), node.getKey()));\n+                modal.show(target);\n+            }\n+        };\n+        fragment.add(create);\n+\n         return fragment;\n     }\n \n     private Fragment getConnectorFragment(final TopologyNode node, final PageReference pageRef) {\n-        final Fragment fragment = new Fragment(\"actions\", \"connectorWithNoResourceActions\", this);\n-        fragment.setOutputMarkupId(true);\n+        final Fragment fragment = new Fragment(\"actions\", \"connectorActions\", this);\n \n         final AjaxLink<String> delete = new ClearIndicatingAjaxLink<String>(\"delete\", pageRef) {\n \n@@ -139,9 +164,7 @@ public void onClickInternal(final AjaxRequestTarget target) {\n                 final ResourceTO resourceTO = new ResourceTO();\n                 resourceTO.setConnector(Long.class.cast(node.getKey()));\n                 resourceTO.setConnectorDisplayName(node.getDisplayName());\n-\n                 modal.setContent(new ResourceModal(modal, pageRef, resourceTO, true));\n-\n                 modal.setTitle(getString(\"resource.new\"));\n                 modal.show(target);\n             }"},{"sha":"41643ea64a923e7c7d05e27c8812bbbcfc1dd225","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AbstractFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -36,5 +36,5 @@ public AbstractFieldPanel(final String id, final IModel<T> model) {\n         super(id, model);\n     }\n \n-    public abstract AbstractFieldPanel setModelObject(T object);\n+    public abstract AbstractFieldPanel<T> setModelObject(T object);\n }"},{"sha":"ec405a253c586cad14142cdb053ad51aa8e9c6ba","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":20,"deletions":3,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -21,14 +21,27 @@\n import java.io.Serializable;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n \n-public abstract class ActionLink implements Serializable {\n+public abstract class ActionLink<T> implements Serializable {\n \n     private static final long serialVersionUID = 7031329706998320639L;\n \n     private boolean reloadFeedbackPanel = true;\n \n+    private T modelObject;\n+\n+    public ActionLink() {\n+    }\n+\n+    public ActionLink(final T modelObject) {\n+        this.modelObject = modelObject;\n+    }\n+\n     public enum ActionType {\n \n+        MAPPING(\"update\"),\n+        ACCOUNT_LINK(\"update\"),\n+        RESET_TIME(\"update\"),\n+        CLONE(\"create\"),\n         CREATE(\"create\"),\n         EDIT(\"read\"),\n         USER_TEMPLATE(\"read\"),\n@@ -69,7 +82,11 @@ public String getActionId() {\n         }\n     }\n \n-    public abstract void onClick(final AjaxRequestTarget target);\n+    public T getModelObject() {\n+        return modelObject;\n+    }\n+\n+    public abstract void onClick(final AjaxRequestTarget target, final T modelObject);\n \n     public void postClick() {\n     }\n@@ -78,7 +95,7 @@ public boolean feedbackPanelAutomaticReload() {\n         return reloadFeedbackPanel;\n     }\n \n-    public ActionLink feedbackPanelAutomaticReload(final boolean reloadFeedbackPanel) {\n+    public ActionLink<T> feedbackPanelAutomaticReload(final boolean reloadFeedbackPanel) {\n         this.reloadFeedbackPanel = reloadFeedbackPanel;\n         return this;\n     }"},{"sha":"868f6a23d58cc823f6f9de4710b06c1dba52e420","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":210,"deletions":51,"changes":261,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -18,6 +18,11 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.IndicatingOnConfirmAjaxLink;\n import org.apache.wicket.PageReference;\n@@ -26,24 +31,34 @@\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n \n /**\n  * This empty class must exist because there not seems to be alternative to provide specialized HTML for edit links.\n+ *\n+ * @param <T> model object type.\n  */\n-public class ActionLinksPanel extends Panel {\n+public final class ActionLinksPanel<T extends Serializable> extends Panel {\n \n     private static final long serialVersionUID = 322966537010107771L;\n \n     private final PageReference pageRef;\n \n-    public ActionLinksPanel(final String componentId, final IModel<?> model, final PageReference pageRef) {\n+    private final IModel<T> model;\n+\n+    private ActionLinksPanel(final String componentId, final IModel<T> model, final PageReference pageRef) {\n         super(componentId, model);\n+        this.model = model;\n         this.pageRef = pageRef;\n \n         super.add(new Fragment(\"panelClaim\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelManageResources\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelManageUsers\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelManageGroups\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelMapping\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelAccountLink\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelResetTime\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelClone\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelReset\", \"emptyFragment\", this));\n@@ -68,29 +83,13 @@ public ActionLinksPanel(final String componentId, final IModel<?> model, final P\n         super.add(new Fragment(\"panelProvision\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelZoomIn\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelZoomOut\", \"emptyFragment\", this));\n-\n-    }\n-\n-    public ActionLinksPanel add(\n-            final ActionLink link, final ActionLink.ActionType type, final String entitlements) {\n-\n-        return addWithRoles(link, type, entitlements, true);\n     }\n \n-    public ActionLinksPanel add(\n-            final ActionLink link, final ActionLink.ActionType type, final String entitlement, final boolean enabled) {\n-\n-        return addWithRoles(link, type, entitlement, enabled);\n-    }\n-\n-    public ActionLinksPanel addWithRoles(\n-            final ActionLink link, final ActionLink.ActionType type, final String entitlements) {\n-\n-        return addWithRoles(link, type, entitlements, true);\n-    }\n-\n-    public ActionLinksPanel addWithRoles(\n-            final ActionLink link, final ActionLink.ActionType type, final String entitlements, final boolean enabled) {\n+    public ActionLinksPanel<T> add(\n+            final ActionLink<T> link,\n+            final ActionLink.ActionType type,\n+            final String entitlements,\n+            final boolean enabled) {\n \n         Fragment fragment = null;\n \n@@ -105,7 +104,7 @@ public ActionLinksPanel addWithRoles(\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -119,7 +118,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -133,7 +132,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -147,7 +146,63 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n+                    }\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                break;\n+\n+            case MAPPING:\n+                fragment = new Fragment(\"panelMapping\", \"fragmentMapping\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"mappingLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                break;\n+\n+            case ACCOUNT_LINK:\n+                fragment = new Fragment(\"panelAccountLink\", \"fragmentAccountLink\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"accountLinkLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                break;\n+\n+            case RESET_TIME:\n+                fragment = new Fragment(\"panelResetTime\", \"fragmentResetTime\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"resetTimeLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+                }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n+                break;\n+\n+            case CLONE:\n+                fragment = new Fragment(\"panelClone\", \"fragmentClone\", this);\n+\n+                fragment.addOrReplace(new ClearIndicatingAjaxLink<Void>(\"cloneLink\", pageRef) {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    protected void onClickInternal(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -161,7 +216,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -175,7 +230,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 });\n                 break;\n@@ -189,7 +244,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -203,7 +258,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -217,7 +272,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -231,7 +286,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -245,7 +300,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -259,7 +314,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -273,7 +328,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -287,7 +342,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n \n@@ -302,7 +357,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n \n@@ -317,7 +372,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -331,7 +386,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -345,7 +400,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -359,7 +414,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -373,7 +428,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -388,7 +443,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                             @Override\n                             protected void onClickInternal(final AjaxRequestTarget target) {\n-                                link.onClick(target);\n+                                link.onClick(target, model.getObject());\n                             }\n                         }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -402,7 +457,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -417,7 +472,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                             @Override\n                             protected void onClickInternal(final AjaxRequestTarget target) {\n-                                link.onClick(target);\n+                                link.onClick(target, model.getObject());\n                             }\n                         }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -431,7 +486,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -446,7 +501,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                             @Override\n                             protected void onClickInternal(final AjaxRequestTarget target) {\n-                                link.onClick(target);\n+                                link.onClick(target, model.getObject());\n                             }\n                         }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -460,7 +515,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -473,7 +528,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -486,7 +541,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onClickInternal(final AjaxRequestTarget target) {\n-                        link.onClick(target);\n+                        link.onClick(target, model.getObject());\n                     }\n                 }.feedbackPanelAutomaticReload(link.feedbackPanelAutomaticReload()));\n                 break;\n@@ -521,6 +576,22 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelManageGroups\", \"emptyFragment\", this));\n                 break;\n \n+            case MAPPING:\n+                super.addOrReplace(new Fragment(\"panelMapping\", \"emptyFragment\", this));\n+                break;\n+\n+            case ACCOUNT_LINK:\n+                super.addOrReplace(new Fragment(\"panelAccountLink\", \"emptyFragment\", this));\n+                break;\n+\n+            case RESET_TIME:\n+                super.addOrReplace(new Fragment(\"panelResetTime\", \"emptyFragment\", this));\n+                break;\n+\n+            case CLONE:\n+                super.addOrReplace(new Fragment(\"panelClone\", \"emptyFragment\", this));\n+                break;\n+\n             case CREATE:\n                 super.addOrReplace(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n                 break;\n@@ -606,4 +677,92 @@ public void remove(final ActionLink.ActionType type) {\n             // do nothing\n         }\n     }\n+\n+    public static <T extends Serializable> Builder<T> builder(final PageReference pageRef) {\n+        return new Builder<T>(pageRef);\n+    }\n+\n+    /**\n+     * ActionLinksPanel builder.\n+     *\n+     * @param <T> model object type.\n+     */\n+    public static final class Builder<T extends Serializable> implements Serializable {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        private final Map<ActionLink.ActionType, Triple<ActionLink<T>, String, Boolean>> actions = new HashMap<>();\n+\n+        private final PageReference pageRef;\n+\n+        private Builder(final PageReference pageRef) {\n+            this.pageRef = pageRef;\n+        }\n+\n+        public Builder<T> add(\n+                final ActionLink<T> link,\n+                final ActionLink.ActionType type,\n+                final String entitlements) {\n+\n+            return addWithRoles(link, type, entitlements, true);\n+        }\n+\n+        public Builder<T> add(\n+                final ActionLink<T> link,\n+                final ActionLink.ActionType type,\n+                final String entitlement,\n+                final boolean enabled) {\n+\n+            return addWithRoles(link, type, entitlement, enabled);\n+        }\n+\n+        public Builder<T> addWithRoles(\n+                final ActionLink<T> link,\n+                final ActionLink.ActionType type,\n+                final String entitlements) {\n+\n+            return addWithRoles(link, type, entitlements, true);\n+        }\n+\n+        public Builder<T> addWithRoles(\n+                final ActionLink<T> link,\n+                final ActionLink.ActionType type,\n+                final String entitlements,\n+                final boolean enabled) {\n+            actions.put(type, Triple.of(link, entitlements, enabled));\n+            return this;\n+        }\n+\n+        /**\n+         * Use this method to build an ation panel without any model reference.\n+         *\n+         * @param id Component id.\n+         * @return Action link panel.\n+         */\n+        public ActionLinksPanel<T> build(final String id) {\n+            return build(id, null);\n+        }\n+\n+        /**\n+         * Use this methos to build an action panel including a model reference.\n+         *\n+         * @param id Component id.\n+         * @param modelObject model object.\n+         * @return Action link panel.\n+         */\n+        public ActionLinksPanel<T> build(final String id, final T modelObject) {\n+            final ActionLinksPanel<T> panel = modelObject == null\n+                    ? new ActionLinksPanel<T>(id, new Model<T>(), this.pageRef)\n+                    : new ActionLinksPanel<T>(id, new Model<T>(modelObject), this.pageRef);\n+\n+            for (Entry<ActionLink.ActionType, Triple<ActionLink<T>, String, Boolean>> action : actions.entrySet()) {\n+                panel.add(\n+                        action.getValue().getLeft(),\n+                        action.getKey(),\n+                        action.getValue().getMiddle(),\n+                        action.getValue().getRight());\n+            }\n+            return panel;\n+        }\n+    }\n }"},{"sha":"dc7bfec4783183ef8a6d527c917c94f81573553f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/CheckBoxMultipleChoiceFieldPanel.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -19,6 +19,9 @@\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n import java.util.List;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.markup.html.form.AbstractChoice;\n \n import org.apache.wicket.markup.html.form.CheckBoxMultipleChoice;\n import org.apache.wicket.model.IModel;\n@@ -35,12 +38,20 @@ public CheckBoxMultipleChoiceFieldPanel(\n         super(id, model);\n \n         field = new CheckBoxMultipleChoice<E>(\"checkBoxMultipleChoice\", model, choices);\n-        add(field);\n+        add(field.\n+                setPrefix(\"<div class=\\\"checkbox\\\">\").\n+                setSuffix(\"</div>\").\n+                setLabelPosition(AbstractChoice.LabelPosition.WRAP_AFTER));\n     }\n \n     @Override\n     public AbstractFieldPanel<List<E>> setModelObject(final List<E> object) {\n         field.setModelObject(object);\n         return this;\n     }\n+\n+    @Override\n+    public Component add(final Behavior... behaviors) {\n+        return field.add(behaviors);\n+    }\n }"},{"sha":"d9a42c186c2af8b8fa1bc07c28a7c9655c3ef910","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"added","additions":125,"deletions":0,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.wizard.Wizard;\n+import org.apache.wicket.request.cycle.RequestCycle;\n+\n+public abstract class AjaxWizard<T extends Serializable> extends Wizard {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final PageReference pageRef;\n+\n+    private final T item;\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param item\n+     * @param pageRef Caller page reference.\n+     */\n+    public AjaxWizard(final String id, final T item, final PageReference pageRef) {\n+        super(id);\n+        this.item = item;\n+        this.pageRef = pageRef;\n+        setOutputMarkupId(true);\n+    }\n+\n+    @Override\n+    protected Component newButtonBar(final String id) {\n+        return new AjaxWizardButtonBar(id, this);\n+    }\n+\n+    protected abstract void onCancelInternal();\n+\n+    protected abstract void onApplyInternal();\n+\n+    /**\n+     * @see org.apache.wicket.extensions.wizard.Wizard#onCancel()\n+     */\n+    @Override\n+    public final void onCancel() {\n+        onCancelInternal();\n+        send(pageRef.getPage(), Broadcast.DEPTH,\n+                new NewItemCancelEvent<T>(item, RequestCycle.get().find(AjaxRequestTarget.class)));\n+    }\n+\n+    /**\n+     * @see org.apache.wicket.extensions.wizard.Wizard#onFinish()\n+     */\n+    @Override\n+    public final void onFinish() {\n+        onApplyInternal();\n+        send(pageRef.getPage(), Broadcast.DEPTH,\n+                new NewItemFinishEvent<T>(item, RequestCycle.get().find(AjaxRequestTarget.class)));\n+    }\n+\n+    public T getItem() {\n+        return item;\n+    }\n+\n+    public abstract static class NewItemEvent<T> {\n+        private final T item;\n+\n+        private final AjaxRequestTarget target;\n+\n+        public NewItemEvent(final T item, final AjaxRequestTarget target) {\n+            this.item = item;\n+            this.target = target;\n+        }\n+\n+        public T getItem() {\n+            return item;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n+\n+    public static class NewItemCancelEvent<T> extends NewItemEvent<T> {\n+\n+        public NewItemCancelEvent(final T item, final AjaxRequestTarget target) {\n+            super(item, target);\n+        }\n+\n+    }\n+\n+    public static class NewItemFinishEvent<T> extends NewItemEvent<T> {\n+\n+        public NewItemFinishEvent(final T item, final AjaxRequestTarget target) {\n+            super(item, target);\n+        }\n+\n+    }\n+\n+    /**\n+     *\n+     * @return\n+     */\n+    @Override\n+    public AjaxWizard<T> clone() {\n+        return SerializationUtils.clone(this);\n+    }\n+}"},{"sha":"a581954a46c28fe6d641b2b944f8344fb884c338","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardButton.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButton.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButton.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButton.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.wizard.IWizard;\n+import org.apache.wicket.extensions.wizard.IWizardModel;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public abstract class AjaxWizardButton extends AjaxButton {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final IWizard wizard;\n+\n+    public AjaxWizardButton(\n+            final String id,\n+            final IWizard wizard,\n+            final Form<?> form,\n+            final String labelResourceKey,\n+            final boolean formprocessing) {\n+        super(id, form);\n+        this.setLabel(new ResourceModel(labelResourceKey));\n+        this.wizard = wizard;\n+        setDefaultFormProcessing(formprocessing);\n+    }\n+\n+    public AjaxWizardButton(final String id, final IWizard wizard, final String labelResourceKey) {\n+        this(id, wizard, null, labelResourceKey, true);\n+    }\n+\n+    public AjaxWizardButton(\n+            final String id, final IWizard wizard, final String labelResourceKey, final boolean formprocessing) {\n+        this(id, wizard, null, labelResourceKey, formprocessing);\n+    }\n+\n+    protected final IWizard getWizard() {\n+        return wizard;\n+    }\n+\n+    protected final IWizardModel getWizardModel() {\n+        return getWizard().getWizardModel();\n+    }\n+\n+    @Override\n+    protected final void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        onClick(target, form);\n+    }\n+\n+    protected abstract void onClick(final AjaxRequestTarget target, final Form<?> form);\n+}"},{"sha":"4f31a26afb98ca6eb94efb2ad71b52c8d210510e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardButtonBar.java","status":"added","additions":111,"deletions":0,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardButtonBar.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.wizard.IWizardModel;\n+import org.apache.wicket.extensions.wizard.IWizardStep;\n+import org.apache.wicket.extensions.wizard.Wizard;\n+import org.apache.wicket.extensions.wizard.WizardButtonBar;\n+import org.apache.wicket.markup.html.form.Form;\n+\n+public class AjaxWizardButtonBar extends WizardButtonBar {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public AjaxWizardButtonBar(final String id, final Wizard wizard) {\n+        super(id, wizard);\n+\n+        addOrReplace(new AjaxWizardButton(\"next\", wizard, \"next\") {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onClick(final AjaxRequestTarget target, final Form<?> form) {\n+                IWizardModel wizardModel = getWizardModel();\n+                IWizardStep step = wizardModel.getActiveStep();\n+\n+                // let the step apply any state\n+                step.applyState();\n+\n+                // if the step completed after applying the state, move the model onward\n+                if (step.isComplete()) {\n+                    wizardModel.next();\n+                } else {\n+                    error(getLocalizer().getString(\n+                            \"org.apache.wicket.extensions.wizard.NextButton.step.did.not.complete\", this));\n+                }\n+\n+                target.add(wizard);\n+            }\n+\n+            @Override\n+            public final boolean isEnabled() {\n+                return super.isEnabled() && getWizardModel().isNextAvailable();\n+            }\n+        });\n+\n+        addOrReplace(new AjaxWizardButton(\"previous\", wizard, \"prev\", false) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onClick(final AjaxRequestTarget target, final Form<?> form) {\n+                getWizardModel().previous();\n+                target.add(wizard);\n+            }\n+\n+            @Override\n+            public final boolean isEnabled() {\n+                return super.isEnabled() && getWizardModel().isPreviousAvailable();\n+            }\n+        });\n+\n+        addOrReplace(new AjaxWizardButton(\"cancel\", wizard, \"cancel\", false) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onClick(final AjaxRequestTarget target, final Form<?> form) {\n+                getWizardModel().cancel();\n+                target.add(wizard);\n+            }\n+\n+            @Override\n+            public final boolean isEnabled() {\n+                return true;\n+            }\n+        });\n+\n+        addOrReplace(new AjaxWizardButton(\"finish\", wizard, \"finish\") {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected void onClick(final AjaxRequestTarget target, final Form<?> form) {\n+                getWizardModel().finish();\n+                target.add(wizard);\n+            }\n+\n+            @Override\n+            public final boolean isEnabled() {\n+                final IWizardStep activeStep = getWizardModel().getActiveStep();\n+                return (activeStep != null) && getWizardModel().isLastStep(activeStep) && super.isEnabled();\n+            }\n+        });\n+    }\n+\n+}"},{"sha":"6c3c8e0abc9fcc530fad74b2dd5a5b6a65ffe5ad","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/ProvisionWizard.java","status":"added","additions":123,"deletions":0,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard.java?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,123 @@\n+/*\n+ * Copyright 2015 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.syncope.client.console.wizards;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.panels.ResourceMappingPanel;\n+import org.apache.syncope.common.lib.to.ProvisionTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class ProvisionWizard extends AjaxWizard<ProvisionTO> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final ResourceTO resourceTO;\n+\n+    /**\n+     * The object type specification step.\n+     */\n+    private final class ObjectType extends WizardStep {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        /**\n+         * Construct.\n+         */\n+        public ObjectType() {\n+            super(new ResourceModel(\"type.title\", StringUtils.EMPTY),\n+                    new ResourceModel(\"type.summary\", StringUtils.EMPTY), new Model<ProvisionTO>(getItem()));\n+\n+            add(new TextField<String>(\n+                    \"type\", new PropertyModel<String>(getItem(), \"anyType\")).setRequired(true));\n+            add(new TextField<String>(\n+                    \"class\", new PropertyModel<String>(getItem(), \"objectClass\")).setRequired(true));\n+        }\n+    }\n+\n+    /**\n+     * Mapping definition step.\n+     */\n+    private final class Mapping extends WizardStep {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        /**\n+         * Construct.\n+         */\n+        public Mapping() {\n+            setTitleModel(new ResourceModel(\"mapping.title\", \"Mapping\"));\n+            setSummaryModel(new StringResourceModel(\"mapping.summary\", this, new Model<ProvisionTO>(getItem())));\n+\n+            add(new ResourceMappingPanel(\"mapping\", resourceTO, getItem()));\n+        }\n+    }\n+\n+    /**\n+     * AccountLink specification step.\n+     */\n+    private final class AccountLink extends WizardStep {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        /**\n+         * Construct.\n+         */\n+        public AccountLink() {\n+            super(new ResourceModel(\"link.title\", StringUtils.EMPTY),\n+                    new ResourceModel(\"link.summary\", StringUtils.EMPTY));\n+        }\n+    }\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param id The component id\n+     * @param resourceTO external resource to be updated.\n+     * @param pageRef Caller page reference.\n+     */\n+    public ProvisionWizard(final String id, final ResourceTO resourceTO, final PageReference pageRef) {\n+        super(id, new ProvisionTO(), pageRef);\n+        this.resourceTO = resourceTO;\n+\n+        setDefaultModel(new CompoundPropertyModel<ProvisionWizard>(this));\n+\n+        final WizardModel model = new WizardModel();\n+        model.add(new ObjectType());\n+        model.add(new Mapping());\n+        model.add(new AccountLink());\n+\n+        init(model);\n+    }\n+\n+    @Override\n+    protected void onCancelInternal() {\n+        // d nothing\n+    }\n+\n+    @Override\n+    protected void onApplyInternal() {\n+        // do nothing\n+    }\n+}"},{"sha":"484382ebfd5ebc49acd2feb7be136b9273458693","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":72,"deletions":67,"changes":139,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -17,129 +17,134 @@\n  * under the License.\n  */\n .feedbackPanel {\n-    padding-left: 0px;\n-    text-align: center;\n+  padding-left: 0px;\n+  text-align: center;\n }\n \n .notificationpanel_row {  \n-    list-style-type: none;\n+  list-style-type: none;\n }  \n \n .notificationpanel_row span {  \n-    border:0 none;\n+  border:0 none;\n }    \n pre {\n-    white-space: -moz-pre-wrap; /* Mozilla, supported since 1999 */\n-    white-space: -pre-wrap; /* Opera */\n-    white-space: -o-pre-wrap; /* Opera */\n-    white-space: pre-wrap; /* CSS3 - Text module (Candidate Recommendation) http://www.w3.org/TR/css3-text/#white-space */\n-    word-wrap: break-word; /* IE 5.5+ */\n+  white-space: -moz-pre-wrap; /* Mozilla, supported since 1999 */\n+  white-space: -pre-wrap; /* Opera */\n+  white-space: -o-pre-wrap; /* Opera */\n+  white-space: pre-wrap; /* CSS3 - Text module (Candidate Recommendation) http://www.w3.org/TR/css3-text/#white-space */\n+  word-wrap: break-word; /* IE 5.5+ */\n }\n \n #veil {\n-    display:none;\n-    position:absolute;\n-    top:0;\n-    left:0;\n-    z-index:99999;\n-    background-color:black;\n-    width:100%;\n-    height:20000px;\n-    color:white;\n-    opacity:0.3;\n-    filter:alpha(opacity=30);\n+  display:none;\n+  position:absolute;\n+  top:0;\n+  left:0;\n+  z-index:99999;\n+  background-color:black;\n+  width:100%;\n+  height:20000px;\n+  color:white;\n+  opacity:0.3;\n+  filter:alpha(opacity=30);\n }\n \n #veil img {\n-    position:absolute;\n-    top:300px;\n-    left:50%;\n-    margin-left:-75px;\n-    width:150px;\n+  position:absolute;\n+  top:300px;\n+  left:50%;\n+  margin-left:-75px;\n+  width:150px;\n }\n \n .block-sidebar {\n-    max-height: 100%; \n-    overflow: auto; \n-    padding-top: 90px; \n-    padding-bottom: 50px; \n-    position: fixed;\n+  max-height: 100%; \n+  overflow: auto; \n+  padding-top: 90px; \n+  padding-bottom: 50px; \n+  position: fixed;\n }\n \n .inner-control-sidebar {\n-    position: fixed; \n-    height: auto;\n+  position: fixed; \n+  height: auto;\n }\n \n .content-margin-layout {\n-    margin: 0px 230px 0px 0px !important;\n-    padding: 20px !important;\n+  margin: 0px 230px 0px 0px !important;\n+  padding: 20px !important;\n }\n \n .admin-content-page {\n-    padding: 20px;\n-    background: #ecf0f5\n+  padding: 20px;\n+  background: #ecf0f5\n }\n \n .realms {\n-    min-height: 554px\n+  min-height: 554px\n }\n \n .actions > li > a {\n-    padding-top: 5px !important;\n-    padding-bottom: 5px !important;\n+  padding-top: 5px !important;\n+  padding-bottom: 5px !important;\n+}\n+\n+div.listview-actions a{\n+  float:left; \n+  padding-right:8px\n }\n \n .block-header {\n-    position: fixed;\n-    width: 100%;\n-    top: 0;\n+  position: fixed;\n+  width: 100%;\n+  top: 0;\n }\n \n .block-footer {\n-    position: fixed;\n-    width: 100%;\n-    bottom: 0px;\n+  position: fixed;\n+  width: 100%;\n+  bottom: 0px;\n }\n \n .logo-pos {\n-    padding-top: 4px !important;\n-    overflow: visible !important;\n+  padding-top: 4px !important;\n+  overflow: visible !important;\n }\n \n .angle {\n-    border: medium none !important;\n-    cursor: pointer;\n-    display: inline-table !important;\n-    float: right;\n-    height: 30px;\n-    overflow: hidden;\n-    position: relative !important;\n-    right: 0;\n-    top: -30px;\n-    width: 25%;\n-    z-index: 3;\n+  border: medium none !important;\n+  cursor: pointer;\n+  display: inline-table !important;\n+  float: right;\n+  height: 30px;\n+  overflow: hidden;\n+  position: relative !important;\n+  right: 0;\n+  top: -30px;\n+  width: 25%;\n+  z-index: 3;\n }\n \n @media (min-width: 768px) {\n-    .main-header .logo {\n-\theight: 54px;\n-    }\n+  .main-header .logo {\n+    height: 54px;\n+  }\n }\n \n .w_caption h3 {\n-    font-size: 16px;\n+  font-size: 16px;\n }\n \n div.wicket-modal div.w_content_3 {\n-    border: 1px solid #eee;\n-    border-radius: 20px;\n-    padding: 5px;\n+  border: 1px solid #eee;\n+  border-radius: 20px;\n+  padding: 5px;\n }\n \n .tab-content {\n-    margin-bottom: 10px;\n-    margin-top: 10px;\n+  margin-bottom: 10px;\n+  margin-top: 10px;\n }\n \n a.help {"},{"sha":"9327b01ac8a12436d29fae3b374a08e5fc8b375b","filename":"client/console/src/main/resources/META-INF/resources/js/topology.js","status":"modified","additions":46,"deletions":44,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fjs%2Ftopology.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fjs%2Ftopology.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fjs%2Ftopology.js?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -107,18 +107,24 @@ var enabledEndpointStyle = {\n };\n \n window.disable = function(targetName){\n-    jsPlumb.select({target:targetName}).setPaintStyle(disabledConnectorStyle).setHoverPaintStyle(disabledConnectorHoverStyle);\n-    jsPlumb.selectEndpoints({element: [targetName]}).setPaintStyle(disabledEndpointStyle);\n+    jsPlumb.ready(function(){\n+\tjsPlumb.select({target:targetName}).setPaintStyle(disabledConnectorStyle).setHoverPaintStyle(disabledConnectorHoverStyle);\n+\tjsPlumb.selectEndpoints({element: [targetName]}).setPaintStyle(disabledEndpointStyle);\n+    });\n }\n \n window.enable = function(targetName){\n-    jsPlumb.select({target:targetName}).setPaintStyle(enabledConnectorStyle).setHoverPaintStyle(enabledConnectorHoverStyle);\n-    jsPlumb.selectEndpoints({element: [targetName]}).setPaintStyle(enabledEndpointStyle);\n+    jsPlumb.ready(function(){\n+\tjsPlumb.select({target:targetName}).setPaintStyle(enabledConnectorStyle).setHoverPaintStyle(enabledConnectorHoverStyle);\n+\tjsPlumb.selectEndpoints({element: [targetName]}).setPaintStyle(enabledEndpointStyle);\n+    });\n }\n \n window.failure = function(targetName){\n-    jsPlumb.select({target:targetName}).setPaintStyle(failedConnectorStyle).setHoverPaintStyle(failedConnectorHoverStyle);\n-    jsPlumb.selectEndpoints({element: [targetName]}).setPaintStyle(failedEndpointStyle);\n+    jsPlumb.ready(function(){\n+\tjsPlumb.select({target:targetName}).setPaintStyle(failedConnectorStyle).setHoverPaintStyle(failedConnectorHoverStyle);\n+\tjsPlumb.selectEndpoints({element: [targetName]}).setPaintStyle(failedEndpointStyle);\n+    });\n }\n \n window.unknown = function(targetName){\n@@ -221,61 +227,57 @@ window.zoomOut = function(el, instance, transformOrigin) {\n };\n \n window.connect = function(source, target, scope){\n-    if(jsPlumb.select({source:source, target:target, scope: scope}) !=null){\n-\tjsPlumb.connect({source:source, target:target, scope: scope}, def);\n-    }\n+    jsPlumb.ready(function(){\n+\tif(jsPlumb.select({source:source, target:target, scope: scope}) != null){\n+\t    jsPlumb.connect({source:source, target:target, scope: scope}, def);\n+\t}\n+    });\n }\n \n window.activate = function(zoom){\n-    jsPlumb.draggable(jsPlumb.getSelector(\".window\"));\n-    jsPlumb.setContainer(\"drawing\");\n-\n-    $(\"#drawing\").draggable({\n-\tcontainment: 'topology',\n-\tcursor: 'move'\n+    jsPlumb.ready(function(){\n+\tjsPlumb.draggable(jsPlumb.getSelector(\".window\"));\n+\tjsPlumb.setContainer(\"drawing\");\n+\t\n+\tjsPlumb.Defaults.MaxConnections = 1000;\n+\t\n+\t$(\"#drawing\").draggable({\n+\t    containment: 'topology',\n+\t    cursor: 'move'\n+\t});\n+\t\n+\tvar val = getTopology();\n+\tif(val.__zoom__ == null){\n+\t    setZoom($(\"#drawing\")[0], zoom);\n+\t} else {\n+\t    setZoom($(\"#drawing\")[0], val.__zoom__);\n+\t}\n     });\n-\n-    var val = getTopology();\n-    if(val.__zoom__ == null){\n-\tsetZoom($(\"#drawing\")[0], zoom);\n-    } else {\n-\tsetZoom($(\"#drawing\")[0], val.__zoom__);\n-    }\n }\n \n window.checkConnection = function() {\n-    jsPlumb.select({scope:\"CONNECTOR\"}).each(function(connection) {\n-        Wicket.WebSocket.send(\"{ \\\"kind\\\":\\\"CHECK_CONNECTOR\\\", \\\"target\\\":\\\"\" + connection.target.id + \"\\\" }\");\n-    });\n-    jsPlumb.select({scope:\"RESOURCE\"}).each(function(connection) {\n-        Wicket.WebSocket.send(\"{ \\\"kind\\\":\\\"CHECK_RESOURCE\\\", \\\"target\\\":\\\"\" + connection.target.id + \"\\\" }\");\n+    jsPlumb.ready(function(){\n+\tjsPlumb.select({scope:\"CONNECTOR\"}).each(function(connection) {\n+            Wicket.WebSocket.send(\"{ \\\"kind\\\":\\\"CHECK_CONNECTOR\\\", \\\"target\\\":\\\"\" + connection.target.id + \"\\\" }\");\n+\t});\n+\tjsPlumb.select({scope:\"RESOURCE\"}).each(function(connection) {\n+            Wicket.WebSocket.send(\"{ \\\"kind\\\":\\\"CHECK_RESOURCE\\\", \\\"target\\\":\\\"\" + connection.target.id + \"\\\" }\");\n+\t});\n     });\n }\n \n window.addEndpoint = function(source, target, scope) {\n     var sourceElement = $('#' + source);\n-    var element = sourceElement.clone();\n-    element.attr('id', target);\n-    element.removeAttr('data-original-title');\n     \n     var top = parseFloat(sourceElement.css(\"top\")) + 10;\n     var left = parseFloat(sourceElement.css(\"left\")) - 150;\n \n-    if(scope == 'RESOURCE'){\n-\tvar style = 'topology_res';\n-    }else{\n-\tvar style = 'topology_conn';\n-    }\n-    \n-    element.attr('class', 'window jsplumb-draggable _jsPlumb_endpoint_anchor_ ' + style);\n-    \n-    element.find('p').text(target);\n-    \n-    $('#drawing').append(element);\n     setPosition(target, left, top);\n-    \n-    jsPlumb.draggable(element);\n-    jsPlumb.connect({ source:source, target:target, scope:scope }, def);\n+\n+    jsPlumb.ready(function(){\n+\tjsPlumb.draggable(jsPlumb.getSelector(\"#\" + target));\n+\tjsPlumb.connect({ source:source, target:target, scope:scope }, def);\n+    });\n }\n \n jsPlumb.importDefaults({"},{"sha":"99693e7e000645de7e575e50594d9f7f21481a54","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/BeanReflectionModal.html","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionModal.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,30 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <form wicket:id=\"form\">\n+      <div class=\"bean\">\n+        <span wicket:id=\"bean\">[Complex]</span>\n+        <div class=\"modal-footer\">\n+          <input type=\"submit\" class=\"btn btn-primary\" wicket:id=\"apply\"/>\n+          <input type=\"button\" class=\"btn btn-default\" wicket:id=\"cancel\"/>\n+        </div>\n+    </form>\n+  </wicket:extend>\n+</html>"},{"sha":"7df9317dfa83ca553090238991cb11a36c8da18b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/BeanReflectionPanel.html","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanReflectionPanel.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,39 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+\n+    <div id=\"bean\">\n+      <div class=\"tablerow\" wicket:id=\"fields\">\n+        <div class=\"tablecolumn_check\">\n+          <span wicket:id=\"check\">[check]</span>\n+        </div>\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"label\">\n+            <span wicket:id=\"label\">[label]</span>\n+          </label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"field\">[field]</span>\n+        </div>\n+      </div>\n+    </div>\n+\n+  </wicket:panel>\n+</html>"},{"sha":"a07a8dc91986d513948a13856a8db30022cc8f60","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorModal.html","status":"modified","additions":17,"deletions":24,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -18,18 +18,15 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n-    <p class=\"ui-widget ui-corner-all ui-widget-header\">\n-        <span wicket:id=\"new\"/>&nbsp;<wicket:message key=\"title\"/>&nbsp;<span wicket:id=\"key\"/>\n-    </p>\n-    <div style=\"margin: 5px;\">\n-      <form wicket:id=\"form\">\n-        <div id=\"tabs\">\n-          <ul>\n-            <li class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n-            <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n-            <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n-          </ul>\n-          <div id=\"tabs-1\">\n+    <form wicket:id=\"form\">\n+      <div class=\"tabbable tabs-left\">\n+        <ul class=\"nav nav-tabs\">\n+          <li class=\"active\"><a  data-toggle=\"tab\" href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n+        </ul>\n+        <div class=\"tab-content\">\n+          <div id=\"tabs-1\" class=\"tab-pane active\">\n             <div id=\"formtable\">\n               <div class=\"tablerow alt\">\n                 <div class=\"tablecolumn_label short_dynamicsize\">\n@@ -112,7 +109,7 @@\n               </div>\n             </div>\n           </div>\n-          <div id=\"tabs-2\">\n+          <div id=\"tabs-2\" class=\"tab-pane\">\n             <div id=\"formtable\">\n               <span wicket:id=\"container\">\n                 <div style=\"border-bottom: 10px\">\n@@ -142,20 +139,16 @@\n               </span>\n             </div>\n           </div>\n-          <div id=\"tabs-3\">\n+          <div id=\"tabs-3\" class=\"tab-pane\">\n             <span wicket:id=\"capabilitiesPalette\"/>\n           </div>\n         </div>\n+      </div>\n \n-        <div style=\"margin: 20px 10px 0\">\n-          <input type=\"submit\"\n-                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                 wicket:id=\"apply\"/>\n-          <input type=\"button\"\n-                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                 wicket:id=\"cancel\"/>\n-        </div>\n-      </form>\n-    </div>\n+      <div class=\"modal-footer\">\n+        <input type=\"submit\" class=\"btn btn-primary\" wicket:id=\"apply\"/>\n+        <input type=\"button\" class=\"btn btn-default\" wicket:id=\"cancel\"/>\n+      </div>\n+    </form>\n   </wicket:extend>\n </html>"},{"sha":"ec4cc947da304407d26b02c70b0084db83fd6989","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ListViewPanel.html","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,60 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"container\">\n+      <wicket:container wicket:id=\"content\" />\n+    </span>\n+\n+    <wicket:fragment wicket:id=\"wizard\">\n+      <span wicket:id=\"wizard\"/>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"table\">\n+      <div class=\"col-xs-12\">\n+        <div class=\"box\">\n+          <div class=\"box-header\">\n+            <h3 class=\"box-title\">\n+              <span wicket:id=\"caption\"/>\n+            </h3>\n+          </div><!-- /.box-header -->\n+          <div class=\"box-body table-responsive no-padding\">\n+            <table class=\"table table-hover\">\n+              <tbody>\n+                <tr>\n+                  <th wicket:id=\"names\"><span wicket:id=\"name\"/></th>\n+                </tr>\n+                <tr wicket:id=\"beans\">\n+                  <td wicket:id=\"fields\"><span wicket:id=\"field\"/></td>\n+                  <td>\n+                    <div class=\"listview-actions\">\n+                      <span wicket:id=\"actions\">[actions]</span>\n+                    </div>\n+                  </td>\n+                </tr>\n+              </tbody></table>\n+          </div><!-- /.box-body -->\n+        </div><!-- /.box -->\n+      </div>\n+      <div class=\"modal-footer\">\n+        <input type=\"submit\" class=\"btn btn-primary\" value=\"Add\" wicket:message=\"value:listview.add\" wicket:id=\"add\"/>\n+      </div>\n+    </wicket:fragment>\n+  </wicket:panel>\n+</html>"},{"sha":"2d4f7b45c116eb508dbf66cec8cc80581a3ef23e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal.html","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -22,8 +22,7 @@\n       <div class=\"tabbable tabs-left\">\n         <ul class=\"nav nav-tabs\">\n           <li class=\"active\"><a  data-toggle=\"tab\" href=\"#resource\"><span><wicket:message key=\"resource\"/></span></a></li>\n-          <li><a  data-toggle=\"tab\" href=\"#umapping\"><span><wicket:message key=\"umapping\"/></span></a></li>\n-          <li><a  data-toggle=\"tab\" href=\"#gmapping\"><span><wicket:message key=\"gmapping\"/></span></a></li>\n+          <li><a  data-toggle=\"tab\" href=\"#provisions\"><span><wicket:message key=\"provisions\"/></span></a></li>\n           <li><a  data-toggle=\"tab\" href=\"#connectorProperties\"><span><wicket:message key=\"connectorProperties\"/></span></a></li>\n           <li><a  data-toggle=\"tab\" href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n         </ul>\n@@ -32,11 +31,10 @@\n             <span wicket:id=\"details\">[details]</span>\n             <span wicket:id=\"systeminformation\">[System Information]</span>\n           </div>\n-          <div id=\"umapping\" class=\"tab-pane\">\n-            <span wicket:id=\"umapping\">[umapping]</span>\n-          </div>\n-          <div id=\"gmapping\" class=\"tab-pane\">\n-            <span wicket:id=\"gmapping\">[gmapping]</span>\n+          <div id=\"provisions\" class=\"tab-pane\">\n+            <span wicket:id=\"pcontainer\">\n+              <span wicket:id=\"provisions\">[provisions]</span>\n+            </span>\n           </div>\n           <div id=\"connectorProperties\" class=\"tab-pane\">\n             <span wicket:id=\"connconf\">[connconf]</span>\n@@ -50,7 +48,7 @@\n       <div class=\"modal-footer\">\n         <input type=\"submit\" class=\"btn btn-primary\" wicket:id=\"apply\"/>\n         <input type=\"button\" class=\"btn btn-default\" wicket:id=\"cancel\"/>\n-      </div> \n+      </div>\n     </form>\n   </wicket:extend>\n </html>"},{"sha":"24827a62d4f2b96ce3c69bc08f7ba715b45723dd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal.properties","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -15,6 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n resource=Resource details\n+provisions=Provisioning\n umapping=User mapping\n connectorProperties=Connector properties\n security=Security\n@@ -58,3 +59,9 @@ actionsClasses=Actions classes\n gmapping=Group mapping\n new=New resource\n randomPwdIfNotProvided=Generate random passwords when missing\n+\n+anyType=Object Type\n+objectClass= Object Class\n+__ACCOUNT__=ACCOUNT\n+__GROUP__=GROUP\n+listview.caption=Provisioning configuration instances"},{"sha":"1bc3c04dc946ac52e57fe9744857645a3a96023a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal_it.properties","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -15,6 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n resource=Dettagli Risorsa\n+provisions=Provisioning\n umapping=Mapping utenti\n connectorProperties=Propriet\\u00e0\\u00a0 Connettore\n security=Sicurezza\n@@ -58,3 +59,9 @@ actionsClasses=Classi azioni\n gmapping=Mapping gruppi\n new=Nuova risorsa\n randomPwdIfNotProvided=Genera password casuali se mancanti\n+\n+anyType=Oggetto\n+objectClass=Classe\n+__ACCOUNT__=ACCOUNT\n+__GROUP__=GROUP\n+listview.caption=Istanze di configurazione del provisioning"},{"sha":"47f41b29e0c08f63b5d713d54eaf5b248eec0f69","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal_pt_BR.properties","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -15,6 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n resource=Detalhes de Recursos\n+provisions=Provisioning\n umapping=Mapeamento de usu\\u00e1rios\n connectorProperties=Propriedades de Conectores\n security=Seguran\\u00e7a\n@@ -58,3 +59,9 @@ actionsClasses=Classes de a\\u00e7\\u00f5es\n gmapping=Mapeamento de grupos\n new=Novo recurso\n randomPwdIfNotProvided=Gerar senhas aleat\\u00f3rias quando n\\u00e3o houver\n+\n+anyType=Objeto\n+objectClass=Classe\n+__ACCOUNT__=ACCOUNT\n+__GROUP__=GROUP\n+listview.caption=Inst\\u00e2ncias de provisionamento de recursos"},{"sha":"fe7677e9f7368d9f1f46170a789a70c4f24008f9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/Topology.html","status":"modified","additions":14,"deletions":7,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -44,21 +44,28 @@\n     </div>\n     <div id=\"topology\">\n       <div id=\"drawing\">\n-        <div class=\"window topology_root\" wicket:id=\"syncope\" onmouseup=\"refreshPosition(this)\">[syncope]</div>\n+        <div class=\"window\" wicket:id=\"syncope\" onmouseup=\"refreshPosition(this)\">[syncope]</div>\n         <span wicket:id=\"connectorServers\">\n-          <div class=\"window topology_cs\" wicket:id=\"cs\" onmouseup=\"refreshPosition(this)\">[resource]</div>\n+          <div class=\"window\" wicket:id=\"cs\" onmouseup=\"refreshPosition(this)\">[connector server]</div>\n         </span>\n-        <span wicket:id=\"conn1\">\n-          <div class=\"window topology_conn\" wicket:id=\"conn\" onmouseup=\"refreshPosition(this)\">[resource]</div>\n+        <span wicket:id=\"filePaths\">\n+          <div class=\"window\" wicket:id=\"fp\" onmouseup=\"refreshPosition(this)\">[file path]</div>\n         </span>\n-        <span wicket:id=\"conn2\">\n-          <div class=\"window topology_conn\" wicket:id=\"conn\" onmouseup=\"refreshPosition(this)\">[resource]</div>\n+        <span wicket:id=\"conns\">\n+          <span wicket:id=\"conns\">\n+            <div class=\"window\" wicket:id=\"conn\" onmouseup=\"refreshPosition(this)\">[connector]</div>\n+          </span>\n         </span>\n         <span wicket:id=\"resources\">\n           <span wicket:id=\"resources\">\n-            <div class=\"window topology_res\" wicket:id=\"res\" onmouseup=\"refreshPosition(this)\">[resource]</div>\n+            <div class=\"window\" wicket:id=\"res\" onmouseup=\"refreshPosition(this)\">[resource]</div>\n           </span>\n         </span>\n+        <div wicket:id=\"newlyCreatedContainer\">\n+          <span wicket:id=\"newlyCreated\">\n+            <div class=\"window\" wicket:id=\"el\" onmouseup=\"refreshPosition(this)\">[resource]</div>\n+          </span>\n+        </div>\n       </div>\n       <span wicket:id=\"jsPlace\"></span>\n     </div>"},{"sha":"6faea50375c3535b272162a36cf66da37bf5527f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyNodePanel.html","status":"modified","additions":31,"deletions":28,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -19,41 +19,44 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div class=\"node-action-link btn-group\">\n-      <a href=\"javascript:void(0);\" data-toggle=\"dropdown\">\n-        <i class=\"fa fa-sliders\"></i>\n-      </a>\n-      <wicket:container wicket:id=\"actions\" />\n-    </div>\n-\n+    <wicket:container wicket:id=\"actions\" />\n     <p class=\"text-center text-primary\" wicket:id=\"label\"/>\n \n-    <wicket:fragment wicket:id=\"connectorWithResourceActions\">\n-      <ul role=\"menu\" class=\"dropdown-menu\">\n-        <li><a href=\"#\"><i class=\"fa fa-plus\"></i></a></li>\n-        <li><a href=\"#\"><i class=\"fa fa-pencil\"></i></a></li>\n-      </ul>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"connectorWithNoResourceActions\">\n-      <ul role=\"menu\" class=\"dropdown-menu\">\n-        <li><a href=\"#\" wicket:id=\"create\"><i class=\"fa fa-plus\"></i></a></li>\n-        <li><a href=\"#\" wicket:id=\"delete\"><i class=\"fa fa-minus\"></i></a></li>\n-        <li><a href=\"#\" wicket:id=\"edit\"><i class=\"fa fa-pencil\"></i></a></li>\n-      </ul>\n+    <wicket:fragment wicket:id=\"connectorActions\">\n+      <div class=\"node-action-link btn-group\">\n+        <a href=\"javascript:void(0);\" data-toggle=\"dropdown\">\n+          <i class=\"fa fa-sliders\"></i>\n+        </a>\n+        <ul role=\"menu\" class=\"dropdown-menu\">\n+          <li><a href=\"#\" wicket:id=\"create\"><i class=\"fa fa-plus\"></i></a></li>\n+          <li><a href=\"#\" wicket:id=\"delete\"><i class=\"fa fa-minus\"></i></a></li>\n+          <li><a href=\"#\" wicket:id=\"edit\"><i class=\"fa fa-pencil\"></i></a></li>\n+        </ul>\n+      </div>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"resourceActions\">\n-      <ul role=\"menu\" class=\"dropdown-menu\">\n-        <li><a href=\"#\" wicket:id=\"delete\"><i class=\"fa fa-minus\"></i></a></li>\n-        <li><a href=\"#\" wicket:id=\"edit\"><i class=\"fa fa-pencil\"></i></a></li>\n-      </ul>\n+      <div class=\"node-action-link btn-group\">\n+        <a href=\"javascript:void(0);\" data-toggle=\"dropdown\">\n+          <i class=\"fa fa-sliders\"></i>\n+        </a>\n+        <ul role=\"menu\" class=\"dropdown-menu\">\n+          <li><a href=\"#\" wicket:id=\"delete\"><i class=\"fa fa-minus\"></i></a></li>\n+          <li><a href=\"#\" wicket:id=\"edit\"><i class=\"fa fa-pencil\"></i></a></li>\n+        </ul>\n+      </div>\n     </wicket:fragment>\n \n-    <wicket:fragment wicket:id=\"syncopeActions\">\n-      <ul role=\"menu\" class=\"dropdown-menu\">\n-        <li><a href=\"#\"><i class=\"fa fa-plus\"></i></a></li>\n-      </ul>\n+    <wicket:fragment wicket:id=\"locationActions\">\n+      <div class=\"node-action-link btn-group\">\n+        <a href=\"javascript:void(0);\" data-toggle=\"dropdown\">\n+          <i class=\"fa fa-sliders\"></i>\n+        </a>\n+        <ul role=\"menu\" class=\"dropdown-menu\">\n+          <li><a href=\"#\" wicket:id=\"create\"><i class=\"fa fa-plus\"></i></a></li>\n+        </ul>\n+      </div>\n     </wicket:fragment>\n+    <wicket:fragment wicket:id=\"syncopeActions\" />\n   </wicket:panel>\n </html>"},{"sha":"0f9d6372d2b59bfab27f82e31854e3993b07a1d7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":26,"deletions":6,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -34,6 +34,10 @@\n     <span wicket:id=\"panelExecute\">[plus]</span>\n     <span wicket:id=\"panelEnable\">[plus]</span>\n     <span wicket:id=\"panelSearch\">[plus]</span>\n+    <span wicket:id=\"panelMapping\">[plus]</span>\n+    <span wicket:id=\"panelAccountLink\">[plus]</span>\n+    <span wicket:id=\"panelResetTime\">[plus]</span>\n+    <span wicket:id=\"panelClone\">[plus]</span>\n     <span wicket:id=\"panelCreate\">[plus]</span>\n     <span wicket:id=\"panelUserTemplate\">[plus]</span>\n     <span wicket:id=\"panelGroupTemplate\">[plus]</span>\n@@ -71,8 +75,24 @@\n       <a href=\"#\" wicket:id=\"manageGroupsLink\"><img id=\"actionLink\" src=\"img/actions/groups-icon.png\" alt=\"manage groups icon\" title=\"Manage groups\"/></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentMapping\">\n+      <a href=\"#\" wicket:id=\"mappingLink\" title=\"Mapping\"><i class=\"fa fa-exchange\"></i></a>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"fragmentAccountLink\">\n+      <a href=\"#\" wicket:id=\"accountLinkLink\" title=\"Account Link\"><i class=\"fa fa-external-link\"></i></a>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"fragmentResetTime\">\n+      <a href=\"#\" wicket:id=\"resetTimeLink\" title=\"Reset Time\"><i class=\"fa fa-hourglass-start\"></i></a>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"fragmentClone\">\n+      <a href=\"#\" wicket:id=\"cloneLink\" title=\"Clone\"><i class=\"fa fa-clone\"></i></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentCreate\">\n-      <a href=\"#\" wicket:id=\"createLink\"><img id=\"actionLink\" src=\"img/actions/create.png\" alt=\"create icon\" title=\"Create\"/></a>\n+      <a href=\"#\" wicket:id=\"createLink\" title=\"Create\"><i class=\"fa fa-create\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentSearch\">\n@@ -100,7 +120,7 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentDelete\">\n-      <a href=\"#\" wicket:id=\"deleteLink\"><img id=\"actionLink\" src=\"img/actions/delete.png\" alt=\"delete icon\" title=\"Delete\"/></a>\n+      <a href=\"#\" wicket:id=\"deleteLink\" title=\"Delete\"><i class=\"fa fa-minus\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentDryRun\">\n@@ -160,13 +180,13 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentZoomIn\">\n-      <a href=\"#\" wicket:id=\"zoomInLink\"><i class=\"fa fa-search-plus\"></i></a>\n+      <a href=\"#\" wicket:id=\"zoomInLink\" title=\"Zoom In\"><i class=\"fa fa-search-plus\"></i></a>\n     </wicket:fragment>\n-    \n+\n     <wicket:fragment wicket:id=\"fragmentZoomOut\">\n-      <a href=\"#\" wicket:id=\"zoomOutLink\"><i class=\"fa fa-search-minus\"></i></a>\n+      <a href=\"#\" wicket:id=\"zoomOutLink\" title=\"Zoom Out\"><i class=\"fa fa-search-minus\"></i></a>\n     </wicket:fragment>\n-    \n+\n     <wicket:fragment wicket:id=\"emptyFragment\">\n     </wicket:fragment>\n   </wicket:panel>"},{"sha":"af85a849b3223ce79e7a13cd66e064e582d9c45d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/CheckBoxMultipleChoiceFieldPanel.html","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -17,7 +17,9 @@\n under the License.\n -->\n <html>\n-    <wicket:panel>\n-        <span wicket:id=\"checkBoxMultipleChoice\" />\n-    </wicket:panel>\n+  <wicket:panel>\n+    <div class=\"form-group\">\n+      <span wicket:id=\"checkBoxMultipleChoice\" />\n+    </div>\n+  </wicket:panel>\n </html>"},{"sha":"aa2e5abf354c1c84042c67657b41544d2bd55f4e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard$AccountLink.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard%24AccountLink.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard%24AccountLink.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard%24AccountLink.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n+  <wicket:panel>\n+    Specify here the account link .... work in progress\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"214771330f7c3713e9c1feb2c927f8f240a64e03","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard$Mapping.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard%24Mapping.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard%24Mapping.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard%24Mapping.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\">\n+  <wicket:panel>\n+    <span wicket:id=\"mapping\" />\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"e36f66d4de3815d6a0b426cb49fb1e3dadf5bdd0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard$ObjectType.html","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard%24ObjectType.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard%24ObjectType.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard%24ObjectType.html?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,30 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\">\n+  <wicket:panel >\n+    <div class=\"form-group\">\n+      <label>Object Type</label>\n+      <input type=\"text\" placeholder=\"Object Type ...\" class=\"form-control\"  wicket:id=\"type\">\n+    </div>\n+    <div class=\"form-group\">\n+      <label>Object Class</label>\n+      <input type=\"text\" placeholder=\"Object Class ...\" class=\"form-control\"  wicket:id=\"class\">\n+    </div>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"535da533716420e2def3c8675f34c50144f7d25e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard.properties?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+type.title=Specify the type of the provisioning object\n+type.summary=\n+mapping.title=Specify the maping about the provisioning  object\n+mapping.summary=\n+link.title=Specify the account link (if required)\n+link.summary=\n+"},{"sha":"535da533716420e2def3c8675f34c50144f7d25e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard_it.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard_it.properties?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+type.title=Specify the type of the provisioning object\n+type.summary=\n+mapping.title=Specify the maping about the provisioning  object\n+mapping.summary=\n+link.title=Specify the account link (if required)\n+link.summary=\n+"},{"sha":"535da533716420e2def3c8675f34c50144f7d25e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/ProvisionWizard_pt_BR.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FProvisionWizard_pt_BR.properties?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+type.title=Specify the type of the provisioning object\n+type.summary=\n+mapping.title=Specify the maping about the provisioning  object\n+mapping.summary=\n+link.title=Specify the account link (if required)\n+link.summary=\n+"},{"sha":"26e5754060bad691a7efa567891be960649f3e93","filename":"pom.xml","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ba7f1a5ce9f852e9783853b7397a64a66ac4826c/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=ba7f1a5ce9f852e9783853b7397a64a66ac4826c","patch":"@@ -376,11 +376,11 @@ under the License.\n     <jquery-cookie.version>1.4.1-1</jquery-cookie.version>\n     <bootstrap.version>3.3.5</bootstrap.version>\n     <bootstrap-select.version>1.6.3</bootstrap-select.version>\n-    <font-awesome.version>4.3.0</font-awesome.version>\n+    <font-awesome.version>4.4.0</font-awesome.version>\n     <ionicons.version>2.0.1</ionicons.version>\n     <highlightjs.version>8.4-4</highlightjs.version>\n     <codemirror.version>5.5</codemirror.version>\n-    <jsplumb.version>1.6.4</jsplumb.version>\n+    <jsplumb.version>1.7.5</jsplumb.version>\n     \n     <wicket.version>7.0.0</wicket.version>\n     <wicket-jqueryui.version>7.0.0</wicket-jqueryui.version>\n@@ -1081,6 +1081,7 @@ under the License.\n           <configuration>\n             <source>${targetJdk}</source>\n             <target>${targetJdk}</target>\n+\t    <useIncrementalCompilation>false</useIncrementalCompilation>\n             <showWarnings>true</showWarnings>\n             <showDeprecation>true</showDeprecation>\n             <!--<compilerArgument>-Xlint:unchecked</compilerArgument>-->"}]}