{"sha":"05478375f5d286323e993e8057f95a272fed38c6","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA1NDc4Mzc1ZjVkMjg2MzIzZTk5M2U4MDU3Zjk1YTI3MmZlZDM4YzY=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-16T17:15:51Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-16T17:15:51Z"},"message":"[SYNCOPE-156] providing user and group ownership","tree":{"sha":"9f3d2b7d64784d77abd1a314016b922835607f2c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9f3d2b7d64784d77abd1a314016b922835607f2c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/05478375f5d286323e993e8057f95a272fed38c6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05478375f5d286323e993e8057f95a272fed38c6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/05478375f5d286323e993e8057f95a272fed38c6","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/05478375f5d286323e993e8057f95a272fed38c6/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"dbc9092789af151ca284e1b634e07b5c3d0ef5f6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbc9092789af151ca284e1b634e07b5c3d0ef5f6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dbc9092789af151ca284e1b634e07b5c3d0ef5f6"}],"stats":{"total":1020,"additions":806,"deletions":214},"files":[{"sha":"35851abce5030de4ef6053d0fd58b4ae92282f03","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":53,"deletions":44,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -78,6 +78,8 @@\n      */\n     private final boolean filtered;\n \n+    private final boolean checkBoxEnabled;\n+\n     /**\n      * Filter used in case of filtered search.\n      */\n@@ -108,26 +110,20 @@\n      */\n     private final String type;\n \n-    protected AbstractSearchResultPanel(\n-            final String id,\n-            final boolean filtered,\n-            final String fiql,\n-            final PageReference pageRef,\n-            final AbstractAnyRestClient<T> restClient,\n-            final String realm,\n-            final String type) {\n+    protected AbstractSearchResultPanel(final String id, final Builder<T> builder) {\n \n-        super(id, pageRef, true);\n+        super(id, builder.getPageRef(), true);\n \n         setOutputMarkupId(true);\n \n-        this.page = (AbstractBasePage) pageRef.getPage();\n+        this.page = (AbstractBasePage) builder.getPageRef().getPage();\n \n-        this.filtered = filtered;\n-        this.fiql = fiql;\n+        this.filtered = builder.filtered;\n+        this.checkBoxEnabled = builder.checkBoxEnabled;\n+        this.fiql = builder.fiql;\n         this.feedbackPanel = page.getFeedbackPanel();\n \n-        this.restClient = restClient;\n+        this.restClient = builder.restClient;\n \n         // Container for user search result\n         container = new WebMarkupContainer(\"searchContainer\");\n@@ -136,8 +132,8 @@ protected AbstractSearchResultPanel(\n \n         rows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n \n-        this.realm = realm;\n-        this.type = type;\n+        this.realm = builder.realm;\n+        this.type = builder.type;\n \n         setWindowClosedReloadCallback(modal);\n     }\n@@ -194,22 +190,21 @@ private void updateResultTable(final boolean create, final int rows) {\n         final int currentPage = resultTable != null\n                 ? (create ? (int) resultTable.getPageCount() - 1 : (int) resultTable.getCurrentPage()) : 0;\n \n-        resultTable = new AjaxDataTablePanel<>(\n-                \"resultTable\",\n-                getColumns(),\n-                dataProvider,\n-                rows,\n-                getBulkActions(),\n-                restClient,\n-                \"key\",\n-                getPageId(),\n-                page.getPageReference(),\n-                container);\n+        AjaxDataTablePanel.Builder<T, String> resultTableBuilder = new AjaxDataTablePanel.Builder<>(\n+                dataProvider, getPageId(), page.getPageReference()).\n+                setColumns(getColumns()).\n+                setRowsPerPage(rows).\n+                setBulkActions(getBulkActions(), restClient, \"key\").\n+                setContainer(container);\n \n-        resultTable.setCurrentPage(currentPage);\n+        if (!checkBoxEnabled) {\n+            resultTableBuilder.disableCheckBoxes();\n+        }\n \n-        resultTable.setOutputMarkupId(true);\n+        resultTable = resultTableBuilder.build(\"resultTable\");\n \n+        resultTable.setCurrentPage(currentPage);\n+        resultTable.setOutputMarkupId(true);\n         container.addOrReplace(resultTable);\n     }\n \n@@ -300,44 +295,58 @@ public void setRows(final int rows) {\n         private static final long serialVersionUID = 5088962796986706805L;\n \n         /**\n-         * Specify if results are about a filtered search or not. Using this attribute it is possible to use this panel\n-         * to show results about user list and user search.\n+         * Specify if results are about a filtered search or not.\n+         * By using this attribute it is possible to force this panel to show results about user list and user search.\n          */\n-        protected final boolean filtered;\n+        protected boolean filtered = false;\n+\n+        protected boolean checkBoxEnabled = true;\n \n         /**\n          * Filter used in case of filtered search.\n          */\n-        protected final String fiql;\n+        protected String fiql;\n \n         protected final AbstractAnyRestClient<T> restClient;\n \n         /**\n          * Realm related to current panel.\n          */\n-        protected final String realm;\n+        protected String realm = \"/\";\n \n         /**\n          * Any type related to current panel.\n          */\n         protected final String type;\n \n-        protected Builder(\n-                final Class<T> reference,\n-                final boolean filtered,\n-                final String fiql,\n-                final PageReference pageRef,\n-                final AbstractAnyRestClient<T> restClient,\n-                final String realm,\n-                final String type) {\n-\n+        protected Builder(final AbstractAnyRestClient<T> restClient, final String type, final PageReference pageRef) {\n             super(pageRef);\n+            this.restClient = restClient;\n+            this.type = type;\n+        }\n+\n+        public Builder<T> setFiltered(final boolean filtered) {\n             this.filtered = filtered;\n+            return this;\n+        }\n+\n+        public Builder<T> disableCheckBoxes() {\n+            this.checkBoxEnabled = false;\n+            return this;\n+        }\n+\n+        public Builder<T> setFiql(final String fiql) {\n             this.fiql = fiql;\n-            this.restClient = restClient;\n+            return this;\n+        }\n+\n+        public Builder<T> setRealm(final String realm) {\n             this.realm = realm;\n-            this.type = type;\n+            return this;\n         }\n \n+        private PageReference getPageRef() {\n+            return pageRef;\n+        }\n     }\n }"},{"sha":"fc653c12d7e41e4f4e77e95d98fabc7f67c6b6b6","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":116,"deletions":25,"changes":141,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.io.Serializable;\n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n@@ -43,21 +45,106 @@\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Fragment;\n \n-public class AjaxDataTablePanel<T, S> extends DataTablePanel<T, S> {\n+public final class AjaxDataTablePanel<T, S> extends DataTablePanel<T, S> {\n \n     private static final long serialVersionUID = -7264400471578272966L;\n \n-    public AjaxDataTablePanel(\n-            final String id,\n-            final List<IColumn<T, S>> columns,\n-            final ISortableDataProvider<T, S> dataProvider,\n-            final int rowsPerPage,\n-            final Collection<ActionLink.ActionType> actions,\n-            final BaseRestClient bulkActionExecutor,\n-            final String itemKeyField,\n-            final String pageId,\n-            final PageReference pageRef,\n-            final WebMarkupContainer container) {\n+    public static class Builder<T, S> implements Serializable {\n+\n+        private static final long serialVersionUID = 8876232177473972722L;\n+\n+        private boolean checkBoxEnabled = true;\n+\n+        private final List<IColumn<T, S>> columns = new ArrayList<>();\n+\n+        private final ISortableDataProvider<T, S> dataProvider;\n+\n+        private int rowsPerPage = 10;\n+\n+        private final Collection<ActionLink.ActionType> bulkActions = new ArrayList<>();\n+\n+        private BaseRestClient bulkActionExecutor;\n+\n+        private String itemKeyField;\n+\n+        private final String pageId;\n+\n+        private final PageReference pageRef;\n+\n+        private WebMarkupContainer container;\n+\n+        public Builder(final ISortableDataProvider<T, S> provider, final String pageId, final PageReference pageRef) {\n+            this.dataProvider = provider;\n+            this.pageId = pageId;\n+            this.pageRef = pageRef;\n+        }\n+\n+        public AjaxDataTablePanel<T, S> build(final String id) {\n+            return new AjaxDataTablePanel<>(id, this);\n+        }\n+\n+        public Builder<T, S> setContainer(final WebMarkupContainer container) {\n+            this.container = container;\n+            return this;\n+        }\n+\n+        public Builder<T, S> addBulkAction(final ActionLink.ActionType actionType) {\n+            bulkActions.add(actionType);\n+            return this;\n+        }\n+\n+        public Builder<T, S> setBulkActionExecutor(final BaseRestClient bulkActionExecutor) {\n+            this.bulkActionExecutor = bulkActionExecutor;\n+            return this;\n+        }\n+\n+        public Builder<T, S> setItemKeyField(final String itemKeyField) {\n+            this.itemKeyField = itemKeyField;\n+            return this;\n+        }\n+\n+        public Builder<T, S> setBulkActions(\n+                final Collection<ActionLink.ActionType> bulkActions,\n+                final BaseRestClient bulkActionExecutor,\n+                final String itemKeyField) {\n+            this.bulkActions.clear();\n+            if (bulkActions != null) {\n+                this.bulkActions.addAll(bulkActions);\n+            }\n+            this.bulkActionExecutor = bulkActionExecutor;\n+            this.itemKeyField = itemKeyField;\n+            return this;\n+        }\n+\n+        public Builder<T, S> addColumn(final IColumn<T, S> column) {\n+            columns.add(column);\n+            return this;\n+        }\n+\n+        public Builder<T, S> setColumns(final List<IColumn<T, S>> columns) {\n+            this.columns.clear();\n+            if (columns != null) {\n+                this.columns.addAll(columns);\n+            }\n+            return this;\n+        }\n+\n+        public Builder<T, S> setRowsPerPage(final int rowsPerPage) {\n+            this.rowsPerPage = rowsPerPage;\n+            return this;\n+        }\n+\n+        public Builder<T, S> disableCheckBoxes() {\n+            this.checkBoxEnabled = false;\n+            return this;\n+        }\n+\n+        private boolean isBulkEnabled() {\n+            return checkBoxEnabled && bulkActionExecutor != null && !bulkActions.isEmpty();\n+        }\n+    }\n+\n+    private AjaxDataTablePanel(final String id, final Builder<T, S> builder) {\n \n         super(id);\n \n@@ -72,11 +159,11 @@ public AjaxDataTablePanel(\n             public void onClose(final AjaxRequestTarget target) {\n                 final EventDataWrapper data = new EventDataWrapper();\n                 data.setTarget(target);\n-                data.setRows(rowsPerPage);\n+                data.setRows(builder.rowsPerPage);\n \n-                send(pageRef.getPage(), Broadcast.BREADTH, data);\n+                send(builder.pageRef.getPage(), Broadcast.BREADTH, data);\n \n-                final AbstractBasePage page = (AbstractBasePage) pageRef.getPage();\n+                final AbstractBasePage page = (AbstractBasePage) builder.pageRef.getPage();\n \n                 if (page.isModalResult()) {\n                     // reset modal result\n@@ -106,30 +193,34 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         });\n         bulkActionForm.add(group);\n \n-        columns.add(0, new CheckGroupColumn<T, S>(group));\n-        dataTable = new AjaxFallbackDataTable<>(\"dataTable\", columns, dataProvider, rowsPerPage, container);\n+        if (builder.checkBoxEnabled) {\n+            builder.columns.add(0, new CheckGroupColumn<T, S>(group));\n+        }\n+\n+        dataTable = new AjaxFallbackDataTable<>(\n+                \"dataTable\", builder.columns, builder.dataProvider, builder.rowsPerPage, builder.container);\n         dataTable.add(new AttributeModifier(\"class\", \"table table-bordered table-hover dataTable\"));\n \n         group.add(dataTable);\n \n-        fragment.add(new ClearIndicatingAjaxButton(\"bulkActionLink\", bulkActionForm, pageRef) {\n+        fragment.add(new ClearIndicatingAjaxButton(\"bulkActionLink\", bulkActionForm, builder.pageRef) {\n \n             private static final long serialVersionUID = 382302811235019988L;\n \n             @Override\n             protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n                 bulkModalWin.setContent(new BulkActionModalPage<>(\n                         bulkModalWin,\n-                        pageRef,\n+                        builder.pageRef,\n                         group.getModelObject(),\n-                        columns,\n-                        actions,\n-                        bulkActionExecutor,\n-                        itemKeyField,\n-                        pageId));\n+                        builder.columns,\n+                        builder.bulkActions,\n+                        builder.bulkActionExecutor,\n+                        builder.itemKeyField,\n+                        builder.pageId));\n \n                 bulkModalWin.show(target);\n             }\n-        });\n+        }.setEnabled(builder.isBulkEnabled()).setVisible(builder.isBulkEnabled()));\n     }\n }"},{"sha":"271f848c81bdc072b73d391d51191d431c7739da","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectSearchResultPanel.java","status":"modified","additions":23,"deletions":25,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -67,29 +67,21 @@\n     protected final String entitlement;\n \n     protected AnyObjectSearchResultPanel(\n-            final String type,\n-            final String parentId,\n-            final boolean filtered,\n-            final String fiql,\n-            final PageReference callerRef,\n-            final AbstractAnyRestClient<T> restClient,\n-            final List<AnyTypeClassTO> anyTypeClassTOs,\n-            final String realm,\n-            final String entitlement) {\n-\n-        super(parentId, filtered, fiql, callerRef, restClient, realm, type);\n+            final String id, final AbstractSearchResultPanel.Builder<T> builder, final String entitlement) {\n+        super(id, builder);\n+\n         modal.size(Modal.Size.Large);\n \n         this.entitlement = entitlement;\n \n-        add(new Label(\"name\", type));\n+        add(new Label(\"name\", builder.type));\n \n         this.schemaNames = new ArrayList<>();\n-        for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n+        for (AnyTypeClassTO anyTypeClassTO : AnySearchResultPanelBuilder.class.cast(builder).getAnyTypeClassTOs()) {\n             this.schemaNames.addAll(anyTypeClassTO.getPlainSchemas());\n         }\n         this.dSchemaNames = new ArrayList<>();\n-        for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n+        for (AnyTypeClassTO anyTypeClassTO : AnySearchResultPanelBuilder.class.cast(builder).getAnyTypeClassTOs()) {\n             this.dSchemaNames.addAll(anyTypeClassTO.getDerSchemas());\n         }\n \n@@ -223,30 +215,36 @@ protected String getPageId() {\n         return pageID;\n     }\n \n-    public static final class Builder extends AbstractSearchResultPanel.Builder<AnyObjectTO> {\n+    public interface AnySearchResultPanelBuilder extends Serializable {\n+\n+        List<AnyTypeClassTO> getAnyTypeClassTOs();\n+    }\n+\n+    public static final class Builder extends AbstractSearchResultPanel.Builder<AnyObjectTO>\n+            implements AnySearchResultPanelBuilder {\n \n         private static final long serialVersionUID = -6828423611982275640L;\n \n         private final List<AnyTypeClassTO> anyTypeClassTOs;\n \n         public Builder(\n-                final boolean filtered,\n-                final String fiql,\n-                final PageReference pageRef,\n-                final AbstractAnyRestClient<AnyObjectTO> restClient,\n                 final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final String realm,\n-                final String type) {\n+                final AbstractAnyRestClient<AnyObjectTO> restClient,\n+                final String type,\n+                final PageReference pageRef) {\n \n-            super(AnyObjectTO.class, filtered, fiql, pageRef, restClient, realm, type);\n+            super(restClient, type, pageRef);\n             this.anyTypeClassTOs = anyTypeClassTOs;\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyHandler<AnyObjectTO>> newInstance(final String parentId) {\n-            return new AnyObjectSearchResultPanel<>(\n-                    type, parentId, filtered, fiql, pageRef, restClient, anyTypeClassTOs, realm, type + \"_LIST\");\n+        protected WizardMgtPanel<AnyHandler<AnyObjectTO>> newInstance(final String id) {\n+            return new AnyObjectSearchResultPanel<>(id, this, type + \"_LIST\");\n         }\n \n+        @Override\n+        public List<AnyTypeClassTO> getAnyTypeClassTOs() {\n+            return this.anyTypeClassTOs;\n+        }\n     }\n }"},{"sha":"ee76089124c3baa0470ac7e4efeecf332648fd44","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":18,"deletions":32,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -53,22 +53,12 @@\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n-public final class GroupSearchResultPanel extends AnyObjectSearchResultPanel<GroupTO> {\n+public class GroupSearchResultPanel extends AnyObjectSearchResultPanel<GroupTO> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    private GroupSearchResultPanel(\n-            final String type,\n-            final String parentId,\n-            final boolean filtered,\n-            final String fiql,\n-            final PageReference callerRef,\n-            final AbstractAnyRestClient<GroupTO> restClient,\n-            final List<AnyTypeClassTO> anyTypeClassTOs,\n-            final String realm,\n-            final String entitlement) {\n-\n-        super(type, parentId, filtered, fiql, callerRef, restClient, anyTypeClassTOs, realm, entitlement);\n+    protected GroupSearchResultPanel(final String id, final Builder builder, final String entitlement) {\n+        super(id, builder, entitlement);\n     }\n \n     @Override\n@@ -177,7 +167,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO anyTO) {\n             public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n                 final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(page.getPageReference());\n \n-                panel.add(new ActionLink<Serializable>() {\n+                return panel.add(new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -189,9 +179,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         modal.header(new ResourceModel(\"any.attr.display\", \"\"));\n                         modal.show(true);\n                     }\n-                }, ActionLink.ActionType.CHANGE_VIEW, entitlement);\n-\n-                panel.add(new ActionLink<Serializable>() {\n+                }, ActionLink.ActionType.CHANGE_VIEW, entitlement).add(new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -201,9 +189,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, entitlement);\n-\n-                return panel.build(componentId);\n+                }, ActionLink.ActionType.RELOAD, entitlement).build(componentId);\n             }\n         });\n \n@@ -226,31 +212,31 @@ protected String getPageId() {\n         return pageID;\n     }\n \n-    public static final class Builder extends AbstractSearchResultPanel.Builder<GroupTO> {\n+    public static class Builder extends AbstractSearchResultPanel.Builder<GroupTO>\n+            implements AnySearchResultPanelBuilder {\n \n         private static final long serialVersionUID = 1L;\n \n         private final List<AnyTypeClassTO> anyTypeClassTOs;\n \n         public Builder(\n-                final boolean filtered,\n-                final String fiql,\n-                final PageReference pageRef,\n-                final AbstractAnyRestClient<GroupTO> restClient,\n                 final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final String realm,\n-                final String type) {\n+                final AbstractAnyRestClient<GroupTO> restClient,\n+                final String type,\n+                final PageReference pageRef) {\n \n-            super(GroupTO.class, filtered, fiql, pageRef, restClient, realm, type);\n+            super(restClient, type, pageRef);\n             this.anyTypeClassTOs = anyTypeClassTOs;\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyHandler<GroupTO>> newInstance(final String parentId) {\n-            return new GroupSearchResultPanel(\n-                    type, parentId, filtered, fiql, pageRef, restClient, anyTypeClassTOs, realm,\n-                    StandardEntitlement.GROUP_SEARCH);\n+        protected WizardMgtPanel<AnyHandler<GroupTO>> newInstance(final String id) {\n+            return new GroupSearchResultPanel(id, this, StandardEntitlement.GROUP_SEARCH);\n         }\n \n+        @Override\n+        public List<AnyTypeClassTO> getAnyTypeClassTOs() {\n+            return this.anyTypeClassTOs;\n+        }\n     }\n }"},{"sha":"32ae03123cd5d9c11e1019267aa44a02418c6c57","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -117,10 +117,10 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 final UserTO userTO = new UserTO();\n                 userTO.setRealm(realmTO.getFullPath());\n                 panel = new UserSearchResultPanel.Builder(\n-                        false, null, pageReference, userRestClient,\n                         anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n-                        realmTO.getFullPath(),\n-                        anyTypeTO.getKey()).\n+                        userRestClient,\n+                        anyTypeTO.getKey(),\n+                        pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new UserWizardBuilder(\n                                 BaseModal.CONTENT_ID, userTO, anyTypeTO.getClasses(), pageRef)).\n                         addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n@@ -130,10 +130,10 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 final GroupTO groupTO = new GroupTO();\n                 groupTO.setRealm(realmTO.getFullPath());\n                 panel = new GroupSearchResultPanel.Builder(\n-                        false, null, pageReference, groupRestClient,\n                         anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n-                        realmTO.getFullPath(),\n-                        anyTypeTO.getKey()).\n+                        groupRestClient,\n+                        anyTypeTO.getKey(),\n+                        pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new GroupWizardBuilder(\n                                 BaseModal.CONTENT_ID, groupTO, anyTypeTO.getClasses(), pageRef)).\n                         addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel()).\n@@ -144,10 +144,10 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 anyObjectTO.setRealm(realmTO.getFullPath());\n                 anyObjectTO.setType(anyTypeTO.getKey());\n                 panel = new AnyObjectSearchResultPanel.Builder(\n-                        false, null, pageReference, anyObjectRestClient,\n                         anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n-                        realmTO.getFullPath(),\n-                        anyTypeTO.getKey()).\n+                        anyObjectRestClient,\n+                        anyTypeTO.getKey(),\n+                        pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new AnyWizardBuilder<AnyObjectTO>(\n                                 BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).\n                         addNotificationPanel(BasePage.class.cast(this.pageRef.getPage()).getFeedbackPanel())."},{"sha":"29341a7e7faca1348e6a916cc05e23860ef66b57","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":18,"deletions":29,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -56,22 +56,12 @@\n import org.apache.wicket.model.ResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n-public final class UserSearchResultPanel extends AnyObjectSearchResultPanel<UserTO> {\n+public class UserSearchResultPanel extends AnyObjectSearchResultPanel<UserTO> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n-    private UserSearchResultPanel(\n-            final String type,\n-            final String parentId,\n-            final boolean filtered,\n-            final String fiql,\n-            final PageReference callerRef,\n-            final AbstractAnyRestClient<UserTO> restClient,\n-            final List<AnyTypeClassTO> anyTypeClassTOs,\n-            final String realm,\n-            final String entitlement) {\n-\n-        super(type, parentId, filtered, fiql, callerRef, restClient, anyTypeClassTOs, realm, entitlement);\n+    protected UserSearchResultPanel(final String id, final Builder builder, final String entitlement) {\n+        super(id, builder, entitlement);\n     }\n \n     @Override\n@@ -191,7 +181,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n             public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n                 final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(page.getPageReference());\n \n-                panel.add(new ActionLink<Serializable>() {\n+                return panel.add(new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -213,9 +203,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, entitlement);\n-\n-                return panel.build(componentId);\n+                }, ActionLink.ActionType.RELOAD, entitlement).build(componentId);\n             }\n         });\n \n@@ -238,30 +226,31 @@ protected String getPageId() {\n         return pageID;\n     }\n \n-    public static final class Builder extends AbstractSearchResultPanel.Builder<UserTO> {\n+    public static class Builder extends AbstractSearchResultPanel.Builder<UserTO>\n+            implements AnySearchResultPanelBuilder {\n \n         private static final long serialVersionUID = 1L;\n \n         private final List<AnyTypeClassTO> anyTypeClassTOs;\n \n         public Builder(\n-                final boolean filtered,\n-                final String fiql,\n-                final PageReference pageRef,\n-                final AbstractAnyRestClient<UserTO> restClient,\n                 final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final String realm,\n-                final String type) {\n+                final AbstractAnyRestClient<UserTO> restClient,\n+                final String type,\n+                final PageReference pageRef) {\n \n-            super(UserTO.class, filtered, fiql, pageRef, restClient, realm, type);\n+            super(restClient, type, pageRef);\n             this.anyTypeClassTOs = anyTypeClassTOs;\n         }\n \n         @Override\n-        protected WizardMgtPanel<AnyHandler<UserTO>> newInstance(final String parentId) {\n-            return new UserSearchResultPanel(\n-                    type, parentId, filtered, fiql, pageRef, restClient, anyTypeClassTOs, realm,\n-                    StandardEntitlement.USER_LIST);\n+        protected WizardMgtPanel<AnyHandler<UserTO>> newInstance(final String id) {\n+            return new UserSearchResultPanel(id, this, StandardEntitlement.USER_LIST);\n+        }\n+\n+        @Override\n+        public List<AnyTypeClassTO> getAnyTypeClassTOs() {\n+            return this.anyTypeClassTOs;\n         }\n     }\n }"},{"sha":"fae623a330b27ac557ab3e4de74ba716265d522f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":14,"deletions":1,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -25,12 +25,15 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.common.lib.search.SearchableFields;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.feedback.FeedbackMessage;\n import org.apache.wicket.feedback.IFeedbackMessageFilter;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -50,6 +53,8 @@ public abstract class AbstractSearchPanel extends Panel {\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractSearchPanel.class);\n \n+    protected AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+\n     protected SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n     protected ResourceRestClient resourceRestClient = new ResourceRestClient();\n@@ -180,7 +185,15 @@ protected List<String> load() {\n \n             @Override\n             protected List<String> load() {\n-                return schemaRestClient.getPlainSchemaNames();\n+                return CollectionUtils.collect(schemaRestClient.getSchemas(SchemaType.PLAIN,\n+                        anyTypeRestClient.get(typeKind.name()).getClasses().toArray(new String[] {})),\n+                        new Transformer<AbstractSchemaTO, String>() {\n+\n+                    @Override\n+                    public String transform(final AbstractSchemaTO input) {\n+                        return input.getKey();\n+                    }\n+                }, new ArrayList<String>());\n             }\n         };\n "},{"sha":"2e3de8fdf210f8cb76dad05af5fbaac93396c267","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSearchPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -45,7 +45,7 @@ public GroupSearchPanel build(final String id) {\n     }\n \n     private GroupSearchPanel(final String id, final GroupSearchPanel.Builder builder) {\n-        super(id, AnyTypeKind.USER, builder);\n+        super(id, AnyTypeKind.GROUP, builder);\n     }\n \n     @Override"},{"sha":"b47647f35790bcdb11d3be570f64cc9b3f62dcc1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSelectionSearchResultPanel.java","status":"added","additions":189,"deletions":0,"changes":189,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -0,0 +1,189 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels.search;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.GroupDisplayAttributesModalPage;\n+import org.apache.syncope.client.console.panels.GroupSearchResultPanel;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.console.wizards.any.AnyHandler;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.springframework.util.ReflectionUtils;\n+\n+public final class GroupSelectionSearchResultPanel extends GroupSearchResultPanel {\n+\n+    private static final long serialVersionUID = -1100228004207271271L;\n+\n+    private GroupSelectionSearchResultPanel(final String id, final Builder builder) {\n+        super(id, builder, StandardEntitlement.GROUP_SEARCH);\n+    }\n+\n+    @Override\n+    protected List<IColumn<GroupTO, String>> getColumns() {\n+        final List<IColumn<GroupTO, String>> columns = new ArrayList<>();\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DETAILS_VIEW)) {\n+            final Field field = ReflectionUtils.findField(GroupTO.class, name);\n+\n+            if (\"token\".equalsIgnoreCase(name)) {\n+                columns.add(new PropertyColumn<GroupTO, String>(new ResourceModel(name, name), name, name));\n+            } else if (field != null && field.getType().equals(Date.class)) {\n+                columns.add(new PropertyColumn<GroupTO, String>(new ResourceModel(name, name), name, name));\n+            } else {\n+                columns.add(new PropertyColumn<GroupTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_ATTRIBUTES_VIEW)) {\n+            if (schemaNames.contains(name)) {\n+                columns.add(new AttrColumn<GroupTO>(name, SchemaType.PLAIN));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DERIVED_ATTRIBUTES_VIEW)) {\n+            if (dSchemaNames.contains(name)) {\n+                columns.add(new AttrColumn<GroupTO>(name, SchemaType.DERIVED));\n+            }\n+        }\n+\n+        // Add defaults in case of no selection\n+        if (columns.isEmpty()) {\n+            for (String name : GroupDisplayAttributesModalPage.GROUP_DEFAULT_SELECTION) {\n+                columns.add(new PropertyColumn<GroupTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+\n+            prefMan.setList(getRequest(), getResponse(), Constants.PREF_GROUP_DETAILS_VIEW,\n+                    Arrays.asList(GroupDisplayAttributesModalPage.GROUP_DEFAULT_SELECTION));\n+        }\n+\n+        columns.add(new ActionColumn<GroupTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel<GroupTO> getActions(final String componentId, final IModel<GroupTO> model) {\n+                final ActionLinksPanel.Builder<GroupTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                panel.add(new ActionLink<GroupTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                        send(GroupSelectionSearchResultPanel.this,\n+                                Broadcast.BUBBLE, new GroupSelection(target, model.getObject()));\n+                    }\n+                }, ActionLink.ActionType.SELECT, StandardEntitlement.GROUP_READ);\n+\n+                return panel.build(componentId);\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                return panel.add(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, entitlement).build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n+\n+    public static final class Builder extends GroupSearchResultPanel.Builder {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        public Builder(\n+                final List<AnyTypeClassTO> anyTypeClassTOs,\n+                final AbstractAnyRestClient<GroupTO> restClient,\n+                final String type,\n+                final PageReference pageRef) {\n+\n+            super(anyTypeClassTOs, restClient, type, pageRef);\n+            this.filtered = true;\n+            this.checkBoxEnabled = false;\n+        }\n+\n+        @Override\n+        protected WizardMgtPanel<AnyHandler<GroupTO>> newInstance(final String id) {\n+            return new GroupSelectionSearchResultPanel(id, this);\n+        }\n+    }\n+\n+    public static class GroupSelection implements Serializable {\n+\n+        private static final long serialVersionUID = 1242677935378149180L;\n+\n+        private final AjaxRequestTarget target;\n+\n+        private final GroupTO grp;\n+\n+        public GroupSelection(final AjaxRequestTarget target, final GroupTO grp) {\n+            this.target = target;\n+            this.grp = grp;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+\n+        public GroupTO getSelection() {\n+            return grp;\n+        }\n+    }\n+}"},{"sha":"be9834fecc5401f9f232191a21327a99eda2c094","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -115,7 +115,6 @@ public SearchClausePanel(\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 send(this, Broadcast.BUBBLE, new SearchEvent(target));\n             }\n-\n         };\n \n         searchButtonFragment = new Fragment(\"operator\", \"searchButtonFragment\", this);\n@@ -608,7 +607,7 @@ public boolean evaluate(final Pair<Long, String> object) {\n         }\n     }\n \n-    protected static class SearchEvent implements Serializable {\n+    public static class SearchEvent implements Serializable {\n \n         private static final long serialVersionUID = 2693338614198749301L;\n "},{"sha":"910986a8d37d3285b8ee86df92f15b66b2645ce3","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSearchPanel.java","status":"modified","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -19,20 +19,13 @@\n package org.apache.syncope.client.console.panels.search;\n \n import java.util.List;\n-import org.apache.syncope.client.console.rest.UserRestClient;\n-import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.apache.wicket.model.IModel;\n \n public final class UserSearchPanel extends AnyObjectSearchPanel {\n \n     private static final long serialVersionUID = -1769527800450203738L;\n \n-    private final UserRestClient userRestClient = new UserRestClient();\n-\n     public static class Builder extends AnyObjectSearchPanel.Builder {\n \n         private static final long serialVersionUID = 6308997285778809578L;\n@@ -51,20 +44,4 @@ private UserSearchPanel(final String id, final Builder builder) {\n         super(id, AnyTypeKind.USER, builder);\n     }\n \n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof SearchClausePanel.SearchEvent) {\n-            final String fiql = SearchUtils.buildFIQL(\n-                    UserSearchPanel.this.getModel().getObject(), SyncopeClient.getUserSearchConditionBuilder());\n-\n-            final List<UserTO> res = userRestClient.search(\n-                    \"/\", fiql, 1, 50, new SortParam<>(\"username\", true), AnyTypeKind.USER.name());\n-\n-            // let's provide result panel to be populated ....\n-            \n-        } else {\n-            super.onEvent(event);\n-        }\n-    }\n-\n }"},{"sha":"929c280c3944671dc5efc2418adaf6b6b0ad00eb","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSelectionSearchResultPanel.java","status":"added","additions":191,"deletions":0,"changes":191,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -0,0 +1,191 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels.search;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.UserDisplayAttributesModalPage;\n+import org.apache.syncope.client.console.panels.UserSearchResultPanel;\n+import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.console.wizards.any.AnyHandler;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.springframework.util.ReflectionUtils;\n+\n+public final class UserSelectionSearchResultPanel extends UserSearchResultPanel {\n+\n+    private static final long serialVersionUID = -1100228004207271272L;\n+\n+    private UserSelectionSearchResultPanel(final String id, final UserSelectionSearchResultPanel.Builder builder) {\n+        super(id, builder, StandardEntitlement.USER_LIST);\n+    }\n+\n+    @Override\n+    protected List<IColumn<UserTO, String>> getColumns() {\n+\n+        final List<IColumn<UserTO, String>> columns = new ArrayList<>();\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n+            final Field field = ReflectionUtils.findField(UserTO.class, name);\n+\n+            if (\"token\".equalsIgnoreCase(name)) {\n+                columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n+            } else if (field != null && field.getType().equals(Date.class)) {\n+                columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n+            } else {\n+                columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n+            if (schemaNames.contains(name)) {\n+                columns.add(new AttrColumn<UserTO>(name, SchemaType.PLAIN));\n+            }\n+        }\n+\n+        for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW)) {\n+            if (dSchemaNames.contains(name)) {\n+                columns.add(new AttrColumn<UserTO>(name, SchemaType.DERIVED));\n+            }\n+        }\n+\n+        // Add defaults in case of no selection\n+        if (columns.isEmpty()) {\n+            for (String name : UserDisplayAttributesModalPage.USER_DEFAULT_SELECTION) {\n+                columns.add(new PropertyColumn<UserTO, String>(new ResourceModel(name, name), name, name));\n+            }\n+\n+            prefMan.setList(getRequest(), getResponse(), Constants.PREF_USERS_DETAILS_VIEW,\n+                    Arrays.asList(UserDisplayAttributesModalPage.USER_DEFAULT_SELECTION));\n+        }\n+\n+        columns.add(new ActionColumn<UserTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public ActionLinksPanel<UserTO> getActions(final String componentId, final IModel<UserTO> model) {\n+\n+                final ActionLinksPanel.Builder<UserTO> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                panel.add(new ActionLink<UserTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                        send(UserSelectionSearchResultPanel.this,\n+                                Broadcast.BUBBLE, new UserSelection(target, model.getObject()));\n+                    }\n+                }, ActionLink.ActionType.SELECT, StandardEntitlement.USER_READ);\n+\n+                return panel.build(componentId, model.getObject());\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(page.getPageReference());\n+\n+                return panel.add(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, entitlement).build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected <T extends AnyTO> Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n+\n+    public static final class Builder extends UserSearchResultPanel.Builder {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        public Builder(\n+                final List<AnyTypeClassTO> anyTypeClassTOs,\n+                final AbstractAnyRestClient<UserTO> restClient,\n+                final String type,\n+                final PageReference pageRef) {\n+\n+            super(anyTypeClassTOs, restClient, type, pageRef);\n+            this.filtered = true;\n+            this.checkBoxEnabled = false;\n+        }\n+\n+        @Override\n+        protected WizardMgtPanel<AnyHandler<UserTO>> newInstance(final String id) {\n+            return new UserSelectionSearchResultPanel(id, this);\n+        }\n+    }\n+\n+    public static class UserSelection implements Serializable {\n+\n+        private static final long serialVersionUID = 1242677935378149180L;\n+\n+        private final AjaxRequestTarget target;\n+\n+        private final UserTO usr;\n+\n+        public UserSelection(final AjaxRequestTarget target, final UserTO usr) {\n+            this.target = target;\n+            this.usr = usr;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+\n+        public UserTO getSelection() {\n+            return usr;\n+        }\n+    }\n+}"},{"sha":"020e55fa3422d4f7e950e504077128512b2675e3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/markup/html/navigation/paging/AjaxDataNavigationToolbar.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2Fnavigation%2Fpaging%2FAjaxDataNavigationToolbar.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2Fnavigation%2Fpaging%2FAjaxDataNavigationToolbar.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2Fnavigation%2Fpaging%2FAjaxDataNavigationToolbar.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -30,7 +30,7 @@ public class AjaxDataNavigationToolbar extends AjaxNavigationToolbar {\n     private static final long serialVersionUID = -225570234877133351L;\n \n     private final WebMarkupContainer container;\n-    \n+\n     public AjaxDataNavigationToolbar(final DataTable<?, ?> table, final WebMarkupContainer container) {\n         super(table);\n         this.container = container;\n@@ -44,7 +44,9 @@ protected PagingNavigator newPagingNavigator(final String navigatorId, final Dat\n \n             @Override\n             protected void onAjaxEvent(final AjaxRequestTarget target) {\n-                target.add(container);\n+                if (container != null) {\n+                    target.add(container);\n+                }\n             }\n         };\n     }"},{"sha":"44b892ce37f377315a5fabc1732761963a4149b9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/AjaxFallbackDataTable.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FAjaxFallbackDataTable.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -56,7 +56,9 @@ protected WebMarkupContainer newSortableHeader(\n \n                     @Override\n                     protected void onAjaxClick(final AjaxRequestTarget target) {\n-                        target.add(container);\n+                        if (container != null) {\n+                            target.add(container);\n+                        }\n                     }\n                 };\n             }"},{"sha":"809b1cd76684134bf081b362bce876c54c3162ba","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -82,7 +82,7 @@ protected WizardModel buildModelSteps(final AnyHandler<T> modelObject, final Wiz\n         addOptionalDetailsPanel(modelObject, wizardModel);\n \n         if ((this instanceof GroupWizardBuilder) && (modelObject.getInnerObject() instanceof GroupTO)) {\n-            wizardModel.add(new Ownership(GroupHandler.class.cast(modelObject)));\n+            wizardModel.add(new Ownership(GroupHandler.class.cast(modelObject), pageRef));\n             wizardModel.add(new DynamicMemberships(GroupHandler.class.cast(modelObject)));\n         }\n "},{"sha":"c7881a591830a616fb53d758e2eb9eacb8b02fb9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":148,"deletions":14,"changes":162,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -21,39 +21,72 @@\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggle;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggleConfig;\n import java.util.ArrayList;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n import org.apache.syncope.client.console.panels.search.GroupSearchPanel;\n+import org.apache.syncope.client.console.panels.search.GroupSelectionSearchResultPanel;\n import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.panels.search.SearchClausePanel;\n+import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n+import org.apache.syncope.client.console.panels.search.UserSelectionSearchResultPanel;\n+import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.CheckBox;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n \n public class Ownership extends WizardStep {\n \n     private static final long serialVersionUID = 855618618337931784L;\n \n+    private final GroupHandler handler;\n+\n     private final WebMarkupContainer ownerContainer;\n \n+    private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+\n+    private final GroupSearchPanel groupSearchPanel;\n+\n+    private final GroupRestClient groupRestClient = new GroupRestClient();\n+\n     private final Fragment groupSearchFragment;\n \n+    private final GroupSelectionSearchResultPanel groupSearchResultPanel;\n+\n+    private final UserSearchPanel userSearchPanel;\n+\n+    private final UserRestClient userRestClient = new UserRestClient();\n+\n     private final Fragment userSearchFragment;\n \n-    public Ownership(final GroupHandler groupHandler) {\n+    private final UserSelectionSearchResultPanel userSearchResultPanel;\n+\n+    private final Model<Boolean> isGroupOwnership;\n+\n+    public Ownership(final GroupHandler groupHandler, final PageReference pageRef) {\n         super();\n+        this.handler = groupHandler;\n \n-        final Model<Boolean> isGroupOwnership = Model.of(groupHandler.getInnerObject().getGroupOwner() != null);\n+        isGroupOwnership = Model.of(groupHandler.getInnerObject().getGroupOwner() != null);\n \n         final BootstrapToggleConfig config = new BootstrapToggleConfig();\n         config\n@@ -101,8 +134,10 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         isGroupOwnership.setObject(!isGroupOwnership.getObject());\n                         if (isGroupOwnership.getObject()) {\n                             ownerContainer.addOrReplace(groupSearchFragment);\n+                            groupSearchResultPanel.search(null, target);\n                         } else {\n                             ownerContainer.addOrReplace(userSearchFragment);\n+                            userSearchResultPanel.search(null, target);\n                         }\n                         target.add(ownerContainer);\n                     }\n@@ -116,25 +151,65 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         this.add(ownerContainer);\n \n         groupSearchFragment = new Fragment(\"search\", \"groupSearchFragment\", this);\n-        final GroupSearchPanel groupSearchPanel = new GroupSearchPanel.Builder(\n+        groupSearchPanel = new GroupSearchPanel.Builder(\n                 new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(\"groupsearch\");\n         groupSearchFragment.add(groupSearchPanel.setRenderBodyOnly(true));\n \n+        AnyTypeTO anyTypeTO = anyTypeRestClient.get(AnyTypeKind.GROUP.name());\n+\n+        groupSearchResultPanel = GroupSelectionSearchResultPanel.class.cast(new GroupSelectionSearchResultPanel.Builder(\n+                anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n+                groupRestClient,\n+                anyTypeTO.getKey(),\n+                pageRef).build(\"searchResult\"));\n+\n+        groupSearchFragment.add(groupSearchResultPanel);\n+\n         userSearchFragment = new Fragment(\"search\", \"userSearchFragment\", this);\n-        final AnyObjectSearchPanel userSearchPanel = new UserSearchPanel.Builder(\n-                new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(\"usersearch\");\n+        userSearchPanel = UserSearchPanel.class.cast(new UserSearchPanel.Builder(\n+                new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(\"usersearch\"));\n         userSearchFragment.add(userSearchPanel.setRenderBodyOnly(true));\n \n+        anyTypeTO = anyTypeRestClient.get(AnyTypeKind.USER.name());\n+\n+        userSearchResultPanel = UserSelectionSearchResultPanel.class.cast(new UserSelectionSearchResultPanel.Builder(\n+                anyTypeRestClient.getAnyTypeClass(anyTypeTO.getClasses().toArray(new String[] {})),\n+                userRestClient,\n+                anyTypeTO.getKey(),\n+                pageRef).build(\"searchResult\"));\n+\n+        userSearchFragment.add(userSearchResultPanel);\n+\n         if (isGroupOwnership.getObject()) {\n             ownerContainer.add(groupSearchFragment);\n         } else {\n             ownerContainer.add(userSearchFragment);\n         }\n \n-        final GroupTO groupTO = GroupHandler.class.cast(groupHandler).getInnerObject();\n-\n         final AjaxTextFieldPanel userOwner\n-                = new AjaxTextFieldPanel(\"userOwner\", \"userOwner\", new Model<String>(), false);\n+                = new AjaxTextFieldPanel(\"userOwner\", \"userOwner\",\n+                        new PropertyModel<String>(groupHandler.getInnerObject(), \"userOwner\") {\n+\n+                    private static final long serialVersionUID = -3743432456095828573L;\n+\n+                    @Override\n+                    public String getObject() {\n+                        if (groupHandler.getInnerObject().getUserOwner() == null) {\n+                            return StringUtils.EMPTY;\n+                        } else {\n+                            return String.valueOf(groupHandler.getInnerObject().getUserOwner());\n+                        }\n+                    }\n+\n+                    @Override\n+                    public void setObject(final String object) {\n+                        if (StringUtils.isBlank(object)) {\n+                            groupHandler.getInnerObject().setUserOwner(null);\n+                        } else {\n+                            groupHandler.getInnerObject().setUserOwner(Long.parseLong(object));\n+                        }\n+                    }\n+                }, false);\n         userOwner.setPlaceholder(\"userOwner\");\n         userOwner.hideLabel();\n         userOwner.setReadOnly(true).setOutputMarkupId(true);\n@@ -146,13 +221,35 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(userOwner);\n+                send(Ownership.this, Broadcast.EXACT, new GroupSelectionSearchResultPanel.GroupSelection(target, null));\n             }\n         };\n-        userSearchFragment.add(userOwnerReset.setEnabled(false));\n+        userSearchFragment.add(userOwnerReset);\n \n         final AjaxTextFieldPanel groupOwner\n-                = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\", new Model<String>(), false);\n+                = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\",\n+                        new PropertyModel<String>(groupHandler.getInnerObject(), \"groupOwner\") {\n+\n+                    private static final long serialVersionUID = -3743432456095828573L;\n+\n+                    @Override\n+                    public String getObject() {\n+                        if (groupHandler.getInnerObject().getGroupOwner() == null) {\n+                            return StringUtils.EMPTY;\n+                        } else {\n+                            return String.valueOf(groupHandler.getInnerObject().getGroupOwner());\n+                        }\n+                    }\n+\n+                    @Override\n+                    public void setObject(final String object) {\n+                        if (StringUtils.isBlank(object)) {\n+                            groupHandler.getInnerObject().setGroupOwner(null);\n+                        } else {\n+                            groupHandler.getInnerObject().setGroupOwner(Long.parseLong(object));\n+                        }\n+                    }\n+                }, false);\n         groupOwner.setPlaceholder(\"groupOwner\");\n         groupOwner.hideLabel();\n         groupOwner.setReadOnly(true).setOutputMarkupId(true);\n@@ -164,9 +261,46 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(groupOwner);\n+                send(Ownership.this, Broadcast.EXACT, new GroupSelectionSearchResultPanel.GroupSelection(target, null));\n             }\n         };\n-        groupSearchFragment.add(groupOwnerReset.setEnabled(false));\n+        groupSearchFragment.add(groupOwnerReset);\n+    }\n+\n+    @Override\n+\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof SearchClausePanel.SearchEvent) {\n+            final AjaxRequestTarget target = SearchClausePanel.SearchEvent.class.cast(event.getPayload()).getTarget();\n+            if (Ownership.this.isGroupOwnership.getObject()) {\n+                final String fiql = SearchUtils.buildFIQL(\n+                        groupSearchPanel.getModel().getObject(), SyncopeClient.getUserSearchConditionBuilder());\n+                groupSearchResultPanel.search(fiql, target);\n+            } else {\n+                final String fiql = SearchUtils.buildFIQL(\n+                        userSearchPanel.getModel().getObject(), SyncopeClient.getUserSearchConditionBuilder());\n+                userSearchResultPanel.search(fiql, target);\n+            }\n+        } else if (event.getPayload() instanceof UserSelectionSearchResultPanel.UserSelection) {\n+            final UserTO sel = ((UserSelectionSearchResultPanel.UserSelection) event.getPayload()).getSelection();\n+            if (sel == null) {\n+                handler.getInnerObject().setUserOwner(null);\n+            } else {\n+                handler.getInnerObject().setUserOwner(sel.getKey());\n+                handler.getInnerObject().setGroupOwner(null);\n+            }\n+            ((UserSelectionSearchResultPanel.UserSelection) event.getPayload()).getTarget().add(ownerContainer);\n+        } else if (event.getPayload() instanceof GroupSelectionSearchResultPanel.GroupSelection) {\n+            final GroupTO sel = ((GroupSelectionSearchResultPanel.GroupSelection) event.getPayload()).getSelection();\n+            if (sel == null) {\n+                handler.getInnerObject().setGroupOwner(null);\n+            } else {\n+                handler.getInnerObject().setGroupOwner(sel.getKey());\n+                handler.getInnerObject().setUserOwner(null);\n+            }\n+            ((GroupSelectionSearchResultPanel.GroupSelection) event.getPayload()).getTarget().add(ownerContainer);\n+        } else {\n+            super.onEvent(event);\n+        }\n     }\n }"},{"sha":"36874d049dd77dcba693301ba8eb220d35d78852","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -338,3 +338,9 @@ END - Style for Information panel\n   width: 110px !important;\n }\n \n+div.searchResult{\n+  margin-top: 30px;\n+  display: block;\n+  clear: both;\n+}\n+"},{"sha":"772222ea00914502a3ce43b2d3fb9fbfbf5627cc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -132,7 +132,7 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentSelect\">\n-      <a href=\"#\" wicket:id=\"selectLink\"><img id=\"actionLink\" src=\"img/actions/select.png\" alt=\"select icon\" title=\"Select\"/></a>\n+      <a href=\"#\" wicket:id=\"selectLink\"><i class=\"glyphicon glyphicon-ok\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentExport\">"},{"sha":"1e1629b9e3ad3e15c0247e0ffb3fc915b3d762cc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Ownership.html","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.html?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -31,17 +31,23 @@\n       <wicket:fragment wicket:id=\"userSearchFragment\">\n         <div class=\"form-group input-group\">\n           <span wicket:id=\"userOwner\"/>\n-          <a href=\"#\" wicket:id=\"userOwnerReset\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-remove-circle\" alt=\"reset user owner\" title=\"Delete\"></i></a>\n+          <a href=\"#\" wicket:id=\"userOwnerReset\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-remove-circle\" alt=\"reset user owner\" title=\"Reset\"></i></a>\n         </div>\n         <span wicket:id=\"usersearch\">[USER SEARCH]</span>\n+        <div class=\"searchResult\">\n+          <span wicket:id=\"searchResult\">[USER SEARCH RESULT]</span>\n+        </div>\n       </wicket:fragment>\n \n       <wicket:fragment wicket:id=\"groupSearchFragment\">\n         <div class=\"form-group input-group\">\n           <span wicket:id=\"groupOwner\"/>\n-          <a href=\"#\" wicket:id=\"groupOwnerReset\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-remove-circle\" alt=\"reset group owner\" title=\"Delete\"></i></a>\n+          <a href=\"#\" wicket:id=\"groupOwnerReset\" class=\"input-group-addon\"><i class=\"glyphicon glyphicon-remove-circle\" alt=\"reset group owner\" title=\"Reset\"></i></a>\n         </div>\n         <span wicket:id=\"groupsearch\">[GROUP SEARCH]</span>\n+        <div class=\"searchResult\">\n+          <span wicket:id=\"searchResult\">[GROUP SEARCH RESULT]</span>\n+        </div>\n       </wicket:fragment>\n     </wicket:panel>\n   </body>"},{"sha":"7cd4c8420ac0ab8979fc929e1744441f48b1b33d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/05478375f5d286323e993e8057f95a272fed38c6/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/05478375f5d286323e993e8057f95a272fed38c6/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=05478375f5d286323e993e8057f95a272fed38c6","patch":"@@ -324,9 +324,9 @@ public static GroupPatch diff(final GroupTO updated, final GroupTO original, fin\n \n         // 2. ownership\n         result.setUserOwner(replacePatchItem(\n-                original.getUserOwner(), updated.getUserOwner(), new LongReplacePatchItem()));\n+                updated.getUserOwner(), original.getUserOwner(), new LongReplacePatchItem()));\n         result.setGroupOwner(replacePatchItem(\n-                original.getGroupOwner(), updated.getGroupOwner(), new LongReplacePatchItem()));\n+                updated.getGroupOwner(), original.getGroupOwner(), new LongReplacePatchItem()));\n \n         // 3. dynamic membership\n         result.setUDynMembershipCond(updated.getUDynMembershipCond());"}]}