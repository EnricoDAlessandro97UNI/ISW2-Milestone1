{"sha":"0c5f6f877f921ee220f2da3f49a5d17e68652fb0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBjNWY2Zjg3N2Y5MjFlZTIyMGYyZGEzZjQ5YTVkMTdlNjg2NTJmYjA=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-05T11:04:19Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-05T11:04:19Z"},"message":"Removing unnecessary JTA support\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246620 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"def276ae135cd20c11c95c1664e25c9f66540336","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/def276ae135cd20c11c95c1664e25c9f66540336"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0c5f6f877f921ee220f2da3f49a5d17e68652fb0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0c5f6f877f921ee220f2da3f49a5d17e68652fb0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0c5f6f877f921ee220f2da3f49a5d17e68652fb0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0c5f6f877f921ee220f2da3f49a5d17e68652fb0/comments","author":null,"committer":null,"parents":[{"sha":"4b72e6f1f7d63b13014c03d01a0564bcb5cb3647","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4b72e6f1f7d63b13014c03d01a0564bcb5cb3647","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4b72e6f1f7d63b13014c03d01a0564bcb5cb3647"}],"stats":{"total":274,"additions":15,"deletions":259},"files":[{"sha":"6d932a87dd0d6e491cd7099e8b7db5f344ec2340","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnectorInstance.java","status":"modified","additions":11,"deletions":4,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c5f6f877f921ee220f2da3f49a5d17e68652fb0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c5f6f877f921ee220f2da3f49a5d17e68652fb0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java?ref=0c5f6f877f921ee220f2da3f49a5d17e68652fb0","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -30,6 +30,7 @@\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n+import javax.persistence.FetchType;\n import javax.persistence.GeneratedValue;\n import javax.persistence.GenerationType;\n import javax.persistence.Id;\n@@ -52,31 +53,36 @@ public class ConnectorInstance extends AbstractBaseBean {\n     generator = \"SEQ_ConnectorInstance\")\n     @TableGenerator(name = \"SEQ_ConnectorInstance\", allocationSize = 20)\n     private Long id;\n+\n     /**\n-     * Connector class name prefix used to retrieve configuration bean\n+     * Connector class name prefix used to retrieve configuration bean.\n      */\n     @Column(nullable = false)\n     private String connectorName;\n+\n     /**\n      * ConnectorBundle-Name: Qualified name for the connector bundle.\n      * Within a given deployment, the pair (ConnectorBundle-Name,\n      * ConnectorBundle-Version) must be unique.\n      */\n     @Column(nullable = false)\n     private String bundleName;\n+\n     /**\n      * ConnectorBundle-Version: The version of the bundle. Within a given\n      * deployment, the pair (ConnectorBundle-Name, ConnectorBundle-Version)\n      * must be unique.\n      */\n     @Column(nullable = false)\n     private String version;\n+\n     /**\n      * The set of capabilities supported by this connector instance.\n      */\n-    @CollectionOfElements(targetElement = ConnectorCapability.class)\n+    @CollectionOfElements(fetch = FetchType.EAGER)\n     @Enumerated(EnumType.STRING)\n     private Set<ConnectorCapability> capabilities;\n+\n     /**\n      * The main configuration for the connector instance.\n      * This is directly implemented by the Configuration bean class which\n@@ -85,6 +91,7 @@ public class ConnectorInstance extends AbstractBaseBean {\n     @Lob\n     @Column(nullable = false)\n     private String xmlConfiguration;\n+\n     /**\n      * Provisioning target resources associated to the connector.\n      * The connector can be considered the resource's type."},{"sha":"81448104bfdfc2e361302acdf68dcdd0563aa17c","filename":"core/src/main/java/org/syncope/core/persistence/transaction/JTAPersistenceUnitPostProcessor.java","status":"removed","additions":0,"deletions":85,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4b72e6f1f7d63b13014c03d01a0564bcb5cb3647/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftransaction%2FJTAPersistenceUnitPostProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4b72e6f1f7d63b13014c03d01a0564bcb5cb3647/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftransaction%2FJTAPersistenceUnitPostProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftransaction%2FJTAPersistenceUnitPostProcessor.java?ref=4b72e6f1f7d63b13014c03d01a0564bcb5cb3647","patch":"@@ -1,85 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.transaction;\n-\n-import java.util.Properties;\n-import javax.persistence.spi.PersistenceUnitTransactionType;\n-import javax.sql.DataSource;\n-import org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo;\n-import org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor;\n-\n-public class JTAPersistenceUnitPostProcessor\n-        implements PersistenceUnitPostProcessor {\n-\n-    private boolean jtaMode = false;\n-    private DataSource jtaDataSource;\n-    private String transactionManagerLookupKey;\n-    private String transactionManagerLookupValue;\n-    private PersistenceUnitTransactionType transactionType =\n-            PersistenceUnitTransactionType.RESOURCE_LOCAL;\n-\n-    @Override\n-    public final void postProcessPersistenceUnitInfo(\n-            final MutablePersistenceUnitInfo mutablePersistenceUnitInfo) {\n-\n-        if (jtaMode) {\n-            transactionType = PersistenceUnitTransactionType.JTA;\n-            mutablePersistenceUnitInfo.setJtaDataSource(getJtaDataSource());\n-\n-            Properties persistenceUnitProps =\n-                    mutablePersistenceUnitInfo.getProperties();\n-            persistenceUnitProps.setProperty(transactionManagerLookupKey,\n-                    transactionManagerLookupValue);\n-            mutablePersistenceUnitInfo.setProperties(persistenceUnitProps);\n-        }\n-        mutablePersistenceUnitInfo.setTransactionType(transactionType);\n-    }\n-\n-    public final boolean isJtaMode() {\n-        return jtaMode;\n-    }\n-\n-    public final void setJtaMode(final boolean jtaMode) {\n-        this.jtaMode = jtaMode;\n-    }\n-\n-    public DataSource getJtaDataSource() {\n-        return jtaDataSource;\n-    }\n-\n-    public final void setJtaDataSource(final DataSource jtaDataSource) {\n-        this.jtaDataSource = jtaDataSource;\n-    }\n-\n-    public final String getTransactionManagerLookupKey() {\n-        return transactionManagerLookupKey;\n-    }\n-\n-    public final void setTransactionManagerLookupKey(\n-            final String transactionManagerLookupKey) {\n-\n-        this.transactionManagerLookupKey = transactionManagerLookupKey;\n-    }\n-\n-    public final String getTransactionManagerLookupValue() {\n-        return transactionManagerLookupValue;\n-    }\n-\n-    public final void setTransactionManagerLookupValue(\n-            final String transactionManagerLookupValue) {\n-\n-        this.transactionManagerLookupValue = transactionManagerLookupValue;\n-    }\n-}"},{"sha":"6018a32f3b74f7a922e0905ca5eab963e22724c8","filename":"core/src/main/java/org/syncope/core/persistence/transaction/SpringJTAWithJPAFallbackTransactionManager.java","status":"removed","additions":0,"deletions":137,"changes":137,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4b72e6f1f7d63b13014c03d01a0564bcb5cb3647/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftransaction%2FSpringJTAWithJPAFallbackTransactionManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4b72e6f1f7d63b13014c03d01a0564bcb5cb3647/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftransaction%2FSpringJTAWithJPAFallbackTransactionManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftransaction%2FSpringJTAWithJPAFallbackTransactionManager.java?ref=4b72e6f1f7d63b13014c03d01a0564bcb5cb3647","patch":"@@ -1,137 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.core.persistence.transaction;\n-\n-import java.io.Serializable;\n-import javax.transaction.NotSupportedException;\n-import javax.transaction.SystemException;\n-import javax.transaction.Transaction;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.InitializingBean;\n-import org.springframework.orm.jpa.JpaTransactionManager;\n-import org.springframework.transaction.PlatformTransactionManager;\n-import org.springframework.transaction.TransactionDefinition;\n-import org.springframework.transaction.TransactionException;\n-import org.springframework.transaction.TransactionStatus;\n-import org.springframework.transaction.jta.JtaTransactionManager;\n-import org.springframework.transaction.jta.TransactionFactory;\n-\n-/**\n- * TransactionManager for usage with Spring.\n- * It normally goes as per <tx:jta-transaction-manager/> but,\n- * when not available, uses a configured JpaTransactionManager as fallback.\n- *\n- * @see JtaTransactionManager\n- * @see JpaTransactionManager\n- */\n-public class SpringJTAWithJPAFallbackTransactionManager\n-        implements PlatformTransactionManager,\n-        TransactionFactory, InitializingBean, Serializable {\n-\n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            SpringJTAWithJPAFallbackTransactionManager.class);\n-    /**\n-     * Spring's JPA Transaction Manager.\n-     */\n-    private JpaTransactionManager jpaTransactionManager;\n-    /**\n-     * Spring's JTA Transaction Manager.\n-     */\n-    private JtaTransactionManager jtaTransactionManager;\n-\n-    public SpringJTAWithJPAFallbackTransactionManager() {\n-        jtaTransactionManager = new JtaTransactionManager();\n-    }\n-\n-    public SpringJTAWithJPAFallbackTransactionManager(\n-            final JpaTransactionManager jpaTransactionManager) {\n-\n-        this();\n-        setJpaTransactionManager(jpaTransactionManager);\n-    }\n-\n-    /**\n-     * @return fallback JPA Transaction Manager\n-     */\n-    public final JpaTransactionManager getJpaTransactionManager() {\n-        return jpaTransactionManager;\n-    }\n-\n-    public final void setJpaTransactionManager(\n-            final JpaTransactionManager jpaTransactionManager) {\n-\n-        this.jpaTransactionManager = jpaTransactionManager;\n-    }\n-\n-    private TransactionFactory getTransactionFactory() {\n-        return (TransactionFactory) (jtaTransactionManager != null\n-                ? jtaTransactionManager : jpaTransactionManager);\n-    }\n-\n-    private PlatformTransactionManager getPlatformTransactionManager() {\n-        return jtaTransactionManager != null\n-                ? jtaTransactionManager : jpaTransactionManager;\n-    }\n-\n-    @Override\n-    public final TransactionStatus getTransaction(\n-            final TransactionDefinition definition)\n-            throws TransactionException {\n-\n-        return getPlatformTransactionManager().getTransaction(definition);\n-    }\n-\n-    @Override\n-    public void commit(TransactionStatus status) throws TransactionException {\n-        getPlatformTransactionManager().commit(status);\n-    }\n-\n-    @Override\n-    public void rollback(TransactionStatus status) throws TransactionException {\n-        getPlatformTransactionManager().rollback(status);\n-    }\n-\n-    @Override\n-    public Transaction createTransaction(String name, int timeout)\n-            throws NotSupportedException, SystemException {\n-\n-        return getTransactionFactory().createTransaction(name, timeout);\n-    }\n-\n-    @Override\n-    public boolean supportsResourceAdapterManagedTransactions() {\n-        return getTransactionFactory().\n-                supportsResourceAdapterManagedTransactions();\n-    }\n-\n-    @Override\n-    public void afterPropertiesSet() throws Exception {\n-        try {\n-            jtaTransactionManager.afterPropertiesSet();\n-        } catch (Throwable t) {\n-            jtaTransactionManager = null;\n-\n-            LOG.error(\"Could not instantiate JtaTransactionManager, \"\n-                    + \"reverting to JpaTransactionManager\");\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Here's why\", t);\n-            }\n-        }\n-    }\n-}"},{"sha":"1ca73f903c7e5df4d50d6c6798fdca98023a5e70","filename":"core/src/main/resources/persistence.properties","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c5f6f877f921ee220f2da3f49a5d17e68652fb0/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c5f6f877f921ee220f2da3f49a5d17e68652fb0/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=0c5f6f877f921ee220f2da3f49a5d17e68652fb0","patch":"@@ -19,6 +19,4 @@ hibernate.connection.password=syncope\n hibernate.dialect=org.hibernate.dialect.Oracle10gDialect\n #dbUnitDataTypeFactory=org.dbunit.ext.postgresql.PostgresqlDataTypeFactory\n dbUnitDataTypeFactory=org.dbunit.ext.oracle.Oracle10DataTypeFactory\n-database.schema=SYNCOPE\n-jtaMode=true\n-transactionManagerLookupValue=org.hibernate.transaction.SunONETransactionManagerLookup\n+database.schema=SYNCOPE\n\\ No newline at end of file"},{"sha":"af8e3f3a189e18c861dac81121f14506efebc448","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":2,"deletions":27,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c5f6f877f921ee220f2da3f49a5d17e68652fb0/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c5f6f877f921ee220f2da3f49a5d17e68652fb0/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=0c5f6f877f921ee220f2da3f49a5d17e68652fb0","patch":"@@ -80,14 +80,6 @@\n         </property>\n         <property name=\"jpaPropertyMap\">\n             <map>\n-                <!-- JTA support for Hibernate -->\n-                <entry key=\"hibernate.transaction.flush_before_completion\"\n-                       value=\"true\"/>\n-                <entry key=\"hibernate.current_session_context_class\"\n-                       value=\"jta\"/>\n-                <entry key=\"hibernate.connection.release_mode\"\n-                       value=\"auto\"/>\n-\n                 <!-- Second level cache -->\n                 <entry key=\"hibernate.cache.use_second_level_cache\" value=\"true\"/>\n                 <entry key=\"hibernate.cache.use_query_cache\" value=\"true\"/>\n@@ -100,18 +92,6 @@\n                 <entry key=\"hibernate.generate_statistics\" value=\"true\"/>\n             </map>\n         </property>\n-        <property name=\"persistenceUnitPostProcessors\">\n-            <list>\n-                <bean class=\"org.syncope.core.persistence.transaction.JTAPersistenceUnitPostProcessor\">\n-                    <property name=\"jtaMode\" value=\"${jtaMode}\"/>\n-                    <property name=\"jtaDataSource\" ref=\"dataSource\"/>\n-                    <property name=\"transactionManagerLookupKey\"\n-                              value=\"hibernate.transaction.manager_lookup_class\"/>\n-                    <property name=\"transactionManagerLookupValue\"\n-                              value=\"${transactionManagerLookupValue}\"/>\n-                </bean>\n-            </list>\n-        </property>\n     </bean>\n \n     <bean id=\"entityManager\"\n@@ -120,17 +100,12 @@\n     </bean>\n \n     <tx:annotation-driven/>\n-    <bean id=\"jpaTransactionManager\"\n+    <bean id=\"transactionManager\"\n           class=\"org.springframework.orm.jpa.JpaTransactionManager\">\n         <property name=\"entityManagerFactory\" ref=\"entityManagerFactory\"/>\n     </bean>\n-    <bean id=\"transactionManager\"\n-          class=\"org.syncope.core.persistence.transaction.SpringJTAWithJPAFallbackTransactionManager\">\n-        <property name=\"jpaTransactionManager\" ref=\"jpaTransactionManager\"/>\n-    </bean>\n \n-    <bean id=\"jexlEngine\"\n-          class=\"org.apache.commons.jexl2.JexlEngine\">\n+    <bean id=\"jexlEngine\" class=\"org.apache.commons.jexl2.JexlEngine\">\n         <property name=\"cache\" value=\"512\"/>\n         <property name=\"lenient\" value=\"true\"/>\n         <property name=\"silent\" value=\"false\"/>"},{"sha":"8b4d9e576b35ddf3acc3bbd1d3d3bc2d7542e2c1","filename":"core/src/test/resources/persistence.properties","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0c5f6f877f921ee220f2da3f49a5d17e68652fb0/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0c5f6f877f921ee220f2da3f49a5d17e68652fb0/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties?ref=0c5f6f877f921ee220f2da3f49a5d17e68652fb0","patch":"@@ -14,6 +14,4 @@ hibernate.connection.url=jdbc:hsqldb:mem:syncopedb\n hibernate.connection.username=sa\n hibernate.connection.password=\n hibernate.dialect=org.hibernate.dialect.HSQLDialect\n-dbUnitDataTypeFactory=org.dbunit.ext.hsqldb.HsqldbDataTypeFactory\n-jtaMode=false\n-transactionManagerLookupValue=\n+dbUnitDataTypeFactory=org.dbunit.ext.hsqldb.HsqldbDataTypeFactory\n\\ No newline at end of file"}]}