{"sha":"49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ5YjRmMzljOGFhZjM1MzYyZjcyZGMyM2QxNjk4ZTFkMTg3OWI4ZDI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-07-08T14:54:56Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-07-08T14:54:56Z"},"message":"[SYNCOPE-896] fix for drop down null valid flag + destination realm management improvement","tree":{"sha":"5acf36baad99eba2932bc97a7d54527ae675a110","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5acf36baad99eba2932bc97a7d54527ae675a110"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"e3fc2263408dff9992529d14deb3b387b66358ac","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e3fc2263408dff9992529d14deb3b387b66358ac","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e3fc2263408dff9992529d14deb3b387b66358ac"}],"stats":{"total":126,"additions":95,"deletions":31},"files":[{"sha":"7a1bfc4c63346460e10207b799b86cfe5273224b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","patch":"@@ -59,6 +59,14 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n         }\n+        \n+        setNullValid(true);\n+    }\n+\n+    @Override\n+    public FieldPanel<T> setRequired(final boolean required) {\n+        setNullValid(!required);\n+        return super.setRequired(required);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -79,7 +87,7 @@ public AjaxDropDownChoicePanel<T> setChoices(final IModel<? extends List<? exten\n         return this;\n     }\n \n-    public AjaxDropDownChoicePanel<T> setNullValid(final boolean validity) {\n+    public final AjaxDropDownChoicePanel<T> setNullValid(final boolean validity) {\n         BootstrapSelect.class.cast(field).setNullValid(validity);\n         return this;\n     }"},{"sha":"239a5036eaf8a11bf0f914fb301d2474a7463511","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectTemplateWizardBuilder.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectTemplateWizardBuilder.java?ref=49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","patch":"@@ -31,13 +31,16 @@ public class AnyObjectTemplateWizardBuilder extends AnyObjectWizardBuilder\n \n     private static final long serialVersionUID = 6716803168859873877L;\n \n+    private final TemplatableTO templatable;\n+\n     public AnyObjectTemplateWizardBuilder(\n             final TemplatableTO templatable,\n             final String anyType,\n             final List<String> anyTypeClasses,\n             final AnyObjectFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n         super(null, anyTypeClasses, formLayoutInfo, pageRef);\n+        this.templatable = templatable;\n \n         if (templatable.getTemplates().containsKey(anyType)) {\n             setItem(new AnyWrapper<>(AnyObjectTO.class.cast(templatable.getTemplates().get(anyType))));\n@@ -51,6 +54,15 @@ public AnyObjectTemplateWizardBuilder(\n         }\n     }\n \n+    @Override\n+    protected Details<AnyObjectTO> addOptionalDetailsPanel(final AnyWrapper<AnyObjectTO> modelObject) {\n+        final Details<AnyObjectTO> details = super.addOptionalDetailsPanel(modelObject);\n+        if (templatable instanceof RealmTO) {\n+            details.disableRealmSpecification();\n+        }\n+        return details;\n+    }\n+\n     @Override\n     public AjaxWizard<AnyWrapper<AnyObjectTO>> build(final String id) {\n         return super.build(id, AjaxWizard.Mode.TEMPLATE);"},{"sha":"3eb30ea6643f8bf5b558315f3f4afd0704dfd689","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","patch":"@@ -31,7 +31,6 @@\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.model.util.ListModel;\n \n public class AnyObjectWizardBuilder extends AnyWizardBuilder<AnyObjectTO> implements AnyObjectForm {\n@@ -72,13 +71,11 @@ protected Serializable onApplyInternal(final AnyWrapper<AnyObjectTO> modelObject\n     }\n \n     @Override\n-    protected AnyObjectWizardBuilder addOptionalDetailsPanel(\n-            final AnyWrapper<AnyObjectTO> modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new AnyObjectDetails(\n+    protected Details<AnyObjectTO> addOptionalDetailsPanel(final AnyWrapper<AnyObjectTO> modelObject) {\n+        return new AnyObjectDetails(\n                 modelObject,\n                 new ListModel<>(Collections.<StatusBean>emptyList()),\n                 mode == AjaxWizard.Mode.TEMPLATE,\n-                modelObject.getInnerObject().getKey() != null, pageRef));\n-        return this;\n+                modelObject.getInnerObject().getKey() != null, pageRef);\n     }\n }"},{"sha":"4df08c0cb7717bdbbab11fd3b37a2f3d33f38d91","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","patch":"@@ -84,7 +84,10 @@ public AnyWizardBuilder(\n     @Override\n     protected WizardModel buildModelSteps(final AnyWrapper<A> modelObject, final WizardModel wizardModel) {\n         // optional details panel step\n-        addOptionalDetailsPanel(modelObject, wizardModel);\n+        final Details<A> details = addOptionalDetailsPanel(modelObject);\n+        if (details != null) {\n+            wizardModel.add(details);\n+        }\n \n         if ((this instanceof GroupWizardBuilder)\n                 && (modelObject.getInnerObject() instanceof GroupTO)\n@@ -155,17 +158,17 @@ protected WizardModel buildModelSteps(final AnyWrapper<A> modelObject, final Wiz\n         return wizardModel;\n     }\n \n-    protected AnyWizardBuilder<A> addOptionalDetailsPanel(\n-            final AnyWrapper<A> modelObject, final WizardModel wizardModel) {\n+    protected Details<A> addOptionalDetailsPanel(final AnyWrapper<A> modelObject) {\n \n         if (modelObject.getInnerObject().getKey() != null) {\n-            wizardModel.add(new Details<>(\n+            return new Details<>(\n                     modelObject,\n                     new ListModel<>(Collections.<StatusBean>emptyList()),\n                     mode == AjaxWizard.Mode.TEMPLATE,\n                     true,\n-                    pageRef));\n+                    pageRef);\n+        } else {\n+            return null;\n         }\n-        return this;\n     }\n }"},{"sha":"8e1ccfbdac6cec61be3168c7b27a57edc2ea56b0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Details.java","status":"modified","additions":32,"deletions":6,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDetails.java?ref=49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","patch":"@@ -18,11 +18,17 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n+import java.util.ArrayList;\n import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardStep;\n import org.apache.wicket.model.IModel;\n@@ -40,6 +46,8 @@\n \n     protected final StatusPanel statusPanel;\n \n+    private final FieldPanel<String> realm;\n+\n     public Details(\n             final AnyWrapper<T> wrapper,\n             final IModel<List<StatusBean>> statusModel,\n@@ -51,13 +59,26 @@ public Details(\n \n         final T inner = wrapper.getInnerObject();\n \n-        final AjaxTextFieldPanel realm = new AjaxTextFieldPanel(\n-                \"destinationRealm\", \"destinationRealm\", new PropertyModel<String>(inner, \"realm\"), false);\n-        add(realm.setReadOnly(StringUtils.isNotEmpty(inner.getRealm())));\n         if (templateMode) {\n-            realm.enableJexlHelp();\n+            realm = new AjaxTextFieldPanel(\n+                    \"destinationRealm\", \"destinationRealm\", new PropertyModel<String>(inner, \"realm\"), false);\n+            AjaxTextFieldPanel.class.cast(realm).enableJexlHelp();\n+        } else {\n+            realm = new AjaxDropDownChoicePanel<>(\n+                    \"destinationRealm\", \"destinationRealm\", new PropertyModel<String>(inner, \"realm\"), false);\n+\n+            ((AjaxDropDownChoicePanel<String>) realm).setChoices(CollectionUtils.collect(\n+                    new RealmRestClient().list(),\n+                    new Transformer<RealmTO, String>() {\n+\n+                @Override\n+                public String transform(final RealmTO input) {\n+                    return input.getFullPath();\n+                }\n+            }, new ArrayList<String>()));\n         }\n-        \n+        add(realm);\n+\n         statusPanel = new StatusPanel(\"status\", inner, statusModel, pageRef);\n \n         add(statusPanel.setEnabled(includeStatusPanel).\n@@ -67,6 +88,11 @@ public Details(\n                 setEnabled(includeStatusPanel).setVisible(includeStatusPanel).setRenderBodyOnly(true));\n     }\n \n+    public Details<T> disableRealmSpecification() {\n+        this.realm.setReadOnly(true);\n+        return this;\n+    }\n+\n     protected AnnotatedBeanPanel getGeneralStatusInformation(final String id, final T anyTO) {\n         return new AnnotatedBeanPanel(id, anyTO);\n     }"},{"sha":"13f0698e4963223b32e27ef0aec1955a5c16842e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupTemplateWizardBuilder.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupTemplateWizardBuilder.java?ref=49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","patch":"@@ -31,12 +31,15 @@ public class GroupTemplateWizardBuilder extends GroupWizardBuilder implements Te\n \n     private static final long serialVersionUID = 6716803168859873877L;\n \n+    private final TemplatableTO templatable;\n+\n     public GroupTemplateWizardBuilder(\n             final TemplatableTO templatable,\n             final List<String> anyTypeClasses,\n             final GroupFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n         super(null, anyTypeClasses, formLayoutInfo, pageRef);\n+        this.templatable = templatable;\n \n         if (templatable.getTemplates().containsKey(AnyTypeKind.GROUP.name())) {\n             setItem(new GroupWrapper(GroupTO.class.cast(templatable.getTemplates().get(AnyTypeKind.GROUP.name()))));\n@@ -49,6 +52,15 @@ public GroupTemplateWizardBuilder(\n         }\n     }\n \n+    @Override\n+    protected Details<GroupTO> addOptionalDetailsPanel(final AnyWrapper<GroupTO> modelObject) {\n+        final Details<GroupTO> details = super.addOptionalDetailsPanel(modelObject);\n+        if (templatable instanceof RealmTO) {\n+            details.disableRealmSpecification();\n+        }\n+        return details;\n+    }\n+\n     @Override\n     public AjaxWizard<AnyWrapper<GroupTO>> build(final String id) {\n         return super.build(id, AjaxWizard.Mode.TEMPLATE);"},{"sha":"04f72dc58c3f56191fb53f6a87271ed43a5614c9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","patch":"@@ -32,7 +32,6 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.model.util.ListModel;\n \n public class GroupWizardBuilder extends AnyWizardBuilder<GroupTO> implements GroupForm {\n@@ -88,13 +87,11 @@ protected Serializable onApplyInternal(final AnyWrapper<GroupTO> modelObject) {\n     }\n \n     @Override\n-    protected GroupWizardBuilder addOptionalDetailsPanel(\n-            final AnyWrapper<GroupTO> modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new GroupDetails(\n+    protected Details<GroupTO> addOptionalDetailsPanel(final AnyWrapper<GroupTO> modelObject) {\n+        return new GroupDetails(\n                 GroupWrapper.class.cast(modelObject),\n                 new ListModel<>(Collections.<StatusBean>emptyList()),\n                 mode == AjaxWizard.Mode.TEMPLATE,\n-                modelObject.getInnerObject().getKey() != null, pageRef));\n-        return this;\n+                modelObject.getInnerObject().getKey() != null, pageRef);\n     }\n }"},{"sha":"9873e35320b36e5d9ecd15adaaae5de2d5760510","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserTemplateWizardBuilder.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserTemplateWizardBuilder.java?ref=49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","patch":"@@ -31,12 +31,15 @@ public class UserTemplateWizardBuilder extends UserWizardBuilder implements Temp\n \n     private static final long serialVersionUID = 6716803168859873877L;\n \n+    private final TemplatableTO templatable;\n+\n     public UserTemplateWizardBuilder(\n             final TemplatableTO templatable,\n             final List<String> anyTypeClasses,\n             final UserFormLayoutInfo formLayoutInfo,\n             final PageReference pageRef) {\n         super(null, anyTypeClasses, formLayoutInfo, pageRef);\n+        this.templatable = templatable;\n \n         if (templatable.getTemplates().containsKey(AnyTypeKind.USER.name())) {\n             setItem(new UserWrapper(UserTO.class.cast(templatable.getTemplates().get(AnyTypeKind.USER.name()))));\n@@ -49,6 +52,15 @@ public UserTemplateWizardBuilder(\n         }\n     }\n \n+    @Override\n+    protected Details<UserTO> addOptionalDetailsPanel(final AnyWrapper<UserTO> modelObject) {\n+        final Details<UserTO> details = super.addOptionalDetailsPanel(modelObject);\n+        if (templatable instanceof RealmTO) {\n+            details.disableRealmSpecification();\n+        }\n+        return details;\n+    }\n+\n     @Override\n     public AjaxWizard<AnyWrapper<UserTO>> build(final String id) {\n         return super.build(id, AjaxWizard.Mode.TEMPLATE);"},{"sha":"11078e7ec8cadd646f6ee37e7afefabc62dbecf6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/49b4f39c8aaf35362f72dc23d1698e1d1879b8d2/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=49b4f39c8aaf35362f72dc23d1698e1d1879b8d2","patch":"@@ -35,7 +35,6 @@\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.extensions.wizard.WizardModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.util.ListModel;\n \n@@ -98,15 +97,13 @@ protected Serializable onApplyInternal(final AnyWrapper<UserTO> modelObject) {\n     }\n \n     @Override\n-    protected UserWizardBuilder addOptionalDetailsPanel(\n-            final AnyWrapper<UserTO> modelObject, final WizardModel wizardModel) {\n+    protected Details<UserTO> addOptionalDetailsPanel(final AnyWrapper<UserTO> modelObject) {\n \n-        wizardModel.add(new UserDetails(\n+        return new UserDetails(\n                 UserWrapper.class.cast(modelObject), statusModel, mode == AjaxWizard.Mode.TEMPLATE,\n                 modelObject.getInnerObject().getKey() != null,\n                 UserFormLayoutInfo.class.cast(formLayoutInfo).isPasswordManagement(),\n-                pageRef));\n-        return this;\n+                pageRef);\n     }\n \n     /**"}]}