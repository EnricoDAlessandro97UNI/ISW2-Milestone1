{"sha":"e9668c86ba02f6da64f40aae8c3b7543a39fed78","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU5NjY4Yzg2YmEwMmY2ZGE2NGY0MGFhZThjM2I3NTQzYTM5ZmVkNzg=","commit":{"author":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2014-08-11T11:01:13Z"},"committer":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2014-08-11T11:01:13Z"},"message":"merge from branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1617253 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b735b4441b7e4c36eab31127d7dd577f3489437b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b735b4441b7e4c36eab31127d7dd577f3489437b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e9668c86ba02f6da64f40aae8c3b7543a39fed78","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9668c86ba02f6da64f40aae8c3b7543a39fed78","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e9668c86ba02f6da64f40aae8c3b7543a39fed78","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9668c86ba02f6da64f40aae8c3b7543a39fed78/comments","author":null,"committer":null,"parents":[{"sha":"06e458bb17c77c0dc4df262eac7bbf4fec130efb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/06e458bb17c77c0dc4df262eac7bbf4fec130efb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/06e458bb17c77c0dc4df262eac7bbf4fec130efb"},{"sha":"8da8a3969219a3de30e9da12509f6e5e8c709b6b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8da8a3969219a3de30e9da12509f6e5e8c709b6b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8da8a3969219a3de30e9da12509f6e5e8c709b6b"}],"stats":{"total":47,"additions":19,"deletions":28},"files":[{"sha":"56b68ed977521d997ed14ff34b30d3ed1d095d1c","filename":"installer/src/main/java/org/apache/syncope/installer/containers/Tomcat.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9668c86ba02f6da64f40aae8c3b7543a39fed78/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9668c86ba02f6da64f40aae8c3b7543a39fed78/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java?ref=e9668c86ba02f6da64f40aae8c3b7543a39fed78","patch":"@@ -21,19 +21,20 @@\n import com.izforge.izpack.panels.process.AbstractUIProcessHandler;\n import java.io.UnsupportedEncodingException;\n import java.net.URLEncoder;\n-import org.apache.syncope.installer.utilities.FileSystemUtils;\n import org.apache.syncope.installer.utilities.HttpUtils;\n \n public class Tomcat extends AbstractContainer {\n \n+    private static final boolean IS_WIN = System.getProperty(\"os.name\").toLowerCase().contains(\"win\");\n+\n     private static final String DEPLOY_SYNCOPE_CORE_QUERY = \"/manager/text/deploy?path=/syncope&war=file:\";\n \n     private static final String DEPLOY_SYNCOPE_CONSOLE_QUERY = \"/manager/text/deploy?path=/syncope-console&war=file:\";\n \n     private final String installPath;\n \n     private final String artifactId;\n-    \n+\n     private final HttpUtils httpUtils;\n \n     public Tomcat(final boolean tomcatSsl, final String tomcatHost, final String tomcatPort,\n@@ -46,7 +47,7 @@ public Tomcat(final boolean tomcatSsl, final String tomcatHost, final String tom\n \n     public boolean deployCore() {\n         int status;\n-        if (FileSystemUtils.IS_WIN) {\n+        if (IS_WIN) {\n             status = httpUtils.getWithBasicAuth(DEPLOY_SYNCOPE_CORE_QUERY\n                     + pathEncoded(String.format(WIN_CORE_RELATIVE_PATH, installPath, artifactId)));\n         } else {\n@@ -58,7 +59,7 @@ public boolean deployCore() {\n \n     public boolean deployConsole() {\n         int status;\n-        if (FileSystemUtils.IS_WIN) {\n+        if (IS_WIN) {\n             status = httpUtils.getWithBasicAuth(DEPLOY_SYNCOPE_CONSOLE_QUERY\n                     + pathEncoded(String.format(WIN_CONSOLE_RELATIVE_PATH, installPath, artifactId)));\n         } else {"},{"sha":"4d0a9d2d312e2ebd1b0029507e0854347aea29ca","filename":"installer/src/main/java/org/apache/syncope/installer/processes/ArchetypeProcess.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9668c86ba02f6da64f40aae8c3b7543a39fed78/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9668c86ba02f6da64f40aae8c3b7543a39fed78/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java?ref=e9668c86ba02f6da64f40aae8c3b7543a39fed78","patch":"@@ -42,22 +42,18 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         final String syncopeAdminPassword = args[10];\n \n         final FileSystemUtils fileSystemUtils = new FileSystemUtils(handler);\n-        if (!new File(installPath).exists()) {\n-            fileSystemUtils.createDirectory(installPath, null);\n-            InstallLog.initialize(installPath, handler);\n-        } else {\n-            InstallLog.initialize(installPath, handler);\n-        }\n+        fileSystemUtils.createDirectory(installPath);\n+        InstallLog.initialize(installPath, handler);\n \n         final MavenUtils mavenUtils = new MavenUtils(mavenDir, handler);\n         mavenUtils.archetypeGenerate(\n                 syncopeVersion, groupId, artifactId, secretKey, anonymousKey, installPath);\n \n         fileSystemUtils.writeToFile(new File(installPath + \"/\" + artifactId + Pom.PATH),\n                 String.format(Pom.FILE, syncopeVersion, syncopeVersion, groupId, artifactId));\n-        fileSystemUtils.createDirectory(confDirectory, null);\n-        fileSystemUtils.createDirectory(logsDirectory, null);\n-        fileSystemUtils.createDirectory(bundlesDirectory, null);\n+        fileSystemUtils.createDirectory(confDirectory);\n+        fileSystemUtils.createDirectory(logsDirectory);\n+        fileSystemUtils.createDirectory(bundlesDirectory);\n         mavenUtils.createPackage(installPath + \"/\" + artifactId, confDirectory, logsDirectory, bundlesDirectory);\n     }\n "},{"sha":"983e3e84adc93275b60b6f6fa8f7eb1eae3d59c6","filename":"installer/src/main/java/org/apache/syncope/installer/processes/PersistenceProcess.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9668c86ba02f6da64f40aae8c3b7543a39fed78/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FPersistenceProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9668c86ba02f6da64f40aae8c3b7543a39fed78/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FPersistenceProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FPersistenceProcess.java?ref=e9668c86ba02f6da64f40aae8c3b7543a39fed78","patch":"@@ -61,7 +61,7 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n \n         handler.logOutput(\"Configure persistence file according to \" + dbSelected + \" properties\", true);\n         InstallLog.getInstance().info(\"Configure persistence file according to \" + dbSelected + \" properties\");\n-        \n+\n         switch (dbSelected) {\n             case POSTGRES:\n                 persistenceProperties.append(String.format(\n@@ -95,7 +95,9 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n     }\n \n     private void writeOrmFile(final FileSystemUtils fileSystemUtils, final String content) {\n-        fileSystemUtils.createDirectory(installPath + \"/\" + artifactId + OrmXml.PATH_DIR, null);\n-        fileSystemUtils.writeToFile(new File(installPath + \"/\" + artifactId + OrmXml.PATH_COMPLETE), content);\n+        fileSystemUtils.createDirectory(\n+                installPath + File.separator + artifactId + OrmXml.PATH_DIR);\n+        fileSystemUtils.writeToFile(\n+                new File(installPath + File.separator + artifactId + OrmXml.PATH_COMPLETE), content);\n     }\n }"},{"sha":"0dae6b4f62f2d5a5dd28bd3bd1e15171cdec0b5c","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/FileSystemUtils.java","status":"modified","additions":4,"deletions":12,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e9668c86ba02f6da64f40aae8c3b7543a39fed78/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e9668c86ba02f6da64f40aae8c3b7543a39fed78/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FFileSystemUtils.java?ref=e9668c86ba02f6da64f40aae8c3b7543a39fed78","patch":"@@ -30,25 +30,17 @@\n \n public class FileSystemUtils {\n \n-    public static final boolean IS_WIN = System.getProperty(\"os.name\").toLowerCase().contains(\"win\");\n-\n-    private static final String UNIX_CREATE_DIRECTORY = \"mkdir -p %s\";\n-\n-    private static final String WIN_CREATE_DIRECTORY = \"mkdir %s\";\n-\n     private final AbstractUIProcessHandler handler;\n \n     public FileSystemUtils(final AbstractUIProcessHandler handler) {\n         this.handler = handler;\n     }\n \n-    public void createDirectory(final String directoryPath, final String path) {\n-        if (IS_WIN) {\n-            exec(String.format(WIN_CREATE_DIRECTORY, directoryPath), path);\n-        } else {\n-            exec(String.format(UNIX_CREATE_DIRECTORY, directoryPath), path);\n+    public void createDirectory(final String directoryPath) {\n+        final File directory = new File(directoryPath);\n+        if (!directory.exists()) {\n+            directory.mkdirs();\n         }\n-\n     }\n \n     public void exec(final String cmd, final String path) {"}]}