{"sha":"8b8e9336baa5470a457c90e158b8ec9a1402525d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhiOGU5MzM2YmFhNTQ3MGE0NTdjOTBlMTU4YjhlYzlhMTQwMjUyNWQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-08-09T13:55:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-08-09T13:56:05Z"},"message":"[SYNCOPE-1350] Docs","tree":{"sha":"daac0d16df5b9ef444bb2f555f7427729c06ad42","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/daac0d16df5b9ef444bb2f555f7427729c06ad42"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8b8e9336baa5470a457c90e158b8ec9a1402525d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8b8e9336baa5470a457c90e158b8ec9a1402525d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8b8e9336baa5470a457c90e158b8ec9a1402525d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8b8e9336baa5470a457c90e158b8ec9a1402525d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4ea63a376e01ba629446bea13ff77cfb14409048","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4ea63a376e01ba629446bea13ff77cfb14409048","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4ea63a376e01ba629446bea13ff77cfb14409048"}],"stats":{"total":269,"additions":203,"deletions":66},"files":[{"sha":"1834986f48112522029f1335d38108d095f2d858","filename":"src/main/asciidoc/getting-started/movingForward.adoc","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b8e9336baa5470a457c90e158b8ec9a1402525d/src%2Fmain%2Fasciidoc%2Fgetting-started%2FmovingForward.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b8e9336baa5470a457c90e158b8ec9a1402525d/src%2Fmain%2Fasciidoc%2Fgetting-started%2FmovingForward.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fgetting-started%2FmovingForward.adoc?ref=8b8e9336baa5470a457c90e158b8ec9a1402525d","patch":"@@ -37,13 +37,12 @@ The following values must be changed from the defaults in the `security.properti\n * *adminPassword* - The SHA1 hash evaluation of the cleartext password, the default value of which is \"password\".\n * *secretKey* - The secret key value used for AES ciphering. Only required if either:\n ** the value for \"*adminPasswordAlgorithm*\" is \"AES\" or\n-** the configuration parameter \"password.cipher.algorithm\" is changed to \"AES\" (See section 4.6.12 \"Configuration Parameters\" of\n+** the configuration parameter \"password.cipher.algorithm\" is changed to \"AES\" (See section 4.6.14 \"Configuration Parameters\" of\n the Reference Guide for more information).\n * *anonymousKey* - The key value to use for anonymous requests.\n-* *jwsKey* - The symmetric signing key used to sign access tokens (Syncope 2.0.3 onwards only). See section 4.4.1 \"REST Authentication and \n+* *jwsKey* - The symmetric signing key used to sign access tokens. See section 4.4.1 \"REST Authentication and \n Authorization\" of the Reference Guide for more information.\n \n Note that if you installed Syncope using either the installer or the maven archetype methods, then you will have already\n-supplied custom values for \"*secretKey*\" and \"*anonymousKey*\". From Syncope 2.0.4 onwards, both installation methods will also\n+supplied custom values for \"*secretKey*\" and \"*anonymousKey*\". Both installation methods will also\n query for \"*jwsKey*\", and the installer method will prompt for the \"*adminPassword*\" as well. \n-"},{"sha":"86ecf1e379cd8b9906b2fddc0ac09502b9756227","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/restfulservices.adoc","status":"modified","additions":200,"deletions":62,"changes":262,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8b8e9336baa5470a457c90e158b8ec9a1402525d/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Frestfulservices.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8b8e9336baa5470a457c90e158b8ec9a1402525d/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Frestfulservices.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Frestfulservices.adoc?ref=8b8e9336baa5470a457c90e158b8ec9a1402525d","patch":"@@ -32,7 +32,7 @@ where `protocol`, `host` and `port` reflect your Java EE container installation.\n .REST Reference\n ====\n A complete REST reference generated from https://en.wikipedia.org/wiki/Web_Application_Description_Language[WADL^] is\n-http://syncope.apache.org/rest/2.0/index.html[published^] as well as made available with each deployment at\n+http://syncope.apache.org/rest/2.1/index.html[published^] as well as made available with each deployment at\n \n ....\n protocol://host:port/syncope/\n@@ -166,16 +166,24 @@ when communicating with <<external-resource-details,External Resources>> with no\n \n ===== Prefer and Preference-Applied\n \n-Some REST endpoints - typically for creating, updating or deleting Users, Groups or Any Objects - return the\n-entity in the response payload by default. +\n-If this is not required, the `Prefer` request header can be set to `return-no-content` (`return-content` will instead\n-keep the default behavior).\n+Some REST endpoints allow the clients to request certain behavior; this is done via the `Prefer` header.\n \n When `Prefer` is specified in the request, the response will feature the `Preference-Applied` header, with value set\n to the effective preference applied.\n \n+====== return-content / return-no-content\n+ \n+REST endpoints for creating, updating or deleting Users, Groups or Any Objects return the entity in the response payload\n+by default. +\n+If this is not required, the `Prefer` request header can be set to `return-no-content` (`return-content` will instead\n+keep the default behavior).\n+\n [TIP]\n-Use `Prefer` in scenarios where it is important to avoid unnecessary data in the response payload.\n+Use `Prefer: return-no-content` in scenarios where it is important to avoid unnecessary data in the response payload.\n+\n+====== respond-async\n+\n+The <<batch>> endpoint can be requested for <<asynchronous-batch-processing,asynchronous processing>>.\n \n ===== ETag, If-Match and If-None-Match\n \n@@ -201,42 +209,173 @@ the <<entitlements,entitlements>> owned by the requesting user.\n When invoking the REST endpoint `/users/self` in `GET`, the `X-Syncope-Privileges` response header will list all\n the <<privileges,privileges>> owned by the requesting user.\n \n-==== Bulk Operations\n-\n-Some REST endpoints feature the _bulk mode_, e.g. the capability to perform a given operation onto several items at the\n-same time.\n+==== Batch\n \n-The table below shows the bulk operations available.\n+Batch requests allow grouping multiple operations into a single HTTP request payload. +\n+A batch request is represented as a https://tools.ietf.org/html/rfc2046[Multipart MIME v1.0 message^], a standard format\n+allowing the representation of multiple parts, each of which may have a different content type (currently\n+JSON, YAML or XML), within a single request.\n \n-[cols=\"1,5a\"]\n-|===\n+Batch requests are handled by the `/batch` REST endpoint: via HTTP `POST` method to submit requests, via HTTP `GET`\n+method to fetch responses <<asynchronous-batch-processing,asynchronously>>.\n \n-|Any Objects\n-| * `DELETE` - remove several any objects at once\n-\n-|Groups\n-| * `PROVISION` - provision all members of the given group onto all the associated external resources\n- * `DEPROVISION` - deprovision all members of the given group from all the associated external resources\n- * `DELETE` - remove several groups at once\n-\n-|Users\n-| * `SUSPEND` - suspend several users at once\n-* `REACTIVATE` - set several users at once back to the active state\n-* `MUSTCHANGEPASSWORD` - force several users at once to change their passwords\n-* `DELETE` - remove several users at once\n-\n-| Tasks\n-| * `DRYRUN` - executes several tasks at once, with the <<dryrun>> option set\n-* `EXECUTE` - executes several tasks at once\n-* `DELETE` - remove several tasks at once\n-\n-| External Resources\n-| * `DEPROVISION` - delete several users, groups or any objects at once from an external resource but keep in the\n-internal storage and leave the external resource associated\n- * `UNLINK` - remove the association between several users, groups or any objects at once and an external resource,\n-without performing any deprovisioning operation\n- * `UNASSIGN` - unlink and deprovision several users, groups or any objects at once from an external resource\n-|===\n+[NOTE]\n+The specification and implementation of batch processing in Apache Syncope is inspired by the standards defined\n+by http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793748[OData 4.0^]\n+\n+===== Batch requests\n+\n+The batch request must contain a `Content-Type` header specifying a content type of `multipart/mixed` and a boundary\n+specification as defined in https://tools.ietf.org/html/rfc2046[RFC2046^].\n+\n+The body of a batch request is made up of a series of individual requests, each represented as a distinct MIME part\n+(i.e. separated by the boundary defined in the `Content-Type` header).\n+\n+Core will process the requests within a batch request sequentially.\n+\n+An individual request must include a `Content-Type` header with value `application/http` and a\n+`Content-Transfer-Encoding` header with value `binary`.\n+\n+.Sample batch request\n+====\n+----\n+--batch_61bfef8d-0a00-41aa-b775-7b6efff37652 // <1>\n+Content-Type: application/http\n+Content-Transfer-Encoding: binary\n+^M // <2>\n+POST /users HTTP/1.1 // <3>\n+Accept: application/json\n+Content-Length: 1157\n+Content-Type: application/json\n+^M\n+{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"key\":null,\"type\":\"USER\",\"realm\":\"/\"}\n+--batch_61bfef8d-0a00-41aa-b775-7b6efff37652\n+Content-Type: application/http\n+Content-Transfer-Encoding: binary\n+^M\n+POST /groups HTTP/1.1 // <4>\n+Accept: application/xml\n+Content-Length: 628\n+Content-Type: application/xml\n+^M\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><syncope21:group xmlns:syncope21=\"http://syncope.apache.org/2.1\">\n+</syncope21:group>\n+--batch_61bfef8d-0a00-41aa-b775-7b6efff37652\n+Content-Type: application/http\n+Content-Transfer-Encoding: binary\n+^M\n+PATCH /users/24eb15aebatch@syncope.apache.org HTTP/1.1 // <5>\n+Accept: application/json\n+Content-Length: 362\n+Content-Type: application/json\n+Prefer: return-no-content\n+^M\n+{\"@class\":\"org.apache.syncope.common.lib.patch.UserPatch\",\"key\":\"24eb15aebatch@syncope.apache.org\"}\n+--batch_61bfef8d-0a00-41aa-b775-7b6efff37652\n+Content-Type: application/http\n+Content-Transfer-Encoding: binary\n+^M\n+DELETE /groups/287ede7c-98eb-44e8-979d-8777fa077e12 HTTP/1.1 // <6>\n+--batch_61bfef8d-0a00-41aa-b775-7b6efff37652--\n+----\n+<1> message boundary\n+<2> represents CR LF\n+<3> user create, with JSON payload (shortened)\n+<4> group create, with XML payload (shortened)\n+<5> user update, with JSON payload (shortened)\n+<6> group delete\n+====\n+\n+===== Batch responses\n+\n+Requests within a batch are evaluated according to the same semantics used when the request appears outside the context\n+of a batch.\n+\n+The order of individual requests in a batch request is significant.\n+\n+If the set of request headers of a batch request are valid (the `Content-Type` is set to `multipart/mixed`, etc.)\n+Core will return a `200 OK` HTTP response code to indicate that the request was accepted for processing, and the\n+related execution results.\n+\n+If Core receives a batch request with an invalid set of headers it will return a `400 Bad Request` code and perform no\n+further processing of the request.\n+\n+A response to a batch request must contain a `Content-Type` header with value `multipart/mixed`.\n+\n+Structurally, a batch response body must match one-to-one with the corresponding batch request body, such that the same \n+multipart MIME message structure defined for requests is used for responses\n+\n+.Sample batch response\n+====\n+----\n+--batch_61bfef8d-0a00-41aa-b775-7b6efff37652 // <1>\n+Content-Type: application/http\n+Content-Transfer-Encoding: binary\n+^M // <2>\n+HTTP/1.1 201 Created // <3>\n+Content-Type: application/json\n+Date: Thu, 09 Aug 2018 09:55:46 GMT\n+ETag: \"1533808545975\"\n+Location: http://localhost:9080/syncope/rest/users/d399ba84-12e3-43d0-99ba-8412e303d083\n+X-Syncope-Domain: Master\n+X-Syncope-Key: d399ba84-12e3-43d0-99ba-8412e303d083\n+^M\n+{\"entity\":{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\"}\n+--batch_61bfef8d-0a00-41aa-b775-7b6efff37652\n+Content-Type: application/http\n+Content-Transfer-Encoding: binary\n+^M\n+HTTP/1.1 201 Created // <4>\n+Content-Type: application/xml\n+Date: Thu, 09 Aug 2018 09:55:46 GMT\n+ETag: \"1533808546342\"\n+Location: http://localhost:9080/syncope/rest/groups/843b2fc3-b8a8-4a8b-bb2f-c3b8a87a8b2e\n+X-Syncope-Domain: Master\n+X-Syncope-Key: 843b2fc3-b8a8-4a8b-bb2f-c3b8a87a8b2e\n+^M\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n+<syncope21:provisioningResult xmlns:syncope21=\"http://syncope.apache.org/2.1\"></syncope21:provisioningResult>\n+--batch_61bfef8d-0a00-41aa-b775-7b6efff37652\n+Content-Type: application/http\n+Content-Transfer-Encoding: binary\n+^M\n+HTTP/1.1 204 No Content // <5>\n+Content-Length: 0\n+Date: Thu, 09 Aug 2018 09:55:47 GMT\n+Preference-Applied: return-no-content\n+X-Syncope-Domain: Master\n+^M\n+--batch_61bfef8d-0a00-41aa-b775-7b6efff37652\n+Content-Type: application/http\n+Content-Transfer-Encoding: binary\n+^M\n+HTTP/1.1 200 OK // <6>\n+Content-Type: application/json\n+Date: Thu, 09 Aug 2018 09:55:47 GMT\n+X-Syncope-Domain: Master\n+^M\n+{\"entity\":{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\"}\n+--batch_61bfef8d-0a00-41aa-b775-7b6efff37652--\n+----\n+<1> message boundary (same as request)\n+<2> represents CR LF\n+<3> user create response, with JSON payload (shortened)\n+<4> group create respose, with XML payload (shortened)\n+<5> user update, no content as `Prefer: return-no-content` <<return-content-return-no-content,was specified>>\n+<6> group delete response, with JSON payload (shortened)\n+====\n+\n+===== Asynchronous Batch Processing\n+\n+Batch requests may be executed asynchronously by <<respond-async,including>> the `respond-async` preference in the\n+`Prefer` header.\n+\n+Core will return an empty response, with status `202 Accepted`.\n+\n+Clients can poll the `/batch` endpoint in `GET` by passing the same boundary used for request: if `202 Accepted` is\n+returned, then the request is still under processing; otherwise, `200 OK` will be returned, along with the full batch\n+response. +\n+Once retrieved, the batch response is not available any more from the `/batch` endpoint any more.\n \n ==== Search\n \n@@ -413,7 +552,7 @@ SyncopeClientFactoryBean clientFactory = new SyncopeClientFactoryBean().\n You might also select a specific <<domains,domain>> - other than `Master`, choose to exchange XML payloads - rather\n than JSON (default), or to select \n https://en.wikipedia.org/wiki/HTTP_compression[HTTP compression^] (more options in the\n-http://syncope.apache.org/apidocs/2.0/org/apache/syncope/client/lib/SyncopeClientFactoryBean.html[Javadoc^]):\n+http://syncope.apache.org/apidocs/2.1/org/apache/syncope/client/lib/SyncopeClientFactoryBean.html[Javadoc^]):\n \n [source,java]\n ----\n@@ -444,7 +583,7 @@ SyncopeClient client = new SyncopeClientFactoryBean().\n ===== Usage\n \n Select one of the\n-http://syncope.apache.org/apidocs/2.0/org/apache/syncope/common/rest/api/service/package-summary.html[RESTful services^]\n+http://syncope.apache.org/apidocs/2.1/org/apache/syncope/common/rest/api/service/package-summary.html[RESTful services^]\n and invoke one of the available methods:\n \n [source,java]\n@@ -459,21 +598,21 @@ loggerService.update(LoggerType.LOG, loggerTO);\n \n [NOTE]\n More RESTful services could be available besides the \n-http://syncope.apache.org/apidocs/2.0/org/apache/syncope/common/rest/api/service/package-summary.html[default set^],\n+http://syncope.apache.org/apidocs/2.1/org/apache/syncope/common/rest/api/service/package-summary.html[default set^],\n as there might be <<extensions,extensions>> installed in the given deployment; the\n <<apache-camel-provisioning-manager>> provides the\n-http://syncope.apache.org/apidocs/2.0/org/apache/syncope/common/rest/api/service/CamelRouteService.html[CamelRouteService^],\n+http://syncope.apache.org/apidocs/2.1/org/apache/syncope/common/rest/api/service/CamelRouteService.html[CamelRouteService^],\n for instance.\n \n [TIP]\n Advanced REST features are also available from `SyncopeClient` instances: check\n-http://syncope.apache.org/apidocs/2.0/org/apache/syncope/client/lib/SyncopeClient.html[the javadoc^]\n+http://syncope.apache.org/apidocs/2.1/org/apache/syncope/client/lib/SyncopeClient.html[the javadoc^]\n for more information.\n \n .Search for Users, Groups or Any Objects\n ====\n All search operations return\n-http://syncope.apache.org/apidocs/2.0/org/apache/syncope/common/lib/to/PagedResult.html[paged result handlers^]\n+http://syncope.apache.org/apidocs/2.1/org/apache/syncope/common/lib/to/PagedResult.html[paged result handlers^]\n which can be exploited both for getting the actual results and for extrapolating pagination coordinates.\n \n [source,java]\n@@ -526,31 +665,30 @@ where each page contains 150 items\n ====\n [source,java]\n ----\n-UserService userService = client.getService(UserService.class);\n+BatchRequest batchRequest = client.batch(); // <1>\n \n-BulkAction bulkAction = new BulkAction();\n-bulkAction.setType(BulkAction.Type.DELETE);\n+UserService batchUserService = batchRequest.getService(UserService.class);\n \n final int pageSize = 100;\n final int count = userService.search(\n-        new AnyQuery.Builder().page(0).size(0).build()).getTotalCount(); // <1>\n+        new AnyQuery.Builder().page(0).size(0).build()).getTotalCount(); // <2>\n for (int page = 1; page <= (count / pageSize) + 1; page++) {\n     for (UserTO user : userService.search(\n-            new AnyQuery.Builder().page(page).size(pageSize).build()).getResult()) {  // <2>\n+            new AnyQuery.Builder().page(page).size(pageSize).build()).getResult()) {  // <3>  \n \n-        bulkAction.getTargets().add(user.getKey()); // <3>\n-    }\n-}\n+        batchUserService.delete(user.getKey()); // <4>\n+    }       \n+}       \n \n-BulkActionResult bulkResult = userService.bulk(bulkAction).\n-        readEntity(BulkActionResult.class); // <4>\n-Map<String, BulkActionResult.Status> results = bulkResult.getResults(); // <5>\n+BatchResponse batchResponse = batchRequest.commit();  // <5>  \n+List<BatchResponseItem> batchResponseItems = batchResponse.getItems(); // <6>\n ----\n-<1> get the total number of users available in the given deployment (and <<domains,domain>>)\n-<2> loop through all users available, using paginated search\n-<3> add each user to the bulk action\n-<4> execute the `DELETE` bulk action\n-<5> examine the bulk action results\n+<1> begin the batch request\n+<2> get the total number of users available in the given deployment (and <<domains,domain>>)\n+<3> loop through all users available, using paginated search\n+<4> add each user's deletion to the batch request\n+<5> send the batch request for processing\n+<6> examine the batch results\n ====\n \n .Self-read own profile information\n@@ -561,7 +699,7 @@ Pair<Map<String, Set<String>>, UserTO> self = client.self();\n UserTO userTO = self.getRight(); // <1>\n Map<String, Set<String>> realm2entitlements = self.getLeft(); // <2>\n ----\n-<1> http://syncope.apache.org/apidocs/2.0/org/apache/syncope/common/lib/to/UserTO.html[UserTO^] of the requesting user\n+<1> http://syncope.apache.org/apidocs/2.1/org/apache/syncope/common/lib/to/UserTO.html[UserTO^] of the requesting user\n <2> for each <<realms,realm>>, the owned <<entitlements,entitlements>>\n ====\n "}]}