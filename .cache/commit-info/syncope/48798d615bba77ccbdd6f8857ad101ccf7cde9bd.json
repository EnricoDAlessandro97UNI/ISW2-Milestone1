{"sha":"48798d615bba77ccbdd6f8857ad101ccf7cde9bd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ4Nzk4ZDYxNWJiYTc3Y2NiZGQ2Zjg4NTdhZDEwMWNjZjdjZGU5YmQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-12-04T08:12:14Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-12-04T08:12:14Z"},"message":"[SYNCOPE-457] Reworking a bit provided patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1547727 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b2d562d6fc1ccbc5f55a5916f15067e354fc5061","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b2d562d6fc1ccbc5f55a5916f15067e354fc5061"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/48798d615bba77ccbdd6f8857ad101ccf7cde9bd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/48798d615bba77ccbdd6f8857ad101ccf7cde9bd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/48798d615bba77ccbdd6f8857ad101ccf7cde9bd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e44408c9d77afb621bf72b84f72e533323b758f6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e44408c9d77afb621bf72b84f72e533323b758f6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e44408c9d77afb621bf72b84f72e533323b758f6"}],"stats":{"total":170,"additions":104,"deletions":66},"files":[{"sha":"c87350cf29d92b2e6306d34566194715c36cff58","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationJob.java","status":"modified","additions":14,"deletions":44,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java?ref=48798d615bba77ccbdd6f8857ad101ccf7cde9bd","patch":"@@ -19,9 +19,10 @@\n package org.apache.syncope.core.notification;\n \n import java.util.Date;\n+\n import javax.mail.internet.MimeMessage;\n+\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.TraceLevel;\n@@ -38,7 +39,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.mail.javamail.JavaMailSenderImpl;\n+import org.springframework.mail.javamail.JavaMailSender;\n import org.springframework.mail.javamail.MimeMessageHelper;\n \n /**\n@@ -69,6 +70,9 @@ enum Status {\n     @Autowired\n     private NotificationManager notificationManager;\n \n+    @Autowired\n+    private JavaMailSender mailSender;\n+\n     /**\n      * Task DAO.\n      */\n@@ -81,29 +85,9 @@ enum Status {\n     @Autowired\n     private ConfDAO confDAO;\n \n-    private String smtpHost;\n-\n-    private int smtpPort;\n-\n-    private String smtpUsername;\n-\n-    private String smtpPassword;\n-\n     private long maxRetries;\n \n     private void init() {\n-        smtpHost = confDAO.find(\"smtp.host\", \"\").getValue();\n-        smtpPort = 25;\n-        try {\n-            smtpPort = Integer.valueOf(confDAO.find(\"smtp.port\", \"25\").getValue());\n-        } catch (NumberFormatException e) {\n-            LOG.error(\"Invalid SMTP port, reverting to 25\", e);\n-        }\n-        smtpUsername = confDAO.find(\"smtp.username\", \"\").getValue();\n-        smtpPassword = confDAO.find(\"smtp.password\", \"\").getValue();\n-\n-        LOG.debug(\"SMTP details fetched: {}:{} / {}:[PASSWORD_NOT_SHOWN]\", smtpHost, smtpPort, smtpUsername);\n-\n         try {\n             maxRetries = Long.valueOf(confDAO.find(\"notification.maxRetries\", \"0\").getValue());\n         } catch (NumberFormatException e) {\n@@ -121,12 +105,10 @@ public TaskExec executeSingle(final NotificationTask task) {\n \n         boolean retryPossible = true;\n \n-        if (StringUtils.isBlank(smtpHost) || StringUtils.isBlank(task.getSender())\n-                || StringUtils.isBlank(task.getSubject()) || task.getRecipients().isEmpty()\n-                || StringUtils.isBlank(task.getHtmlBody()) || StringUtils.isBlank(task.getTextBody())) {\n+        if (StringUtils.isBlank(task.getSubject()) || task.getRecipients().isEmpty()\n+            || StringUtils.isBlank(task.getHtmlBody()) || StringUtils.isBlank(task.getTextBody())) {\n \n             String message = \"Could not fetch all required information for sending e-mails:\\n\"\n-                    + smtpHost + \":\" + smtpPort + \"\\n\"\n                     + task.getRecipients() + \"\\n\"\n                     + task.getSender() + \"\\n\"\n                     + task.getSubject() + \"\\n\"\n@@ -143,7 +125,6 @@ public TaskExec executeSingle(final NotificationTask task) {\n         } else {\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"About to send e-mails:\\n\"\n-                        + smtpHost + \":\" + smtpPort + \"\\n\"\n                         + task.getRecipients() + \"\\n\"\n                         + task.getSender() + \"\\n\"\n                         + task.getSubject() + \"\\n\"\n@@ -153,36 +134,25 @@ public TaskExec executeSingle(final NotificationTask task) {\n \n             for (String to : task.getRecipients()) {\n                 try {\n-                    JavaMailSenderImpl sender = new JavaMailSenderImpl();\n-                    sender.setHost(smtpHost);\n-                    sender.setPort(smtpPort);\n-                    sender.setDefaultEncoding(SyncopeConstants.DEFAULT_ENCODING);\n-                    if (StringUtils.isNotBlank(smtpUsername)) {\n-                        sender.setUsername(smtpUsername);\n-                    }\n-                    if (StringUtils.isNotBlank(smtpPassword)) {\n-                        sender.setPassword(smtpPassword);\n-                    }\n-\n-                    MimeMessage message = sender.createMimeMessage();\n+                    MimeMessage message = mailSender.createMimeMessage();\n                     MimeMessageHelper helper = new MimeMessageHelper(message, true);\n                     helper.setTo(to);\n                     helper.setFrom(task.getSender());\n                     helper.setSubject(task.getSubject());\n                     helper.setText(task.getTextBody(), task.getHtmlBody());\n \n-                    sender.send(message);\n+                    mailSender.send(message);\n \n                     execution.setStatus(Status.SENT.name());\n \n                     StringBuilder report = new StringBuilder();\n                     switch (task.getTraceLevel()) {\n                         case ALL:\n                             report.append(\"FROM: \").append(task.getSender()).append('\\n').\n-                                    append(\"TO: \").append(to).append('\\n').\n-                                    append(\"SUBJECT: \").append(task.getSubject()).append('\\n').append('\\n').\n-                                    append(task.getTextBody()).append('\\n').append('\\n').\n-                                    append(task.getHtmlBody()).append('\\n');\n+                                append(\"TO: \").append(to).append('\\n').\n+                                append(\"SUBJECT: \").append(task.getSubject()).append('\\n').append('\\n').\n+                                append(task.getTextBody()).append('\\n').append('\\n').\n+                                append(task.getHtmlBody()).append('\\n');\n                             break;\n \n                         case SUMMARY:"},{"sha":"21752ce5fb744826a71cdb972ef333c0de9e79dc","filename":"core/src/main/resources/content.xml","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=48798d615bba77ccbdd6f8857ad101ccf7cde9bd","patch":"@@ -19,17 +19,15 @@ under the License.\n -->\n <dataset>\n   <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"SHA1\"/>\n-  <SyncopeConf confKey=\"smtp.host\" confValue=\"not-existing\"/>\n-  <SyncopeConf confKey=\"smtp.port\" confValue=\"25\"/>\n   <!-- notificationjob.cronExpression:\n   + not existing: NotificationJob runs according to Notification.DEFAULT_CRON_EXP\n   + provided as empty string: NotificationJob disabled\n   + provided as non-empty string: NotificationJob runs according to the given value -->\n   <SyncopeConf confKey=\"notificationjob.cronExpression\" confValue=\"\"/>\n+  <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"0\"/>\n   <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n   <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n   <SyncopeConf confKey=\"selfRegistration.allowed\" confValue=\"true\"/>\n-  <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"0\"/>\n   <!-- when needing to provide more values, use '|' as separator and no spaces -->\n   <SyncopeConf confKey=\"authentication.statuses\" confValue=\"active\"/>\n     "},{"sha":"bddf4cf3b8dfe91adbd01d180cbab366e4bdb0f3","filename":"core/src/main/resources/mail.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Fmain%2Fresources%2Fmail.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Fmain%2Fresources%2Fmail.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fmail.properties?ref=48798d615bba77ccbdd6f8857ad101ccf7cde9bd","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+smtpHost=none.syncope.apache.org\n+smtpPort=25\n+smtpUser=syncope\n+smtpPassword=secret\n+smtpProtocol=smtp\n+smtpEncoding=UTF-8\n+smtpConnectionTimeout=3000\n+mailDebug=false"},{"sha":"0a4834b18d4324aab48f9ffc7d7cd5f4c902867f","filename":"core/src/main/resources/syncopeContext.xml","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FsyncopeContext.xml?ref=48798d615bba77ccbdd6f8857ad101ccf7cde9bd","patch":"@@ -26,7 +26,7 @@ under the License.\n                            http://www.springframework.org/schema/context\n                            http://www.springframework.org/schema/context/spring-context.xsd\n                            http://www.springframework.org/schema/task\n-                           http://www.springframework.org/schema/task/spring-task-3.1.xsd\">\n+                           http://www.springframework.org/schema/task/spring-task.xsd\">\n \n   <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n     <property name=\"locations\">\n@@ -35,6 +35,7 @@ under the License.\n         <value>classpath:rest.properties</value>\n         <value>classpath:security.properties</value>\n         <value>classpath:workflow.properties</value>\n+        <value>classpath:mail.properties</value>\n       </list>\n     </property>\n     <property name=\"ignoreResourceNotFound\" value=\"true\"/>\n@@ -87,7 +88,23 @@ under the License.\n   \n   <bean id=\"connectorFacadeProxy\" class=\"org.apache.syncope.core.propagation.impl.ConnectorFacadeProxy\" scope=\"prototype\"/>\n   <bean id=\"asyncConnFacade\" class=\"org.apache.syncope.core.propagation.impl.AsyncConnectorFacade\" scope=\"singleton\"/>\n-  \n+\n+  <bean id=\"mailSender\" class=\"org.springframework.mail.javamail.JavaMailSenderImpl\">\n+    <property name=\"defaultEncoding\" value=\"${smtpEncoding}\"/>\n+    <property name=\"host\" value=\"${smtpHost}\"/>\n+    <property name=\"port\" value=\"${smtpPort}\"/>\n+    <property name=\"username\" value=\"${smtpUser}\"/>\n+    <property name=\"password\" value=\"${smtpPassword}\"/>\n+    <property name=\"protocol\" value=\"${smtpProtocol}\"/>\n+\n+    <property name=\"javaMailProperties\">\n+      <props>\n+        <prop key=\"mail.smtp.connectiontimeout\">${smtpConnectionTimeout}</prop>\n+        <prop key=\"mail.debug\">${mailDebug}</prop>\n+      </props>\n+    </property>\n+  </bean>\n+\n   <task:annotation-driven executor=\"connectorExecutor\"/>\n   <task:executor id=\"connectorExecutor\" pool-size=\"10\"/>\n "},{"sha":"ad888fc8c5a7257b20b450a384d493c9ff205d41","filename":"core/src/test/java/org/apache/syncope/core/notification/NotificationTest.java","status":"modified","additions":21,"deletions":14,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java?ref=48798d615bba77ccbdd6f8857ad101ccf7cde9bd","patch":"@@ -24,16 +24,20 @@\n \n import com.icegreen.greenmail.util.GreenMail;\n import com.icegreen.greenmail.util.ServerSetup;\n+\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Random;\n+\n import javax.annotation.Resource;\n import javax.mail.Flags.Flag;\n import javax.mail.Folder;\n import javax.mail.Message;\n import javax.mail.Session;\n import javax.mail.Store;\n+\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.search.MembershipCond;\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.MembershipTO;\n@@ -60,6 +64,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.mail.javamail.JavaMailSender;\n+import org.springframework.mail.javamail.JavaMailSenderImpl;\n import org.springframework.security.authentication.TestingAuthenticationToken;\n import org.springframework.security.core.Authentication;\n import org.springframework.security.core.GrantedAuthority;\n@@ -87,17 +93,17 @@ public class NotificationTest {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(NotificationTest.class);\n \n-    private static String smtpHost = \"localhost\";\n+    private static final String smtpHost = \"localhost\";\n \n-    private static int smtpPort = 2525;\n+    private static final int smtpPort = 2525;\n \n-    private static String pop3Host = \"localhost\";\n+    private static final String pop3Host = \"localhost\";\n \n-    private static int pop3Port = 1110;\n+    private static final int pop3Port = 1110;\n \n-    private static String mailAddress = \"notificationtest@syncope.apache.org\";\n+    private static final String mailAddress = \"notificationtest@syncope.apache.org\";\n \n-    private static String mailPassword = \"password\";\n+    private static final String mailPassword = \"password\";\n \n     private static GreenMail greenMail;\n \n@@ -128,6 +134,9 @@ public class NotificationTest {\n     @Autowired\n     private NotificationManager notificationManager;\n \n+    @Autowired\n+    private JavaMailSender mailSender;\n+\n     @BeforeClass\n     public static void startGreenMail() {\n         ServerSetup[] config = new ServerSetup[2];\n@@ -159,14 +168,12 @@ public void setupSecurity() {\n \n     @Before\n     public void setupSMTP() throws Exception {\n-        SyncopeConf smtpHostConf = confDAO.find(\"smtp.host\");\n-        smtpHostConf.setValue(smtpHost);\n-        confDAO.save(smtpHostConf);\n-\n-        SyncopeConf smtpPortConf = confDAO.find(\"smtp.port\");\n-        smtpPortConf.setValue(Integer.toString(smtpPort));\n-        confDAO.save(smtpPortConf);\n-        confDAO.flush();\n+        JavaMailSenderImpl sender = (JavaMailSenderImpl) mailSender;\n+        sender.setDefaultEncoding(SyncopeConstants.DEFAULT_ENCODING);\n+        sender.setHost(smtpHost);\n+        sender.setPort(smtpPort);\n+        sender.setUsername(mailAddress);\n+        sender.setPassword(mailPassword);\n     }\n \n     private boolean verifyMail(final String sender, final String subject) throws Exception {"},{"sha":"e5f061dabe28bf5977c4a4a39131a4cc96d0c950","filename":"core/src/test/resources/content.xml","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=48798d615bba77ccbdd6f8857ad101ccf7cde9bd","patch":"@@ -19,17 +19,15 @@ under the License.\n -->\n <dataset>\n   <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"SHA1\"/>\n-  <SyncopeConf confKey=\"smtp.host\" confValue=\"not-existing@syncope.apache.org\"/>\n-  <SyncopeConf confKey=\"smtp.port\" confValue=\"25\"/>\n   <!-- notificationjob.cronExpression:\n   + not existing: NotificationJob runs according to Notification.DEFAULT_CRON_EXP\n   + provided as empty string: NotificationJob disabled\n   + provided as non-empty string: NotificationJob runs according to the given value -->\n   <SyncopeConf confKey=\"notificationjob.cronExpression\" confValue=\"\"/>\n+  <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"3\"/>\n   <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n   <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n   <SyncopeConf confKey=\"selfRegistration.allowed\" confValue=\"true\"/>\n-  <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"3\"/>\n   <!-- when needing to provide more values, use '|' as separator and no spaces -->\n   <SyncopeConf confKey=\"authentication.statuses\" confValue=\"created|active\"/>\n "},{"sha":"f752e9b083743b2720e83fdb9a132d8d0581a58b","filename":"core/src/test/resources/mail.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Ftest%2Fresources%2Fmail.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/48798d615bba77ccbdd6f8857ad101ccf7cde9bd/core%2Fsrc%2Ftest%2Fresources%2Fmail.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fmail.properties?ref=48798d615bba77ccbdd6f8857ad101ccf7cde9bd","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+smtpHost=none.syncope.apache.org\n+smtpPort=25\n+smtpUser=\n+smtpPassword=\n+smtpProtocol=smtp\n+smtpEncoding=UTF-8\n+smtpConnectionTimeout=3000\n+mailDebug=true"}]}