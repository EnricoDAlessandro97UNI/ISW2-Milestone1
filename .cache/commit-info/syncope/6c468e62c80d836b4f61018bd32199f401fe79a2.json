{"sha":"6c468e62c80d836b4f61018bd32199f401fe79a2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZjNDY4ZTYyYzgwZDgzNmI0ZjYxMDE4YmQzMjE5OWY0MDFmZTc5YTI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-17T16:03:41Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-17T16:03:41Z"},"message":"(Fixes issue 157)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247146 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6b9f77986828ffee703b685dbb3ee5764a0116ab","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6b9f77986828ffee703b685dbb3ee5764a0116ab"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6c468e62c80d836b4f61018bd32199f401fe79a2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6c468e62c80d836b4f61018bd32199f401fe79a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6c468e62c80d836b4f61018bd32199f401fe79a2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6c468e62c80d836b4f61018bd32199f401fe79a2/comments","author":null,"committer":null,"parents":[{"sha":"81d2482df915858a45ebe95a9ac298c4c6841c53","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/81d2482df915858a45ebe95a9ac298c4c6841c53","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/81d2482df915858a45ebe95a9ac298c4c6841c53"}],"stats":{"total":1281,"additions":652,"deletions":629},"files":[{"sha":"8a0dc5cb572ee1192cdb788744a09f0501911dca","filename":"client/src/main/java/org/syncope/client/to/SchemaMappingTO.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaMappingTO.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -15,7 +15,7 @@\n package org.syncope.client.to;\n \n import org.syncope.client.AbstractBaseBean;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n public class SchemaMappingTO extends AbstractBaseBean {\n \n@@ -26,17 +26,17 @@ public class SchemaMappingTO extends AbstractBaseBean {\n      * Consider that we can associate tha same attribute schema more\n      * than once, with different aliases, to different resource attributes.\n      */\n-    private String sourceAttrName;\n+    private String intAttrName;\n \n     /**\n      * Schema type to be mapped.\n      */\n-    private SourceMappingType sourceMappingType;\n+    private IntMappingType intMappingType;\n \n     /**\n-     * Target resource's field to be mapped.\n+     * External resource's field to be mapped.\n      */\n-    private String destAttrName;\n+    private String extAttrName;\n \n     /**\n      * Specify if the mapped target resource's field is the key.\n@@ -61,12 +61,12 @@ public void setAccountid(boolean accountid) {\n         this.accountid = accountid;\n     }\n \n-    public String getDestAttrName() {\n-        return destAttrName;\n+    public String getExtAttrName() {\n+        return extAttrName;\n     }\n \n-    public void setDestAttrName(String destAttrName) {\n-        this.destAttrName = destAttrName;\n+    public void setExtAttrName(String extAttrName) {\n+        this.extAttrName = extAttrName;\n     }\n \n     public Long getId() {\n@@ -93,19 +93,19 @@ public void setPassword(boolean password) {\n         this.password = password;\n     }\n \n-    public String getSourceAttrName() {\n-        return sourceAttrName;\n+    public String getIntAttrName() {\n+        return intAttrName;\n     }\n \n-    public void setSourceAttrName(String sourceAttrName) {\n-        this.sourceAttrName = sourceAttrName;\n+    public void setIntAttrName(String intAttrName) {\n+        this.intAttrName = intAttrName;\n     }\n \n-    public SourceMappingType getSourceMappingType() {\n-        return sourceMappingType;\n+    public IntMappingType getIntMappingType() {\n+        return intMappingType;\n     }\n \n-    public void setSourceMappingType(SourceMappingType sourceMappingType) {\n-        this.sourceMappingType = sourceMappingType;\n+    public void setIntMappingType(IntMappingType intMappingType) {\n+        this.intMappingType = intMappingType;\n     }\n }"},{"sha":"96338758fb4ab603fd0f94d7f80741af54536db8","filename":"client/src/main/java/org/syncope/types/EntityViolationType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FEntityViolationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FEntityViolationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FEntityViolationType.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -20,7 +20,7 @@ public enum EntityViolationType {\n     MultivalueAndUniqueConstraint(\n     \"org.syncope.core.validation.schema.multivalueAndUniqueConstraint\"),\n     InvalidAccountIdCount(\n-    \"org.syncope.core.validation.targetresource.invalidAccountIdCount\"),\n+    \"org.syncope.core.validation.externalresource.invalidAccountIdCount\"),\n     MoreThanOneNonNull(\n     \"org.syncope.core.validation.attrvalue.moreThanOneNonNull\"),\n     InvalidSchema("},{"sha":"ef4a469c55cf836a95773f9384f4acf63bd69364","filename":"client/src/main/java/org/syncope/types/IntMappingType.java","status":"renamed","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -14,11 +14,12 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-public enum SourceMappingType {\n+public enum IntMappingType {\n \n     UserSchema,\n     UserDerivedSchema,\n     UserVirtualSchema,\n     SyncopeUserId,\n     Password;\n+\n }","previous_filename":"client/src/main/java/org/syncope/types/SourceMappingType.java"},{"sha":"1d334a8e0b1c1774bbf7b1fc2c64696ec889c91e","filename":"client/src/main/java/org/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -55,9 +55,9 @@ public enum SyncopeClientExceptionType {\n     InvalidSyncopeUser(\n     \"Syncope.InvalidSyncopeUser\",\n     \"Syncope.InvalidSyncopeUser.element\"),\n-    InvalidTargetResource(\n-    \"Syncope.InvalidTargetResource\",\n-    \"Syncope.InvalidTargetResource.element\"),\n+    InvalidExternalResource(\n+    \"Syncope.InvalidExternalResource\",\n+    \"Syncope.InvalidExternalResource.element\"),\n     InvalidTask(\n     \"Syncope.InvalidTask\",\n     \"Syncope.InvalidTask.element\"),"},{"sha":"3a1400ce6e39ffec2251a90f030b97cca5c3fadc","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":71,"deletions":59,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -59,7 +59,7 @@\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n import org.syncope.types.ConnConfProperty;\n import org.syncope.types.PropagationMode;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n import org.syncope.types.TraceLevel;\n \n /**\n@@ -68,20 +68,31 @@\n public class ResourceModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = 1734415311027284221L;\n+\n     private static final String GUARDED_STRING =\n             \"org.identityconnectors.common.security.GuardedString\";\n+\n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n+\n     @SpringBean\n     private ConnectorRestClient connectorRestClient;\n+\n     @SpringBean\n     private ResourceRestClient restClient;\n+\n     private List<String> uSchemaAttrNames;\n+\n     private List<String> uDerSchemaAttrNames;\n+\n     private List<String> uVirSchemaAttrNames;\n+\n     private WebMarkupContainer mappingContainer;\n+\n     private WebMarkupContainer connectorPropertiesContainer;\n+\n     private Set<ConnConfProperty> overridableConnectorProperties;\n+\n     private List<String> resourceSchemaNames;\n \n     public ResourceModalPage(final PageReference callPageRef,\n@@ -109,15 +120,15 @@ protected List<ConnInstanceTO> load() {\n                     }\n                 };\n \n-        final IModel<List<SourceMappingType>> sourceMappingTypes =\n-                new LoadableDetachableModel<List<SourceMappingType>>() {\n+        final IModel<List<IntMappingType>> intMappingTypes =\n+                new LoadableDetachableModel<List<IntMappingType>>() {\n \n                     private static final long serialVersionUID =\n                             5275935387613157437L;\n \n                     @Override\n-                    protected List<SourceMappingType> load() {\n-                        return Arrays.asList(SourceMappingType.values());\n+                    protected List<IntMappingType> load() {\n+                        return Arrays.asList(IntMappingType.values());\n                     }\n                 };\n         final IModel<List<ConnConfProperty>> connectorPropertiesModel =\n@@ -306,88 +317,89 @@ public CharSequence preDecorateScript(\n                             }\n                         });\n \n-                        final AjaxDropDownChoicePanel sourceAttrNames =\n+                        final AjaxDropDownChoicePanel intAttrNames =\n                                 new AjaxDropDownChoicePanel<String>(\n-                                \"sourceAttrNames\",\n-                                getString(\"sourceAttrNames\"),\n-                                new PropertyModel(mappingTO, \"sourceAttrName\"),\n+                                \"intAttrNames\",\n+                                getString(\"intAttrNames\"),\n+                                new PropertyModel(mappingTO, \"intAttrName\"),\n                                 true);\n-                        sourceAttrNames.setChoices(resourceSchemaNames);\n-                        sourceAttrNames.setRequired(true);\n-                        sourceAttrNames.setStyleShet(\n+                        intAttrNames.setChoices(resourceSchemaNames);\n+                        intAttrNames.setRequired(true);\n+                        intAttrNames.setStyleShet(\n                                 \"ui-widget-content ui-corner-all short_fixedsize\");\n \n-                        if (mappingTO.getSourceMappingType() == null) {\n-                            sourceAttrNames.setChoices(Collections.EMPTY_LIST);\n+                        if (mappingTO.getIntMappingType() == null) {\n+                            intAttrNames.setChoices(Collections.EMPTY_LIST);\n                         } else {\n-                            switch (mappingTO.getSourceMappingType()) {\n+                            switch (mappingTO.getIntMappingType()) {\n                                 case UserSchema:\n-                                    sourceAttrNames.setChoices(uSchemaAttrNames);\n+                                    intAttrNames.setChoices(uSchemaAttrNames);\n                                     break;\n \n                                 case UserDerivedSchema:\n-                                    sourceAttrNames.setChoices(\n+                                    intAttrNames.setChoices(\n                                             uDerSchemaAttrNames);\n                                     break;\n \n                                 case UserVirtualSchema:\n-                                    sourceAttrNames.setChoices(\n+                                    intAttrNames.setChoices(\n                                             uVirSchemaAttrNames);\n                                     break;\n \n                                 case SyncopeUserId:\n-                                    sourceAttrNames.setEnabled(false);\n-                                    sourceAttrNames.setRequired(false);\n-                                    sourceAttrNames.setChoices(\n+                                    intAttrNames.setEnabled(false);\n+                                    intAttrNames.setRequired(false);\n+                                    intAttrNames.setChoices(\n                                             Collections.EMPTY_LIST);\n-                                    mappingTO.setSourceAttrName(\"SyncopeUserId\");\n+                                    mappingTO.setIntAttrName(\"SyncopeUserId\");\n                                     break;\n \n                                 case Password:\n-                                    sourceAttrNames.setEnabled(false);\n-                                    sourceAttrNames.setRequired(false);\n-                                    sourceAttrNames.setChoices(\n+                                    intAttrNames.setEnabled(false);\n+                                    intAttrNames.setRequired(false);\n+                                    intAttrNames.setChoices(\n                                             Collections.EMPTY_LIST);\n-                                    mappingTO.setSourceAttrName(\"Password\");\n+                                    mappingTO.setIntAttrName(\"Password\");\n                                     break;\n \n                                 default:\n-                                    sourceAttrNames.setChoices(\n+                                    intAttrNames.setChoices(\n                                             Collections.EMPTY_LIST);\n                             }\n                         }\n-                        item.add(sourceAttrNames);\n+                        item.add(intAttrNames);\n \n-                        final SourceMappingTypesDropDownChoice mappingTypesPanel =\n-                                new SourceMappingTypesDropDownChoice(\n-                                \"sourceMappingTypes\",\n-                                getString(\"sourceMappingTypes\"),\n-                                new PropertyModel<SourceMappingType>(\n-                                mappingTO, \"sourceMappingType\"),\n-                                sourceAttrNames);\n+                        final IntMappingTypesDropDownChoice mappingTypesPanel =\n+                                new IntMappingTypesDropDownChoice(\n+                                \"intMappingTypes\",\n+                                getString(\"intMappingTypes\"),\n+                                new PropertyModel<IntMappingType>(\n+                                mappingTO, \"intMappingType\"),\n+                                intAttrNames);\n \n                         mappingTypesPanel.setRequired(true);\n-                        mappingTypesPanel.setChoices(sourceMappingTypes.getObject());\n+                        mappingTypesPanel.setChoices(intMappingTypes.\n+                                getObject());\n                         mappingTypesPanel.setStyleShet(\n                                 \"ui-widget-content ui-corner-all short_fixedsize\");\n                         item.add(mappingTypesPanel);\n \n-                        final FieldPanel destAttrName;\n+                        final FieldPanel extAttrName;\n \n                         if (resourceSchemaNames.isEmpty()) {\n-                            destAttrName = new AjaxTextFieldPanel(\n-                                    \"destAttrName\", getString(\"destAttrNames\"),\n+                            extAttrName = new AjaxTextFieldPanel(\n+                                    \"extAttrName\", getString(\"extAttrNames\"),\n                                     new PropertyModel<String>(mappingTO,\n-                                    \"destAttrName\"),\n+                                    \"extAttrName\"),\n                                     true);\n \n                         } else {\n-                            destAttrName =\n+                            extAttrName =\n                                     new AjaxDropDownChoicePanel<String>(\n-                                    \"destAttrName\", getString(\"destAttrNames\"),\n-                                    new PropertyModel(mappingTO, \"destAttrName\"),\n+                                    \"extAttrName\", getString(\"extAttrNames\"),\n+                                    new PropertyModel(mappingTO, \"extAttrName\"),\n                                     true);\n-                            ((AjaxDropDownChoicePanel) destAttrName).setChoices(\n+                            ((AjaxDropDownChoicePanel) extAttrName).setChoices(\n                                     resourceSchemaNames);\n \n                         }\n@@ -396,12 +408,12 @@ public CharSequence preDecorateScript(\n                                 && !mappingTO.isAccountid()\n                                 && !mappingTO.isPassword();\n \n-                        destAttrName.setRequired(required);\n-                        destAttrName.setEnabled(required);\n+                        extAttrName.setRequired(required);\n+                        extAttrName.setEnabled(required);\n \n-                        destAttrName.setStyleShet(\n+                        extAttrName.setStyleShet(\n                                 \"ui-widget-content ui-corner-all short_fixedsize\");\n-                        item.add(destAttrName);\n+                        item.add(extAttrName);\n \n                         final AjaxTextFieldPanel mandatoryCondition =\n                                 new AjaxTextFieldPanel(\n@@ -433,13 +445,13 @@ public CharSequence preDecorateScript(\n                                     @Override\n                                     protected void onUpdate(\n                                             AjaxRequestTarget target) {\n-                                        destAttrName.setEnabled(\n+                                        extAttrName.setEnabled(\n                                                 !accountId.getModelObject()\n                                                 && !mappingTO.isPassword());\n-                                        destAttrName.setModelObject(null);\n-                                        destAttrName.setRequired(\n+                                        extAttrName.setModelObject(null);\n+                                        extAttrName.setRequired(\n                                                 !accountId.getModelObject());\n-                                        target.add(destAttrName);\n+                                        target.add(extAttrName);\n                                     }\n                                 });\n \n@@ -459,13 +471,13 @@ protected void onUpdate(\n                                     @Override\n                                     protected void onUpdate(\n                                             AjaxRequestTarget target) {\n-                                        destAttrName.setEnabled(\n+                                        extAttrName.setEnabled(\n                                                 !mappingTO.isAccountid()\n                                                 && !password.getModelObject());\n-                                        destAttrName.setModelObject(null);\n-                                        destAttrName.setRequired(\n+                                        extAttrName.setModelObject(null);\n+                                        extAttrName.setRequired(\n                                                 !password.getModelObject());\n-                                        target.add(destAttrName);\n+                                        target.add(extAttrName);\n                                     }\n                                 });\n \n@@ -656,15 +668,15 @@ protected void onError(final AjaxRequestTarget target,\n      * It's purposed for storing values in the\n      * corresponding property model after pressing 'Add' button.\n      */\n-    private class SourceMappingTypesDropDownChoice\n+    private class IntMappingTypesDropDownChoice\n             extends AjaxDropDownChoicePanel {\n \n         private static final long serialVersionUID = -2855668124505116627L;\n \n-        public SourceMappingTypesDropDownChoice(\n+        public IntMappingTypesDropDownChoice(\n                 final String id,\n                 final String name,\n-                final PropertyModel<SourceMappingType> model,\n+                final PropertyModel<IntMappingType> model,\n                 final AjaxDropDownChoicePanel<String> chooserToPopulate) {\n \n             super(id, name, model, false);"},{"sha":"3c7841bc59e7a53cc96575fe133604d90638b28a","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.html","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -131,9 +131,9 @@\n                                     <thead>\n                                         <tr class=\"ui-widget-header\">\n                                             <th><wicket:message key=\"delete\"/></th>\n-                                    <th><wicket:message key=\"sourceMappingTypes\"/></th>\n-                                    <th><wicket:message key=\"sourceAttrNames\"/></th>\n-                                    <th><wicket:message key=\"destAttrNames\"/></th>\n+                                    <th><wicket:message key=\"intMappingTypes\"/></th>\n+                                    <th><wicket:message key=\"intAttrNames\"/></th>\n+                                    <th><wicket:message key=\"extAttrNames\"/></th>\n                                     <th><wicket:message key=\"mandatoryCondition\"/></th>\n                                     <th><wicket:message key=\"accountId\"/></th>\n                                     <th><wicket:message key=\"password\"/></th>\n@@ -153,13 +153,13 @@\n                                                 <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n                                             </td>\n                                             <td align=\"center\" valign=\"middle\">\n-                                                <span wicket:id=\"sourceMappingTypes\">[sourceMappingTypes]</span>\n+                                                <span wicket:id=\"intMappingTypes\">[intMappingTypes]</span>\n                                             </td>\n                                             <td align=\"center\" valign=\"middle\">\n-                                                <span wicket:id=\"sourceAttrNames\">[sourceAttrNames]</span>\n+                                                <span wicket:id=\"intAttrNames\">[intAttrNames]</span>\n                                             </td>\n                                             <td align=\"center\" valign=\"middle\">\n-                                                <span wicket:id=\"destAttrName\">[destAttrName]</span>\n+                                                <span wicket:id=\"extAttrName\">[extAttrName]</span>\n                                             </td>\n                                             <td align=\"center\" valign=\"middle\">\n                                                 <span wicket:id=\"mandatoryCondition\">[mandatoryCondition]</span>"},{"sha":"af15bd4f48ee81ad618a0143f1d33ad38fb51e37","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -9,16 +9,16 @@ existing_resources=Existing resources\n action=Action\n edit_attribute=Edit resource\n title=Resource\n-destAttrNames=Destination Attributes\n-sourceMappingTypes=Source mapping types\n+extAttrNames=External Attributes\n+intMappingTypes=Internal mapping types\n roleSchema=Role Schema\n accountId=Account Id\n mandatoryCondition=Mandatory condition\n password=Password\n mappingUserSchema=Mapping User Schema\n mappingRoleSchema=Mapping Role Schema\n delete=Delete\n-sourceAttrNames=Source Attributes\n+intAttrNames=Internal Attributes\n forceMandatoryConstraint=Force mandatory constraint\n fieldName=Field name\n "},{"sha":"d1c2cc87c60e1f4fe7cfa1356519e038cf66decd","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -10,16 +10,16 @@ existing_resources=Risorse esistenti\n action=Azione\n edit_attribute=Modifica risorsa\n title=Risorsa\n-destAttrNames=Attributi destinazione\n-sourceMappingTypes=Tipo mapping sorgente\n+extAttrNames=Attributi esterni\n+intMappingTypes=Tipo mapping interno\n roleSchema=Schema Ruolo\n accountId=Id Account\n mandatoryCondition=Condizione d'obbligatoriet\\u00e0\n password=Password\n mappingUserSchema=Mapping User Schema\n mappingRoleSchema=Mapping Role Schema\n delete=Elimina\n-sourceAttrNames=Attributi sorgente\n+intAttrNames=Attributi interni\n forceMandatoryConstraint=Forza mandatory constraint\n fieldName=Nome campo\n "},{"sha":"ad8b6b22a760fb5a63c0a9de3dc0b683c3fd4ee4","filename":"core/src/main/java/org/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -26,7 +26,7 @@\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.ConnInstance;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n import org.syncope.types.ConnConfProperty;\n@@ -46,7 +46,7 @@ public class ConnInstanceLoader extends AbstractLoader {\n     @Autowired\n     private ConnBundleManager connBundleManager;\n \n-    private String getBeanName(final TargetResource resource) {\n+    private String getBeanName(final ExternalResource resource) {\n         return String.format(\"connInstance-%d-%s\",\n                 resource.getConnector().getId(), resource.getName());\n     }\n@@ -59,15 +59,15 @@ private String getBeanName(final TargetResource resource) {\n      * @throws BeansException in case the connector is not registered in the\n      * context\n      */\n-    public ConnectorFacadeProxy getConnector(final TargetResource resource)\n+    public ConnectorFacadeProxy getConnector(final ExternalResource resource)\n             throws BeansException {\n \n         return (ConnectorFacadeProxy) getBeanFactory().getBean(\n                 getBeanName(resource));\n     }\n \n     public ConnectorFacadeProxy createConnectorBean(\n-            final TargetResource resource)\n+            final ExternalResource resource)\n             throws NotFoundException {\n \n         final ConnInstance connInstanceClone =\n@@ -97,7 +97,7 @@ public ConnectorFacadeProxy createConnectorBean(\n         return new ConnectorFacadeProxy(connInstanceClone, connBundleManager);\n     }\n \n-    public void registerConnector(final TargetResource resource)\n+    public void registerConnector(final ExternalResource resource)\n             throws NotFoundException {\n \n         final ConnectorFacadeProxy connector = createConnectorBean(resource);\n@@ -125,7 +125,7 @@ public void load() {\n         CurrentLocale.set(Locale.ENGLISH);\n \n         // Next load all resource-specific connectors.\n-        for (TargetResource resource : resourceDAO.findAll()) {\n+        for (ExternalResource resource : resourceDAO.findAll()) {\n             try {\n                 LOG.info(\"Registering resource-connector pair {}-{}\",\n                         resource, resource.getConnector());"},{"sha":"45ec36982cba9df49539937584920c0628211efb","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":19,"deletions":13,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -36,7 +36,7 @@ public abstract class AbstractAttributable extends AbstractBaseBean {\n      * Provisioning target resources.\n      */\n     @ManyToMany(fetch = FetchType.EAGER)\n-    protected Set<TargetResource> targetResources;\n+    protected Set<ExternalResource> externalResources;\n \n     public <T extends AbstractAttr> T getAttribute(final String schemaName) {\n         T result = null;\n@@ -98,27 +98,33 @@ public <T extends AbstractVirAttr> T getVirtualAttribute(\n         return result;\n     }\n \n-    public boolean addTargetResource(final TargetResource targetResource) {\n-        if (targetResources == null) {\n-            targetResources = new HashSet<TargetResource>();\n+    public boolean addExternalResource(\n+            final ExternalResource externalResource) {\n+\n+        if (externalResources == null) {\n+            externalResources = new HashSet<ExternalResource>();\n         }\n-        return targetResources.add(targetResource);\n+        return externalResources.add(externalResource);\n     }\n \n-    public boolean removeTargetResource(final TargetResource targetResource) {\n-        return targetResources == null\n+    public boolean removeExternalResource(\n+            final ExternalResource externalResource) {\n+\n+        return externalResources == null\n                 ? true\n-                : targetResources.remove(targetResource);\n+                : externalResources.remove(externalResource);\n     }\n \n-    public Set<TargetResource> getTargetResources() {\n-        return targetResources == null\n+    public Set<ExternalResource> getExternalResources() {\n+        return externalResources == null\n                 ? Collections.EMPTY_SET\n-                : targetResources;\n+                : externalResources;\n     }\n \n-    public void setResources(Set<TargetResource> resources) {\n-        this.targetResources = resources;\n+    public void setExternalResources(\n+            final Set<ExternalResource> externalResources) {\n+\n+        this.externalResources = externalResources;\n     }\n \n     protected Map<AbstractSchema, AbstractAttr> getAttributesMap() {"},{"sha":"6fbe843dc2c5a97dfb60b793f29af22c3f05e31a","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractVirAttr.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirAttr.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -31,7 +31,7 @@\n import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n import org.syncope.core.util.ApplicationContextManager;\n import org.syncope.core.util.JexlUtil;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n @MappedSuperclass\n public abstract class AbstractVirAttr extends AbstractBaseBean {\n@@ -55,7 +55,7 @@ public void setValues(List<String> values) {\n \n     protected <T extends AbstractAttributable> List<Object> retrieveValues(\n             final T attributable, final String attributeName,\n-            final SourceMappingType sourceMappingType) {\n+            final IntMappingType intMappingType) {\n \n         LOG.debug(\"{}: retrieving external values for {}\",\n                 new Object[]{attributable, attributeName});\n@@ -81,7 +81,7 @@ protected <T extends AbstractAttributable> List<Object> retrieveValues(\n         Set<Attribute> attributes;\n         String accountLink;\n         String accountId = null;\n-        for (TargetResource resource : attributable.getTargetResources()) {\n+        for (ExternalResource resource : attributable.getExternalResources()) {\n             LOG.debug(\"Retrieving attribute mapped on {}\", resource);\n \n             attributeNames = new HashSet<String>();\n@@ -92,25 +92,25 @@ protected <T extends AbstractAttributable> List<Object> retrieveValues(\n                 if (LOG.isDebugEnabled()) {\n                     LOG.debug(\"Processing mapping.\"\n                             + \"\\n\\tID: \" + mapping.getId()\n-                            + \"\\n\\tSource: \" + mapping.getSourceAttrName()\n-                            + \"\\n\\tDestination: \" + mapping.getDestAttrName()\n-                            + \"\\n\\tType: \" + mapping.getSourceMappingType()\n+                            + \"\\n\\tSource: \" + mapping.getIntAttrName()\n+                            + \"\\n\\tDestination: \" + mapping.getExtAttrName()\n+                            + \"\\n\\tType: \" + mapping.getIntMappingType()\n                             + \"\\n\\tMandatory condition: \"\n                             + mapping.getMandatoryCondition()\n                             + \"\\n\\tAccountId: \" + mapping.isAccountid()\n                             + \"\\n\\tPassword: \" + mapping.isPassword());\n                 }\n \n-                if (attributeName.equals(mapping.getSourceAttrName())\n-                        && mapping.getSourceMappingType() == sourceMappingType) {\n+                if (attributeName.equals(mapping.getIntAttrName())\n+                        && mapping.getIntMappingType() == intMappingType) {\n \n-                    attributeNames.add(mapping.getDestAttrName());\n+                    attributeNames.add(mapping.getExtAttrName());\n                 }\n \n                 if (mapping.isAccountid()) {\n                     try {\n                         accountId = attributable.getAttribute(\n-                                mapping.getSourceAttrName()).\n+                                mapping.getIntAttrName()).\n                                 getValuesAsStrings().get(0);\n                     } catch (NullPointerException e) {\n                         // ignore exception"},{"sha":"21c0f1145b0b8b8c439723b52206488a60afd354","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnInstance.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -102,7 +102,7 @@ public class ConnInstance extends AbstractBaseBean {\n      */\n     @OneToMany(cascade = {CascadeType.REFRESH, CascadeType.MERGE},\n     mappedBy = \"connector\")\n-    private List<TargetResource> resources;\n+    private List<ExternalResource> resources;\n \n     public ConnInstance() {\n         super();\n@@ -124,7 +124,7 @@ public ConnInstance(final ConnInstance that) {\n         this.displayName = that.displayName;\n         this.id = that.id;\n \n-        this.resources = new ArrayList<TargetResource>();\n+        this.resources = new ArrayList<ExternalResource>();\n         if (that.resources != null) {\n             this.resources.addAll(that.resources);\n         }\n@@ -185,25 +185,25 @@ public void setDisplayName(String displayName) {\n         this.displayName = displayName;\n     }\n \n-    public List<TargetResource> getResources() {\n+    public List<ExternalResource> getResources() {\n         if (this.resources == null) {\n-            this.resources = new ArrayList<TargetResource>();\n+            this.resources = new ArrayList<ExternalResource>();\n         }\n         return this.resources;\n     }\n \n-    public void setResources(List<TargetResource> resources) {\n+    public void setResources(List<ExternalResource> resources) {\n         this.resources = resources;\n     }\n \n-    public boolean addResource(TargetResource resource) {\n+    public boolean addResource(ExternalResource resource) {\n         if (this.resources == null) {\n-            this.resources = new ArrayList<TargetResource>();\n+            this.resources = new ArrayList<ExternalResource>();\n         }\n         return this.resources.add(resource);\n     }\n \n-    public boolean removeResource(TargetResource resource) {\n+    public boolean removeResource(ExternalResource resource) {\n         if (this.resources == null) {\n             return true;\n         }"},{"sha":"f4af7c0b7bf6874e7ff50f6b3f024015ed3c390e","filename":"core/src/main/java/org/syncope/core/persistence/beans/ExternalResource.java","status":"renamed","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -42,19 +42,19 @@\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.util.XmlConfiguration;\n-import org.syncope.core.persistence.validation.entity.TargetResourceCheck;\n+import org.syncope.core.persistence.validation.entity.ExternalResourceCheck;\n import org.syncope.types.ConnConfProperty;\n import org.syncope.types.PropagationMode;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n import org.syncope.types.TraceLevel;\n \n /**\n  * A resource to which propagation occurs.\n  */\n @Entity\n @Cacheable\n-@TargetResourceCheck\n-public class TargetResource extends AbstractBaseBean {\n+@ExternalResourceCheck\n+public class ExternalResource extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -6937712883512073278L;\n \n@@ -82,13 +82,13 @@ public class TargetResource extends AbstractBaseBean {\n     /**\n      * Users associated to this resource.\n      */\n-    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"targetResources\")\n+    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"externalResources\")\n     private Set<SyncopeUser> users;\n \n     /**\n      * Roles associated to this resource.\n      */\n-    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"targetResources\")\n+    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"externalResources\")\n     private Set<SyncopeRole> roles;\n \n     /**\n@@ -134,7 +134,7 @@ public class TargetResource extends AbstractBaseBean {\n     /**\n      * Default constructor.\n      */\n-    public TargetResource() {\n+    public ExternalResource() {\n         super();\n \n         forceMandatoryConstraint = getBooleanAsInteger(false);\n@@ -179,13 +179,13 @@ public List<SchemaMapping> getMappings() {\n         return mappings;\n     }\n \n-    public List<SchemaMapping> getMappings(final String sourceAttrName,\n-            final SourceMappingType sourceMappingType) {\n+    public List<SchemaMapping> getMappings(final String intAttrName,\n+            final IntMappingType intMappingType) {\n \n         List<SchemaMapping> result = new ArrayList<SchemaMapping>();\n         for (SchemaMapping mapping : mappings) {\n-            if (sourceAttrName.equals(mapping.getSourceAttrName())\n-                    && mapping.getSourceMappingType() == sourceMappingType) {\n+            if (intAttrName.equals(mapping.getIntAttrName())\n+                    && mapping.getIntMappingType() == intMappingType) {\n \n                 result.add(mapping);\n             }","previous_filename":"core/src/main/java/org/syncope/core/persistence/beans/TargetResource.java"},{"sha":"b400bc4e76f57ba588f3228b398da4883e12dedf","filename":"core/src/main/java/org/syncope/core/persistence/beans/PropagationTask.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -54,12 +54,12 @@ public class PropagationTask extends Task {\n     private PropagationOperation resourceOperationType;\n \n     /**\n-     * The accountId on the target resource.\n+     * The accountId on the external resource.\n      */\n     private String accountId;\n \n     /**\n-     * The (optional) former accountId on the target resource.\n+     * The (optional) former accountId on the external resource.\n      */\n     private String oldAccountId;\n \n@@ -71,10 +71,10 @@ public class PropagationTask extends Task {\n     private String xmlAttributes;\n \n     /**\n-     * TargetResource to which the propagation happens.\n+     * ExternalResource to which the propagation happens.\n      */\n     @ManyToOne\n-    private TargetResource resource;\n+    private ExternalResource resource;\n \n     public String getAccountId() {\n         return accountId;\n@@ -138,11 +138,11 @@ public void setResourceOperationType(\n         this.resourceOperationType = resourceOperationType;\n     }\n \n-    public TargetResource getResource() {\n+    public ExternalResource getResource() {\n         return resource;\n     }\n \n-    public void setResource(TargetResource resource) {\n+    public void setResource(ExternalResource resource) {\n         this.resource = resource;\n     }\n }"},{"sha":"03b8598ba90e523c795ece14478175ac4d8aa103","filename":"core/src/main/java/org/syncope/core/persistence/beans/SchemaMapping.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSchemaMapping.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -26,7 +26,7 @@\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n import org.syncope.core.persistence.validation.entity.SchemaMappingCheck;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n @Entity\n @Cacheable\n@@ -39,23 +39,23 @@ public class SchemaMapping extends AbstractBaseBean {\n     private Long id;\n \n     @Column(nullable = true)\n-    private String sourceAttrName;\n+    private String intAttrName;\n \n     @Column(nullable = false)\n     @Enumerated(STRING)\n-    private SourceMappingType sourceMappingType;\n+    private IntMappingType intMappingType;\n \n     /**\n      * Target resource that has fields to be mapped over user attribute schemas.\n      */\n     @ManyToOne\n-    private TargetResource resource;\n+    private ExternalResource resource;\n \n     /**\n      * Target resource's field to be mapped.\n      */\n     @Column(nullable = true)\n-    private String destAttrName;\n+    private String extAttrName;\n \n     /**\n      * Specify if the mapped target resource's field is the key.\n@@ -101,12 +101,12 @@ public void setAccountid(boolean accountid) {\n         this.accountid = getBooleanAsInteger(accountid);\n     }\n \n-    public String getDestAttrName() {\n-        return destAttrName;\n+    public String getExtAttrName() {\n+        return extAttrName;\n     }\n \n-    public void setDestAttrName(String destAttrName) {\n-        this.destAttrName = destAttrName;\n+    public void setExtAttrName(String extAttrName) {\n+        this.extAttrName = extAttrName;\n     }\n \n     public String getMandatoryCondition() {\n@@ -125,27 +125,27 @@ public void setPassword(boolean password) {\n         this.password = getBooleanAsInteger(password);\n     }\n \n-    public TargetResource getResource() {\n+    public ExternalResource getResource() {\n         return resource;\n     }\n \n-    public void setResource(TargetResource resource) {\n+    public void setResource(ExternalResource resource) {\n         this.resource = resource;\n     }\n \n-    public String getSourceAttrName() {\n-        return sourceAttrName;\n+    public String getIntAttrName() {\n+        return intAttrName;\n     }\n \n-    public void setSourceAttrName(String sourceAttrName) {\n-        this.sourceAttrName = sourceAttrName;\n+    public void setIntAttrName(String intAttrName) {\n+        this.intAttrName = intAttrName;\n     }\n \n-    public SourceMappingType getSourceMappingType() {\n-        return sourceMappingType;\n+    public IntMappingType getIntMappingType() {\n+        return intMappingType;\n     }\n \n-    public void setSourceMappingType(SourceMappingType sourceMappingType) {\n-        this.sourceMappingType = sourceMappingType;\n+    public void setIntMappingType(IntMappingType intMappingType) {\n+        this.intMappingType = intMappingType;\n     }\n }"},{"sha":"b30ecb3ca85b851aca2537527089c65b255a0bc7","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncTask.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -32,13 +32,13 @@ public class SyncTask extends SchedTask {\n     private static final long serialVersionUID = -4141057723006682562L;\n \n     /**\n-     * TargetResource to which the sync happens.\n+     * ExternalResource to which the sync happens.\n      */\n     @ManyToOne\n-    private TargetResource resource;\n+    private ExternalResource resource;\n \n     @OneToMany\n-    private List<TargetResource> defaultResources;\n+    private List<ExternalResource> defaultResources;\n \n     @OneToMany\n     private List<SyncopeRole> defaultRoles;\n@@ -54,7 +54,7 @@ public class SyncTask extends SchedTask {\n     public SyncTask() {\n         super();\n \n-        defaultResources = new ArrayList<TargetResource>();\n+        defaultResources = new ArrayList<ExternalResource>();\n         defaultRoles = new ArrayList<SyncopeRole>();\n         super.setJobClassName(SyncJob.class.getName());\n     }\n@@ -63,28 +63,28 @@ public SyncTask() {\n     public void setJobClassName(String jobClassName) {\n     }\n \n-    public TargetResource getResource() {\n+    public ExternalResource getResource() {\n         return resource;\n     }\n \n-    public void setResource(TargetResource resource) {\n+    public void setResource(ExternalResource resource) {\n         this.resource = resource;\n     }\n \n-    public boolean addDefaultResource(TargetResource resource) {\n+    public boolean addDefaultResource(ExternalResource resource) {\n         return resource != null && !defaultResources.contains(resource)\n                 && defaultResources.add(resource);\n     }\n \n-    public boolean removeDefaultResource(TargetResource resource) {\n+    public boolean removeDefaultResource(ExternalResource resource) {\n         return resource != null && defaultResources.remove(resource);\n     }\n \n-    public List<TargetResource> getDefaultResources() {\n+    public List<ExternalResource> getDefaultResources() {\n         return defaultResources;\n     }\n \n-    public void setDefaultResources(List<TargetResource> defaultResources) {\n+    public void setDefaultResources(List<ExternalResource> defaultResources) {\n         this.defaultResources.clear();\n         if (defaultResources != null && !defaultResources.isEmpty()) {\n             this.defaultResources.addAll(defaultResources);"},{"sha":"dcdd67fa56812b14f7b61fbc9e4ba87a4ec857be","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -30,7 +30,7 @@\n import org.syncope.core.persistence.beans.AbstractAttr;\n import org.syncope.core.persistence.beans.AbstractDerAttr;\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n \n@@ -71,7 +71,7 @@ public Membership() {\n         attributes = new ArrayList<MAttr>();\n         derivedAttributes = new ArrayList<MDerAttr>();\n         virtualAttributes = new ArrayList<MVirAttr>();\n-        targetResources = Collections.EMPTY_SET;\n+        externalResources = Collections.EMPTY_SET;\n     }\n \n     @Override\n@@ -171,22 +171,22 @@ public void setVirtualAttributes(\n     }\n \n     @Override\n-    public boolean addTargetResource(TargetResource resource) {\n+    public boolean addExternalResource(ExternalResource resource) {\n         return false;\n     }\n \n     @Override\n-    public boolean removeTargetResource(TargetResource resource) {\n+    public boolean removeExternalResource(ExternalResource resource) {\n         return false;\n     }\n \n     @Override\n-    public Set<TargetResource> getTargetResources() {\n+    public Set<ExternalResource> getExternalResources() {\n         return Collections.EMPTY_SET;\n     }\n \n     @Override\n-    public void setResources(Set<TargetResource> resources) {\n+    public void setExternalResources(Set<ExternalResource> resources) {\n     }\n \n     @Override"},{"sha":"4b9bc9c8857cdd2b96b92818487c284b02342e41","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -51,7 +51,7 @@\n import org.syncope.core.persistence.beans.AbstractAttr;\n import org.syncope.core.persistence.beans.AbstractDerAttr;\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.types.CipherAlgorithm;\n@@ -180,11 +180,11 @@ public Set<SyncopeRole> getRoles() {\n     }\n \n     @Override\n-    public Set<TargetResource> getTargetResources() {\n-        Set<TargetResource> result = new HashSet<TargetResource>();\n-        result.addAll(super.getTargetResources());\n+    public Set<ExternalResource> getExternalResources() {\n+        Set<ExternalResource> result = new HashSet<ExternalResource>();\n+        result.addAll(super.getExternalResources());\n         for (SyncopeRole role : getRoles()) {\n-            result.addAll(role.getTargetResources());\n+            result.addAll(role.getExternalResources());\n         }\n \n         return result;"},{"sha":"5a0fe1c895e4866bbc97ff9ce038fb4a4495ac16","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/UVirAttr.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -22,7 +22,7 @@\n import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n import org.syncope.core.persistence.beans.AbstractVirSchema;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n @Entity\n public class UVirAttr extends AbstractVirAttr {\n@@ -69,7 +69,7 @@ public List<String> getValues() {\n         final List<Object> retrievedValues =\n                 retrieveValues(getOwner(),\n                 getVirtualSchema().getName(),\n-                SourceMappingType.UserVirtualSchema);\n+                IntMappingType.UserVirtualSchema);\n \n         LOG.debug(\"Retrieved external values {}\", retrievedValues);\n "},{"sha":"95f1ec3c23ab9fa380efd0658200db5546136a98","filename":"core/src/main/java/org/syncope/core/persistence/dao/ConnInstanceDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -16,7 +16,7 @@\n \n import java.util.List;\n import org.syncope.core.persistence.beans.ConnInstance;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n public interface ConnInstanceDAO extends DAO {\n@@ -25,7 +25,7 @@ public interface ConnInstanceDAO extends DAO {\n \n     List<ConnInstance> findAll();\n \n-    List<TargetResource> findTargetResources(ConnInstance connector);\n+    List<ExternalResource> findExternalResources(ConnInstance connector);\n \n     ConnInstance save(ConnInstance connector) throws InvalidEntityException;\n "},{"sha":"b2ece3cb3b120d8fe2bdaf119d88d24cf0ab0009","filename":"core/src/main/java/org/syncope/core/persistence/dao/ResourceDAO.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -16,26 +16,26 @@\n \n import java.util.List;\n import org.syncope.core.persistence.beans.SchemaMapping;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n public interface ResourceDAO extends DAO {\n \n-    TargetResource find(String name);\n+    ExternalResource find(String name);\n \n-    List<TargetResource> findAll();\n+    List<ExternalResource> findAll();\n \n-    TargetResource save(TargetResource resource)\n+    ExternalResource save(ExternalResource resource)\n             throws InvalidEntityException;\n \n     List<SchemaMapping> findAllMappings();\n \n     SchemaMapping getMappingForAccountId(String resourceName);\n \n-    void deleteMappings(String schemaName, SourceMappingType sourceMappingType);\n+    void deleteMappings(String schemaName, IntMappingType intMappingType);\n \n-    void deleteAllMappings(TargetResource resource);\n+    void deleteAllMappings(ExternalResource resource);\n \n     void delete(String name);\n }"},{"sha":"6264cc35a50e3125d57a4ec12e697aa239404634","filename":"core/src/main/java/org/syncope/core/persistence/dao/TaskDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -16,14 +16,14 @@\n \n import java.util.List;\n import org.syncope.core.persistence.beans.Task;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n public interface TaskDAO extends DAO {\n \n      <T extends Task> T find(Long id);\n \n-     <T extends Task> List<T> findAll(TargetResource resource,\n+     <T extends Task> List<T> findAll(ExternalResource resource,\n             Class<T> reference);\n \n      <T extends Task> List<T> findAll(Class<T> reference);\n@@ -40,6 +40,6 @@ <T extends Task> T save(T task)\n \n      <T extends Task> void delete(T task);\n \n-     <T extends Task> void deleteAll(TargetResource resource,\n+     <T extends Task> void deleteAll(ExternalResource resource,\n             Class<T> reference);\n }"},{"sha":"4aa904591653a60bce7984b1da84e3f78977b5d3","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ConnInstanceDAOImpl.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -21,7 +21,7 @@\n import org.springframework.stereotype.Repository;\n import org.syncope.core.init.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.ConnInstance;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.dao.ConnInstanceDAO;\n \n @Repository\n@@ -38,15 +38,18 @@ public ConnInstance find(final Long id) {\n \n     @Override\n     public List<ConnInstance> findAll() {\n-        Query query = entityManager.createQuery(\"SELECT e FROM ConnInstance e\");\n+        Query query = entityManager.createQuery(\"SELECT e \"\n+                + \"FROM \" + ConnInstance.class.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    public List<TargetResource> findTargetResources(\n+    public List<ExternalResource> findExternalResources(\n             final ConnInstance connector) {\n-        final Query query = entityManager.createQuery(\n-                \"SELECT e FROM TargetResource e WHERE connector=:connector\");\n+\n+        final Query query = entityManager.createQuery(\"SELECT e \"\n+                + \"FROM \" + ExternalResource.class.getSimpleName() + \" e \"\n+                + \"WHERE connector=:connector\");\n \n         query.setParameter(\"connector\", connector);\n \n@@ -57,9 +60,9 @@ public List<TargetResource> findTargetResources(\n     public ConnInstance save(final ConnInstance connector) {\n         final ConnInstance merged = entityManager.merge(connector);\n \n-        final List<TargetResource> resources = findTargetResources(merged);\n+        final List<ExternalResource> resources = findExternalResources(merged);\n \n-        for (TargetResource resource : resources) {\n+        for (ExternalResource resource : resources) {\n             try {\n                 connInstanceLoader.registerConnector(resource);\n             } catch (NotFoundException e) {"},{"sha":"35038a9899b826c259c202dc9b01fcd7e629c93a","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/DerSchemaDAOImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -87,7 +87,7 @@ public void delete(final String name,\n         }\n \n         resourceDAO.deleteMappings(\n-                name, attributableUtil.derivedSourceMappingType());\n+                name, attributableUtil.derivedIntMappingType());\n \n         entityManager.remove(derivedSchema);\n     }"},{"sha":"e9378f91b0a743faf08b8558d836392366049106","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":28,"deletions":27,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -25,14 +25,14 @@\n import org.springframework.stereotype.Repository;\n import org.syncope.core.init.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.PropagationTask;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.SyncTask;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.TaskDAO;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n @Repository\n public class ResourceDAOImpl extends AbstractDAOImpl\n@@ -45,30 +45,31 @@ public class ResourceDAOImpl extends AbstractDAOImpl\n     private ConnInstanceLoader connInstanceLoader;\n \n     @Override\n-    public TargetResource find(final String name) {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM TargetResource e WHERE e.name = :name\");\n+    public ExternalResource find(final String name) {\n+        Query query = entityManager.createQuery(\"SELECT e \"\n+                + \"FROM \" + ExternalResource.class.getSimpleName() + \" e \"\n+                + \"WHERE e.name = :name\");\n         query.setHint(\"javax.persistence.cache.retrieveMode\",\n                 CacheRetrieveMode.USE);\n         query.setParameter(\"name\", name);\n \n         try {\n-            return (TargetResource) query.getSingleResult();\n+            return (ExternalResource) query.getSingleResult();\n         } catch (NoResultException e) {\n             return null;\n         }\n     }\n \n     @Override\n-    public List<TargetResource> findAll() {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM TargetResource e\");\n+    public List<ExternalResource> findAll() {\n+        Query query = entityManager.createQuery(\"SELECT e \"\n+                + \"FROM  \" + ExternalResource.class.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    public TargetResource save(final TargetResource resource) {\n-        TargetResource merged = entityManager.merge(resource);\n+    public ExternalResource save(final ExternalResource resource) {\n+        ExternalResource merged = entityManager.merge(resource);\n         try {\n             connInstanceLoader.registerConnector(merged);\n         } catch (NotFoundException e) {\n@@ -79,8 +80,8 @@ public TargetResource save(final TargetResource resource) {\n \n     @Override\n     public List<SchemaMapping> findAllMappings() {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM SchemaMapping e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM \"\n+                + SchemaMapping.class.getSimpleName() + \" e\");\n         query.setHint(\"javax.persistence.cache.retrieveMode\",\n                 CacheRetrieveMode.USE);\n \n@@ -91,8 +92,8 @@ public List<SchemaMapping> findAllMappings() {\n     public SchemaMapping getMappingForAccountId(\n             final String resourceName) {\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT m FROM SchemaMapping m \"\n+        Query query = entityManager.createQuery(\"SELECT m FROM \"\n+                + SchemaMapping.class.getSimpleName() + \" m \"\n                 + \"WHERE m.resource.name=:resourceName \"\n                 + \"AND m.accountid = 1\");\n         query.setParameter(\"resourceName\", resourceName);\n@@ -101,21 +102,21 @@ public SchemaMapping getMappingForAccountId(\n     }\n \n     @Override\n-    public void deleteMappings(final String sourceAttrName,\n-            final SourceMappingType sourceMappingType) {\n+    public void deleteMappings(final String intAttrName,\n+            final IntMappingType intMappingType) {\n \n-        if (sourceMappingType == SourceMappingType.SyncopeUserId\n-                || sourceMappingType == SourceMappingType.Password) {\n+        if (intMappingType == IntMappingType.SyncopeUserId\n+                || intMappingType == IntMappingType.Password) {\n \n             return;\n         }\n \n         Query query = entityManager.createQuery(\"DELETE FROM \"\n                 + SchemaMapping.class.getSimpleName()\n-                + \" m WHERE m.sourceAttrName=:sourceAttrName \"\n-                + \"AND m.sourceMappingType=:sourceMappingType\");\n-        query.setParameter(\"sourceAttrName\", sourceAttrName);\n-        query.setParameter(\"sourceMappingType\", sourceMappingType);\n+                + \" m WHERE m.intAttrName=:intAttrName \"\n+                + \"AND m.intMappingType=:intMappingType\");\n+        query.setParameter(\"intAttrName\", intAttrName);\n+        query.setParameter(\"intMappingType\", intMappingType);\n \n         int items = query.executeUpdate();\n         LOG.debug(\"Removed {} schema mappings\", items);\n@@ -126,7 +127,7 @@ public void deleteMappings(final String sourceAttrName,\n     }\n \n     @Override\n-    public void deleteAllMappings(final TargetResource resource) {\n+    public void deleteAllMappings(final ExternalResource resource) {\n         Query query = entityManager.createQuery(\"DELETE FROM \"\n                 + SchemaMapping.class.getSimpleName()\n                 + \" m WHERE m.resource=:resource\");\n@@ -144,7 +145,7 @@ public void deleteAllMappings(final TargetResource resource) {\n \n     @Override\n     public void delete(final String name) {\n-        TargetResource resource = find(name);\n+        ExternalResource resource = find(name);\n         if (resource == null) {\n             return;\n         }\n@@ -155,12 +156,12 @@ public void delete(final String name) {\n         taskDAO.deleteAll(resource, SyncTask.class);\n \n         for (SyncopeUser user : resource.getUsers()) {\n-            user.removeTargetResource(resource);\n+            user.removeExternalResource(resource);\n         }\n         resource.getUsers().clear();\n \n         for (SyncopeRole role : resource.getRoles()) {\n-            role.removeTargetResource(resource);\n+            role.removeExternalResource(resource);\n         }\n         resource.getRoles().clear();\n "},{"sha":"924aa08a88fed03e7e811f52186e1ac7cf14063e","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -94,7 +94,7 @@ public void delete(final String name,\n             attributeDAO.delete(attributeId, attributableUtil.attributeClass());\n         }\n \n-        resourceDAO.deleteMappings(name, attributableUtil.sourceMappingType());\n+        resourceDAO.deleteMappings(name, attributableUtil.intMappingType());\n \n         entityManager.remove(schema);\n     }"},{"sha":"1c2eb207c795deacd6cf6a75e94adf20299f00e0","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/TaskDAOImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -22,7 +22,7 @@\n import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.SyncTask;\n import org.syncope.core.persistence.beans.Task;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.dao.TaskDAO;\n \n @Repository\n@@ -51,7 +51,7 @@ private <T extends Task> StringBuilder buildfindAllQuery(\n \n     @Override\n     public <T extends Task> List<T> findAll(\n-            final TargetResource resource, final Class<T> reference) {\n+            final ExternalResource resource, final Class<T> reference) {\n \n         StringBuilder queryString = buildfindAllQuery(reference);\n         if (SchedTask.class.equals(reference)) {\n@@ -120,7 +120,7 @@ public <T extends Task> void delete(final T task) {\n \n     @Override\n     public <T extends Task> void deleteAll(\n-            final TargetResource resource, final Class<T> reference) {\n+            final ExternalResource resource, final Class<T> reference) {\n \n         List<T> tasks = findAll(resource, reference);\n         if (tasks != null) {"},{"sha":"90546b8fa6fc11fd785dd4b5351ff2a471cd19b3","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/VirSchemaDAOImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -87,7 +87,7 @@ public void delete(final String name,\n         }\n \n         resourceDAO.deleteMappings(\n-                name, attributableUtil.virtualSourceMappingType());\n+                name, attributableUtil.virtualIntMappingType());\n \n         entityManager.remove(virtualSchema);\n     }"},{"sha":"60133b09aef533a69bf3a343b0e10999001d4a6d","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationByResource.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationByResource.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -20,7 +20,7 @@\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.types.PropagationOperation;\n \n /**\n@@ -85,7 +85,7 @@ public final void purge() {\n      * @return wether the operation was succeful or not\n      */\n     public final boolean add(final PropagationOperation type,\n-            final TargetResource resource) {\n+            final ExternalResource resource) {\n \n         boolean result = false;\n \n@@ -109,10 +109,10 @@ public final boolean add(final PropagationOperation type,\n     }\n \n     private boolean addAll(final Set<String> set,\n-            final Set<TargetResource> resources) {\n+            final Set<ExternalResource> resources) {\n \n         boolean result = true;\n-        for (TargetResource resource : resources) {\n+        for (ExternalResource resource : resources) {\n             result &= set.add(resource.getName());\n         }\n \n@@ -127,7 +127,7 @@ private boolean addAll(final Set<String> set,\n      * @return wether the operation was succeful or not\n      */\n     public boolean addAll(final PropagationOperation type,\n-            final Set<TargetResource> resources) {\n+            final Set<ExternalResource> resources) {\n \n         boolean result = false;\n \n@@ -158,7 +158,7 @@ public boolean addAll(final PropagationOperation type,\n      * @return wether the operation was succeful or not\n      */\n     public final boolean remove(final PropagationOperation type,\n-            final TargetResource resource) {\n+            final ExternalResource resource) {\n \n         boolean result = false;\n \n@@ -216,7 +216,7 @@ public final Set<String> get(final PropagationOperation type) {\n      * @param resources to be set\n      */\n     public final void set(final PropagationOperation type,\n-            final Set<TargetResource> resources) {\n+            final Set<ExternalResource> resources) {\n \n         switch (type) {\n "},{"sha":"d708fc81c09f4fcecaa32186c64b68a42ef8f4b6","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":44,"deletions":44,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -42,7 +42,7 @@\n import org.syncope.core.persistence.beans.AbstractAttrValue;\n import org.syncope.core.persistence.beans.AbstractSchema;\n import org.syncope.core.persistence.beans.ConnInstance;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.TaskExec;\n@@ -61,7 +61,7 @@\n import org.syncope.core.util.JexlUtil;\n import org.syncope.types.PropagationMode;\n import org.syncope.types.PropagationOperation;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n import org.syncope.types.SchemaType;\n import org.syncope.types.PropagationTaskExecStatus;\n import org.syncope.types.TraceLevel;\n@@ -144,7 +144,7 @@ public void create(final SyncopeUser user,\n             throws PropagationException {\n \n         final PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(PropagationOperation.CREATE, user.getTargetResources());\n+        propByRes.set(PropagationOperation.CREATE, user.getExternalResources());\n \n         provision(user, password, propByRes,\n                 mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n@@ -190,7 +190,7 @@ public void delete(final SyncopeUser user,\n \n         final PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(PropagationOperation.DELETE,\n-                user.getTargetResources());\n+                user.getExternalResources());\n \n         provision(user, null, propByRes,\n                 mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n@@ -218,7 +218,7 @@ protected void provision(\n         propByRes.purge();\n         LOG.debug(\"After purge: {}\", propByRes);\n \n-        TargetResource resource;\n+        ExternalResource resource;\n         Map.Entry<String, Set<Attribute>> preparedAttrs;\n         PropagationTask task;\n         TaskExec execution;\n@@ -261,15 +261,15 @@ protected void provision(\n     /**\n      * For given source mapping type, return the corresponding Class object.\n      *\n-     * @param sourceMappingType source mapping type\n+     * @param intMappingType source mapping type\n      * @return corresponding Class object, if any (can be null)\n      */\n-    private Class getSourceMappingTypeClass(\n-            final SourceMappingType sourceMappingType) {\n+    private Class getIntMappingTypeClass(\n+            final IntMappingType intMappingType) {\n \n         Class result;\n \n-        switch (sourceMappingType) {\n+        switch (intMappingType) {\n             case UserSchema:\n                 result = USchema.class;\n                 break;\n@@ -308,33 +308,33 @@ private Map.Entry<String, Attribute> prepareAttribute(\n         SchemaType schemaType = null;\n         List<AbstractAttrValue> values = null;\n         AbstractAttrValue attrValue;\n-        switch (mapping.getSourceMappingType()) {\n+        switch (mapping.getIntMappingType()) {\n             case UserSchema:\n-                schema = schemaDAO.find(mapping.getSourceAttrName(),\n-                        getSourceMappingTypeClass(\n-                        mapping.getSourceMappingType()));\n+                schema = schemaDAO.find(mapping.getIntAttrName(),\n+                        getIntMappingTypeClass(\n+                        mapping.getIntMappingType()));\n                 schemaType = schema.getType();\n \n-                UAttr attr = user.getAttribute(mapping.getSourceAttrName());\n+                UAttr attr = user.getAttribute(mapping.getIntAttrName());\n                 values = attr != null\n                         ? (schema.isUniqueConstraint()\n                         ? Collections.singletonList(attr.getUniqueValue())\n                         : attr.getValues())\n                         : Collections.EMPTY_LIST;\n \n                 LOG.debug(\"Retrieved attribute {}\", attr\n-                        + \"\\n* SourceAttrName {}\"\n-                        + \"\\n* SourceMappingType {}\"\n+                        + \"\\n* IntAttrName {}\"\n+                        + \"\\n* IntMappingType {}\"\n                         + \"\\n* Attribute values {}\",\n-                        new Object[]{mapping.getSourceAttrName(),\n-                            mapping.getSourceMappingType(), values});\n+                        new Object[]{mapping.getIntAttrName(),\n+                            mapping.getIntMappingType(), values});\n                 break;\n \n             case UserVirtualSchema:\n                 schemaType = SchemaType.String;\n \n                 UVirAttr virAttr = user.getVirtualAttribute(\n-                        mapping.getSourceAttrName());\n+                        mapping.getIntAttrName());\n \n                 values = new ArrayList<AbstractAttrValue>();\n                 if (virAttr != null && virAttr.getValues() != null) {\n@@ -346,18 +346,18 @@ private Map.Entry<String, Attribute> prepareAttribute(\n                 }\n \n                 LOG.debug(\"Retrieved virtual attribute {}\", virAttr\n-                        + \"\\n* SourceAttrName {}\"\n-                        + \"\\n* SourceMappingType {}\"\n+                        + \"\\n* IntAttrName {}\"\n+                        + \"\\n* IntMappingType {}\"\n                         + \"\\n* Attribute values {}\",\n-                        new Object[]{mapping.getSourceAttrName(),\n-                            mapping.getSourceMappingType(), values});\n+                        new Object[]{mapping.getIntAttrName(),\n+                            mapping.getIntMappingType(), values});\n                 break;\n \n             case UserDerivedSchema:\n                 schemaType = SchemaType.String;\n \n                 UDerAttr derAttr = user.getDerivedAttribute(\n-                        mapping.getSourceAttrName());\n+                        mapping.getIntAttrName());\n                 attrValue = new UAttrValue();\n                 if (derAttr != null) {\n                     attrValue.setStringValue(\n@@ -369,11 +369,11 @@ private Map.Entry<String, Attribute> prepareAttribute(\n                 }\n \n                 LOG.debug(\"Retrieved attribute {}\", derAttr\n-                        + \"\\n* SourceAttrName {}\"\n-                        + \"\\n* SourceMappingType {}\"\n+                        + \"\\n* IntAttrName {}\"\n+                        + \"\\n* IntMappingType {}\"\n                         + \"\\n* Attribute values {}\",\n-                        new Object[]{mapping.getSourceAttrName(),\n-                            mapping.getSourceMappingType(), values});\n+                        new Object[]{mapping.getIntAttrName(),\n+                            mapping.getIntMappingType(), values});\n                 break;\n \n             case SyncopeUserId:\n@@ -382,13 +382,13 @@ private Map.Entry<String, Attribute> prepareAttribute(\n                 schemaType = SchemaType.String;\n \n                 attrValue = new UAttrValue();\n-                if (SourceMappingType.SyncopeUserId\n-                        == mapping.getSourceMappingType()) {\n+                if (IntMappingType.SyncopeUserId\n+                        == mapping.getIntMappingType()) {\n \n                     attrValue.setStringValue(user.getId().toString());\n                 }\n-                if (SourceMappingType.Password\n-                        == mapping.getSourceMappingType() && password != null) {\n+                if (IntMappingType.Password\n+                        == mapping.getIntMappingType() && password != null) {\n \n                     attrValue.setStringValue(password);\n                 }\n@@ -401,16 +401,16 @@ private Map.Entry<String, Attribute> prepareAttribute(\n \n         if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Define mapping for: \"\n-                    + \"\\n* DestAttrName \" + mapping.getDestAttrName()\n+                    + \"\\n* ExtAttrName \" + mapping.getExtAttrName()\n                     + \"\\n* is accountId \" + mapping.isAccountid()\n                     + \"\\n* is password \" + (mapping.isPassword()\n-                    || mapping.getSourceMappingType().equals(\n-                    SourceMappingType.Password))\n+                    || mapping.getIntMappingType().equals(\n+                    IntMappingType.Password))\n                     + \"\\n* mandatory condition \"\n                     + mapping.getMandatoryCondition()\n-                    + \"\\n* Schema \" + mapping.getSourceAttrName()\n-                    + \"\\n* SourceMappingType \"\n-                    + mapping.getSourceMappingType().toString()\n+                    + \"\\n* Schema \" + mapping.getIntAttrName()\n+                    + \"\\n* IntMappingType \"\n+                    + mapping.getIntMappingType().toString()\n                     + \"\\n* ClassType \" + schemaType.getClassName()\n                     + \"\\n* Values \" + values);\n         }\n@@ -439,12 +439,12 @@ private Map.Entry<String, Attribute> prepareAttribute(\n \n         if (!mapping.isPassword() && !mapping.isAccountid()) {\n             if (schema != null && schema.isMultivalue()) {\n-                attribute = AttributeBuilder.build(mapping.getDestAttrName(),\n+                attribute = AttributeBuilder.build(mapping.getExtAttrName(),\n                         objValues);\n             } else {\n                 attribute = objValues.isEmpty()\n-                        ? AttributeBuilder.build(mapping.getDestAttrName())\n-                        : AttributeBuilder.build(mapping.getDestAttrName(),\n+                        ? AttributeBuilder.build(mapping.getExtAttrName())\n+                        : AttributeBuilder.build(mapping.getExtAttrName(),\n                         objValues.iterator().next());\n             }\n         }\n@@ -463,7 +463,7 @@ private Map.Entry<String, Attribute> prepareAttribute(\n      */\n     private Map.Entry<String, Set<Attribute>> prepareAttributes(\n             final SyncopeUser user, final String password,\n-            final TargetResource resource)\n+            final ExternalResource resource)\n             throws PropagationException {\n \n         LOG.debug(\"Preparing resource attributes for {}\"\n@@ -476,7 +476,7 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(\n \n         Map.Entry<String, Attribute> preparedAttribute;\n         for (SchemaMapping mapping : resource.getMappings()) {\n-            LOG.debug(\"Processing schema {}\", mapping.getSourceAttrName());\n+            LOG.debug(\"Processing schema {}\", mapping.getIntAttrName());\n \n             try {\n                 preparedAttribute = prepareAttribute(mapping, user, password);\n@@ -488,7 +488,7 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(\n                 }\n             } catch (Throwable t) {\n                 LOG.debug(\"Attribute '{}' processing failed\",\n-                        mapping.getSourceAttrName(), t);\n+                        mapping.getIntAttrName(), t);\n             }\n         }\n "},{"sha":"aa698c92fe4b24177c71473ffb611458c69f20a7","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttributableValidator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttributableValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttributableValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttributableValidator.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -21,7 +21,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.Policy;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.PolicyDAO;\n@@ -111,7 +111,7 @@ private List<Policy> getPasswordPolicies(final SyncopeUser user) {\n         }\n \n         // add resource policies\n-        for (TargetResource resource : user.getTargetResources()) {\n+        for (ExternalResource resource : user.getExternalResources()) {\n             policy = resource.getPasswordPolicy();\n             if (policy != null) {\n                 policies.add(policy);"},{"sha":"93de2e00b3233771a184c3b8678e1e6a8a6e175d","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/ExternalResourceCheck.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -26,11 +26,11 @@\n     ElementType.TYPE\n })\n @Retention(RetentionPolicy.RUNTIME)\n-@Constraint(validatedBy = TargetResourceValidator.class)\n+@Constraint(validatedBy = ExternalResourceValidator.class)\n @Documented\n-public @interface TargetResourceCheck {\n+public @interface ExternalResourceCheck {\n \n-    String message() default \"{org.syncope.core.validation.targetresource}\";\n+    String message() default \"{org.syncope.core.validation.externalresource}\";\n \n     Class<?>[] groups() default {};\n ","previous_filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/TargetResourceCheck.java"},{"sha":"fc35a6a6d52ee40e1d5d606c13921beb53dc29a0","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/ExternalResourceValidator.java","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -17,18 +17,18 @@\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n import org.syncope.core.persistence.beans.SchemaMapping;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.types.EntityViolationType;\n \n-public class TargetResourceValidator extends AbstractValidator\n-        implements ConstraintValidator<TargetResourceCheck, TargetResource> {\n+public class ExternalResourceValidator extends AbstractValidator\n+        implements ConstraintValidator<ExternalResourceCheck, ExternalResource> {\n \n     @Override\n-    public void initialize(final TargetResourceCheck constraintAnnotation) {\n+    public void initialize(final ExternalResourceCheck constraintAnnotation) {\n     }\n \n     @Override\n-    public boolean isValid(final TargetResource object,\n+    public boolean isValid(final ExternalResource object,\n             final ConstraintValidatorContext context) {\n \n         boolean isValid;","previous_filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/TargetResourceValidator.java"},{"sha":"39ad34c873849c8aee1fd776c0fd729d1cb911ba","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SchemaMappingValidator.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingValidator.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -18,7 +18,7 @@\n import javax.validation.ConstraintValidatorContext;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.types.EntityViolationType;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n public class SchemaMappingValidator extends AbstractValidator\n         implements ConstraintValidator<SchemaMappingCheck, SchemaMapping> {\n@@ -34,7 +34,7 @@ public boolean isValid(\n \n         context.disableDefaultConstraintViolation();\n \n-        if (object.getDestAttrName() == null\n+        if (object.getExtAttrName() == null\n                 && !object.isAccountid()\n                 && !object.isPassword()) {\n             context.buildConstraintViolationWithTemplate(\n@@ -45,11 +45,11 @@ public boolean isValid(\n             return false;\n         }\n \n-        if (object.getSourceAttrName() == null\n-                && SourceMappingType.SyncopeUserId\n-                != object.getSourceMappingType()\n-                && SourceMappingType.Password\n-                != object.getSourceMappingType()) {\n+        if (object.getIntAttrName() == null\n+                && IntMappingType.SyncopeUserId\n+                != object.getIntMappingType()\n+                && IntMappingType.Password\n+                != object.getIntMappingType()) {\n             context.buildConstraintViolationWithTemplate(\n                     \"Missing source attribute name\").addNode(\n                     EntityViolationType.InvalidSchemaMapping.toString())."},{"sha":"499b5702b94bfa517733a690416d767ea618a289","filename":"core/src/main/java/org/syncope/core/rest/controller/ConnInstanceController.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -44,7 +44,7 @@\n import org.syncope.core.init.ConnInstanceLoader;\n import org.syncope.core.util.ConnBundleManager;\n import org.syncope.core.persistence.beans.ConnInstance;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.syncope.core.persistence.dao.MissingConfKeyException;\n import org.syncope.core.persistence.dao.ResourceDAO;\n@@ -196,7 +196,7 @@ public ConnInstanceTO read(\n     public ModelAndView check(@PathVariable(\"resourceName\") String resourceName)\n             throws NotFoundException {\n \n-        final TargetResource resource = respourceDAO.find(resourceName);\n+        final ExternalResource resource = respourceDAO.find(resourceName);\n \n         if (resource == null) {\n             LOG.error(\"Missing resource: {}\", resourceName);\n@@ -355,7 +355,7 @@ public List<ConnConfProperty> getConfigurationProperties(\n     }\n \n     private List<String> getSchemaNames(\n-            final TargetResource resource, final boolean showall)\n+            final ExternalResource resource, final boolean showall)\n             throws NotFoundException {\n \n         // We cannot use bean because this method could be used in phase of"},{"sha":"5f29276b90cf2ba35b1c8a8218d84dcb43d85664","filename":"core/src/main/java/org/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -33,7 +33,7 @@\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.SchemaMapping;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.RoleDAO;\n@@ -84,7 +84,7 @@ public ResourceTO create(final HttpServletResponse response,\n             throw scce;\n         }\n \n-        TargetResource resource = binder.getResource(resourceTO);\n+        ExternalResource resource = binder.getResource(resourceTO);\n         if (resource == null) {\n             LOG.error(\"Resource creation failed\");\n \n@@ -111,7 +111,7 @@ public ResourceTO update(final HttpServletResponse response,\n \n         LOG.debug(\"Role update request: {}\", resourceTO);\n \n-        TargetResource resource = null;\n+        ExternalResource resource = null;\n         if (resourceTO != null && resourceTO.getName() != null) {\n             resource = resourceDAO.find(resourceTO.getName());\n         }\n@@ -151,7 +151,7 @@ public void delete(final HttpServletResponse response,\n             final @PathVariable(\"resourceName\") String resourceName)\n             throws NotFoundException {\n \n-        TargetResource resource = resourceDAO.find(resourceName);\n+        ExternalResource resource = resourceDAO.find(resourceName);\n \n         if (resource == null) {\n             LOG.error(\"Could not find resource '\" + resourceName + \"'\");\n@@ -169,7 +169,7 @@ public ResourceTO read(final HttpServletResponse response,\n             final @PathVariable(\"resourceName\") String resourceName)\n             throws NotFoundException {\n \n-        TargetResource resource = resourceDAO.find(resourceName);\n+        ExternalResource resource = resourceDAO.find(resourceName);\n         if (resource == null) {\n             LOG.error(\"Could not find resource '\" + resourceName + \"'\");\n             throw new NotFoundException(\"Resource '\" + resourceName + \"'\");\n@@ -185,7 +185,7 @@ public ResourceTO read(final HttpServletResponse response,\n     public List<ResourceTO> list(HttpServletResponse response)\n             throws NotFoundException {\n \n-        List<TargetResource> resources = resourceDAO.findAll();\n+        List<ExternalResource> resources = resourceDAO.findAll();\n         if (resources == null) {\n             LOG.error(\"No resources found\");\n             throw new NotFoundException(\"No resources found\");\n@@ -226,10 +226,10 @@ public List<SchemaMappingTO> getRoleResourcesMapping(\n \n         List<SchemaMappingTO> roleMappings = new ArrayList<SchemaMappingTO>();\n \n-        Set<TargetResource> resources = role.getTargetResources();\n+        Set<ExternalResource> resources = role.getExternalResources();\n \n         List<SchemaMappingTO> resourceMappings;\n-        for (TargetResource resource : resources) {\n+        for (ExternalResource resource : resources) {\n             LOG.debug(\"Ask for the mappings of {}\", resource);\n \n             List<SchemaMapping> schemaMappings = resource.getMappings();"},{"sha":"6eccc131733a9905d37e5eaa4864a36dcfb9576e","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":45,"deletions":45,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -41,7 +41,7 @@\n import org.syncope.core.persistence.beans.AbstractSchema;\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n import org.syncope.core.persistence.beans.AbstractVirSchema;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -155,8 +155,8 @@ private <T extends AbstractVirSchema> T getVirtualSchema(\n         return virtualSchema;\n     }\n \n-    private TargetResource getResource(final String resourceName) {\n-        TargetResource resource = resourceDAO.find(resourceName);\n+    private ExternalResource getResource(final String resourceName) {\n+        ExternalResource resource = resourceDAO.find(resourceName);\n \n         if (resource == null) {\n             LOG.debug(\"Ignoring invalid resource {} \", resourceName);\n@@ -210,13 +210,13 @@ private boolean evaluateMandatoryCondition(\n     }\n \n     private boolean evaluateMandatoryCondition(\n-            final TargetResource resource,\n+            final ExternalResource resource,\n             final List<? extends AbstractAttr> attributes,\n-            final String sourceAttrName,\n+            final String intAttrName,\n             final AttributableUtil attributableUtil) {\n \n-        List<SchemaMapping> mappings = resource.getMappings(sourceAttrName,\n-                attributableUtil.sourceMappingType());\n+        List<SchemaMapping> mappings = resource.getMappings(intAttrName,\n+                attributableUtil.intMappingType());\n \n         boolean result = false;\n \n@@ -234,21 +234,21 @@ private boolean evaluateMandatoryCondition(\n     }\n \n     private boolean evaluateMandatoryCondition(\n-            final Set<TargetResource> resources,\n+            final Set<ExternalResource> resources,\n             final List<? extends AbstractAttr> attributes,\n-            final String sourceAttrName,\n+            final String intAttrName,\n             final AttributableUtil attributableUtil) {\n \n         boolean result = false;\n \n-        TargetResource resource;\n-        for (Iterator<TargetResource> itor = resources.iterator();\n+        ExternalResource resource;\n+        for (Iterator<ExternalResource> itor = resources.iterator();\n                 itor.hasNext() && !result;) {\n \n             resource = itor.next();\n             if (resource.isForceMandatoryConstraint()) {\n                 result |= evaluateMandatoryCondition(resource,\n-                        attributes, sourceAttrName, attributableUtil);\n+                        attributes, intAttrName, attributableUtil);\n             }\n         }\n \n@@ -264,7 +264,7 @@ private SyncopeClientException checkMandatory(\n                 SyncopeClientExceptionType.RequiredValuesMissing);\n \n         LOG.debug(\"Check mandatory constraint among resources {}\",\n-                attributable.getTargetResources());\n+                attributable.getExternalResources());\n         // Check if there is some mandatory schema defined for which no value\n         // has been provided\n         List<AbstractSchema> allSchemas =\n@@ -277,7 +277,7 @@ private SyncopeClientException checkMandatory(\n                     schema.getMandatoryCondition(),\n                     attributable.getAttributes())\n                     || evaluateMandatoryCondition(\n-                    attributable.getTargetResources(),\n+                    attributable.getExternalResources(),\n                     attributable.getAttributes(),\n                     schema.getName(),\n                     attributableUtil))) {\n@@ -305,7 +305,7 @@ protected PropagationByResource fill(\n                 SyncopeClientExceptionType.InvalidValues);\n \n         // 1. resources to be removed\n-        TargetResource resource;\n+        ExternalResource resource;\n         for (String resourceToBeRemoved :\n                 attributableMod.getResourcesToBeRemoved()) {\n \n@@ -314,7 +314,7 @@ protected PropagationByResource fill(\n             if (resource != null) {\n                 propByRes.add(PropagationOperation.DELETE, resource);\n \n-                attributable.removeTargetResource(resource);\n+                attributable.removeExternalResource(resource);\n \n                 if (attributableUtil == attributableUtil.USER) {\n                     resource.removeUser((SyncopeUser) attributable);\n@@ -336,7 +336,7 @@ protected PropagationByResource fill(\n             if (resource != null) {\n                 propByRes.add(PropagationOperation.CREATE, resource);\n \n-                attributable.addTargetResource(resource);\n+                attributable.addExternalResource(resource);\n \n                 if (attributableUtil == attributableUtil.USER) {\n                     resource.addUser((SyncopeUser) attributable);\n@@ -389,11 +389,11 @@ protected PropagationByResource fill(\n                 }\n \n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n-                    if (schema.getName().equals(mapping.getSourceAttrName())\n-                            && mapping.getSourceMappingType()\n-                            == attributableUtil.sourceMappingType()\n+                    if (schema.getName().equals(mapping.getIntAttrName())\n+                            && mapping.getIntMappingType()\n+                            == attributableUtil.intMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getTargetResources().\n+                            && attributable.getExternalResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -425,11 +425,11 @@ protected PropagationByResource fill(\n \n             if (schema != null) {\n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n-                    if (schema.getName().equals(mapping.getSourceAttrName())\n-                            && mapping.getSourceMappingType()\n-                            == attributableUtil.sourceMappingType()\n+                    if (schema.getName().equals(mapping.getIntAttrName())\n+                            && mapping.getIntMappingType()\n+                            == attributableUtil.intMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getTargetResources().\n+                            && attributable.getExternalResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -520,11 +520,11 @@ protected PropagationByResource fill(\n \n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n                     if (derivedSchema.getName().equals(\n-                            mapping.getSourceAttrName())\n-                            && mapping.getSourceMappingType()\n-                            == attributableUtil.derivedSourceMappingType()\n+                            mapping.getIntAttrName())\n+                            && mapping.getIntMappingType()\n+                            == attributableUtil.derivedIntMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getTargetResources().\n+                            && attributable.getExternalResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -568,11 +568,11 @@ protected PropagationByResource fill(\n \n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n                     if (virtualSchema.getName().equals(\n-                            mapping.getSourceAttrName())\n-                            && mapping.getSourceMappingType()\n-                            == attributableUtil.virtualSourceMappingType()\n+                            mapping.getIntAttrName())\n+                            && mapping.getIntMappingType()\n+                            == attributableUtil.virtualIntMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getTargetResources().\n+                            && attributable.getExternalResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -603,11 +603,11 @@ protected PropagationByResource fill(\n             if (derivedSchema != null) {\n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n                     if (derivedSchema.getName().equals(\n-                            mapping.getSourceAttrName())\n-                            && mapping.getSourceMappingType()\n-                            == attributableUtil.derivedSourceMappingType()\n+                            mapping.getIntAttrName())\n+                            && mapping.getIntMappingType()\n+                            == attributableUtil.derivedIntMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getTargetResources().\n+                            && attributable.getExternalResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -635,11 +635,11 @@ protected PropagationByResource fill(\n             if (virtualSchema != null) {\n                 for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n                     if (virtualSchema.getName().equals(\n-                            mapping.getSourceAttrName())\n-                            && mapping.getSourceMappingType()\n-                            == attributableUtil.virtualSourceMappingType()\n+                            mapping.getIntAttrName())\n+                            && mapping.getIntMappingType()\n+                            == attributableUtil.virtualIntMappingType()\n                             && mapping.getResource() != null\n-                            && attributable.getTargetResources().\n+                            && attributable.getExternalResources().\n                             contains(mapping.getResource())) {\n \n                         propByRes.add(PropagationOperation.UPDATE,\n@@ -759,12 +759,12 @@ protected void fill(AbstractAttributable attributable,\n         }\n \n         // 3. resources\n-        TargetResource resource;\n+        ExternalResource resource;\n         for (String resourceName : attributableTO.getResources()) {\n             resource = getResource(resourceName);\n \n             if (resource != null) {\n-                attributable.addTargetResource(resource);\n+                attributable.addExternalResource(resource);\n \n                 if (attributableUtil == attributableUtil.USER) {\n                     resource.addUser((SyncopeUser) attributable);\n@@ -787,7 +787,7 @@ public void fillTO(\n             Collection<? extends AbstractAttr> attributes,\n             Collection<? extends AbstractDerAttr> derivedAttributes,\n             Collection<? extends AbstractVirAttr> virtualAttributes,\n-            Collection<TargetResource> resources) {\n+            Collection<ExternalResource> resources) {\n \n         AttributeTO attributeTO;\n         for (AbstractAttr attribute : attributes) {\n@@ -820,7 +820,7 @@ public void fillTO(\n             abstractAttributableTO.addVirtualAttribute(attributeTO);\n         }\n \n-        for (TargetResource resource : resources) {\n+        for (ExternalResource resource : resources) {\n             abstractAttributableTO.addResource(resource.getName());\n         }\n     }"},{"sha":"856b51405e46a589ebaab58441a5d8dfaaa7fa7f","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -31,12 +31,12 @@\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.SchemaMapping;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.syncope.core.persistence.dao.PolicyDAO;\n import org.syncope.core.util.JexlUtil;\n import org.syncope.types.ConnConfProperty;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n import org.syncope.types.SyncopeClientExceptionType;\n \n @Component\n@@ -63,13 +63,13 @@ public class ResourceDataBinder {\n     @Autowired\n     private PolicyDAO policyDAO;\n \n-    public TargetResource getResource(final ResourceTO resourceTO)\n+    public ExternalResource getResource(final ResourceTO resourceTO)\n             throws SyncopeClientCompositeErrorException {\n \n-        return getResource(new TargetResource(), resourceTO);\n+        return getResource(new ExternalResource(), resourceTO);\n     }\n \n-    public TargetResource getResource(final TargetResource resource,\n+    public ExternalResource getResource(final ExternalResource resource,\n             final ResourceTO resourceTO)\n             throws SyncopeClientCompositeErrorException {\n \n@@ -114,21 +114,21 @@ public TargetResource getResource(final TargetResource resource,\n     }\n \n     public List<ResourceTO> getResourceTOs(\n-            Collection<TargetResource> resources) {\n+            Collection<ExternalResource> resources) {\n \n         if (resources == null) {\n             return null;\n         }\n \n         List<ResourceTO> resourceTOs = new ArrayList<ResourceTO>();\n-        for (TargetResource resource : resources) {\n+        for (ExternalResource resource : resources) {\n             resourceTOs.add(getResourceTO(resource));\n         }\n \n         return resourceTOs;\n     }\n \n-    public ResourceTO getResourceTO(TargetResource resource) {\n+    public ResourceTO getResourceTO(ExternalResource resource) {\n \n         if (resource == null) {\n             return null;\n@@ -168,7 +168,7 @@ public ResourceTO getResourceTO(TargetResource resource) {\n     }\n \n     private List<SchemaMapping> getSchemaMappings(\n-            TargetResource resource, List<SchemaMappingTO> mappings) {\n+            ExternalResource resource, List<SchemaMappingTO> mappings) {\n \n         if (mappings == null) {\n             return null;\n@@ -188,7 +188,7 @@ private List<SchemaMapping> getSchemaMappings(\n         return schemaMappings;\n     }\n \n-    private SchemaMapping getSchemaMapping(TargetResource resource,\n+    private SchemaMapping getSchemaMapping(ExternalResource resource,\n             SchemaMappingTO mappingTO)\n             throws SyncopeClientCompositeErrorException {\n \n@@ -202,25 +202,25 @@ private SchemaMapping getSchemaMapping(TargetResource resource,\n \n         // this control needs to be free to get schema names\n         // without a complete/good resourceTO object\n-        if (mappingTO == null || mappingTO.getSourceMappingType() == null) {\n+        if (mappingTO == null || mappingTO.getIntMappingType() == null) {\n             LOG.error(\"Null mappingTO provided\");\n             return null;\n         }\n \n-        if (mappingTO.getSourceAttrName() == null) {\n-            switch (mappingTO.getSourceMappingType()) {\n+        if (mappingTO.getIntAttrName() == null) {\n+            switch (mappingTO.getIntMappingType()) {\n                 case SyncopeUserId:\n-                    mappingTO.setSourceAttrName(\n-                            SourceMappingType.SyncopeUserId.toString());\n+                    mappingTO.setIntAttrName(\n+                            IntMappingType.SyncopeUserId.toString());\n                     break;\n \n                 case Password:\n-                    mappingTO.setSourceAttrName(\n-                            SourceMappingType.Password.toString());\n+                    mappingTO.setIntAttrName(\n+                            IntMappingType.Password.toString());\n                     break;\n \n                 default:\n-                    requiredValuesMissing.addElement(\"sourceAttrName\");\n+                    requiredValuesMissing.addElement(\"intAttrName\");\n             }\n         }\n "},{"sha":"4a998e21c29e9ebf48c4dfdb90fd045dcd8f1dd6","filename":"core/src/main/java/org/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -203,7 +203,7 @@ public RoleTO getRoleTO(SyncopeRole role) {\n                 allAttributes,\n                 allDerAttributes,\n                 allVirAttributes,\n-                role.getTargetResources());\n+                role.getExternalResources());\n \n         for (Entitlement entitlement : role.getEntitlements()) {\n             roleTO.addEntitlement(entitlement.getName());"},{"sha":"25ff40ca32af74060da70c8d724d05987e584bab","filename":"core/src/main/java/org/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -36,7 +36,7 @@\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.SyncTask;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.Task;\n import org.syncope.core.persistence.beans.TaskExec;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n@@ -72,7 +72,7 @@ public class TaskDataBinder {\n     private void fill(final SyncTask task, final List<String> resources,\n             final List<Long> roles, boolean updateIndentities) {\n \n-        TargetResource resource;\n+        ExternalResource resource;\n         for (String resourceName : resources) {\n             resource = resourceDAO.find(resourceName);\n             if (resource == null) {\n@@ -110,7 +110,7 @@ public SchedTask createSchedTask(final SchedTaskTO taskTO,\n             case SYNC:\n                 SyncTaskTO syncTaskTO = (SyncTaskTO) taskTO;\n \n-                TargetResource resource = resourceDAO.find(syncTaskTO.\n+                ExternalResource resource = resourceDAO.find(syncTaskTO.\n                         getResource());\n                 if (resource == null) {\n                     throw new NotFoundException(\"Resource \"\n@@ -198,7 +198,7 @@ public TaskTO getTaskTO(final Task task, final TaskUtil taskUtil) {\n \n                 ((SyncTaskTO) taskTO).setResource(\n                         ((SyncTask) task).getResource().getName());\n-                for (TargetResource resource :\n+                for (ExternalResource resource :\n                         ((SyncTask) task).getDefaultResources()) {\n \n                     ((SyncTaskTO) taskTO).addDefaultResource(resource.getName());"},{"sha":"038abcbe4a918c3c4520216a9760cfcb1d42342c","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -28,7 +28,7 @@\n import org.syncope.core.persistence.beans.AbstractDerAttr;\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n import org.syncope.core.persistence.beans.Policy;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.membership.MAttr;\n import org.syncope.core.persistence.beans.membership.MDerAttr;\n@@ -126,7 +126,7 @@ public PropagationByResource update(final SyncopeUser user,\n             user.setPassword(userMod.getPassword(), getCipherAlgoritm(),\n                     passwordHistorySize);\n             propByRes.addAll(PropagationOperation.UPDATE,\n-                    user.getTargetResources());\n+                    user.getExternalResources());\n         }\n \n         // attributes, derived attributes, virtual attributes and resources\n@@ -152,8 +152,8 @@ public PropagationByResource update(final SyncopeUser user,\n                 LOG.debug(\"Invalid membership id specified to be removed: {}\",\n                         membershipId);\n             } else {\n-                for (TargetResource resource :\n-                        membership.getSyncopeRole().getTargetResources()) {\n+                for (ExternalResource resource :\n+                        membership.getSyncopeRole().getExternalResources()) {\n \n                     if (!membershipToBeAddedRoleIds.contains(\n                             membership.getSyncopeRole().getId())) {\n@@ -231,7 +231,7 @@ public PropagationByResource update(final SyncopeUser user,\n                     user.addMembership(membership);\n \n                     propByRes.addAll(PropagationOperation.UPDATE,\n-                            role.getTargetResources());\n+                            role.getExternalResources());\n                 }\n \n                 propByRes.merge(fill(membership, membershipMod,\n@@ -254,7 +254,7 @@ public UserTO getUserTO(final SyncopeUser user) {\n                 user.getAttributes(),\n                 user.getDerivedAttributes(),\n                 user.getVirtualAttributes(),\n-                user.getTargetResources());\n+                user.getExternalResources());\n \n         MembershipTO membershipTO;\n         for (Membership membership : user.getMemberships()) {\n@@ -267,7 +267,7 @@ public UserTO getUserTO(final SyncopeUser user) {\n                     membership.getAttributes(),\n                     membership.getDerivedAttributes(),\n                     membership.getVirtualAttributes(),\n-                    membership.getTargetResources());\n+                    membership.getExternalResources());\n \n             userTO.addMembership(membershipTO);\n         }"},{"sha":"886649a4c2208ca610cb570ef7b87bf3ef06dbd1","filename":"core/src/main/java/org/syncope/core/scheduling/SyncJob.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FSyncJob.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -36,7 +36,7 @@\n import org.syncope.core.init.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.SyncTask;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.UAttrValue;\n@@ -161,10 +161,10 @@ private UserTO getUserTO(final ConnectorObject obj,\n         List<Object> values;\n         AttributeTO attributeTO;\n         for (SchemaMapping mapping : mappings) {\n-            attribute = obj.getAttributeByName(mapping.getDestAttrName());\n+            attribute = obj.getAttributeByName(mapping.getExtAttrName());\n             values = attribute == null\n                     ? Collections.EMPTY_LIST : attribute.getValue();\n-            switch (mapping.getSourceMappingType()) {\n+            switch (mapping.getIntMappingType()) {\n                 case SyncopeUserId:\n                     break;\n \n@@ -176,7 +176,7 @@ private UserTO getUserTO(final ConnectorObject obj,\n \n                 case UserSchema:\n                     attributeTO = new AttributeTO();\n-                    attributeTO.setSchema(mapping.getSourceAttrName());\n+                    attributeTO.setSchema(mapping.getIntAttrName());\n                     for (Object value : values) {\n                         attributeTO.addValue(value.toString());\n                     }\n@@ -185,13 +185,13 @@ private UserTO getUserTO(final ConnectorObject obj,\n \n                 case UserDerivedSchema:\n                     attributeTO = new AttributeTO();\n-                    attributeTO.setSchema(mapping.getSourceAttrName());\n+                    attributeTO.setSchema(mapping.getIntAttrName());\n                     userTO.addDerivedAttribute(attributeTO);\n                     break;\n \n                 case UserVirtualSchema:\n                     attributeTO = new AttributeTO();\n-                    attributeTO.setSchema(mapping.getSourceAttrName());\n+                    attributeTO.setSchema(mapping.getIntAttrName());\n                     userTO.addVirtualAttribute(attributeTO);\n                     break;\n \n@@ -230,10 +230,10 @@ private UserMod getUserMod(final Long userId, final ConnectorObject obj,\n         List<Object> values;\n         AttributeMod attributeMod;\n         for (SchemaMapping mapping : mappings) {\n-            attribute = obj.getAttributeByName(mapping.getDestAttrName());\n+            attribute = obj.getAttributeByName(mapping.getExtAttrName());\n             values = attribute == null\n                     ? Collections.EMPTY_LIST : attribute.getValue();\n-            switch (mapping.getSourceMappingType()) {\n+            switch (mapping.getIntMappingType()) {\n                 case SyncopeUserId:\n                     break;\n \n@@ -245,10 +245,10 @@ private UserMod getUserMod(final Long userId, final ConnectorObject obj,\n \n                 case UserSchema:\n                     userMod.addAttributeToBeRemoved(\n-                            mapping.getSourceAttrName());\n+                            mapping.getIntAttrName());\n \n                     attributeMod = new AttributeMod();\n-                    attributeMod.setSchema(mapping.getSourceAttrName());\n+                    attributeMod.setSchema(mapping.getIntAttrName());\n                     for (Object value : values) {\n                         attributeMod.addValueToBeAdded(value.toString());\n                     }\n@@ -257,12 +257,12 @@ private UserMod getUserMod(final Long userId, final ConnectorObject obj,\n \n                 case UserDerivedSchema:\n                     userMod.addDerivedAttributeToBeAdded(\n-                            mapping.getSourceAttrName());\n+                            mapping.getIntAttrName());\n                     break;\n \n                 case UserVirtualSchema:\n                     userMod.addVirtualAttributeToBeAdded(\n-                            mapping.getSourceAttrName());\n+                            mapping.getIntAttrName());\n                     break;\n \n                 default:\n@@ -353,7 +353,7 @@ protected String doExecute()\n \n         Set<String> defaultResources = new HashSet<String>(\n                 syncTask.getDefaultResources().size());\n-        for (TargetResource resource : syncTask.getDefaultResources()) {\n+        for (ExternalResource resource : syncTask.getDefaultResources()) {\n             defaultResources.add(resource.getName());\n         }\n         Set<Long> defaultRoles = new HashSet<Long>(\n@@ -374,7 +374,7 @@ protected String doExecute()\n         List<Long> userIds;\n         SyncopeUser userToUpdate;\n         for (SyncDelta delta : deltas) {\n-            users = findExistingUsers(accountIdMap.getSourceAttrName(),\n+            users = findExistingUsers(accountIdMap.getIntAttrName(),\n                     delta.getUid().getUidValue(),\n                     delta.getPreviousUid() == null\n                     ? null : delta.getPreviousUid().getUidValue());"},{"sha":"d0c13ca21a9d11124f91b47063af422c2034afae","filename":"core/src/main/java/org/syncope/core/util/AttributableUtil.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -45,42 +45,42 @@\n import org.syncope.core.persistence.beans.user.USchema;\n import org.syncope.core.persistence.beans.user.UVirAttr;\n import org.syncope.core.persistence.beans.user.UVirSchema;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n public enum AttributableUtil {\n \n     USER,\n     ROLE,\n     MEMBERSHIP;\n \n-    public SourceMappingType sourceMappingType() {\n-        SourceMappingType result = null;\n+    public IntMappingType intMappingType() {\n+        IntMappingType result = null;\n \n         switch (this) {\n             default:\n-                result = SourceMappingType.UserSchema;\n+                result = IntMappingType.UserSchema;\n         }\n \n         return result;\n     }\n \n-    public SourceMappingType derivedSourceMappingType() {\n-        SourceMappingType result = null;\n+    public IntMappingType derivedIntMappingType() {\n+        IntMappingType result = null;\n \n         switch (this) {\n             default:\n-                result = SourceMappingType.UserDerivedSchema;\n+                result = IntMappingType.UserDerivedSchema;\n         }\n \n         return result;\n     }\n \n-    public SourceMappingType virtualSourceMappingType() {\n-        SourceMappingType result = null;\n+    public IntMappingType virtualIntMappingType() {\n+        IntMappingType result = null;\n \n         switch (this) {\n             default:\n-                result = SourceMappingType.UserVirtualSchema;\n+                result = IntMappingType.UserVirtualSchema;\n         }\n \n         return result;"},{"sha":"f8848b6f1421e5b37160a056f18b430f87ab92e3","filename":"core/src/main/java/org/syncope/core/workflow/ActivitiUserWorkflowAdapter.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -181,7 +181,7 @@ public SyncopeUser activate(final SyncopeUser user, final String token)\n \n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getTargetResources());\n+                PropagationOperation.UPDATE, user.getExternalResources());\n         propagationManager.update(user, null, propByRes, null);\n \n         return updated;\n@@ -227,7 +227,7 @@ public SyncopeUser suspend(final SyncopeUser user)\n \n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getTargetResources());\n+                PropagationOperation.UPDATE, user.getExternalResources());\n         propagationManager.update(user, null, propByRes, null);\n \n         return updated;\n@@ -243,7 +243,7 @@ public SyncopeUser reactivate(final SyncopeUser user)\n \n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getTargetResources());\n+                PropagationOperation.UPDATE, user.getExternalResources());\n         propagationManager.update(user, null, propByRes, null);\n \n         return updated;"},{"sha":"0be068350f8e760a9a3530c537579a882747dbbf","filename":"core/src/main/java/org/syncope/core/workflow/NoOpUserWorkflowAdapter.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -91,7 +91,7 @@ public SyncopeUser activate(final SyncopeUser user, final String token)\n \n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getTargetResources());\n+                PropagationOperation.UPDATE, user.getExternalResources());\n         propagationManager.update(user, null, propByRes, null);\n \n         return updated;\n@@ -130,7 +130,7 @@ public SyncopeUser suspend(final SyncopeUser user)\n \n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getTargetResources());\n+                PropagationOperation.UPDATE, user.getExternalResources());\n         propagationManager.update(user, null, propByRes, null);\n \n         return updated;\n@@ -145,7 +145,7 @@ public SyncopeUser reactivate(final SyncopeUser user)\n \n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n-                PropagationOperation.UPDATE, user.getTargetResources());\n+                PropagationOperation.UPDATE, user.getExternalResources());\n         propagationManager.update(user, null, propByRes, null);\n \n         return updated;"},{"sha":"63ac0a67a31fa636b516799be9db1ddf941e861b","filename":"core/src/main/java/org/syncope/core/workflow/UserService.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FUserService.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -23,7 +23,7 @@\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.dao.UserDAO;\n@@ -53,14 +53,14 @@ public Set<String> getMandatoryResourceNames(final SyncopeUser user,\n \n         Set<String> mandatoryResourceNames = new HashSet<String>();\n \n-        for (TargetResource resource : user.getTargetResources()) {\n+        for (ExternalResource resource : user.getExternalResources()) {\n             if (mandatoryResources.contains(resource.getName())) {\n                 mandatoryResourceNames.add(resource.getName());\n             }\n         }\n         for (SyncopeRole role : user.getRoles()) {\n             if (mandatoryRoles.contains(role.getId())) {\n-                for (TargetResource resource : role.getTargetResources()) {\n+                for (ExternalResource resource : role.getExternalResources()) {\n                     mandatoryResourceNames.add(resource.getName());\n                 }\n             }"},{"sha":"3a6db756f04004f762d1d8f666ee13b9479125ca","filename":"core/src/main/resources/indexes.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Findexes.xml?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -30,8 +30,8 @@\n     <entry key=\"MDerAttr_owner_idIndex\">CREATE INDEX MDerAttr_owner_idIndex ON MDerAttr(owner_id)</entry>\n     <entry key=\"Membership_syncopeUser_idIndex\">CREATE INDEX Membership_syncopeUser_idIndex ON Membership(syncopeUser_id)</entry>\n     <entry key=\"Membership_syncopeRole_idIndex\">CREATE INDEX Membership_syncopeRole_idIndex ON Membership(syncopeRole_id)</entry>\n-    <entry key=\"Membership_TargetResource_Membership_idIndex\">CREATE INDEX Membership_TargetResourc1Index ON Membership_TargetResource(Membership_id)</entry>\n-    <entry key=\"Membership_TargetResource_targetResources_nameIndex\">CREATE INDEX Membership_TargetResourc2Index ON Membership_TargetResource(targetResources_name)</entry>\n+    <entry key=\"Membership_ExternalResource_Membership_idIndex\">CREATE INDEX Membership_TargetResourc1Index ON Membership_ExternalResource(Membership_id)</entry>\n+    <entry key=\"Membership_ExternalResource_externalResources_nameIndex\">CREATE INDEX Membership_TargetResourc2Index ON Membership_ExternalResource(externalResources_name)</entry>\n     <entry key=\"RAttr_schema_nameIndex\">CREATE INDEX RAttr_schema_nameIndex ON RAttr(schema_name)</entry>\n     <entry key=\"RAttr_owner_idIndex\">CREATE INDEX RAttr_owner_idIndex ON RAttr(owner_id)</entry>\n     <entry key=\"RAttrValue_attribute_idIndex\">CREATE INDEX RAttrValue_attribute_idIndex ON RAttrValue(attribute_id)</entry>\n@@ -46,11 +46,11 @@\n     <entry key=\"SyncopeRole_parent_idIndex\">CREATE INDEX SyncopeRole_parent_idIndeIndex ON SyncopeRole(parent_id)</entry>\n     <entry key=\"SyncopeRole_Entitlement_entitlements_nameIndex\">CREATE INDEX SyncopeRole_Entitlement_eIndex ON SyncopeRole_Entitlement(entitlements_name)</entry>\n     <entry key=\"SyncopeRole_Entitlement_roles_idIndex\">CREATE INDEX SyncopeRole_Entitlement_rIndex ON SyncopeRole_Entitlement(roles_id)</entry>\n-    <entry key=\"SyncopeRole_TargetResource_roles_idIndex\">CREATE INDEX SyncopeRole_TargetResour1Index ON SyncopeRole_TargetResource(roles_id)</entry>\n-    <entry key=\"SyncopeRole_TargetResource_targetResources_nameIndex\">CREATE INDEX SyncopeRole_TargetResour2Index ON SyncopeRole_TargetResource(targetResources_name)</entry>\n-    <entry key=\"SyncopeUser_TargetResource_users_idIndex\">CREATE INDEX SyncopeUser_TargetResour1Index ON SyncopeUser_TargetResource(users_id)</entry>\n-    <entry key=\"SyncopeUser_TargetResource_targetResources_nameIndex\">CREATE INDEX SyncopeUser_TargetResour2Index ON SyncopeUser_TargetResource(targetResources_name)</entry>\n-    <entry key=\"TargetResource_connector_idIndex\">CREATE INDEX TargetResource_connector_Index ON TargetResource(connector_id)</entry>\n+    <entry key=\"SyncopeRole_ExternalResource_roles_idIndex\">CREATE INDEX SyncopeRole_TargetResour1Index ON SyncopeRole_ExternalResource(roles_id)</entry>\n+    <entry key=\"SyncopeRole_ExternalResource_externalResources_nameIndex\">CREATE INDEX SyncopeRole_TargetResour2Index ON SyncopeRole_ExternalResource(externalResources_name)</entry>\n+    <entry key=\"SyncopeUser_ExternalResource_users_idIndex\">CREATE INDEX SyncopeUser_TargetResour1Index ON SyncopeUser_ExternalResource(users_id)</entry>\n+    <entry key=\"SyncopeUser_ExternalResource_externalResources_nameIndex\">CREATE INDEX SyncopeUser_TargetResour2Index ON SyncopeUser_ExternalResource(externalResources_name)</entry>\n+    <entry key=\"ExternalResource_connector_idIndex\">CREATE INDEX ExternalResource_connector_Index ON ExternalResource(connector_id)</entry>\n     <entry key=\"Task_resource_nameIndex\">CREATE INDEX Task_resource_nameIndex ON Task(resource_name)</entry>\n     <entry key=\"TaskExec_task_idIndex\">CREATE INDEX TaskExec_task_idIndeIndex ON TaskExec(task_id)</entry>\n     <entry key=\"UAttr_schema_nameIndex\">CREATE INDEX UAttr_schema_nameIndex ON UAttr(schema_name)</entry>"},{"sha":"66d599de1563af0991d38507c69cc8efc46414b1","filename":"core/src/main/resources/views.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fviews.xml?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -63,13 +63,13 @@ WHERE m.syncoperole_id = r.id\n     <entry key=\"user_search_resource\">\n CREATE VIEW user_search_resource AS\n \n-SELECT st.users_id AS user_id, st.targetResources_name AS resource_name\n-FROM SyncopeUser_TargetResource st\n+SELECT st.users_id AS user_id, st.externalResources_name AS resource_name\n+FROM SyncopeUser_ExternalResource st\n \n UNION ALL\n \n-SELECT m.syncopeuser_id AS user_id, st.targetResources_name AS resource_name\n-FROM Membership m, SyncopeRole r, SyncopeRole_TargetResource st\n+SELECT m.syncopeuser_id AS user_id, st.externalResources_name AS resource_name\n+FROM Membership m, SyncopeRole r, SyncopeRole_ExternalResource st\n WHERE m.syncoperole_id = r.id AND st.roles_id = r.id\n     </entry>\n </properties>"},{"sha":"a7ebd62df29a2f687c58db008f5c03ef76011f43","filename":"core/src/test/java/org/syncope/core/init/ConnInstanceLoaderTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoaderTest.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -24,7 +24,7 @@\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.AbstractTest;\n import org.syncope.core.persistence.beans.ConnInstance;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.propagation.ConnectorFacadeProxy;\n import org.syncope.core.util.ApplicationContextManager;\n@@ -70,7 +70,7 @@ public void load() {\n     @Test(expected = NoSuchBeanDefinitionException.class)\n     public void getConnectorWhenEmpty() {\n         ConnInstance instance = new ConnInstance();\n-        TargetResource resource = new TargetResource();\n+        ExternalResource resource = new ExternalResource();\n         resource.setConnector(instance);\n         cil.getConnector(resource);\n     }"},{"sha":"b8132edccfe9727128e719b231ac8fbb99b520ee","filename":"core/src/test/java/org/syncope/core/persistence/dao/ConnInstanceTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -25,7 +25,7 @@\n import org.syncope.types.ConnConfProperty;\n import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.AbstractTest;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.types.ConnConfPropSchema;\n import org.syncope.types.ConnectorCapability;\n \n@@ -152,8 +152,8 @@ public void issue176() {\n         assertNotNull(connectorInstance);\n         assertTrue(connectorInstance.getCapabilities().isEmpty());\n \n-        List<TargetResource> resources =\n-                connInstanceDAO.findTargetResources(connectorInstance);\n+        List<ExternalResource> resources =\n+                connInstanceDAO.findExternalResources(connectorInstance);\n \n         assertNotNull(resources);\n         assertEquals(1, resources.size());\n@@ -166,7 +166,7 @@ public void issue176() {\n         assertNotNull(connectorInstance);\n         assertFalse(connectorInstance.getCapabilities().isEmpty());\n \n-        resources = connInstanceDAO.findTargetResources(connectorInstance);\n+        resources = connInstanceDAO.findExternalResources(connectorInstance);\n         assertNotNull(resources);\n         assertEquals(1, resources.size());\n         assertEquals("},{"sha":"95b50959eaa00787eafc68f025eb8a29ab2b68ea","filename":"core/src/test/java/org/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -23,11 +23,11 @@\n import org.springframework.test.annotation.ExpectedException;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.ConnInstance;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.AbstractTest;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n @Transactional\n public class ResourceTest extends AbstractTest {\n@@ -37,7 +37,7 @@ public class ResourceTest extends AbstractTest {\n \n     @Test\n     public final void findById() {\n-        TargetResource resource =\n+        ExternalResource resource =\n                 resourceDAO.find(\"ws-target-resource-1\");\n \n         assertNotNull(\"findById did not work\", resource);\n@@ -75,20 +75,20 @@ public final void findById() {\n     public final void getAccountId() {\n         SchemaMapping mapping = resourceDAO.getMappingForAccountId(\n                 \"ws-target-resource-2\");\n-        assertEquals(\"username\", mapping.getSourceAttrName());\n+        assertEquals(\"username\", mapping.getIntAttrName());\n     }\n \n     @Test\n     public final void save() {\n-        TargetResource resource = new TargetResource();\n+        ExternalResource resource = new ExternalResource();\n         resource.setName(\"ws-target-resource-basic-save\");\n \n         SchemaMapping accountId = new SchemaMapping();\n         accountId.setResource(resource);\n         accountId.setAccountid(true);\n-        accountId.setDestAttrName(\"username\");\n-        accountId.setSourceAttrName(\"username\");\n-        accountId.setSourceMappingType(SourceMappingType.SyncopeUserId);\n+        accountId.setExtAttrName(\"username\");\n+        accountId.setIntAttrName(\"username\");\n+        accountId.setIntMappingType(IntMappingType.SyncopeUserId);\n \n         resource.addMapping(accountId);\n \n@@ -98,68 +98,68 @@ public final void save() {\n         resource.setConnector(connector);\n \n         // save the resource\n-        TargetResource actual = resourceDAO.save(resource);\n+        ExternalResource actual = resourceDAO.save(resource);\n \n         assertNotNull(actual);\n         assertNotNull(actual.getConnector());\n     }\n \n     @Test\n     @ExpectedException(value = InvalidEntityException.class)\n-    public final void saveInvalidMappingSourceAttr() {\n+    public final void saveInvalidMappingIntAttr() {\n \n-        TargetResource resource = new TargetResource();\n+        ExternalResource resource = new ExternalResource();\n         resource.setName(\"ws-target-resource-basic-save-invalid\");\n \n         SchemaMapping accountId = new SchemaMapping();\n         accountId.setResource(resource);\n         accountId.setAccountid(true);\n-        accountId.setSourceMappingType(SourceMappingType.UserSchema);\n+        accountId.setIntMappingType(IntMappingType.UserSchema);\n \n         resource.addMapping(accountId);\n \n         // save the resource\n-        TargetResource actual = resourceDAO.save(resource);\n+        ExternalResource actual = resourceDAO.save(resource);\n \n         assertNotNull(actual);\n     }\n \n     @Test\n     @ExpectedException(value = InvalidEntityException.class)\n-    public final void saveInvalidMappingDestAttr() {\n+    public final void saveInvalidMappingExtAttr() {\n \n-        TargetResource resource = new TargetResource();\n+        ExternalResource resource = new ExternalResource();\n         resource.setName(\"ws-target-resource-basic-save-invalid\");\n \n         SchemaMapping mapping = new SchemaMapping();\n         mapping.setResource(resource);\n         mapping.setAccountid(true);\n-        mapping.setSourceAttrName(\"username\");\n-        mapping.setSourceMappingType(SourceMappingType.UserSchema);\n+        mapping.setIntAttrName(\"username\");\n+        mapping.setIntMappingType(IntMappingType.UserSchema);\n \n         resource.addMapping(mapping);\n \n         mapping = new SchemaMapping();\n         mapping.setResource(resource);\n-        mapping.setSourceAttrName(\"username\");\n-        mapping.setSourceMappingType(SourceMappingType.UserSchema);\n+        mapping.setIntAttrName(\"username\");\n+        mapping.setIntMappingType(IntMappingType.UserSchema);\n \n         resource.addMapping(mapping);\n \n         // save the resource\n-        TargetResource actual = resourceDAO.save(resource);\n+        ExternalResource actual = resourceDAO.save(resource);\n \n         assertNotNull(actual);\n     }\n \n     @Test\n     public final void delete() {\n-        TargetResource resource = resourceDAO.find(\"ws-target-resource-2\");\n+        ExternalResource resource = resourceDAO.find(\"ws-target-resource-2\");\n         assertNotNull(resource);\n \n         resourceDAO.delete(resource.getName());\n \n-        TargetResource actual = resourceDAO.find(\"ws-target-resource-2\");\n+        ExternalResource actual = resourceDAO.find(\"ws-target-resource-2\");\n         assertNull(actual);\n     }\n }"},{"sha":"1c05eb0540d7beb2d5995096844f8e6ce8c0fe0b","filename":"core/src/test/java/org/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -25,7 +25,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.AbstractTest;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.SchedTask;\n import org.syncope.core.persistence.beans.SyncTask;\n@@ -56,7 +56,7 @@ public final void findAll() {\n \n     @Test\n     public final void savePropagationTask() {\n-        TargetResource resource = resourceDAO.find(\"ws-target-resource-1\");\n+        ExternalResource resource = resourceDAO.find(\"ws-target-resource-1\");\n         assertNotNull(resource);\n \n         PropagationTask task = new PropagationTask();\n@@ -81,7 +81,7 @@ public final void savePropagationTask() {\n \n     @Test\n     public final void saveSyncTask() {\n-        TargetResource resource = resourceDAO.find(\"ws-target-resource-1\");\n+        ExternalResource resource = resourceDAO.find(\"ws-target-resource-1\");\n         assertNotNull(resource);\n \n         SyncTask task = new SyncTask();\n@@ -121,7 +121,7 @@ public final void delete() {\n         PropagationTask task = taskDAO.find(1L);\n         assertNotNull(task);\n \n-        TargetResource resource = task.getResource();\n+        ExternalResource resource = task.getResource();\n         assertNotNull(resource);\n \n         taskDAO.delete(task);"},{"sha":"7117be7fbfbadec016557e4f8cea2227212fb3c0","filename":"core/src/test/java/org/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":34,"deletions":34,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -27,7 +27,7 @@\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.SchemaMappingTO;\n import org.syncope.core.persistence.beans.ConnInstance;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n import org.syncope.core.persistence.beans.user.USchema;\n@@ -44,7 +44,7 @@\n import org.syncope.core.persistence.dao.PolicyDAO;\n import org.syncope.core.persistence.dao.TaskDAO;\n import org.syncope.types.PropagationMode;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n @Transactional\n public class ResourceTest extends AbstractTest {\n@@ -77,11 +77,11 @@ public final void createWithPasswordPolicy() {\n         final String RESOURCE_NAME = \"resourceWithPasswordPolicy\";\n \n         Policy policy = policyDAO.find(4L);\n-        TargetResource resource = new TargetResource();\n+        ExternalResource resource = new ExternalResource();\n         resource.setName(RESOURCE_NAME);\n         resource.setPasswordPolicy(policy);\n \n-        TargetResource actual = resourceDAO.save(resource);\n+        ExternalResource actual = resourceDAO.save(resource);\n         assertNotNull(actual);\n \n         actual = resourceDAO.find(actual.getName());\n@@ -103,18 +103,18 @@ public final void issue42() {\n \n         Set<SchemaMapping> beforeUserIdMappings = new HashSet<SchemaMapping>();\n         for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n-            if (userId.getName().equals(mapping.getSourceAttrName())\n-                    && mapping.getSourceMappingType()\n-                    == SourceMappingType.UserSchema) {\n+            if (userId.getName().equals(mapping.getIntAttrName())\n+                    && mapping.getIntMappingType()\n+                    == IntMappingType.UserSchema) {\n \n                 beforeUserIdMappings.add(mapping);\n             }\n         }\n \n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setSourceAttrName(\"userId\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n-        schemaMappingTO.setDestAttrName(\"campo1\");\n+        schemaMappingTO.setIntAttrName(\"userId\");\n+        schemaMappingTO.setIntMappingType(IntMappingType.UserSchema);\n+        schemaMappingTO.setExtAttrName(\"campo1\");\n         schemaMappingTO.setAccountid(true);\n         schemaMappingTO.setPassword(false);\n         schemaMappingTO.setMandatoryCondition(\"false\");\n@@ -130,20 +130,20 @@ public final void issue42() {\n         resourceTO.setOptionalPropagationMode(PropagationMode.SYNC);\n         resourceTO.setForceMandatoryConstraint(true);\n \n-        TargetResource resource = resourceDataBinder.getResource(resourceTO);\n+        ExternalResource resource = resourceDataBinder.getResource(resourceTO);\n         resource = resourceDAO.save(resource);\n         resourceDAO.flush();\n \n-        TargetResource actual = resourceDAO.find(\"resource-issue42\");\n+        ExternalResource actual = resourceDAO.find(\"resource-issue42\");\n         assertEquals(resource, actual);\n \n         userId = schemaDAO.find(\"userId\", USchema.class);\n \n         Set<SchemaMapping> afterUserIdMappings = new HashSet<SchemaMapping>();\n         for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n-            if (userId.getName().equals(mapping.getSourceAttrName())\n-                    && mapping.getSourceMappingType()\n-                    == SourceMappingType.UserSchema) {\n+            if (userId.getName().equals(mapping.getIntAttrName())\n+                    && mapping.getIntMappingType()\n+                    == IntMappingType.UserSchema) {\n \n                 afterUserIdMappings.add(mapping);\n             }\n@@ -156,7 +156,7 @@ public final void issue42() {\n     @Test\n     public final void save()\n             throws ClassNotFoundException {\n-        TargetResource resource = new TargetResource();\n+        ExternalResource resource = new ExternalResource();\n         resource.setName(\"ws-target-resource-save\");\n \n         // specify the connector\n@@ -175,20 +175,20 @@ public final void save()\n \n         for (int i = 0; i < 3; i++) {\n             mapping = new SchemaMapping();\n-            mapping.setDestAttrName(\"test\" + i);\n+            mapping.setExtAttrName(\"test\" + i);\n \n-            mapping.setSourceAttrName(userSchema.getName());\n-            mapping.setSourceMappingType(SourceMappingType.UserSchema);\n+            mapping.setIntAttrName(userSchema.getName());\n+            mapping.setIntMappingType(IntMappingType.UserSchema);\n             mapping.setMandatoryCondition(\"false\");\n \n             resource.addMapping(mapping);\n         }\n         SchemaMapping accountId = new SchemaMapping();\n         accountId.setResource(resource);\n         accountId.setAccountid(true);\n-        accountId.setDestAttrName(\"username\");\n-        accountId.setSourceAttrName(userSchema.getName());\n-        accountId.setSourceMappingType(SourceMappingType.SyncopeUserId);\n+        accountId.setExtAttrName(\"username\");\n+        accountId.setIntAttrName(userSchema.getName());\n+        accountId.setIntMappingType(IntMappingType.SyncopeUserId);\n \n         resource.addMapping(accountId);\n \n@@ -202,9 +202,9 @@ public final void save()\n         SchemaMapping derived = new SchemaMapping();\n         derived.setResource(resource);\n         derived.setAccountid(false);\n-        derived.setDestAttrName(\"fullname\");\n-        derived.setSourceAttrName(derivedSchema.getName());\n-        derived.setSourceMappingType(SourceMappingType.UserSchema);\n+        derived.setExtAttrName(\"fullname\");\n+        derived.setIntAttrName(derivedSchema.getName());\n+        derived.setIntMappingType(IntMappingType.UserSchema);\n \n         resource.addMapping(derived);\n \n@@ -214,10 +214,10 @@ public final void save()\n         assertNotNull(\"user not found\", user);\n \n         resource.addUser(user);\n-        user.addTargetResource(resource);\n+        user.addExternalResource(resource);\n \n         // save the resource\n-        TargetResource actual = resourceDAO.save(resource);\n+        ExternalResource actual = resourceDAO.save(resource);\n \n         assertNotNull(actual);\n \n@@ -233,7 +233,7 @@ public final void save()\n \n         assertNotNull(connector);\n \n-        List<TargetResource> resources = connector.getResources();\n+        List<ExternalResource> resources = connector.getResources();\n \n         assertNotNull(resources);\n \n@@ -252,7 +252,7 @@ public final void save()\n \n     @Test\n     public final void delete() {\n-        TargetResource resource = resourceDAO.find(\"ws-target-resource-2\");\n+        ExternalResource resource = resourceDAO.find(\"ws-target-resource-2\");\n \n         assertNotNull(\"find to delete did not work\", resource);\n \n@@ -291,17 +291,17 @@ public final void delete() {\n         resourceDAO.flush();\n \n         // resource must be removed\n-        TargetResource actual = resourceDAO.find(\"ws-target-resource-2\");\n+        ExternalResource actual = resourceDAO.find(\"ws-target-resource-2\");\n         assertNull(\"delete did not work\", actual);\n \n         // resource must be not referenced any more from users\n         SyncopeUser actualUser;\n-        Collection<TargetResource> resources;\n+        Collection<ExternalResource> resources;\n         for (Long id : userIds) {\n             actualUser = userDAO.find(id);\n             assertNotNull(actualUser);\n-            resources = actualUser.getTargetResources();\n-            for (TargetResource res : resources) {\n+            resources = actualUser.getExternalResources();\n+            for (ExternalResource res : resources) {\n                 assertFalse(res.getName().equalsIgnoreCase(resource.getName()));\n             }\n         }\n@@ -311,7 +311,7 @@ public final void delete() {\n                 connectorInstanceDAO.find(connectorId);\n         assertNotNull(actualConnector);\n         resources = actualConnector.getResources();\n-        for (TargetResource res : resources) {\n+        for (ExternalResource res : resources) {\n             assertFalse(res.getName().equalsIgnoreCase(resource.getName()));\n         }\n "},{"sha":"0bf1aae4a9fc72b5d72595667d39abbb5e91a7e0","filename":"core/src/test/java/org/syncope/core/persistence/relationships/SchemaTest.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FSchemaTest.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -31,7 +31,7 @@\n import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.AbstractTest;\n import org.syncope.core.util.AttributableUtil;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n \n @Transactional\n public class SchemaTest extends AbstractTest {\n@@ -61,9 +61,9 @@ public final void test1() {\n         // check for associated mappings\n         Set<SchemaMapping> mappings = new HashSet<SchemaMapping>();\n         for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n-            if (schema.getName().equals(mapping.getSourceAttrName())\n-                    && mapping.getSourceMappingType()\n-                    == SourceMappingType.UserSchema) {\n+            if (schema.getName().equals(mapping.getIntAttrName())\n+                    && mapping.getIntMappingType()\n+                    == IntMappingType.UserSchema) {\n \n                 mappings.add(mapping);\n             }\n@@ -83,9 +83,9 @@ public final void test1() {\n         // check for mappings deletion\n         mappings = new HashSet<SchemaMapping>();\n         for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n-            if (\"username\".equals(mapping.getSourceAttrName())\n-                    && mapping.getSourceMappingType()\n-                    == SourceMappingType.UserSchema) {\n+            if (\"username\".equals(mapping.getIntAttrName())\n+                    && mapping.getIntMappingType()\n+                    == IntMappingType.UserSchema) {\n \n                 mappings.add(mapping);\n             }\n@@ -109,9 +109,9 @@ public void test2() {\n         // check for associated mappings\n         Set<SchemaMapping> mappings = new HashSet<SchemaMapping>();\n         for (SchemaMapping mapping : resourceDAO.findAllMappings()) {\n-            if (schema.getName().equals(mapping.getSourceAttrName())\n-                    && mapping.getSourceMappingType()\n-                    == SourceMappingType.UserSchema) {\n+            if (schema.getName().equals(mapping.getIntAttrName())\n+                    && mapping.getIntMappingType()\n+                    == IntMappingType.UserSchema) {\n \n                 mappings.add(mapping);\n             }"},{"sha":"188594780848a6e7582e009ec10a6ea868f50d7c","filename":"core/src/test/java/org/syncope/core/persistence/relationships/TaskTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FTaskTest.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -25,7 +25,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.AbstractTest;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.beans.PropagationTask;\n import org.syncope.core.persistence.beans.TaskExec;\n import org.syncope.core.persistence.beans.SyncTask;\n@@ -60,7 +60,7 @@ public final void read() {\n \n     @Test\n     public final void save() {\n-        TargetResource resource = resourceDAO.find(\"ws-target-resource-1\");\n+        ExternalResource resource = resourceDAO.find(\"ws-target-resource-1\");\n         assertNotNull(resource);\n \n         PropagationTask task = new PropagationTask();"},{"sha":"e3b63a48a25a4989e6cdb6949c95c9858c32c52a","filename":"core/src/test/java/org/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":42,"deletions":42,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -31,7 +31,7 @@\n import org.syncope.client.validation.SyncopeClientException;\n import org.syncope.types.ConnConfPropSchema;\n import org.syncope.types.ConnConfProperty;\n-import org.syncope.types.SourceMappingType;\n+import org.syncope.types.IntMappingType;\n import org.syncope.types.SyncopeClientExceptionType;\n \n public class ResourceTestITCase extends AbstractTest {\n@@ -58,22 +58,22 @@ public void create() {\n         resourceTO.setConnectorId(102L);\n \n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setDestAttrName(\"uid\");\n-        schemaMappingTO.setSourceAttrName(\"userId\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n+        schemaMappingTO.setExtAttrName(\"uid\");\n+        schemaMappingTO.setIntAttrName(\"userId\");\n+        schemaMappingTO.setIntMappingType(IntMappingType.UserSchema);\n         resourceTO.addMapping(schemaMappingTO);\n \n         schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setDestAttrName(\"username\");\n-        schemaMappingTO.setSourceAttrName(\"username\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.SyncopeUserId);\n+        schemaMappingTO.setExtAttrName(\"username\");\n+        schemaMappingTO.setIntAttrName(\"username\");\n+        schemaMappingTO.setIntMappingType(IntMappingType.SyncopeUserId);\n         schemaMappingTO.setAccountid(true);\n         resourceTO.addMapping(schemaMappingTO);\n \n         schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setDestAttrName(\"fullname\");\n-        schemaMappingTO.setSourceAttrName(\"cn\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n+        schemaMappingTO.setExtAttrName(\"fullname\");\n+        schemaMappingTO.setIntAttrName(\"cn\");\n+        schemaMappingTO.setIntMappingType(IntMappingType.UserSchema);\n         schemaMappingTO.setAccountid(false);\n         resourceTO.addMapping(schemaMappingTO);\n \n@@ -99,22 +99,22 @@ public void createOverridingProps() {\n         ResourceTO resourceTO = new ResourceTO();\n \n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setDestAttrName(\"uid\");\n-        schemaMappingTO.setSourceAttrName(\"userId\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n+        schemaMappingTO.setExtAttrName(\"uid\");\n+        schemaMappingTO.setIntAttrName(\"userId\");\n+        schemaMappingTO.setIntMappingType(IntMappingType.UserSchema);\n         resourceTO.addMapping(schemaMappingTO);\n \n         schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setDestAttrName(\"username\");\n-        schemaMappingTO.setSourceAttrName(\"username\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.SyncopeUserId);\n+        schemaMappingTO.setExtAttrName(\"username\");\n+        schemaMappingTO.setIntAttrName(\"username\");\n+        schemaMappingTO.setIntMappingType(IntMappingType.SyncopeUserId);\n         schemaMappingTO.setAccountid(true);\n         resourceTO.addMapping(schemaMappingTO);\n \n         schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setDestAttrName(\"fullname\");\n-        schemaMappingTO.setSourceAttrName(\"cn\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n+        schemaMappingTO.setExtAttrName(\"fullname\");\n+        schemaMappingTO.setIntAttrName(\"cn\");\n+        schemaMappingTO.setIntMappingType(IntMappingType.UserSchema);\n         schemaMappingTO.setAccountid(false);\n         resourceTO.addMapping(schemaMappingTO);\n \n@@ -158,7 +158,7 @@ public void createWithSingleMapping() {\n         resourceTO.setConnectorId(102L);\n \n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.SyncopeUserId);\n+        schemaMappingTO.setIntMappingType(IntMappingType.SyncopeUserId);\n         schemaMappingTO.setAccountid(true);\n         resourceTO.addMapping(schemaMappingTO);\n \n@@ -178,14 +178,14 @@ public void createWithWrongMapping() {\n         resourceTO.setConnectorId(102L);\n \n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.SyncopeUserId);\n+        schemaMappingTO.setIntMappingType(IntMappingType.SyncopeUserId);\n         schemaMappingTO.setAccountid(true);\n         resourceTO.addMapping(schemaMappingTO);\n \n         schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n-        schemaMappingTO.setDestAttrName(\"email\");\n-        // missing sourceAttrName ...\n+        schemaMappingTO.setIntMappingType(IntMappingType.UserSchema);\n+        schemaMappingTO.setExtAttrName(\"email\");\n+        // missing intAttrName ...\n         resourceTO.addMapping(schemaMappingTO);\n \n \n@@ -205,30 +205,30 @@ public void createWithWrongMapping() {\n             assertNotNull(requiredValueMissing);\n             assertNotNull(requiredValueMissing.getElements());\n             assertEquals(1, requiredValueMissing.getElements().size());\n-            assertEquals(\"sourceAttrName\",\n+            assertEquals(\"intAttrName\",\n                     requiredValueMissing.getElements().iterator().next());\n         }\n         assertNotNull(t);\n     }\n \n     @Test\n     @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n-    public final void createWithoutDestAttr() {\n+    public final void createWithoutExtAttr() {\n         String resourceName = \"ws-target-resource-create-wrong\";\n         ResourceTO resourceTO = new ResourceTO();\n \n         resourceTO.setName(resourceName);\n         resourceTO.setConnectorId(102L);\n \n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.SyncopeUserId);\n+        schemaMappingTO.setIntMappingType(IntMappingType.SyncopeUserId);\n         schemaMappingTO.setAccountid(true);\n         resourceTO.addMapping(schemaMappingTO);\n \n         schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n-        schemaMappingTO.setSourceAttrName(\"usernane\");\n-        // missing destAttrName ...\n+        schemaMappingTO.setIntMappingType(IntMappingType.UserSchema);\n+        schemaMappingTO.setIntAttrName(\"usernane\");\n+        // missing extAttrName ...\n         resourceTO.addMapping(schemaMappingTO);\n \n         restTemplate.postForObject(\n@@ -246,9 +246,9 @@ public void createWithPasswordPolicy() {\n         resourceTO.setPasswordPolicy(4L);\n \n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setDestAttrName(\"uid\");\n-        schemaMappingTO.setSourceAttrName(\"userId\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n+        schemaMappingTO.setExtAttrName(\"uid\");\n+        schemaMappingTO.setIntAttrName(\"userId\");\n+        schemaMappingTO.setIntMappingType(IntMappingType.UserSchema);\n         schemaMappingTO.setAccountid(true);\n         resourceTO.addMapping(schemaMappingTO);\n \n@@ -298,23 +298,23 @@ public void update() {\n         // Update with an existing and already assigned mapping\n         SchemaMappingTO schemaMappingTO = new SchemaMappingTO();\n         schemaMappingTO.setId(112L);\n-        schemaMappingTO.setDestAttrName(\"test3\");\n-        schemaMappingTO.setSourceAttrName(\"username\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n+        schemaMappingTO.setExtAttrName(\"test3\");\n+        schemaMappingTO.setIntAttrName(\"username\");\n+        schemaMappingTO.setIntMappingType(IntMappingType.UserSchema);\n         schemaMappingTOs.add(schemaMappingTO);\n \n         // Update defining new mappings\n         for (int i = 4; i < 6; i++) {\n             schemaMappingTO = new SchemaMappingTO();\n-            schemaMappingTO.setDestAttrName(\"test\" + i);\n-            schemaMappingTO.setSourceAttrName(\"username\");\n-            schemaMappingTO.setSourceMappingType(SourceMappingType.UserSchema);\n+            schemaMappingTO.setExtAttrName(\"test\" + i);\n+            schemaMappingTO.setIntAttrName(\"username\");\n+            schemaMappingTO.setIntMappingType(IntMappingType.UserSchema);\n             schemaMappingTOs.add(schemaMappingTO);\n         }\n         schemaMappingTO = new SchemaMappingTO();\n-        schemaMappingTO.setDestAttrName(\"username\");\n-        schemaMappingTO.setSourceAttrName(\"username\");\n-        schemaMappingTO.setSourceMappingType(SourceMappingType.SyncopeUserId);\n+        schemaMappingTO.setExtAttrName(\"username\");\n+        schemaMappingTO.setIntAttrName(\"username\");\n+        schemaMappingTO.setIntMappingType(IntMappingType.SyncopeUserId);\n         schemaMappingTO.setAccountid(true);\n         schemaMappingTOs.add(schemaMappingTO);\n "},{"sha":"65eafd2d1ee607f3d8b08fd0b4ab4bc8c538bab6","filename":"core/src/test/java/org/syncope/core/rest/data/ResourceDataBinderTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinderTest.java?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -22,7 +22,7 @@\n import org.junit.Before;\n import org.junit.Test;\n import org.syncope.client.to.ResourceTO;\n-import org.syncope.core.persistence.beans.TargetResource;\n+import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.types.ConnConfProperty;\n \n public class ResourceDataBinderTest {\n@@ -31,21 +31,21 @@ public class ResourceDataBinderTest {\n \n     private ResourceTO resourceTO;\n \n-    private TargetResource resource;\n+    private ExternalResource resource;\n \n     @Before\n     public void before() {\n         rdb = new ResourceDataBinder();\n         resourceTO = new ResourceTO();\n-        resource = new TargetResource();\n+        resource = new ExternalResource();\n     }\n \n     @Test\n     public void getResource() {\n         Set<ConnConfProperty> props = new HashSet<ConnConfProperty>();\n         resourceTO.setConnectorConfigurationProperties(props);\n \n-        TargetResource res = rdb.getResource(resourceTO);\n+        ExternalResource res = rdb.getResource(resourceTO);\n \n         assertEquals(\"configuration properties should be filled\",\n                 props, res.getConfiguration());"},{"sha":"25e50484b806fdd3c37aad575dce6cca174e9e31","filename":"core/src/test/resources/content.xml","status":"modified","additions":66,"deletions":66,"changes":132,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6c468e62c80d836b4f61018bd32199f401fe79a2/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=6c468e62c80d836b4f61018bd32199f401fe79a2","patch":"@@ -227,150 +227,150 @@\n                   xmlConfiguration=\"%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E+%0A%3Cjava+version%3D%221.6.0_26%22+class%3D%22java.beans.XMLDecoder%22%3E+%0A+%3Cobject+class%3D%22java.util.HashSet%22%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EfieldDelimiter%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EfieldDelimiter%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EfieldDelimiter%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Echar%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E%2C%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3ESource+path%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EAbsolute+path+of+a+directory+where+are+located+CSV+files+to+be+processed%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EsourcePath%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E%2F${urlencoded.java.io.tmpdir}%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EIgnore+header%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ESpecify+it+first+line+file+must+be+ignored%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EignoreHeader%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.Boolean%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Efalse%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EFile+encoding%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EBasic+encoding+of+the+file%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Eencoding%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3Efields%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EColumn+names+separated+by+comma%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Efields%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3E%5BLjava.lang.String%3B%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Eid+name+surname+email+password+deleted%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EDelete+column+name%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EName+of+the+column+used+to+specify+users+to+be+deleted%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EdeleteColumnName%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Edeleted%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EKey+separator%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ECharacter+used+to+separate+keys+in+a+multi-key+scenario%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3Ekeyseparator%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E%2C%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EKey+column+name%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EName+of+the+column+used+to+identify+user+uniquely%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EkeyColumnNames%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3E%5BLjava.lang.String%3B%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Ename+surname%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EText+qualifier%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EDelimiter+to+determine+begin+and+end+of+text+in+value%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EtextQualifier%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Echar%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EPassword+column+name%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3EName+of+the+column+used+to+specify+user+password%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EpasswordColumnName%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Epassword%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EFile+mask%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ERegular+expression+describing+files+to+be+processed%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EfileMask%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.String%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3E.*%5C.csv%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A++%3Cvoid+method%3D%22add%22%3E+%0A+++%3Cobject+class%3D%22org.syncope.types.ConnConfProperty%22%3E+%0A++++%3Cvoid+property%3D%22schema%22%3E+%0A+++++%3Cobject+class%3D%22org.syncope.types.ConnConfPropSchema%22%3E+%0A++++++%3Cvoid+property%3D%22displayName%22%3E+%0A+++++++%3Cstring%3EValue+quotation+required%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22helpMessage%22%3E+%0A+++++++%3Cstring%3ESpecify+if+value+quotation+is+required%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22name%22%3E+%0A+++++++%3Cstring%3EquotationRequired%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22required%22%3E+%0A+++++++%3Cboolean%3Etrue%3C%2Fboolean%3E+%0A++++++%3C%2Fvoid%3E+%0A++++++%3Cvoid+property%3D%22type%22%3E+%0A+++++++%3Cstring%3Ejava.lang.Boolean%3C%2Fstring%3E+%0A++++++%3C%2Fvoid%3E+%0A+++++%3C%2Fobject%3E+%0A++++%3C%2Fvoid%3E+%0A++++%3Cvoid+property%3D%22value%22%3E+%0A+++++%3Cstring%3Efalse%3C%2Fstring%3E+%0A++++%3C%2Fvoid%3E+%0A+++%3C%2Fobject%3E+%0A++%3C%2Fvoid%3E+%0A+%3C%2Fobject%3E+%0A%3C%2Fjava%3E+%0A\"/>\n     <ConnInstance_capabilities ConnInstance_id=\"104\" capabilities=\"SYNC\"/>\n     \n-    <TargetResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n+    <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <TargetResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n+    <ExternalResource name=\"ws-target-resource-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n                     createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\"/>\n-    <TargetResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n+    <ExternalResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <TargetResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n+    <ExternalResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <TargetResource name=\"ws-target-resource-delete\" connector_id=\"102\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n+    <ExternalResource name=\"ws-target-resource-delete\" connector_id=\"102\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <TargetResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n+    <ExternalResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <TargetResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n+    <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"ASYNC\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" passwordPolicy_id=\"4\"/>\n-    <TargetResource name=\"ws-target-resource-testdb\" connector_id=\"101\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"SYNC\"\n+    <ExternalResource name=\"ws-target-resource-testdb\" connector_id=\"101\" forceMandatoryConstraint=\"1\" optionalPropagationMode=\"SYNC\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n-    <TargetResource name=\"resource-csv\" connector_id=\"104\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n+    <ExternalResource name=\"resource-csv\" connector_id=\"104\" forceMandatoryConstraint=\"0\" optionalPropagationMode=\"ASYNC\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"/>\n                     \n-    <SyncopeUser_TargetResource users_id=\"3\" targetResources_name=\"ws-target-resource-delete\" />\n-    <SyncopeRole_TargetResource roles_id=\"3\" targetResources_name=\"ws-target-resource-list-mappings-1\" />\n-    <SyncopeUser_TargetResource users_id=\"3\" targetResources_name=\"ws-target-resource-2\" />\n-    <SyncopeRole_TargetResource roles_id=\"8\" targetResources_name=\"ws-target-resource-2\" />\n-    <SyncopeRole_TargetResource roles_id=\"3\" targetResources_name=\"ws-target-resource-list-mappings-2\" />\n-    <SyncopeUser_TargetResource users_id=\"3\" targetResources_name=\"ws-target-resource-1\" />\n-\n-    <SchemaMapping id=\"99\" destAttrName=\"userid\"\n+    <SyncopeUser_ExternalResource users_id=\"3\" externalResources_name=\"ws-target-resource-delete\" />\n+    <SyncopeRole_ExternalResource roles_id=\"3\" externalResources_name=\"ws-target-resource-list-mappings-1\" />\n+    <SyncopeUser_ExternalResource users_id=\"3\" externalResources_name=\"ws-target-resource-2\" />\n+    <SyncopeRole_ExternalResource roles_id=\"8\" externalResources_name=\"ws-target-resource-2\" />\n+    <SyncopeRole_ExternalResource roles_id=\"3\" externalResources_name=\"ws-target-resource-list-mappings-2\" />\n+    <SyncopeUser_ExternalResource users_id=\"3\" externalResources_name=\"ws-target-resource-1\" />\n+\n+    <SchemaMapping id=\"99\" extAttrName=\"userid\"\n                    resource_name=\"ws-target-resource-1\"\n-                   sourceMappingType=\"SyncopeUserId\" mandatoryCondition=\"true\"\n+                   intMappingType=\"SyncopeUserId\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n \n-    <SchemaMapping id=\"100\" destAttrName=\"email\"\n+    <SchemaMapping id=\"100\" extAttrName=\"email\"\n                    resource_name=\"ws-target-resource-1\"\n-                   sourceAttrName=\"email\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"email\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"101\" destAttrName=\"userId\"\n+    <SchemaMapping id=\"101\" extAttrName=\"userId\"\n                    resource_name=\"ws-target-resource-2\"\n-                   sourceAttrName=\"username\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"username\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n \n-    <SchemaMapping id=\"102\" destAttrName=\"email\"\n+    <SchemaMapping id=\"102\" extAttrName=\"email\"\n                    resource_name=\"ws-target-resource-list-mappings-1\"\n-                   sourceAttrName=\"email\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"email\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n \n-    <SchemaMapping id=\"103\" destAttrName=\"surname\"\n+    <SchemaMapping id=\"103\" extAttrName=\"surname\"\n                    resource_name=\"ws-target-resource-list-mappings-1\"\n-                   sourceAttrName=\"surname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"surname\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"104\" destAttrName=\"userid\"\n+    <SchemaMapping id=\"104\" extAttrName=\"userid\"\n                    resource_name=\"ws-target-resource-list-mappings-2\"\n-                   sourceAttrName=\"userId\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"userId\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n \n-    <SchemaMapping id=\"105\" destAttrName=\"surname\"\n+    <SchemaMapping id=\"105\" extAttrName=\"surname\"\n                    resource_name=\"ws-target-resource-1\"\n-                   sourceAttrName=\"surname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"surname\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"106\" destAttrName=\"password\"\n+    <SchemaMapping id=\"106\" extAttrName=\"password\"\n                    resource_name=\"ws-target-resource-1\"\n-                   sourceMappingType=\"Password\" mandatoryCondition=\"true\"\n+                   intMappingType=\"Password\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"1\"/>\n \n-    <SchemaMapping id=\"107\" destAttrName=\"password\"\n+    <SchemaMapping id=\"107\" extAttrName=\"password\"\n                    resource_name=\"ws-target-resource-2\"\n-                   sourceMappingType=\"Password\" mandatoryCondition=\"true\"\n+                   intMappingType=\"Password\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"1\"/>\n \n-    <SchemaMapping id=\"108\" destAttrName=\"type\"\n+    <SchemaMapping id=\"108\" extAttrName=\"type\"\n                    resource_name=\"ws-target-resource-2\"\n-                   sourceAttrName=\"type\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"type\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"109\" destAttrName=\"surname\"\n+    <SchemaMapping id=\"109\" extAttrName=\"surname\"\n                    resource_name=\"ws-target-resource-2\"\n-                   sourceAttrName=\"surname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"type == 'F'\"\n+                   intAttrName=\"surname\" intMappingType=\"UserSchema\" mandatoryCondition=\"type == 'F'\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"110\" destAttrName=\"email\"\n+    <SchemaMapping id=\"110\" extAttrName=\"email\"\n                    resource_name=\"ws-target-resource-update\"\n-                   sourceAttrName=\"email\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n+                   intAttrName=\"email\" intMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"111\" destAttrName=\"userId\"\n+    <SchemaMapping id=\"111\" extAttrName=\"userId\"\n                    resource_name=\"ws-target-resource-update\"\n-                   sourceAttrName=\"userId\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n+                   intAttrName=\"userId\" intMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n                    accountid=\"0\" password=\"0\"/>\n     \n-    <SchemaMapping id=\"112\" destAttrName=\"test3\"\n+    <SchemaMapping id=\"112\" extAttrName=\"test3\"\n                    resource_name=\"ws-target-resource-update\"\n-                   sourceAttrName=\"username\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n+                   intAttrName=\"username\" intMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"113\" destAttrName=\"name\"\n+    <SchemaMapping id=\"113\" extAttrName=\"name\"\n                    resource_name=\"ws-target-resource-2\"\n-                   sourceAttrName=\"virtualdata\" sourceMappingType=\"UserVirtualSchema\" mandatoryCondition=\"type == 'F'\"\n+                   intAttrName=\"virtualdata\" intMappingType=\"UserVirtualSchema\" mandatoryCondition=\"type == 'F'\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"114\" destAttrName=\"fullname\"\n+    <SchemaMapping id=\"114\" extAttrName=\"fullname\"\n                    resource_name=\"ws-target-resource-2\"\n-                   sourceAttrName=\"cn\" sourceMappingType=\"UserDerivedSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"cn\" intMappingType=\"UserDerivedSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n \n-    <SchemaMapping id=\"115\" destAttrName=\"name\"\n+    <SchemaMapping id=\"115\" extAttrName=\"name\"\n                    resource_name=\"ws-target-resource-nopropagation\"\n-                   sourceAttrName=\"username\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"username\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n                    \n-    <SchemaMapping id=\"116\" destAttrName=\"id\"\n+    <SchemaMapping id=\"116\" extAttrName=\"id\"\n                    resource_name=\"ws-target-resource-testdb\"\n-                   sourceMappingType=\"SyncopeUserId\" mandatoryCondition=\"true\"\n+                   intMappingType=\"SyncopeUserId\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n                    \n-    <SchemaMapping id=\"117\" destAttrName=\"password\"\n+    <SchemaMapping id=\"117\" extAttrName=\"password\"\n                    resource_name=\"ws-target-resource-testdb\"\n-                   sourceMappingType=\"Password\" mandatoryCondition=\"true\"\n+                   intMappingType=\"Password\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"1\"/>\n \n-    <SchemaMapping id=\"200\" destAttrName=\"id\"\n+    <SchemaMapping id=\"200\" extAttrName=\"id\"\n                    resource_name=\"resource-csv\"\n-                   sourceAttrName=\"username\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"username\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n-    <SchemaMapping id=\"201\" destAttrName=\"password\"\n+    <SchemaMapping id=\"201\" extAttrName=\"password\"\n                    resource_name=\"resource-csv\"\n-                   sourceMappingType=\"Password\" mandatoryCondition=\"true\"\n+                   intMappingType=\"Password\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"1\"/>\n-    <SchemaMapping id=\"202\" destAttrName=\"name\"\n+    <SchemaMapping id=\"202\" extAttrName=\"name\"\n                    resource_name=\"resource-csv\"\n-                   sourceAttrName=\"firstname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n+                   intAttrName=\"firstname\" intMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n                    accountid=\"0\" password=\"0\"/>\n-    <SchemaMapping id=\"203\" destAttrName=\"surname\"\n+    <SchemaMapping id=\"203\" extAttrName=\"surname\"\n                    resource_name=\"resource-csv\"\n-                   sourceAttrName=\"surname\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n+                   intAttrName=\"surname\" intMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n                    accountid=\"0\" password=\"0\"/>\n-    <SchemaMapping id=\"204\" destAttrName=\"email\"\n+    <SchemaMapping id=\"204\" extAttrName=\"email\"\n                    resource_name=\"resource-csv\"\n-                   sourceAttrName=\"userId\" sourceMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"userId\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                    accountid=\"0\" password=\"0\"/>\n-    <SchemaMapping id=\"205\" destAttrName=\"IGNORE\"\n+    <SchemaMapping id=\"205\" extAttrName=\"IGNORE\"\n                    resource_name=\"resource-csv\"\n-                   sourceAttrName=\"csvuserid\" sourceMappingType=\"UserDerivedSchema\" mandatoryCondition=\"true\"\n+                   intAttrName=\"csvuserid\" intMappingType=\"UserDerivedSchema\" mandatoryCondition=\"true\"\n                    accountid=\"1\" password=\"0\"/>\n                    \n     <Task DTYPE=\"PropagationTask\" id=\"1\" propagationMode=\"ASYNC\" resourceOperationType=\"UPDATE\""}]}