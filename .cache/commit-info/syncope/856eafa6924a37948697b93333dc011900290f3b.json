{"sha":"856eafa6924a37948697b93333dc011900290f3b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg1NmVhZmE2OTI0YTM3OTQ4Njk3YjkzMzMzZGMwMTE5MDAyOTBmM2I=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-06-16T09:38:40Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-06-16T09:38:40Z"},"message":"[SYNCOPE-501] merge from branch 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1602829 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1d9e9ed0b53b8fa422929fc24503b9d7b22f4b4a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/1d9e9ed0b53b8fa422929fc24503b9d7b22f4b4a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/856eafa6924a37948697b93333dc011900290f3b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/856eafa6924a37948697b93333dc011900290f3b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/856eafa6924a37948697b93333dc011900290f3b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/856eafa6924a37948697b93333dc011900290f3b/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"41469ede190937f97a8017ab9e57f3dfa00e1699","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/41469ede190937f97a8017ab9e57f3dfa00e1699","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/41469ede190937f97a8017ab9e57f3dfa00e1699"},{"sha":"92ba1e4acd2fbddf39f0edbf532a5f429c180b97","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/92ba1e4acd2fbddf39f0edbf532a5f429c180b97","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/92ba1e4acd2fbddf39f0edbf532a5f429c180b97"}],"stats":{"total":73,"additions":65,"deletions":8},"files":[{"sha":"c56efab7a8cda904ed7e5ab5ed7e379db8eee6db","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856eafa6924a37948697b93333dc011900290f3b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856eafa6924a37948697b93333dc011900290f3b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=856eafa6924a37948697b93333dc011900290f3b","patch":"@@ -22,6 +22,7 @@\n import java.security.AccessControlException;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n@@ -46,6 +47,7 @@\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n+import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationReporter;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n@@ -257,11 +259,18 @@ public UserTO update(final UserMod userMod) {\n         List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(updated);\n         if (tasks.isEmpty()) {\n             // SYNCOPE-459: take care of user virtual attributes ...\n-            binder.forceVirtualAttributes(\n+            final PropagationByResource propByResVirAttr = binder.forceVirtualAttributes(\n                     updated.getResult().getKey().getId(),\n                     actual.getVirAttrsToRemove(),\n                     actual.getVirAttrsToUpdate());\n-        } else {\n+            // SYNCOPE-501: update only virtual attributes (if any of them changed), password propagation is \n+            // not required\n+            tasks.addAll(propByResVirAttr.isEmpty() ? Collections.<PropagationTask>emptyList()\n+                    : propagationManager.\n+                    getUserUpdateTaskIds(updated, false, null));\n+        }\n+\n+        if (!tasks.isEmpty()) {\n             try {\n                 taskExecutor.execute(tasks, propagationReporter);\n             } catch (PropagationException e) {"},{"sha":"c0d60c0cf32c5201d8ecc58b7688b468d49e493a","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856eafa6924a37948697b93333dc011900290f3b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856eafa6924a37948697b93333dc011900290f3b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=856eafa6924a37948697b93333dc011900290f3b","patch":"@@ -106,7 +106,7 @@ public SyncopeUser getUserFromId(final Long userId) {\n \n         return user;\n     }\n-    \n+\n     @Transactional(readOnly = true)\n     public Set<String> getResourceNamesForUserId(final Long userId) {\n         return getUserFromId(userId).getResourceNames();\n@@ -416,7 +416,7 @@ public UserTO getUserTO(final SyncopeUser user) {\n \n             // SYNCOPE-458 retrieve also membership virtual attributes\n             connObjectUtil.retrieveVirAttrValues(membership, AttributableUtil.getInstance(AttributableType.MEMBERSHIP));\n-            \n+\n             fillTO(membershipTO,\n                     membership.getAttrs(), membership.getDerAttrs(), membership.getVirAttrs(),\n                     membership.getResources());\n@@ -443,14 +443,14 @@ public UserTO getUserTO(final Long userId) {\n      * To be used in case of no propagation task defined.\n      *\n      * @param id attributable id\n-     * @param vAttrsToBeRemoved virtual attribute to be removed.\n-     * @param vAttrsToBeUpdated virtyal attribute to be updated.\n+     * @param vAttrsToBeRemoved virtual attributes to be removed.\n+     * @param vAttrsToBeUpdated virtual attributes to be updated.\n      */\n-    public void forceVirtualAttributes(\n+    public PropagationByResource forceVirtualAttributes(\n             final Long id, final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated) {\n         final SyncopeUser syncopeUser = getUserFromId(id);\n \n-        fillVirtual(\n+        return fillVirtual(\n                 syncopeUser,\n                 vAttrsToBeRemoved,\n                 vAttrsToBeUpdated,"},{"sha":"a881a0174b5f7e62c6e9b59893b49c6400504d10","filename":"core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java","status":"modified","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/856eafa6924a37948697b93333dc011900290f3b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/856eafa6924a37948697b93333dc011900290f3b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java?ref=856eafa6924a37948697b93333dc011900290f3b","patch":"@@ -24,6 +24,7 @@\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n \n+import java.util.Collections;\n import org.apache.commons.lang3.SerializationUtils;\n import java.util.Map;\n import org.apache.syncope.common.mod.AttributeMod;\n@@ -721,4 +722,51 @@ public void issueSYNCOPE458() {\n         resourceService.update(RESOURCE_NAME_DBVIRATTR, resourceDBVirAttr);\n         // -------------------------------------------\n     }\n+\n+    @Test\n+    public void issueSYNCOPE501() {\n+        // PHASE 1: update only user virtual attributes\n+\n+        // 1. create user and propagate him on resource-db-virattr\n+        UserTO userTO = getUniqueSampleTO(\"syncope501@apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getVirAttrs().clear();\n+\n+        userTO.getResources().add(RESOURCE_NAME_DBVIRATTR);\n+\n+        // virtualdata is mapped with username\n+        final AttributeTO virtualData = attributeTO(\"virtualdata\", \"syncope501@apache.org\");\n+        userTO.getVirAttrs().add(virtualData);\n+\n+        userTO = createUser(userTO);\n+\n+        assertNotNull(userTO.getVirAttrMap().get(\"virtualdata\"));\n+        assertEquals(\"syncope501@apache.org\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n+\n+        // 2. update virtual attribute\n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+\n+        final StatusMod statusMod = new StatusMod();\n+        statusMod.getResourceNames().addAll(Collections.<String>emptySet());\n+        statusMod.setOnSyncope(Boolean.FALSE);\n+\n+        userMod.setPwdPropRequest(statusMod);\n+        // change virtual attribute value\n+        final AttributeMod virtualDataMod = new AttributeMod();\n+        virtualDataMod.setSchema(\"virtualdata\");\n+        virtualDataMod.getValuesToBeAdded().add(\"syncope501_updated@apache.org\");\n+        virtualDataMod.getValuesToBeRemoved().add(\"syncope501@apache.org\");\n+        userMod.getVirAttrsToUpdate().add(virtualDataMod);\n+        userMod.getVirAttrsToRemove().add(\"virtualdata\");\n+\n+        userTO = updateUser(userMod);\n+        assertNotNull(userTO);\n+\n+        // 3. check that user virtual attribute has really been updated \n+        assertFalse(userTO.getVirAttrMap().get(\"virtualdata\").getValues().isEmpty());\n+        assertEquals(\"syncope501_updated@apache.org\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().\n+                get(0));\n+    }\n }"}]}