{"sha":"6a432b9a48a07c3a698c3c7c63b7218d8a848606","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZhNDMyYjlhNDhhMDdjM2E2OThjM2M3YzYzYjcyMThkOGE4NDg2MDY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-29T15:49:07Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-29T15:49:07Z"},"message":"[SYNCOPE-814] Fix","tree":{"sha":"aa3e214ed0ebd2a9ac422055385017573e7a68b0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/aa3e214ed0ebd2a9ac422055385017573e7a68b0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6a432b9a48a07c3a698c3c7c63b7218d8a848606","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a432b9a48a07c3a698c3c7c63b7218d8a848606","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6a432b9a48a07c3a698c3c7c63b7218d8a848606","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6a432b9a48a07c3a698c3c7c63b7218d8a848606/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5c239515526a3b5adeb47c137dfacb52a773d5e4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5c239515526a3b5adeb47c137dfacb52a773d5e4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5c239515526a3b5adeb47c137dfacb52a773d5e4"}],"stats":{"total":42,"additions":26,"deletions":16},"files":[{"sha":"bb7e03f3a8f920cf31e2c0d4e83b2fd0a4e62c9d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a432b9a48a07c3a698c3c7c63b7218d8a848606/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a432b9a48a07c3a698c3c7c63b7218d8a848606/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=6a432b9a48a07c3a698c3c7c63b7218d8a848606","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.collections4.CollectionUtils;\n@@ -58,12 +59,15 @@ public <T extends AnyTO> DerAttrs(final T entityTO, final String... anyTypeClass\n \n             @Override\n             protected List<AttrTO> load() {\n-                final List<String> classes = CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n+                List<String> anyTypeClasses = CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n                         EntityTOUtils.<String, AnyTypeClassTO>keyTransformer(),\n                         new ArrayList<>(Arrays.asList(anyTypeClass)));\n \n-                final List<DerSchemaTO> derSchemas =\n-                        schemaRestClient.getSchemas(SchemaType.DERIVED, classes.toArray(new String[] {}));\n+                List<DerSchemaTO> derSchemas = Collections.emptyList();\n+                if (!anyTypeClasses.isEmpty()) {\n+                    derSchemas =\n+                            schemaRestClient.getSchemas(SchemaType.DERIVED, anyTypeClasses.toArray(new String[] {}));\n+                }\n \n                 final Map<String, AttrTO> currents = entityTO.getDerAttrMap();\n                 entityTO.getDerAttrs().clear();\n@@ -118,7 +122,7 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                 if (values == null || values.isEmpty()) {\n                     model = new ResourceModel(\"derived.emptyvalue.message\", StringUtils.EMPTY);\n                 } else {\n-                    model = new Model<String>(values.get(0));\n+                    model = new Model<>(values.get(0));\n                 }\n \n                 final AjaxTextFieldPanel panel = new AjaxTextFieldPanel("},{"sha":"8ece7c61ad3e25bcd19005066266358927175231","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a432b9a48a07c3a698c3c7c63b7218d8a848606/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a432b9a48a07c3a698c3c7c63b7218d8a848606/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=6a432b9a48a07c3a698c3c7c63b7218d8a848606","patch":"@@ -81,7 +81,7 @@ public <T extends AnyTO> PlainAttrs(\n \n             @Override\n             protected List<AttrTO> load() {\n-                setSchemas(CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n+                setPlainSchemas(CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n                         EntityTOUtils.<String, AnyTypeClassTO>keyTransformer(),\n                         new ArrayList<>(Arrays.asList(anyTypeClass))));\n                 setAttrs();\n@@ -124,23 +124,25 @@ protected void populateItem(final ListItem<AttrTO> item) {\n         });\n     }\n \n-    private void setSchemas(final List<String> anyTypeClasses) {\n-\n-        AttrTO attrLayout = null;\n-        final List<PlainSchemaTO> schemaTOs =\n-                schemaRestClient.getSchemas(SchemaType.PLAIN, anyTypeClasses.toArray(new String[] {}));\n+    private void setPlainSchemas(final List<String> anyTypeClasses) {\n+        List<PlainSchemaTO> plainSchemas = Collections.emptyList();\n+        if (!anyTypeClasses.isEmpty()) {\n+            plainSchemas = schemaRestClient.getSchemas(SchemaType.PLAIN, anyTypeClasses.toArray(new String[] {}));\n+        }\n \n         schemas.clear();\n \n+        // SYNCOPE-790\n+        AttrTO attrLayout = null;\n         if (attrLayout != null && mode != Mode.TEMPLATE) {\n             // 1. remove attributes not selected for display\n-            schemaRestClient.filter(schemaTOs, attrLayout.getValues(), true);\n+            schemaRestClient.filter(plainSchemas, attrLayout.getValues(), true);\n             // 2. sort remainig attributes according to configuration, e.g. attrLayout\n             final Map<String, Integer> attrLayoutMap = new HashMap<>(attrLayout.getValues().size());\n             for (int i = 0; i < attrLayout.getValues().size(); i++) {\n                 attrLayoutMap.put(attrLayout.getValues().get(i), i);\n             }\n-            Collections.sort(schemaTOs, new Comparator<PlainSchemaTO>() {\n+            Collections.sort(plainSchemas, new Comparator<PlainSchemaTO>() {\n \n                 @Override\n                 public int compare(final PlainSchemaTO schema1, final PlainSchemaTO schema2) {\n@@ -156,7 +158,7 @@ public int compare(final PlainSchemaTO schema1, final PlainSchemaTO schema2) {\n                 }\n             });\n         }\n-        for (PlainSchemaTO schemaTO : schemaTOs) {\n+        for (PlainSchemaTO schemaTO : plainSchemas) {\n             schemas.put(schemaTO.getKey(), schemaTO);\n         }\n     }"},{"sha":"3589d663f6077b58a6732f44edb059878908a91b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6a432b9a48a07c3a698c3c7c63b7218d8a848606/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6a432b9a48a07c3a698c3c7c63b7218d8a848606/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=6a432b9a48a07c3a698c3c7c63b7218d8a848606","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.collections4.CollectionUtils;\n@@ -56,12 +57,15 @@ public <T extends AnyTO> VirAttrs(final T entityTO, final String... anyTypeClass\n \n             @Override\n             protected List<AttrTO> load() {\n-                final List<String> classes = CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n+                List<String> anyTypeClasses = CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n                         EntityTOUtils.<String, AnyTypeClassTO>keyTransformer(),\n                         new ArrayList<>(Arrays.asList(anyTypeClass)));\n \n-                final List<VirSchemaTO> virSchemas =\n-                        schemaRestClient.getSchemas(SchemaType.VIRTUAL, classes.toArray(new String[] {}));\n+                List<VirSchemaTO> virSchemas = Collections.emptyList();\n+                if (!anyTypeClasses.isEmpty()) {\n+                    virSchemas =\n+                            schemaRestClient.getSchemas(SchemaType.VIRTUAL, anyTypeClasses.toArray(new String[] {}));\n+                }\n \n                 final Map<String, AttrTO> currents = entityTO.getVirAttrMap();\n                 entityTO.getVirAttrs().clear();"}]}