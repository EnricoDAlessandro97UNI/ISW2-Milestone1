{"sha":"1a3a05e2341ab5b1b61f293882d4038c7050259c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFhM2EwNWUyMzQxYWI1YjFiNjFmMjkzODgyZDQwMzhjNzA1MDI1OWM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-04-20T14:24:48Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-04-20T14:24:48Z"},"message":"[SYNCOPE-1300] ignoreCase checks implemented both during Pull and Propagation","tree":{"sha":"33dc41e216e4cbb897d80837b1e3efa398ba7959","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/33dc41e216e4cbb897d80837b1e3efa398ba7959"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1a3a05e2341ab5b1b61f293882d4038c7050259c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a3a05e2341ab5b1b61f293882d4038c7050259c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1a3a05e2341ab5b1b61f293882d4038c7050259c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a3a05e2341ab5b1b61f293882d4038c7050259c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a482f0baecad903cb94a33f96feecc2358562df0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a482f0baecad903cb94a33f96feecc2358562df0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a482f0baecad903cb94a33f96feecc2358562df0"}],"stats":{"total":469,"additions":338,"deletions":131},"files":[{"sha":"d1f72ec1312c0d4b33085a773c9a18a22a026d4f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ObjectTypeTogglePanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FObjectTypeTogglePanel.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -36,15 +36,16 @@ public abstract class ObjectTypeTogglePanel extends TogglePanel<Serializable> {\n \n     ObjectTypeTogglePanel(\n             final String id,\n-            final ResourceProvision item,\n+            final ResourceProvision resourceProvision,\n             final LoadableDetachableModel<List<String>> anyTypes,\n             final PageReference pageRef) {\n+\n         super(id, pageRef);\n \n         Form<?> form = new Form<>(\"objectTypeForm\");\n         addInnerObject(form);\n \n-        PropertyModel<String> typeModel = new PropertyModel<>(item, \"anyType\");\n+        PropertyModel<String> typeModel = new PropertyModel<>(resourceProvision, \"anyType\");\n \n         form.add(new AjaxDropDownChoicePanel<>(\n                 \"type\", \"type\", typeModel, false)."},{"sha":"40086f90ee6c9fb7ac881b400626454d77ba8300","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder.java","status":"modified","additions":36,"deletions":32,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -64,19 +64,23 @@ private final class ObjectType extends WizardStep {\n \n         private static final long serialVersionUID = -1657800545799468278L;\n \n-        ObjectType(final ResourceProvision item) {\n+        ObjectType(final ResourceProvision resourceProvision) {\n             super(new ResourceModel(\"clazz.title\", StringUtils.EMPTY),\n-                    new ResourceModel(\"clazz.summary\", StringUtils.EMPTY), new Model<>(item));\n+                    new ResourceModel(\"clazz.summary\", StringUtils.EMPTY), new Model<>(resourceProvision));\n \n-            final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+            WebMarkupContainer container = new WebMarkupContainer(\"container\");\n             container.setOutputMarkupId(true);\n             add(container);\n \n             clazz = new AjaxTextFieldPanel(\n-                    \"clazz\", \"clazz\", new PropertyModel<>(item, \"objectClass\"));\n+                    \"clazz\", \"clazz\", new PropertyModel<>(resourceProvision, \"objectClass\"));\n             clazz.setRequired(true);\n             clazz.setChoices(connectorRestClient.getObjectClasses(resourceTO.getConnector()));\n             container.add(clazz);\n+\n+            AjaxCheckBoxPanel ignoreCaseMatch = new AjaxCheckBoxPanel(\n+                    \"ignoreCaseMatch\", \"ignoreCaseMatch\", new PropertyModel<>(resourceProvision, \"ignoreCaseMatch\"));\n+            container.add(ignoreCaseMatch);\n         }\n     }\n \n@@ -101,12 +105,12 @@ private static final class AuxClasses extends WizardStep implements ICondition {\n \n         private final ResourceProvision provision;\n \n-        AuxClasses(final ResourceProvision item) {\n-            this.provision = item;\n+        AuxClasses(final ResourceProvision resourceProvision) {\n+            this.provision = resourceProvision;\n \n             setTitleModel(new ResourceModel(\"auxClasses.title\"));\n-            setSummaryModel(new StringResourceModel(\"auxClasses.summary\", this, new Model<>(item)));\n-            add(new ProvisionAuxClassesPanel(\"auxClasses\", item.getProvisionTO()));\n+            setSummaryModel(new StringResourceModel(\"auxClasses.summary\", this, new Model<>(resourceProvision)));\n+            add(new ProvisionAuxClassesPanel(\"auxClasses\", resourceProvision.getProvisionTO()));\n         }\n \n         @Override\n@@ -122,7 +126,7 @@ private static final class Mapping extends WizardStep {\n \n         private static final long serialVersionUID = 3454904947720856253L;\n \n-        Mapping(final ResourceProvision item) {\n+        Mapping(final ResourceProvision resourceProvision) {\n             setTitleModel(Model.of(\"Mapping\"));\n             setSummaryModel(Model.of(StringUtils.EMPTY));\n         }\n@@ -135,16 +139,16 @@ private final class ConnObjectLink extends WizardStep {\n \n         private static final long serialVersionUID = 2359955465172450478L;\n \n-        ConnObjectLink(final ResourceProvision item) {\n+        ConnObjectLink(final ResourceProvision resourceProvision) {\n             super(new ResourceModel(\"link.title\", StringUtils.EMPTY),\n                     new ResourceModel(\"link.summary\", StringUtils.EMPTY));\n \n-            final WebMarkupContainer connObjectLinkContainer = new WebMarkupContainer(\"connObjectLinkContainer\");\n+            WebMarkupContainer connObjectLinkContainer = new WebMarkupContainer(\"connObjectLinkContainer\");\n             connObjectLinkContainer.setOutputMarkupId(true);\n             add(connObjectLinkContainer);\n \n             boolean connObjectLinkEnabled = false;\n-            if (StringUtils.isNotBlank(item.getConnObjectLink())) {\n+            if (StringUtils.isNotBlank(resourceProvision.getConnObjectLink())) {\n                 connObjectLinkEnabled = true;\n             }\n \n@@ -160,7 +164,7 @@ private final class ConnObjectLink extends WizardStep {\n             final AjaxTextFieldPanel connObjectLink = new AjaxTextFieldPanel(\n                     \"connObjectLink\",\n                     new ResourceModel(\"connObjectLink\", \"connObjectLink\").getObject(),\n-                    new PropertyModel<>(item, \"connObjectLink\"),\n+                    new PropertyModel<>(resourceProvision, \"connObjectLink\"),\n                     false);\n             connObjectLink.enableJexlHelp();\n             connObjectLink.setEnabled(connObjectLinkEnabled);\n@@ -195,57 +199,57 @@ public ProvisionWizardBuilder(final ResourceTO resourceTO, final String adminRea\n     }\n \n     @Override\n-    protected WizardModel buildModelSteps(final ResourceProvision modelObject, final WizardModel wizardModel) {\n-        wizardModel.add(new ObjectType(modelObject));\n-        wizardModel.add(new AuxClasses(modelObject));\n+    protected WizardModel buildModelSteps(final ResourceProvision resourceProvision, final WizardModel wizardModel) {\n+        wizardModel.add(new ObjectType(resourceProvision));\n+        wizardModel.add(new AuxClasses(resourceProvision));\n \n-        Mapping mapping = new Mapping(modelObject);\n+        Mapping mapping = new Mapping(resourceProvision);\n         mapping.setOutputMarkupId(true);\n \n         ItemTransformersTogglePanel itemTransformers = new ItemTransformersTogglePanel(mapping, pageRef);\n         addOuterObject(itemTransformers);\n         JEXLTransformersTogglePanel jexlTransformers = new JEXLTransformersTogglePanel(mapping, pageRef);\n         addOuterObject(jexlTransformers);\n-        if (modelObject.getProvisionTO() != null && modelObject.getProvisionTO().getMapping() == null) {\n-            modelObject.getProvisionTO().setMapping(new MappingTO());\n+        if (resourceProvision.getProvisionTO() != null && resourceProvision.getProvisionTO().getMapping() == null) {\n+            resourceProvision.getProvisionTO().setMapping(new MappingTO());\n         }\n         mapping.add(new ResourceMappingPanel(\n-                \"mapping\", resourceTO, adminRealm, modelObject, itemTransformers, jexlTransformers));\n+                \"mapping\", resourceTO, adminRealm, resourceProvision, itemTransformers, jexlTransformers));\n \n         wizardModel.add(mapping);\n \n-        wizardModel.add(new ConnObjectLink(modelObject));\n+        wizardModel.add(new ConnObjectLink(resourceProvision));\n         return wizardModel;\n     }\n \n     @Override\n-    protected Serializable onApplyInternal(final ResourceProvision modelObject) {\n-        if (modelObject.getOrgUnitTO() != null) {\n-            this.resourceTO.setOrgUnit(modelObject.getOrgUnitTO());\n+    protected Serializable onApplyInternal(final ResourceProvision resourceProvision) {\n+        if (resourceProvision.getOrgUnitTO() != null) {\n+            this.resourceTO.setOrgUnit(resourceProvision.getOrgUnitTO());\n \n             this.resourceTO.getOrgUnit().getItems().clear();\n-            this.resourceTO.getOrgUnit().getItems().addAll(modelObject.getItems());\n-        } else if (modelObject.getProvisionTO() != null) {\n+            this.resourceTO.getOrgUnit().getItems().addAll(resourceProvision.getItems());\n+        } else if (resourceProvision.getProvisionTO() != null) {\n             final List<ProvisionTO> provisions;\n-            if (modelObject.getKey() == null) {\n+            if (resourceProvision.getKey() == null) {\n                 provisions = this.resourceTO.getProvisions().stream().\n-                        filter(object -> !modelObject.getAnyType().equals(object.getAnyType())).\n+                        filter(object -> !resourceProvision.getAnyType().equals(object.getAnyType())).\n                         collect(Collectors.toList());\n             } else {\n                 provisions = this.resourceTO.getProvisions().stream().\n-                        filter(object -> !modelObject.getKey().equals(object.getKey())).\n+                        filter(object -> !resourceProvision.getKey().equals(object.getKey())).\n                         collect(Collectors.toList());\n             }\n \n-            ProvisionTO provisionTO = modelObject.getProvisionTO();\n+            ProvisionTO provisionTO = resourceProvision.getProvisionTO();\n             provisionTO.getMapping().getItems().clear();\n-            provisionTO.getMapping().getItems().addAll(modelObject.getItems());\n+            provisionTO.getMapping().getItems().addAll(resourceProvision.getItems());\n             provisions.add(provisionTO);\n \n             this.resourceTO.getProvisions().clear();\n             this.resourceTO.getProvisions().addAll(provisions);\n         }\n \n-        return modelObject;\n+        return resourceProvision;\n     }\n }"},{"sha":"270f32d95448cd75adf8277fe6d3fa683c009429","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -142,13 +142,13 @@ protected void setAttrNames(final AjaxTextFieldPanel toBeUpdated) {\n                     LOG.error(\"Could not read AnyType classes for {}\", anyType.getClasses(), e);\n                 }\n             }\n-            for (String auxClass : provision.getAuxClasses()) {\n+            provision.getAuxClasses().forEach(auxClass -> {\n                 try {\n                     anyTypeClassTOs.add(anyTypeClassRestClient.read(auxClass));\n                 } catch (Exception e) {\n                     LOG.error(\"Could not read AnyTypeClass for {}\", auxClass, e);\n                 }\n-            }\n+            });\n \n             switch (provision.getAnyType()) {\n                 case \"USER\":\n@@ -163,14 +163,14 @@ protected void setAttrNames(final AjaxTextFieldPanel toBeUpdated) {\n                     choices.addAll(ANY_OBJECT_FIELD_NAMES);\n             }\n \n-            for (AnyTypeClassTO anyTypeClassTO : anyTypeClassTOs) {\n+            anyTypeClassTOs.forEach(anyTypeClassTO -> {\n                 choices.addAll(anyTypeClassTO.getPlainSchemas());\n                 choices.addAll(anyTypeClassTO.getDerSchemas());\n                 choices.addAll(anyTypeClassTO.getVirSchemas());\n-            }\n+            });\n         }\n \n-        final List<String> names = new ArrayList<>(choices);\n+        List<String> names = new ArrayList<>(choices);\n         Collections.sort(names);\n         toBeUpdated.setChoices(names);\n     }"},{"sha":"e4233b59a2a948174dc49ba8a0027e370699ef15","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvision.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvision.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvision.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvision.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -128,6 +128,18 @@ public List<String> getAuxClasses() {\n         return provisionTO == null ? Collections.<String>emptyList() : provisionTO.getAuxClasses();\n     }\n \n+    public boolean isIgnoreCaseMatch() {\n+        return provisionTO == null ? orgUnitTO.isIgnoreCaseMatch() : provisionTO.isIgnoreCaseMatch();\n+    }\n+\n+    public void setIgnoreCaseMatch(final boolean ignoreCaseMatch) {\n+        if (provisionTO == null) {\n+            orgUnitTO.setIgnoreCaseMatch(ignoreCaseMatch);\n+        } else {\n+            provisionTO.setIgnoreCaseMatch(ignoreCaseMatch);\n+        }\n+    }\n+\n     public String getConnObjectLink() {\n         return provisionTO == null\n                 ? orgUnitTO == null"},{"sha":"d88d46923955f55b60457838c850ab79a9b7fa1e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$ObjectType.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType.html?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -21,6 +21,7 @@\n     <div wicket:id=\"container\">\n       <div class=\"form-group\">\n         <span wicket:id=\"clazz\"/>\n+        <span wicket:id=\"ignoreCaseMatch\"/>\n       </div>\n     </div>\n   </wicket:panel>"},{"sha":"a43e8f09fe77f79b197c546a4a26bc39e16d3844","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$ObjectType.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType.properties?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -20,3 +20,4 @@ clazz.summary=\n \n clazz=Object Class\n clazz.Required=Object class is required\n+ignoreCaseMatch=Ignore case for value match"},{"sha":"930ff677d99224996d26e695f4beaf76f7949c50","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$ObjectType_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_it.properties?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -20,3 +20,4 @@ clazz.summary=\n \n clazz=Object Class\n clazz.Required=Object class \\u00e8 richiesto\n+ignoreCaseMatch=Corrispondenza dei valori maiuscole / minuscole"},{"sha":"277698968fffbfabab75ed600dabb818364920e3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$ObjectType_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_ja.properties?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -20,3 +20,4 @@ clazz.summary=\n \n clazz=\\u30aa\\u30d6\\u30b8\\u30a7\\u30af\\u30c8\\u30af\\u30e9\\u30b9\n clazz.Required=\\u30aa\\u30d6\\u30b8\\u30a7\\u30af\\u30c8\\u30af\\u30e9\\u30b9\\u304c\\u5fc5\\u8981\\u3067\\u3059\n+ignoreCaseMatch=Ignore case for value match"},{"sha":"2bf167c6547fda785b6fb29bd6a4ef845589a0d3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$ObjectType_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_pt_BR.properties?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -20,3 +20,4 @@ clazz.summary=\n \n clazz=Object Class\n clazz.Required=Object class \\u00e9 necess\\u00e1ria\n+ignoreCaseMatch=Ignore case for value match"},{"sha":"4b683e837bd17e4219d86a1c7310c65d24ae2347","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$ObjectType_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ObjectType_ru.properties?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -20,3 +20,4 @@ clazz.summary=\n \n clazz=Object Class\n clazz.Required=Object class \\u043d\\u0435\\u043e\\u0431\\u0445\\u043e\\u0434\\u0438\\u043c\\u043e\n+ignoreCaseMatch=Ignore case for value match"},{"sha":"7e5585ad89b13b7fc68459dd9f72c8ed259f6107","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MappingTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -49,7 +49,7 @@ public void setConnObjectLink(final String connObjectLink) {\n \n     @Override\n     public ItemTO getConnObjectKeyItem() {\n-        return getItems().stream().filter(item -> item.isConnObjectKey()).findFirst().get();\n+        return getItems().stream().filter(ItemTO::isConnObjectKey).findFirst().get();\n     }\n \n     protected boolean addConnObjectKeyItem(final ItemTO connObjectItem) {"},{"sha":"f7e326bfb54c29a66423de9721eab588a65beba4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/OrgUnitTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -39,6 +39,8 @@ public class OrgUnitTO extends AbstractBaseBean implements EntityTO, ItemContain\n \n     private String syncToken;\n \n+    private boolean ignoreCaseMatch;\n+\n     private String connObjectLink;\n \n     private final List<ItemTO> items = new ArrayList<>();\n@@ -69,6 +71,14 @@ public void setSyncToken(final String syncToken) {\n         this.syncToken = syncToken;\n     }\n \n+    public boolean isIgnoreCaseMatch() {\n+        return ignoreCaseMatch;\n+    }\n+\n+    public void setIgnoreCaseMatch(final boolean ignoreCaseMatch) {\n+        this.ignoreCaseMatch = ignoreCaseMatch;\n+    }\n+\n     public String getConnObjectLink() {\n         return connObjectLink;\n     }"},{"sha":"cf9293e8af8806ca804c59baaa97a3046b73b5e3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisionTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -43,6 +43,8 @@ public class ProvisionTO extends AbstractBaseBean implements EntityTO {\n \n     private String syncToken;\n \n+    private boolean ignoreCaseMatch;\n+\n     private MappingTO mapping;\n \n     private final List<String> virSchemas = new ArrayList<>();\n@@ -88,6 +90,14 @@ public void setSyncToken(final String syncToken) {\n         this.syncToken = syncToken;\n     }\n \n+    public boolean isIgnoreCaseMatch() {\n+        return ignoreCaseMatch;\n+    }\n+\n+    public void setIgnoreCaseMatch(final boolean ignoreCaseMatch) {\n+        this.ignoreCaseMatch = ignoreCaseMatch;\n+    }\n+\n     public MappingTO getMapping() {\n         return mapping;\n     }"},{"sha":"34b14095e7882c3ee957acbf9c8ada1194352c99","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ReconciliationLogic.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -150,6 +150,7 @@ private ConnObjectTO getOnResource(final Any<?> any, final Provision provision)\n         ConnectorObject connectorObject = connector.getObject(\n                 provision.getObjectClass(),\n                 AttributeBuilder.build(connObjectKeyItem.getExtAttrName(), connObjectKeyValue),\n+                provision.isIgnoreCaseMatch(),\n                 MappingUtils.buildOperationOptions(mapItems));\n         if (connectorObject != null) {\n             Set<Attribute> attributes = connectorObject.getAttributes();"},{"sha":"bea59dbd8f8eb966596c2221160360c76b2aa2e9","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -331,6 +331,7 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n         ConnectorObject connectorObject = connector.getObject(\n                 init.getRight().getObjectClass(),\n                 AttributeBuilder.build(connObjectKeyItem.get().getExtAttrName(), connObjectKeyValue.get()),\n+                init.getRight().isIgnoreCaseMatch(),\n                 MappingUtils.buildOperationOptions(mapItems));\n         if (connectorObject == null) {\n             throw new NotFoundException("},{"sha":"042a799ca59be7994dc175a300fa8babd4688cda","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyDAO.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -41,9 +41,9 @@\n \n     A findByWorkflowId(String workflowId);\n \n-    List<A> findByPlainAttrValue(String schemaName, PlainAttrValue attrValue);\n+    List<A> findByPlainAttrValue(String schemaName, PlainAttrValue attrValue, boolean ignoreCaseMatch);\n \n-    A findByPlainAttrUniqueValue(String schemaName, PlainAttrValue attrUniqueValue);\n+    A findByPlainAttrUniqueValue(String schemaName, PlainAttrValue attrUniqueValue, boolean ignoreCaseMatch);\n \n     /**\n      * Find any objects by derived attribute value. This method could fail if one or more string literals contained\n@@ -53,9 +53,10 @@\n      *\n      * @param schemaName derived schema name\n      * @param value derived attribute value\n+     * @param ignoreCaseMatch whether comparison for string values should take case into account or not\n      * @return list of any objects\n      */\n-    List<A> findByDerAttrValue(String schemaName, String value);\n+    List<A> findByDerAttrValue(String schemaName, String value, boolean ignoreCaseMatch);\n \n     List<A> findByResource(ExternalResource resource);\n "},{"sha":"52e209b96ee3c352b5d2f99e6f0d583b4164805f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/OrgUnit.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FOrgUnit.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FOrgUnit.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FOrgUnit.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -40,6 +40,10 @@ public interface OrgUnit extends Entity {\n \n     void setSyncToken(SyncToken syncToken);\n \n+    boolean isIgnoreCaseMatch();\n+\n+    void setIgnoreCaseMatch(boolean ignoreCaseMatch);\n+\n     String getConnObjectLink();\n \n     void setConnObjectLink(String connObjectLink);"},{"sha":"1fe602335bd19f3a0cad897ff192e4953af3b60f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/Provision.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FProvision.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FProvision.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FProvision.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -49,6 +49,10 @@ public interface Provision extends Entity {\n \n     void setSyncToken(SyncToken syncToken);\n \n+    boolean isIgnoreCaseMatch();\n+\n+    void setIgnoreCaseMatch(boolean ignoreCaseMatch);\n+\n     Mapping getMapping();\n \n     void setMapping(Mapping mapping);"},{"sha":"a59b33ac0e18136afe1494175ee5735dfb23ae63","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":31,"deletions":21,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -195,19 +195,27 @@ public A findByWorkflowId(final String workflowId) {\n         return result;\n     }\n \n-    private Query findByPlainAttrValueQuery(final String entityName) {\n-        return entityManager().createQuery(\"SELECT e FROM \" + entityName + \" e\"\n+    private Query findByPlainAttrValueQuery(final String entityName, final boolean ignoreCaseMatch) {\n+        String query = \"SELECT e FROM \" + entityName + \" e\"\n                 + \" WHERE e.attribute.schema.id = :schemaKey AND (e.stringValue IS NOT NULL\"\n-                + \" AND e.stringValue = :stringValue)\"\n+                + \" AND \"\n+                + (ignoreCaseMatch ? \"LOWER(\" : \"\") + \"e.stringValue\" + (ignoreCaseMatch ? \")\" : \"\")\n+                + \" = \"\n+                + (ignoreCaseMatch ? \"LOWER(\" : \"\") + \":stringValue\" + (ignoreCaseMatch ? \")\" : \"\") + \")\"\n                 + \" OR (e.booleanValue IS NOT NULL AND e.booleanValue = :booleanValue)\"\n                 + \" OR (e.dateValue IS NOT NULL AND e.dateValue = :dateValue)\"\n                 + \" OR (e.longValue IS NOT NULL AND e.longValue = :longValue)\"\n-                + \" OR (e.doubleValue IS NOT NULL AND e.doubleValue = :doubleValue)\");\n+                + \" OR (e.doubleValue IS NOT NULL AND e.doubleValue = :doubleValue)\";\n+        return entityManager().createQuery(query);\n     }\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public List<A> findByPlainAttrValue(final String schemaKey, final PlainAttrValue attrValue) {\n+    public List<A> findByPlainAttrValue(\n+            final String schemaKey,\n+            final PlainAttrValue attrValue,\n+            final boolean ignoreCaseMatch) {\n+\n         PlainSchema schema = plainSchemaDAO().find(schemaKey);\n         if (schema == null) {\n             LOG.error(\"Invalid schema name '{}'\", schemaKey);\n@@ -217,7 +225,7 @@ public List<A> findByPlainAttrValue(final String schemaKey, final PlainAttrValue\n         String entityName = schema.isUniqueConstraint()\n                 ? anyUtils().plainAttrUniqueValueClass().getName()\n                 : anyUtils().plainAttrValueClass().getName();\n-        Query query = findByPlainAttrValueQuery(entityName);\n+        Query query = findByPlainAttrValueQuery(entityName, ignoreCaseMatch);\n         query.setParameter(\"schemaKey\", schemaKey);\n         query.setParameter(\"stringValue\", attrValue.getStringValue());\n         query.setParameter(\"booleanValue\", attrValue.getBooleanValue() == null\n@@ -243,7 +251,11 @@ public List<A> findByPlainAttrValue(final String schemaKey, final PlainAttrValue\n     }\n \n     @Override\n-    public A findByPlainAttrUniqueValue(final String schemaKey, final PlainAttrValue attrUniqueValue) {\n+    public A findByPlainAttrUniqueValue(\n+            final String schemaKey,\n+            final PlainAttrValue attrUniqueValue,\n+            final boolean ignoreCaseMatch) {\n+\n         PlainSchema schema = plainSchemaDAO().find(schemaKey);\n         if (schema == null) {\n             LOG.error(\"Invalid schema name '{}'\", schemaKey);\n@@ -254,7 +266,7 @@ public A findByPlainAttrUniqueValue(final String schemaKey, final PlainAttrValue\n             return null;\n         }\n \n-        List<A> result = findByPlainAttrValue(schemaKey, attrUniqueValue);\n+        List<A> result = findByPlainAttrValue(schemaKey, attrUniqueValue, ignoreCaseMatch);\n         return result.isEmpty()\n                 ? null\n                 : result.iterator().next();\n@@ -283,15 +295,7 @@ private List<String> split(final String attrValue, final List<String> literals)\n         return attrValues;\n     }\n \n-    /**\n-     * Generate one where clause for each different attribute schema into the derived schema expression provided.\n-     *\n-     * @param expression derived schema expression\n-     * @param value derived attribute value\n-     * @param attrUtils USER / GROUP\n-     * @return where clauses to use to build the query\n-     */\n-    private Set<String> getWhereClause(final String expression, final String value) {\n+    private Set<String> getWhereClause(final String expression, final String value, final boolean ignoreCaseMatch) {\n         Parser parser = new Parser(new StringReader(expression));\n \n         // Schema names\n@@ -386,10 +390,16 @@ private Set<String> getWhereClause(final String expression, final String value)\n                             bld.append(\"v.dateValue = '\").append(attrValues.get(i)).append(\"'\");\n                             break;\n                         default:\n-                            bld.append(\"v.stringValue = '\").append(attrValues.get(i)).append(\"'\");\n+                            if (ignoreCaseMatch) {\n+                                bld.append(\"LOWER(v.stringValue) = '\").\n+                                        append(attrValues.get(i).toLowerCase()).append(\"'\");\n+                            } else {\n+                                bld.append(\"v.stringValue = '\").\n+                                        append(attrValues.get(i)).append(\"'\");\n+                            }\n                     }\n \n-                    bld.append(\")\");\n+                    bld.append(')');\n \n                     used.add(identifiers.get(i));\n \n@@ -404,7 +414,7 @@ private Set<String> getWhereClause(final String expression, final String value)\n     }\n \n     @Override\n-    public List<A> findByDerAttrValue(final String schemaKey, final String value) {\n+    public List<A> findByDerAttrValue(final String schemaKey, final String value, final boolean ignoreCaseMatch) {\n         DerSchema schema = derSchemaDAO().find(schemaKey);\n         if (schema == null) {\n             LOG.error(\"Invalid schema name '{}'\", schemaKey);\n@@ -415,7 +425,7 @@ public List<A> findByDerAttrValue(final String schemaKey, final String value) {\n         StringBuilder querystring = new StringBuilder();\n \n         boolean subquery = false;\n-        for (String clause : getWhereClause(schema.getExpression(), value)) {\n+        for (String clause : getWhereClause(schema.getExpression(), value, ignoreCaseMatch)) {\n             if (querystring.length() > 0) {\n                 subquery = true;\n                 querystring.append(\" AND a.owner_id IN ( \");"},{"sha":"89939fb077bd77fa21de5e3ca1e6c618e22bdf37","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAOrgUnit.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnit.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnit.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAOrgUnit.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Optional;\n+import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n@@ -29,6 +30,8 @@\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n+import javax.validation.constraints.Max;\n+import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnitItem;\n@@ -56,6 +59,11 @@ public class JPAOrgUnit extends AbstractGeneratedKeyEntity implements OrgUnit {\n     @Lob\n     private String serializedSyncToken;\n \n+    @Basic\n+    @Min(0)\n+    @Max(1)\n+    private Integer ignoreCaseMatch;\n+\n     @NotNull\n     private String connObjectLink;\n \n@@ -102,6 +110,16 @@ public void setSyncToken(final SyncToken syncToken) {\n         this.serializedSyncToken = syncToken == null ? null : POJOHelper.serialize(syncToken);\n     }\n \n+    @Override\n+    public boolean isIgnoreCaseMatch() {\n+        return isBooleanAsInteger(ignoreCaseMatch);\n+    }\n+\n+    @Override\n+    public void setIgnoreCaseMatch(final boolean ignoreCaseMatch) {\n+        this.ignoreCaseMatch = getBooleanAsInteger(ignoreCaseMatch);\n+    }\n+\n     @Override\n     public String getConnObjectLink() {\n         return connObjectLink;"},{"sha":"16e85c8e30726dfa9c043e01bc16d131e7781415","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAProvision.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAProvision.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import javax.persistence.Basic;\n import javax.persistence.CascadeType;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n@@ -31,6 +32,8 @@\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n import javax.persistence.UniqueConstraint;\n+import javax.validation.constraints.Max;\n+import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n@@ -72,6 +75,11 @@ public class JPAProvision extends AbstractGeneratedKeyEntity implements Provisio\n     @Lob\n     private String serializedSyncToken;\n \n+    @Basic\n+    @Min(0)\n+    @Max(1)\n+    private Integer ignoreCaseMatch;\n+\n     @OneToOne(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"provision\")\n     private JPAMapping mapping;\n \n@@ -137,6 +145,16 @@ public void setSyncToken(final SyncToken syncToken) {\n         this.serializedSyncToken = syncToken == null ? null : POJOHelper.serialize(syncToken);\n     }\n \n+    @Override\n+    public boolean isIgnoreCaseMatch() {\n+        return isBooleanAsInteger(ignoreCaseMatch);\n+    }\n+\n+    @Override\n+    public void setIgnoreCaseMatch(final boolean ignoreCaseMatch) {\n+        this.ignoreCaseMatch = getBooleanAsInteger(ignoreCaseMatch);\n+    }\n+\n     @Override\n     public Mapping getMapping() {\n         return mapping;"},{"sha":"47f47d8cf87014920cf9fc962c2eef6c46296ce5","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/UserTest.java","status":"modified","additions":23,"deletions":9,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FUserTest.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -88,36 +88,50 @@ public void findAllByPageAndSize() {\n     }\n \n     @Test\n-    public void findByDerAttributeValue() {\n-        final List<User> list = userDAO.findByDerAttrValue(\"cn\", \"Vivaldi, Antonio\");\n+    public void findByDerAttrValue() {\n+        List<User> list = userDAO.findByDerAttrValue(\"cn\", \"Vivaldi, Antonio\", false);\n+        assertEquals(1, list.size());\n+\n+        list = userDAO.findByDerAttrValue(\"cn\", \"VIVALDI, ANTONIO\", false);\n+        assertEquals(0, list.size());\n+\n+        list = userDAO.findByDerAttrValue(\"cn\", \"VIVALDI, ANTONIO\", true);\n         assertEquals(1, list.size());\n     }\n \n     @Test\n     public void findByInvalidDerAttrValue() {\n-        assertTrue(userDAO.findByDerAttrValue(\"cn\", \"Antonio, Maria, Rossi\").isEmpty());\n+        assertTrue(userDAO.findByDerAttrValue(\"cn\", \"Antonio, Maria, Rossi\", false).isEmpty());\n     }\n \n     @Test\n     public void findByInvalidDerAttrExpression() {\n-        assertTrue(userDAO.findByDerAttrValue(\"noschema\", \"Antonio, Maria\").isEmpty());\n+        assertTrue(userDAO.findByDerAttrValue(\"noschema\", \"Antonio, Maria\", false).isEmpty());\n     }\n \n     @Test\n-    public void findByAttributeValue() {\n-        final UPlainAttrValue fullnameValue = entityFactory.newEntity(UPlainAttrValue.class);\n+    public void findByPlainAttrValue() {\n+        UPlainAttrValue fullnameValue = entityFactory.newEntity(UPlainAttrValue.class);\n         fullnameValue.setStringValue(\"Gioacchino Rossini\");\n \n-        final List<User> list = userDAO.findByPlainAttrValue(\"fullname\", fullnameValue);\n+        List<User> list = userDAO.findByPlainAttrValue(\"fullname\", fullnameValue, false);\n+        assertEquals(1, list.size());\n+\n+        fullnameValue.setStringValue(\"Gioacchino ROSSINI\");\n+\n+        list = userDAO.findByPlainAttrValue(\"fullname\", fullnameValue, false);\n+        assertEquals(0, list.size());\n+\n+        list = userDAO.findByPlainAttrValue(\"fullname\", fullnameValue, true);\n         assertEquals(1, list.size());\n     }\n \n     @Test\n-    public void findByAttributeBooleanValue() {\n+    public void findByPlainAttrBooleanValue() {\n         final UPlainAttrValue coolValue = entityFactory.newEntity(UPlainAttrValue.class);\n         coolValue.setBooleanValue(true);\n \n-        final List<User> list = userDAO.findByPlainAttrValue(\"cool\", coolValue);\n+        final List<User> list = userDAO.findByPlainAttrValue(\"cool\", coolValue, false);\n         assertEquals(1, list.size());\n     }\n "},{"sha":"561e08945e31ec686e157396c96910a4b5ee950c","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/UserTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -241,11 +241,11 @@ public void issueSYNCOPE800() {\n         assertNotNull(firstname);\n \n         // search by ksuffix derived attribute\n-        List<User> list = userDAO.findByDerAttrValue(\"ksuffix\", firstname + \"k\");\n+        List<User> list = userDAO.findByDerAttrValue(\"ksuffix\", firstname + \"k\", false);\n         assertEquals(1, list.size());\n \n         // search by kprefix derived attribute\n-        list = userDAO.findByDerAttrValue(\"kprefix\", \"k\" + firstname);\n+        list = userDAO.findByDerAttrValue(\"kprefix\", \"k\" + firstname, false);\n         assertEquals(1, list.size());\n     }\n "},{"sha":"b699c877e6407a814dbd2c4342f44689b7dfb3d2","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/Connector.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -143,10 +143,15 @@ void filteredReconciliation(\n      *\n      * @param objectClass ConnId's object class\n      * @param connObjectKey ConnId's key attribute\n+     * @param ignoreCaseMatch whether match should be performed regardless of the value case\n      * @param options ConnId's OperationOptions\n      * @return ConnId's connector object for given uid\n      */\n-    ConnectorObject getObject(ObjectClass objectClass, Attribute connObjectKey, OperationOptions options);\n+    ConnectorObject getObject(\n+            ObjectClass objectClass,\n+            Attribute connObjectKey,\n+            boolean ignoreCaseMatch,\n+            OperationOptions options);\n \n     /**\n      * Search for remote objects."},{"sha":"22cc25da5a0bce72ad19781e9b572201b12dc4d4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/AsyncConnectorFacade.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAsyncConnectorFacade.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAsyncConnectorFacade.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAsyncConnectorFacade.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -100,13 +100,17 @@ public Future<ConnectorObject> getObject(\n             final ConnectorFacade connector,\n             final ObjectClass objectClass,\n             final Attribute connObjectKey,\n+            final boolean ignoreCaseMatch,\n             final OperationOptions options) {\n \n         ConnectorObject[] objects = new ConnectorObject[1];\n-        connector.search(objectClass, FilterBuilder.equalTo(connObjectKey), connectorObject -> {\n-            objects[0] = connectorObject;\n-            return false;\n-        }, options);\n+        connector.search(\n+                objectClass,\n+                ignoreCaseMatch ? FilterBuilder.equalsIgnoreCase(connObjectKey) : FilterBuilder.equalTo(connObjectKey),\n+                connectorObject -> {\n+                    objects[0] = connectorObject;\n+                    return false;\n+                }, options);\n \n         return new AsyncResult<>(objects[0]);\n     }"},{"sha":"dfca75dcb234f3d16adf82ce03fc851a0cd941df","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -392,12 +392,13 @@ public void test() {\n     public ConnectorObject getObject(\n             final ObjectClass objectClass,\n             final Attribute connObjectKey,\n+            final boolean ignoreCaseMatch,\n             final OperationOptions options) {\n \n         Future<ConnectorObject> future = null;\n \n         if (connInstance.getCapabilities().contains(ConnectorCapability.SEARCH)) {\n-            future = asyncFacade.getObject(connector, objectClass, connObjectKey, options);\n+            future = asyncFacade.getObject(connector, objectClass, connObjectKey, ignoreCaseMatch, options);\n         } else {\n             LOG.info(\"Search was attempted, although the connector only has these capabilities: {}. No action.\",\n                     connInstance.getCapabilities());"},{"sha":"b6c29ee29232c41ace91ef5fe34689ed93cf541b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/VirAttrHandlerImpl.java","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -74,7 +74,7 @@ private Map<VirSchema, List<String>> getValues(final Any<?> any, final Set<VirSc\n \n         Map<Provision, Set<VirSchema>> toRead = new HashMap<>();\n \n-        for (VirSchema schema : schemas) {\n+        schemas.forEach(schema -> {\n             if (ownedResources.contains(schema.getProvision().getResource())) {\n                 VirAttrCacheValue virAttrCacheValue =\n                         virAttrCache.get(any.getType().getKey(), any.getKey(), schema.getKey());\n@@ -94,35 +94,36 @@ private Map<VirSchema, List<String>> getValues(final Any<?> any, final Set<VirSc\n                 LOG.debug(\"Not considering {} since {} is not assigned to {}\",\n                         schema, any, schema.getProvision().getResource());\n             }\n-        }\n+        });\n \n-        for (Map.Entry<Provision, Set<VirSchema>> entry : toRead.entrySet()) {\n-            LOG.debug(\"About to read from {}: {}\", entry.getKey(), entry.getValue());\n+        toRead.forEach((provision, schemasToRead) -> {\n+            LOG.debug(\"About to read from {}: {}\", provision, schemasToRead);\n \n-            Optional<MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(entry.getKey());\n+            Optional<MappingItem> connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n             String connObjectKeyValue = connObjectKeyItem.isPresent()\n-                    ? mappingManager.getConnObjectKeyValue(any, entry.getKey()).orElse(null)\n+                    ? mappingManager.getConnObjectKeyValue(any, provision).orElse(null)\n                     : null;\n             if (!connObjectKeyItem.isPresent() || connObjectKeyValue == null) {\n-                LOG.error(\"No ConnObjectKey or value found for {}, ignoring...\", entry.getKey());\n+                LOG.error(\"No ConnObjectKey or value found for {}, ignoring...\", provision);\n             } else {\n                 Set<MappingItem> linkingMappingItems = new HashSet<>();\n                 linkingMappingItems.add(connObjectKeyItem.get());\n-                linkingMappingItems.addAll(entry.getValue().stream().\n+                linkingMappingItems.addAll(schemasToRead.stream().\n                         map(schema -> schema.asLinkingMappingItem()).collect(Collectors.toSet()));\n \n-                Connector connector = connFactory.getConnector(entry.getKey().getResource());\n+                Connector connector = connFactory.getConnector(provision.getResource());\n                 try {\n                     ConnectorObject connectorObject = connector.getObject(\n-                            entry.getKey().getObjectClass(),\n+                            provision.getObjectClass(),\n                             AttributeBuilder.build(connObjectKeyItem.get().getExtAttrName(), connObjectKeyValue),\n+                            provision.isIgnoreCaseMatch(),\n                             MappingUtils.buildOperationOptions(linkingMappingItems.iterator()));\n \n                     if (connectorObject == null) {\n                         LOG.debug(\"No read from {} with filter '{} == {}'\",\n-                                entry.getKey(), connObjectKeyItem.get().getExtAttrName(), connObjectKeyValue);\n+                                provision, connObjectKeyItem.get().getExtAttrName(), connObjectKeyValue);\n                     } else {\n-                        entry.getValue().forEach(schema -> {\n+                        schemasToRead.forEach(schema -> {\n                             Attribute attr = connectorObject.getAttributeByName(schema.getExtAttrName());\n                             if (attr != null) {\n                                 VirAttrCacheValue virAttrCacheValue = new VirAttrCacheValue();\n@@ -137,10 +138,10 @@ private Map<VirSchema, List<String>> getValues(final Any<?> any, final Set<VirSc\n                         });\n                     }\n                 } catch (Exception e) {\n-                    LOG.error(\"Error reading from {}\", entry.getKey(), e);\n+                    LOG.error(\"Error reading from {}\", provision, e);\n                 }\n             }\n-        }\n+        });\n \n         return result;\n     }"},{"sha":"122e1535fe70ba04e5b000fad392e583bf821f95","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -197,6 +197,8 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n                 provision.getAuxClasses().\n                         removeIf(anyTypeClass -> !provisionTO.getAuxClasses().contains(anyTypeClass.getKey()));\n \n+                provision.setIgnoreCaseMatch(provisionTO.isIgnoreCaseMatch());\n+\n                 if (provisionTO.getMapping() == null) {\n                     provision.setMapping(null);\n                 } else {\n@@ -280,6 +282,8 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n             }\n             orgUnit.setObjectClass(new ObjectClass(orgUnitTO.getObjectClass()));\n \n+            orgUnit.setIgnoreCaseMatch(orgUnitTO.isIgnoreCaseMatch());\n+\n             if (orgUnitTO.getConnObjectLink() == null) {\n                 SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidOrgUnit);\n                 sce.getElements().add(\"Null connObjectLink\");\n@@ -594,6 +598,7 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n             provisionTO.getAuxClasses().addAll(provision.getAuxClasses().stream().\n                     map(cls -> cls.getKey()).collect(Collectors.toList()));\n             provisionTO.setSyncToken(provision.getSerializedSyncToken());\n+            provisionTO.setIgnoreCaseMatch(provision.isIgnoreCaseMatch());\n \n             if (provision.getMapping() != null) {\n                 MappingTO mappingTO = new MappingTO();\n@@ -625,6 +630,7 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n             orgUnitTO.setKey(orgUnit.getKey());\n             orgUnitTO.setObjectClass(orgUnit.getObjectClass().getObjectClassValue());\n             orgUnitTO.setSyncToken(orgUnit.getSerializedSyncToken());\n+            orgUnitTO.setIgnoreCaseMatch(orgUnit.isIgnoreCaseMatch());\n             orgUnitTO.setConnObjectLink(orgUnit.getConnObjectLink());\n             populateItems(orgUnit.getItems(), orgUnitTO);\n "},{"sha":"63c64578840f38201d8424dad7097a02361d1282","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/report/ReconciliationReportlet.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Freport%2FReconciliationReportlet.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -296,6 +296,7 @@ private void doExtract(final ContentHandler handler, final List<? extends Any<?>\n                     ConnectorObject connectorObject = connector.getObject(\n                             provision.getObjectClass(),\n                             AttributeBuilder.build(connObjectKeyItem.get().getExtAttrName(), connObjectKeyValue),\n+                            provision.isIgnoreCaseMatch(),\n                             MappingUtils.buildOperationOptions(provision.getMapping().getItems().iterator()));\n \n                     if (connectorObject == null) {"},{"sha":"a3e7132e8a0b9d46348a6e7786af8e48f49b6960","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -606,6 +606,7 @@ protected ConnectorObject getRemoteObject(\n                 obj = connector.getObject(\n                         new ObjectClass(task.getObjectClassName()),\n                         AttributeBuilder.build(connObjectKeyItem.get().getExtAttrName(), connObjectKey),\n+                        provision.isIgnoreCaseMatch(),\n                         MappingUtils.buildOperationOptions(new IteratorChain<>(\n                                 MappingUtils.getPropagationItems(provision.getMapping().getItems()).iterator(),\n                                 linkingMappingItems.iterator())));\n@@ -656,6 +657,7 @@ protected ConnectorObject getRemoteObject(\n             try {\n                 obj = connector.getObject(new ObjectClass(task.getObjectClassName()),\n                         AttributeBuilder.build(connObjectKeyItem.get().getExtAttrName(), connObjectKey),\n+                        orgUnit.isIgnoreCaseMatch(),\n                         MappingUtils.buildOperationOptions(\n                                 MappingUtils.getPropagationItems(orgUnit.getItems()).iterator()));\n             } catch (TimeoutException toe) {"},{"sha":"2c10a12931d1f119a73e6c08eb63d1152218c430","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -199,13 +199,15 @@ protected ConnectorObject getRemoteObject(\n             final ObjectClass objectClass,\n             final String connObjectKey,\n             final String connObjectKeyValue,\n+            final boolean ignoreCaseMatch,\n             final Iterator<? extends Item> iterator) {\n \n         ConnectorObject obj = null;\n         try {\n             obj = profile.getConnector().getObject(\n                     objectClass,\n                     AttributeBuilder.build(connObjectKey, connObjectKeyValue),\n+                    ignoreCaseMatch,\n                     MappingUtils.buildOperationOptions(iterator));\n         } catch (TimeoutException toe) {\n             LOG.debug(\"Request timeout\", toe);\n@@ -272,6 +274,7 @@ protected void doHandle(final Any<?> any) throws JobExecutionException {\n                     provision.get().getObjectClass(),\n                     connObjectKey.get().getExtAttrName(),\n                     connObjecKeyValue.get(),\n+                    provision.get().isIgnoreCaseMatch(),\n                     provision.get().getMapping().getItems().iterator());\n         } else {\n             LOG.debug(\"ConnObjectKeyItem {} or its value {} are null\", connObjectKey, connObjecKeyValue);\n@@ -445,6 +448,7 @@ protected void doHandle(final Any<?> any) throws JobExecutionException {\n                             provision.get().getObjectClass(),\n                             connObjectKey.get().getExtAttrName(),\n                             connObjecKeyValue.get(),\n+                            provision.get().isIgnoreCaseMatch(),\n                             provision.get().getMapping().getItems().iterator());\n                 }\n             } catch (IgnoreProvisionException e) {"},{"sha":"2a4a510836735e14c9b7967f234b86c08f956fca","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPushResultHandler.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -163,13 +163,15 @@ protected ConnectorObject getRemoteObject(\n             final ObjectClass objectClass,\n             final String connObjectKey,\n             final String connObjectKeyValue,\n+            final boolean ignoreCaseMatch,\n             final Iterator<? extends Item> iterator) {\n \n         ConnectorObject obj = null;\n         try {\n             obj = profile.getConnector().getObject(\n                     objectClass,\n                     AttributeBuilder.build(connObjectKey, connObjectKeyValue),\n+                    ignoreCaseMatch,\n                     MappingUtils.buildOperationOptions(iterator));\n         } catch (TimeoutException toe) {\n             LOG.debug(\"Request timeout\", toe);\n@@ -205,6 +207,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                     orgUnit.getObjectClass(),\n                     connObjectKey.get().getExtAttrName(),\n                     connObjecKeyValue.get(),\n+                    orgUnit.isIgnoreCaseMatch(),\n                     orgUnit.getItems().iterator());\n         } else {\n             LOG.debug(\"OrgUnitItem {} or its value {} are null\", connObjectKey, connObjecKeyValue);\n@@ -383,6 +386,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                             orgUnit.getObjectClass(),\n                             connObjectKey.get().getExtAttrName(),\n                             connObjecKeyValue.get(),\n+                            orgUnit.isIgnoreCaseMatch(),\n                             orgUnit.getItems().iterator());\n                 }\n             } catch (IgnoreProvisionException e) {"},{"sha":"301e33f20ad68d48061ff23098e9aed72ed94e09","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/LDAPMembershipPullActions.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -105,7 +105,7 @@ protected List<Object> getMembAttrValues(final SyncDelta delta, final Connector\n         if (membAttr == null) {\n             OperationOptionsBuilder oob = new OperationOptionsBuilder();\n             oob.setAttributesToGet(groupMemberName);\n-            ConnectorObject remoteObj = connector.getObject(ObjectClass.GROUP, delta.getUid(), oob.build());\n+            ConnectorObject remoteObj = connector.getObject(ObjectClass.GROUP, delta.getUid(), false, oob.build());\n             if (remoteObj == null) {\n                 LOG.debug(\"Object for '{}' not found\", delta.getUid().getUidValue());\n             } else {\n@@ -177,7 +177,8 @@ public void afterAll(final ProvisioningProfile<?, ?> profile) throws JobExecutio\n                     anyTypeDAO.findUser(),\n                     name,\n                     profile.getTask().getResource(),\n-                    profile.getConnector());\n+                    profile.getConnector(),\n+                    false);\n             if (userKey.isPresent()) {\n                 resolvedMemberships.put(userKey.get(), memb);\n             } else {"},{"sha":"95a4dc14e439f6cecc83237709c5d985ca801190","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":19,"deletions":4,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.common.lib.collections.IteratorChain;\n import org.apache.syncope.common.lib.types.ConflictResolutionAction;\n import org.apache.commons.lang3.tuple.MutablePair;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -123,7 +124,11 @@ public String currentStatus() {\n         return status.get();\n     }\n \n-    protected void setGroupOwners(final GroupPullResultHandler ghandler) {\n+    protected void setGroupOwners(\n+            final GroupPullResultHandler ghandler,\n+            final boolean userIgnoreCaseMatch,\n+            final boolean groupIgnoreCaseMatch) {\n+\n         ghandler.getGroupOwnerMap().entrySet().stream().map(entry -> {\n             Group group = groupDAO.find(entry.getKey());\n             if (group == null) {\n@@ -137,7 +142,8 @@ protected void setGroupOwners(final GroupPullResultHandler ghandler) {\n                         anyTypeDAO.findUser(),\n                         entry.getValue(),\n                         ghandler.getProfile().getTask().getResource(),\n-                        ghandler.getProfile().getConnector());\n+                        ghandler.getProfile().getConnector(),\n+                        userIgnoreCaseMatch);\n \n                 if (userKey.isPresent()) {\n                     group.setUserOwner(userDAO.find(userKey.get()));\n@@ -146,7 +152,8 @@ protected void setGroupOwners(final GroupPullResultHandler ghandler) {\n                             anyTypeDAO.findGroup(),\n                             entry.getValue(),\n                             ghandler.getProfile().getTask().getResource(),\n-                            ghandler.getProfile().getConnector());\n+                            ghandler.getProfile().getConnector(),\n+                            groupIgnoreCaseMatch);\n \n                     if (groupKey.isPresent()) {\n                         group.setGroupOwner(groupDAO.find(groupKey.get()));\n@@ -272,8 +279,16 @@ protected String doExecuteProvisioning(\n         // ...then provisions for any types\n         SyncopePullResultHandler handler;\n         GroupPullResultHandler ghandler = buildGroupHandler();\n+        boolean userIgnoreCaseMatch = false;\n+        boolean groupIgnoreCaseMatch = false;\n         for (Provision provision : pullTask.getResource().getProvisions()) {\n             if (provision.getMapping() != null) {\n+                if (provision.getAnyType().getKind() == AnyTypeKind.USER) {\n+                    userIgnoreCaseMatch = provision.isIgnoreCaseMatch();\n+                } else if (provision.getAnyType().getKind() == AnyTypeKind.GROUP) {\n+                    groupIgnoreCaseMatch = provision.isIgnoreCaseMatch();\n+                }\n+\n                 status.set(\"Pulling \" + provision.getObjectClass().getObjectClassValue());\n \n                 switch (provision.getAnyType().getKind()) {\n@@ -340,7 +355,7 @@ protected String doExecuteProvisioning(\n             }\n         }\n         try {\n-            setGroupOwners(ghandler);\n+            setGroupOwners(ghandler, userIgnoreCaseMatch, groupIgnoreCaseMatch);\n         } catch (Exception e) {\n             LOG.error(\"While setting group owners\", e);\n         }"},{"sha":"0d61f1b4de1143d2f9ef1cf8cee811911752c34b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullUtils.java","status":"modified","additions":60,"deletions":22,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -58,16 +58,19 @@\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.Name;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n-import org.identityconnectors.framework.common.objects.filter.EqualsFilter;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n import org.apache.syncope.core.persistence.api.dao.PullCorrelationRule;\n+import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n+import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n+import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.apache.syncope.core.provisioning.api.data.ItemTransformer;\n import org.apache.syncope.core.spring.ImplementationManager;\n+import org.identityconnectors.framework.common.objects.filter.FilterBuilder;\n \n @Transactional(readOnly = true)\n @Component\n@@ -118,7 +121,8 @@ public Optional<String> match(\n             final AnyType anyType,\n             final String name,\n             final ExternalResource resource,\n-            final Connector connector) {\n+            final Connector connector,\n+            final boolean ignoreCaseMatch) {\n \n         Optional<? extends Provision> provision = resource.getProvision(anyType);\n         if (!provision.isPresent()) {\n@@ -129,9 +133,11 @@ public Optional<String> match(\n \n         AnyUtils anyUtils = anyUtilsFactory.getInstance(anyType.getKind());\n \n-        final List<ConnectorObject> found = new ArrayList<>();\n+        List<ConnectorObject> found = new ArrayList<>();\n+        Name nameAttr = new Name(name);\n         connector.search(provision.get().getObjectClass(),\n-                new EqualsFilter(new Name(name)), obj -> found.add(obj),\n+                ignoreCaseMatch ? FilterBuilder.equalsIgnoreCase(nameAttr) : FilterBuilder.equalTo(nameAttr),\n+                obj -> found.add(obj),\n                 MappingUtils.buildOperationOptions(\n                         MappingUtils.getPullItems(provision.get().getMapping().getItems()).iterator()));\n \n@@ -211,20 +217,45 @@ private List<String> findByConnObjectKey(\n                     break;\n \n                 case \"username\":\n-                    User user = userDAO.findByUsername(connObjectKey);\n-                    if (user != null) {\n-                        result.add(user.getKey());\n+                    if (provision.getAnyType().getKind() == AnyTypeKind.USER && provision.isIgnoreCaseMatch()) {\n+                        AnyCond cond = new AnyCond(AttributeCond.Type.IEQ);\n+                        cond.setSchema(\"username\");\n+                        cond.setExpression(connObjectKey);\n+                        result.addAll(searchDAO.search(SearchCond.getLeafCond(cond), AnyTypeKind.USER).\n+                                stream().map(Entity::getKey).collect(Collectors.toList()));\n+                    } else {\n+                        User user = userDAO.findByUsername(connObjectKey);\n+                        if (user != null) {\n+                            result.add(user.getKey());\n+                        }\n                     }\n                     break;\n \n                 case \"name\":\n-                    Group group = groupDAO.findByName(connObjectKey);\n-                    if (group != null) {\n-                        result.add(group.getKey());\n+                    if (provision.getAnyType().getKind() == AnyTypeKind.GROUP && provision.isIgnoreCaseMatch()) {\n+                        AnyCond cond = new AnyCond(AttributeCond.Type.IEQ);\n+                        cond.setSchema(\"name\");\n+                        cond.setExpression(connObjectKey);\n+                        result.addAll(searchDAO.search(SearchCond.getLeafCond(cond), AnyTypeKind.GROUP).\n+                                stream().map(Entity::getKey).collect(Collectors.toList()));\n+                    } else {\n+                        Group group = groupDAO.findByName(connObjectKey);\n+                        if (group != null) {\n+                            result.add(group.getKey());\n+                        }\n                     }\n-                    AnyObject anyObject = anyObjectDAO.findByName(connObjectKey);\n-                    if (anyObject != null) {\n-                        result.add(anyObject.getKey());\n+\n+                    if (provision.getAnyType().getKind() == AnyTypeKind.ANY_OBJECT && provision.isIgnoreCaseMatch()) {\n+                        AnyCond cond = new AnyCond(AttributeCond.Type.IEQ);\n+                        cond.setSchema(\"name\");\n+                        cond.setExpression(connObjectKey);\n+                        result.addAll(searchDAO.search(SearchCond.getLeafCond(cond), AnyTypeKind.ANY_OBJECT).\n+                                stream().map(Entity::getKey).collect(Collectors.toList()));\n+                    } else {\n+                        AnyObject anyObject = anyObjectDAO.findByName(connObjectKey);\n+                        if (anyObject != null) {\n+                            result.add(anyObject.getKey());\n+                        }\n                     }\n                     break;\n \n@@ -247,15 +278,15 @@ private List<String> findByConnObjectKey(\n                         }\n                     }\n \n-                    result.addAll(anyUtils.dao().\n-                            findByPlainAttrValue(intAttrName.getSchemaName(), value).stream().\n-                            map(Entity::getKey).collect(Collectors.toList()));\n+                    result.addAll(anyUtils.dao().findByPlainAttrValue(\n+                            intAttrName.getSchemaName(), value, provision.isIgnoreCaseMatch()).\n+                            stream().map(Entity::getKey).collect(Collectors.toList()));\n                     break;\n \n                 case DERIVED:\n-                    result.addAll(anyUtils.dao().\n-                            findByDerAttrValue(intAttrName.getSchemaName(), connObjectKey).stream().\n-                            map(Entity::getKey).collect(Collectors.toList()));\n+                    result.addAll(anyUtils.dao().findByDerAttrValue(\n+                            intAttrName.getSchemaName(), connObjectKey, provision.isIgnoreCaseMatch()).\n+                            stream().map(Entity::getKey).collect(Collectors.toList()));\n                     break;\n \n                 default:\n@@ -325,7 +356,7 @@ public List<String> match(\n         String connObjectKey = null;\n \n         Optional<? extends OrgUnitItem> connObjectKeyItem = orgUnit.getConnObjectKeyItem();\n-        if (connObjectKeyItem != null) {\n+        if (connObjectKeyItem.isPresent()) {\n             Attribute connObjectKeyAttr = connObj.getAttributeByName(connObjectKeyItem.get().getExtAttrName());\n             if (connObjectKeyAttr != null) {\n                 connObjectKey = AttributeUtil.getStringValue(connObjectKeyAttr);\n@@ -357,8 +388,15 @@ public List<String> match(\n                 break;\n \n             case \"name\":\n-                result.addAll(realmDAO.findByName(connObjectKey).stream().\n-                        map(Entity::getKey).collect(Collectors.toList()));\n+                if (orgUnit.isIgnoreCaseMatch()) {\n+                    final String realmName = connObjectKey;\n+                    result.addAll(realmDAO.findAll().stream().\n+                            filter(r -> r.getName().equalsIgnoreCase(realmName)).\n+                            map(Entity::getKey).collect(Collectors.toList()));\n+                } else {\n+                    result.addAll(realmDAO.findByName(connObjectKey).stream().\n+                            map(Entity::getKey).collect(Collectors.toList()));\n+                }\n                 break;\n \n             case \"fullpath\":"},{"sha":"d0d2b21e45a17f088c8760b64d64c76baf6b01ac","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/SinglePullJobDelegate.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n import org.apache.syncope.common.lib.collections.IteratorChain;\n@@ -166,8 +167,16 @@ public List<ProvisioningReport> pull(\n                     handler,\n                     options);\n \n+            Optional<? extends Provision> userProvision = provision.getResource().getProvision(anyTypeDAO.findUser());\n+            boolean userIgnoreCaseMatch = userProvision.isPresent()\n+                    ? userProvision.get().isIgnoreCaseMatch()\n+                    : false;\n+            Optional<? extends Provision> groupProvision = provision.getResource().getProvision(anyTypeDAO.findGroup());\n+            boolean groupIgnoreCaseMatch = groupProvision.isPresent()\n+                    ? groupProvision.get().isIgnoreCaseMatch()\n+                    : false;\n             try {\n-                setGroupOwners(ghandler);\n+                setGroupOwners(ghandler, userIgnoreCaseMatch, groupIgnoreCaseMatch);\n             } catch (Exception e) {\n                 LOG.error(\"While setting group owners\", e);\n             }"},{"sha":"3393753a73b16e2e9f94670c3bbb18013a3aa01f","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2UserManager.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -155,13 +155,13 @@ public List<String> findMatchingUser(final String keyValue, final String idpKey)\n                         }\n                     }\n \n-                    result.addAll(userDAO.findByPlainAttrValue(intAttrName.getSchemaName(), value).stream().\n-                            map(user -> user.getUsername()).collect(Collectors.toList()));\n+                    result.addAll(userDAO.findByPlainAttrValue(intAttrName.getSchemaName(), value, false).stream().\n+                            map(User::getUsername).collect(Collectors.toList()));\n                     break;\n \n                 case DERIVED:\n-                    result.addAll(userDAO.findByDerAttrValue(intAttrName.getSchemaName(), transformed).stream().\n-                            map(user -> user.getUsername()).collect(Collectors.toList()));\n+                    result.addAll(userDAO.findByDerAttrValue(intAttrName.getSchemaName(), transformed, false).stream().\n+                            map(User::getUsername).collect(Collectors.toList()));\n                     break;\n \n                 default:"},{"sha":"f8213d02a73ec9f419e7737ee8e97fab2a82276b","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -356,7 +356,7 @@ under the License.\n   <properties>\n     <syncope.version>${project.version}</syncope.version>\n \n-    <connid.version>1.4.3.0</connid.version>\n+    <connid.version>1.4.4.0-SNAPSHOT</connid.version>\n     <connid.soap.version>1.4.2-SNAPSHOT</connid.soap.version>\n     <connid.rest.version>1.0.2</connid.rest.version>\n     <connid.database.version>2.2.5</connid.database.version>"},{"sha":"1cd54ed71a4e69ef2c53945aa96576e49853fc73","filename":"src/main/asciidoc/reference-guide/concepts/externalresources.adoc","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fexternalresources.adoc?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -155,6 +155,8 @@ Besides the items documented above, some more data needs to be specified for a c\n http://connid.tirasa.net/apidocs/1.4/org/identityconnectors/framework/common/objects/ObjectClass.html[object class^]\n shall be used during communication with the Identity Store; predefined are `\\\\__ACCOUNT__` for Users and \n `\\\\__GROUP__` for Groups\n+* whether matches between user / group / any object's attribute values and their counterparts on the Identity Store\n+should be performed in a case-sensitive fashion or not\n * Object link - only required by some connector bundles as\n https://connid.atlassian.net/wiki/display/BASE/LDAP[LDAP^] and\n https://connid.atlassian.net/wiki/pages/viewpage.action?pageId=360482[Active Directory^], generally specifies the model"},{"sha":"2d88bf443cc3eca451d63e90a29d2947a3a23871","filename":"src/main/asciidoc/reference-guide/concepts/provisioning/pull.adoc","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a3a05e2341ab5b1b61f293882d4038c7050259c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpull.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a3a05e2341ab5b1b61f293882d4038c7050259c/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpull.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fconcepts%2Fprovisioning%2Fpull.adoc?ref=1a3a05e2341ab5b1b61f293882d4038c7050259c","patch":"@@ -25,8 +25,8 @@ Pull is the mechanism used to acquire identity data from Identity Stores; for ea\n Pull task execution involves querying the external resource and then processing each entity in an isolated transaction; \n a retrieved entity can be:\n \n-. _matching_ if a corresponding internal entity was found, according to the <<policies-pull,pull policy>> set for the\n-enclosing external resource;\n+. _matching_ if a corresponding internal entity was found, according to the <<mapping,mapping>> of - or the\n+<<policies-pull,pull policy>> set for, if present - the enclosing external resource;\n . _unmatching_ otherwise.\n \n Once this has been assessed, entities are processed according to the matching / unmatching rules specified for the pull task:"}]}