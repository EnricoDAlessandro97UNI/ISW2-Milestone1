{"sha":"223f29a9547eac2c615bc4f18120ebc0cad0bd0d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIyM2YyOWE5NTQ3ZWFjMmM2MTViYzRmMTgxMjBlYmMwY2FkMGJkMGQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-02-15T18:04:47Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-02-15T18:05:01Z"},"message":"[SYNCOPE-1016] Adding PlainAttrListener","tree":{"sha":"3e272ea7dcac2dbf087c1d28f2053ffeea08c720","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3e272ea7dcac2dbf087c1d28f2053ffeea08c720"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/223f29a9547eac2c615bc4f18120ebc0cad0bd0d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/223f29a9547eac2c615bc4f18120ebc0cad0bd0d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/223f29a9547eac2c615bc4f18120ebc0cad0bd0d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6bbd4cf550db513842ee6730dbb82c7602ab90f0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6bbd4cf550db513842ee6730dbb82c7602ab90f0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6bbd4cf550db513842ee6730dbb82c7602ab90f0"}],"stats":{"total":129,"additions":108,"deletions":21},"files":[{"sha":"cf210e8ddee379b9a434060950041d98b6759dad","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractPlainAttr.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java?ref=223f29a9547eac2c615bc4f18120ebc0cad0bd0d","patch":"@@ -22,6 +22,7 @@\n import java.util.Collections;\n import java.util.List;\n import javax.persistence.Column;\n+import javax.persistence.EntityListeners;\n import javax.persistence.FetchType;\n import javax.persistence.ManyToOne;\n import javax.persistence.MappedSuperclass;\n@@ -38,6 +39,7 @@\n \n @MappedSuperclass\n @PlainAttrCheck\n+@EntityListeners(value = PlainAttrListener.class)\n public abstract class AbstractPlainAttr<O extends Any<?>> extends AbstractGeneratedKeyEntity implements PlainAttr<O> {\n \n     private static final long serialVersionUID = -9115431608821806124L;"},{"sha":"2009a78f09862c4d3aa18c7286962c61fe3071fc","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractSysInfoListener.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractSysInfoListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractSysInfoListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractSysInfoListener.java?ref=223f29a9547eac2c615bc4f18120ebc0cad0bd0d","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity;\n+\n+import java.util.Date;\n+import org.apache.syncope.core.persistence.api.entity.AnnotatedEntity;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class AbstractSysInfoListener {\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(AnnotatedEntityListener.class);\n+\n+    protected void setSysInfoOnAnnotatedEntity(final AnnotatedEntity entity) {\n+        String username = AuthContextUtils.getUsername();\n+        LOG.debug(\"Set system properties for '{}'\", entity);\n+\n+        Date now = new Date();\n+\n+        if (entity.getCreationDate() == null) {\n+            LOG.debug(\"Set creation date '{}' and creator '{}' for '{}'\", now, username, entity);\n+            entity.setCreationDate(now);\n+            entity.setCreator(username);\n+        }\n+\n+        LOG.debug(\"Set last change date '{}' and modifier '{}' for '{}'\", now, username, entity);\n+        entity.setLastModifier(username);\n+        entity.setLastChangeDate(now);\n+    }\n+}"},{"sha":"b6a47a601a4d68d78c94e5d30544de0914ca9b4a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AnnotatedEntityListener.java","status":"modified","additions":2,"deletions":21,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnnotatedEntityListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnnotatedEntityListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAnnotatedEntityListener.java?ref=223f29a9547eac2c615bc4f18120ebc0cad0bd0d","patch":"@@ -18,34 +18,15 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity;\n \n-import java.util.Date;\n import javax.persistence.PrePersist;\n import javax.persistence.PreUpdate;\n import org.apache.syncope.core.persistence.api.entity.AnnotatedEntity;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n-public class AnnotatedEntityListener {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(AnnotatedEntityListener.class);\n+public class AnnotatedEntityListener extends AbstractSysInfoListener {\n \n     @PrePersist\n     @PreUpdate\n     public void setSysInfo(final AnnotatedEntity entity) {\n-        String username = AuthContextUtils.getUsername();\n-        LOG.debug(\"Set system properties for '{}'\", entity);\n-\n-        Date now = new Date();\n-\n-        if (entity.getCreationDate() == null) {\n-            LOG.debug(\"Set creation date '{}' and creator '{}' for '{}'\", now, username, entity);\n-            entity.setCreationDate(now);\n-            entity.setCreator(username);\n-        }\n-\n-        LOG.debug(\"Set last change date '{}' and modifier '{}' for '{}'\", now, username, entity);\n-        entity.setLastModifier(username);\n-        entity.setLastChangeDate(now);\n+        setSysInfoOnAnnotatedEntity(entity);\n     }\n }"},{"sha":"6471ecd8c39178a7f4289e22a7bae0d6ee2a56ea","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/PlainAttrListener.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainAttrListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainAttrListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainAttrListener.java?ref=223f29a9547eac2c615bc4f18120ebc0cad0bd0d","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity;\n+\n+import javax.persistence.PrePersist;\n+import javax.persistence.PreUpdate;\n+import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n+\n+public class PlainAttrListener extends AbstractSysInfoListener {\n+\n+    @PrePersist\n+    @PreUpdate\n+    public void setSysInfoOnOwner(final PlainAttr<?> plainAttr) {\n+        LOG.debug(\"Set system properties for owner of '{}'\", plainAttr);\n+        setSysInfoOnAnnotatedEntity(plainAttr.getOwner());\n+    }\n+}"},{"sha":"f9f02bae202013d255115102cd5daa57d4d5398d","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/UserTest.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/223f29a9547eac2c615bc4f18120ebc0cad0bd0d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FUserTest.java?ref=223f29a9547eac2c615bc4f18120ebc0cad0bd0d","patch":"@@ -25,6 +25,7 @@\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.util.Date;\n import java.util.List;\n import java.util.UUID;\n import org.apache.commons.collections4.IterableUtils;\n@@ -267,4 +268,27 @@ public void issueSYNCOPE800() {\n         list = userDAO.findByDerAttrValue(\"kprefix\", \"k\" + firstname);\n         assertEquals(\"did not get expected number of users \", 1, list.size());\n     }\n+\n+    @Test\n+    public void issueSYNCOPE1016() {\n+        User user = userDAO.findByUsername(\"vivaldi\");\n+        Date initial = user.getLastChangeDate();\n+        assertNotNull(initial);\n+\n+        UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n+        attr.setOwner(user);\n+        attr.setSchema(plainSchemaDAO.find(\"obscure\"));\n+        attr.add(\"testvalue\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n+        user.add(attr);\n+\n+        userDAO.save(user);\n+\n+        userDAO.flush();\n+\n+        user = userDAO.findByUsername(\"vivaldi\");\n+        Date afterwards = user.getLastChangeDate();\n+        assertNotNull(afterwards);\n+\n+        assertTrue(afterwards.after(initial));\n+    }\n }"}]}