{"sha":"26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI2YTRjZDI2Y2M4YzM1NWY3YWU5NTFhZTI0NTVkMTE3Y2QwZjMxZmQ=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-02T14:21:18Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-02T14:21:18Z"},"message":"Added group command, SYNCOPE-158","tree":{"sha":"53d2df94f361fe213a71242784b1b448cc862043","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/53d2df94f361fe213a71242784b1b448cc862043"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"0892af81534bc768132f12854510730712bde11c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0892af81534bc768132f12854510730712bde11c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0892af81534bc768132f12854510730712bde11c"}],"stats":{"total":731,"additions":702,"deletions":29},"files":[{"sha":"7b417ea8932f1a6f88acb14491cc36e2ee48f945","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/Input.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FInput.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -65,19 +65,23 @@ public String getOption() {\n     public String[] getParameters() {\n         return parameters;\n     }\n-    \n+\n     public List<String> listParameters() {\n         return Arrays.asList(parameters);\n     }\n \n     public String firstParameter() {\n         return parameters[0];\n     }\n-    \n+\n     public String secondParameter() {\n         return parameters[1];\n     }\n \n+    public String thirdParameter() {\n+        return parameters[2];\n+    }\n+\n     public String lastParameter() {\n         return parameters[parameters.length - 1];\n     }"},{"sha":"e0f7986e5a0b3d209545ade4d6168c8e0079a7a5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/CommonsResultManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -57,7 +57,7 @@ public void commandOptionError(final String message) {\n         Messages.printCommandOptionMessage(message);\n     }\n \n-    public void defaultError(final String option, final String helpMessage) {\n+    public void defaultOptionMessage(final String option, final String helpMessage) {\n         Messages.printDefaultMessage(option, helpMessage);\n     }\n "},{"sha":"4ab4a38a82fc22e752f376afcb26386636a640bb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/configuration/ConfigurationCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconfiguration%2FConfigurationCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -66,7 +66,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new ConfigurationResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new ConfigurationResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n                 break;\n         }\n     }"},{"sha":"22892a9ea123cb4e8ee18d7fa2412fc4979d48b9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -73,7 +73,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new ConnectorResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new ConnectorResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"d380bd448d42d5f58ff5a9b0b1db8fd6edfff9cf","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -67,7 +67,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new EntitlementResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new EntitlementResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"b8f53a5575908315e95f74030ce7265f3356cfdb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/AbstractGroupCommand.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FAbstractGroupCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FAbstractGroupCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FAbstractGroupCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.group;\n+\n+public abstract class AbstractGroupCommand {\n+\n+    protected final GroupSyncopeOperations groupSyncopeOperations = new GroupSyncopeOperations();\n+\n+    protected final GroupResultManager groupResultManager = new GroupResultManager();\n+\n+}"},{"sha":"97edbc5f3657fb2cdb2970b6020ce4b6a87dfdf3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupCommand.java","status":"added","additions":124,"deletions":0,"changes":124,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -0,0 +1,124 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.group;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+@Command(name = \"group\")\n+public class GroupCommand extends AbstractCommand {\n+\n+    private static final String HELP_MESSAGE = \"\\nUsage: group [options]\\n\"\n+            + \"  Options:\\n\"\n+            + \"    --help \\n\"\n+            + \"    --details \\n\"\n+            + \"    --list \\n\"\n+            + \"    --read \\n\"\n+            + \"       Syntax: --read {GROUP-ID} {GROUP-ID} [...]\\n\"\n+            + \"    --read-attr-by-schema-type {GROUP-ID} {SCHEMA-TYPE}\\n\"\n+            + \"       Schema type: PLAIN / DERIVED / VIRTUAL\\n\"\n+            + \"    --read-attr-by-schema {GROUP-ID} {SCHEMA-TYPE} {SCHEMA-NAME}\\n\"\n+            + \"       Schema type: PLAIN / DERIVED / VIRTUAL\\n\"\n+            + \"    --delete \\n\"\n+            + \"       Syntax: --delete {GROUP-ID} {GROUP-ID} [...]\\n\";\n+\n+    @Override\n+    public void execute(final Input input) {\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(GroupOptions.HELP.getOptionName());\n+        }\n+        switch (GroupOptions.fromName(input.getOption())) {\n+            case DETAILS:\n+                new GroupDetails(input).details();\n+                break;\n+            case LIST:\n+                new GroupList(input).list();\n+                break;\n+            case READ:\n+                new GroupRead(input).read();\n+                break;\n+            case READ_ATTRIBUTES_BY_SCHEMA_TYPE:\n+                new GroupReadAttributesBySchemaType(input).read();\n+                break;\n+            case READ_ATTRIBUTES_BY_SCHEMA:\n+                new GroupReadAttributeBySchemaTypeAndSchemaName(input).read();\n+                break;\n+            case DELETE:\n+                new GroupDelete(input).delete();\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                new GroupResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n+        }\n+    }\n+\n+    @Override\n+    public String getHelpMessage() {\n+        return HELP_MESSAGE;\n+    }\n+\n+    private enum GroupOptions {\n+\n+        HELP(\"--help\"),\n+        DETAILS(\"--details\"),\n+        LIST(\"--list\"),\n+        READ(\"--read\"),\n+        READ_ATTRIBUTES_BY_SCHEMA(\"--read-attr-by-schema\"),\n+        READ_ATTRIBUTES_BY_SCHEMA_TYPE(\"--read-attr-by-schema-type\"),\n+        DELETE(\"--delete\");\n+\n+        private final String optionName;\n+\n+        GroupOptions(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static GroupOptions fromName(final String name) {\n+            GroupOptions optionToReturn = HELP;\n+            for (final GroupOptions option : GroupOptions.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n+                }\n+            }\n+            return optionToReturn;\n+        }\n+\n+        public static List<String> toList() {\n+            final List<String> options = new ArrayList<>();\n+            for (final GroupOptions value : values()) {\n+                options.add(value.getOptionName());\n+            }\n+            return options;\n+        }\n+    }\n+}"},{"sha":"279f9b20fd22671cb19f6b2e234e9cdc05139606","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupDelete.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDelete.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.group;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class GroupDelete extends AbstractGroupCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GroupDelete.class);\n+\n+    private static final String DELETE_HELP_MESSAGE = \"group --delete {GROUP-ID} {GROUP-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public GroupDelete(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void delete() {\n+        if (input.parameterNumber() >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    groupSyncopeOperations.delete(parameter);\n+                    groupResultManager.deletedMessage(\"Group\", parameter);\n+                } catch (final SyncopeClientException ex) {\n+                    LOG.error(\"Error deleting group\", ex);\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        groupResultManager.notFoundError(\"group\", parameter);\n+                    } else {\n+                        groupResultManager.genericError(ex.getMessage());\n+                    }\n+                } catch (final NumberFormatException ex) {\n+                    groupResultManager.numberFormatException(\"group\", parameter);\n+                }\n+            }\n+        } else {\n+            groupResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"583c7654fbabf892f3898ceae02f2fc3166c63c7","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupDetails.java","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupDetails.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.group;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.map.LinkedMap;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class GroupDetails extends AbstractGroupCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GroupDetails.class);\n+\n+    private static final String DETAILS_HELP_MESSAGE = \"group --details\";\n+\n+    private final Input input;\n+\n+    public GroupDetails(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void details() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                final Map<String, String> details = new LinkedMap<>();\n+                final List<GroupTO> groupTOs = groupSyncopeOperations.list();\n+                int withoudResources = 0;\n+                int withoudAttributes = 0;\n+                int onRootRealm = 0;\n+                for (final GroupTO groupTO : groupTOs) {\n+                    if (groupTO.getResources() == null || groupTO.getResources().isEmpty()) {\n+                        withoudResources++;\n+                    }\n+                    if ((groupTO.getPlainAttrs() == null || groupTO.getPlainAttrs().isEmpty())\n+                            && (groupTO.getDerAttrs() == null || groupTO.getDerAttrs().isEmpty())\n+                            && (groupTO.getVirAttrs() == null || groupTO.getVirAttrs().isEmpty())) {\n+                        withoudAttributes++;\n+                    }\n+                    if (SyncopeConstants.ROOT_REALM.equals(groupTO.getRealm())) {\n+                        onRootRealm++;\n+                    }\n+                }\n+                details.put(\"Total number\", String.valueOf(groupTOs.size()));\n+                details.put(\"Without resources\", String.valueOf(withoudResources));\n+                details.put(\"Without attributes\", String.valueOf(withoudAttributes));\n+                details.put(\"On root realm\", String.valueOf(onRootRealm));\n+                details.put(\"On the other realm\", String.valueOf(groupTOs.size() - onRootRealm));\n+                groupResultManager.printDetails(details);\n+            } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading details about realm\", ex);\n+                groupResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            groupResultManager.unnecessaryParameters(input.listParameters(), DETAILS_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"f5996bbc840f3ce4e206e00e751cc2f3f5be3e0c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupList.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupList.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.group;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class GroupList extends AbstractGroupCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GroupList.class);\n+\n+    private static final String LIST_HELP_MESSAGE = \"group --list\";\n+\n+    private final Input input;\n+\n+    public GroupList(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void list() {\n+        if (input.parameterNumber() == 0) {\n+            try {\n+                groupResultManager.printGroups(groupSyncopeOperations.list());\n+            } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error listing group\", ex);\n+                groupResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            groupResultManager.unnecessaryParameters(input.listParameters(), LIST_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"6adb8b7fddf9f6ce0012a8dd3367c055e264ff79","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupRead.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupRead.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.group;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class GroupRead extends AbstractGroupCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GroupRead.class);\n+\n+    private static final String READ_HELP_MESSAGE = \"group --read {GROUP-ID} {GROUP-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public GroupRead(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.parameterNumber() >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    groupResultManager.printGroup(groupSyncopeOperations.read(parameter));\n+                } catch (final SyncopeClientException ex) {\n+                    LOG.error(\"Error reading group\", ex);\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        groupResultManager.notFoundError(\"Group\", parameter);\n+                    } else {\n+                        groupResultManager.genericError(ex.getMessage());\n+                    }\n+                } catch (final NumberFormatException ex) {\n+                    groupResultManager.numberFormatException(\"group\", parameter);\n+                }\n+            }\n+        } else {\n+            groupResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"42432f3ea20e2ddb3f9f4913fff1e0fd03a1787b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupReadAttributeBySchemaTypeAndSchemaName.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributeBySchemaTypeAndSchemaName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributeBySchemaTypeAndSchemaName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributeBySchemaTypeAndSchemaName.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.group;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.util.CommandUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class GroupReadAttributeBySchemaTypeAndSchemaName extends AbstractGroupCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GroupReadAttributeBySchemaTypeAndSchemaName.class);\n+\n+    private static final String READ_HELP_MESSAGE\n+            = \"group --read-attr-by-schema {GROUP-ID} {SCHEMA-TYPE} {SCHEMA-NAME}\\n\"\n+            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n+\n+    private final Input input;\n+\n+    public GroupReadAttributeBySchemaTypeAndSchemaName(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.parameterNumber() == 3) {\n+            try {\n+                groupResultManager.printAttribute(groupSyncopeOperations.readAttribute(\n+                        input.firstParameter(), input.secondParameter(), input.thirdParameter()));\n+            } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading group\", ex);\n+                groupResultManager.genericError(ex.getMessage());\n+            } catch (final NumberFormatException ex) {\n+                groupResultManager.numberFormatException(\"group\", input.firstParameter());\n+            } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error reading schema\", ex);\n+                groupResultManager.typeNotValidError(\n+                        \"schema\", input.secondParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n+            }\n+        } else {\n+            groupResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"a707a8c5e44f1eaf7e0734cb5d19797536109dc6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupReadAttributesBySchemaType.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributesBySchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributesBySchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupReadAttributesBySchemaType.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.group;\n+\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.util.CommandUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class GroupReadAttributesBySchemaType extends AbstractGroupCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GroupReadAttributesBySchemaType.class);\n+\n+    private static final String READ_HELP_MESSAGE = \"group --read-attr-by-schema-type {GROUP-ID} {SCHEMA-TYPE}\\n\"\n+            + \"   Schema type: PLAIN / DERIVED / VIRTUAL\";\n+\n+    private final Input input;\n+\n+    public GroupReadAttributesBySchemaType(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.parameterNumber() == 2) {\n+            try {\n+                groupResultManager.printAttributes(groupSyncopeOperations.readAttributes(\n+                        input.firstParameter(), input.secondParameter()));\n+            } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error reading group\", ex);\n+                if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    groupResultManager.notFoundError(\"Group\", input.firstParameter());\n+                } else {\n+                    groupResultManager.genericError(ex.getMessage());\n+                }\n+            } catch (final NumberFormatException ex) {\n+                groupResultManager.numberFormatException(\"group\", input.firstParameter());\n+            } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error reading schema\", ex);\n+                groupResultManager.typeNotValidError(\n+                        \"schema\", input.secondParameter(), CommandUtils.fromEnumToArray(SchemaType.class));\n+            }\n+        } else {\n+            groupResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"d8dda12ca416be994d076a709e6c9851bd753717","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupResultManager.java","status":"added","additions":85,"deletions":0,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupResultManager.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.group;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+\n+public class GroupResultManager extends CommonsResultManager {\n+\n+    public void printGroups(final List<GroupTO> groupTOs) {\n+        System.out.println(\"\");\n+        for (final GroupTO groupTO : groupTOs) {\n+            printGroup(groupTO);\n+        }\n+    }\n+\n+    public void printGroup(final GroupTO groupTO) {\n+        System.out.println(\" > GROUP ID: \" + groupTO.getKey());\n+        System.out.println(\"    name: \" + groupTO.getName());\n+        System.out.println(\"    display name: \" + groupTO.getDisplayName());\n+        System.out.println(\"    type: \" + groupTO.getType());\n+        System.out.println(\"    realm: \" + groupTO.getRealm());\n+        System.out.println(\"    status: \" + groupTO.getStatus());\n+        System.out.println(\"    user owner: \" + groupTO.getUserOwner());\n+        System.out.println(\"    group owner: \" + groupTO.getGroupOwner());\n+        System.out.println(\"    RESOURCES: \");\n+        printResources(groupTO.getResources());\n+        System.out.println(\"    PLAIN ATTRIBUTES: \");\n+        printAttributes(groupTO.getPlainAttrs());\n+        System.out.println(\"    DERIVED ATTRIBUTES: \");\n+        printAttributes(groupTO.getDerAttrs());\n+        System.out.println(\"    VIRTUAL ATTRIBUTES: \");\n+        printAttributes(groupTO.getVirAttrs());\n+        System.out.println(\"\");\n+    }\n+\n+    private void printResources(final Set<String> resources) {\n+        for (final String resource : resources) {\n+            System.out.println(\"      - \" + resource);\n+        }\n+    }\n+\n+    public void printAttributes(final Set<AttrTO> attributes) {\n+        for (final AttrTO attribute : attributes) {\n+            printAttribute(attribute);\n+        }\n+    }\n+\n+    public void printAttribute(final AttrTO attribute) {\n+        final StringBuilder attributeMessageBuilder = new StringBuilder();\n+        attributeMessageBuilder.append(\"      \")\n+                .append(attribute.getSchema())\n+                .append(\": \")\n+                .append(attribute.getValues());\n+        if (attribute.isReadonly()) {\n+            attributeMessageBuilder.append(\" - is readonly\");\n+        }\n+        System.out.println(attributeMessageBuilder.toString());\n+        System.out.println(\"\");\n+    }\n+\n+    public void printDetails(final Map<String, String> details) {\n+        printDetails(\"groups details\", details);\n+    }\n+}"},{"sha":"744fbe83fb401b55b4446f67ec929fa435fcf3f0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupSyncopeOperations.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupSyncopeOperations.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.group;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n+import org.apache.syncope.common.rest.api.service.GroupService;\n+\n+public class GroupSyncopeOperations {\n+\n+    private final GroupService groupService = SyncopeServices.get(GroupService.class);\n+\n+    public List<GroupTO> list() {\n+        return groupService.list(new AnyListQuery()).getResult();\n+    }\n+\n+    public GroupTO read(final String groupId) {\n+        return groupService.read(Long.valueOf(groupId));\n+    }\n+\n+    public Set<AttrTO> readAttributes(final String groupId, final String schemaType) {\n+        return groupService.read(Long.valueOf(groupId), SchemaType.valueOf(schemaType));\n+    }\n+\n+    public AttrTO readAttribute(final String groupId, final String schemaType, final String schema) {\n+        return groupService.read(Long.valueOf(groupId), SchemaType.valueOf(schemaType), schema);\n+    }\n+\n+    public void delete(final String groupId) {\n+        groupService.delete(Long.valueOf(groupId));\n+    }\n+\n+    public boolean exists(final String realm) {\n+        boolean exists = false;\n+        for (final GroupTO list : list()) {\n+            if (list.getName().equals(realm)) {\n+                exists = true;\n+            }\n+        }\n+        return exists;\n+    }\n+}"},{"sha":"a42ff8523eeb04bd6b2d441dd29ba6cf4f39586d","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/help/HelpCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fhelp%2FHelpCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -40,7 +40,7 @@ public void execute(final Input input) {\n                 new Help().help();\n                 break;\n             default:\n-                new HelpResultManager().defaultError(\n+                new HelpResultManager().defaultOptionMessage(\n                         input.getOption(), CommandUtils.helpMessage(\"info\", Options.toList()));\n                 break;\n         }"},{"sha":"a5c7cd8ac1a3535359f6bb8b2b77c350038e0053","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/InfoCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -108,7 +108,7 @@ public void execute(final Input input) {\n                 System.out.println(CommandUtils.helpMessage(\"info\", Options.toList()));\n                 break;\n             default:\n-                new InfoResultManager().defaultError(\n+                new InfoResultManager().defaultOptionMessage(\n                         input.getOption(), CommandUtils.helpMessage(\"info\", Options.toList()));\n                 break;\n         }"},{"sha":"b71eddd03cd9bca9c64c949ff6e85cd2165c512e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -58,7 +58,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                installResultManager.defaultError(input.getOption(), HELP_MESSAGE);\n+                installResultManager.defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"482c14e2ad42ed70ec24a46724e11c120c5e9b74","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/logger/LoggerCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Flogger%2FLoggerCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -76,7 +76,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new LoggerResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new LoggerResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"6c11f02c8593aaddaad4071f4dc78c4b76643fc2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -63,7 +63,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new PolicyResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new PolicyResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"9ed995bc6d3e1396cf3ee5c8e6de99a83cb9457f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -56,7 +56,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new QuestionResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new QuestionResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"1fcf38063c66428e0905eb7ff1e4b784540c7055","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/realm/RealmCommand.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frealm%2FRealmCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -28,7 +28,7 @@\n @Command(name = \"realm\")\n public class RealmCommand extends AbstractCommand {\n \n-    private static final String HELP_MESSAGE = \"1nUsage: realm [options]\\n\"\n+    private static final String HELP_MESSAGE = \"\\nUsage: realm [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n             + \"    --details \\n\"\n@@ -37,9 +37,9 @@ public class RealmCommand extends AbstractCommand {\n     @Override\n     public void execute(final Input input) {\n         if (StringUtils.isBlank(input.getOption())) {\n-            input.setOption(Options.HELP.getOptionName());\n+            input.setOption(RealmOptions.HELP.getOptionName());\n         }\n-        switch (Options.fromName(input.getOption())) {\n+        switch (RealmOptions.fromName(input.getOption())) {\n             case DETAILS:\n                 new RealmDetails(input).details();\n                 break;\n@@ -50,7 +50,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new RealmResultManager().deletedMessage(input.getOption(), HELP_MESSAGE);\n+                new RealmResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n \n@@ -59,15 +59,15 @@ public String getHelpMessage() {\n         return HELP_MESSAGE;\n     }\n \n-    private enum Options {\n+    private enum RealmOptions {\n \n         HELP(\"--help\"),\n         DETAILS(\"--details\"),\n         LIST(\"--list\");\n \n         private final String optionName;\n \n-        Options(final String optionName) {\n+        RealmOptions(final String optionName) {\n             this.optionName = optionName;\n         }\n \n@@ -79,9 +79,9 @@ public boolean equalsOptionName(final String otherName) {\n             return (otherName == null) ? false : optionName.equals(otherName);\n         }\n \n-        public static Options fromName(final String name) {\n-            Options optionToReturn = HELP;\n-            for (final Options option : Options.values()) {\n+        public static RealmOptions fromName(final String name) {\n+            RealmOptions optionToReturn = HELP;\n+            for (final RealmOptions option : RealmOptions.values()) {\n                 if (option.equalsOptionName(name)) {\n                     optionToReturn = option;\n                 }\n@@ -91,7 +91,7 @@ public static Options fromName(final String name) {\n \n         public static List<String> toList() {\n             final List<String> options = new ArrayList<>();\n-            for (final Options value : values()) {\n+            for (final RealmOptions value : values()) {\n                 options.add(value.getOptionName());\n             }\n             return options;"},{"sha":"560cf25a323626f125bb2a49734e366f6916ecaf","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -86,7 +86,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new ReportResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new ReportResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"4c137c0fbf7e3945572dab7ec5d18c5ac8ad0e09","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -61,7 +61,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new ResourceResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new ResourceResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"9d73020b8b966627c8a516f76ec5d0d02252531b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/role/RoleCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Frole%2FRoleCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -61,7 +61,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new RoleResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new RoleResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"8e7f1462f42f030b8fdc88cd68c30d16b71cc883","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/schema/SchemaCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fschema%2FSchemaCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -76,7 +76,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new SchemaResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new SchemaResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"96643ea133ef84793748f74d19da5230c58ae0c9","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -53,7 +53,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new WorkflowResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new WorkflowResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"bf76ff030bfddf8f65a8c3ac6f52760a1c0849b0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -87,7 +87,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new TaskResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new TaskResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "},{"sha":"d219f2408913d062b2b0293eedd625daad911747","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCommand.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/26a4cd26cc8c355f7ae951ae2455d117cd0f31fd/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java?ref=26a4cd26cc8c355f7ae951ae2455d117cd0f31fd","patch":"@@ -86,7 +86,7 @@ public void execute(final Input input) {\n                 System.out.println(HELP_MESSAGE);\n                 break;\n             default:\n-                new UserResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+                new UserResultManager().defaultOptionMessage(input.getOption(), HELP_MESSAGE);\n         }\n     }\n "}]}