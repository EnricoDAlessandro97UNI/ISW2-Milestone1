{"sha":"bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJjM2M2ZTYxNjViNjcwYzZjMGZiMGMxOTUxZGZhMWY0NTg3NWM2Y2I=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-27T15:02:25Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-10-27T15:31:25Z"},"message":"[SYNCOPE-152] Initial implementation as extension: user / group read and search (without filters, attributes or sort)","tree":{"sha":"c1d5d6278bb39594ef9848c5c8297bd298b4ae31","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c1d5d6278bb39594ef9848c5c8297bd298b4ae31"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"869b113de34c7e12853f624ce1b781eff8d1c3d9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/869b113de34c7e12853f624ce1b781eff8d1c3d9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/869b113de34c7e12853f624ce1b781eff8d1c3d9"}],"stats":{"total":1924,"additions":1923,"deletions":1},"files":[{"sha":"d518f0e4710e97bd8ad442caeda244e30b04c571","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/UserTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -60,6 +60,8 @@ public class UserTO extends AnyTO implements GroupableRelatableTO {\n \n     private String securityAnswer;\n \n+    private boolean suspended;\n+\n     private boolean mustChangePassword;\n \n     private final List<RelationshipTO> relationships = new ArrayList<>();\n@@ -185,6 +187,14 @@ public void setSecurityAnswer(final String securityAnswer) {\n         this.securityAnswer = securityAnswer;\n     }\n \n+    public boolean isSuspended() {\n+        return suspended;\n+    }\n+\n+    public void setSuspended(final boolean suspended) {\n+        this.suspended = suspended;\n+    }\n+\n     public boolean isMustChangePassword() {\n         return mustChangePassword;\n     }"},{"sha":"a2aa130826382a019c9237f5dd9d28b2c45b0f5f","filename":"ext/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fpom.xml?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -81,6 +81,7 @@ under the License.\n     <module>swagger-ui</module>\n     <module>saml2sp</module>\n     <module>elasticsearch</module>\n+    <module>scimv2</module>\n   </modules>\n \n </project>"},{"sha":"105853e6bc8fb4d0424362543b2179d5fa985e0c","filename":"ext/scimv2/pom.xml","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fpom.xml?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-ext</artifactId>\n+    <version>2.1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: SCIMv2</name>\n+  <description>Apache Syncope Ext: SCIMv2</description>\n+  <groupId>org.apache.syncope.ext</groupId>\n+  <artifactId>syncope-ext-scimv2</artifactId>\n+  <packaging>pom</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+  \n+  <modules>\n+    <module>scim-rest-api</module>\n+    <module>scim-rest-cxf</module>\n+  </modules>\n+\n+</project>"},{"sha":"1f8d8d67e63cfe3c35a8ed92e408677e9979d3c4","filename":"ext/scimv2/scim-rest-api/pom.xml","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fpom.xml?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-scimv2</artifactId>\n+    <version>2.1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: SCIMv2 SCIM REST API</name>\n+  <description>Apache Syncope Ext: SCIMv2 SCIM REST API</description>\n+  <groupId>org.apache.syncope.ext.scimv2</groupId>\n+  <artifactId>syncope-ext-scimv2-scim-rest-api</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>javax.validation</groupId>\n+      <artifactId>validation-api</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>javax.ws.rs</groupId>\n+      <artifactId>javax.ws.rs-api</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>com.fasterxml.jackson.core</groupId>\n+      <artifactId>jackson-annotations</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-frontend-jaxrs</artifactId>\n+    </dependency>\n+  </dependencies>\n+  \n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"979decd010a187f29386d827562fd71cbbbf3c32","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/SCIMConstants.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2FSCIMConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2FSCIMConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2FSCIMConstants.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api;\n+\n+import javax.ws.rs.core.MediaType;\n+\n+public final class SCIMConstants {\n+\n+    public static final String APPLICATION_SCIM_JSON = \"application/scim+json\";\n+\n+    public static final MediaType APPLICATION_SCIM_JSON_TYPE = new MediaType(\"application\", \"scim+json\");\n+\n+    private SCIMConstants() {\n+        // private constructor for static utility class\n+    }\n+}"},{"sha":"f79796c9fb1de2df567473949b78bdcb2fb27456","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/Display.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FDisplay.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FDisplay.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FDisplay.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class Display extends SCIMBean {\n+\n+    private static final long serialVersionUID = 5337055958765320091L;\n+\n+    private final String value;\n+\n+    private final String display;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public Display(@JsonProperty(\"value\") final String value, @JsonProperty(\"display\") final String display) {\n+        this.value = value;\n+        this.display = display;\n+    }\n+\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    public String getDisplay() {\n+        return display;\n+    }\n+\n+}"},{"sha":"f64b8371e9a9cab9a05fd9816450757ddaee2bc5","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/Group.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FGroup.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import org.apache.syncope.ext.scimv2.api.type.Function;\n+\n+@JsonPropertyOrder({ \"value\", \"$ref\", \"display\", \"type\" })\n+public class Group extends Reference {\n+\n+    private static final long serialVersionUID = -7184515273837918246L;\n+\n+    @JsonIgnore\n+    private final Function type;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public Group(\n+            @JsonProperty(\"value\") final String value,\n+            @JsonProperty(\"$ref\") final String ref,\n+            @JsonProperty(\"display\") final String display,\n+            @JsonProperty(\"type\") final Function type) {\n+\n+        super(value, ref, display);\n+        this.type = type;\n+    }\n+\n+    @JsonProperty\n+    public String getType() {\n+        return type == null ? null : type.name();\n+    }\n+\n+}"},{"sha":"698363199e49067dca42575ff94863e7d77791a8","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/ListResponse.java","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FListResponse.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FListResponse.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FListResponse.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+\n+public class ListResponse<R extends SCIMResource> extends SCIMBean {\n+\n+    private static final long serialVersionUID = -776611610457583160L;\n+\n+    private final List<String> schemas = Arrays.asList(ResourceType.ListResponse.getSchema());\n+\n+    private final int totalResults;\n+\n+    @JsonProperty(\"Resources\")\n+    private final List<R> resources = new ArrayList<>();\n+\n+    private final int startIndex;\n+\n+    private final int itemsPerPage;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public ListResponse(\n+            @JsonProperty(\"totalResults\") final int totalResults,\n+            @JsonProperty(\"startIndex\") final int startIndex,\n+            @JsonProperty(\"itemsPerPage\") final int itemsPerPage) {\n+\n+        this.totalResults = totalResults;\n+        this.startIndex = startIndex;\n+        this.itemsPerPage = itemsPerPage;\n+    }\n+\n+    public List<String> getSchemas() {\n+        return schemas;\n+    }\n+\n+    public int getTotalResults() {\n+        return totalResults;\n+    }\n+\n+    public List<R> getResources() {\n+        return resources;\n+    }\n+\n+    public int getStartIndex() {\n+        return startIndex;\n+    }\n+\n+    public int getItemsPerPage() {\n+        return itemsPerPage;\n+    }\n+\n+}"},{"sha":"73c25ebc5e4a2acec5a3d70a78724cfdda8912af","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/Member.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMember.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMember.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMember.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+\n+@JsonPropertyOrder({ \"value\", \"$ref\", \"display\", \"type\" })\n+public class Member extends Reference {\n+\n+    private static final long serialVersionUID = 75245960461062907L;\n+\n+    @JsonIgnore\n+    private final ResourceType type;\n+\n+    public Member(\n+            @JsonProperty(\"value\") final String value,\n+            @JsonProperty(\"$ref\") final String ref,\n+            @JsonProperty(\"display\") final String display,\n+            @JsonProperty(\"type\") final ResourceType type) {\n+\n+        super(value, ref, display);\n+        this.type = type;\n+    }\n+\n+    @JsonProperty\n+    public String getType() {\n+        return type == null ? null : type.name();\n+    }\n+\n+}"},{"sha":"7ecb4afe76b18a1e85cab8f92065ec56547a4072","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/Meta.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMeta.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMeta.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FMeta.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n+import java.util.Date;\n+import javax.ws.rs.core.EntityTag;\n+import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+\n+public class Meta implements Serializable {\n+\n+    private static final long serialVersionUID = 8976451652101091915L;\n+\n+    private final ResourceType resourceType;\n+\n+    private final Date created;\n+\n+    private final Date lastModified;\n+\n+    @JsonIgnore\n+    private final EntityTag version;\n+\n+    private final String location;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public Meta(\n+            @JsonProperty(\"resourceType\") final ResourceType resourceType,\n+            @JsonProperty(\"created\") final Date created,\n+            @JsonProperty(\"lastModified\") final Date lastModified,\n+            @JsonProperty(\"version\") final String version,\n+            @JsonProperty(\"location\") final String location) {\n+\n+        this.resourceType = resourceType;\n+        this.created = created;\n+        this.lastModified = lastModified;\n+        this.version = new EntityTag(version);\n+        this.location = location;\n+    }\n+\n+    public ResourceType getResourceType() {\n+        return resourceType;\n+    }\n+\n+    public Date getCreated() {\n+        return created;\n+    }\n+\n+    public Date getLastModified() {\n+        return lastModified;\n+    }\n+\n+    @JsonProperty\n+    public String getVersion() {\n+        return version == null ? null : version.toString();\n+    }\n+\n+    public String getLocation() {\n+        return location;\n+    }\n+\n+}"},{"sha":"d65f5e8815951d3f923ee0b403dc5bb51c41890d","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/Reference.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FReference.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FReference.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FReference.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+abstract class Reference extends Display {\n+\n+    private static final long serialVersionUID = -6190164044699376089L;\n+\n+    @JsonProperty(\"$ref\")\n+    private final String ref;\n+\n+    Reference(final String value, final String display, final String ref) {\n+        super(value, display);\n+        this.ref = ref;\n+    }\n+\n+    public String getRef() {\n+        return ref;\n+    }\n+\n+}"},{"sha":"95334cf2847e1a304a53ebcea0b12af90ca85408","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMBean.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMBean.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import java.io.Serializable;\n+\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+abstract class SCIMBean implements Serializable {\n+\n+    private static final long serialVersionUID = 7604407251038024743L;\n+\n+}"},{"sha":"0657476e89f85e4c079abf8dfb7dc6145cfb22cb","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMGroup.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMGroup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMGroup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMGroup.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@JsonPropertyOrder({ \"schemas\", \"id\", \"externalId\", \"displayName\", \"members\", \"meta\" })\n+public class SCIMGroup extends SCIMResource {\n+\n+    private static final long serialVersionUID = -2935466041674390279L;\n+\n+    private final String displayName;\n+\n+    private final List<Member> members = new ArrayList<>();\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public SCIMGroup(\n+            @JsonProperty(\"id\") final String id,\n+            @JsonProperty(\"schemas\") final List<String> schemas,\n+            @JsonProperty(\"meta\") final Meta meta,\n+            @JsonProperty(\"displayName\") final String displayName) {\n+\n+        super(id, schemas, meta);\n+        this.displayName = displayName;\n+    }\n+\n+    public String getDisplayName() {\n+        return displayName;\n+    }\n+\n+    public List<Member> getMembers() {\n+        return members;\n+    }\n+\n+}"},{"sha":"fae74e14deeeeec8c0b735ba0b55c0e70ced3cab","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMResource.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMResource.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+public abstract class SCIMResource extends SCIMBean {\n+\n+    private static final long serialVersionUID = -8465880682458920021L;\n+\n+    private final String id;\n+\n+    private String externalId;\n+\n+    private final List<String> schemas;\n+\n+    private final Meta meta;\n+\n+    public SCIMResource(final String id, final List<String> schemas, final Meta meta) {\n+        this.id = id;\n+        this.schemas = schemas == null ? Collections.<String>emptyList() : schemas;\n+        this.meta = meta;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public List<String> getSchemas() {\n+        return schemas;\n+    }\n+\n+    public Meta getMeta() {\n+        return meta;\n+    }\n+\n+    public void setExternalId(final String externalId) {\n+        this.externalId = externalId;\n+    }\n+\n+    public String getExternalId() {\n+        return externalId;\n+    }\n+\n+}"},{"sha":"c76c0f027e31cf2ee8155e27f0c663c5a1bc1434","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/data/SCIMUser.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fdata%2FSCIMUser.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.data;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@JsonPropertyOrder({ \"schemas\", \"id\", \"externalId\", \"userName\", \"active\", \"groups\", \"roles\", \"meta\" })\n+public class SCIMUser extends SCIMResource {\n+\n+    private static final long serialVersionUID = -2935466041674390279L;\n+\n+    private final String userName;\n+\n+    private final boolean active;\n+\n+    private final List<Group> groups = new ArrayList<>();\n+\n+    private final List<Display> roles = new ArrayList<>();\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public SCIMUser(\n+            @JsonProperty(\"id\") final String id,\n+            @JsonProperty(\"schemas\") final List<String> schemas,\n+            @JsonProperty(\"meta\") final Meta meta,\n+            @JsonProperty(\"userName\") final String userName,\n+            @JsonProperty(\"active\") final boolean active) {\n+\n+        super(id, schemas, meta);\n+        this.userName = userName;\n+        this.active = active;\n+    }\n+\n+    public String getUserName() {\n+        return userName;\n+    }\n+\n+    public boolean isActive() {\n+        return active;\n+    }\n+\n+    public List<Group> getGroups() {\n+        return groups;\n+    }\n+\n+    public List<Display> getRoles() {\n+        return roles;\n+    }\n+\n+}"},{"sha":"c1bb82f82f84d5ae884e4cff1a96346bcdc09fbb","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/GroupService.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FGroupService.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.service;\n+\n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.ext.PATCH;\n+import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n+\n+@Path(\"Groups\")\n+public interface GroupService extends SCIMService<SCIMGroup> {\n+\n+    @POST\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    @Consumes({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response create();\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    SCIMGroup read(@NotNull @PathParam(\"id\") String id);\n+\n+    @PUT\n+    @Path(\"{id}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    @Consumes({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response replace(@NotNull @PathParam(\"id\") String id);\n+\n+    @DELETE\n+    @Path(\"{id}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response delete(@NotNull @PathParam(\"id\") String id);\n+\n+    @PATCH\n+    @Path(\"{id}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    @Consumes({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response update(@NotNull @PathParam(\"id\") String id);\n+}"},{"sha":"8de7a0abe2ef9460492dce28db89aeb02036aaea","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/RootService.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FRootService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FRootService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FRootService.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.service;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n+\n+@Path(\"\")\n+public interface RootService extends SCIMService {\n+\n+    @GET\n+    @Path(\"ServiceProviderConfigs\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response serviceProviderConfigs();\n+\n+    @GET\n+    @Path(\"ResourceTypes\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response resourceTypes();\n+\n+    @GET\n+    @Path(\"Schemas\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response schemas();\n+\n+}"},{"sha":"1b2fd3f24da966411e9b04728eb5d16b97c7b945","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/SCIMService.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSCIMService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSCIMService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FSCIMService.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.service;\n+\n+import java.util.List;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n+import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n+import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n+\n+public interface SCIMService<R extends SCIMResource> {\n+\n+    @GET\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    ListResponse<R> search(\n+            @QueryParam(\"startIndex\") Integer startIndex,\n+            @QueryParam(\"count\") Integer count,\n+            @QueryParam(\"filter\") String filter,\n+            @QueryParam(\"sortBy\") String sortBy,\n+            @QueryParam(\"sortOrder\") SortOrder sortOrder,\n+            @QueryParam(\"attributes\") List<String> attributes);\n+}"},{"sha":"73518b5bb8a81b0148a365cda1a973a76d746018","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/service/UserService.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Fservice%2FUserService.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.service;\n+\n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.ext.PATCH;\n+import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n+\n+@Path(\"Users\")\n+public interface UserService extends SCIMService<SCIMUser> {\n+\n+    @POST\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    @Consumes({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response create();\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    SCIMUser read(@NotNull @PathParam(\"id\") String id);\n+\n+    @PUT\n+    @Path(\"{id}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    @Consumes({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response replace(@NotNull @PathParam(\"id\") String id);\n+\n+    @DELETE\n+    @Path(\"{id}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response delete(@NotNull @PathParam(\"id\") String id);\n+\n+    @PATCH\n+    @Path(\"{id}\")\n+    @Produces({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    @Consumes({ SCIMConstants.APPLICATION_SCIM_JSON })\n+    Response update(@NotNull @PathParam(\"id\") String id);\n+}"},{"sha":"49d4eef450b45937c609ca1243d3a6cc7bad2e30","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/type/Function.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FFunction.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FFunction.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FFunction.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.type;\n+\n+public enum Function {\n+    direct,\n+    indirect;\n+\n+}"},{"sha":"faf5ccc6198f6605624cb4a14ad30b440193a32e","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/type/ResourceType.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FResourceType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FResourceType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FResourceType.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.type;\n+\n+public enum ResourceType {\n+\n+    User(\"urn:ietf:params:scim:schemas:core:2.0:User\"),\n+    Group(\"urn:ietf:params:scim:schemas:core:2.0:Group\"),\n+    ListResponse(\"urn:ietf:params:scim:api:messages:2.0:ListResponse\");\n+\n+    private final String schema;\n+\n+    ResourceType(final String schema) {\n+        this.schema = schema;\n+    }\n+\n+    public String getSchema() {\n+        return schema;\n+    }\n+\n+}"},{"sha":"6c7bf1617f9920a77419bf2e4943381ea5a2be81","filename":"ext/scimv2/scim-rest-api/src/main/java/org/apache/syncope/ext/scimv2/api/type/SortOrder.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FSortOrder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FSortOrder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fapi%2Ftype%2FSortOrder.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.api.type;\n+\n+public enum SortOrder {\n+    ascending,\n+    descending;\n+\n+}"},{"sha":"ffa7483da1c936f4f375edd99e6b81e06c088948","filename":"ext/scimv2/scim-rest-cxf/pom.xml","status":"added","additions":127,"deletions":0,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fpom.xml?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,127 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope.ext</groupId>\n+    <artifactId>syncope-ext-scimv2</artifactId>\n+    <version>2.1.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Ext: SCIMv2 SCIM REST CXF</name>\n+  <description>Apache Syncope Ext: SCIMv2 SCIM REST CXF</description>\n+  <groupId>org.apache.syncope.ext.scimv2</groupId>\n+  <artifactId>syncope-ext-scimv2-scim-rest-cxf</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency> \n+      <groupId>javax.servlet</groupId> \n+      <artifactId>javax.servlet-api</artifactId> \n+      <scope>provided</scope>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-context</artifactId>\n+    </dependency>    \n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-web</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-web</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-config</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>com.fasterxml.jackson.datatype</groupId>\n+      <artifactId>jackson-datatype-joda</artifactId>\n+    </dependency>    \n+    <dependency>\n+      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n+      <artifactId>jackson-jaxrs-json-provider</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.module</groupId>\n+      <artifactId>jackson-module-afterburner</artifactId>\n+    </dependency>\n+      \n+    <dependency>\n+      <groupId>joda-time</groupId>\n+      <artifactId>joda-time</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-frontend-jaxrs</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-rs-service-description</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-rs-client</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-logic</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-scim-rest-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>            \n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"28ca17334d4e38c3e4f097c26520fc3b49c39d7d","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/JacksonSCIMJsonProvider.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FJacksonSCIMJsonProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FJacksonSCIMJsonProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FJacksonSCIMJsonProvider.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.cxf;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n+import java.text.SimpleDateFormat;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.ext.Provider;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n+\n+@Provider\n+@Consumes(SCIMConstants.APPLICATION_SCIM_JSON)\n+@Produces(SCIMConstants.APPLICATION_SCIM_JSON)\n+public class JacksonSCIMJsonProvider extends JacksonJsonProvider {\n+\n+    private static final ThreadLocal<SimpleDateFormat> DATE_FORMAT = new ThreadLocal<SimpleDateFormat>() {\n+\n+        @Override\n+        protected SimpleDateFormat initialValue() {\n+            SimpleDateFormat sdf = new SimpleDateFormat();\n+            sdf.applyPattern(SyncopeConstants.DEFAULT_DATE_PATTERN);\n+            return sdf;\n+        }\n+    };\n+\n+    public JacksonSCIMJsonProvider() {\n+        super(new ObjectMapper(), BASIC_ANNOTATIONS);\n+        _mapperConfig.getConfiguredMapper().disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n+        _mapperConfig.getConfiguredMapper().setDateFormat(DATE_FORMAT.get());\n+    }\n+}"},{"sha":"1ea3675bd0ccc97801c7fd621cbafd6cd1361024","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/AbstractSCIMService.java","status":"added","additions":234,"deletions":0,"changes":234,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractSCIMService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractSCIMService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FAbstractSCIMService.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,234 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.cxf.service;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.UriInfo;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.cxf.jaxrs.ext.MessageContext;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.core.logic.AbstractAnyLogic;\n+import org.apache.syncope.core.logic.GroupLogic;\n+import org.apache.syncope.core.logic.UserLogic;\n+import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.MembershipCond;\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n+import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.ext.scimv2.api.data.Display;\n+import org.apache.syncope.ext.scimv2.api.data.Group;\n+import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n+import org.apache.syncope.ext.scimv2.api.data.Member;\n+import org.apache.syncope.ext.scimv2.api.data.Meta;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMResource;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n+import org.apache.syncope.ext.scimv2.api.service.SCIMService;\n+import org.apache.syncope.ext.scimv2.api.type.Function;\n+import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+abstract class AbstractSCIMService<R extends SCIMResource> implements SCIMService<R> {\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractSCIMService.class);\n+\n+    @Context\n+    protected UriInfo uriInfo;\n+\n+    @Context\n+    protected MessageContext messageContext;\n+\n+    private UserLogic userLogic;\n+\n+    private GroupLogic groupLogic;\n+\n+    protected UserLogic userLogic() {\n+        synchronized (this) {\n+            if (userLogic == null) {\n+                userLogic = ApplicationContextProvider.getApplicationContext().getBean(UserLogic.class);\n+            }\n+        }\n+        return userLogic;\n+    }\n+\n+    protected GroupLogic groupLogic() {\n+        synchronized (this) {\n+            if (groupLogic == null) {\n+                groupLogic = ApplicationContextProvider.getApplicationContext().getBean(GroupLogic.class);\n+            }\n+        }\n+        return groupLogic;\n+    }\n+\n+    protected AbstractAnyLogic<?, ?> anyLogic(final ResourceType type) {\n+        switch (type) {\n+            case User:\n+                return userLogic();\n+\n+            case Group:\n+                return groupLogic();\n+\n+            default:\n+                throw new UnsupportedOperationException();\n+        }\n+    }\n+\n+    protected SCIMUser toSCIMUser(final UserTO userTO, final String location) {\n+        SCIMUser user = new SCIMUser(\n+                userTO.getKey(),\n+                Collections.singletonList(ResourceType.User.getSchema()),\n+                new Meta(\n+                        ResourceType.User,\n+                        userTO.getCreationDate(),\n+                        userTO.getLastChangeDate(),\n+                        userTO.getETagValue(),\n+                        location),\n+                userTO.getUsername(),\n+                !userTO.isSuspended());\n+\n+        userTO.getMemberships().forEach(membership -> {\n+            user.getGroups().add(new Group(\n+                    membership.getGroupKey(),\n+                    StringUtils.substringBefore(location, \"/Users\") + \"/Groups/\" + membership.getGroupKey(),\n+                    membership.getGroupName(),\n+                    Function.direct));\n+        });\n+        userTO.getDynMemberships().forEach(membership -> {\n+            user.getGroups().add(new Group(\n+                    membership.getGroupKey(),\n+                    StringUtils.substringBefore(location, \"/Users\") + \"/Groups/\" + membership.getGroupKey(),\n+                    membership.getGroupName(),\n+                    Function.indirect));\n+        });\n+\n+        userTO.getRoles().forEach(role -> {\n+            user.getRoles().add(new Display(role, null));\n+        });\n+\n+        return user;\n+    }\n+\n+    protected SCIMGroup toSCIMGroup(final GroupTO groupTO, final String location) {\n+        SCIMGroup group = new SCIMGroup(\n+                groupTO.getKey(),\n+                Collections.singletonList(ResourceType.Group.getSchema()),\n+                new Meta(\n+                        ResourceType.Group,\n+                        groupTO.getCreationDate(),\n+                        groupTO.getLastChangeDate(),\n+                        groupTO.getETagValue(),\n+                        location),\n+                groupTO.getName());\n+\n+        MembershipCond membCond = new MembershipCond();\n+        membCond.setGroup(groupTO.getKey());\n+        SearchCond searchCond = SearchCond.getLeafCond(membCond);\n+\n+        int count = userLogic().\n+                search(searchCond, 1, 1, Collections.<OrderByClause>emptyList(), SyncopeConstants.ROOT_REALM, false).\n+                getLeft();\n+\n+        for (int page = 1; page <= (count / AnyDAO.DEFAULT_PAGE_SIZE) + 1; page++) {\n+            List<UserTO> users = userLogic().search(\n+                    searchCond,\n+                    page,\n+                    AnyDAO.DEFAULT_PAGE_SIZE,\n+                    Collections.<OrderByClause>emptyList(),\n+                    SyncopeConstants.ROOT_REALM,\n+                    false).\n+                    getRight();\n+            users.forEach(userTO -> {\n+                group.getMembers().add(new Member(\n+                        userTO.getKey(),\n+                        StringUtils.substringBefore(location, \"/Groups\") + \"/Users/\" + userTO.getKey(),\n+                        userTO.getUsername(),\n+                        ResourceType.User));\n+            });\n+        }\n+\n+        return group;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    protected ListResponse<R> doSearch(\n+            final ResourceType type,\n+            final Integer startIndex,\n+            final Integer count,\n+            final String filter,\n+            final String sortBy,\n+            final SortOrder sortOrder,\n+            final List<String> attributes) {\n+\n+        if (type == null) {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        int page = startIndex == null || startIndex <= 1 ? 1 : (startIndex / AnyDAO.DEFAULT_PAGE_SIZE) + 1;\n+\n+        Pair<Integer, ? extends List<? extends AnyTO>> result = anyLogic(type).search(\n+                null,\n+                page,\n+                AnyDAO.DEFAULT_PAGE_SIZE,\n+                Collections.<OrderByClause>emptyList(),\n+                SyncopeConstants.ROOT_REALM,\n+                false);\n+\n+        ListResponse<R> response = new ListResponse<>(\n+                result.getLeft(), startIndex == null || startIndex <= 1 ? 1 : startIndex, AnyDAO.DEFAULT_PAGE_SIZE);\n+\n+        result.getRight().forEach(anyTO -> {\n+            SCIMResource resource = null;\n+            if (anyTO instanceof UserTO) {\n+                resource = toSCIMUser(\n+                        (UserTO) anyTO,\n+                        uriInfo.getAbsolutePathBuilder().path(anyTO.getKey()).build().toASCIIString());\n+            } else if (anyTO instanceof GroupTO) {\n+                resource = toSCIMGroup(\n+                        (GroupTO) anyTO,\n+                        uriInfo.getAbsolutePathBuilder().path(anyTO.getKey()).build().toASCIIString());\n+            }\n+\n+            if (resource != null) {\n+                response.getResources().add((R) resource);\n+            }\n+        });\n+\n+        return response;\n+    }\n+\n+    @Override\n+    public ListResponse<R> search(\n+            final Integer startIndex,\n+            final Integer count,\n+            final String filter,\n+            final String sortBy,\n+            final SortOrder sortOrder,\n+            final List<String> attributes) {\n+\n+        return doSearch(null, startIndex, count, filter, sortBy, sortOrder, attributes);\n+    }\n+}"},{"sha":"151762a57cf5268d2e39e00d0f64ef8f6c327553","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/GroupServiceImpl.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FGroupServiceImpl.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.cxf.service;\n+\n+import java.util.List;\n+import java.util.UUID;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n+import org.apache.syncope.ext.scimv2.api.service.GroupService;\n+import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n+\n+public class GroupServiceImpl extends AbstractSCIMService<SCIMGroup> implements GroupService {\n+\n+    @Override\n+    public Response create() {\n+        return Response.\n+                created(uriInfo.getAbsolutePathBuilder().path(UUID.randomUUID().toString()).build()).\n+                build();\n+    }\n+\n+    @Override\n+    public SCIMGroup read(final String id) {\n+        return toSCIMGroup(groupLogic().read(id), uriInfo.getAbsolutePathBuilder().build().toASCIIString());\n+    }\n+\n+    @Override\n+    public Response replace(final String id) {\n+        return Response.ok().build();\n+    }\n+\n+    @Override\n+    public Response delete(final String id) {\n+        return Response.noContent().build();\n+    }\n+\n+    @Override\n+    public Response update(final String id) {\n+        return Response.ok().build();\n+    }\n+\n+    @Override\n+    public ListResponse<SCIMGroup> search(\n+            final Integer startIndex,\n+            final Integer count,\n+            final String filter,\n+            final String sortBy,\n+            final SortOrder sortOrder,\n+            final List<String> attributes) {\n+\n+        return doSearch(ResourceType.Group, startIndex, count, filter, sortBy, sortOrder, attributes);\n+    }\n+\n+}"},{"sha":"0172e7d0e0102ca39ddf95a8956cd0ca5f30c43e","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/RootServiceImpl.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FRootServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FRootServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FRootServiceImpl.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.cxf.service;\n+\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.ext.scimv2.api.service.RootService;\n+\n+public class RootServiceImpl extends AbstractSCIMService implements RootService {\n+\n+    @Override\n+    public Response serviceProviderConfigs() {\n+        return Response.ok().build();\n+    }\n+\n+    @Override\n+    public Response resourceTypes() {\n+        return Response.ok().build();\n+    }\n+\n+    @Override\n+    public Response schemas() {\n+        return Response.ok().build();\n+    }\n+\n+}"},{"sha":"6d51ca32ef41c6a985067d7136c564b2864776cf","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/UserServiceImpl.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.scimv2.cxf.service;\n+\n+import java.util.List;\n+import java.util.UUID;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n+import org.apache.syncope.ext.scimv2.api.service.UserService;\n+import org.apache.syncope.ext.scimv2.api.type.ResourceType;\n+import org.apache.syncope.ext.scimv2.api.type.SortOrder;\n+\n+public class UserServiceImpl extends AbstractSCIMService<SCIMUser> implements UserService {\n+\n+    @Override\n+    public Response create() {\n+        return Response.\n+                created(uriInfo.getAbsolutePathBuilder().path(UUID.randomUUID().toString()).build()).\n+                build();\n+    }\n+\n+    @Override\n+    public SCIMUser read(final String id) {\n+        return toSCIMUser(userLogic().read(id), uriInfo.getAbsolutePathBuilder().build().toASCIIString());\n+    }\n+\n+    @Override\n+    public Response replace(final String id) {\n+        return Response.ok().build();\n+    }\n+\n+    @Override\n+    public Response delete(final String id) {\n+        return Response.noContent().build();\n+    }\n+\n+    @Override\n+    public Response update(final String id) {\n+        return Response.ok().build();\n+    }\n+\n+    @Override\n+    public ListResponse<SCIMUser> search(\n+            final Integer startIndex,\n+            final Integer count,\n+            final String filter,\n+            final String sortBy,\n+            final SortOrder sortOrder,\n+            final List<String> attributes) {\n+\n+        return doSearch(ResourceType.User, startIndex, count, filter, sortBy, sortOrder, attributes);\n+    }\n+}"},{"sha":"6e7bd364d34051c484e97facb29ed7932d3c0b35","filename":"ext/scimv2/scim-rest-cxf/src/main/resources/META-INF/cxf/org.apache.cxf.Logger","status":"added","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1 @@\n+org.apache.cxf.common.logging.Slf4jLogger"},{"sha":"5a021aecce4c89e671f12d2b208f6c028347f801","filename":"ext/scimv2/scim-rest-cxf/src/main/resources/META-INF/web-fragment.xml","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<web-fragment xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n+              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+              xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n+                                  http://xmlns.jcp.org/xml/ns/javaee/web-fragment_3_1.xsd\"\n+              id=\"${pom.artifactId}\" version=\"3.1\">\n+  \n+  <listener>\n+    <listener-class>org.apache.syncope.core.rest.cxf.ThreadLocalCleanupListener</listener-class>\n+  </listener>\n+  \n+  <servlet>\n+    <servlet-name>SCIMv2CXFServlet</servlet-name>\n+    <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>\n+    <init-param>\n+      <param-name>config-location</param-name>\n+      <param-value>classpath*:/restSCIMv2CXFContext.xml</param-value>\n+    </init-param>\n+    <load-on-startup>1</load-on-startup> \n+  </servlet>\n+  <servlet-mapping>\n+    <servlet-name>SCIMv2CXFServlet</servlet-name>\n+    <url-pattern>/scim/*</url-pattern>\n+  </servlet-mapping>\n+\n+  <filter>\n+    <filter-name>encodingFilter</filter-name>\n+    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n+    <init-param>\n+      <param-name>encoding</param-name>\n+      <param-value>UTF-8</param-value>\n+    </init-param>\n+    <init-param>\n+      <param-name>forceEncoding</param-name>\n+      <param-value>true</param-value>\n+    </init-param>\n+  </filter>\n+  <filter>\n+    <filter-name>springSecurityFilterChain</filter-name>\n+    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>\n+  </filter>\n+\n+  <filter-mapping>\n+    <filter-name>encodingFilter</filter-name>\n+    <url-pattern>/*</url-pattern>\n+  </filter-mapping>\n+  <filter-mapping>\n+    <filter-name>springSecurityFilterChain</filter-name>\n+    <url-pattern>/*</url-pattern>\n+  </filter-mapping>\n+\n+</web-fragment>"},{"sha":"7293b267328f9b97f663cbb6bd1d81349ea9efad","filename":"ext/scimv2/scim-rest-cxf/src/main/resources/restSCIMv2CXFContext.xml","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,83 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xmlns:jaxrs=\"http://cxf.apache.org/jaxrs\"\n+       xmlns:context=\"http://www.springframework.org/schema/context\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+                           http://www.springframework.org/schema/beans/spring-beans.xsd\n+                           http://cxf.apache.org/jaxrs\n+                           http://cxf.apache.org/schemas/jaxrs.xsd\n+                           http://www.springframework.org/schema/context\n+                           http://www.springframework.org/schema/context/spring-context.xsd\">\n+\n+  <import resource=\"classpath:META-INF/cxf/cxf.xml\"/>\n+  <import resource=\"classpath:META-INF/cxf/cxf-servlet.xml\"/>\n+\n+  <context:component-scan base-package=\"org.apache.syncope.ext.scimv2.cxf.service\"/>  \n+  \n+  <bean id=\"jsonProvider\" class=\"org.apache.syncope.ext.scimv2.cxf.JacksonSCIMJsonProvider\"/>\n+\n+  <bean id=\"validationProvider\" class=\"org.apache.cxf.validation.BeanValidationProvider\"/>\n+  <bean id=\"validationInInterceptor\" class=\"org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor\">\n+    <property name=\"provider\" ref=\"validationProvider\"/>\n+  </bean>\n+  <bean id=\"validationOutInterceptor\" class=\"org.apache.cxf.jaxrs.validation.JAXRSBeanValidationOutInterceptor\">\n+    <property name=\"provider\" ref=\"validationProvider\"/>\n+  </bean>   \n+  \n+  <bean id=\"gzipInInterceptor\" class=\"org.apache.cxf.transport.common.gzip.GZIPInInterceptor\"/>\n+  <bean id=\"gzipOutInterceptor\" class=\"org.apache.cxf.transport.common.gzip.GZIPOutInterceptor\">\n+    <property name=\"threshold\" value=\"0\"/>\n+    <property name=\"force\" value=\"true\"/>\n+  </bean>\n+\n+  <bean id=\"wadlGenerator\" class=\"org.apache.cxf.jaxrs.model.wadl.WadlGenerator\">\n+    <property name=\"applicationTitle\" value=\"Apache Syncope SCIMv2 ${syncope.version}\"/>\n+    <property name=\"namespacePrefix\" value=\"syncope2\"/>\n+    <property name=\"incrementNamespacePrefix\" value=\"false\"/>    \n+    <property name=\"linkAnyMediaTypeToXmlSchema\" value=\"true\"/>\n+    <property name=\"useJaxbContextForQnames\" value=\"true\"/>\n+    <property name=\"addResourceAndMethodIds\" value=\"true\"/>\n+    <property name=\"ignoreMessageWriters\" value=\"true\"/>\n+    <property name=\"usePathParamsToCompareOperations\" value=\"false\"/>\n+  </bean>\n+  \n+  <jaxrs:server id=\"scimv2Container\" address=\"/\"\n+                basePackages=\"org.apache.syncope.ext.scimv2.api.service, org.apache.syncope.ext.scimv2.cxf.service\" \n+                staticSubresourceResolution=\"true\">\n+    <jaxrs:properties>\n+      <entry key=\"convert.wadl.resources.to.dom\" value=\"false\"/>\n+    </jaxrs:properties> \n+    <jaxrs:inInterceptors>\n+      <ref bean=\"gzipInInterceptor\"/>\n+      <ref bean=\"validationInInterceptor\"/>\n+    </jaxrs:inInterceptors>  \n+    <jaxrs:outInterceptors>\n+      <ref bean=\"gzipOutInterceptor\"/>\n+      <ref bean=\"validationOutInterceptor\"/>\n+    </jaxrs:outInterceptors>\n+    <jaxrs:providers>\n+      <ref bean=\"jsonProvider\"/>\n+      <ref bean=\"wadlGenerator\"/>\n+    </jaxrs:providers>\n+  </jaxrs:server>\n+\n+</beans>"},{"sha":"ab9eb38df6bbab9a3918d5bb2b0b058226dd2d49","filename":"fit/core-reference/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -1056,6 +1056,12 @@ under the License.\n           <version>${project.version}</version>\n         </dependency>\n         \n+        <dependency>\n+          <groupId>org.apache.syncope.ext.scimv2</groupId>\n+          <artifactId>syncope-ext-scimv2-scim-rest-cxf</artifactId>\n+          <version>${project.version}</version>\n+        </dependency>\n+        \n         <dependency>\n           <groupId>org.apache.syncope.ext</groupId>\n           <artifactId>syncope-ext-swagger-ui</artifactId>"},{"sha":"ad39dab3f85b0c84c0d4d32094e9b5ce3ea205de","filename":"fit/core-reference/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/fit%2Fcore-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/fit%2Fcore-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -46,4 +46,4 @@ under the License.\n     <auth-method>CLIENT-CERT</auth-method>\n   </login-config>\n \n-</web-app>\n\\ No newline at end of file\n+</web-app>"},{"sha":"d236c7fba925165f106725beb13f74957e4fd95f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/SCIMDetector.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FSCIMDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FSCIMDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FSCIMDetector.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit;\n+\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.Response;\n+import javax.xml.bind.DatatypeConverter;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n+import org.apache.syncope.fit.core.SCIMITCase;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class SCIMDetector {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SCIMDetector.class);\n+\n+    private static Boolean ENABLED;\n+\n+    public static boolean isSCIMAvailable() {\n+        synchronized (LOG) {\n+            if (ENABLED == null) {\n+                try {\n+                    Response response = WebClient.create(SCIMITCase.SCIM_ADDRESS).path(\"ServiceProviderConfigs\").\n+                            accept(SCIMConstants.APPLICATION_SCIM_JSON_TYPE).\n+                            header(HttpHeaders.AUTHORIZATION,\n+                                    \"Basic \" + DatatypeConverter.printBase64Binary(\n+                                            (AbstractITCase.ADMIN_UNAME + \":\" + AbstractITCase.ADMIN_PWD).getBytes())).\n+                            get();\n+                    ENABLED = response.getStatus() == 200;\n+                } catch (Exception e) {\n+                    // ignore\n+                    ENABLED = false;\n+                }\n+            }\n+        }\n+        return ENABLED;\n+    }\n+}"},{"sha":"04b0c6f642f800a638014b2c0ae758c1726fee85","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.ext.scimv2.api.SCIMConstants;\n+import org.apache.syncope.ext.scimv2.api.data.ListResponse;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMGroup;\n+import org.apache.syncope.ext.scimv2.api.data.SCIMUser;\n+import org.apache.syncope.fit.AbstractITCase;\n+import org.apache.syncope.fit.SCIMDetector;\n+import org.junit.jupiter.api.Test;\n+\n+public class SCIMITCase extends AbstractITCase {\n+\n+    public static final String SCIM_ADDRESS = \"http://localhost:9080/syncope/scim\";\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    private WebClient webClient() {\n+        return WebClient.create(SCIM_ADDRESS).\n+                accept(SCIMConstants.APPLICATION_SCIM_JSON_TYPE).\n+                header(HttpHeaders.AUTHORIZATION, \"Bearer \" + adminClient.getJWT());\n+    }\n+\n+    @Test\n+    public void read() throws IOException {\n+        assumeTrue(SCIMDetector.isSCIMAvailable());\n+\n+        Response response = webClient().path(\"Users\").path(\"1417acbe-cbf6-4277-9372-e75e04f97000\").get();\n+        assertEquals(200, response.getStatus());\n+        assertEquals(\n+                SCIMConstants.APPLICATION_SCIM_JSON,\n+                StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n+\n+        SCIMUser user = MAPPER.readValue((InputStream) response.getEntity(), SCIMUser.class);\n+        assertNotNull(user);\n+        assertEquals(\"1417acbe-cbf6-4277-9372-e75e04f97000\", user.getId());\n+        assertEquals(\"rossini\", user.getUserName());\n+        assertFalse(user.getGroups().isEmpty());\n+        assertFalse(user.getRoles().isEmpty());\n+    }\n+\n+    @Test\n+    public void list() throws IOException {\n+        assumeTrue(SCIMDetector.isSCIMAvailable());\n+\n+        Response response = webClient().path(\"Groups\").get();\n+        assertEquals(200, response.getStatus());\n+        assertEquals(\n+                SCIMConstants.APPLICATION_SCIM_JSON,\n+                StringUtils.substringBefore(response.getHeaderString(HttpHeaders.CONTENT_TYPE), \";\"));\n+\n+        ListResponse<SCIMGroup> result = MAPPER.readValue(\n+                (InputStream) response.getEntity(),\n+                new TypeReference<ListResponse<SCIMGroup>>() {\n+        });\n+        assertNotNull(result);\n+        assertTrue(result.getTotalResults() > 0);\n+        assertFalse(result.getResources().isEmpty());\n+\n+        result.getResources().forEach(group -> {\n+            assertNotNull(group.getId());\n+            assertNotNull(group.getDisplayName());\n+        });\n+    }\n+}"},{"sha":"6c508b0dad51267bc12a8a4ca125f310bf087a09","filename":"fit/core-reference/src/test/resources/rebel.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml?ref=bc3c6e6165b670c6c0fb0c1951dfa1f45875c6cb","patch":"@@ -91,6 +91,10 @@ under the License.\n     </dir>\n     <dir name=\"${basedir}/../../ext/elasticsearch/persistence-jpa/target/classes\">\n     </dir>\n+    <dir name=\"${basedir}/../../ext/scimv2/scim-rest-api/target/classes\">\n+    </dir>\n+    <dir name=\"${basedir}/../../ext/scimv2/scim-rest-cxf/target/classes\">\n+    </dir>\n   </classpath>\n \n   <web>"}]}