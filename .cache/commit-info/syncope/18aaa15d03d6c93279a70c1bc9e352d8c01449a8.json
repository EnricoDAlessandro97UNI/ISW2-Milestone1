{"sha":"18aaa15d03d6c93279a70c1bc9e352d8c01449a8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE4YWFhMTVkMDNkNmM5MzI3OWE3MGMxYmM5ZTM1MmQ4YzAxNDQ5YTg=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-08T07:55:39Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-08T07:55:39Z"},"message":"User workflow (and various bugfixes) implemented for creation and activation: issue #15 urges to be fixed, at this point\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246336 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a1fed792de254ca461eaf4c2e0e139bd02ce9b69","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a1fed792de254ca461eaf4c2e0e139bd02ce9b69"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/18aaa15d03d6c93279a70c1bc9e352d8c01449a8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/18aaa15d03d6c93279a70c1bc9e352d8c01449a8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/18aaa15d03d6c93279a70c1bc9e352d8c01449a8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/comments","author":null,"committer":null,"parents":[{"sha":"2f8eed4a0909113109cbe74180d5ea5979010fad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2f8eed4a0909113109cbe74180d5ea5979010fad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2f8eed4a0909113109cbe74180d5ea5979010fad"}],"stats":{"total":1745,"additions":1587,"deletions":158},"files":[{"sha":"792bb812e77c076439d4ac72f12f6eb8d80ed128","filename":"client/src/main/java/org/syncope/client/validation/SyncopeClientErrorHandler.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -46,6 +46,14 @@ public void handleError(ClientHttpResponse response) throws IOException {\n \n         List<String> exceptionTypesInHeaders = response.getHeaders().get(\n                 EXCEPTION_TYPE_HEADER);\n+        if (exceptionTypesInHeaders == null) {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"No \" + EXCEPTION_TYPE_HEADER + \" provided\");\n+            }\n+\n+            return;\n+        }\n+\n         SyncopeClientExceptionType exceptionType = null;\n         SyncopeClientException clientException = null;\n         Set<String> handledExceptions = new HashSet<String>();"},{"sha":"c5e9b744122f7b51fd2bb109706abbceffbddadc","filename":"client/src/main/java/org/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -40,6 +40,9 @@ public enum SyncopeClientExceptionType {\n     NotFound(\n     \"Syncope.NotFound\",\n     \"Syncope.NotFound.entity\"),\n+    RejectedUserCreate(\n+    \"Syncope.RejectUserCreate\",\n+    \"Syncope.RejectUserCreate.syncopeUserId\"),\n     RequiredValuesMissing(\n     \"Syncope.RequiredValuesMissing\",\n     \"Syncope.RequiredValuesMissing.attributeName\"),\n@@ -51,10 +54,11 @@ public enum SyncopeClientExceptionType {\n     \"Syncope.RequiredValuesMissing.attributeName\"),\n     Unknown(\n     \"Syncope.Unknown\",\n-    \"\");\n-\n+    \"\"),\n+    Workflow(\n+    \"Syncope.Workflow\",\n+    \"Syncope.Workflow.message\");\n     private String headerValue;\n-\n     private String elementHeaderName;\n \n     private SyncopeClientExceptionType(String headerValue,\n@@ -76,7 +80,8 @@ public static SyncopeClientExceptionType getFromHeaderValue(\n         }\n \n         if (result == null) {\n-            throw new IllegalArgumentException(\"Unexpected header value: \" + exceptionTypeHeaderValue);\n+            throw new IllegalArgumentException(\"Unexpected header value: \"\n+                    + exceptionTypeHeaderValue);\n         }\n \n         return result;"},{"sha":"04871f7f8ef5fee19e949118d0f03a5f918dc45a","filename":"core/pom.xml","status":"modified","additions":25,"deletions":5,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -32,6 +32,7 @@\n \n     <properties>\n         <jetty.port>8080</jetty.port>\n+        <logfile.jetty>/tmp/syncope-core-jetty.log</logfile.jetty>\n \n         <hsqldb.file>/tmp/syncope-db</hsqldb.file>\n \n@@ -139,11 +140,6 @@\n             <artifactId>jasypt</artifactId>\n         </dependency>\n \n-        <dependency>\n-            <groupId>postgresql</groupId>\n-            <artifactId>postgresql</artifactId>\n-        </dependency>\n-\n         <dependency>\n             <groupId>org.dbunit</groupId>\n             <artifactId>dbunit</artifactId>\n@@ -494,7 +490,31 @@\n                             <maxIdleTime>60000</maxIdleTime>\n                         </connector>\n                     </connectors>\n+                    <systemProperties>\n+                        <systemProperty>\n+                            <name>slf4j</name>\n+                            <value>false</value>\n+                        </systemProperty>\n+                        <systemProperty>\n+                            <name>log4j.configuration</name>\n+                            <value>file:${project.build.directory}/test-classes/log4j_jetty.xml</value>\n+                        </systemProperty>\n+                    </systemProperties>\n                 </configuration>\n+               <!--<dependencies>\n+                    <dependency>\n+                        <groupId>commons-logging</groupId>\n+                        <artifactId>commons-logging</artifactId>\n+                    </dependency>\n+                    <dependency>\n+                        <groupId>org.slf4j</groupId>\n+                        <artifactId>slf4j-jcl</artifactId>\n+                    </dependency>\n+                    <dependency>\n+                        <groupId>log4j</groupId>\n+                        <artifactId>log4j</artifactId>\n+                    </dependency>\n+                </dependencies>-->\n                 <executions>\n                     <execution>\n                         <id>start-jetty</id>"},{"sha":"4b811ffea33b6cf91c2780f7fe09c40bf701ebdf","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":36,"deletions":16,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -14,16 +14,21 @@\n  */\n package org.syncope.core.persistence.beans.user;\n \n+import java.util.Calendar;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Set;\n import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n+import javax.persistence.Lob;\n import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n import javax.persistence.Temporal;\n+import javax.persistence.TemporalType;\n import javax.persistence.Transient;\n+import org.apache.commons.lang.RandomStringUtils;\n import org.jasypt.util.password.PasswordEncryptor;\n import org.jasypt.util.password.StrongPasswordEncryptor;\n import org.syncope.core.persistence.beans.AbstractAttributable;\n@@ -37,26 +42,22 @@ public class SyncopeUser extends AbstractAttributable {\n     @Transient\n     final private static PasswordEncryptor passwordEncryptor =\n             new StrongPasswordEncryptor();\n-\n     private String password;\n-\n     @ManyToMany(fetch = FetchType.EAGER)\n     private Set<SyncopeRole> roles;\n-\n     @OneToMany(cascade = CascadeType.ALL,\n     fetch = FetchType.EAGER, mappedBy = \"owner\")\n     private Set<UserAttribute> attributes;\n-\n     @OneToMany(cascade = CascadeType.ALL,\n     fetch = FetchType.EAGER, mappedBy = \"owner\")\n     private Set<UserDerivedAttribute> derivedAttributes;\n-\n-    @Temporal(javax.persistence.TemporalType.TIME)\n+    @Column(nullable = true)\n+    private Long workflowEntryId;\n+    @Temporal(TemporalType.TIMESTAMP)\n     private Date creationTime;\n-\n+    @Lob\n     private String token;\n-\n-    @Temporal(javax.persistence.TemporalType.TIME)\n+    @Temporal(TemporalType.TIMESTAMP)\n     private Date tokenExpireTime;\n \n     public SyncopeUser() {\n@@ -74,7 +75,9 @@ public boolean removeRole(SyncopeRole role) {\n     }\n \n     public Set<SyncopeRole> getRoles() {\n-        if (roles != null) return roles;\n+        if (roles != null) {\n+            return roles;\n+        }\n         return new HashSet<SyncopeRole>();\n     }\n \n@@ -144,6 +147,14 @@ public void setDerivedAttributes(\n         this.derivedAttributes = (Set<UserDerivedAttribute>) derivedAttributes;\n     }\n \n+    public Long getWorkflowEntryId() {\n+        return workflowEntryId;\n+    }\n+\n+    public void setWorkflowEntryId(Long workflowEntryId) {\n+        this.workflowEntryId = workflowEntryId;\n+    }\n+\n     public Date getCreationTime() {\n         return creationTime;\n     }\n@@ -152,19 +163,28 @@ public void setCreationTime(Date creationTime) {\n         this.creationTime = creationTime;\n     }\n \n-    public String getToken() {\n-        return token;\n+    public void generateToken(int tokenLength, int tokenExpireTime) {\n+        token = RandomStringUtils.randomAlphanumeric(tokenLength);\n+\n+        Calendar calendar = Calendar.getInstance();\n+        calendar.add(Calendar.MINUTE, tokenExpireTime);\n+        this.tokenExpireTime = calendar.getTime();\n     }\n \n-    public void setToken(String token) {\n-        this.token = token;\n+    public void removeToken() {\n+        token = null;\n+        tokenExpireTime = null;\n+    }\n+\n+    public String getToken() {\n+        return token;\n     }\n \n     public Date getTokenExpireTime() {\n         return tokenExpireTime;\n     }\n \n-    public void setTokenExpireTime(Date tokenExpireTime) {\n-        this.tokenExpireTime = tokenExpireTime;\n+    public boolean checkToken(String token) {\n+        return this.token.equals(token) && tokenExpireTime.after(new Date());\n     }\n }"},{"sha":"8953017e3c9fc8320676b8d3d6c79a3511436d9d","filename":"core/src/main/java/org/syncope/core/persistence/dao/SyncopeUserDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSyncopeUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSyncopeUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSyncopeUserDAO.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -16,11 +16,14 @@\n \n import java.util.List;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.beans.user.UserAttributeValue;\n \n public interface SyncopeUserDAO extends DAO {\n \n     SyncopeUser find(Long id);\n \n+    List<SyncopeUser> findByAttributeValue(UserAttributeValue attributeValue);\n+\n     List<SyncopeUser> findAll();\n \n     SyncopeUser save(SyncopeUser syncopeUser);"},{"sha":"13aabbccb3dbe487a2e08a771b15cfbf6811b420","filename":"core/src/main/java/org/syncope/core/persistence/dao/WorkflowEntryDAO.java","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FWorkflowEntryDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FWorkflowEntryDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FWorkflowEntryDAO.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,24 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.dao;\n+\n+import com.opensymphony.workflow.spi.hibernate.HibernateWorkflowEntry;\n+\n+public interface WorkflowEntryDAO extends DAO {\n+\n+    HibernateWorkflowEntry find(Long id);\n+\n+    void delete(Long id);\n+}"},{"sha":"fddd8f12cd7e156f8ea0a5a2e48831eadd06d54f","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SyncopeUserDAOImpl.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeUserDAOImpl.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -21,6 +21,7 @@\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.beans.user.UserAttributeValue;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n \n @Repository\n@@ -32,6 +33,26 @@ public SyncopeUser find(Long id) {\n         return entityManager.find(SyncopeUser.class, id);\n     }\n \n+    @Override\n+    public List<SyncopeUser> findByAttributeValue(UserAttributeValue attributeValue) {\n+\n+        Query query = entityManager.createQuery(\n+                \"SELECT u FROM SyncopeUser u, UserAttribute ua, UserAttributeValue e \"\n+                + \" WHERE e.attribute = ua AND ua.owner = u\"\n+                + \" AND ((e.stringValue IS NOT NULL AND e.stringValue = :stringValue)\"\n+                + \" OR (e.booleanValue IS NOT NULL AND e.booleanValue = :booleanValue)\"\n+                + \" OR (e.dateValue IS NOT NULL AND e.dateValue = :dateValue)\"\n+                + \" OR (e.longValue IS NOT NULL AND e.longValue = :longValue)\"\n+                + \" OR (e.doubleValue IS NOT NULL AND e.doubleValue = :doubleValue))\");\n+        query.setParameter(\"stringValue\", attributeValue.getStringValue());\n+        query.setParameter(\"booleanValue\", attributeValue.getBooleanValue());\n+        query.setParameter(\"dateValue\", attributeValue.getDateValue());\n+        query.setParameter(\"longValue\", attributeValue.getLongValue());\n+        query.setParameter(\"doubleValue\", attributeValue.getDoubleValue());\n+\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public List<SyncopeUser> findAll() {\n         Query query = entityManager.createQuery(\"SELECT e FROM SyncopeUser e\");"},{"sha":"78ab1f895b6db03c946b8072fcd1b70e0ba15b78","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/WorkflowEntryDAOImpl.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FWorkflowEntryDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FWorkflowEntryDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FWorkflowEntryDAOImpl.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,39 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.persistence.dao.impl;\n+\n+import com.opensymphony.workflow.spi.hibernate.HibernateWorkflowEntry;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.core.persistence.dao.WorkflowEntryDAO;\n+\n+@Repository\n+public class WorkflowEntryDAOImpl extends AbstractDAOImpl\n+        implements WorkflowEntryDAO {\n+\n+    @Override\n+    public HibernateWorkflowEntry find(Long id) {\n+        return entityManager.find(HibernateWorkflowEntry.class, id);\n+    }\n+\n+    @Transactional\n+    @Override\n+    public void delete(Long id) {\n+        HibernateWorkflowEntry workflowEntry = find(id);\n+        if (workflowEntry != null) {\n+            entityManager.remove(workflowEntry);\n+        }\n+    }\n+}"},{"sha":"5400e1b1c92ffc1d1c176da8f01e1082e9b74e0e","filename":"core/src/main/java/org/syncope/core/rest/controller/AbstractController.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractController.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -15,6 +15,7 @@\n  */\n package org.syncope.core.rest.controller;\n \n+import com.opensymphony.workflow.WorkflowException;\n import java.io.IOException;\n import javax.servlet.http.HttpServletResponse;\n import org.slf4j.Logger;\n@@ -81,4 +82,19 @@ protected <T> T throwNotFoundException(String notFound,\n \n         return null;\n     }\n+\n+    protected <T> T throwWorkflowException(WorkflowException we,\n+            HttpServletResponse response) throws IOException {\n+\n+        response.setHeader(\n+                SyncopeClientErrorHandler.EXCEPTION_TYPE_HEADER,\n+                SyncopeClientExceptionType.Workflow.getHeaderValue());\n+        response.setHeader(\n+                SyncopeClientExceptionType.Workflow.getElementHeaderName(),\n+                we.getMessage());\n+\n+        response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n+\n+        return null;\n+    }\n }"},{"sha":"df7acea1851a1371f88e9d94961077300c33ff78","filename":"core/src/main/java/org/syncope/core/rest/controller/DerivedSchemaController.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FDerivedSchemaController.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -53,6 +53,7 @@ public DerivedSchemaTO create(HttpServletResponse response,\n                 derivedSchemaTO, reference,\n                 getAttributable(kind).getSchemaClass());\n \n+        derivedSchema = derivedSchemaDAO.save(derivedSchema);\n         response.setStatus(HttpServletResponse.SC_CREATED);\n         return derivedSchemaDataBinder.getDerivedSchemaTO(derivedSchema);\n     }\n@@ -132,7 +133,8 @@ public DerivedSchemaTO update(HttpServletResponse response,\n             log.error(\"Could not find schema '\" + derivedSchemaTO.getName() + \"'\");\n             return throwNotFoundException(derivedSchemaTO.getName(), response);\n         }\n-\n+        \n+        derivedSchema = derivedSchemaDAO.save(derivedSchema);\n         return derivedSchemaDataBinder.getDerivedSchemaTO(derivedSchema);\n     }\n }"},{"sha":"0def36e3e57f2a250741056feffc9174ee1a43fc","filename":"core/src/main/java/org/syncope/core/rest/controller/SchemaController.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FSchemaController.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -53,6 +53,7 @@ public SchemaTO create(HttpServletResponse response,\n         AbstractSchema schema = schemaDataBinder.createSchema(schemaTO,\n                 reference, getAttributable(kind).getDerivedSchemaClass());\n \n+        schema = schemaDAO.save(schema);\n         response.setStatus(HttpServletResponse.SC_CREATED);\n         return schemaDataBinder.getSchemaTO(schema);\n     }\n@@ -127,7 +128,8 @@ public SchemaTO update(HttpServletResponse response,\n             log.error(\"Could not update for \" + schemaTO, e);\n             return throwCompositeException(e, response);\n         }\n-\n+        \n+        schema = schemaDAO.save(schema);\n         return schemaDataBinder.getSchemaTO(schema);\n     }\n }"},{"sha":"25e425a1b199d03eafd7a82fd62f648020fe6947","filename":"core/src/main/java/org/syncope/core/rest/controller/UserController.java","status":"modified","additions":176,"deletions":16,"changes":192,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -15,6 +15,10 @@\n  */\n package org.syncope.core.rest.controller;\n \n+import com.opensymphony.workflow.Workflow;\n+import com.opensymphony.workflow.WorkflowException;\n+import com.opensymphony.workflow.loader.WorkflowDescriptor;\n+import com.opensymphony.workflow.spi.Step;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Controller;\n import org.springframework.web.bind.annotation.PathVariable;\n@@ -31,11 +35,22 @@\n import org.syncope.core.rest.data.UserDataBinder;\n import java.io.IOException;\n import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n+import org.springframework.http.HttpStatus;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.client.validation.SyncopeClientException;\n+import org.syncope.core.persistence.dao.SyncopeConfigurationDAO;\n+import org.syncope.core.persistence.dao.WorkflowEntryDAO;\n+import org.syncope.core.workflow.Constants;\n+import org.syncope.core.workflow.WorkflowInitException;\n+import org.syncope.types.SyncopeClientExceptionType;\n \n @Controller\n @RequestMapping(\"/user\")\n@@ -44,7 +59,66 @@ public class UserController extends AbstractController {\n     @Autowired\n     private SyncopeUserDAO syncopeUserDAO;\n     @Autowired\n+    private SyncopeConfigurationDAO syncopeConfigurationDAO;\n+    @Autowired\n     private UserDataBinder userDataBinder;\n+    @Autowired\n+    private Workflow userWorkflow;\n+    @Autowired\n+    private WorkflowEntryDAO workflowEntryDAO;\n+\n+    @Transactional\n+    @RequestMapping(method = RequestMethod.POST,\n+    value = \"/activate/{userId}\")\n+    public UserTO activate(HttpServletResponse response,\n+            @PathVariable(\"userId\") Long userId,\n+            @RequestParam(\"token\") String token)\n+            throws IOException {\n+\n+        SyncopeUser syncopeUser = syncopeUserDAO.find(userId);\n+\n+        if (syncopeUser == null) {\n+            log.error(\"Could not find user '\" + userId + \"'\");\n+            return throwNotFoundException(String.valueOf(userId), response);\n+        }\n+\n+        Map<String, Object> inputs = new HashMap<String, Object>();\n+        inputs.put(Constants.SYNCOPE_USER, syncopeUser);\n+        if (token != null) {\n+            inputs.put(Constants.TOKEN, token);\n+        }\n+\n+        WorkflowDescriptor workflowDescriptor =\n+                userWorkflow.getWorkflowDescriptor(Constants.USER_WORKFLOW);\n+\n+        int[] actions = userWorkflow.getAvailableActions(\n+                syncopeUser.getWorkflowEntryId(), inputs);\n+        Integer activateActionId = null;\n+        for (int i = 0; i < actions.length && activateActionId == null; i++) {\n+            if (Constants.ACTION_ACTIVATE.equals(\n+                    workflowDescriptor.getAction(actions[i]).getName())) {\n+\n+                activateActionId = actions[i];\n+            }\n+        }\n+        if (activateActionId != null) {\n+            try {\n+                userWorkflow.doAction(syncopeUser.getWorkflowEntryId(),\n+                        activateActionId, inputs);\n+            } catch (WorkflowException e) {\n+                log.error(\"While performing activate\", e);\n+\n+                return throwWorkflowException(e, response);\n+            }\n+\n+            syncopeUser = syncopeUserDAO.save(syncopeUser);\n+        } else {\n+            log.error(\"No action named '\" + Constants.ACTION_ACTIVATE\n+                    + \"' has been found among available actions\");\n+        }\n+\n+        return userDataBinder.getUserTO(syncopeUser);\n+    }\n \n     @Transactional\n     @RequestMapping(method = RequestMethod.POST,\n@@ -56,16 +130,89 @@ public UserTO create(HttpServletResponse response,\n             log.debug(\"create called with parameter \" + userTO);\n         }\n \n-        SyncopeUser user = null;\n+        WorkflowInitException wie = null;\n+        Long workflowId = null;\n         try {\n-            user = userDataBinder.createSyncopeUser(userTO);\n+            workflowId = userWorkflow.initialize(Constants.USER_WORKFLOW, 0,\n+                    Collections.singletonMap(Constants.USER_TO, userTO));\n+        } catch (WorkflowInitException e) {\n+            log.error(\"During workflow initialization: \" + e, e);\n+            wie = e;\n+\n+            // Removing dirty workflow entry\n+            if (e.getWorkflowEntry() != null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Removing dirty workflow entry \"\n+                            + e.getWorkflowEntry());\n+                }\n+\n+                workflowEntryDAO.delete(e.getWorkflowEntry().getId());\n+\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Removed dirty workflow entry \"\n+                            + e.getWorkflowEntry());\n+                }\n+            }\n+        } catch (WorkflowException e) {\n+            log.error(\"Unexpected workflow exception\", e);\n+\n+            return throwWorkflowException(e, response);\n+        }\n+\n+        if (wie != null) {\n+            switch (wie.getExceptionOperation()) {\n+                case OVERWRITE:\n+                    return update(response, userTO);\n+                case REJECT:\n+                    SyncopeClientCompositeErrorException compositeException =\n+                            new SyncopeClientCompositeErrorException(\n+                            HttpStatus.BAD_REQUEST);\n+                    SyncopeClientException rejectedUserCreate =\n+                            new SyncopeClientException(\n+                            SyncopeClientExceptionType.RejectedUserCreate);\n+                    rejectedUserCreate.addElement(\n+                            String.valueOf(wie.getSyncopeUserId()));\n+                    compositeException.addException(rejectedUserCreate);\n+\n+                    return throwCompositeException(compositeException,\n+                            response);\n+            }\n+        }\n+\n+        SyncopeUser syncopeUser = null;\n+        try {\n+            syncopeUser = userDataBinder.createSyncopeUser(userTO);\n         } catch (SyncopeClientCompositeErrorException e) {\n             log.error(\"Could not create for \" + userTO, e);\n             return throwCompositeException(e, response);\n         }\n+        syncopeUser.setWorkflowEntryId(workflowId);\n+        syncopeUser.setCreationTime(new Date());\n+        syncopeUser.generateToken(\n+                Integer.parseInt(syncopeConfigurationDAO.find(\n+                \"token.length\").getConfValue()),\n+                Integer.parseInt(syncopeConfigurationDAO.find(\n+                \"token.expireTime\").getConfValue()));\n+        syncopeUser = syncopeUserDAO.save(syncopeUser);\n+        userTO = userDataBinder.getUserTO(syncopeUser);\n+\n+        int[] availableWorkflowActions = userWorkflow.getAvailableActions(\n+                workflowId, null);\n+        Map<String, SyncopeUser> inputs =\n+                Collections.singletonMap(Constants.SYNCOPE_USER, syncopeUser);\n+        for (int availableWorkflowAction : availableWorkflowActions) {\n+            try {\n+                userWorkflow.doAction(workflowId, availableWorkflowAction,\n+                        inputs);\n+            } catch (WorkflowException e) {\n+                log.error(\"Unexpected workflow exception\", e);\n+\n+                return throwWorkflowException(e, response);\n+            }\n+        }\n \n         response.setStatus(HttpServletResponse.SC_CREATED);\n-        return userDataBinder.getUserTO(user);\n+        return userTO;\n     }\n \n     @Transactional\n@@ -81,23 +228,14 @@ public void delete(HttpServletResponse response,\n             log.error(\"Could not find user '\" + userId + \"'\");\n             throwNotFoundException(String.valueOf(userId), response);\n         } else {\n+            if (user.getWorkflowEntryId() != null) {\n+                workflowEntryDAO.delete(user.getWorkflowEntryId());\n+            }\n+\n             syncopeUserDAO.delete(userId);\n         }\n     }\n \n-    @RequestMapping(method = RequestMethod.GET,\n-    value = \"/isActive/{userId}\")\n-    public ModelAndView isActive(@PathVariable(\"userId\") Long userId)\n-            throws IOException {\n-\n-        // TODO: check workflow\n-        ModelAndView mav = new ModelAndView();\n-\n-        mav.addObject(syncopeUserDAO.find(userId) != null);\n-\n-        return mav;\n-    }\n-\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/list\")\n     public UserTOs list(HttpServletRequest request) throws IOException {\n@@ -161,6 +299,7 @@ public void passwordReset(@PathVariable(\"userId\") Long userId,\n     public UserTOs search(HttpServletResponse response,\n             @RequestBody SearchParameters searchParameters)\n             throws IOException {\n+\n         log.info(\"search called with parameter \" + searchParameters);\n \n         List<UserTO> userTOs = new ArrayList<UserTO>();\n@@ -171,6 +310,27 @@ public UserTOs search(HttpServletResponse response,\n         return result;\n     }\n \n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/status/{userId}\")\n+    public String getStatus(HttpServletResponse response,\n+            @PathVariable(\"userId\") Long userId) throws IOException {\n+\n+        SyncopeUser user = syncopeUserDAO.find(userId);\n+\n+        if (user == null) {\n+            log.error(\"Could not find user '\" + userId + \"'\");\n+            return throwNotFoundException(String.valueOf(userId), response);\n+        }\n+\n+        List<Step> currentSteps = userWorkflow.getCurrentSteps(\n+                user.getWorkflowEntryId());\n+        if (currentSteps == null || currentSteps.isEmpty()) {\n+            return null;\n+        }\n+\n+        return currentSteps.iterator().next().getStatus();\n+    }\n+\n     @Transactional\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/update\")"},{"sha":"7eb7d2e2f85a689a3516df0023041971ef046ef0","filename":"core/src/main/java/org/syncope/core/rest/data/DerivedSchemaDataBinder.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FDerivedSchemaDataBinder.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -71,11 +71,8 @@ public <T extends AbstractDerivedSchema, K extends AbstractSchema> T createDeriv\n             Class<K> reference)\n             throws InstantiationException, IllegalAccessException {\n \n-        T derivedSchema = populateDerivedSchema(derivedReference.newInstance(),\n+        return populateDerivedSchema(derivedReference.newInstance(),\n                 derivedSchemaTO, reference);\n-\n-        // Everything went out fine, we can flush to the database\n-        return derivedSchemaDAO.save(derivedSchema);\n     }\n \n     public <T extends AbstractDerivedSchema, K extends AbstractSchema> T updateDerivedSchema(\n@@ -86,10 +83,8 @@ public <T extends AbstractDerivedSchema, K extends AbstractSchema> T updateDeriv\n         T derivedSchema = derivedSchemaDAO.find(derivedSchemaTO.getName(),\n                 derivedReference);\n         if (derivedSchema != null) {\n-            derivedSchema = populateDerivedSchema(derivedSchema, derivedSchemaTO, reference);\n-\n-            // Everything went out fine, we can flush to the database\n-            return derivedSchemaDAO.save(derivedSchema);\n+            return populateDerivedSchema(\n+                    derivedSchema, derivedSchemaTO, reference);\n         }\n \n         return null;"},{"sha":"350d0b342b48397379785ff0f2972ef81b05bc8e","filename":"core/src/main/java/org/syncope/core/rest/data/SchemaDataBinder.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FSchemaDataBinder.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -80,10 +80,8 @@ public <T extends AbstractSchema, K extends AbstractDerivedSchema> T createSchem\n             throws InstantiationException, IllegalAccessException,\n             UniqueValueException {\n \n-        T schema = populateSchema(reference.newInstance(), schemaTO, derivedReference);\n-\n-        // Everything went out fine, we can flush to the database\n-        return schemaDAO.save(schema);\n+        return populateSchema(\n+                reference.newInstance(), schemaTO, derivedReference);\n     }\n \n     public <T extends AbstractSchema, K extends AbstractDerivedSchema> T updateSchema(\n@@ -130,8 +128,7 @@ public <T extends AbstractSchema, K extends AbstractDerivedSchema> T updateSchem\n                 throw sccee;\n             }\n \n-            // Everything went out fine, we can flush to the database\n-            return schemaDAO.save(schema);\n+            return schema;\n         }\n \n         return null;"},{"sha":"bb92bbf718ee907e28450145cf87010240c202f0","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":13,"deletions":17,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -43,7 +43,6 @@\n import org.syncope.core.persistence.dao.ResourceDAO;\n import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.SyncopeRoleDAO;\n-import org.syncope.core.persistence.dao.SyncopeUserDAO;\n import org.syncope.core.persistence.validation.ValidationException;\n import org.syncope.types.SyncopeClientExceptionType;\n \n@@ -53,24 +52,22 @@ public class UserDataBinder {\n     private static final Logger log = LoggerFactory.getLogger(\n             UserDataBinder.class);\n     private static final String[] ignoreProperties = {\n-        \"attributes\", \"derivedAttributes\", \"roles\", \"resources\"\n+        \"attributes\", \"derivedAttributes\", \"roles\", \"resources\",\n+        \"workflowEntryId\"\n     };\n-    private SyncopeUserDAO syncopeUserDAO;\n     private SchemaDAO schemaDAO;\n     private AttributeValueDAO attributeValueDAO;\n     private DerivedSchemaDAO derivedSchemaDAO;\n     private SyncopeRoleDAO syncopeRoleDAO;\n     private ResourceDAO resourceDAO;\n \n     @Autowired\n-    public UserDataBinder(SyncopeUserDAO syncopeUserDAO,\n-            SchemaDAO schemaDAO,\n+    public UserDataBinder(SchemaDAO schemaDAO,\n             AttributeValueDAO attributeValueDAO,\n             DerivedSchemaDAO derivedSchemaDAO,\n             SyncopeRoleDAO syncopeRoleDAO,\n             ResourceDAO resourceDAO) {\n \n-        this.syncopeUserDAO = syncopeUserDAO;\n         this.schemaDAO = schemaDAO;\n         this.attributeValueDAO = attributeValueDAO;\n         this.derivedSchemaDAO = derivedSchemaDAO;\n@@ -101,8 +98,8 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n         SyncopeClientException invalidResources = new SyncopeClientException(\n                 SyncopeClientExceptionType.InvalidResources);\n \n-        SyncopeUser user = new SyncopeUser();\n-        BeanUtils.copyProperties(userTO, user,\n+        SyncopeUser syncopeUser = new SyncopeUser();\n+        BeanUtils.copyProperties(userTO, syncopeUser,\n                 (String[]) ArrayUtils.add(ignoreProperties, \"id\"));\n \n         // 1. attributes\n@@ -118,7 +115,7 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n             } else {\n                 attribute = new UserAttribute();\n                 attribute.setSchema(schema);\n-                attribute.setOwner(user);\n+                attribute.setOwner(syncopeUser);\n \n                 // if the schema is multivale, all values are considered for\n                 // addition, otherwise only the fist one - if provided - is\n@@ -157,7 +154,7 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n                 }\n \n                 if (!attribute.getAttributeValues().isEmpty()) {\n-                    user.addAttribute(attribute);\n+                    syncopeUser.addAttribute(attribute);\n                 }\n             }\n         }\n@@ -174,16 +171,16 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n             } else {\n                 derivedAttribute = new UserDerivedAttribute();\n                 derivedAttribute.setDerivedSchema(derivedSchema);\n-                derivedAttribute.setOwner(user);\n-                user.addDerivedAttribute(derivedAttribute);\n+                derivedAttribute.setOwner(syncopeUser);\n+                syncopeUser.addDerivedAttribute(derivedAttribute);\n             }\n         }\n \n         // Check if there is some mandatory schema defined for which no value\n         // has been provided\n         List<UserSchema> allUserSchemas = schemaDAO.findAll(UserSchema.class);\n         for (UserSchema userSchema : allUserSchemas) {\n-            if (user.getAttribute(userSchema.getName()) == null\n+            if (syncopeUser.getAttribute(userSchema.getName()) == null\n                     && userSchema.isMandatory()) {\n \n                 log.error(\"Mandatory schema \" + userSchema.getName()\n@@ -201,7 +198,7 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n             if (role == null) {\n                 invalidRoles.addElement(String.valueOf(roleId));\n             } else {\n-                user.addRole(role);\n+                syncopeUser.addRole(role);\n             }\n         }\n \n@@ -213,7 +210,7 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n             if (resource == null) {\n                 invalidResources.addElement(resourceName);\n             } else {\n-                user.addResource(resource);\n+                syncopeUser.addResource(resource);\n             }\n         }\n \n@@ -244,8 +241,7 @@ public SyncopeUser createSyncopeUser(UserTO userTO)\n             throw compositeErrorException;\n         }\n \n-        // Everything went out fine, we can flush to the database\n-        return syncopeUserDAO.save(user);\n+        return syncopeUser;\n     }\n \n     public UserTO getUserTO(SyncopeUser user) {"},{"sha":"33fe6398162800c32833f6251b134cc67ec24d70","filename":"core/src/main/java/org/syncope/core/workflow/Constants.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FConstants.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,25 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+public class Constants {\n+\n+    final public static String ACTION_ACTIVATE = \"activate\";\n+    final public static String ENTRY = \"entry\";\n+    final public static String SYNCOPE_USER = \"syncopeUser\";\n+    final public static String TOKEN = \"token\";\n+    final public static String USER_TO = \"userTO\";\n+    final public static String USER_WORKFLOW = \"userWorkflow\";\n+}"},{"sha":"4cf01e3d06bf3404f5a626e37c8ebf1778a51935","filename":"core/src/main/java/org/syncope/core/workflow/IsValidToken.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FIsValidToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FIsValidToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FIsValidToken.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,43 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.Condition;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.util.Map;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+\n+public class IsValidToken extends OSWorkflowComponent\n+        implements Condition {\n+\n+    @Override\n+    public boolean passesCondition(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        boolean validToken = false;\n+\n+        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                Constants.SYNCOPE_USER);\n+        String token = (String) transientVars.get(Constants.TOKEN);\n+\n+        validToken = syncopeUser.checkToken(token);\n+        if (validToken) {\n+            syncopeUser.removeToken();\n+        }\n+\n+        return validToken;\n+    }\n+}"},{"sha":"9e69462011a85c244451a0ffedd8c8cca5876ee6","filename":"core/src/main/java/org/syncope/core/workflow/OSWorkflowComponent.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FOSWorkflowComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FOSWorkflowComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FOSWorkflowComponent.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,33 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.workflow.Workflow;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.ConfigurableApplicationContext;\n+import org.syncope.core.persistence.util.ApplicationContextManager;\n+\n+public abstract class OSWorkflowComponent {\n+\n+    protected static final Logger log =\n+            LoggerFactory.getLogger(OSWorkflowComponent.class);\n+    protected static final ConfigurableApplicationContext context =\n+            ApplicationContextManager.getApplicationContext();\n+\n+    protected Workflow getUserWorkflow() {\n+        return (Workflow) context.getBean(Constants.USER_WORKFLOW);\n+    }\n+}"},{"sha":"e7f901a2c3b8424547e3dc7c80781bc97fe80d8a","filename":"core/src/main/java/org/syncope/core/workflow/SendEmail.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSendEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSendEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSendEmail.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,34 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.FunctionProvider;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.util.Map;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+\n+public class SendEmail extends OSWorkflowComponent implements FunctionProvider {\n+\n+    @Override\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                Constants.SYNCOPE_USER);\n+\n+        log.info(\"Send an e-mail to \" + syncopeUser);\n+    }\n+}"},{"sha":"62c025e4ae8b90fac7f566b81d1694f3f6fabca1","filename":"core/src/main/java/org/syncope/core/workflow/SpringHibernateJPAWorkflowStore.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSpringHibernateJPAWorkflowStore.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSpringHibernateJPAWorkflowStore.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSpringHibernateJPAWorkflowStore.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -12,7 +12,7 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.core.persistence;\n+package org.syncope.core.workflow;\n \n import com.opensymphony.workflow.StoreException;\n import com.opensymphony.workflow.spi.hibernate3.AbstractHibernateWorkflowStore;","previous_filename":"core/src/main/java/org/syncope/core/persistence/SpringHibernateJPAWorkflowStore.java"},{"sha":"1dd19041ba0fd110fde5a6510cdab268de612fca","filename":"core/src/main/java/org/syncope/core/workflow/WorkflowInitException.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowInitException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowInitException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowInitException.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,75 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow;\n+\n+import com.opensymphony.workflow.InvalidInputException;\n+import com.opensymphony.workflow.spi.WorkflowEntry;\n+\n+public class WorkflowInitException extends InvalidInputException {\n+\n+    public enum ExceptionOperation {\n+\n+        REJECT, OVERWRITE;\n+    };\n+    private ExceptionOperation exceptionOperation;\n+    private Long syncopeUserId;\n+    private WorkflowEntry workflowEntry;\n+\n+    public WorkflowInitException() {\n+        super();\n+    }\n+\n+    public WorkflowInitException(ExceptionOperation exceptionOperation,\n+            Long syncopeUserId, WorkflowEntry workflowEntry) {\n+\n+        super();\n+\n+        this.exceptionOperation = exceptionOperation;\n+        this.syncopeUserId = syncopeUserId;\n+        this.workflowEntry = workflowEntry;\n+    }\n+\n+    public ExceptionOperation getExceptionOperation() {\n+        return exceptionOperation;\n+    }\n+\n+    public void setExceptionOperation(ExceptionOperation exceptionOperation) {\n+        this.exceptionOperation = exceptionOperation;\n+    }\n+\n+    public Long getSyncopeUserId() {\n+        return syncopeUserId;\n+    }\n+\n+    public void setSyncopeUserId(Long syncopeUserId) {\n+        this.syncopeUserId = syncopeUserId;\n+    }\n+\n+    public WorkflowEntry getWorkflowEntry() {\n+        return workflowEntry;\n+    }\n+\n+    public void setWorkflowEntry(WorkflowEntry workflowEntry) {\n+        this.workflowEntry = workflowEntry;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"WorkflowInitException{\"\n+                + \"exceptionOperation=\" + exceptionOperation + \",\"\n+                + \"syncopeUserId=\" + syncopeUserId + \",\"\n+                + \"workflowEntry=\" + workflowEntry.getId() + '}';\n+    }\n+}"},{"sha":"c8b3c311c2ed16c53a2a97ac3e45476b9a1d6b33","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/CheckIfUserIdAlreadyExists.java","status":"added","additions":94,"deletions":0,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FCheckIfUserIdAlreadyExists.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FCheckIfUserIdAlreadyExists.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FCheckIfUserIdAlreadyExists.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,94 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import org.syncope.core.workflow.OSWorkflowComponent;\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.InvalidInputException;\n+import com.opensymphony.workflow.Validator;\n+import com.opensymphony.workflow.Workflow;\n+import com.opensymphony.workflow.WorkflowException;\n+import com.opensymphony.workflow.query.FieldExpression;\n+import com.opensymphony.workflow.query.WorkflowExpressionQuery;\n+import com.opensymphony.workflow.spi.Step;\n+import com.opensymphony.workflow.spi.WorkflowEntry;\n+import java.util.List;\n+import java.util.Map;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.beans.user.UserAttributeValue;\n+import org.syncope.core.persistence.dao.SyncopeUserDAO;\n+import org.syncope.core.workflow.Constants;\n+import org.syncope.core.workflow.WorkflowInitException;\n+\n+public class CheckIfUserIdAlreadyExists extends OSWorkflowComponent\n+        implements Validator {\n+\n+    @Override\n+    public void validate(Map transientVars, Map args, PropertySet ps)\n+            throws InvalidInputException, WorkflowException {\n+\n+        UserTO userTO = (UserTO) transientVars.get(Constants.USER_TO);\n+        String userId = Utils.getUserId(userTO);\n+\n+        // Check if there is at least another workflow instance involving the\n+        // same user, using userId as matching value (stored as owner)\n+        Workflow workflow = getUserWorkflow();\n+        WorkflowExpressionQuery query = new WorkflowExpressionQuery(\n+                new FieldExpression(FieldExpression.CALLER,\n+                FieldExpression.CURRENT_STEPS, FieldExpression.EQUALS, userId));\n+        List<Long> entries = workflow.query(query);\n+        if (!entries.isEmpty()) {\n+            WorkflowInitException initException = new WorkflowInitException();\n+            initException.setWorkflowEntry((WorkflowEntry) transientVars.get(\n+                    Constants.ENTRY));\n+\n+            // Find SyncopeUser involved in ther other worklfow instance\n+            SyncopeUserDAO syncopeUserDAO = (SyncopeUserDAO) context.getBean(\n+                    \"syncopeUserDAOImpl\");\n+            UserAttributeValue userIdValue = new UserAttributeValue();\n+            userIdValue.setStringValue(userId);\n+            List<SyncopeUser> matchingUsers =\n+                    syncopeUserDAO.findByAttributeValue(userIdValue);\n+            if (matchingUsers != null && !matchingUsers.isEmpty()) {\n+                initException.setSyncopeUserId(\n+                        matchingUsers.iterator().next().getId());\n+            }\n+\n+            // Check if the user, in the other workflow instance, has status\n+            // \"active\" or \"suspended\" and report the corresponding action to\n+            // take\n+            List<Step> currentSteps =\n+                    workflow.getCurrentSteps(entries.iterator().next());\n+            if (currentSteps.size() > 1) {\n+                throw new WorkflowException(\n+                        \"Unexpected number of current steps: \"\n+                        + currentSteps.size());\n+            }\n+            Step currentStep = currentSteps.iterator().next();\n+            if (currentStep.getStatus().equals(\"active\")\n+                    || currentStep.getStatus().equals(\"suspended\")) {\n+\n+                initException.setExceptionOperation(\n+                        WorkflowInitException.ExceptionOperation.REJECT);\n+            } else {\n+                initException.setExceptionOperation(\n+                        WorkflowInitException.ExceptionOperation.OVERWRITE);\n+            }\n+\n+            throw initException;\n+        }\n+    }\n+}"},{"sha":"db4a5ea5497227b8e49dae7db411425386a1a251","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/IsMobileApplication.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FIsMobileApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FIsMobileApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FIsMobileApplication.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,49 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import org.syncope.core.workflow.OSWorkflowComponent;\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.Condition;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.util.Map;\n+import org.syncope.core.persistence.beans.role.RoleAttribute;\n+import org.syncope.core.persistence.beans.role.SyncopeRole;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.workflow.Constants;\n+\n+public class IsMobileApplication extends OSWorkflowComponent\n+        implements Condition {\n+\n+    @Override\n+    public boolean passesCondition(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                Constants.SYNCOPE_USER);\n+        boolean mobileApplication = false;\n+\n+        RoleAttribute attribute = null;\n+        for (SyncopeRole application : syncopeUser.getRoles()) {\n+            attribute = application.getAttribute(\"applicationType\");\n+            if (attribute != null && !attribute.getAttributeValues().isEmpty()) {\n+                mobileApplication = \"mobile\".equals(\n+                        attribute.getAttributeValues().iterator().next().getStringValue());\n+            }\n+        }\n+\n+        return mobileApplication;\n+    }\n+}"},{"sha":"5c25cbec822520477051f9dc620076f12d0f9dc1","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/OpenAMActivate.java","status":"added","additions":106,"deletions":0,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMActivate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMActivate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMActivate.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,106 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import java.io.IOException;\n+import org.syncope.core.workflow.OSWorkflowComponent;\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.FunctionProvider;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.io.BufferedReader;\n+import java.io.InputStreamReader;\n+import java.net.URI;\n+import java.net.URLEncoder;\n+import java.util.Map;\n+import java.util.Properties;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.client.ClientHttpRequest;\n+import org.springframework.http.client.ClientHttpResponse;\n+import org.springframework.web.client.RestTemplate;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.workflow.Constants;\n+\n+/**\n+ * TODO: remove ASAP!\n+ */\n+public class OpenAMActivate extends OSWorkflowComponent\n+        implements FunctionProvider {\n+\n+    @Override\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                Constants.SYNCOPE_USER);\n+\n+        Properties openAMProps = new Properties();\n+        ClientHttpResponse response = null;\n+        BufferedReader reader = null;\n+        try {\n+            openAMProps.load(getClass().getResourceAsStream(\n+                    \"/WEB-INF/classes/openam.properties\"));\n+\n+            RestTemplate restTemplate =\n+                    (RestTemplate) context.getBean(\"restTemplate\");\n+\n+            ClientHttpRequest request =\n+                    restTemplate.getRequestFactory().createRequest(\n+                    new URI(openAMProps.getProperty(\"baseURL\")\n+                    + \"/identity/authenticate?username=\"\n+                    + openAMProps.getProperty(\"username\")\n+                    + \"&password=\"\n+                    + openAMProps.getProperty(\"password\")),\n+                    HttpMethod.GET);\n+            response = request.execute();\n+            reader = new BufferedReader(\n+                    new InputStreamReader(response.getBody(), \"UTF-8\"));\n+            String adminTokenId = reader.readLine();\n+            adminTokenId = adminTokenId.substring(adminTokenId.indexOf('=') + 1);\n+            response.getBody().close();\n+            reader.close();\n+\n+            request = restTemplate.getRequestFactory().createRequest(\n+                    new URI(openAMProps.getProperty(\"baseURL\")\n+                    + \"/identity/update?identity_name=\"\n+                    + Utils.getUserId(syncopeUser)\n+                    + \"&identity_attribute_names=inetuserstatus\"\n+                    + \"&identity_attribute_values_inetuserstatus=\"\n+                    + \"active\"\n+                    + \"&identity_realm=/&identity_type=user&admin=\"\n+                    + URLEncoder.encode(adminTokenId, \"UTF-8\")),\n+                    HttpMethod.GET);\n+            request.execute();\n+\n+            request = restTemplate.getRequestFactory().createRequest(\n+                    new URI(openAMProps.getProperty(\"baseURL\")\n+                    + \"/identity/logout?subjectid=\"\n+                    + URLEncoder.encode(adminTokenId, \"UTF-8\")),\n+                    HttpMethod.GET);\n+            request.execute();\n+        } catch (Throwable t) {\n+            log.error(\"While trying to create the user on OpenAM\", t);\n+        } finally {\n+            try {\n+                if (reader != null) {\n+                    reader.close();\n+                }\n+                if (response != null) {\n+                    response.getBody().close();\n+                }\n+            } catch (IOException e) {\n+            }\n+        }\n+    }\n+}"},{"sha":"7d8c4150c0bc8b874ec16ed3aad3e30220112e2f","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/OpenAMCreate.java","status":"added","additions":113,"deletions":0,"changes":113,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FOpenAMCreate.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,113 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import java.io.IOException;\n+import org.syncope.core.workflow.OSWorkflowComponent;\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.FunctionProvider;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.io.BufferedReader;\n+import java.io.InputStreamReader;\n+import java.net.URI;\n+import java.net.URLEncoder;\n+import java.util.Map;\n+import java.util.Properties;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.client.ClientHttpRequest;\n+import org.springframework.http.client.ClientHttpResponse;\n+import org.springframework.web.client.RestTemplate;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.workflow.Constants;\n+\n+/**\n+ * TODO: remove ASAP!\n+ */\n+public class OpenAMCreate extends OSWorkflowComponent\n+        implements FunctionProvider {\n+\n+    @Override\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                Constants.SYNCOPE_USER);\n+\n+        Properties openAMProps = new Properties();\n+        ClientHttpResponse response = null;\n+        BufferedReader reader = null;\n+        try {\n+            openAMProps.load(getClass().getResourceAsStream(\n+                    \"/WEB-INF/classes/openam.properties\"));\n+\n+            RestTemplate restTemplate =\n+                    (RestTemplate) context.getBean(\"restTemplate\");\n+\n+            ClientHttpRequest request =\n+                    restTemplate.getRequestFactory().createRequest(\n+                    new URI(openAMProps.getProperty(\"baseURL\")\n+                    + \"/identity/authenticate?username=\"\n+                    + openAMProps.getProperty(\"username\")\n+                    + \"&password=\"\n+                    + openAMProps.getProperty(\"password\")),\n+                    HttpMethod.GET);\n+            response = request.execute();\n+            reader = new BufferedReader(\n+                    new InputStreamReader(response.getBody(), \"UTF-8\"));\n+            String adminTokenId = reader.readLine();\n+            adminTokenId = adminTokenId.substring(adminTokenId.indexOf('=') + 1);\n+            response.getBody().close();\n+            reader.close();\n+\n+            request = restTemplate.getRequestFactory().createRequest(\n+                    new URI(openAMProps.getProperty(\"baseURL\")\n+                    + \"/identity/create?identity_name=\"\n+                    + Utils.getUserId(syncopeUser)\n+                    + \"&identity_attribute_names=userpassword\"\n+                    + \"&identity_attribute_values_userpassword=\"\n+                    + syncopeUser.getPassword()\n+                    + \"&identity_attribute_names=sn&identity_attribute_values_sn=\"\n+                    + Utils.getUserId(syncopeUser)\n+                    + \"&identity_attribute_names=cn&identity_attribute_values_cn=\"\n+                    + Utils.getUserId(syncopeUser)\n+                    + \"&identity_attribute_names=inetuserstatus\"\n+                    + \"&identity_attribute_values_inetuserstatus=\"\n+                    + \"inactive\"\n+                    + \"&identity_realm=/&identity_type=user&admin=\"\n+                    + URLEncoder.encode(adminTokenId, \"UTF-8\")),\n+                    HttpMethod.GET);\n+            request.execute();\n+\n+            request = restTemplate.getRequestFactory().createRequest(\n+                    new URI(openAMProps.getProperty(\"baseURL\")\n+                    + \"/identity/logout?subjectid=\"\n+                    + URLEncoder.encode(adminTokenId, \"UTF-8\")),\n+                    HttpMethod.GET);\n+            request.execute();\n+        } catch (Throwable t) {\n+            log.error(\"While trying to create the user on OpenAM\", t);\n+        } finally {\n+            try {\n+                if (reader != null) {\n+                    reader.close();\n+                }\n+                if (response != null) {\n+                    response.getBody().close();\n+                }\n+            } catch (IOException e) {\n+            }\n+        }\n+    }\n+}"},{"sha":"ae4b9534890c73c465278d7d266bb8759b8564b4","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/SendSMSText.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendSMSText.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendSMSText.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FSendSMSText.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,37 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import org.syncope.core.workflow.OSWorkflowComponent;\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.FunctionProvider;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.util.Map;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.workflow.Constants;\n+\n+public class SendSMSText extends OSWorkflowComponent\n+        implements FunctionProvider {\n+\n+    @Override\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                Constants.SYNCOPE_USER);\n+\n+        log.info(\"Send an SMS text to \" + syncopeUser);\n+    }\n+}"},{"sha":"ed028a4f008cee4e13e5be5c7f2c6c6c36b4badf","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/StoreActivationDate.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FStoreActivationDate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FStoreActivationDate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FStoreActivationDate.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,59 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.FunctionProvider;\n+import com.opensymphony.workflow.WorkflowException;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.Map;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.beans.user.UserAttribute;\n+import org.syncope.core.persistence.beans.user.UserAttributeValue;\n+import org.syncope.core.persistence.beans.user.UserSchema;\n+import org.syncope.core.persistence.dao.SchemaDAO;\n+import org.syncope.core.persistence.validation.ValidationException;\n+import org.syncope.core.workflow.Constants;\n+import org.syncope.core.workflow.OSWorkflowComponent;\n+\n+public class StoreActivationDate extends OSWorkflowComponent\n+        implements FunctionProvider {\n+\n+    @Override\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                Constants.SYNCOPE_USER);\n+\n+        SchemaDAO schemaDAO = (SchemaDAO) context.getBean(\"schemaDAOImpl\");\n+        UserSchema schema = schemaDAO.find(\"activationDate\", UserSchema.class);\n+\n+        UserAttribute attribute = new UserAttribute();\n+        attribute.setSchema(schema);\n+        attribute.setOwner(syncopeUser);\n+        syncopeUser.addAttribute(attribute);\n+\n+        SimpleDateFormat sdf = new SimpleDateFormat(\n+                schema.getConversionPattern());\n+        try {\n+            attribute.addValue(sdf.format(new Date()),\n+                    new UserAttributeValue());\n+        } catch (ValidationException e) {\n+            log.error(\"Could not store activation date\", e);\n+        }\n+    }\n+}"},{"sha":"2d6c8b95706645f656c64d9aea597982a697aab7","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/StoreUserIdAsCaller.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FStoreUserIdAsCaller.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FStoreUserIdAsCaller.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FStoreUserIdAsCaller.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,55 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import com.opensymphony.module.propertyset.PropertySet;\n+import com.opensymphony.workflow.FunctionProvider;\n+import com.opensymphony.workflow.Workflow;\n+import com.opensymphony.workflow.WorkflowException;\n+import com.opensymphony.workflow.spi.WorkflowEntry;\n+import com.opensymphony.workflow.spi.hibernate.HibernateCurrentStep;\n+import java.util.List;\n+import java.util.Map;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.workflow.Constants;\n+import org.syncope.core.workflow.OSWorkflowComponent;\n+\n+public class StoreUserIdAsCaller extends OSWorkflowComponent\n+        implements FunctionProvider {\n+\n+    @Override\n+    public void execute(Map transientVars, Map args, PropertySet ps)\n+            throws WorkflowException {\n+\n+        UserTO userTO = (UserTO) transientVars.get(\"userTO\");\n+        String userId = null;\n+        if (userTO == null) {\n+            SyncopeUser syncopeUser = (SyncopeUser) transientVars.get(\n+                    Constants.SYNCOPE_USER);\n+            userId = Utils.getUserId(syncopeUser);\n+        } else {\n+            userId = Utils.getUserId(userTO);\n+        }\n+\n+        WorkflowEntry entry = (WorkflowEntry) transientVars.get(\"entry\");\n+        Workflow workflow = getUserWorkflow();\n+        List<HibernateCurrentStep> currentSteps = workflow.getCurrentSteps(\n+                entry.getId());\n+        for (HibernateCurrentStep currentStep : currentSteps) {\n+            currentStep.setCaller(userId);\n+        }\n+    }\n+}"},{"sha":"4542dd5e51135839b27dc88f3576e0045fac50b2","filename":"core/src/main/java/org/syncope/core/workflow/prcsiam/Utils.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Fprcsiam%2FUtils.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,56 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.workflow.prcsiam;\n+\n+import com.opensymphony.workflow.WorkflowException;\n+import org.syncope.client.to.AttributeTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.beans.user.UserAttribute;\n+\n+public class Utils {\n+\n+    public static String getUserId(UserTO userTO) throws WorkflowException {\n+        String userId = null;\n+\n+        for (AttributeTO attributeTO : userTO.getAttributes()) {\n+            if (attributeTO.getSchema().equals(\"userId\")\n+                    && attributeTO.getValues() != null\n+                    && !attributeTO.getValues().isEmpty()) {\n+\n+                userId = attributeTO.getValues().iterator().next();\n+            }\n+        }\n+        if (userId == null) {\n+            throw new WorkflowException(\n+                    \"UserTO not provided with mandatory userId: \" + userTO);\n+        }\n+\n+        return userId;\n+    }\n+\n+    public static String getUserId(SyncopeUser syncopeUser)\n+            throws WorkflowException {\n+\n+        UserAttribute userId = syncopeUser.getAttribute(\"userId\");\n+        if (userId == null || userId.getAttributeValues().isEmpty()) {\n+            throw new WorkflowException(\n+                    \"SyncopeUser not provided with mandatory userId: \"\n+                    + syncopeUser);\n+        }\n+\n+        return userId.getAttributeValues().iterator().next().getStringValue();\n+    }\n+}"},{"sha":"ff1fe8d6e7bb2dc425be9c8ef0db688a486590c2","filename":"core/src/main/resources/META-INF/com/opensymphony/workflow/spi/hibernate3/HibernateCurrentStep.hbm.xml","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcom%2Fopensymphony%2Fworkflow%2Fspi%2Fhibernate3%2FHibernateCurrentStep.hbm.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcom%2Fopensymphony%2Fworkflow%2Fspi%2Fhibernate3%2FHibernateCurrentStep.hbm.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcom%2Fopensymphony%2Fworkflow%2Fspi%2Fhibernate3%2FHibernateCurrentStep.hbm.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\"?>\n+<!DOCTYPE hibernate-mapping PUBLIC \"-//Hibernate/Hibernate Mapping DTD//EN\" \"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\">\n+\n+<hibernate-mapping>\n+    <class name=\"com.opensymphony.workflow.spi.hibernate.HibernateCurrentStep\" table=\"OS_CURRENTSTEP\">\n+        <id name=\"id\" unsaved-value=\"-1\">\n+            <generator class=\"native\"/>\n+        </id>\n+        <property name=\"actionId\" column=\"action_Id\"/>\n+        <property name=\"caller\" column=\"caller\"/>\n+        <property name=\"finishDate\" column=\"finish_Date\"/>\n+        <property name=\"startDate\" column=\"start_Date\"/>\n+        <property name=\"dueDate\" column=\"due_Date\"/>\n+        <property name=\"owner\" column=\"owner\"/>\n+        <property name=\"status\" column=\"status\"/>\n+        <property name=\"stepId\" column=\"step_Id\"/>\n+\n+        <many-to-one name=\"entry\" class=\"com.opensymphony.workflow.spi.hibernate.HibernateWorkflowEntry\" column=\"entry_Id\" cascade=\"none\"/>\n+    </class>\n+</hibernate-mapping>"},{"sha":"d9fed759b58263efff05e967363a3b414e99adf8","filename":"core/src/main/resources/META-INF/com/opensymphony/workflow/spi/hibernate3/HibernateHistoryStep.hbm.xml","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcom%2Fopensymphony%2Fworkflow%2Fspi%2Fhibernate3%2FHibernateHistoryStep.hbm.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcom%2Fopensymphony%2Fworkflow%2Fspi%2Fhibernate3%2FHibernateHistoryStep.hbm.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcom%2Fopensymphony%2Fworkflow%2Fspi%2Fhibernate3%2FHibernateHistoryStep.hbm.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\"?>\n+<!DOCTYPE hibernate-mapping PUBLIC \"-//Hibernate/Hibernate Mapping DTD//EN\" \"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\">\n+\n+<hibernate-mapping>\n+    <class name=\"com.opensymphony.workflow.spi.hibernate.HibernateHistoryStep\" table=\"OS_HISTORYSTEP\">\n+        <id name=\"id\" unsaved-value=\"-1\">\n+            <generator class=\"native\"/>\n+        </id>\n+        <property name=\"actionId\" column=\"action_Id\"/>\n+        <property name=\"caller\" column=\"caller\"/>\n+        <property name=\"finishDate\" column=\"finish_Date\"/>\n+        <property name=\"startDate\" column=\"start_Date\"/>\n+        <property name=\"dueDate\" column=\"due_Date\"/>\n+        <property name=\"owner\" column=\"owner\"/>\n+        <property name=\"status\" column=\"status\"/>\n+        <property name=\"stepId\" column=\"step_Id\"/>\n+\n+        <many-to-one name=\"entry\" class=\"com.opensymphony.workflow.spi.hibernate.HibernateWorkflowEntry\" column=\"entry_Id\" cascade=\"none\"/>\n+    </class>\n+</hibernate-mapping>"},{"sha":"12e8a9f6bbaca20f14798c1aae2919e50e972b8f","filename":"core/src/main/resources/META-INF/com/opensymphony/workflow/spi/hibernate3/HibernateWorkflowEntry.hbm.xml","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcom%2Fopensymphony%2Fworkflow%2Fspi%2Fhibernate3%2FHibernateWorkflowEntry.hbm.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcom%2Fopensymphony%2Fworkflow%2Fspi%2Fhibernate3%2FHibernateWorkflowEntry.hbm.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcom%2Fopensymphony%2Fworkflow%2Fspi%2Fhibernate3%2FHibernateWorkflowEntry.hbm.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\"?>\n+<!DOCTYPE hibernate-mapping PUBLIC \"-//Hibernate/Hibernate Mapping DTD//EN\" \"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\">\n+\n+<hibernate-mapping>\n+    <class name=\"com.opensymphony.workflow.spi.hibernate.HibernateWorkflowEntry\" table=\"OS_WFENTRY\">\n+        <id name=\"id\" unsaved-value=\"-1\">\n+            <generator class=\"native\"/>\n+        </id>\n+\n+\t\t<version name=\"version\"/>\n+\n+        <property name=\"workflowName\" column=\"name\"/>\n+        <property name=\"state\"/>\n+\n+        <bag name=\"currentSteps\" cascade=\"all-delete-orphan\" lazy=\"true\" inverse=\"true\">\n+            <key column=\"entry_Id\"/>\n+            <!-- index column=\"stepIndex\"/-->\n+            <one-to-many class=\"com.opensymphony.workflow.spi.hibernate.HibernateCurrentStep\"/>\n+        </bag>\n+\n+        <bag name=\"historySteps\" cascade=\"all\" lazy=\"true\" inverse=\"true\">\n+            <key column=\"entry_Id\"/>\n+            <!-- index column=\"stepIndex\"/-->\n+            <one-to-many class=\"com.opensymphony.workflow.spi.hibernate.HibernateHistoryStep\"/>\n+        </bag>\n+\n+    </class>\n+</hibernate-mapping>"},{"sha":"780ef87017a368374f75620cf541e4815d91fe06","filename":"core/src/main/resources/log4j.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2Flog4j.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2Flog4j.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flog4j.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -60,7 +60,7 @@\n     </logger>\n \n     <logger name=\"org.syncope.core.rest\" additivity=\"false\">\n-        <level value=\"DEBUG\"/>\n+        <level value=\"INFO\"/>\n         <appender-ref ref=\"rest\"/>\n     </logger>\n \n@@ -100,7 +100,7 @@\n     </logger>\n \n     <root>\n-        <priority value=\"DEBUG\"/>\n+        <priority value=\"INFO\"/>\n         <appender-ref ref=\"main\"/>\n         <appender-ref ref=\"persistence\"/>\n         <appender-ref ref=\"rest\"/>"},{"sha":"6d1429fb8b0df3ddcac1061edabcf4d374e81b70","filename":"core/src/main/resources/openam.properties","status":"added","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2Fopenam.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2Fopenam.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fopenam.properties?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,4 @@\n+# TODO: remove ASAP!\n+baseURL=http://prcsiam.tech.everett.it:8080/openam\n+username=amadmin\n+password=password"},{"sha":"e8c880b698e61741f407faaf7bd4dc0ad044d933","filename":"core/src/main/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -18,23 +18,40 @@\n     <SyncopeConfiguration confKey=\"identityconnectors.bundle.directory\"\n                           confValue=\"/tmp/bundles\"/>\n \n-    <!-- pRCSIAM: default content -->\n     <UserSchema name=\"userId\" type=\"String\" virtual=\"false\"\n                 mandatory=\"true\" multivalue=\"false\" uniquevalue=\"true\"\n                 validatorClass=\"org.syncope.core.persistence.validation.EmailAddressValidator\"/>\n-\n     <UserSchema name=\"surname\" type=\"String\" virtual=\"false\"\n                 mandatory=\"true\" multivalue=\"false\" uniquevalue=\"false\"/>\n     <UserSchema name=\"firstname\" type=\"String\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"/>\n     <UserSchema name=\"email\" type=\"String\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"true\" uniquevalue=\"false\"\n                 validatorClass=\"org.syncope.core.persistence.validation.EmailAddressValidator\"/>\n+    <UserSchema name=\"activationDate\" type=\"Date\" virtual=\"false\"\n+                mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"\n+                conversionPattern=\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"/>\n \n     <UserDerivedSchema name=\"username\" expression=\"firstname + '.' + surname\"/>\n \n     <UserDerivedSchema_UserSchema derivedSchemas_name=\"username\"\n                                   schemas_name=\"firstname\"/>\n     <UserDerivedSchema_UserSchema derivedSchemas_name=\"username\"\n                                   schemas_name=\"surname\"/>\n+\n+    <RoleSchema name=\"applicationType\" type=\"String\" virtual=\"false\"\n+                mandatory=\"true\" multivalue=\"false\" uniquevalue=\"false\"/>\n+\n+    <SyncopeRole id=\"0\" name=\"/\"/>\n+    <SyncopeRole id=\"1\" name=\"applicationCluster1\" parent=\"/\"/>\n+    <SyncopeRole id=\"2\" name=\"applicationCluster2\" parent=\"/\"/>\n+    <SyncopeRole id=\"3\" name=\"application1\" parent=\"applicationCluster1\"/>\n+    <SyncopeRole id=\"4\" name=\"application2\" parent=\"applicationCluster1\"/>\n+\n+    <RoleAttribute id=\"10\" owner_id=\"4\" schema_name=\"applicationType\"/>\n+    <RoleAttribute id=\"11\" owner_id=\"3\" schema_name=\"applicationType\"/>\n+\n+    <RoleAttributeValue attribute_id=\"10\" id=\"100\" stringValue=\"mobile\"/>\n+    <RoleAttributeValue attribute_id=\"11\" id=\"101\" stringValue=\"e-commerce\"/>\n+\n </dataset>"},{"sha":"62b7a9effd47ddcd8d0ae018e26dc0e4005a136b","filename":"core/src/main/resources/org/syncope/core/persistence/userWorkflow.xml","status":"removed","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2f8eed4a0909113109cbe74180d5ea5979010fad/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FuserWorkflow.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2f8eed4a0909113109cbe74180d5ea5979010fad/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FuserWorkflow.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FuserWorkflow.xml?ref=2f8eed4a0909113109cbe74180d5ea5979010fad","patch":"@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE workflow PUBLIC \"-//OpenSymphony Group//DTD OSWorkflow 2.8//EN\" \"http://www.opensymphony.com/osworkflow/workflow_2_8.dtd\">\n-<!--\n-  Licensed under the Apache License, Version 2.0 (the \"License\");\n-  you may not use this file except in compliance with the License.\n-  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<workflow>\n-</workflow>"},{"sha":"c7a4a752a489a7f795fd98b5926be99141bbcc6f","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":5,"deletions":47,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -30,6 +30,9 @@\n     <context:component-scan base-package=\"org.syncope.core.persistence\"/>\n     <context:component-scan base-package=\"org.syncope.core.rest.data\"/>\n \n+    <bean id=\"contextApplicationContextProvider\"\n+          class=\"org.syncope.core.persistence.util.ApplicationContextProvider\"/>\n+          \n     <bean id=\"propertyConfigurer\"\n           class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n         <property name=\"locations\">\n@@ -62,10 +65,9 @@\n         <property name=\"dataSource\" ref=\"dataSource\"/>\n         <property name=\"jpaVendorAdapter\">\n             <bean class=\"org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter\">\n-                <property name=\"showSql\" value=\"true\"/>\n+                <property name=\"showSql\" value=\"false\"/>\n                 <property name=\"generateDdl\" value=\"true\"/>\n-                <property name=\"databasePlatform\"\n-                          value=\"${hibernate.dialect}\"/>\n+                <property name=\"databasePlatform\" value=\"${hibernate.dialect}\"/>\n             </bean>\n         </property>\n     </bean>\n@@ -81,48 +83,4 @@\n         <property name=\"entityManagerFactory\" ref=\"entityManagerFactory\"/>\n     </bean>\n \n-    <bean id=\"contextApplicationContextProvider\"\n-          class=\"org.syncope.core.persistence.util.ApplicationContextProvider\" />\n-\n-    <!-- workflow -->\n-    <bean id=\"workflowFactory\"\n-          class=\"com.opensymphony.workflow.spi.hibernate.SpringWorkflowFactory\"\n-          init-method=\"init\">\n-        <property name=\"resource\">\n-            <value>org/syncope/core/persistence/workflows.xml</value>\n-        </property>\n-        <property name=\"reload\">\n-            <value>true</value>\n-        </property>\n-    </bean>\n-\n-    <bean id=\"workflowStore\"\n-          class=\"org.syncope.core.persistence.SpringHibernateJPAWorkflowStore\"/>\n-\n-    <bean id=\"osworkflowConfiguration\"\n-          class=\"com.opensymphony.workflow.config.SpringConfiguration\">\n-        <property name=\"store\">\n-            <ref local=\"workflowStore\"/>\n-        </property>\n-        <property name=\"factory\">\n-            <ref local=\"workflowFactory\"/>\n-        </property>\n-    </bean>\n-\n-    <bean id=\"workflowTypeResolver\"\n-          class=\"com.opensymphony.workflow.util.SpringTypeResolver\"/>\n-\n-    <bean id=\"userWorkflow\"\n-          class=\"com.opensymphony.workflow.basic.BasicWorkflow\">\n-        <constructor-arg>\n-            <value>user</value>\n-        </constructor-arg>\n-        <property name=\"configuration\">\n-            <ref local=\"osworkflowConfiguration\"/>\n-        </property>\n-        <property name=\"resolver\">\n-            <ref local=\"workflowTypeResolver\"/>\n-        </property>\n-    </bean>\n-\n </beans>"},{"sha":"653680f799e94690e3f58315c7cafe932525837a","filename":"core/src/main/resources/userWorkflow.xml","status":"added","additions":176,"deletions":0,"changes":176,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,176 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE workflow PUBLIC \"-//OpenSymphony Group//DTD OSWorkflow 2.8//EN\" \"http://www.opensymphony.com/osworkflow/workflow_2_8.dtd\">\n+<!--\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<workflow>\n+    <initial-actions>\n+        <action name=\"start\" id=\"0\">\n+            <validators>\n+                <validator type=\"class\">\n+                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.CheckIfUserIdAlreadyExists</arg>\n+                </validator>\n+            </validators>\n+            <pre-functions>\n+                <function type=\"class\">\n+                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.StoreUserIdAsCaller</arg>\n+                </function>\n+            </pre-functions>\n+            <results>\n+                <unconditional-result old-status=\"n/a\" status=\"creationRequest\" step=\"1\"/>\n+            </results>\n+        </action>\n+    </initial-actions>\n+    <common-actions>\n+        <action name=\"reset\" id=\"100\">\n+            <results>\n+                <unconditional-result old-status=\"n/a\" status=\"creationRequest\" step=\"1\"/>\n+            </results>\n+        </action>\n+    </common-actions>\n+    <steps>\n+        <step name=\"creationRequest\" id=\"1\">\n+            <pre-functions>\n+                <function type=\"class\">\n+                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.StoreUserIdAsCaller</arg>\n+                </function>\n+            </pre-functions>\n+            <actions>\n+                <action name=\"create\" id=\"1001\">\n+                    <results>\n+                        <result old-status=\"creationRequest\" status=\"active\" step=\"3\">\n+                            <conditions type=\"AND\">\n+                                <condition type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.IsMobileApplication</arg>\n+                                </condition>\n+                            </conditions>\n+                            <post-functions>\n+                                <function type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.SendSMSText</arg>\n+                                </function>\n+                                <function type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.StoreActivationDate</arg>\n+                                </function>\n+                            </post-functions>\n+                        </result>\n+                        <unconditional-result old-status=\"creationRequest\" status=\"doubleOptIn\" step=\"2\"/>\n+                    </results>\n+                    <post-functions>\n+                        <function type=\"class\">\n+                            <arg name=\"class.name\">org.syncope.core.workflow.SendEmail</arg>\n+                        </function>\n+                        <!-- TMP -->\n+                        <function type=\"class\">\n+                            <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.OpenAMCreate</arg>\n+                        </function>\n+                    </post-functions>\n+                </action>\n+            </actions>\n+        </step>\n+        <step name=\"doubleOptIn\" id=\"2\">\n+            <pre-functions>\n+                <function type=\"class\">\n+                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.StoreUserIdAsCaller</arg>\n+                </function>\n+            </pre-functions>\n+            <actions>\n+                <common-action id=\"100\"/>\n+\n+                <action name=\"activate\" id=\"2001\">\n+                    <results>\n+                        <result old-status=\"doubleOptIn\" status=\"active\" step=\"3\">\n+                            <conditions type=\"AND\">\n+                                <condition type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.IsValidToken</arg>\n+                                </condition>\n+                            </conditions>\n+                            <post-functions>\n+                                <function type=\"class\">\n+                                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.StoreActivationDate</arg>\n+                                </function>\n+                            </post-functions>\n+                        </result>\n+                        <unconditional-result old-status=\"doubleOptIn\" status=\"doubleOptIn\" step=\"2\"/>\n+                    </results>\n+                </action>\n+            </actions>\n+        </step>\n+        <step name=\"active\" id=\"3\">\n+            <pre-functions>\n+                <function type=\"class\">\n+                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.StoreUserIdAsCaller</arg>\n+                </function>\n+                <!-- TMP -->\n+                <function type=\"class\">\n+                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.OpenAMActivate</arg>\n+                </function>\n+            </pre-functions>\n+            <actions>\n+                <action name=\"subscribe\" id=\"301\">\n+                    <results>\n+                        <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n+                    </results>\n+                </action>\n+                <action name=\"unsubscribe\" id=\"302\">\n+                    <results>\n+                        <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n+                    </results>\n+                </action>\n+                <action name=\"update\" id=\"303\">\n+                    <results>\n+                        <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n+                    </results>\n+                </action>\n+                <action name=\"passwordReset\" id=\"304\">\n+                    <results>\n+                        <unconditional-result old-status=\"active\" status=\"active\" step=\"3\"/>\n+                    </results>\n+                </action>\n+                <action name=\"suspend\" id=\"305\">\n+                    <results>\n+                        <unconditional-result old-status=\"active\" status=\"suspended\" step=\"4\"/>\n+                    </results>\n+                </action>\n+                <action name=\"delete\" id=\"306\">\n+                    <results>\n+                        <unconditional-result old-status=\"active\" status=\"deleted\" step=\"5\"/>\n+                    </results>\n+                </action>\n+            </actions>\n+        </step>\n+        <step name=\"suspended\" id=\"4\">\n+            <pre-functions>\n+                <function type=\"class\">\n+                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.StoreUserIdAsCaller</arg>\n+                </function>\n+            </pre-functions>\n+            <actions>\n+                <action name=\"reactivate\" id=\"401\">\n+                    <results>\n+                        <unconditional-result old-status=\"suspended\" status=\"active\" step=\"3\"/>\n+                    </results>\n+                </action>\n+            </actions>\n+        </step>\n+        <step name=\"deleted\" id=\"5\">\n+            <pre-functions>\n+                <function type=\"class\">\n+                    <arg name=\"class.name\">org.syncope.core.workflow.prcsiam.StoreUserIdAsCaller</arg>\n+                </function>\n+            </pre-functions>\n+            <actions>\n+                <common-action id=\"100\"/>\n+            </actions>\n+        </step>\n+    </steps>\n+</workflow>"},{"sha":"27424bfa3de86e567f85e15a146c6b7346afe54d","filename":"core/src/main/resources/workflowContext.xml","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+       http://www.springframework.org/schema/beans/spring-beans.xsd\">\n+    \n+    <bean id=\"workflowStore\" class=\"org.syncope.core.workflow.SpringHibernateJPAWorkflowStore\">\n+        <property name=\"propertySetDelegate\">\n+            <bean id=\"propertySetDelegate\"\n+                  class=\"com.opensymphony.workflow.util.PropertySetDelegateImpl\"/>\n+        </property>\n+    </bean>\n+\n+    <bean id=\"workflowFactory\"\n+          class=\"com.opensymphony.workflow.spi.hibernate.SpringWorkflowFactory\"\n+          init-method=\"init\">\n+        <property name=\"resource\">\n+            <value>workflows.xml</value>\n+        </property>\n+        <property name=\"reload\">\n+            <value>true</value>\n+        </property>\n+    </bean>\n+\n+    <bean id=\"osworkflowConfiguration\" class=\"com.opensymphony.workflow.config.SpringConfiguration\">\n+        <property name=\"store\">\n+            <ref local=\"workflowStore\"/>\n+        </property>\n+        <property name=\"factory\">\n+            <ref local=\"workflowFactory\"/>\n+        </property>\n+    </bean>\n+\n+    <bean id=\"workflowTypeResolver\" class=\"com.opensymphony.workflow.util.SpringTypeResolver\"/>\n+\n+    <bean id=\"userWorkflow\" class=\"com.opensymphony.workflow.basic.BasicWorkflow\">\n+        <constructor-arg>\n+            <value>userWorkflow</value>\n+        </constructor-arg>\n+        <property name=\"configuration\">\n+            <ref local=\"osworkflowConfiguration\"/>\n+        </property>\n+        <property name=\"resolver\">\n+            <ref local=\"workflowTypeResolver\"/>\n+        </property>\n+    </bean>\n+\n+</beans>\n\\ No newline at end of file"},{"sha":"5a9a65fecfa537d9c27ad4136d033439f9a9f68f","filename":"core/src/main/resources/workflows.xml","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2Fworkflows.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Fmain%2Fresources%2Fworkflows.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fworkflows.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -13,5 +13,5 @@\n   limitations under the License.\n -->\n <workflows>\n-    <workflow name=\"user\" type=\"resource\" location=\"userWorkflow.xml\"/>\n+    <workflow name=\"userWorkflow\" type=\"resource\" location=\"userWorkflow.xml\"/>\n </workflows>","previous_filename":"core/src/main/resources/org/syncope/core/persistence/workflows.xml"},{"sha":"e202c497187064376e272ad7001196f62749b6fc","filename":"core/src/test/java/org/syncope/core/test/persistence/SchemaDAOTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Fpersistence%2FSchemaDAOTest.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -35,7 +35,7 @@ public class SchemaDAOTest extends AbstractTest {\n     @Test\n     public final void findAll() {\n         List<UserSchema> userList = schemaDAO.findAll(UserSchema.class);\n-        assertEquals(5, userList.size());\n+        assertEquals(7, userList.size());\n \n         List<RoleSchema> roleList = schemaDAO.findAll(RoleSchema.class);\n         assertEquals(2, roleList.size());"},{"sha":"f77b719a58d4a9c89d148ec5755efe1a6f7cfff5","filename":"core/src/test/java/org/syncope/core/test/rest/AbstractTestITCase.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FAbstractTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FAbstractTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FAbstractTestITCase.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -23,7 +23,9 @@\n import org.springframework.web.client.RestTemplate;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n-@ContextConfiguration(locations = {\"classpath:persistenceContext.xml\",\n+@ContextConfiguration(locations = {\n+    \"classpath:persistenceContext.xml\",\n+    \"classpath:workflowContext.xml\",\n     \"file:src/main/webapp/WEB-INF/syncope-core-rest-servlet.xml\"})\n public abstract class AbstractTestITCase {\n "},{"sha":"e0b992ce056eb5caf0979c0238a8dfd590690a67","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -35,8 +35,8 @@ public class UserTestITCase extends AbstractTestITCase {\n     @ExpectedException(value = SyncopeClientCompositeErrorException.class)\n     public void createWithException() {\n         AttributeTO attributeTO = new AttributeTO();\n-        attributeTO.setSchema(\"attr1\");\n-        attributeTO.setValues(Collections.singleton(\"value1\"));\n+        attributeTO.setSchema(\"userId\");\n+        attributeTO.setValues(Collections.singleton(\"userId@nowhere.org\"));\n \n         UserTO newUserTO = new UserTO();\n         newUserTO.addAttribute(attributeTO);\n@@ -59,6 +59,11 @@ public void create() {\n         surnameTO.addValue(\"Chicchiriccò\");\n         userTO.addAttribute(surnameTO);\n \n+        AttributeTO userIdTO = new AttributeTO();\n+        userIdTO.setSchema(\"userId\");\n+        userIdTO.addValue(\"chicchiricco@gmail.com\");\n+        userTO.addAttribute(userIdTO);\n+\n         AttributeTO emailTO = new AttributeTO();\n         emailTO.setSchema(\"email\");\n         emailTO.addValue(\"chicchiricco@gmail.com\");\n@@ -71,11 +76,18 @@ public void create() {\n         loginDateTO.addValue(\"2010-07-01\");\n         userTO.addAttribute(loginDateTO);\n \n+        // 1. create user\n         UserTO newUserTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n                 userTO, UserTO.class);\n         userTO.setId(newUserTO.getId());\n         assertEquals(userTO, userTO);\n \n+        // 2. activate user\n+        restTemplate.postForObject(BASE_URL + \"user/activate/\" + userTO.getId(),\n+                Collections.singletonMap(\"token\", userTO.getToken()),\n+                UserTO.class);\n+\n+        // 3. try (and fail) to create another user with the same surname (unique)\n         userTO = new UserTO();\n \n         usernameTO = new AttributeTO();\n@@ -88,6 +100,11 @@ public void create() {\n         surnameTO.addValue(\"Martelli\");\n         userTO.addAttribute(surnameTO);\n \n+        userIdTO = new AttributeTO();\n+        userIdTO.setSchema(\"userId\");\n+        userIdTO.addValue(\"syncope@googlecode.com\");\n+        userTO.addAttribute(userIdTO);\n+\n         emailTO = new AttributeTO();\n         emailTO.setSchema(\"email\");\n         emailTO.addValue(\"syncope@googlecode.com\");"},{"sha":"4baa9f8c5af7f9e927e550041debb1aa3c3bc10a","filename":"core/src/test/resources/log4j_jetty.xml","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Ftest%2Fresources%2Flog4j_jetty.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Ftest%2Fresources%2Flog4j_jetty.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Flog4j_jetty.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n+<!--\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<log4j:configuration>\n+    <appender name=\"jetty\" class=\"org.apache.log4j.RollingFileAppender\">\n+        <param name=\"File\" value=\"${logfile.jetty}\"/>\n+        <param name=\"Append\" value=\"true\"/>\n+        <param name=\"MaxFileSize\" value=\"10240KB\" />\n+        <param name=\"MaxBackupIndex\" value=\"10\" />\n+        <layout class=\"org.apache.log4j.PatternLayout\">\n+            <param name=\"ConversionPattern\" value=\"%-5p %d %C.%M:%L %m%n\"/>\n+        </layout>\n+    </appender>\n+\n+    <logger name=\"org.hibernate\" additivity=\"false\">\n+        <level value=\"OFF\"/>\n+        <appender-ref ref=\"jetty\"/>\n+    </logger>\n+\n+    <root>\n+        <priority value=\"INFO\"/>\n+        <appender-ref ref=\"jetty\"/>\n+    </root>\n+</log4j:configuration>"},{"sha":"7230f71dc387738f684c8d08cddb50c975e91905","filename":"core/src/test/resources/org/syncope/core/persistence/content.xml","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fcontent.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -39,6 +39,9 @@\n \n     <UserSchema name=\"username\" type=\"String\" virtual=\"false\"\n                 mandatory=\"true\" multivalue=\"false\" uniquevalue=\"true\"/>\n+    <UserSchema name=\"userId\" type=\"String\" virtual=\"false\"\n+                mandatory=\"true\" multivalue=\"false\" uniquevalue=\"true\"\n+                validatorClass=\"org.syncope.core.persistence.validation.EmailAddressValidator\"/>\n     <UserSchema name=\"loginDate\" type=\"Date\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"true\" uniquevalue=\"false\"\n                 conversionPattern=\"yyyy-MM-dd\"/>\n@@ -49,7 +52,10 @@\n     <UserSchema name=\"email\" type=\"String\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"true\" uniquevalue=\"true\"\n                 validatorClass=\"org.syncope.core.persistence.validation.EmailAddressValidator\"/>\n-\n+    <UserSchema name=\"activationDate\" type=\"Date\" virtual=\"false\"\n+                mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"\n+                conversionPattern=\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"/>\n+                \n     <RoleSchema name=\"icon\" type=\"String\" virtual=\"false\"\n                 mandatory=\"false\" multivalue=\"false\" uniquevalue=\"false\"/>\n     <RoleSchema name=\"show\" type=\"Boolean\" virtual=\"false\""},{"sha":"2ddbd4ab1b249968f26872aafb34255554040062","filename":"pom.xml","status":"modified","additions":23,"deletions":9,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/18aaa15d03d6c93279a70c1bc9e352d8c01449a8/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=18aaa15d03d6c93279a70c1bc9e352d8c01449a8","patch":"@@ -115,12 +115,10 @@\n         <hibernate.version>3.4.0.GA</hibernate.version>\n         <jasypt.version>1.6</jasypt.version>\n \n-        <postgresql.jdbc-driver.version>8.1-408.jdbc3</postgresql.jdbc-driver.version>\n-\n         <wicket.version>1.4.7</wicket.version>\n \n+        <commons-logging.version>1.1.1</commons-logging.version>\n         <log4j.version>1.2.16</log4j.version>\n-\n         <slf4j.version>1.5.2</slf4j.version>\n \n         <junit.version>4.8.1</junit.version>\n@@ -196,12 +194,6 @@\n                 <version>${jasypt.version}</version>\n             </dependency>\n \n-            <dependency>\n-                <groupId>postgresql</groupId>\n-                <artifactId>postgresql</artifactId>\n-                <version>${postgresql.jdbc-driver.version}</version>\n-            </dependency>\n-\n             <dependency>\n                 <groupId>org.dbunit</groupId>\n                 <artifactId>dbunit</artifactId>\n@@ -393,6 +385,11 @@\n                         <locales>en,it</locales>\n                     </configuration>\n                 </plugin>\n+                <plugin>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <artifactId>maven-war-plugin</artifactId>\n+                    <version>2.1-beta-1</version>\n+                </plugin>\n                 <plugin>\n                     <groupId>org.codehaus.mojo</groupId>\n                     <artifactId>failsafe-maven-plugin</artifactId>\n@@ -410,6 +407,23 @@\n                     <groupId>org.mortbay.jetty</groupId>\n                     <artifactId>maven-jetty-plugin</artifactId>\n                     <version>${jetty.version}</version>\n+                    <dependencies>\n+                        <dependency>\n+                            <groupId>commons-logging</groupId>\n+                            <artifactId>commons-logging</artifactId>\n+                            <version>${commons-logging.version}</version>\n+                        </dependency>\n+                        <dependency>\n+                            <groupId>org.slf4j</groupId>\n+                            <artifactId>slf4j-jcl</artifactId>\n+                            <version>${slf4j.version}</version>\n+                        </dependency>\n+                        <dependency>\n+                            <groupId>log4j</groupId>\n+                            <artifactId>log4j</artifactId>\n+                            <version>${log4j.version}</version>\n+                        </dependency>\n+                    </dependencies>\n                 </plugin>\n             </plugins>\n         </pluginManagement>"}]}