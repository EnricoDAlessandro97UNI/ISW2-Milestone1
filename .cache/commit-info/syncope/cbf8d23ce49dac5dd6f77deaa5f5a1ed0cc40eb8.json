{"sha":"cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNiZjhkMjNjZTQ5ZGFjNWRkNmY3N2RlYWE1ZjVhMWVkMGNjNDBlYjg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-04T11:01:03Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-04T11:01:03Z"},"message":"Merge from 1_0_X + solving some unchecked casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1416878 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b9c4836daf083400f1b9383025082481b3be4df3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b9c4836daf083400f1b9383025082481b3be4df3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c0205e00aeb5e22ebbe95a08a0e13cb42be91591","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c0205e00aeb5e22ebbe95a08a0e13cb42be91591","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c0205e00aeb5e22ebbe95a08a0e13cb42be91591"}],"stats":{"total":42,"additions":24,"deletions":18},"files":[{"sha":"c4c28ee3a9852e69b12b31488feeb8e2306c4105","filename":"client/src/main/java/org/apache/syncope/client/util/XMLSerializer.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FXMLSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FXMLSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FXMLSerializer.java?ref=cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8","patch":"@@ -26,11 +26,11 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * Helper class for serialization and deserialization of configuration objects,\n- * empowering XStream.\n+ * Helper class for serialization and deserialization of configuration objects, empowering XStream.\n+ *\n  * @see http://xstream.codehaus.org/\n  */\n-public class XMLSerializer {\n+public final class XMLSerializer {\n \n     private static final Logger LOG = LoggerFactory.getLogger(XMLSerializer.class);\n \n@@ -47,8 +47,8 @@ public static String serialize(final Object object) {\n         return result;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     public static <T extends Object> T deserialize(final String serialized) {\n-\n         T result = null;\n \n         XStream xstream = new XStream();\n@@ -60,4 +60,7 @@ public static <T extends Object> T deserialize(final String serialized) {\n \n         return result;\n     }\n+\n+    private XMLSerializer() {\n+    }\n }"},{"sha":"c21de2d83962924e8e2c5d2e6385e91bd8502e5a","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/DerivedAttributesPanel.java","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java?ref=cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8","patch":"@@ -63,7 +63,6 @@ public class DerivedAttributesPanel extends Panel {\n     private SchemaRestClient schemaRestClient;\n \n     public <T extends AbstractAttributableTO> DerivedAttributesPanel(final String id, final T entityTO) {\n-\n         super(id);\n         setOutputMarkupId(true);\n \n@@ -107,7 +106,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         };\n \n         add(addAttributeBtn.setDefaultFormProcessing(Boolean.FALSE));\n-        \n+\n         final ListView<AttributeTO> attributes = new ListView<AttributeTO>(\"attributes\",\n                 new PropertyModel<List<? extends AttributeTO>>(entityTO, \"derivedAttributes\")) {\n \n@@ -117,7 +116,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n             protected void populateItem(final ListItem<AttributeTO> item) {\n                 final AttributeTO attributeTO = item.getModelObject();\n \n-                item.add(new  AjaxDecoratedCheckbox(\"toRemove\", new Model<Boolean>(Boolean.FALSE)) {\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model<Boolean>(Boolean.FALSE)) {\n \n                     private static final long serialVersionUID = 7170946748485726506L;\n \n@@ -128,14 +127,15 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     }\n \n                     @Override\n-                    protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {\n+                    protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n                         super.updateAjaxAttributes(attributes);\n \n                         IAjaxCallListener ajaxCallListener = new AjaxCallListener() {\n+\n                             private static final long serialVersionUID = 7160235486520935153L;\n \n                             @Override\n-                            public CharSequence getPrecondition(Component component) { \n+                            public CharSequence getPrecondition(final Component component) {\n                                 return \"if (!confirm('\" + getString(\"confirmDelete\") + \"')) return false;\";\n                             }\n                         };\n@@ -164,11 +164,12 @@ protected void onUpdate(final AjaxRequestTarget art) {\n                 item.add(schemaChoice);\n \n                 final List<String> values = attributeTO.getValues();\n-\n                 if (values == null || values.isEmpty()) {\n-                    item.add(new TextField(\"value\", new Model(null)).setVisible(Boolean.FALSE));\n+                    item.add(new TextField<String>(\"value\",\n+                            new Model<String>(null)).setVisible(Boolean.FALSE));\n                 } else {\n-                    item.add(new TextField(\"value\", new Model(values.get(0))).setEnabled(Boolean.FALSE));\n+                    item.add(new TextField<String>(\"value\",\n+                            new Model<String>(values.get(0))).setEnabled(Boolean.FALSE));\n                 }\n             }\n         };"},{"sha":"13ee52ec45c131a514536f61435fc9ef43119115","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttr.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java?ref=cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8","patch":"@@ -34,6 +34,7 @@ public abstract class AbstractAttr extends AbstractBaseBean {\n \n     public abstract Long getId();\n \n+    @SuppressWarnings(\"unchecked\")\n     public <T extends AbstractAttrValue> T addValue(final String value, final AttributableUtil attributableUtil)\n             throws InvalidAttrValueException {\n \n@@ -74,13 +75,13 @@ public <T extends AbstractAttrValue> T addValue(final String value, final Attrib\n \n     public List<String> getValuesAsStrings() {\n         List<String> result;\n-        if (getUniqueValue() != null) {\n-            result = Collections.singletonList(getUniqueValue().getValueAsString());\n-        } else {\n+        if (getUniqueValue() == null) {\n             result = new ArrayList<String>(getValues().size());\n             for (AbstractAttrValue attributeValue : getValues()) {\n                 result.add(attributeValue.getValueAsString());\n             }\n+        } else {\n+            result = Collections.singletonList(getUniqueValue().getValueAsString());\n         }\n \n         return result;"},{"sha":"59d642df9d66b25358b10f5db24d9b8a75b081c0","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8","patch":"@@ -41,8 +41,8 @@ public class ReportTestITCase extends AbstractTest {\n \n     @Test\n     public void getReportletClasses() {\n-        Set<String> reportletClasses = restTemplate.getForObject(BASE_URL + \"report/reportletConfClasses.json\",\n-                Set.class);\n+        List<String> reportletClasses = Arrays.asList(restTemplate.getForObject(\n+                BASE_URL + \"report/reportletConfClasses.json\", String[].class));\n         assertNotNull(reportletClasses);\n         assertFalse(reportletClasses.isEmpty());\n     }"},{"sha":"84fa2d4bef842c9866d4cc3e2404afb8870e8094","filename":"pom.xml","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=cbf8d23ce49dac5dd6f77deaa5f5a1ed0cc40eb8","patch":"@@ -755,6 +755,7 @@ under the License.\n             <target>${targetJdk}</target>\n             <showWarnings>true</showWarnings>\n             <showDeprecation>true</showDeprecation>\n+            <!--<compilerArgument>-Xlint:unchecked</compilerArgument>-->\n           </configuration>\n         </plugin>\n         <plugin>\n@@ -982,7 +983,7 @@ under the License.\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-enforcer-plugin</artifactId>\n-        <version>1.1.1</version>\n+        <version>1.2</version>\n         <executions>\n           <execution>\n             <id>enforce-java</id>"}]}