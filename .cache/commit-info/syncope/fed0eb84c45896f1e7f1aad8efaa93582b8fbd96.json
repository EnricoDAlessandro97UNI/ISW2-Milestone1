{"sha":"fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZlZDBlYjg0YzQ1ODk2ZjFlN2YxYWFkOGVmYWE5MzU4MmI4ZmJkOTY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-07T09:28:10Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-07T09:28:10Z"},"message":"Everything is transactional, in the DAO world ;-)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246430 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"edbadca7940a651697388433247c07cbdbb17ede","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/edbadca7940a651697388433247c07cbdbb17ede"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/comments","author":null,"committer":null,"parents":[{"sha":"795da012c8a5de25cf7c2eecfc279f4e04b06d1e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/795da012c8a5de25cf7c2eecfc279f4e04b06d1e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/795da012c8a5de25cf7c2eecfc279f4e04b06d1e"}],"stats":{"total":120,"additions":57,"deletions":63},"files":[{"sha":"f83a59bfd3bfddfbfd8c12a777b8aac0a1b470a1","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AbstractDAOImpl.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -20,10 +20,12 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Configurable;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.AbstractBaseBean;\n import org.syncope.core.persistence.dao.DAO;\n \n @Configurable\n+@Transactional(rollbackFor = {Throwable.class})\n public abstract class AbstractDAOImpl implements DAO {\n \n     protected static final Logger log ="},{"sha":"97c2fa6432ae04b633f4770d573aabd12d5a063b","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeDAOImpl.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -26,25 +26,25 @@ public class AttributeDAOImpl extends AbstractDAOImpl\n         implements AttributeDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractAttribute> T find(Long id, Class<T> reference) {\n         return entityManager.find(reference, id);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractAttribute> List<T> findAll(Class<T> reference) {\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractAttribute> T save(T attribute) {\n         return entityManager.merge(attribute);\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractAttribute> void delete(\n             Long id, Class<T> reference) {\n \n@@ -57,7 +57,6 @@ public <T extends AbstractAttribute> void delete(\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractAttribute> void delete(T attribute) {\n         if (attribute.getOwner() != null) {\n             attribute.getOwner().removeAttribute(attribute);"},{"sha":"21d90522a57a78394d7551d27037df33c6be0f86","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeValueDAOImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeValueDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -26,13 +26,15 @@ public class AttributeValueDAOImpl extends AbstractDAOImpl\n         implements AttributeValueDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractAttributeValue> T find(\n             Long id, Class<T> reference) {\n \n         return entityManager.find(reference, id);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractAttributeValue> boolean nonUniqueAttributeValue(\n             T attributeValue) {\n \n@@ -56,6 +58,7 @@ public <T extends AbstractAttributeValue> boolean nonUniqueAttributeValue(\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractAttributeValue> List<T> findAll(\n             Class<T> reference) {\n \n@@ -65,13 +68,11 @@ public <T extends AbstractAttributeValue> List<T> findAll(\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractAttributeValue> T save(T attributeValue) {\n         return entityManager.merge(attributeValue);\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractAttributeValue> void delete(Long id,\n             Class<T> reference) {\n \n@@ -84,7 +85,6 @@ public <T extends AbstractAttributeValue> void delete(Long id,\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractAttributeValue> void delete(T attributeValue) {\n         if (attributeValue.getAttribute() != null) {\n             attributeValue.getAttribute().removeAttributeValue(attributeValue);"},{"sha":"14dd63c52f6ee7b082fe88848dc477c56d91b2ae","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ConnectorInstanceDAOImpl.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnectorInstanceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnectorInstanceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnectorInstanceDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -17,6 +17,7 @@\n import java.util.List;\n import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n import org.syncope.core.persistence.dao.ConnectorInstanceDAO;\n \n@@ -25,11 +26,13 @@ public class ConnectorInstanceDAOImpl extends AbstractDAOImpl\n         implements ConnectorInstanceDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public ConnectorInstance find(Long id) {\n         return entityManager.find(ConnectorInstance.class, id);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<ConnectorInstance> findAll() {\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM ConnectorInstance e\");"},{"sha":"b929387861342c902ec64c8c9954d5bc581df9e5","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/DerivedAttributeDAOImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedAttributeDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -26,13 +26,15 @@ public class DerivedAttributeDAOImpl extends AbstractDAOImpl\n         implements DerivedAttributeDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractDerivedAttribute> T find(\n             Long id, Class<T> reference) {\n \n         return entityManager.find(reference, id);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractDerivedAttribute> List<T> findAll(\n             Class<T> reference) {\n \n@@ -48,7 +50,6 @@ public <T extends AbstractDerivedAttribute> T save(T derivedAttribute) {\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractDerivedAttribute> void delete(\n             Long id, Class<T> reference) {\n "},{"sha":"da1733536b4ce69266fd93813a433bcba41e5c81","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/DerivedSchemaDAOImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerivedSchemaDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -34,13 +34,15 @@ public class DerivedSchemaDAOImpl extends AbstractDAOImpl\n     private DerivedAttributeDAO derivedAttributeDAO;\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractDerivedSchema> T find(String name,\n             Class<T> reference) {\n \n         return entityManager.find(reference, name);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractDerivedSchema> List<T> findAll(\n             Class<T> reference) {\n \n@@ -50,13 +52,11 @@ public <T extends AbstractDerivedSchema> List<T> findAll(\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractDerivedSchema> T save(T derivedSchema) {\n         return entityManager.merge(derivedSchema);\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractDerivedSchema> void delete(String name,\n             Class<T> reference) {\n "},{"sha":"7f3aa597013f36bbe8bce6b4c82aaf880d8c007e","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/EntitlementDAOImpl.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -19,6 +19,7 @@\n import javax.persistence.Query;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.Entitlement;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.dao.EntitlementDAO;\n@@ -28,14 +29,16 @@\n public class EntitlementDAOImpl extends AbstractDAOImpl implements EntitlementDAO {\n \n     @Autowired\n-    SyncopeRoleDAO syncopeRoleDAO;\n+    private SyncopeRoleDAO syncopeRoleDAO;\n \n     @Override\n+    @Transactional(readOnly = true)\n     public Entitlement find(String name) {\n         return entityManager.find(Entitlement.class, name);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<Entitlement> findAll() {\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM Entitlement e\");"},{"sha":"b90c475af2f531c43621ddd3a56ca16ebf199ffb","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/MembershipDAOImpl.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -29,11 +29,13 @@ public class MembershipDAOImpl extends AbstractDAOImpl\n         implements MembershipDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public Membership find(Long id) {\n         return entityManager.find(Membership.class, id);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public Membership find(SyncopeUser user, SyncopeRole role) {\n         Query query = entityManager.createQuery(\"SELECT e FROM Membership e \"\n                 + \"WHERE e.syncopeUser = :user AND e.syncopeRole = :role\");\n@@ -55,19 +57,18 @@ public Membership find(SyncopeUser user, SyncopeRole role) {\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<Membership> findAll() {\n         Query query = entityManager.createQuery(\"SELECT e FROM Membership e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    @Transactional\n     public Membership save(Membership membership) {\n         return entityManager.merge(membership);\n     }\n \n     @Override\n-    @Transactional\n     public void delete(Long id) {\n         Membership membership = find(id);\n         if (membership == null) {"},{"sha":"13566824b5e476641fb827b5f2635a5c4091dee2","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/OSWorkflowPropertyDAOImpl.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FOSWorkflowPropertyDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FOSWorkflowPropertyDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FOSWorkflowPropertyDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -27,11 +27,13 @@ public class OSWorkflowPropertyDAOImpl extends AbstractDAOImpl\n         implements OSWorkflowPropertyDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public OSWorkflowProperty find(Long id) {\n         return entityManager.find(OSWorkflowProperty.class, id);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public OSWorkflowProperty find(Long workflowEntryId, String propertyKey) {\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM OSWorkflowProperty e \"\n@@ -52,13 +54,15 @@ public OSWorkflowProperty find(Long workflowEntryId, String propertyKey) {\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<OSWorkflowProperty> findAll() {\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM OSWorkflowProperty e\");\n         return query.getResultList();\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<OSWorkflowProperty> findAll(Long workflowEntryId) {\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM OSWorkflowProperty e \"\n@@ -68,13 +72,11 @@ public List<OSWorkflowProperty> findAll(Long workflowEntryId) {\n     }\n \n     @Override\n-    @Transactional\n     public OSWorkflowProperty save(OSWorkflowProperty property) {\n         return entityManager.merge(property);\n     }\n \n     @Override\n-    @Transactional\n     public void delete(Long id) {\n         OSWorkflowProperty osWorkflowProperty = find(id);\n         if (osWorkflowProperty == null) {\n@@ -85,7 +87,6 @@ public void delete(Long id) {\n     }\n \n     @Override\n-    @Transactional\n     public void delete(Long workflowEntryId, String propertyKey) {\n         OSWorkflowProperty osWorkflowProperty =\n                 find(workflowEntryId, propertyKey);"},{"sha":"d4053edfe0da8b4a173f5dbcf6a8757cbb6e3383","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -19,6 +19,7 @@\n import javax.persistence.Query;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.ConnectorInstance;\n import org.syncope.core.persistence.beans.Resource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n@@ -32,14 +33,16 @@ public class ResourceDAOImpl extends AbstractDAOImpl\n         implements ResourceDAO {\n \n     @Autowired\n-    SchemaMappingDAO schemaMappingDAO;\n+    private SchemaMappingDAO schemaMappingDAO;\n \n     @Override\n+    @Transactional(readOnly = true)\n     public Resource find(String name) {\n         return entityManager.find(Resource.class, name);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<Resource> findAll() {\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM Resource e\");\n@@ -55,8 +58,9 @@ public Resource save(Resource resource) {\n     public void delete(String name) {\n \n         Resource resource = find(name);\n-        if (resource == null)\n+        if (resource == null) {\n             return;\n+        }\n \n         Set<SchemaMapping> mappings = resource.getMappings();\n         if (mappings != null) {"},{"sha":"2a5cdc52515202561893512889706fbfdf2ab18a","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -42,19 +42,20 @@ public class SchemaDAOImpl extends AbstractDAOImpl\n     private SchemaMappingDAO schemaMappingDAO;\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractSchema> T find(String name, Class<T> reference) {\n         return entityManager.find(reference, name);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public <T extends AbstractSchema> List<T> findAll(Class<T> reference) {\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractSchema> T save(T schema)\n             throws MultiUniqueValueException {\n \n@@ -66,7 +67,6 @@ public <T extends AbstractSchema> T save(T schema)\n     }\n \n     @Override\n-    @Transactional\n     public <T extends AbstractSchema> void delete(\n             String name, Class<T> reference) {\n "},{"sha":"10e5dc45df17006e07693385699e96b1fb5a54df","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaMappingDAOImpl.java","status":"modified","additions":11,"deletions":38,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaMappingDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaMappingDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaMappingDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -15,9 +15,9 @@\n package org.syncope.core.persistence.dao.impl;\n \n import java.util.List;\n-import java.util.Set;\n import javax.persistence.Query;\n import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.Resource;\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.persistence.beans.membership.MembershipSchema;\n@@ -30,11 +30,13 @@ public class SchemaMappingDAOImpl extends AbstractDAOImpl\n         implements SchemaMappingDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public SchemaMapping find(Long id) {\n         return entityManager.find(SchemaMapping.class, id);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<SchemaMapping> findAll() {\n         Query query = entityManager.createQuery(\n                 \"SELECT e FROM SchemaMapping e\");\n@@ -51,56 +53,27 @@ public void delete(Long id) {\n         SchemaMapping mapping = find(id);\n \n         RoleSchema roleSchema = mapping.getRoleSchema();\n-\n-        Set<SchemaMapping> mappings = null;\n-\n-        if (roleSchema != null) {\n-            mappings = roleSchema.getMappings();\n+        if (roleSchema != null && roleSchema.getMappings() != null) {\n+            roleSchema.getMappings().remove(mapping);\n         }\n-\n-        if (mappings != null) {\n-            mappings.remove(mapping);\n-        }\n-\n         mapping.setRoleSchema(null);\n \n         UserSchema userSchema = mapping.getUserSchema();\n-\n-        mappings = null;\n-        if (userSchema != null) {\n-            mappings = userSchema.getMappings();\n-        }\n-\n-        if (mappings != null) {\n-            mappings.remove(mapping);\n+        if (userSchema != null && userSchema.getMappings() != null) {\n+            userSchema.getMappings().remove(mapping);\n         }\n-\n         mapping.setUserSchema(null);\n \n         MembershipSchema membershipSchema = mapping.getMembershipSchema();\n-\n-        mappings = null;\n-        if (membershipSchema != null) {\n-            mappings = membershipSchema.getMappings();\n-        }\n-\n-        if (mappings != null) {\n-            mappings.remove(mapping);\n+        if (membershipSchema != null && membershipSchema.getMappings() != null) {\n+            membershipSchema.getMappings().remove(mapping);\n         }\n-\n         mapping.setMembershipSchema(null);\n \n         Resource resource = mapping.getResource();\n-\n-        mappings = null;\n-        if (resource != null) {\n-            mappings = resource.getMappings();\n-        }\n-\n-        if (mappings != null) {\n-            mappings.remove(mapping);\n+        if (resource != null && resource.getMappings() != null) {\n+            resource.getMappings().remove(mapping);\n         }\n-\n         mapping.setResource(null);\n \n         entityManager.remove(mapping);"},{"sha":"88bd7ecff6f7cfaaa76cdc3b883f7e809461e01e","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SyncopeConfigurationDAOImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeConfigurationDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeConfigurationDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeConfigurationDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -27,6 +27,7 @@ public class SyncopeConfigurationDAOImpl extends AbstractDAOImpl\n         implements SyncopeConfigurationDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public SyncopeConfiguration find(String name)\n             throws MissingConfKeyException {\n \n@@ -41,19 +42,18 @@ public SyncopeConfiguration find(String name)\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<SyncopeConfiguration> findAll() {\n         Query query = entityManager.createQuery(\"SELECT e FROM SyncopeConfiguration e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    @Transactional\n     public SyncopeConfiguration save(SyncopeConfiguration syncopeConfiguration) {\n         return entityManager.merge(syncopeConfiguration);\n     }\n \n     @Override\n-    @Transactional\n     public void delete(String name) {\n         try {\n             entityManager.remove(find(name));"},{"sha":"26b279003e695ac4c00d3c370ecd5c6e532f49a0","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SyncopeRoleDAOImpl.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeRoleDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -32,6 +32,7 @@ public class SyncopeRoleDAOImpl extends AbstractDAOImpl\n         implements SyncopeRoleDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public SyncopeRole find(String name, Long parentId) {\n         Query query = null;\n \n@@ -52,11 +53,13 @@ public SyncopeRole find(String name, Long parentId) {\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public SyncopeRole find(Long id) {\n         return entityManager.find(SyncopeRole.class, id);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<SyncopeRole> findChildren(Long roleId) {\n         Query query = entityManager.createQuery(\n                 \"SELECT r FROM SyncopeRole r WHERE \"\n@@ -78,6 +81,7 @@ private List<Long> getAncestors(SyncopeRole role,\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<RoleAttribute> findInheritedAttributes(SyncopeRole role) {\n         if (role.getParent() == null) {\n             return Collections.EMPTY_LIST;\n@@ -108,6 +112,7 @@ public List<RoleAttribute> findInheritedAttributes(SyncopeRole role) {\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<RoleDerivedAttribute> findInheritedDerivedAttributes(\n             SyncopeRole role) {\n \n@@ -140,6 +145,7 @@ public List<RoleDerivedAttribute> findInheritedDerivedAttributes(\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<SyncopeRole> findAll() {\n         Query query = entityManager.createQuery(\"SELECT e FROM SyncopeRole e\");\n         return query.getResultList();\n@@ -151,7 +157,6 @@ public SyncopeRole save(SyncopeRole syncopeRole) {\n     }\n \n     @Override\n-    @Transactional\n     public void delete(Long id) {\n         SyncopeRole role = find(id);\n         if (id == null) {"},{"sha":"43000054c0f97664fa37f873beb339a7393ef408","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SyncopeUserDAOImpl.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fed0eb84c45896f1e7f1aad8efaa93582b8fbd96/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeUserDAOImpl.java?ref=fed0eb84c45896f1e7f1aad8efaa93582b8fbd96","patch":"@@ -30,11 +30,13 @@ public class SyncopeUserDAOImpl extends AbstractDAOImpl\n         implements SyncopeUserDAO {\n \n     @Override\n+    @Transactional(readOnly = true)\n     public SyncopeUser find(Long id) {\n         return entityManager.find(SyncopeUser.class, id);\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<SyncopeUser> findByAttributeValue(\n             UserAttributeValue attributeValue) {\n \n@@ -62,12 +64,14 @@ public List<SyncopeUser> findByAttributeValue(\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<SyncopeUser> findAll() {\n         Query query = entityManager.createQuery(\"SELECT e FROM SyncopeUser e\");\n         return query.getResultList();\n     }\n \n     @Override\n+    @Transactional(readOnly = true)\n     public List<SyncopeUser> search(NodeSearchCondition searchCondition) {\n         String queryString = QueryUtils.getUserSearchQuery(searchCondition);\n         if (log.isDebugEnabled()) {\n@@ -81,18 +85,16 @@ public List<SyncopeUser> search(NodeSearchCondition searchCondition) {\n         } catch (Throwable t) {\n             log.error(\"While executing query\\n\\t\" + queryString + \"\\n\", t);\n         }\n-        \n+\n         return result;\n     }\n \n     @Override\n-    @Transactional\n     public SyncopeUser save(SyncopeUser syncopeUser) {\n         return entityManager.merge(syncopeUser);\n     }\n \n     @Override\n-    @Transactional\n     public void delete(Long id) {\n         SyncopeUser user = find(id);\n         if (id == null) {"}]}