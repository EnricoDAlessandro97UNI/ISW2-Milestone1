{"sha":"de4ed9f22a7e5d1b82e00801cbb1a91cd3884518","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRlNGVkOWYyMmE3ZTVkMWI4MmUwMDgwMWNiYjFhOTFjZDM4ODQ1MTg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-02-18T16:20:17Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-02-18T16:20:17Z"},"message":"[SYNCOPE-257] Filtering out template attributes with no values\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1447376 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7b2bcd410f8608d12d8918ae1120fe592745e849","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7b2bcd410f8608d12d8918ae1120fe592745e849"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/de4ed9f22a7e5d1b82e00801cbb1a91cd3884518","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/de4ed9f22a7e5d1b82e00801cbb1a91cd3884518","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/de4ed9f22a7e5d1b82e00801cbb1a91cd3884518","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/de4ed9f22a7e5d1b82e00801cbb1a91cd3884518/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ec16475054bf7292a62909df7863ca44dffa62e1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ec16475054bf7292a62909df7863ca44dffa62e1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ec16475054bf7292a62909df7863ca44dffa62e1"}],"stats":{"total":28,"additions":15,"deletions":13},"files":[{"sha":"a346f3fcab4d99e012e488313cd6dd5b59cd12a9","filename":"core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/de4ed9f22a7e5d1b82e00801cbb1a91cd3884518/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/de4ed9f22a7e5d1b82e00801cbb1a91cd3884518/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fconnid%2FConnObjectUtil.java?ref=de4ed9f22a7e5d1b82e00801cbb1a91cd3884518","patch":"@@ -562,7 +562,7 @@ private void retrieveVirAttrValue(\n                             }\n                         }\n                     }\n-                    \n+\n                     LOG.debug(\"Retrieved values {}\", virAttr.getValues());\n                 } catch (Exception e) {\n                     LOG.error(\"Error reading connector object from {}\", resource.getName(), e);\n@@ -595,23 +595,27 @@ private Set<ExternalResource> getTargetResource(\n \n     private void fillFromTemplate(final AbstractAttributableTO attributableTO, final AbstractAttributableTO template) {\n         Map<String, AttributeTO> currentAttrMap = attributableTO.getAttributeMap();\n-        for (AttributeTO attrTO : template.getAttributes()) {\n-            if (!currentAttrMap.containsKey(attrTO.getSchema())) {\n-                attributableTO.addAttribute(evaluateAttrTemplate(attributableTO, attrTO));\n+        for (AttributeTO templateAttr : template.getAttributes()) {\n+            if (!currentAttrMap.containsKey(templateAttr.getSchema())\n+                    || currentAttrMap.get(templateAttr.getSchema()).getValues().isEmpty()) {\n+\n+                attributableTO.addAttribute(evaluateAttrTemplate(attributableTO, templateAttr));\n             }\n         }\n \n         currentAttrMap = attributableTO.getDerivedAttributeMap();\n-        for (AttributeTO attrTO : template.getDerivedAttributes()) {\n-            if (!currentAttrMap.containsKey(attrTO.getSchema())) {\n-                attributableTO.addDerivedAttribute(attrTO);\n+        for (AttributeTO templateDerAttr : template.getDerivedAttributes()) {\n+            if (!currentAttrMap.containsKey(templateDerAttr.getSchema())) {\n+                attributableTO.addDerivedAttribute(templateDerAttr);\n             }\n         }\n \n         currentAttrMap = attributableTO.getVirtualAttributeMap();\n-        for (AttributeTO attrTO : template.getDerivedAttributes()) {\n-            if (!currentAttrMap.containsKey(attrTO.getSchema())) {\n-                attributableTO.addVirtualAttribute(evaluateAttrTemplate(attributableTO, attrTO));\n+        for (AttributeTO templateVirAttr : template.getDerivedAttributes()) {\n+            if (!currentAttrMap.containsKey(templateVirAttr.getSchema())\n+                    || currentAttrMap.get(templateVirAttr.getSchema()).getValues().isEmpty()) {\n+\n+                attributableTO.addVirtualAttribute(evaluateAttrTemplate(attributableTO, templateVirAttr));\n             }\n         }\n     }"},{"sha":"b0435a2f0d432f27d822b4f77de7e7d8ec389546","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/TaskController.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/de4ed9f22a7e5d1b82e00801cbb1a91cd3884518/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/de4ed9f22a7e5d1b82e00801cbb1a91cd3884518/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=de4ed9f22a7e5d1b82e00801cbb1a91cd3884518","patch":"@@ -22,9 +22,7 @@\n import java.util.Date;\n import java.util.List;\n import java.util.Set;\n-\n import javax.servlet.http.HttpServletResponse;\n-\n import org.apache.syncope.common.to.SchedTaskTO;\n import org.apache.syncope.common.to.SyncTaskTO;\n import org.apache.syncope.common.to.TaskExecTO;\n@@ -158,7 +156,7 @@ public TaskTO updateSched(@RequestBody final SchedTaskTO taskTO) throws NotFound\n \n         SchedTask task = taskDAO.find(taskTO.getId());\n         if (task == null) {\n-            throw new NotFoundException(\"Task \" + String.valueOf(taskTO.getId()));\n+            throw new NotFoundException(\"Task \" + taskTO.getId());\n         }\n \n         TaskUtil taskUtil = getTaskUtil(task);"}]}