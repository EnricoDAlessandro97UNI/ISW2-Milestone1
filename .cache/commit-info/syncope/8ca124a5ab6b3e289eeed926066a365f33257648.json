{"sha":"8ca124a5ab6b3e289eeed926066a365f33257648","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhjYTEyNGE1YWI2YjNlMjg5ZWVlZDkyNjA2NmEzNjVmMzMyNTc2NDg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-04-23T09:19:44Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-04-23T09:22:09Z"},"message":"[SYNCOPE-1554] Adding missing @JsonAnySetter","tree":{"sha":"6e66c691dffc6ef55c28fbb88fc83236ad1df20b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6e66c691dffc6ef55c28fbb88fc83236ad1df20b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8ca124a5ab6b3e289eeed926066a365f33257648","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8ca124a5ab6b3e289eeed926066a365f33257648","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8ca124a5ab6b3e289eeed926066a365f33257648","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8ca124a5ab6b3e289eeed926066a365f33257648/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"2a1aeb1f7340775efc8c558f37009f072faf7bbf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a1aeb1f7340775efc8c558f37009f072faf7bbf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2a1aeb1f7340775efc8c558f37009f072faf7bbf"}],"stats":{"total":58,"additions":57,"deletions":1},"files":[{"sha":"b15138c17d9e6cfac8be914e8fb4940731410cbd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/layout/AnyLayout.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8ca124a5ab6b3e289eeed926066a365f33257648/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8ca124a5ab6b3e289eeed926066a365f33257648/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayout.java?ref=8ca124a5ab6b3e289eeed926066a365f33257648","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.layout;\n \n import com.fasterxml.jackson.annotation.JsonAnyGetter;\n+import com.fasterxml.jackson.annotation.JsonAnySetter;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.io.Serializable;\n import java.util.HashMap;\n@@ -67,4 +68,9 @@ public void setGroup(final GroupFormLayoutInfo group) {\n     public Map<String, AnyObjectFormLayoutInfo> getAnyObjects() {\n         return anyObjects;\n     }\n+\n+    @JsonAnySetter\n+    public void setAnyObjects(final String anyType, final AnyObjectFormLayoutInfo layoutInfo) {\n+        anyObjects.put(anyType, layoutInfo);\n+    }\n }"},{"sha":"f13fe52daaec43dcf31c5d8f65fd2e6eb3743e99","filename":"client/idrepo/console/src/test/java/org/apache/syncope/client/console/layout/AnyLayoutTest.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8ca124a5ab6b3e289eeed926066a365f33257648/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayoutTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8ca124a5ab6b3e289eeed926066a365f33257648/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayoutTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Flayout%2FAnyLayoutTest.java?ref=8ca124a5ab6b3e289eeed926066a365f33257648","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.layout;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.util.Arrays;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.junit.jupiter.api.Test;\n+\n+public class AnyLayoutTest {\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    @Test\n+    public void issueSYNCOPE1554() throws JsonProcessingException {\n+        AnyLayout defaultObj = new AnyLayout();\n+        defaultObj.setUser(new UserFormLayoutInfo());\n+        defaultObj.setGroup(new GroupFormLayoutInfo());\n+        defaultObj.getAnyObjects().put(\"PRINTER\", new AnyObjectFormLayoutInfo());\n+        String defaultObjJSON = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(defaultObj);\n+\n+        String defaultIfEmpty = AnyLayoutUtils.defaultIfEmpty(\n+                StringUtils.EMPTY, Arrays.asList(AnyTypeKind.USER.name(), AnyTypeKind.GROUP.name(), \"PRINTER\"));\n+        assertEquals(defaultObjJSON, defaultIfEmpty);\n+\n+        AnyLayout deserialized = MAPPER.readValue(defaultIfEmpty, AnyLayout.class);\n+        assertNotNull(deserialized);\n+    }\n+}"},{"sha":"8502dcf0cdd17fac2241d767dd645587ccd940c8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8ca124a5ab6b3e289eeed926066a365f33257648/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8ca124a5ab6b3e289eeed926066a365f33257648/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=8ca124a5ab6b3e289eeed926066a365f33257648","patch":"@@ -488,7 +488,7 @@ protected String decodePassword(final Account account) {\n     protected String getPasswordAttrValue(final Provision provision, final Account account, final String defaultValue) {\n         String passwordAttrValue;\n         if (account instanceof LinkedAccount) {\n-            if (((LinkedAccount) account).getPassword() != null) {\n+            if (account.getPassword() != null) {\n                 passwordAttrValue = decodePassword(account);\n             } else {\n                 passwordAttrValue = defaultValue;"}]}