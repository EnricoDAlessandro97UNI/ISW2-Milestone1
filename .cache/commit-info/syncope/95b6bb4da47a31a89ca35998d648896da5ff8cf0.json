{"sha":"95b6bb4da47a31a89ca35998d648896da5ff8cf0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjk1YjZiYjRkYTQ3YTMxYTg5Y2EzNTk5OGQ2NDg4OTZkYTVmZjhjZjA=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-11-19T11:12:24Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-11-19T11:12:24Z"},"message":"SYNCOPE-422 and SYNCOPE-423 fixed on 1.1.X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1543381 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"701a27b99eec66dc980cbf7de61313e25fe3d800","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/701a27b99eec66dc980cbf7de61313e25fe3d800"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/95b6bb4da47a31a89ca35998d648896da5ff8cf0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/95b6bb4da47a31a89ca35998d648896da5ff8cf0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/95b6bb4da47a31a89ca35998d648896da5ff8cf0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/95b6bb4da47a31a89ca35998d648896da5ff8cf0/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"02668e39ba2f44ccc735af20b3672ca6ad169157","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/02668e39ba2f44ccc735af20b3672ca6ad169157","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/02668e39ba2f44ccc735af20b3672ca6ad169157"}],"stats":{"total":480,"additions":273,"deletions":207},"files":[{"sha":"cffa31f10ec294a9ffeca6ad1df407cd89b61da0","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/WorkflowServiceProxy.java","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FWorkflowServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FWorkflowServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FWorkflowServiceProxy.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -18,8 +18,6 @@\n  */\r\n package org.apache.syncope.client.services.proxy;\r\n \r\n-import java.util.Arrays;\r\n-import java.util.List;\r\n import org.apache.syncope.common.services.WorkflowService;\r\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n@@ -41,10 +39,4 @@ public WorkflowDefinitionTO getDefinition(final AttributableType type) {\n     public void updateDefinition(final AttributableType type, final WorkflowDefinitionTO definition) {\r\n         getRestTemplate().put(baseUrl + \"workflow/definition/\" + type.name().toLowerCase(), definition);\r\n     }\r\n-\r\n-    @Override\r\n-    public List<String> getDefinedTasks(final AttributableType type) {\r\n-        return Arrays.asList(getRestTemplate().getForObject(baseUrl + \"workflow/tasks/{type}\", String[].class,\r\n-                type.name().toLowerCase()));\r\n-    }\r\n }\r"},{"sha":"6f340351fa86488266134e1852a473a649f06e5e","filename":"common/src/main/java/org/apache/syncope/common/services/WorkflowService.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -18,7 +18,6 @@\n  */\r\n package org.apache.syncope.common.services;\r\n \r\n-import java.util.List;\r\n import javax.ws.rs.GET;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n@@ -43,13 +42,4 @@ public interface WorkflowService {\n      */\r\n     @PUT\r\n     void updateDefinition(@PathParam(\"kind\") AttributableType kind, WorkflowDefinitionTO definition);\r\n-\r\n-    /**\r\n-     * @param kind Kind can be USER or ROLE only!\r\n-     * @return Returns existing tasks for matching kind.\r\n-     */\r\n-    @GET\r\n-    @Path(\"tasks\")\r\n-    List<String> getDefinedTasks(@PathParam(\"kind\") AttributableType kind);\r\n-\r\n }\r"},{"sha":"9e7a11a8c38750f7cff1f65c87f3e1ad84726503","filename":"common/src/main/java/org/apache/syncope/common/to/EventCategoryTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FEventCategoryTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FEventCategoryTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FEventCategoryTO.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -55,7 +55,7 @@ public AuditElements.EventCategoryType getType() {\n     }\n \n     public void setType(final AuditElements.EventCategoryType type) {\n-        this.type = type;\n+        this.type = type == null ? AuditElements.EventCategoryType.CUSTOM : type;\n     }\n \n     public String getCategory() {"},{"sha":"3361e861b59df544dffb16dc876d945909015550","filename":"common/src/main/java/org/apache/syncope/common/types/AuditElements.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAuditElements.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAuditElements.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAuditElements.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -35,7 +35,8 @@ public enum EventCategoryType {\n         REST(StringUtils.EMPTY),\r\n         TASK(StringUtils.EMPTY),\r\n         PROPAGATION(\"PropagationTask\"),\r\n-        SYNCHRONIZATION(\"SyncTask\");\r\n+        SYNCHRONIZATION(\"SyncTask\"),\r\n+        CUSTOM(StringUtils.EMPTY);\r\n \r\n         private final String value;\r\n \r"},{"sha":"c43c85fcf6aeac445d03730519b49e8a47eaeea9","filename":"common/src/main/java/org/apache/syncope/common/types/AuditLoggerName.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAuditLoggerName.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -66,15 +66,11 @@ public AuditLoggerName(\n             @JsonProperty(\"result\") final Result result)\r\n             throws IllegalArgumentException {\r\n \r\n-        if (type == null || result == null) {\r\n-            throw new IllegalArgumentException(\"Null values not permitted\");\r\n-        }\r\n-\r\n-        this.type = type;\r\n+        this.type = type == null ? AuditElements.EventCategoryType.CUSTOM : type;\r\n         this.category = category;\r\n         this.subcategory = subcategory;\r\n         this.event = event;\r\n-        this.result = result;\r\n+        this.result = result == null ? Result.SUCCESS : result;\r\n     }\r\n \r\n     public AuditElements.EventCategoryType getType() {\r\n@@ -124,7 +120,8 @@ public static AuditLoggerName fromLoggerName(final String loggerName)\n                 eventCategory.getKey().getType(),\r\n                 eventCategory.getKey().getCategory(),\r\n                 eventCategory.getKey().getSubcategory(),\r\n-                eventCategory.getKey().getEvents().iterator().next(),\r\n+                eventCategory.getKey().getEvents().isEmpty()\r\n+                ? StringUtils.EMPTY : eventCategory.getKey().getEvents().iterator().next(),\r\n                 eventCategory.getValue());\r\n     }\r\n }\r"},{"sha":"4b11df3fb61476c4b211b6a3650d1724bd27ec7f","filename":"common/src/main/java/org/apache/syncope/common/util/LoggerEventUtils.java","status":"modified","additions":37,"deletions":23,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FLoggerEventUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FLoggerEventUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FLoggerEventUtils.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -44,30 +44,44 @@ public static Map.Entry<EventCategoryTO, Result> parseEventCategory(final String\n \n             LOG.debug(\"Found {} elements\", elements.length);\n \n-            LOG.debug(\"Type {}\", elements[0]);\n-\n-            if (EventCategoryType.PROPAGATION.toString().equals(elements[0])) {\n-                eventCategoryTO.setType(EventCategoryType.PROPAGATION);\n-            } else if (EventCategoryType.SYNCHRONIZATION.toString().equals(elements[0])) {\n-                eventCategoryTO.setType(EventCategoryType.SYNCHRONIZATION);\n+            if (elements.length == 1) {\n+                eventCategoryTO.setType(EventCategoryType.CUSTOM);\n+                condition = Result.SUCCESS;\n+                eventCategoryTO.getEvents().add(event);\n             } else {\n-                eventCategoryTO.setType(EventCategoryType.valueOf(elements[0]));\n-            }\n-\n-            LOG.debug(\"Category {}\", elements[1]);\n-            eventCategoryTO.setCategory(StringUtils.isNotEmpty(elements[1]) ? elements[1] : null);\n-\n-            LOG.debug(\"Sub-category {}\", elements[2]);\n-            eventCategoryTO.setSubcategory(StringUtils.isNotEmpty(elements[2]) ? elements[2] : null);\n-\n-            if (elements.length > 3 && StringUtils.isNotEmpty(elements[3])) {\n-                LOG.debug(\"Event {}\", elements[3]);\n-                eventCategoryTO.getEvents().add(elements[3]);\n-            }\n-\n-            if (elements.length > 4) {\n-                LOG.debug(\"Result condition {}\", elements[4]);\n-                condition = Result.valueOf(elements[4].toUpperCase());\n+                LOG.debug(\"Type {}\", elements[0]);\n+\n+                EventCategoryType type;\n+\n+                if (EventCategoryType.PROPAGATION.toString().equals(elements[0])) {\n+                    type = EventCategoryType.PROPAGATION;\n+                } else if (EventCategoryType.SYNCHRONIZATION.toString().equals(elements[0])) {\n+                    type = EventCategoryType.SYNCHRONIZATION;\n+                } else {\n+                    try {\n+                        type = EventCategoryType.valueOf(elements[0]);\n+                    } catch (Exception e) {\n+                        type = EventCategoryType.CUSTOM;\n+                    }\n+                }\n+\n+                eventCategoryTO.setType(type);\n+\n+                LOG.debug(\"Category {}\", elements[1]);\n+                eventCategoryTO.setCategory(StringUtils.isNotEmpty(elements[1]) ? elements[1] : null);\n+\n+                LOG.debug(\"Sub-category {}\", elements[2]);\n+                eventCategoryTO.setSubcategory(StringUtils.isNotEmpty(elements[2]) ? elements[2] : null);\n+\n+                if (elements.length > 3 && StringUtils.isNotEmpty(elements[3])) {\n+                    LOG.debug(\"Event {}\", elements[3]);\n+                    eventCategoryTO.getEvents().add(elements[3]);\n+                }\n+\n+                if (elements.length > 4) {\n+                    LOG.debug(\"Result condition {}\", elements[4]);\n+                    condition = Result.valueOf(elements[4].toUpperCase());\n+                }\n             }\n         }\n "},{"sha":"09d013622059fa6d7dd9886c9c2c3a70a51caf8f","filename":"console/src/main/java/org/apache/syncope/console/pages/NotificationModalPage.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -150,7 +150,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         form.add(new LoggerCategoryPanel(\n                 \"eventSelection\",\n                 loggerRestClient.listEvents(),\n-                new PropertyModel<List<String>>(notificationTO, \"events\")) {\n+                new PropertyModel<List<String>>(notificationTO, \"events\"),\n+                getPageReference(),\n+                \"Notification\") {\n \n             private static final long serialVersionUID = 6429053774964787735L;\n "},{"sha":"5edd24d6a317560c2d2ad8fa619f70c4745398d5","filename":"console/src/main/java/org/apache/syncope/console/pages/Reports.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -297,7 +297,8 @@ private void setupAudit() {\n \n         final ListModel<String> model = new ListModel<String>(new ArrayList<String>(events));\n \n-        form.add(new LoggerCategoryPanel(\"events\", loggerRestClient.listEvents(), model) {\n+        form.add(new LoggerCategoryPanel(\n+                \"events\", loggerRestClient.listEvents(), model, getPageReference(), \"Reports\") {\n \n             private static final long serialVersionUID = 6113164334533550277L;\n "},{"sha":"b691073a29f848192965f4820a4fc7a794d38975","filename":"console/src/main/java/org/apache/syncope/console/pages/Roles.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoles.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -101,7 +101,7 @@ public void onClose(final AjaxRequestTarget target) {\n         final Form searchForm = new Form(\"searchForm\");\n         add(searchForm);\n \n-        final RoleSearchPanel searchPanel = new RoleSearchPanel(\"searchPanel\");\n+        final RoleSearchPanel searchPanel = new RoleSearchPanel.Builder(\"searchPanel\").build();\n         searchForm.add(searchPanel);\n \n         searchForm.add(new ClearIndicatingAjaxButton(\"search\", new ResourceModel(\"search\"), getPageReference()) {"},{"sha":"502b38ef89fc42f665111072fe8852e07d3f244c","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/LoggerCategoryPanel.java","status":"modified","additions":128,"deletions":4,"changes":132,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FLoggerCategoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FLoggerCategoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FLoggerCategoryPanel.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -32,8 +32,13 @@\n import org.apache.syncope.common.types.AuditElements.EventCategoryType;\n import org.apache.syncope.common.util.LoggerEventUtils;\n import org.apache.syncope.console.commons.Constants;\n+import org.apache.syncope.console.pages.panels.SelectedEventsPanel.EventSelectionChanged;\n import org.apache.syncope.console.pages.panels.SelectedEventsPanel.InspectSelectedEvent;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -44,6 +49,7 @@\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.slf4j.Logger;\n@@ -74,12 +80,18 @@ public abstract class LoggerCategoryPanel extends Panel {\n \n     private final AjaxDropDownChoicePanel<String> subcategory;\n \n+    private final AjaxTextFieldPanel custom;\n+\n+    private final ActionLinksPanel actionPanel;\n+\n     private final IModel<List<String>> model;\n \n     public LoggerCategoryPanel(\n             final String id,\n             final List<EventCategoryTO> eventCategoryTOs,\n-            final IModel<List<String>> model) {\n+            final IModel<List<String>> model,\n+            final PageReference pageReference,\n+            final String pageId) {\n         super(id);\n \n         this.model = model;\n@@ -176,6 +188,77 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n \n+        categoryContainer.add(new Label(\"customLabel\", new ResourceModel(\"custom\", \"custom\")).setVisible(false));\n+\n+        custom = new AjaxTextFieldPanel(\"custom\", \"custom\", new Model<String>(null));\n+        custom.setStyleSheet(\"ui-widget-content ui-corner-all short_fixedsize\");\n+        custom.setVisible(false);\n+        custom.setEnabled(false);\n+\n+        categoryContainer.add(custom);\n+\n+        actionPanel = new ActionLinksPanel(\"customActions\", new Model(), pageReference);\n+        categoryContainer.add(actionPanel);\n+\n+        actionPanel.add(new ActionLink() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(AjaxRequestTarget target) {\n+                if (StringUtils.isNotBlank(custom.getModelObject())) {\n+                    final Map.Entry<EventCategoryTO, AuditElements.Result> parsed =\n+                            LoggerEventUtils.parseEventCategory(custom.getModelObject());\n+\n+                    final String eventString = LoggerEventUtils.buildEvent(\n+                            parsed.getKey().getType(),\n+                            null,\n+                            null,\n+                            parsed.getKey().getEvents().isEmpty()\n+                            ? StringUtils.EMPTY : parsed.getKey().getEvents().iterator().next(),\n+                            parsed.getValue());\n+\n+                    custom.setModelObject(StringUtils.EMPTY);\n+                    send(LoggerCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                            target,\n+                            Collections.<String>singleton(eventString),\n+                            Collections.<String>emptySet()));\n+                    target.add(categoryContainer);\n+                }\n+            }\n+        }, ActionLink.ActionType.CREATE, pageId, true);\n+\n+        actionPanel.add(new ActionLink() {\n+\n+            private static final long serialVersionUID = -3722207913631435502L;\n+\n+            @Override\n+            public void onClick(AjaxRequestTarget target) {\n+                if (StringUtils.isNotBlank(custom.getModelObject())) {\n+                    final Map.Entry<EventCategoryTO, AuditElements.Result> parsed =\n+                            LoggerEventUtils.parseEventCategory(custom.getModelObject());\n+\n+                    final String eventString = LoggerEventUtils.buildEvent(\n+                            parsed.getKey().getType(),\n+                            null,\n+                            null,\n+                            parsed.getKey().getEvents().isEmpty()\n+                            ? StringUtils.EMPTY : parsed.getKey().getEvents().iterator().next(),\n+                            parsed.getValue());\n+\n+                    custom.setModelObject(StringUtils.EMPTY);\n+                    send(LoggerCategoryPanel.this.getPage(), Broadcast.BREADTH, new EventSelectionChanged(\n+                            target,\n+                            Collections.<String>emptySet(),\n+                            Collections.<String>singleton(eventString)));\n+                    target.add(categoryContainer);\n+                }\n+            }\n+        }, ActionLink.ActionType.DELETE, pageId, true);\n+\n+        actionPanel.setVisible(false);\n+        actionPanel.setEnabled(false);\n+\n         eventsContainer.add(new EventSelectionPanel(\"eventsPanel\", eventCategoryTO, model) {\n \n             private static final long serialVersionUID = 3513194801190026082L;\n@@ -229,11 +312,30 @@ public void onEvent(final IEvent<?> event) {\n \n             final Panel changedPanel = change.getChangedPanel();\n             if (\"type\".equals(changedPanel.getId())) {\n-                category.setChoices(filter(eventCategoryTOs, type.getModelObject()));\n-                subcategory.setChoices(Collections.<String>emptyList());\n                 eventCategoryTO.setType(type.getModelObject());\n                 eventCategoryTO.setCategory(null);\n                 eventCategoryTO.setSubcategory(null);\n+\n+                if (type.getModelObject() == EventCategoryType.CUSTOM) {\n+                    category.setChoices(Collections.<String>emptyList());\n+                    subcategory.setChoices(Collections.<String>emptyList());\n+                    category.setEnabled(false);\n+                    subcategory.setEnabled(false);\n+                    custom.setVisible(true);\n+                    custom.setEnabled(true);\n+                    actionPanel.setVisible(true);\n+                    actionPanel.setEnabled(true);\n+\n+                } else {\n+                    category.setChoices(filter(eventCategoryTOs, type.getModelObject()));\n+                    subcategory.setChoices(Collections.<String>emptyList());\n+                    category.setEnabled(true);\n+                    subcategory.setEnabled(true);\n+                    custom.setVisible(false);\n+                    custom.setEnabled(false);\n+                    actionPanel.setVisible(false);\n+                    actionPanel.setEnabled(false);\n+                }\n                 change.getTarget().add(categoryContainer);\n             } else if (\"category\".equals(changedPanel.getId())) {\n                 subcategory.setChoices(filter(eventCategoryTOs, type.getModelObject(), category.getModelObject()));\n@@ -262,7 +364,29 @@ public void onEvent(final IEvent<?> event) {\n \n             eventCategoryTO.setSubcategory(categoryEvent.getKey().getSubcategory());\n \n-\n+            if (categoryEvent.getKey().getType() == EventCategoryType.CUSTOM) {\n+                custom.setModelObject(LoggerEventUtils.buildEvent(\n+                        categoryEvent.getKey().getType(),\n+                        categoryEvent.getKey().getCategory(),\n+                        categoryEvent.getKey().getSubcategory(),\n+                        categoryEvent.getKey().getEvents().isEmpty()\n+                        ? StringUtils.EMPTY : categoryEvent.getKey().getEvents().iterator().next(),\n+                        categoryEvent.getValue()));\n+                \n+                category.setEnabled(false);\n+                subcategory.setEnabled(false);\n+                custom.setVisible(true);\n+                custom.setEnabled(true);\n+                actionPanel.setVisible(true);\n+                actionPanel.setEnabled(true);\n+            } else {\n+                category.setEnabled(true);\n+                subcategory.setEnabled(true);\n+                custom.setVisible(false);\n+                custom.setEnabled(false);\n+                actionPanel.setVisible(false);\n+                actionPanel.setEnabled(false);\n+            }\n \n             inspectSelectedEvent.getTarget().add(categoryContainer);\n             updateEventsContainer(inspectSelectedEvent.getTarget());"},{"sha":"29bf1e7de6e2f78d62cf0038ec808f4f133893bb","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleSearchPanel.java","status":"modified","additions":26,"deletions":2,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchPanel.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -18,9 +18,11 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.console.commons.SearchCondWrapper;\n import org.apache.wicket.model.LoadableDetachableModel;\n@@ -29,8 +31,30 @@ public class RoleSearchPanel extends AbstractSearchPanel {\n \n     private static final long serialVersionUID = 5757183539269316263L;\n \n-    public RoleSearchPanel(final String id) {\n-        super(id, AttributableType.ROLE, null, true);\n+    public static class Builder implements Serializable {\n+\n+        private static final long serialVersionUID = 6308997285778809579L;\n+\n+        private String id;\n+\n+        private NodeCond initCond = null;\n+\n+        public Builder(final String id) {\n+            this.id = id;\n+        }\n+\n+        public RoleSearchPanel.Builder nodeCond(final NodeCond initCond) {\n+            this.initCond = initCond;\n+            return this;\n+        }\n+\n+        public RoleSearchPanel build() {\n+            return new RoleSearchPanel(this);\n+        }\n+    }\n+\n+    private RoleSearchPanel(final Builder builder) {\n+        super(builder.id, AttributableType.ROLE, builder.initCond, true);\n     }\n \n     @Override"},{"sha":"c9cebc88089eaeaa1ccfca55a6d76e1896f2ac5f","filename":"console/src/main/java/org/apache/syncope/console/rest/NotificationRestClient.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -23,10 +23,8 @@\n \n import org.apache.syncope.common.services.ConfigurationService;\n import org.apache.syncope.common.services.NotificationService;\n-import org.apache.syncope.common.services.WorkflowService;\n import org.apache.syncope.common.to.MailTemplateTO;\n import org.apache.syncope.common.to.NotificationTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.springframework.stereotype.Component;\n \n@@ -59,8 +57,4 @@ public List<String> getMailTemplates() {\n         return CollectionWrapper.unwrapMailTemplates(new ArrayList<MailTemplateTO>(getService(\n                 ConfigurationService.class).getMailTemplates()));\n     }\n-\n-    public List<String> getEvents() {\n-        return getService(WorkflowService.class).getDefinedTasks(AttributableType.USER);\n-    }\n }"},{"sha":"6dce63ad1bc731353dd262be9fcf05f3a11b68a3","filename":"console/src/main/resources/org/apache/syncope/console/pages/NotificationModalPage.html","status":"modified","additions":37,"deletions":6,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -23,6 +23,27 @@\n         min-width: 970px;\n         overflow: hidden;\n       }\n+\n+      div#userFilter {\n+        border: 1px solid #DDDDDD;\n+      }\n+\n+      div#userFilter div#title {\n+        margin: 10px 0px 0px 8px;\n+      }\n+\n+      div#userFilter div#warning {\n+        margin: 1px 0px 5px 8px;\n+      }\n+\n+      div#userFilter div#title label {\n+        font-weight: bold;\n+      }\n+\n+      div#userFilter div#warning label {\n+        color: #E00000;\n+        font-size: 8px;\n+      }\n     </style>\n   </wicket:head>\n   <wicket:extend>\n@@ -32,8 +53,8 @@\n         <div id=\"tabs\">\n           <ul>\n             <li  class=\"tabs-selected\"><a href=\"#notification\"><span><wicket:message key=\"notification\"/></span></a></li>\n-            <li><a href=\"#about\"><span><wicket:message key=\"about\"/></span></a></li>\n             <li><a href=\"#events\"><span><wicket:message key=\"events\"/></span></a></li>\n+            <li><a href=\"#about\"><span><wicket:message key=\"about\"/></span></a></li>\n             <li><a href=\"#recipients\"><span><wicket:message key=\"recipients\"/></span></a></li>\n           </ul>\n \n@@ -95,6 +116,10 @@\n             </div>\n           </div>\n \n+          <div id=\"events\">\n+            <span wicket:id=\"eventSelection\"/>\n+          </div>\n+\n           <div id=\"about\">\n             <span wicket:id=\"aboutContainer\">\n               <div class=\"tablerow\" style=\"width: auto;\">\n@@ -105,12 +130,18 @@\n                   <label for=\"checkAbout\"><wicket:message key=\"checkAbout\"/></label>\n                 </div>\n               </div>\n-              <span wicket:id=\"about\"/>\n+              <div id=\"userFilter\">\n+                <div id=\"title\">\n+                  <label for=\"userFilter\"><wicket:message key=\"userFilter\"/></label>\n+                </div>\n+                <div id=\"warning\">\n+                  <label for=\"userFilter\"><wicket:message key=\"userFilterWarning\"/></label>\n+                </div>\n+                <div id=\"condition\">\n+                  <span wicket:id=\"about\"/>\n+                </div>\n+              </div>\n             </span>\n-          </div>  \n-\n-          <div id=\"events\">\n-            <span wicket:id=\"eventSelection\"/>\n           </div>\n \n           <div id=\"recipients\">"},{"sha":"61e9a0dd5840b702425ec06a5ad8e5e6f193edc6","filename":"console/src/main/resources/org/apache/syncope/console/pages/NotificationModalPage.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -28,4 +28,6 @@ selfAsRecipient=Include users matching About\n recipientAttrType=Recipients e-mail attribute type\n recipientAttrName=Recipients e-mail attribute schema\n checkRecipients=Search recipients\n-checkAbout=All users\n+checkAbout=All\n+userFilter=User filter\n+userFilterWarning=Do not use this filter unless events are not targeted at users"},{"sha":"cc158d41ea50b83895c529667b74a8d29177ca63","filename":"console/src/main/resources/org/apache/syncope/console/pages/NotificationModalPage_it.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -28,4 +28,6 @@ selfAsRecipient=Includi i soggetti\n recipientAttrType=Tipo attributo e-mail destinatari\n recipientAttrName=Shcema attributo e-mail destinatari\n checkRecipients=Cerca i destinatari\n-checkAbout=Tutti gli utenti\n\\ No newline at end of file\n+checkAbout=Tutto\n+userFilter=Filtro utenti\n+userFilterWarning=Non usare questo filtro se gli eventi catturati non riguardano espressamente utenti\n\\ No newline at end of file"},{"sha":"bac46ab54a8fe26498ed5cb9151c02e768280529","filename":"console/src/main/resources/org/apache/syncope/console/pages/NotificationModalPage_pt_BR.properties","status":"modified","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_pt_BR.properties?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -14,18 +14,20 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Alterar Notifica\\u00E7\\u00E3o\n+title=Alterar Notifica\\u00e7\\u00e3o\n submit=Salvar\n subject=Assunto\n sender=Remetente\n template=Template\n-traceLevel=N\\u00EDvel de Trace\n-notification=Notifica\\u00E7\\u00E3o\n+traceLevel=N\\u00edvel de Trace\n+notification=Notifica\\u00e7\\u00e3o\n about=Sobre\n events=Eventos\n-recipients=Destinat\\u00E1rios\n-selfAsRecipient=Incluir usu\\u00E1rios relacionados Sobre\n-recipientAttrType=Tipo de atributo de destinat\\u00E1rio de email.\n-recipientAttrName=Destinat\\u00E1rios de e-mail para atributos de esquema\n-checkRecipients=Buscar Destinat\\u00E1rios\n-checkAbout=Todos os usu\\u00E1rios\n\\ No newline at end of file\n+recipients=Destinat\\u00e1rios\n+selfAsRecipient=Incluir usu\\u00e1rios relacionados Sobre\n+recipientAttrType=Tipo de atributo de destinat\\u00e1rio de email.\n+recipientAttrName=Destinat\\u00e1rios de e-mail para atributos de esquema\n+checkRecipients=Buscar Destinat\\u00e1rios\n+checkAbout=Todos\n+userFilter=User filter\n+userFilterWarning=Do not use this filter unless events are not targeted at users\n\\ No newline at end of file"},{"sha":"c98dcb5c289ad9cf9680eadc0a013c3a64caaa77","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/LoggerCategoryPanel.html","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FLoggerCategoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FLoggerCategoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FLoggerCategoryPanel.html?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -86,6 +86,15 @@\n               <span wicket:id=\"subcategory\">[sub-category]</span>\n             </div>\n           </div>\n+          <div id=\"eventElement\">\n+            <div id=\"label\">\n+              <label wicket:id=\"customLabel\"/>\n+            </div>\n+            <div id=\"value\">\n+              <span wicket:id=\"custom\">[custom]</span>\n+              <span wicket:id=\"customActions\">[actions]</span>\n+            </div>\n+          </div>\n         </div>\n         <div wicket:id=\"eventsContainer\" style=\"display: block\">\n           <span wicket:id=\"eventsPanel\">[events panel]</span>"},{"sha":"5feba0007f9f4f9046231f1026c009e8d787c303","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/WorkflowController.java","status":"modified","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.rest.controller;\n \n import java.lang.reflect.Method;\n-import java.util.List;\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\n import org.apache.syncope.core.workflow.WorkflowAdapter;\n import org.apache.syncope.core.workflow.WorkflowException;\n@@ -32,7 +31,6 @@\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n-import org.springframework.web.servlet.ModelAndView;\n \n @Controller\n @RequestMapping(\"/workflow\")\n@@ -79,22 +77,6 @@ public void updateRoleDefinition(@RequestBody final WorkflowDefinitionTO definit\n         updateDefinition(rwfAdapter, definition);\n     }\n \n-    private List<String> getDefinedTasks(final WorkflowAdapter adapter) {\n-        return adapter.getDefinedTasks();\n-    }\n-\n-    @PreAuthorize(\"hasRole('WORKFLOW_TASK_LIST')\")\n-    @RequestMapping(method = RequestMethod.GET, value = \"/tasks/user\")\n-    public ModelAndView getDefinedUserTasks() {\n-        return new ModelAndView().addObject(getDefinedTasks(uwfAdapter));\n-    }\n-\n-    @PreAuthorize(\"hasRole('WORKFLOW_TASK_LIST')\")\n-    @RequestMapping(method = RequestMethod.GET, value = \"/tasks/role\")\n-    public ModelAndView getDefinedRoleTasks() {\n-        return new ModelAndView().addObject(getDefinedTasks(rwfAdapter));\n-    }\n-\n     /**\n      * {@inheritDoc}\n      */"},{"sha":"dd462eae36e87a68a2c1630d25324e8b9cf41e43","filename":"core/src/main/java/org/apache/syncope/core/services/ControllerHandler.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FControllerHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FControllerHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FControllerHandler.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -30,12 +30,12 @@\n import org.springframework.beans.factory.annotation.Autowired;\n \n @Aspect\n-public class ServiceHandler {\n+public class ControllerHandler {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(ServiceHandler.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ControllerHandler.class);\n \n     @Autowired\n     private NotificationManager notificationManager;","previous_filename":"core/src/main/java/org/apache/syncope/core/services/ServiceHandler.java"},{"sha":"afd4bb8fd144c1f3b2f0aa428d2bf6760d138375","filename":"core/src/main/java/org/apache/syncope/core/services/WorkflowServiceImpl.java","status":"modified","additions":1,"deletions":19,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -18,22 +18,19 @@\n  */\r\n package org.apache.syncope.core.services;\r\n \r\n-import java.util.List;\r\n-\r\n import javax.ws.rs.BadRequestException;\r\n import javax.ws.rs.core.UriInfo;\r\n \r\n import org.apache.syncope.common.services.WorkflowService;\r\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n-import org.apache.syncope.common.util.CollectionWrapper;\r\n import org.apache.syncope.core.rest.controller.WorkflowController;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.stereotype.Service;\r\n \r\n @Service\r\n public class WorkflowServiceImpl implements WorkflowService, ContextAware {\r\n-    \r\n+\r\n     @Autowired\r\n     private WorkflowController workflowController;\r\n \r\n@@ -49,7 +46,6 @@ public WorkflowDefinitionTO getDefinition(final AttributableType kind) {\n         }\r\n     }\r\n \r\n-\r\n     @Override\r\n     public void updateDefinition(final AttributableType kind, final WorkflowDefinitionTO definition) {\r\n         switch (kind) {\r\n@@ -64,21 +60,7 @@ public void updateDefinition(final AttributableType kind, final WorkflowDefiniti\n         }\r\n     }\r\n \r\n-\r\n-    @Override\r\n-    public List<String> getDefinedTasks(final AttributableType kind) {\r\n-        switch (kind) {\r\n-            case USER:\r\n-                return CollectionWrapper.wrapStrings(workflowController.getDefinedUserTasks());\r\n-            case ROLE:\r\n-                return CollectionWrapper.wrapStrings(workflowController.getDefinedUserTasks());\r\n-            default:\r\n-                throw new BadRequestException();\r\n-        }\r\n-    }\r\n-\r\n     @Override\r\n     public void setUriInfo(final UriInfo ui) {\r\n     }\r\n-\r\n }\r"},{"sha":"0dd26af0d5caa2e383264eda41a3f3d8a8f459af","filename":"core/src/main/java/org/apache/syncope/core/workflow/WorkflowAdapter.java","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowAdapter.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -52,14 +52,6 @@ public interface WorkflowAdapter {\n      */\n     void updateDefinition(WorkflowDefinitionTO definition) throws NotFoundException, WorkflowException;\n \n-    /**\n-     * Get list of defined tasks in workflow.\n-     *\n-     * @return list of defined tasks in workflow\n-     * @throws WorkflowException workflow exception\n-     */\n-    List<String> getDefinedTasks() throws WorkflowException;\n-\n     /**\n      * Get all defined forms for current workflow process instances.\n      *"},{"sha":"643cc019e882a263db7e13e95867073154ee620f","filename":"core/src/main/java/org/apache/syncope/core/workflow/role/NoOpRoleWorkflowAdapter.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FNoOpRoleWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FNoOpRoleWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Frole%2FNoOpRoleWorkflowAdapter.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.workflow.role;\n \n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n@@ -42,8 +41,6 @@\n @Transactional(rollbackFor = {Throwable.class})\n public class NoOpRoleWorkflowAdapter extends AbstractRoleWorkflowAdapter {\n \n-    private static final List<String> TASKS = Arrays.asList(new String[]{\"create\", \"update\", \"delete\"});\n-\n     @Override\n     public WorkflowResult<Long> create(final RoleTO roleTO)\n             throws UnauthorizedRoleException, WorkflowException {\n@@ -97,13 +94,6 @@ public void updateDefinition(final WorkflowDefinitionTO definition)\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n-    @Override\n-    public List<String> getDefinedTasks()\n-            throws WorkflowException {\n-\n-        return TASKS;\n-    }\n-\n     @Override\n     public List<WorkflowFormTO> getForms() {\n         return Collections.emptyList();"},{"sha":"3de35c5e5370a46e7bee9f436c4d5e94ee285b4f","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -20,7 +20,6 @@\n \n import java.util.AbstractMap;\n import java.util.AbstractMap.SimpleEntry;\n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n@@ -43,9 +42,6 @@\n @Transactional(rollbackFor = {Throwable.class})\n public class NoOpUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n-    private static final List<String> TASKS =\n-            Arrays.asList(new String[] {\"create\", \"activate\", \"update\", \"suspend\", \"reactivate\", \"delete\"});\n-\n     public static final String ENABLED = \"enabled\";\n \n     @Override\n@@ -166,13 +162,6 @@ public void updateDefinition(final WorkflowDefinitionTO definition)\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n-    @Override\n-    public List<String> getDefinedTasks()\n-            throws WorkflowException {\n-\n-        return TASKS;\n-    }\n-\n     @Override\n     public List<WorkflowFormTO> getForms() {\n         return Collections.emptyList();"},{"sha":"af60d8ae64037139932cccd39020c8f02c5bbb05","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":0,"deletions":38,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -35,11 +35,6 @@\n import java.util.Map;\n import java.util.Set;\n import javax.annotation.Resource;\n-import javax.xml.parsers.DocumentBuilder;\n-import javax.xml.parsers.DocumentBuilderFactory;\n-import javax.xml.xpath.XPath;\n-import javax.xml.xpath.XPathConstants;\n-import javax.xml.xpath.XPathFactory;\n import org.activiti.engine.ActivitiException;\n import org.activiti.engine.FormService;\n import org.activiti.engine.HistoryService;\n@@ -77,8 +72,6 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.crypto.codec.Base64;\n import org.springframework.transaction.annotation.Transactional;\n-import org.w3c.dom.Document;\n-import org.w3c.dom.NodeList;\n \n /**\n  * Activiti (http://www.activiti.org/) based implementation.\n@@ -444,37 +437,6 @@ public void updateDefinition(final WorkflowDefinitionTO definition)\n         }\n     }\n \n-    @Override\n-    public List<String> getDefinedTasks()\n-            throws WorkflowException {\n-\n-        List<String> result = new ArrayList<String>();\n-\n-        ProcessDefinition procDef = getProcessDefinition();\n-\n-        InputStream procDefIS = repositoryService.getResourceAsStream(procDef.getDeploymentId(), WF_PROCESS_RESOURCE);\n-\n-        DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();\n-        try {\n-            DocumentBuilder builder = domFactory.newDocumentBuilder();\n-            Document doc = builder.parse(procDefIS);\n-\n-            XPath xpath = XPathFactory.newInstance().newXPath();\n-\n-            NodeList nodeList = (NodeList) xpath.evaluate(\"//userTask | //serviceTask | //scriptTask\", doc,\n-                    XPathConstants.NODESET);\n-            for (int i = 0; i < nodeList.getLength(); i++) {\n-                result.add(nodeList.item(i).getAttributes().getNamedItem(\"id\").getNodeValue());\n-            }\n-        } catch (Exception e) {\n-            throw new WorkflowException(\"While reading defined tasks\", e);\n-        } finally {\n-            IOUtils.closeQuietly(procDefIS);\n-        }\n-\n-        return result;\n-    }\n-\n     private WorkflowFormPropertyType fromActivitiFormType(final FormType activitiFormType) {\n         WorkflowFormPropertyType result = WorkflowFormPropertyType.String;\n "},{"sha":"ae982283f1757ce57aded2c84e297193d5fc8d30","filename":"core/src/main/resources/restContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FrestContext.xml?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -42,7 +42,7 @@ under the License.\n   <!-- CXF Configuration - BEGIN -->\n   <context:component-scan base-package=\"org.apache.syncope.core.services\"/>\n   \n-  <bean id=\"serviceHandler\" name=\"serviceHandler\" class=\"org.apache.syncope.core.services.ServiceHandler\" />\n+  <bean id=\"controllerHandler\" name=\"controllerHandler\" class=\"org.apache.syncope.core.services.ControllerHandler\" />\n \n   <bean id=\"jaxbProvider\" class=\"org.apache.cxf.jaxrs.provider.JAXBElementProvider\">\n     <property name=\"depthProperties\">"},{"sha":"490131f71b86f850586edc80ae393f8d4653acb0","filename":"core/src/test/java/org/apache/syncope/core/rest/WorkflowTestITCase.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FWorkflowTestITCase.java?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -18,10 +18,8 @@\n  */\r\n package org.apache.syncope.core.rest;\r\n \r\n-import static org.junit.Assert.assertFalse;\r\n import static org.junit.Assert.assertNotNull;\r\n \r\n-import java.util.List;\r\n \r\n import org.apache.syncope.common.to.WorkflowDefinitionTO;\r\n import org.apache.syncope.common.types.AttributableType;\r\n@@ -66,18 +64,4 @@ public void testUpdateRoleDefinition() {\n         WorkflowDefinitionTO newDefinition = workflowService.getDefinition(AttributableType.ROLE);\r\n         assertNotNull(newDefinition);\r\n     }\r\n-\r\n-    @Test\r\n-    public void testGetUserTasks() {\r\n-        List<String> tasks = workflowService.getDefinedTasks(AttributableType.USER);\r\n-        assertNotNull(tasks);\r\n-        assertFalse(tasks.isEmpty());\r\n-    }\r\n-\r\n-    @Test\r\n-    public void testGetRoleTasks() {\r\n-        List<String> tasks = workflowService.getDefinedTasks(AttributableType.ROLE);\r\n-        assertNotNull(tasks);\r\n-        assertFalse(tasks.isEmpty());\r\n-    }\r\n }\r"},{"sha":"80c720023e087da73dd6a2db4d3adc34864c42ef","filename":"core/src/test/resources/content.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/95b6bb4da47a31a89ca35998d648896da5ff8cf0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=95b6bb4da47a31a89ca35998d648896da5ff8cf0","patch":"@@ -830,8 +830,8 @@ under the License.\n                 xmlAbout=\"%3Corg.apache.syncope.common.search.NodeCond%3E%0A++%3Ctype%3EAND%3C%2Ftype%3E%0A++%3CleftNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25o%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FleftNodeCond%3E%0A++%3CrightNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25i%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FrightNodeCond%3E%0A%3C%2Forg.apache.syncope.common.search.NodeCond%3E\"\n                 xmlRecipients=\"%3Corg.apache.syncope.common.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.apache.syncope.common.search.NodeCond%3E\"\n                 recipientAttrType=\"UserSchema\" recipientAttrName=\"email\"/>\n-  <Notification_events Notification_id=\"1\" events=\"unexisting1\"/>\n-  <Notification_events Notification_id=\"1\" events=\"unexisting2\"/>\n+  <Notification_events Notification_id=\"1\" events=\"[CUSTOM]:[]:[]:[unexisting1]:[FAILURE]\"/>\n+  <Notification_events Notification_id=\"1\" events=\"[CUSTOM]:[]:[]:[unexisting2]:[SUCCESS]\"/>\n     \n   <Report id=\"1\" name=\"test\"/>\n   <ReportletConfInstance id=\"1\" Report_id=\"1\" serializedInstance=\"%3Corg.apache.syncope.common.report.UserReportletConf%3E%0A++%3Cname%3EtestUserReportlet%3C%2Fname%3E%0A++%3Cattrs%3E%0A++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++%3Cstring%3Egender%3C%2Fstring%3E%0A++%3C%2Fattrs%3E%0A++%3CderAttrs+class%3D%22singleton-list%22%3E%0A++++%3Cstring%3Ecn%3C%2Fstring%3E%0A++%3C%2FderAttrs%3E%0A++%3CvirAttrs+class%3D%22singleton-list%22%3E%0A++++%3Cstring%3Evirtualdata%3C%2Fstring%3E%0A++%3C%2FvirAttrs%3E%0A++%3Cfeatures+class%3D%22java.util.Arrays%24ArrayList%22%3E%0A++++%3Ca+class%3D%22org.apache.syncope.common.report.UserReportletConf%24Feature-array%22%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eid%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eusername%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EworkflowId%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Estatus%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EcreationDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3ElastLoginDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EchangePwdDate%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EpasswordHistorySize%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3EfailedLoginCount%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Ememberships%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++++%3Corg.apache.syncope.common.report.UserReportletConf_-Feature%3Eresources%3C%2Forg.apache.syncope.common.report.UserReportletConf_-Feature%3E%0A++++%3C%2Fa%3E%0A++%3C%2Ffeatures%3E%0A%3C%2Forg.apache.syncope.common.report.UserReportletConf%3E\"/>"}]}