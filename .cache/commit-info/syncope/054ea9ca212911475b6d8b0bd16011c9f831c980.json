{"sha":"054ea9ca212911475b6d8b0bd16011c9f831c980","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA1NGVhOWNhMjEyOTExNDc1YjZkOGIwYmQxNjAxMWM5ZjgzMWM5ODA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-26T14:53:57Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-26T14:53:57Z"},"message":"[SYNCOPE-686] Merge from 1_2_X","tree":{"sha":"44711d39dec9bfb16926268b9f911d4a809a94a4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/44711d39dec9bfb16926268b9f911d4a809a94a4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/054ea9ca212911475b6d8b0bd16011c9f831c980","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/054ea9ca212911475b6d8b0bd16011c9f831c980","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/054ea9ca212911475b6d8b0bd16011c9f831c980","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/054ea9ca212911475b6d8b0bd16011c9f831c980/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3559e694b91667da1ca474cecd207740a05bb127","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3559e694b91667da1ca474cecd207740a05bb127","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3559e694b91667da1ca474cecd207740a05bb127"},{"sha":"a1737d35ad33c426e89a48259f0655ba3736ac6c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a1737d35ad33c426e89a48259f0655ba3736ac6c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a1737d35ad33c426e89a48259f0655ba3736ac6c"}],"stats":{"total":225,"additions":154,"deletions":71},"files":[{"sha":"4165c7dc3200264bcf1cc404c90dfe9693c30c3c","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -154,7 +154,7 @@ public static StatusMod buildStatusMod(final Collection<StatusBean> statuses, fi\n                 if (\"syncope\".equalsIgnoreCase(status.getResourceName())) {\n                     statusMod.setOnSyncope(true);\n                 } else {\n-                    statusMod.getResourceNames().add(status.getResourceName());\n+                    statusMod.getResources().add(status.getResourceName());\n                 }\n \n             }"},{"sha":"ae2c923f523197e83bbdaedfb00d6904050e8335","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -124,8 +124,7 @@ public void unlink(final String etag, final long groupKey, final List<StatusBean\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n             service.deassociate(groupKey, ResourceDeassociationActionType.UNLINK,\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceKey.class));\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class));\n             resetClient(GroupService.class);\n         }\n     }\n@@ -136,7 +135,7 @@ public void link(final String etag, final long groupKey, final List<StatusBean>\n \n             ResourceAssociationMod associationMod = new ResourceAssociationMod();\n             associationMod.getTargetResources().addAll(\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class));\n             service.associate(groupKey, ResourceAssociationAction.LINK, associationMod);\n \n             resetClient(GroupService.class);\n@@ -148,8 +147,7 @@ public BulkActionResult deprovision(final String etag, final long groupKey, fina\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n             result = service.deassociate(groupKey, ResourceDeassociationActionType.DEPROVISION,\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceKey.class)).\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n             resetClient(GroupService.class);\n         }\n@@ -163,7 +161,7 @@ public BulkActionResult provision(final String etag, final long groupKey, final\n \n             ResourceAssociationMod associationMod = new ResourceAssociationMod();\n             associationMod.getTargetResources().addAll(\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class));\n \n             result = service.associate(groupKey, ResourceAssociationAction.PROVISION, associationMod).\n                     readEntity(BulkActionResult.class);\n@@ -177,8 +175,7 @@ public BulkActionResult unassign(final String etag, final long groupKey, final L\n         synchronized (this) {\n             GroupService service = getService(etag, GroupService.class);\n             result = service.deassociate(groupKey, ResourceDeassociationActionType.UNASSIGN,\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceKey.class)).\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n             resetClient(GroupService.class);\n         }\n@@ -192,7 +189,7 @@ public BulkActionResult assign(final String etag, final long groupKey, final Lis\n \n             ResourceAssociationMod associationMod = new ResourceAssociationMod();\n             associationMod.getTargetResources().addAll(\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class));\n \n             result = service.associate(groupKey, ResourceAssociationAction.ASSIGN, associationMod).\n                     readEntity(BulkActionResult.class);"},{"sha":"36f1124296fdc7f052d03f90c62963c33a8f351e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -153,8 +153,7 @@ public void unlink(final String etag, final long userKey, final List<StatusBean>\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n             service.deassociate(userKey, ResourceDeassociationActionType.UNLINK,\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceKey.class));\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class));\n             resetClient(UserService.class);\n         }\n     }\n@@ -165,7 +164,7 @@ public void link(final String etag, final long userKey, final List<StatusBean> s\n \n             ResourceAssociationMod associationMod = new ResourceAssociationMod();\n             associationMod.getTargetResources().addAll(\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class));\n             service.associate(userKey, ResourceAssociationAction.LINK, associationMod);\n \n             resetClient(UserService.class);\n@@ -177,8 +176,7 @@ public BulkActionResult deprovision(final String etag, final long userKey, final\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n             result = service.deassociate(userKey, ResourceDeassociationActionType.DEPROVISION,\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceKey.class)).\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n             resetClient(UserService.class);\n         }\n@@ -194,7 +192,7 @@ public BulkActionResult provision(final String etag, final long userKey,\n \n             ResourceAssociationMod associationMod = new ResourceAssociationMod();\n             associationMod.getTargetResources().addAll(\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class));\n             associationMod.setChangePwd(changepwd);\n             associationMod.setPassword(password);\n \n@@ -210,8 +208,7 @@ public BulkActionResult unassign(final String etag, final long userKey, final Li\n         synchronized (this) {\n             UserService service = getService(etag, UserService.class);\n             result = service.deassociate(userKey, ResourceDeassociationActionType.UNASSIGN,\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(),\n-                            ResourceKey.class)).\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class)).\n                     readEntity(BulkActionResult.class);\n             resetClient(UserService.class);\n         }\n@@ -227,7 +224,7 @@ public BulkActionResult assign(final String etag, final long userKey,\n \n             ResourceAssociationMod associationMod = new ResourceAssociationMod();\n             associationMod.getTargetResources().addAll(\n-                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResourceNames(), ResourceKey.class));\n+                    CollectionWrapper.wrap(StatusUtils.buildStatusMod(statuses).getResources(), ResourceKey.class));\n             associationMod.setChangePwd(changepwd);\n             associationMod.setPassword(password);\n "},{"sha":"7f087b75d8637e4574932f90f5f3c45d895fc797","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/mod/StatusMod.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FStatusMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FStatusMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fmod%2FStatusMod.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -103,7 +103,7 @@ public void setOnSyncope(final boolean onSyncope) {\n     @XmlElementWrapper(name = \"resources\")\n     @XmlElement(name = \"resource\")\n     @JsonProperty(\"resources\")\n-    public List<String> getResourceNames() {\n+    public List<String> getResources() {\n         return resourceNames;\n     }\n "},{"sha":"c8a986d2ae9fc3cc31445a54225689c59c5ed17f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -449,7 +449,7 @@ public UserTO assign(\n         if (changepwd) {\n             StatusMod statusMod = new StatusMod();\n             statusMod.setOnSyncope(false);\n-            statusMod.getResourceNames().addAll(resources);\n+            statusMod.getResources().addAll(resources);\n             userMod.setPwdPropRequest(statusMod);\n             userMod.setPassword(password);\n         }"},{"sha":"5fd3ec12b58ca167bf6cb46276c1d6726410e255","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -270,7 +270,7 @@ public Pair<Long, List<PropagationStatus>> suspend(final StatusMod statusMod) {\n \n     protected List<PropagationStatus> propagateStatus(final StatusMod statusMod) {\n         Collection<String> noPropResourceNames = CollectionUtils.removeAll(\n-                userDAO.findAllResourceNames(userDAO.find(statusMod.getKey())), statusMod.getResourceNames());\n+                userDAO.findAllResourceNames(userDAO.find(statusMod.getKey())), statusMod.getResources());\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n                 statusMod.getKey(), statusMod.getType() != StatusMod.ModType.SUSPEND, noPropResourceNames);\n@@ -315,7 +315,7 @@ public List<PropagationStatus> provision(\n         if (changePwd) {\n             StatusMod statusMod = new StatusMod();\n             statusMod.setOnSyncope(false);\n-            statusMod.getResourceNames().addAll(resources);\n+            statusMod.getResources().addAll(resources);\n             userMod.setPwdPropRequest(statusMod);\n             userMod.setPassword(password);\n         }"},{"sha":"2e1224b264265e0ddd54c175e180b1549cc7d443","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -26,10 +26,12 @@\n import javax.annotation.Resource;\n import org.apache.commons.collections4.Closure;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeClientCompositeException;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.mod.StatusMod;\n import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.common.lib.to.MembershipTO;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n@@ -48,9 +50,13 @@\n import org.apache.syncope.core.misc.security.AuthContextUtils;\n import org.apache.syncope.core.misc.security.Encryptor;\n import org.apache.syncope.core.misc.spring.BeanUtils;\n+import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n import org.apache.syncope.core.persistence.api.entity.Role;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n+import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n+import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n+import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n import org.apache.syncope.core.persistence.api.entity.user.URelationship;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -75,6 +81,9 @@ public class UserDataBinderImpl extends AbstractAnyDataBinder implements UserDat\n     @Autowired\n     private SecurityQuestionDAO securityQuestionDAO;\n \n+    @Autowired\n+    private AnyTypeDAO anyTypeDAO;\n+\n     @Resource(name = \"adminUser\")\n     private String adminUser;\n \n@@ -216,6 +225,23 @@ public void create(final User user, final UserTO userTO, final boolean storePass\n         user.setSecurityAnswer(userTO.getSecurityAnswer());\n     }\n \n+    private boolean isPasswordMapped(final ExternalResource resource) {\n+        boolean result = false;\n+\n+        Provision provision = resource.getProvision(anyTypeDAO.findUser());\n+        if (provision != null && provision.getMapping() != null) {\n+            result = CollectionUtils.exists(provision.getMapping().getItems(), new Predicate<MappingItem>() {\n+\n+                @Override\n+                public boolean evaluate(final MappingItem item) {\n+                    return item.isPassword();\n+                }\n+            });\n+        }\n+\n+        return result;\n+    }\n+\n     @Override\n     public PropagationByResource update(final User toBeUpdated, final UserMod userMod) {\n         // Re-merge any pending change from workflow tasks\n@@ -367,6 +393,20 @@ public void execute(final Long roleKey) {\n                     user.add(membership);\n \n                     toBeProvisioned.addAll(group.getResourceNames());\n+\n+                    // SYNCOPE-686: if password is invertible and we are adding resources with password mapping,\n+                    // ensure that they are counted for password propagation\n+                    if (toBeUpdated.canDecodePassword()) {\n+                        for (ExternalResource resource : group.getResources()) {\n+                            if (isPasswordMapped(resource)) {\n+                                if (userMod.getPwdPropRequest() == null) {\n+                                    userMod.setPwdPropRequest(new StatusMod());\n+                                }\n+\n+                                userMod.getPwdPropRequest().getResources().add(resource.getKey());\n+                            }\n+                        }\n+                    }\n                 }\n             }\n         }"},{"sha":"631cbe3695387dd0d697af7f9c6fe182227fe8f4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -239,7 +239,7 @@ public List<PropagationTask> getUserUpdateTasks(final WorkflowResult<Pair<UserMo\n             PropagationByResource origPropByRes = new PropagationByResource();\n             origPropByRes.merge(wfResult.getPropByRes());\n \n-            Set<String> pwdResourceNames = new HashSet<>(userMod.getPwdPropRequest().getResourceNames());\n+            Set<String> pwdResourceNames = new HashSet<>(userMod.getPwdPropRequest().getResources());\n             Collection<String> currentResourceNames = userDAO.findAllResourceNames(userDAO.authFind(userMod.getKey()));\n             pwdResourceNames.retainAll(currentResourceNames);\n             PropagationByResource pwdPropByRes = new PropagationByResource();"},{"sha":"db95d8db35d8523f841f0d53a836e45b2a4df4a8","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -843,11 +843,11 @@ public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form) {\n             userMod.setPassword(clearPassword);\n \n             if (propByRes != null) {\n-                final StatusMod st = new StatusMod();\n+                StatusMod st = new StatusMod();\n                 userMod.setPwdPropRequest(st);\n                 st.setOnSyncope(true);\n                 for (String res : propByRes.get(ResourceOperation.CREATE)) {\n-                    st.getResourceNames().add(res);\n+                    st.getResources().add(res);\n                 }\n             }\n         }"},{"sha":"b77b61f025d58f8cfbec18ec7001974c78f88823","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserProvisionProcessor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserProvisionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserProvisionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserProvisionProcessor.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -69,7 +69,7 @@ public void process(final Exchange exchange) {\n         if (changePwd) {\n             StatusMod statusMod = new StatusMod();\n             statusMod.setOnSyncope(false);\n-            statusMod.getResourceNames().addAll(resources);\n+            statusMod.getResources().addAll(resources);\n             userMod.setPwdPropRequest(statusMod);\n             userMod.setPassword(password);\n         }"},{"sha":"41af6ebdf8fd6b4c8f351d32df200013a9e7ffe3","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserStatusPropagationProcessor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserStatusPropagationProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserStatusPropagationProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserStatusPropagationProcessor.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -61,7 +61,7 @@ public void process(final Exchange exchange) {\n         StatusMod statusMod = exchange.getProperty(\"statusMod\", StatusMod.class);\n \n         Collection<String> resourcesToBeExcluded = CollectionUtils.removeAll(\n-                userDAO.findAllResourceNames(userDAO.find(key)), statusMod.getResourceNames());\n+                userDAO.findAllResourceNames(userDAO.find(key)), statusMod.getResources());\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n                 key, statusMod.getType() != StatusMod.ModType.SUSPEND, resourcesToBeExcluded);"},{"sha":"f048c3f15ab92b293a149ce723198de0be6e29f1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SyncTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -705,7 +705,7 @@ public void issueSYNCOPE313LDAP() throws Exception {\n         userMod.setPassword(\"new-security123\");\n         StatusMod pwdPropRequest = new StatusMod();\n         pwdPropRequest.setOnSyncope(true);\n-        pwdPropRequest.getResourceNames().clear();\n+        pwdPropRequest.getResources().clear();\n         userMod.setPwdPropRequest(pwdPropRequest);\n         updateUser(userMod);\n "},{"sha":"375f0d7233c3dbd9fd5030ae6d932e0064a4b68a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserITCase.java","status":"modified","additions":88,"deletions":39,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -889,8 +889,8 @@ public void suspendReactivateOnResource() {\n         statusMod.setKey(userKey);\n         statusMod.setType(StatusMod.ModType.SUSPEND);\n         statusMod.setOnSyncope(true);\n-        statusMod.getResourceNames().add(RESOURCE_NAME_TESTDB);\n-        statusMod.getResourceNames().add(RESOURCE_NAME_LDAP);\n+        statusMod.getResources().add(RESOURCE_NAME_TESTDB);\n+        statusMod.getResources().add(RESOURCE_NAME_LDAP);\n         userTO = userService.status(statusMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n@@ -907,7 +907,7 @@ public void suspendReactivateOnResource() {\n         statusMod.setKey(userKey);\n         statusMod.setType(StatusMod.ModType.SUSPEND);\n         statusMod.setOnSyncope(false);\n-        statusMod.getResourceNames().add(RESOURCE_NAME_LDAP);\n+        statusMod.getResources().add(RESOURCE_NAME_LDAP);\n         userService.status(statusMod);\n         statusMod.setType(StatusMod.ModType.REACTIVATE);\n         userTO = userService.status(statusMod).readEntity(UserTO.class);\n@@ -922,7 +922,7 @@ public void suspendReactivateOnResource() {\n         statusMod.setKey(userKey);\n         statusMod.setType(StatusMod.ModType.REACTIVATE);\n         statusMod.setOnSyncope(true);\n-        statusMod.getResourceNames().add(RESOURCE_NAME_TESTDB);\n+        statusMod.getResources().add(RESOURCE_NAME_TESTDB);\n \n         userTO = userService.status(statusMod).readEntity(UserTO.class);\n         assertNotNull(userTO);\n@@ -1052,7 +1052,7 @@ public final void issue280() {\n \n         final StatusMod st = new StatusMod();\n         st.setOnSyncope(false);\n-        st.getResourceNames().add(RESOURCE_NAME_TESTDB);\n+        st.getResources().add(RESOURCE_NAME_TESTDB);\n         userMod.setPwdPropRequest(st);\n \n         userTO = updateUser(userMod);\n@@ -1459,7 +1459,7 @@ public void issueSYNCOPE122() {\n         userMod.setPassword(getUUIDString());\n         StatusMod pwdPropRequest = new StatusMod();\n         pwdPropRequest.setOnSyncope(false);\n-        pwdPropRequest.getResourceNames().add(RESOURCE_NAME_TESTDB);\n+        pwdPropRequest.getResources().add(RESOURCE_NAME_TESTDB);\n         userMod.setPwdPropRequest(pwdPropRequest);\n \n         userTO = updateUser(userMod);\n@@ -1499,38 +1499,40 @@ public void isseSYNCOPE136AES() {\n         pwdCipherAlgo.getValues().set(0, \"AES\");\n         configurationService.set(pwdCipherAlgo);\n \n-        // 3. create user with no resources\n-        UserTO userTO = getUniqueSampleTO(\"syncope136_AES@apache.org\");\n-        userTO.getResources().clear();\n-\n-        userTO = createUser(userTO);\n-        assertNotNull(userTO);\n-\n-        // 4. update user, assign a propagation primary resource but don't provide any password\n-        UserMod userMod = new UserMod();\n-        userMod.setKey(userTO.getKey());\n-        userMod.getResourcesToAdd().add(RESOURCE_NAME_WS1);\n+        try {\n+            // 3. create user with no resources\n+            UserTO userTO = getUniqueSampleTO(\"syncope136_AES@apache.org\");\n+            userTO.getResources().clear();\n \n-        final StatusMod st = new StatusMod();\n-        st.setOnSyncope(false);\n-        st.getResourceNames().add(RESOURCE_NAME_WS1);\n-        userMod.setPwdPropRequest(st);\n+            userTO = createUser(userTO);\n+            assertNotNull(userTO);\n \n-        userTO = updateUser(userMod);\n-        assertNotNull(userTO);\n+            // 4. update user, assign a propagation primary resource but don't provide any password\n+            UserMod userMod = new UserMod();\n+            userMod.setKey(userTO.getKey());\n+            userMod.getResourcesToAdd().add(RESOURCE_NAME_WS1);\n \n-        // 5. verify that propagation was successful\n-        List<PropagationStatus> props = userTO.getPropagationStatusTOs();\n-        assertNotNull(props);\n-        assertEquals(1, props.size());\n-        PropagationStatus prop = props.iterator().next();\n-        assertNotNull(prop);\n-        assertEquals(RESOURCE_NAME_WS1, prop.getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, prop.getStatus());\n+            StatusMod st = new StatusMod();\n+            st.setOnSyncope(false);\n+            st.getResources().add(RESOURCE_NAME_WS1);\n+            userMod.setPwdPropRequest(st);\n \n-        // 6. restore initial cipher algorithm\n-        pwdCipherAlgo.getValues().set(0, origpwdCipherAlgo);\n-        configurationService.set(pwdCipherAlgo);\n+            userTO = updateUser(userMod);\n+            assertNotNull(userTO);\n+\n+            // 5. verify that propagation was successful\n+            List<PropagationStatus> props = userTO.getPropagationStatusTOs();\n+            assertNotNull(props);\n+            assertEquals(1, props.size());\n+            PropagationStatus prop = props.iterator().next();\n+            assertNotNull(prop);\n+            assertEquals(RESOURCE_NAME_WS1, prop.getResource());\n+            assertEquals(PropagationTaskExecStatus.SUBMITTED, prop.getStatus());\n+        } finally {\n+            // restore initial cipher algorithm\n+            pwdCipherAlgo.getValues().set(0, origpwdCipherAlgo);\n+            configurationService.set(pwdCipherAlgo);\n+        }\n     }\n \n     @Test\n@@ -1546,9 +1548,9 @@ public void isseSYNCOPE136Random() {\n         userMod.setKey(userTO.getKey());\n         userMod.getResourcesToAdd().add(RESOURCE_NAME_LDAP);\n \n-        final StatusMod st = new StatusMod();\n+        StatusMod st = new StatusMod();\n         st.setOnSyncope(false);\n-        st.getResourceNames().add(RESOURCE_NAME_LDAP);\n+        st.getResources().add(RESOURCE_NAME_LDAP);\n         userMod.setPwdPropRequest(st);\n \n         userTO = updateUser(userMod);\n@@ -1763,7 +1765,7 @@ public void issueSYNCOPE383() {\n         userMod.setKey(userTO.getKey());\n         userMod.setPassword(getUUIDString() + \"abbcbcbddd123\");\n         StatusMod pwdPropRequest = new StatusMod();\n-        pwdPropRequest.getResourceNames().add(RESOURCE_NAME_TESTDB);\n+        pwdPropRequest.getResources().add(RESOURCE_NAME_TESTDB);\n         userMod.setPwdPropRequest(pwdPropRequest);\n \n         userTO = updateUser(userMod);\n@@ -2273,7 +2275,7 @@ public void issueSYNCOPE505DB() throws Exception {\n \n         final StatusMod st = new StatusMod();\n         st.setOnSyncope(false);\n-        st.getResourceNames().add(RESOURCE_NAME_TESTDB);\n+        st.getResources().add(RESOURCE_NAME_TESTDB);\n         userMod.setPwdPropRequest(st);\n \n         user = updateUser(userMod);\n@@ -2316,7 +2318,7 @@ public void issueSYNCOPE505LDAP() throws Exception {\n \n         final StatusMod st = new StatusMod();\n         st.setOnSyncope(false);\n-        st.getResourceNames().add(RESOURCE_NAME_LDAP);\n+        st.getResources().add(RESOURCE_NAME_LDAP);\n         userMod.setPwdPropRequest(st);\n \n         user = updateUser(userMod);\n@@ -2524,4 +2526,51 @@ public void issueSYNCOPE626() {\n         }\n \n     }\n+\n+    @Test\n+    public void issueSYNCOPE686() {\n+        // 1. read configured cipher algorithm in order to be able to restore it at the end of test\n+        AttrTO pwdCipherAlgo = configurationService.get(\"password.cipher.algorithm\");\n+        String origpwdCipherAlgo = pwdCipherAlgo.getValues().get(0);\n+\n+        // 2. set AES password cipher algorithm\n+        pwdCipherAlgo.getValues().set(0, \"AES\");\n+        configurationService.set(pwdCipherAlgo);\n+\n+        try {\n+            // 3. create group with LDAP resource assigned\n+            GroupTO group = GroupITCase.getBasicSampleTO(\"syncope686\");\n+            group.getResources().add(RESOURCE_NAME_LDAP);\n+            group = createGroup(group);\n+            assertNotNull(group);\n+\n+            // 4. create user with no resources\n+            UserTO userTO = getUniqueSampleTO(\"syncope686@apache.org\");\n+            userTO.getResources().clear();\n+\n+            userTO = createUser(userTO);\n+            assertNotNull(userTO);\n+\n+            // 5. update user with the new group, and don't provide any password\n+            UserMod userMod = new UserMod();\n+            userMod.setKey(userTO.getKey());\n+            userMod.getMembershipsToAdd().add(group.getKey());\n+\n+            userTO = updateUser(userMod);\n+            assertNotNull(userTO);\n+\n+            // 5. verify that propagation was successful\n+            List<PropagationStatus> props = userTO.getPropagationStatusTOs();\n+            assertNotNull(props);\n+            assertEquals(1, props.size());\n+            PropagationStatus prop = props.iterator().next();\n+            assertNotNull(prop);\n+            assertEquals(RESOURCE_NAME_LDAP, prop.getResource());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, prop.getStatus());\n+        } finally {\n+            // restore initial cipher algorithm\n+            pwdCipherAlgo.getValues().set(0, origpwdCipherAlgo);\n+            configurationService.set(pwdCipherAlgo);\n+        }\n+    }\n }"},{"sha":"78eb504c329b0503c0af2809f41da7141cfb2e8b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserSelfITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserSelfITCase.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -178,7 +178,7 @@ public void updateWithApproval() {\n         userMod.setPassword(\"newPassword123\");\n         StatusMod statusMod = new StatusMod();\n         statusMod.setOnSyncope(false);\n-        statusMod.getResourceNames().add(RESOURCE_NAME_TESTDB);\n+        statusMod.getResources().add(RESOURCE_NAME_TESTDB);\n         userMod.setPwdPropRequest(statusMod);\n \n         SyncopeClient authClient = clientFactory.create(created.getUsername(), \"password123\");"},{"sha":"cb166a9fbabea3d1da3874badd23218099c2a5c1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/VirAttrITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/054ea9ca212911475b6d8b0bd16011c9f831c980/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/054ea9ca212911475b6d8b0bd16011c9f831c980/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java?ref=054ea9ca212911475b6d8b0bd16011c9f831c980","patch":"@@ -329,7 +329,7 @@ public void issueSYNCOPE397() {\n             // check Syncope change password\n             StatusMod pwdPropRequest = new StatusMod();\n             pwdPropRequest.setOnSyncope(true);\n-            pwdPropRequest.getResourceNames().add(RESOURCE_NAME_WS2);\n+            pwdPropRequest.getResources().add(RESOURCE_NAME_WS2);\n             userMod.setPwdPropRequest(pwdPropRequest);\n \n             toBeUpdated = updateUser(userMod);\n@@ -594,7 +594,7 @@ public void issueSYNCOPE501() {\n         userMod.setKey(userTO.getKey());\n \n         final StatusMod statusMod = new StatusMod();\n-        statusMod.getResourceNames().addAll(Collections.<String>emptySet());\n+        statusMod.getResources().addAll(Collections.<String>emptySet());\n         statusMod.setOnSyncope(false);\n \n         userMod.setPwdPropRequest(statusMod);"}]}