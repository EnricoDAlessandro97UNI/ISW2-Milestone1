{"sha":"2ac89d97b64026ac656bd84e63e287c1812b7afc","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJhYzg5ZDk3YjY0MDI2YWM2NTZiZDg0ZTYzZTI4N2MxODEyYjdhZmM=","commit":{"author":{"name":"skylark17","email":"skylark17@apache.org","date":"2020-02-26T11:33:26Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2020-02-26T16:20:25Z"},"message":"[SYNCOPE-1544] Also removed readonly attributes from showing in the list of plain attributes for linkedaccounts","tree":{"sha":"c99e20356243193f2cb4068cd31761cd98833b68","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c99e20356243193f2cb4068cd31761cd98833b68"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2ac89d97b64026ac656bd84e63e287c1812b7afc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ac89d97b64026ac656bd84e63e287c1812b7afc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2ac89d97b64026ac656bd84e63e287c1812b7afc","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2ac89d97b64026ac656bd84e63e287c1812b7afc/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"503bbb4b619f353c68dba71b1a107ddca82aba18","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/503bbb4b619f353c68dba71b1a107ddca82aba18","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/503bbb4b619f353c68dba71b1a107ddca82aba18"}],"stats":{"total":62,"additions":42,"deletions":20},"files":[{"sha":"0540407ed2d4204a97732f44d46e6df55f0fb691","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountCredentialsPanel.java","status":"modified","additions":13,"deletions":2,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac89d97b64026ac656bd84e63e287c1812b7afc/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac89d97b64026ac656bd84e63e287c1812b7afc/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountCredentialsPanel.java?ref=2ac89d97b64026ac656bd84e63e287c1812b7afc","patch":"@@ -42,6 +42,10 @@ public class LinkedAccountCredentialsPanel extends WizardStep {\n \n     private static final long serialVersionUID = 5116461957402341603L;\n \n+    private String usernameValue;\n+\n+    private String passwordValue;\n+\n     private final LinkedAccountTO linkedAccountTO;\n \n     public LinkedAccountCredentialsPanel(final EntityWrapper<LinkedAccountTO> modelObject) {\n@@ -68,7 +72,6 @@ public LinkedAccountCredentialsPanel(final EntityWrapper<LinkedAccountTO> modelO\n                 new PropertyModel<>(linkedAccountTO, \"password\"),\n                 false);\n         passwordField.setMarkupId(\"password\");\n-        passwordField.setPlaceholder(\"password\");\n         passwordField.setRequired(true);\n         FieldPanel.class.cast(passwordField).setReadOnly(StringUtils.isBlank(linkedAccountTO.getPassword()));\n         LinkedAccountPlainAttrProperty passwordProperty = new LinkedAccountPlainAttrProperty();\n@@ -102,10 +105,18 @@ protected CheckBox newCheckBox(final String id, final IModel<Boolean> model) {\n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n                         FieldPanel.class.cast(panel).setReadOnly(!model.getObject());\n-                        if (!model.getObject()) {\n+                        if (model.getObject()) {\n+                            if (property.getSchema().equals(\"password\")) {\n+                                linkedAccountTO.setPassword(passwordValue);\n+                            } else if (property.getSchema().equals(\"username\")) {\n+                                linkedAccountTO.setUsername(usernameValue);\n+                            }\n+                        } else {\n                             if (property.getSchema().equals(\"password\")) {\n+                                passwordValue = linkedAccountTO.getPassword();\n                                 linkedAccountTO.setPassword(null);\n                             } else if (property.getSchema().equals(\"username\")) {\n+                                usernameValue = linkedAccountTO.getUsername();\n                                 linkedAccountTO.setUsername(null);\n                             }\n                         }"},{"sha":"edfdfe780dbb0977c8b310939de867d45f48b2eb","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/any/LinkedAccountPlainAttrsPanel.java","status":"modified","additions":29,"deletions":18,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2ac89d97b64026ac656bd84e63e287c1812b7afc/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2ac89d97b64026ac656bd84e63e287c1812b7afc/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FLinkedAccountPlainAttrsPanel.java?ref=2ac89d97b64026ac656bd84e63e287c1812b7afc","patch":"@@ -23,7 +23,6 @@\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggleConfig;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n@@ -78,15 +77,17 @@ public <T extends AnyTO> LinkedAccountPlainAttrsPanel(\n \n         super(userTO,\n                 AjaxWizard.Mode.EDIT,\n-                new AnyTypeRestClient().read(userTO.getType()).getClasses(),\n+                AnyTypeRestClient.read(userTO.getType()).getClasses(),\n                 AnyLayoutUtils.fetch(List.of(userTO.getType())).getUser().getWhichPlainAttrs(),\n                 modelObject);\n \n         this.linkedAccountTO = modelObject.getInnerObject();\n-        this.fixedAttrs.addAll(this.linkedAccountTO.getPlainAttrs());\n+        this.fixedAttrs.addAll(this.linkedAccountTO.getPlainAttrs().stream().\n+                filter(attrTO -> checkIsReadonlyAttr(attrTO.getSchema())).\n+                collect(Collectors.toList()));\n         this.userTO = userTO;\n \n-        add(new Accordion(\"plainSchemas\", Collections.<ITab>singletonList(new AbstractTab(\n+        add(new Accordion(\"plainSchemas\", List.of(new AbstractTab(\n                 new ResourceModel(\"attributes.accordion\", \"Plain Attributes\")) {\n \n             private static final long serialVersionUID = -7078941093668723016L;\n@@ -166,11 +167,12 @@ protected void onComponentTag(final ComponentTag tag) {\n     }\n \n     private void updateAccountPlainSchemas(final LinkedAccountPlainAttrProperty property, final Boolean modelObject) {\n-        Set<Attr> withoutCurrentSChema = new HashSet<>(linkedAccountTO.getPlainAttrs().stream().\n-                filter(attr -> !attr.getSchema().equals(property.getSchema())).\n+        Set<Attr> withoutCurrentSchema = new HashSet<>(linkedAccountTO.getPlainAttrs().stream().\n+                filter(attrTO -> !attrTO.getSchema().equals(property.getSchema())\n+                && checkIsReadonlyAttr(attrTO.getSchema())).\n                 collect(Collectors.toSet()));\n         linkedAccountTO.getPlainAttrs().clear();\n-        linkedAccountTO.getPlainAttrs().addAll(withoutCurrentSChema);\n+        linkedAccountTO.getPlainAttrs().addAll(withoutCurrentSchema);\n         if (modelObject) {\n             linkedAccountTO.getPlainAttrs().add(\n                     fixedAttrs.stream().filter(attrTO -> attrTO.getSchema().equals(property.getSchema())).findFirst().\n@@ -187,19 +189,24 @@ protected SchemaType getSchemaType() {\n     @Override\n     protected void setAttrs() {\n         List<Attr> attrs = new ArrayList<>();\n-        setFixedAttr(schemas.values());\n+        List<PlainSchemaTO> notReadonlyValues = schemas.values().stream().\n+                filter(schema -> checkIsReadonlyAttr(schema.getKey())).\n+                collect(Collectors.toList());\n+        setFixedAttr(notReadonlyValues);\n         Map<String, Attr> attrMap = EntityTOUtils.buildAttrMap(fixedAttrs);\n \n-        attrs.addAll(schemas.values().stream().map(schema -> {\n-            Attr attrTO = new Attr();\n-            attrTO.setSchema(schema.getKey());\n-            if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n-                attrTO.getValues().add(\"\");\n-            } else {\n-                attrTO = attrMap.get(schema.getKey());\n-            }\n-            return attrTO;\n-        }).collect(Collectors.toList()));\n+        attrs.addAll(notReadonlyValues.stream().\n+                map(schema -> {\n+                    Attr attrTO = new Attr();\n+                    attrTO.setSchema(schema.getKey());\n+                    if (attrMap.get(schema.getKey()) == null || attrMap.get(schema.getKey()).getValues().isEmpty()) {\n+                        attrTO.getValues().add(\"\");\n+                    } else {\n+                        attrTO = attrMap.get(schema.getKey());\n+                    }\n+                    return attrTO;\n+                }).\n+                collect(Collectors.toList()));\n \n         fixedAttrs.clear();\n         fixedAttrs.addAll(attrs);\n@@ -220,6 +227,10 @@ private void setFixedAttr(final Collection<PlainSchemaTO> values) {\n         });\n     }\n \n+    private boolean checkIsReadonlyAttr(final String schema) {\n+        return schemas.isEmpty() ? true : !schemas.get(schema).isReadonly();\n+    }\n+\n     private class PlainSchemasOwn extends PlainSchemas<List<Attr>> {\n \n         private static final long serialVersionUID = -4730563859116024676L;"}]}