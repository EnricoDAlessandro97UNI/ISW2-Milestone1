{"sha":"d984ebbd48013427be797f9c46169d5580c9b81e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQ5ODRlYmJkNDgwMTM0MjdiZTc5N2Y5YzQ2MTY5ZDU1ODBjOWI4MWU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-05-13T11:09:30Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-05-13T11:23:45Z"},"message":"Fix console tests","tree":{"sha":"05a3c47c2b09d1734007f69220f7a53c1af90ad0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/05a3c47c2b09d1734007f69220f7a53c1af90ad0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d984ebbd48013427be797f9c46169d5580c9b81e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d984ebbd48013427be797f9c46169d5580c9b81e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d984ebbd48013427be797f9c46169d5580c9b81e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d984ebbd48013427be797f9c46169d5580c9b81e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ec10c7b4249515faee7614c8affe4c60f1cf08fb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ec10c7b4249515faee7614c8affe4c60f1cf08fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ec10c7b4249515faee7614c8affe4c60f1cf08fb"}],"stats":{"total":53,"additions":28,"deletions":25},"files":[{"sha":"3c382f4974fd173d7fcdf076a1ae7386d0b5e9ca","filename":"client/idrepo/console/src/test/java/org/apache/syncope/client/console/panels/search/UserSearchPanelTest.java","status":"modified","additions":17,"deletions":8,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d984ebbd48013427be797f9c46169d5580c9b81e/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanelTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d984ebbd48013427be797f9c46169d5580c9b81e/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanelTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanelTest.java?ref=d984ebbd48013427be797f9c46169d5580c9b81e","patch":"@@ -19,11 +19,12 @@\n package org.apache.syncope.client.console.panels.search;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertNull;\n \n import java.util.List;\n import org.apache.syncope.client.console.AbstractAdminTest;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.wicket.Component;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.jupiter.api.Test;\n@@ -43,17 +44,25 @@ public void test() {\n         FormTester formTester = TESTER.newFormTester(\n                 \"content:searchFormContainer:search:multiValueContainer:innerForm\");\n \n-        assertNotNull(formTester.getForm().get(\"content:view:0:panel:container:property:textField\"));\n-\n-        formTester.setValue(\"content:view:0:panel:container:property:textField\", \"firstname\");\n-        formTester.setValue(\"content:view:0:panel:container:value:textField\", \"vincenzo\");\n         assertEquals(\"username\", formTester.getForm().\n                 get(\"content:view:0:panel:container:property:textField\").getDefaultModelObjectAsString());\n         assertNull(formTester.getForm().\n                 get(\"content:view:0:panel:container:value:textField\").getDefaultModelObject());\n-        formTester.submit(formTester.getForm().get(\"content:view:0:panel:container:operatorContainer:operator:search\"));\n-        assertEquals(\"firstname\", formTester.getForm().get(\n-                \"content:view:0:panel:container:property:textField\").getDefaultModelObjectAsString());\n+\n+        formTester.setValue(\"content:view:0:panel:container:property:textField\", \"firstname\");\n+        TESTER.executeAjaxEvent(formTester.getForm().\n+                get(\"content:view:0:panel:container:property:textField\"), Constants.ON_KEYDOWN);\n+        formTester.setValue(\"content:view:0:panel:container:value:textField\", \"vincenzo\");\n+        TESTER.executeAjaxEvent(formTester.getForm().\n+                get(\"content:view:0:panel:container:value:textField\"), Constants.ON_KEYDOWN);\n+\n+        Component searchButton = formTester.getForm().\n+                get(\"content:view:0:panel:container:operatorContainer:operator:search\");\n+        TESTER.clickLink(searchButton);\n+        TESTER.executeAjaxEvent(searchButton.getPageRelativePath(), Constants.ON_CLICK);\n+\n+        assertEquals(\"firstname\", formTester.getForm().\n+                get(\"content:view:0:panel:container:property:textField\").getDefaultModelObjectAsString());\n         assertEquals(\"vincenzo\", formTester.getForm().\n                 get(\"content:view:0:panel:container:value:textField\").getDefaultModelObjectAsString());\n     }"},{"sha":"fac17dbb31c8ac38acb8ff53b9c29315ea0abdf9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/LinkedAccountsITCase.java","status":"modified","additions":11,"deletions":17,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d984ebbd48013427be797f9c46169d5580c9b81e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLinkedAccountsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d984ebbd48013427be797f9c46169d5580c9b81e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLinkedAccountsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLinkedAccountsITCase.java?ref=d984ebbd48013427be797f9c46169d5580c9b81e","patch":"@@ -40,8 +40,6 @@\n import org.apache.syncope.fit.core.UserITCase;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n-import org.apache.wicket.markup.html.form.TextField;\n-import org.apache.wicket.markup.repeater.OddEvenItem;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n@@ -136,29 +134,25 @@ public void createLinkedAccountAndMergeWithUser() {\n         type.setModelValue(new String[] { \"ATTRIBUTE\" });\n         type.setDefaultModelObject(SearchClause.Type.ATTRIBUTE);\n \n-        TextField<?> property = (TextField<?>) TESTER.getComponentFromLastRenderedPage(USER_SEARCH_FORM\n-                + \"content:view:0:panel:container:property:textField\");\n-        assertNotNull(property);\n-        property.setModelValue(new String[] { \"username\" });\n-\n-        TextField<?> value = (TextField<?>) TESTER.getComponentFromLastRenderedPage(USER_SEARCH_FORM\n-                + \"content:view:0:panel:container:value:textField\");\n-        assertNotNull(value);\n-        value.setModelValue(new String[] { user.getUsername() });\n+        formTester.setValue(\"content:view:0:panel:container:property:textField\", \"username\");\n+        TESTER.executeAjaxEvent(formTester.getForm().\n+                get(\"content:view:0:panel:container:property:textField\"), Constants.ON_KEYDOWN);\n+        formTester.setValue(\"content:view:0:panel:container:value:textField\", user.getUsername());\n+        TESTER.executeAjaxEvent(formTester.getForm().\n+                get(\"content:view:0:panel:container:value:textField\"), Constants.ON_KEYDOWN);\n \n         TESTER.cleanupFeedbackMessages();\n-        formTester.submit(\"content:view:0:panel:container:operatorContainer:operator:search\");\n+        Component searchButton = formTester.getForm().\n+                get(\"content:view:0:panel:container:operatorContainer:operator:search\");\n+        TESTER.clickLink(searchButton);\n+        TESTER.executeAjaxEvent(searchButton.getPageRelativePath(), Constants.ON_CLICK);\n         TESTER.assertNoErrorMessage();\n \n         // Locate result in data table\n         Component comp = findComponentByProp(\"username\", TAB_PANEL + SEARCH_PANEL + RESULT_DATA_TABLE, user.\n                 getUsername());\n         TESTER.executeAjaxEvent(comp.getPageRelativePath(), Constants.ON_CLICK);\n \n-        UserTO userTO = (UserTO) ((OddEvenItem) TESTER.getComponentFromLastRenderedPage(TAB_PANEL + SEARCH_PANEL\n-                + RESULT_DATA_TABLE + \"body:rows:1\")).getModel().getObject();\n-        assertNotNull(userTO);\n-\n         // Select user\n         TESTER.clickLink(TAB_PANEL + SEARCH_PANEL + SELECT_USER_ACTION);\n \n@@ -195,7 +189,7 @@ public void createLinkedAccountAndMergeWithUser() {\n             }\n         }\n         // User must include merged accounts now\n-        UserTO verdi = userService.read(UserTO.class.cast(verdiUserComponent.getDefaultModelObject()).getKey());\n+        UserTO verdi = userService.read(\"verdi\");\n         assertFalse(verdi.getLinkedAccounts().isEmpty());\n     }\n }"}]}