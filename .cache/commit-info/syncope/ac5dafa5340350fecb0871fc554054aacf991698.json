{"sha":"ac5dafa5340350fecb0871fc554054aacf991698","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFjNWRhZmE1MzQwMzUwZmVjYjA4NzFmYzU1NDA1NGFhY2Y5OTE2OTg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-12-06T09:11:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-12-06T09:14:00Z"},"message":"White noise: more Java 8 goodness","tree":{"sha":"41de7667128d7d4e0b46e4984ff4d98bcf31089a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/41de7667128d7d4e0b46e4984ff4d98bcf31089a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ac5dafa5340350fecb0871fc554054aacf991698","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ac5dafa5340350fecb0871fc554054aacf991698","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ac5dafa5340350fecb0871fc554054aacf991698","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ac5dafa5340350fecb0871fc554054aacf991698/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0678697a4011825de1c5de69d51053f841000001","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0678697a4011825de1c5de69d51053f841000001","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0678697a4011825de1c5de69d51053f841000001"}],"stats":{"total":35,"additions":11,"deletions":24},"files":[{"sha":"7958254bef106b887c9122b30cf552589d249a3f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RealmChoicePanel.java","status":"modified","additions":11,"deletions":24,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ac5dafa5340350fecb0871fc554054aacf991698/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ac5dafa5340350fecb0871fc554054aacf991698/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java?ref=ac5dafa5340350fecb0871fc554054aacf991698","patch":"@@ -36,8 +36,6 @@\n import java.util.Map;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n-import org.apache.commons.collections4.IterableUtils;\n-import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -92,10 +90,6 @@ public RealmChoicePanel(final String id, final PageReference pageRef) {\n         availableRealms = SyncopeConsoleSession.get().getAuthRealms();\n         tree = new HashMap<>();\n \n-        RealmTO fakeRootRealm = new RealmTO();\n-        fakeRootRealm.setName(SyncopeConstants.ROOT_REALM);\n-        fakeRootRealm.setFullPath(SyncopeConstants.ROOT_REALM);\n-\n         realmTree = new LoadableDetachableModel<List<Pair<String, RealmTO>>>() {\n \n             private static final long serialVersionUID = -7688359318035249200L;\n@@ -120,12 +114,9 @@ protected List<Pair<String, RealmTO>> load() {\n                 Map<String, Pair<RealmTO, List<RealmTO>>> map = reloadRealmParentMap();\n                 List<Pair<String, RealmTO>> full = new ArrayList<>();\n                 getChildren(full, null, map, StringUtils.EMPTY);\n-\n-                return full.stream().filter(realm\n-                        -> availableRealms.stream().anyMatch(\n-                                availableRealm -> realm.getValue().getFullPath()\n-                                        .startsWith(availableRealm))).collect(Collectors.toList());\n-\n+                return full.stream().filter(realm -> availableRealms.stream().anyMatch(\n+                        availableRealm -> realm.getValue().getFullPath().startsWith(availableRealm))).\n+                        collect(Collectors.toList());\n             }\n         };\n \n@@ -151,7 +142,7 @@ protected List<DynRealmTO> load() {\n                                 || dynRealm.getKey().equals(availableRealm))).collect(Collectors.toList());\n             }\n         };\n-       \n+\n         model = Model.of(realmTree.getObject().stream().findFirst().get().getValue());\n         container = new WebMarkupContainer(\"container\", realmTree);\n         container.setOutputMarkupId(true);\n@@ -210,13 +201,9 @@ public String getIdValue(final Pair<String, RealmTO> object, final int index) {\n                 @Override\n                 public Pair<String, RealmTO> getObject(final String id,\n                         final IModel<? extends List<? extends Pair<String, RealmTO>>> choices) {\n-                    return IterableUtils.find(choices.getObject(), new Predicate<Pair<String, RealmTO>>() {\n \n-                        @Override\n-                        public boolean evaluate(final Pair<String, RealmTO> object) {\n-                            return object.getKey().equals(id);\n-                        }\n-                    });\n+                    return choices.getObject().stream().\n+                            filter(object -> object.getKey().equals(id)).findFirst().orElse(null);\n                 }\n             });\n             select.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n@@ -286,8 +273,8 @@ protected void onComponentTag(final ComponentTag tag) {\n             }\n         });\n \n-        for (Pair<String, RealmTO> link : realmTree.getObject()) {\n-            final RealmTO realmTO = link.getValue();\n+        realmTree.getObject().forEach(link -> {\n+            RealmTO realmTO = link.getValue();\n             RealmChoicePanel.this.links.add(new BootstrapAjaxLink<RealmTO>(\n                     ButtonList.getButtonMarkupId(),\n                     Model.of(realmTO),\n@@ -305,7 +292,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     send(pageRef.getPage(), Broadcast.EXACT, new ChosenRealm<>(realmTO, target));\n                 }\n             });\n-        }\n+        });\n \n         if (!dynRealmTree.getObject().isEmpty()) {\n             RealmChoicePanel.this.links.add(new BootstrapAjaxLink<RealmTO>(\n@@ -333,7 +320,7 @@ protected void onComponentTag(final ComponentTag tag) {\n                 }\n             });\n \n-            for (DynRealmTO dynRealmTO : dynRealmTree.getObject()) {\n+            dynRealmTree.getObject().forEach(dynRealmTO -> {\n                 final RealmTO realmTO = new RealmTO();\n                 realmTO.setKey(dynRealmTO.getKey());\n                 realmTO.setName(dynRealmTO.getKey());\n@@ -356,7 +343,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         send(pageRef.getPage(), Broadcast.EXACT, new ChosenRealm<>(realmTO, target));\n                     }\n                 });\n-            }\n+            });\n         }\n     }\n "}]}