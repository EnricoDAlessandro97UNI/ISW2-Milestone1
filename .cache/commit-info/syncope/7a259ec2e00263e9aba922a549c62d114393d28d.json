{"sha":"7a259ec2e00263e9aba922a549c62d114393d28d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdhMjU5ZWMyZTAwMjYzZTlhYmE5MjJhNTQ5YzYyZDExNDM5M2QyOGQ=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-23T15:29:00Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-23T15:29:00Z"},"message":"added more precise test, SYNCOPE-727","tree":{"sha":"c6a848959fc554863c8851aa4d0b793f27ac8103","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c6a848959fc554863c8851aa4d0b793f27ac8103"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7a259ec2e00263e9aba922a549c62d114393d28d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7a259ec2e00263e9aba922a549c62d114393d28d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7a259ec2e00263e9aba922a549c62d114393d28d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7a259ec2e00263e9aba922a549c62d114393d28d/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"d398b6e0592c17b2ae795f98cd2fb1cdd03c8700","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d398b6e0592c17b2ae795f98cd2fb1cdd03c8700","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d398b6e0592c17b2ae795f98cd2fb1cdd03c8700"}],"stats":{"total":26,"additions":21,"deletions":5},"files":[{"sha":"d05f4462d998eb4d006fd694eeadcb606328f89b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/CLIITCase.java","status":"modified","additions":21,"deletions":5,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7a259ec2e00263e9aba922a549c62d114393d28d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7a259ec2e00263e9aba922a549c62d114393d28d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FCLIITCase.java?ref=7a259ec2e00263e9aba922a549c62d114393d28d","patch":"@@ -148,16 +148,20 @@ public boolean evaluate(final String line) {\n \n     @Test\n     public void userRead() {\n-        final long userId = 1;\n+        final long userId1 = 1;\n+        final long userId2 = 2;\n+        final long userId3 = 3;\n+        final long userId4 = 4;\n+        final long userId5 = 5;\n         try {\n-            PROCESS_BUILDER.command(getCommand(\"user\", \"--read\", String.valueOf(userId)));\n+            PROCESS_BUILDER.command(getCommand(\"user\", \"--read\", String.valueOf(userId1)));\n             final Process process = PROCESS_BUILDER.start();\n             final String result = IOUtils.toString(process.getInputStream());\n-            assertTrue(result.contains(\"username: \" + userService.read(userId).getUsername()));\n+            assertTrue(result.contains(\"username: \" + userService.read(userId1).getUsername()));\n             process.destroy();\n \n-            PROCESS_BUILDER.command(getCommand(\"user\", \"--read\", String.valueOf(\"1\"), String.valueOf(\"2\"),\n-                    String.valueOf(\"3\"), String.valueOf(\"4\"), String.valueOf(\"5\")));\n+            PROCESS_BUILDER.command(getCommand(\"user\", \"--read\", String.valueOf(userId1), String.valueOf(userId2),\n+                    String.valueOf(userId3), String.valueOf(userId4), String.valueOf(userId5)));\n             final Process process2 = PROCESS_BUILDER.start();\n             int users = CollectionUtils.countMatches(IOUtils.readLines(process2.getInputStream()),\n                     new Predicate<String>() {\n@@ -170,6 +174,18 @@ public boolean evaluate(final String line) {\n             assertEquals(5, users);\n \n             process2.destroy();\n+\n+            PROCESS_BUILDER.command(getCommand(\"user\", \"--read\", String.valueOf(userId1), String.valueOf(userId2),\n+                    String.valueOf(userId3), String.valueOf(userId4), String.valueOf(userId5)));\n+            final Process process3 = PROCESS_BUILDER.start();\n+            final String result3 = IOUtils.toString(process3.getInputStream());\n+            assertTrue(\n+                    result3.contains(\"username: \" + userService.read(userId1).getUsername())\n+                    && result3.contains(\"username: \" + userService.read(userId2).getUsername())\n+                    && result3.contains(\"username: \" + userService.read(userId3).getUsername())\n+                    && result3.contains(\"username: \" + userService.read(userId4).getUsername())\n+                    && result3.contains(\"username: \" + userService.read(userId5).getUsername()));\n+            process3.destroy();\n         } catch (IOException e) {\n             fail(e.getMessage());\n         }"}]}