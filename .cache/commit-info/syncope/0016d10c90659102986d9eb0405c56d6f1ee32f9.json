{"sha":"0016d10c90659102986d9eb0405c56d6f1ee32f9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAwMTZkMTBjOTA2NTkxMDI5ODZkOWViMDQwNWM1NmQ2ZjFlZTMyZjk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-07T08:40:17Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-07T08:40:17Z"},"message":"Enhancing checks when deleting a realm containig users, groups or any objects","tree":{"sha":"8ee9611050b9ab6d68bfb91d184fb88284f2dc8e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8ee9611050b9ab6d68bfb91d184fb88284f2dc8e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0016d10c90659102986d9eb0405c56d6f1ee32f9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0016d10c90659102986d9eb0405c56d6f1ee32f9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0016d10c90659102986d9eb0405c56d6f1ee32f9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0016d10c90659102986d9eb0405c56d6f1ee32f9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"27dae836f910977a640d9a1506dc0971dc1cb745","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/27dae836f910977a640d9a1506dc0971dc1cb745","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/27dae836f910977a640d9a1506dc0971dc1cb745"}],"stats":{"total":60,"additions":49,"deletions":11},"files":[{"sha":"951a4ca09f170d04d9c807d6533132c7fbe3b9f5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0016d10c90659102986d9eb0405c56d6f1ee32f9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0016d10c90659102986d9eb0405c56d6f1ee32f9/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java?ref=0016d10c90659102986d9eb0405c56d6f1ee32f9","patch":"@@ -22,6 +22,7 @@\n \n public enum ClientExceptionType {\n \n+    AssociatedAnys(Response.Status.BAD_REQUEST),\n     AssociatedResources(Response.Status.BAD_REQUEST),\n     Composite(Response.Status.BAD_REQUEST),\n     ConcurrentModification(Response.Status.PRECONDITION_FAILED),"},{"sha":"0546f8fe8585561ff862db25c0faadf7ae465dc7","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ConnectorLogic.java","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0016d10c90659102986d9eb0405c56d6f1ee32f9/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0016d10c90659102986d9eb0405c56d6f1ee32f9/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java?ref=0016d10c90659102986d9eb0405c56d6f1ee32f9","patch":"@@ -108,10 +108,10 @@ public ConnInstanceTO update(final ConnInstanceTO connInstanceTO) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONNECTOR_DELETE + \"')\")\n-    public ConnInstanceTO delete(final Long connInstanceKey) {\n-        ConnInstance connInstance = connInstanceDAO.find(connInstanceKey);\n+    public ConnInstanceTO delete(final Long key) {\n+        ConnInstance connInstance = connInstanceDAO.find(key);\n         if (connInstance == null) {\n-            throw new NotFoundException(\"Connector '\" + connInstanceKey + \"'\");\n+            throw new NotFoundException(\"Connector '\" + key + \"'\");\n         }\n \n         if (!connInstance.getResources().isEmpty()) {\n@@ -123,11 +123,9 @@ public ConnInstanceTO delete(final Long connInstanceKey) {\n             throw associatedResources;\n         }\n \n-        ConnInstanceTO connToDelete = binder.getConnInstanceTO(connInstance);\n-\n-        connInstanceDAO.delete(connInstanceKey);\n-\n-        return connToDelete;\n+        ConnInstanceTO deleted = binder.getConnInstanceTO(connInstance);\n+        connInstanceDAO.delete(key);\n+        return deleted;\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONNECTOR_LIST + \"')\")\n@@ -157,12 +155,12 @@ public ConnInstanceTO transform(final ConnInstance connInstance) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONNECTOR_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public ConnInstanceTO read(final Long connInstanceKey, final String lang) {\n+    public ConnInstanceTO read(final Long key, final String lang) {\n         CurrentLocale.set(StringUtils.isBlank(lang) ? Locale.ENGLISH : new Locale(lang));\n \n-        ConnInstance connInstance = connInstanceDAO.find(connInstanceKey);\n+        ConnInstance connInstance = connInstanceDAO.find(key);\n         if (connInstance == null) {\n-            throw new NotFoundException(\"Connector '\" + connInstanceKey + \"'\");\n+            throw new NotFoundException(\"Connector '\" + key + \"'\");\n         }\n \n         return binder.getConnInstanceTO(connInstance);"},{"sha":"c9822a5c49fb3ca9169433f7af0f1116b55dad35","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/RealmLogic.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0016d10c90659102986d9eb0405c56d6f1ee32f9/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0016d10c90659102986d9eb0405c56d6f1ee32f9/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java?ref=0016d10c90659102986d9eb0405c56d6f1ee32f9","patch":"@@ -20,14 +20,23 @@\n \n import java.lang.reflect.Method;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n+import java.util.Set;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n+import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n+import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.provisioning.api.data.RealmDataBinder;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -40,6 +49,9 @@ public class RealmLogic extends AbstractTransactionalLogic<RealmTO> {\n     @Autowired\n     private RealmDAO realmDAO;\n \n+    @Autowired\n+    private AnySearchDAO searchDAO;\n+\n     @Autowired\n     private RealmDataBinder binder;\n \n@@ -90,6 +102,22 @@ public RealmTO delete(final String fullPath) {\n             throw new NotFoundException(fullPath);\n         }\n \n+        Set<String> adminRealms = Collections.singleton(realm.getFullPath());\n+        AnyCond idCond = new AnyCond(AttributeCond.Type.ISNOTNULL);\n+        idCond.setSchema(\"id\");\n+        SearchCond allMatchingCond = SearchCond.getLeafCond(idCond);\n+        int users = searchDAO.count(adminRealms, allMatchingCond, AnyTypeKind.USER);\n+        int groups = searchDAO.count(adminRealms, allMatchingCond, AnyTypeKind.GROUP);\n+        int anyObjects = searchDAO.count(adminRealms, allMatchingCond, AnyTypeKind.ANY_OBJECT);\n+\n+        if (users + groups + anyObjects > 0) {\n+            SyncopeClientException containedAnys = SyncopeClientException.build(ClientExceptionType.AssociatedAnys);\n+            containedAnys.getElements().add(users + \" user(s)\");\n+            containedAnys.getElements().add(groups + \" group(s)\");\n+            containedAnys.getElements().add(anyObjects + \" anyObject(s)\");\n+            throw containedAnys;\n+        }\n+\n         RealmTO deleted = binder.getRealmTO(realm);\n         realmDAO.delete(realm);\n         return deleted;"},{"sha":"4d3360f51d95eca3f62cb872b6cdead6ada3f79f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RealmITCase.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0016d10c90659102986d9eb0405c56d6f1ee32f9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0016d10c90659102986d9eb0405c56d6f1ee32f9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRealmITCase.java?ref=0016d10c90659102986d9eb0405c56d6f1ee32f9","patch":"@@ -185,4 +185,15 @@ public void delete() {\n             assertEquals(ClientExceptionType.NotFound, e.getType());\n         }\n     }\n+\n+    @Test\n+    public void deleteNonEmpty() {\n+        try {\n+            realmService.delete(\"/even/two\");\n+            fail();\n+        } catch (SyncopeClientException e) {\n+            assertEquals(ClientExceptionType.AssociatedAnys, e.getType());\n+            assertEquals(3, e.getElements().size());\n+        }\n+    }\n }"}]}