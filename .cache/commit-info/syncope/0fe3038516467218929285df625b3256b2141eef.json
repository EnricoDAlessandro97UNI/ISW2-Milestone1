{"sha":"0fe3038516467218929285df625b3256b2141eef","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBmZTMwMzg1MTY0NjcyMTg5MjkyODVkZjYyNWIzMjU2YjIxNDFlZWY=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-01-23T15:18:45Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-01-23T15:18:45Z"},"message":"SYNCOPE-279 fixed\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1437457 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"592bfb92c20cd64da4b323204ce3b774624bea5b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/592bfb92c20cd64da4b323204ce3b774624bea5b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0fe3038516467218929285df625b3256b2141eef","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0fe3038516467218929285df625b3256b2141eef","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0fe3038516467218929285df625b3256b2141eef","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0fe3038516467218929285df625b3256b2141eef/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"e9c71cffb187674ce25425454dd143dd8c2fcb19","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9c71cffb187674ce25425454dd143dd8c2fcb19","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e9c71cffb187674ce25425454dd143dd8c2fcb19"}],"stats":{"total":173,"additions":107,"deletions":66},"files":[{"sha":"9a17ba05ecbc75adf85e0d3edd33ec5871104f0b","filename":"common/src/main/java/org/apache/syncope/common/to/ConnInstanceTO.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConnInstanceTO.java?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -24,16 +24,14 @@\n import java.util.HashSet;\r\n import java.util.Map;\r\n import java.util.Set;\r\n-\r\n import javax.xml.bind.annotation.XmlElement;\r\n import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n-\r\n-import org.codehaus.jackson.annotate.JsonIgnore;\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n import org.apache.syncope.common.types.ConnConfProperty;\r\n import org.apache.syncope.common.types.ConnectorCapability;\r\n+import org.codehaus.jackson.annotate.JsonIgnore;\r\n \r\n @XmlRootElement(name = \"connector\")\r\n @XmlType\r\n@@ -55,6 +53,8 @@ public class ConnInstanceTO extends AbstractBaseBean {\n \r\n     private String displayName;\r\n \r\n+    private Integer connRequestTimeout;\r\n+\r\n     public ConnInstanceTO() {\r\n         super();\r\n \r\n@@ -164,4 +164,22 @@ public String getDisplayName() {\n     public void setDisplayName(String displayName) {\r\n         this.displayName = displayName;\r\n     }\r\n+\r\n+    /**\r\n+     * Get connector request timeout. It is not applied in case of sync, full reconciliation and search.\r\n+     *\r\n+     * @return timeout.\r\n+     */\r\n+    public Integer getConnRequestTimeout() {\r\n+        return connRequestTimeout;\r\n+    }\r\n+\r\n+    /**\r\n+     * Set connector request timeout. It is not applied in case of sync, full reconciliation and search.\r\n+     *\r\n+     * @param timeout.\r\n+     */\r\n+    public void setConnRequestTimeout(Integer connRequestTimeout) {\r\n+        this.connRequestTimeout = connRequestTimeout;\r\n+    }\r\n }\r"},{"sha":"b5de82983e943f5b0bf65087618d96baf43d3ecb","filename":"console/src/main/java/org/apache/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":18,"deletions":5,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -26,7 +26,6 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.lang.ArrayUtils;\n import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.to.ConnBundleTO;\n import org.apache.syncope.common.to.ConnInstanceTO;\n@@ -107,6 +106,7 @@ public ConnectorModalPage(final PageReference callerPageRef, final ModalWindow w\n                 : connectorTO.getCapabilities());\n \n         final IModel<List<ConnectorCapability>> capabilities = new LoadableDetachableModel<List<ConnectorCapability>>() {\n+\n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n@@ -164,8 +164,14 @@ protected List<ConnectorCapability> load() {\n         version.addRequiredLabel();\n         version.getField().setOutputMarkupId(true);\n \n+        final AjaxTextFieldPanel connRequestTimeout = new AjaxTextFieldPanel(\n+                \"connRequestTimeout\",\n+                \"connRequestTimeout\",\n+                new PropertyModel<String>(connectorTO, \"connRequestTimeout\"));\n+\n         final ListView<ConnConfProperty> view = new ListView<ConnConfProperty>(\n                 \"connectorProperties\", new PropertyModel<List<ConnConfProperty>>(this, \"properties\")) {\n+\n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n@@ -250,7 +256,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n \n                 final AjaxCheckBoxPanel overridable = new AjaxCheckBoxPanel(\"connPropAttrOverridable\",\n                         \"connPropAttrOverridable\", new PropertyModel<Boolean>(property, \"overridable\"));\n-                \n+\n                 item.add(overridable);\n                 connectorTO.addConfiguration(property);\n             }\n@@ -259,6 +265,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n         view.setOutputMarkupId(true);\n \n         bundleName.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n@@ -279,6 +286,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         });\n \n         version.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n@@ -296,6 +304,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         });\n \n         final AjaxLink<String> check = new IndicatingAjaxLink<String>(\"check\", new ResourceModel(\"check\")) {\n+\n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n@@ -314,6 +323,7 @@ public void onClick(final AjaxRequestTarget target) {\n         };\n \n         final AjaxButton submit = new IndicatingAjaxButton(\"apply\", new Model<String>(getString(\"submit\"))) {\n+\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n@@ -333,7 +343,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     if (connectorTO.getId() == 0) {\n                         restClient.create(conn);\n                     } else {\n-                            restClient.update(conn);\n+                        restClient.update(conn);\n                     }\n \n                     ((Resources) callerPageRef.getPage()).setModalResult(true);\n@@ -354,6 +364,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         };\n \n         final IndicatingAjaxButton cancel = new IndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\")) {\n+\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n@@ -374,7 +385,8 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n         MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, roles);\n \n-        capabilitiesPalette = new CheckBoxMultipleChoice<ConnectorCapability>(\"capabilitiesPalette\", new PropertyModel<List<ConnectorCapability>>(this,\n+        capabilitiesPalette = new CheckBoxMultipleChoice<ConnectorCapability>(\"capabilitiesPalette\",\n+                new PropertyModel<List<ConnectorCapability>>(this,\n                 \"selectedCapabilities\"), capabilities);\n \n         final Form<ConnInstanceTO> connectorForm = new Form<ConnInstanceTO>(\"form\");\n@@ -396,6 +408,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         connectorForm.add(bundleName);\n         connectorForm.add(displayName);\n         connectorForm.add(version);\n+        connectorForm.add(connRequestTimeout);\n         connectorForm.add(capabilitiesPalette);\n         connectorForm.add(submit);\n         connectorForm.add(cancel);\n@@ -433,7 +446,7 @@ private List<ConnConfProperty> fillProperties(final ConnBundleTO bundleTO, final\n                 propertyTO.setSchema(key);\n                 if (connTO.getId() != 0 && connTO.getConfigurationMap().containsKey(key.getName())) {\n                     propertyTO.setValues(connTO.getConfigurationMap().get(key.getName()).getValues());\n-                    propertyTO.setOverridable(connTO.getConfigurationMap().get(key.getName()).isOverridable());              \n+                    propertyTO.setOverridable(connTO.getConfigurationMap().get(key.getName()).isOverridable());\n                 }\n                 props.add(propertyTO);\n             }"},{"sha":"2f50adfb77c1e0a5a1af8665e4ab61599d7f86c0","filename":"console/src/main/resources/org/apache/syncope/console/pages/ConnectorModalPage.html","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -67,6 +67,14 @@\n               <span wicket:id=\"version\">[version]</span>\n             </div>\n           </div>\n+          <div class=\"tablerow\">\n+            <div class=\"tablecolumn_label short_dynamicsize\">\n+              <label for=\"connRequestTimeout\"><wicket:message key=\"connRequestTimeout\"/></label>\n+            </div>\n+            <div class=\"tablecolumn_field short_dynamicsize\">\n+              <span wicket:id=\"connRequestTimeout\">[connRequestTimeout]</span>\n+            </div>\n+          </div>\n         </div>\n         <!-- inside the container in order to re-process javascript -->\n         <script type=\"text/javascript\">"},{"sha":"54596a81a5b4500feef1d6c5b30bf887fb196e3a","filename":"console/src/main/resources/org/apache/syncope/console/pages/ConnectorModalPage.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.properties?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -20,6 +20,7 @@ tab3=Capabilities\n displayName=Display name\n bundleName=Bundle name\n version=Version\n+connRequestTimeout=Request timeout (in seconds)\n action=Action\n edit=Edit\n edit_attribute=Edit attribute"},{"sha":"3b43e5cf829019b0a1092eb6d45ea2293b8896ef","filename":"console/src/main/resources/org/apache/syncope/console/pages/ConnectorModalPage_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage_it.properties?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -19,6 +19,7 @@ tab2=Configurazione\n tab3=Capabilities\n bundleName=Bundle name\n version=Versione\n+connRequestTimeout=Timeout richiesta (in secondi)\n action=Azione\n edit=Edit\n edit_attribute=Edit attribute"},{"sha":"734b1efeee4dd02f8b00938bdf98061e273fa12b","filename":"core/src/main/java/org/apache/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -20,7 +20,6 @@\n \n import java.util.Locale;\n import java.util.Set;\n-\n import org.apache.commons.lang.SerializationUtils;\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.core.persistence.beans.ConnInstance;"},{"sha":"cc6763c4c7eb61dd38d6ac89f908cff057230fb1","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ConnInstance.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -23,7 +23,6 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-\n import javax.persistence.CascadeType;\n import javax.persistence.Column;\n import javax.persistence.ElementCollection;\n@@ -34,7 +33,6 @@\n import javax.persistence.Id;\n import javax.persistence.Lob;\n import javax.persistence.OneToMany;\n-\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.ConnectorCapability;\n import org.apache.syncope.core.util.XMLSerializer;\n@@ -44,6 +42,8 @@ public class ConnInstance extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -2294708794497208872L;\n \n+    private static final int DEFAULT_TIMEOUT = 10;\n+\n     @Id\n     private Long id;\n \n@@ -88,9 +88,16 @@ public class ConnInstance extends AbstractBaseBean {\n     /**\n      * External resources associated to the connector.\n      */\n-    @OneToMany(cascade = { CascadeType.ALL }, mappedBy = \"connector\")\n+    @OneToMany(cascade = {CascadeType.ALL}, mappedBy = \"connector\")\n     private List<ExternalResource> resources;\n \n+    /**\n+     * Connector request timeout. It is not applied in case of sync, full reconciliation and search.\n+     * DEFAULT_TIMEOUT is the default value to be used in case of unspecified timeout.\n+     */\n+    @Column\n+    private Integer connRequestTimeout = DEFAULT_TIMEOUT;\n+\n     public ConnInstance() {\n         super();\n         capabilities = new HashSet<ConnectorCapability>();\n@@ -182,4 +189,15 @@ public void setCapabilities(final Set<ConnectorCapability> capabilities) {\n             this.capabilities.addAll(capabilities);\n         }\n     }\n+\n+    public Integer getConnRequestTimeout() {\n+        // DEFAULT_TIMEOUT will be returned in case of null timeout:\n+        // * instances created by the content loader \n+        // * or with a timeout nullified explicitely\n+        return connRequestTimeout == null ? DEFAULT_TIMEOUT : connRequestTimeout;\n+    }\n+\n+    public void setConnRequestTimeout(Integer connRequestTimeout) {\n+        this.connRequestTimeout = connRequestTimeout;\n+    }\n }"},{"sha":"f2d562153868c4b0aa8962355ed4c50b6b2eef3b","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/ConnectorFacadeProxy.java","status":"modified","additions":10,"deletions":25,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -33,7 +33,6 @@\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n-import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.MissingConfKeyException;\n import org.apache.syncope.core.propagation.SyncopeConnector;\n import org.apache.syncope.core.propagation.TimeoutException;\n@@ -89,23 +88,9 @@ public class ConnectorFacadeProxy implements SyncopeConnector {\n      */\n     private final ConnInstance activeConnInstance;\n \n-    private int timeout;\n-\n     @Autowired\n     private AsyncConnectorFacade asyncFacade;\n \n-    @Autowired\n-    private ConfDAO confDAO;\n-\n-    @Autowired\n-    private void setTimeout() {\n-        try {\n-            timeout = Integer.parseInt(confDAO.find(\"connectorRequest.timeout\", \"60\").getValue());\n-        } catch (Throwable t) {\n-            timeout = 60;\n-        }\n-    }\n-\n     /**\n      * Use the passed connector instance to build a ConnectorFacade that will be used to make all wrapped calls.\n      *\n@@ -198,7 +183,7 @@ public Uid create(final PropagationMode propagationMode, final ObjectClass objec\n \n             final Future<Uid> future = asyncFacade.create(connector, objectClass, attrs, options);\n             try {\n-                result = future.get(timeout, TimeUnit.SECONDS);\n+                result = future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n             } catch (java.util.concurrent.TimeoutException e) {\n                 future.cancel(true);\n                 throw new TimeoutException(\"Request timeout\");\n@@ -236,7 +221,7 @@ public Uid update(final PropagationMode propagationMode, final ObjectClass objec\n             final Future<Uid> future = asyncFacade.update(connector, objectClass, uid, attrs, options);\n \n             try {\n-                result = future.get(timeout, TimeUnit.SECONDS);\n+                result = future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n             } catch (java.util.concurrent.TimeoutException e) {\n                 future.cancel(true);\n                 throw new TimeoutException(\"Request timeout\");\n@@ -273,7 +258,7 @@ public void delete(final PropagationMode propagationMode, final ObjectClass obje\n             final Future<Uid> future = asyncFacade.delete(connector, objectClass, uid, options);\n \n             try {\n-                future.get(timeout, TimeUnit.SECONDS);\n+                future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n             } catch (java.util.concurrent.TimeoutException e) {\n                 future.cancel(true);\n                 throw new TimeoutException(\"Request timeout\");\n@@ -317,7 +302,7 @@ public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n             final Future<SyncToken> future = asyncFacade.getLatestSyncToken(connector, objectClass);\n \n             try {\n-                result = future.get(timeout, TimeUnit.SECONDS);\n+                result = future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n             } catch (java.util.concurrent.TimeoutException e) {\n                 future.cancel(true);\n                 throw new TimeoutException(\"Request timeout\");\n@@ -389,7 +374,7 @@ public ConnectorObject getObject(final PropagationMode propagationMode, final Re\n         }\n \n         try {\n-            return future == null ? null : future.get(timeout, TimeUnit.SECONDS);\n+            return future == null ? null : future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n             future.cancel(true);\n             throw new TimeoutException(\"Request timeout\");\n@@ -454,7 +439,7 @@ public Attribute getObjectAttribute(final ObjectClass objectClass, final Uid uid\n         final Future<Attribute> future = asyncFacade.getObjectAttribute(connector, objectClass, uid, options,\n                 attributeName);\n         try {\n-            return future.get(timeout, TimeUnit.SECONDS);\n+            return future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n             future.cancel(true);\n             throw new TimeoutException(\"Request timeout\");\n@@ -476,7 +461,7 @@ public Set<Attribute> getObjectAttributes(final ObjectClass objectClass, final U\n             final OperationOptions options) {\n         final Future<Set<Attribute>> future = asyncFacade.getObjectAttributes(connector, objectClass, uid, options);\n         try {\n-            return future.get(timeout, TimeUnit.SECONDS);\n+            return future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n             future.cancel(true);\n             throw new TimeoutException(\"Request timeout\");\n@@ -497,7 +482,7 @@ public Set<Attribute> getObjectAttributes(final ObjectClass objectClass, final U\n     public Set<String> getSchema(final boolean showall) {\n         final Future<Set<String>> future = asyncFacade.getSchema(connector, showall);\n         try {\n-            return future.get(timeout, TimeUnit.SECONDS);\n+            return future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n             future.cancel(true);\n             throw new TimeoutException(\"Request timeout\");\n@@ -518,7 +503,7 @@ public Set<String> getSchema(final boolean showall) {\n     public void validate() {\n         final Future<String> future = asyncFacade.test(connector);\n         try {\n-            future.get(timeout, TimeUnit.SECONDS);\n+            future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n             future.cancel(true);\n             throw new TimeoutException(\"Request timeout\");\n@@ -539,7 +524,7 @@ public void validate() {\n     public void test() {\n         final Future<String> future = asyncFacade.test(connector);\n         try {\n-            future.get(timeout, TimeUnit.SECONDS);\n+            future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n         } catch (java.util.concurrent.TimeoutException e) {\n             future.cancel(true);\n             throw new TimeoutException(\"Request timeout\");"},{"sha":"2eb9ea9683d43027b1f114fe130745a4adf921df","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ConnInstanceDataBinder.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -124,6 +124,10 @@ public ConnInstance updateConnInstance(final long connInstanceId, final ConnInst\n         if (connInstanceTO.getDisplayName() != null) {\n             connInstance.setDisplayName(connInstanceTO.getDisplayName());\n         }\n+        \n+        if (connInstanceTO.getConnRequestTimeout() != null) {\n+            connInstance.setConnRequestTimeout(connInstanceTO.getConnRequestTimeout());\n+        }\n \n         connInstance.setCapabilities(connInstanceTO.getCapabilities());\n "},{"sha":"054d90e7375a3a3f9cee35cdc63adaa05b244253","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -85,7 +85,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.core.context.SecurityContextHolder;\n \n public class SyncopeSyncResultHandler implements SyncResultsHandler {\n \n@@ -247,7 +246,6 @@ public Map<Long, String> getRoleOwnerMap() {\n     @Override\n     public boolean handle(final SyncDelta delta) {\n         try {\n-            LOG.error(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAA in handle {}\", SecurityContextHolder.getContext().getAuthentication());\n             results.addAll(doHandle(delta));\n             return true;\n         } catch (JobExecutionException e) {\n@@ -545,7 +543,8 @@ protected List<SyncResult> create(SyncDelta delta, final AttributableUtil attrUt\n     }\n \n     protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, final AttributableUtil attrUtil,\n-            final boolean dryRun) throws JobExecutionException {\n+            final boolean dryRun)\n+            throws JobExecutionException {\n \n         if (!syncTask.isPerformUpdate()) {\n             LOG.debug(\"SyncTask not configured for update\");\n@@ -636,7 +635,8 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n     }\n \n     protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, final AttributableUtil attrUtil,\n-            final boolean dryRun) throws JobExecutionException {\n+            final boolean dryRun)\n+            throws JobExecutionException {\n \n         if (!syncTask.isPerformDelete()) {\n             LOG.debug(\"SyncTask not configured for delete\");\n@@ -714,7 +714,8 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n      * @return list of synchronization results\n      * @throws JobExecutionException in case of synchronization failure.\n      */\n-    protected final List<SyncResult> doHandle(final SyncDelta delta) throws JobExecutionException {\n+    protected final List<SyncResult> doHandle(final SyncDelta delta)\n+            throws JobExecutionException {\n         final List<SyncResult> results = new ArrayList<SyncResult>();\n \n         LOG.debug(\"Process {} for {} as {}\","},{"sha":"f89a0cdbfa60e467ac8ed3c7348a384c2835aefc","filename":"core/src/main/resources/content.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -30,7 +30,6 @@ under the License.\n   <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n   <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n   <SyncopeConf confKey=\"createRequest.allowed\" confValue=\"true\"/>\n-  <SyncopeConf confKey=\"connectorRequest.timeout\" confValue=\"10\"/>\n     \n   <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"Global Sync Policy\" type=\"GLOBAL_SYNC\"\n           specification=\"%3Corg.apache.syncope.common.types.SyncPolicySpec%2F%3E\"/>"},{"sha":"32f914712e57a47b704ea0afb080dbab80e1e992","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/ConnInstanceTest.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -18,17 +18,12 @@\n  */\n package org.apache.syncope.core.persistence.dao;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.*;\n \n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-\n import org.apache.syncope.common.types.ConnConfPropSchema;\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n@@ -79,6 +74,8 @@ public void save() throws ClassNotFoundException {\n \n         connectorInstance.setDisplayName(\"New\");\n \n+        connectorInstance.setConnRequestTimeout(60);\n+\n         // set the connector configuration using PropertyTO\n         Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n \n@@ -121,6 +118,8 @@ public void save() throws ClassNotFoundException {\n \n         assertEquals(\"New\", actual.getDisplayName());\n \n+        assertEquals(new Integer(60), actual.getConnRequestTimeout());\n+\n         conf = connectorInstance.getConfiguration();\n         assertFalse(conf.isEmpty());\n "},{"sha":"599b73bedcc4cd44be4d8f7b08383d378c61d9e4","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/ConnInstanceTest.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FConnInstanceTest.java?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -18,14 +18,9 @@\n  */\n package org.apache.syncope.core.persistence.relationships;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.*;\n \n import java.util.List;\n-\n import org.apache.syncope.common.types.ConnectorCapability;\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n import org.apache.syncope.core.persistence.beans.ExternalResource;"},{"sha":"957527e6ebacec2548f4c72894192f7fe3829d27","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -18,11 +18,7 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.*;\n \n import java.io.IOException;\n import java.io.InputStream;\n@@ -32,9 +28,7 @@\n import java.util.Map;\n import java.util.Properties;\n import java.util.Set;\n-\n import javax.ws.rs.core.Response;\n-\n import org.apache.syncope.common.to.ConnBundleTO;\n import org.apache.syncope.common.to.ConnInstanceTO;\n import org.apache.syncope.common.to.MappingItemTO;\n@@ -64,7 +58,8 @@ public class ConnInstanceTestITCase extends AbstractTest {\n     private static String bundlesDirectory;\n \n     @BeforeClass\n-    public static void init() throws IOException {\n+    public static void init()\n+            throws IOException {\n         Properties props = new Properties();\n         InputStream propStream = null;\n         try {\n@@ -106,6 +101,8 @@ public void create() {\n \n         connectorTO.setDisplayName(\"Display name\");\n \n+        connectorTO.setConnRequestTimeout(15);\n+\n         // set the connector configuration using PropertyTO\n         Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n \n@@ -146,6 +143,7 @@ public void create() {\n         assertEquals(actual.getConnectorName(), connectorTO.getConnectorName());\n         assertEquals(actual.getVersion(), connectorTO.getVersion());\n         assertEquals(\"Display name\", actual.getDisplayName());\n+        assertEquals(new Integer(15), actual.getConnRequestTimeout());\n         assertEquals(connectorTO.getCapabilities(), actual.getCapabilities());\n \n         Throwable t = null;\n@@ -200,6 +198,8 @@ public void update() {\n \n         // set bundle name\n         connectorTO.setBundleName(\"org.connid.bundles.soap\");\n+        \n+        connectorTO.setConnRequestTimeout(20);\n \n         // set the connector configuration using PropertyTO\n         Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n@@ -237,6 +237,7 @@ public void update() {\n         assertEquals(actual.getBundleName(), connectorTO.getBundleName());\n         assertEquals(actual.getConnectorName(), connectorTO.getConnectorName());\n         assertEquals(actual.getVersion(), connectorTO.getVersion());\n+        assertEquals(new Integer(20), actual.getConnRequestTimeout());\n     }\n \n     @Test\n@@ -565,8 +566,7 @@ public void issueSYNCOPE112() {\n         keyColumnSchema.setRequired(true);\n         ConnConfProperty servicename = new ConnConfProperty();\n         servicename.setSchema(keyColumnSchema);\n-        servicename\n-                .setValues(Collections.singletonList(\"org.connid.bundles.soap.provisioning.interfaces.Provisioning\"));\n+        servicename.setValues(Collections.singletonList(\"org.connid.bundles.soap.provisioning.interfaces.Provisioning\"));\n         servicename.setOverridable(false);\n \n         conf.add(endpoint);"},{"sha":"8539ccf0939b8044b862061a0dab77bf7759136e","filename":"core/src/test/resources/content.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0fe3038516467218929285df625b3256b2141eef/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=0fe3038516467218929285df625b3256b2141eef","patch":"@@ -30,7 +30,6 @@ under the License.\n   <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n   <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n   <SyncopeConf confKey=\"createRequest.allowed\" confValue=\"true\"/>\n-  <SyncopeConf confKey=\"connectorRequest.timeout\" confValue=\"10\"/>\n \n   <!-- sample policies -->\n   <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"sync policy 1\" type=\"GLOBAL_SYNC\" specification=\"%3Corg.apache.syncope.common.types.SyncPolicySpec%2F%3E\"/>\n@@ -275,6 +274,7 @@ under the License.\n                 bundleName=\"org.connid.bundles.soap\"\n                 connectorName=\"org.connid.bundles.soap.WebServiceConnector\"\n                 version=\"${connid.soap.version}\"\n+                connRequestTimeout=\"10\"\n                 xmlConfiguration=\"%3Cset%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eservicename%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eorg.connid.bundles.soap.provisioning.interfaces.Provisioning%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.common.types.ConnConfProperty%3E%0A++%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Eendpoint%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Ehttp%3A//localhost%3A9080/wssample/services/provisioning%3C/java.lang.String%3E%0A%3C/values%3E%0A++++%3Coverridable%3Etrue%3C/overridable%3E%0A++%3C/org.apache.syncope.common.types.ConnConfProperty%3E%0A%3C/set%3E\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"102\" capabilities=\"ONE_PHASE_CREATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"102\" capabilities=\"ONE_PHASE_UPDATE\"/>"}]}