{"sha":"29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI5YWE3NWQzYTcwZjRiNGEwN2NjMDMzYzI1OTVjMmI1ZGQ2NTRlNmY=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-18T16:29:22Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-18T16:29:22Z"},"message":"Now using spring's BeanUtils for ubiquitous beans' equals() and hashCode()\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246214 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6c644194f9265c9b470e9f494cc5223e9ba10d53","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6c644194f9265c9b470e9f494cc5223e9ba10d53"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/comments","author":null,"committer":null,"parents":[{"sha":"6c0e323f3a744bb969f9f59ff1b5c744c5169031","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6c0e323f3a744bb969f9f59ff1b5c744c5169031","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6c0e323f3a744bb969f9f59ff1b5c744c5169031"}],"stats":{"total":432,"additions":39,"deletions":393},"files":[{"sha":"073a725fe941d90427320ce6fe22bf73dc9e5745","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractBaseBean.java","status":"modified","additions":34,"deletions":1,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -16,17 +16,50 @@\n  */\n package org.syncope.core.persistence.beans;\n \n+import java.beans.PropertyDescriptor;\n import java.io.Serializable;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.apache.commons.lang.builder.EqualsBuilder;\n+import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.commons.lang.builder.ReflectionToStringBuilder;\n import org.apache.commons.lang.builder.ToStringStyle;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n \n-public class AbstractBaseBean implements Serializable {\n+public abstract class AbstractBaseBean implements Serializable {\n \n     protected static final Logger log = LoggerFactory.getLogger(\n             AbstractBaseBean.class);\n \n+    protected String[] getExcludeFields() {\n+        Set<String> excludeFields = new HashSet<String>();\n+\n+        PropertyDescriptor[] propertyDescriptors =\n+                BeanUtils.getPropertyDescriptors(getClass());\n+        for (int i = 0; i < propertyDescriptors.length; i++) {\n+\n+            if (propertyDescriptors[i].getPropertyType().isInstance(\n+                    Collections.EMPTY_SET)) {\n+                excludeFields.add(propertyDescriptors[i].getName());\n+            }\n+        }\n+\n+        return excludeFields.toArray(new String[]{});\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        return EqualsBuilder.reflectionEquals(this, obj, getExcludeFields());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return HashCodeBuilder.reflectionHashCode(this, getExcludeFields());\n+    }\n+\n     @Override\n     public String toString() {\n         return ReflectionToStringBuilder.toString(this,"},{"sha":"0c932dd9ccf5af589c4d4145d1e966255f308e33","filename":"core/src/main/java/org/syncope/core/persistence/beans/Attribute.java","status":"modified","additions":0,"deletions":33,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttribute.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -95,37 +95,4 @@ public void removeValue(Object value)\n             values.clear();\n         }\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final Attribute other = (Attribute) obj;\n-        if (this.id != other.id\n-                && (this.id == null || !this.id.equals(other.id))) {\n-\n-            return false;\n-        }\n-        if (this.schema != other.schema\n-                && (this.schema == null\n-                || !this.schema.equals(other.schema))) {\n-\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 5;\n-        hash = 53 * hash + (this.id != null ? this.id.hashCode() : 0);\n-        hash = 53 * hash + (this.schema != null ? this.schema.hashCode() : 0);\n-\n-        return hash;\n-    }\n }"},{"sha":"1d0424f8e1084ca0144d7a501e3312a948d86e20","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeSchema.java","status":"modified","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -215,67 +215,4 @@ public <T extends Format> T getFormatter(Class<T> reference) {\n \n         return result;\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final AttributeSchema other = (AttributeSchema) obj;\n-        if ((this.name == null) ? (other.name != null)\n-                : !this.name.equals(other.name)) {\n-\n-            return false;\n-        }\n-        if (this.type != other.type\n-                && (this.type == null || !this.type.equals(other.type))) {\n-\n-            return false;\n-        }\n-        if (this.mandatory != other.mandatory\n-                && (this.mandatory == null\n-                || !this.mandatory.equals(other.mandatory))) {\n-\n-            return false;\n-        }\n-        if (this.multivalue != other.multivalue\n-                && (this.multivalue == null\n-                || !this.multivalue.equals(other.multivalue))) {\n-\n-            return false;\n-        }\n-        if ((this.conversionPattern == null)\n-                ? (other.conversionPattern != null)\n-                : !this.conversionPattern.equals(other.conversionPattern)) {\n-\n-            return false;\n-        }\n-        if ((this.validatorClass == null)\n-                ? (other.validatorClass != null)\n-                : !this.validatorClass.equals(other.validatorClass)) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 67 * hash + (this.name != null ? this.name.hashCode() : 0);\n-        hash = 67 * hash + (this.type != null ? this.type.hashCode() : 0);\n-        hash = 67 * hash + (this.mandatory != null\n-                ? this.mandatory.hashCode() : 0);\n-        hash = 67 * hash + (this.multivalue != null\n-                ? this.multivalue.hashCode() : 0);\n-        hash = 67 * hash + (this.conversionPattern != null\n-                ? this.conversionPattern.hashCode() : 0);\n-        hash = 67 * hash + (this.validatorClass != null\n-                ? this.validatorClass.hashCode() : 0);\n-\n-        return hash;\n-    }\n }"},{"sha":"c4d59d778ca91b02867b7fa7b762d6f65305c9e5","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeValue.java","status":"modified","additions":0,"deletions":72,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeValue.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -77,76 +77,4 @@ public <T> T getValue() {\n                 ? doubleValue : (longValue != null\n                 ? longValue : stringValue))));\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final AttributeValue other = (AttributeValue) obj;\n-        if (this.id != other.id\n-                && (this.id == null || !this.id.equals(other.id))) {\n-\n-            return false;\n-        }\n-        if ((this.stringValue == null)\n-                ? (other.stringValue != null)\n-                : !this.stringValue.equals(other.stringValue)) {\n-\n-            return false;\n-        }\n-        if (this.dateValue != other.dateValue\n-                && (this.dateValue == null\n-                || !this.dateValue.equals(other.dateValue))) {\n-            return false;\n-        }\n-        if (this.booleanValue != other.booleanValue\n-                && (this.booleanValue == null\n-                || !this.booleanValue.equals(other.booleanValue))) {\n-\n-            return false;\n-        }\n-        if (this.longValue != other.longValue\n-                && (this.longValue == null\n-                || !this.longValue.equals(other.longValue))) {\n-\n-            return false;\n-        }\n-        if (this.doubleValue != other.doubleValue\n-                && (this.doubleValue == null\n-                || !this.doubleValue.equals(other.doubleValue))) {\n-\n-            return false;\n-        }\n-        if (this.attribute != other.attribute\n-                && (this.attribute == null\n-                || !this.attribute.equals(other.attribute))) {\n-\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 41 * hash + (this.id != null ? this.id.hashCode() : 0);\n-        hash = 41 * hash + (this.stringValue != null\n-                ? this.stringValue.hashCode() : 0);\n-        hash = 41 * hash + (this.dateValue != null\n-                ? this.dateValue.hashCode() : 0);\n-        hash = 41 * hash + (this.booleanValue != null\n-                ? this.booleanValue.hashCode() : 0);\n-        hash = 41 * hash + (this.longValue != null\n-                ? this.longValue.hashCode() : 0);\n-        hash = 41 * hash + (this.doubleValue != null\n-                ? this.doubleValue.hashCode() : 0);\n-        hash = 41 * hash + (this.attribute != null\n-                ? this.attribute.hashCode() : 0);\n-        return hash;\n-    }\n }"},{"sha":"13ea1f522979eb05b518820c53d8369d4397e6a3","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnectorInstance.java","status":"modified","additions":1,"deletions":31,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnectorInstance.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -39,15 +39,13 @@ public class ConnectorInstance extends AbstractBaseBean {\n      */\n     @Column(nullable = false)\n     private String bundleName;\n-\n     /**\n      * ConnectorBundle-Version: The version of the bundle. Within a given\n      * deployment, the pair (ConnectorBundle-Name, ConnectorBundle-Version)\n      * must be unique.\n      */\n     @Column(nullable = false)\n     private String version;\n-\n     /**\n      * The main configuration for the connector instance.\n      * This is directly implemented by the Configuration bean class which\n@@ -88,36 +86,8 @@ public String getXmlConfiguration() {\n     public void setXmlConfiguration(String xmlConfiguration) {\n         this.xmlConfiguration = xmlConfiguration;\n     }\n+\n     public Long getId() {\n         return id;\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) return false;\n-        if (getClass() != obj.getClass()) return false;\n-        final ConnectorInstance other = (ConnectorInstance) obj;\n-        if (this.id != other.id && (this.id == null || !this.id.equals(other.id)))\n-            return false;\n-        if ((this.connectorName == null) ? (other.connectorName != null) : !this.connectorName.equals(other.connectorName))\n-            return false;\n-        if ((this.bundleName == null) ? (other.bundleName != null) : !this.bundleName.equals(other.bundleName))\n-            return false;\n-        if ((this.version == null) ? (other.version != null) : !this.version.equals(other.version))\n-            return false;\n-        if ((this.xmlConfiguration == null) ? (other.xmlConfiguration != null) : !this.xmlConfiguration.equals(other.xmlConfiguration))\n-            return false;\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 3;\n-        hash = 79 * hash + (this.id != null ? this.id.hashCode() : 0);\n-        hash = 79 * hash + (this.connectorName != null ? this.connectorName.hashCode() : 0);\n-        hash = 79 * hash + (this.bundleName != null ? this.bundleName.hashCode() : 0);\n-        hash = 79 * hash + (this.version != null ? this.version.hashCode() : 0);\n-        hash = 79 * hash + (this.xmlConfiguration != null ? this.xmlConfiguration.hashCode() : 0);\n-        return hash;\n-    }\n }"},{"sha":"421d420c329b9efc7cf677d460172e204093f8e8","filename":"core/src/main/java/org/syncope/core/persistence/beans/DerivedAttribute.java","status":"modified","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -86,38 +86,4 @@ public DerivedAttributeSchema getSchema() {\n     public void setSchema(DerivedAttributeSchema attributeSchema) {\n         this.schema = attributeSchema;\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final DerivedAttribute other = (DerivedAttribute) obj;\n-        if (this.id != other.id\n-                && (this.id == null || !this.id.equals(other.id))) {\n-\n-            return false;\n-        }\n-        if (this.schema != other.schema\n-                && (this.schema == null\n-                || !this.schema.equals(other.schema))) {\n-\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 59 * hash + (this.id != null ? this.id.hashCode() : 0);\n-        hash = 59 * hash + (this.schema != null\n-                ? this.schema.hashCode() : 0);\n-\n-        return hash;\n-    }\n }"},{"sha":"3f93d2bed790732c1998e1fc096a2b6ffa1ecdc4","filename":"core/src/main/java/org/syncope/core/persistence/beans/DerivedAttributeSchema.java","status":"modified","additions":0,"deletions":36,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -75,40 +75,4 @@ public Set<AttributeSchema> getAttributeSchemas() {\n     public void setAttributeSchemas(Set<AttributeSchema> attributeSchemas) {\n         this.attributeSchemas = attributeSchemas;\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final DerivedAttributeSchema other =\n-                (DerivedAttributeSchema) obj;\n-\n-        if ((this.name == null)\n-                ? (other.name != null) : !this.name.equals(other.name)) {\n-\n-            return false;\n-        }\n-        if ((this.expression == null)\n-                ? (other.expression != null)\n-                : !this.expression.equals(other.expression)) {\n-\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 3;\n-        hash = 79 * hash + (this.name != null ? this.name.hashCode() : 0);\n-        hash = 79 * hash + (this.expression != null\n-                ? this.expression.hashCode() : 0);\n-\n-        return hash;\n-    }\n }"},{"sha":"bc7551186f8d6f2f106cb1ce90c32a82aef63fa8","filename":"core/src/main/java/org/syncope/core/persistence/beans/Entitlement.java","status":"modified","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FEntitlement.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -56,36 +56,4 @@ public Set<SyncopeRole> getRoles() {\n     public void setRoles(Set<SyncopeRole> roles) {\n         this.roles = roles;\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final Entitlement other = (Entitlement) obj;\n-        if ((this.name == null)\n-                ? (other.name != null) : !this.name.equals(other.name)) {\n-\n-            return false;\n-        }\n-        if ((this.description == null)\n-                ? (other.description != null)\n-                : !this.description.equals(other.description)) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 79 * hash + (this.name != null ? this.name.hashCode() : 0);\n-        hash = 79 * hash + (this.description != null\n-                ? this.description.hashCode() : 0);\n-        return hash;\n-    }\n }"},{"sha":"e17240993b27af821345d223986b92f71bbeab0c","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncopeRole.java","status":"modified","additions":0,"deletions":26,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeRole.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -71,30 +71,4 @@ public Set<SyncopeUser> getUsers() {\n     public void setUsers(Set<SyncopeUser> users) {\n         this.users = users;\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final SyncopeRole other = (SyncopeRole) obj;\n-        if (this.syncopeRolePK != other.syncopeRolePK\n-                && (this.syncopeRolePK == null\n-                || !this.syncopeRolePK.equals(other.syncopeRolePK))) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 41 * hash + (this.syncopeRolePK != null\n-                ? this.syncopeRolePK.hashCode() : 0);\n-        return hash;\n-    }\n }"},{"sha":"cb224347477de4fba226c8edb404c8a632031246","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncopeRolePK.java","status":"modified","additions":2,"deletions":32,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeRolePK.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeRolePK.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeRolePK.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -39,7 +39,7 @@ public String getName() {\n         return name;\n     }\n \n-    public void setName(String name) throws IllegalArgumentException {\n+    public final void setName(String name) throws IllegalArgumentException {\n         if (ROOT_ROLE.equals(name)) {\n             throw new IllegalArgumentException(\n                     ROOT_ROLE + \" is a reserved role name\");\n@@ -52,41 +52,11 @@ public String getParent() {\n         return parent;\n     }\n \n-    public void setParent(String parent) {\n+    public final void setParent(String parent) {\n         if (parent == null || parent.length() == 0) {\n             this.parent = ROOT_ROLE;\n         } else {\n             this.parent = parent;\n         }\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final SyncopeRolePK other = (SyncopeRolePK) obj;\n-        if (this.parent != other.parent\n-                && (this.parent == null || !this.parent.equals(other.parent))) {\n-\n-            return false;\n-        }\n-        if ((this.name == null)\n-                ? (other.name != null) : !this.name.equals(other.name)) {\n-\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 89 * hash + (this.parent != null ? this.parent.hashCode() : 0);\n-        hash = 89 * hash + (this.name != null ? this.name.hashCode() : 0);\n-        return hash;\n-    }\n }"},{"sha":"67c7f8fadaa2a32c3166fe2e197d1999ff4892a4","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncopeUser.java","status":"modified","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeUser.java?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -71,31 +71,4 @@ public String getPassword() {\n     public void setPassword(String password) {\n         this.password = passwordEncryptor.encryptPassword(password);\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-\n-        final SyncopeUser other = (SyncopeUser) obj;\n-        if (this.id != other.id\n-                && (this.id == null || !this.id.equals(other.id))) {\n-\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 7;\n-        hash = 71 * hash + (this.id != null ? this.id.hashCode() : 0);\n-\n-        return hash;\n-    }\n }"},{"sha":"421ec3630d08e29f16321e6b869ecaeaa23c039b","filename":"pom.xml","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=29aa75d3a70f4b4a07cc033c2595c2b5dd654e6f","patch":"@@ -117,10 +117,6 @@\n \n         <wicket.version>1.4.7</wicket.version>\n \n-        <wicket-spring.version>1.3.7</wicket-spring.version>\n-\n-        <wicket-spring-annot.version>1.3.7</wicket-spring-annot.version>\n-\n         <log4j.version>1.2.16</log4j.version>\n \n         <slf4j.version>1.5.2</slf4j.version>\n@@ -263,13 +259,13 @@\n             <dependency>\n                 <groupId>org.apache.wicket</groupId>\n                 <artifactId>wicket-spring</artifactId>\n-                <version>${wicket-spring.version}</version>\n+                <version>${wicket.version}</version>\n             </dependency>\n \n             <dependency>\n                 <groupId>org.apache.wicket</groupId>\n                 <artifactId>wicket-spring-annot</artifactId>\n-                <version>${wicket-spring-annot.version}</version>\n+                <version>${wicket.version}</version>\n             </dependency>\n \n             <dependency>"}]}