{"sha":"2bd5980187d8dae1049454ae5a4cff31ed98e747","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJiZDU5ODAxODdkOGRhZTEwNDk0NTRhZTVhNGNmZjMxZWQ5OGU3NDc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-19T11:36:10Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-08-19T11:36:10Z"},"message":"Some small bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246437 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e60fc968b099c1dd91316844f916b97e77882870","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e60fc968b099c1dd91316844f916b97e77882870"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2bd5980187d8dae1049454ae5a4cff31ed98e747","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2bd5980187d8dae1049454ae5a4cff31ed98e747","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2bd5980187d8dae1049454ae5a4cff31ed98e747","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2bd5980187d8dae1049454ae5a4cff31ed98e747/comments","author":null,"committer":null,"parents":[{"sha":"e982a27a7f5cd6a8c264a37ba4fbe9ee293cab1c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e982a27a7f5cd6a8c264a37ba4fbe9ee293cab1c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e982a27a7f5cd6a8c264a37ba4fbe9ee293cab1c"}],"stats":{"total":36,"additions":29,"deletions":7},"files":[{"sha":"b0c2446586c57ec0935d5d29ce2c63a0ba706066","filename":"core/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=2bd5980187d8dae1049454ae5a4cff31ed98e747","patch":"@@ -436,6 +436,7 @@\n                         <home>target/tomcat6x</home>\n                         <properties>\n                             <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>\n+<!--                            <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=9009,server=y,suspend=n</cargo.jvmargs>-->\n                         </properties>\n                         <deployables>\n                             <deployable>"},{"sha":"adfc233f2cbeb0414313f40546b47833fd2b0f25","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=2bd5980187d8dae1049454ae5a4cff31ed98e747","patch":"@@ -54,6 +54,7 @@ public class Membership extends AbstractAttributable {\n     public Membership() {\n         attributes = new ArrayList<MembershipAttribute>();\n         derivedAttributes = new ArrayList<MembershipDerivedAttribute>();\n+        resources = Collections.EMPTY_SET;\n     }\n \n     public Long getId() {"},{"sha":"acd59a5d643df0d723fc1956d6e46efa33358c59","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=2bd5980187d8dae1049454ae5a4cff31ed98e747","patch":"@@ -50,7 +50,7 @@ public class SyncopeRole extends AbstractAttributable {\n     @OneToMany(cascade = CascadeType.MERGE, mappedBy = \"syncopeRole\")\n     private List<Membership> memberships;\n     @ManyToMany(fetch = FetchType.LAZY)\n-    private List<Entitlement> entitlements;\n+    private Set<Entitlement> entitlements;\n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     private List<RoleAttribute> attributes;\n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n@@ -60,7 +60,7 @@ public class SyncopeRole extends AbstractAttributable {\n \n     public SyncopeRole() {\n         memberships = new ArrayList<Membership>();\n-        entitlements = new ArrayList<Entitlement>();\n+        entitlements = new HashSet<Entitlement>();\n         attributes = new ArrayList<RoleAttribute>();\n         derivedAttributes = new ArrayList<RoleDerivedAttribute>();\n     }\n@@ -93,11 +93,11 @@ public boolean removeEntitlement(Entitlement entitlement) {\n         return entitlements.remove(entitlement);\n     }\n \n-    public List<Entitlement> getEntitlements() {\n+    public Set<Entitlement> getEntitlements() {\n         return entitlements;\n     }\n \n-    public void setEntitlements(List<Entitlement> entitlements) {\n+    public void setEntitlements(Set<Entitlement> entitlements) {\n         this.entitlements = entitlements;\n     }\n "},{"sha":"26b279003e695ac4c00d3c370ecd5c6e532f49a0","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SyncopeRoleDAOImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSyncopeRoleDAOImpl.java?ref=2bd5980187d8dae1049454ae5a4cff31ed98e747","patch":"@@ -184,7 +184,7 @@ public void delete(Long id) {\n         for (Entitlement entitlement : role.getEntitlements()) {\n             entitlement.removeRole(role);\n         }\n-        role.setEntitlements(Collections.EMPTY_LIST);\n+        role.setEntitlements(Collections.EMPTY_SET);\n \n         role.setParent(null);\n         entityManager.remove(role);"},{"sha":"9f20113482bf02bf9d6dda90a3acd243564a0ee9","filename":"core/src/main/java/org/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=2bd5980187d8dae1049454ae5a4cff31ed98e747","patch":"@@ -30,6 +30,7 @@\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n+import org.syncope.core.persistence.beans.Resource;\n import org.syncope.core.persistence.beans.membership.Membership;\n import org.syncope.core.persistence.beans.role.SyncopeRole;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -157,7 +158,21 @@ public ResourceOperations update(SyncopeUser user, UserMod userMod)\n                             + membershipToBeRemovedId);\n                 }\n             } else {\n+                for (Resource resource :\n+                        membership.getSyncopeRole().getResources()) {\n+\n+                    resourceOperations.add(ResourceOperations.Type.DELETE,\n+                            resource);\n+                }\n+\n+                // In order to make the removeMembership() below to work,\n+                // we need to be sure to take exactly the same membership\n+                // of the user object currently in memory (which has potentially\n+                // some modifications compared to the one stored in the DB\n+                membership = user.getMembership(\n+                        membership.getSyncopeRole().getId());\n                 user.removeMembership(membership);\n+\n                 membershipDAO.delete(membershipToBeRemovedId);\n             }\n         }"},{"sha":"6c212caf8e0b675500305be72880acab2b7cd8d6","filename":"core/src/test/java/org/syncope/core/test/rest/UserTestITCase.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2bd5980187d8dae1049454ae5a4cff31ed98e747/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Ftest%2Frest%2FUserTestITCase.java?ref=2bd5980187d8dae1049454ae5a4cff31ed98e747","patch":"@@ -228,21 +228,24 @@ public void search() {\n     @Test\n     public void update() {\n         UserTO userTO = getSampleTO(\"g.h@t.com\");\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRole(8L);\n+        userTO.addMembership(membershipTO);\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/create\",\n                 userTO, UserTO.class);\n         userTO = restTemplate.postForObject(BASE_URL + \"user/activate\",\n                 userTO, UserTO.class);\n \n         assertTrue(userTO.getDerivedAttributes().isEmpty());\n-        assertTrue(userTO.getMemberships().isEmpty());\n+        assertTrue(userTO.getMemberships().size() == 1);\n \n         AttributeMod attributeMod = new AttributeMod();\n         attributeMod.setSchema(\"subscriptionDate\");\n         attributeMod.addValueToBeAdded(\"2010-08-18T16:33:12.203+0200\");\n \n         MembershipMod membershipMod = new MembershipMod();\n-        membershipMod.setRole(8L);\n+        membershipMod.setRole(7L);\n         membershipMod.addAttributeToBeUpdated(attributeMod);\n \n         attributeMod = new AttributeMod();\n@@ -256,6 +259,8 @@ public void update() {\n         userMod.addAttributeToBeUpdated(attributeMod);\n         userMod.addDerivedAttributeToBeAdded(\"cn\");\n         userMod.addMembershipToBeAdded(membershipMod);\n+        userMod.addMembershipToBeRemoved(\n+                userTO.getMemberships().iterator().next().getId());\n \n         userTO = restTemplate.postForObject(BASE_URL + \"user/update\",\n                 userMod, UserTO.class);"}]}