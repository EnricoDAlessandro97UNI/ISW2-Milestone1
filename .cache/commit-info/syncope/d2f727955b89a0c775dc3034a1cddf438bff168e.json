{"sha":"d2f727955b89a0c775dc3034a1cddf438bff168e","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmQyZjcyNzk1NWI4OWEwYzc3NWRjMzAzNGExY2RkZjQzOGJmZjE2OGU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-26T15:43:40Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-26T15:43:40Z"},"message":"[SYNCOPE-251] Various fixes and improvements: now adding CXF deps doesn't generate test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1425956 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e033bfd89d59ee8b861c4629785c47c079902dc3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e033bfd89d59ee8b861c4629785c47c079902dc3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/d2f727955b89a0c775dc3034a1cddf438bff168e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d2f727955b89a0c775dc3034a1cddf438bff168e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d2f727955b89a0c775dc3034a1cddf438bff168e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d2f727955b89a0c775dc3034a1cddf438bff168e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3a9dbd096fbf46af839b3c685b20d52482e1e090","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3a9dbd096fbf46af839b3c685b20d52482e1e090","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3a9dbd096fbf46af839b3c685b20d52482e1e090"}],"stats":{"total":273,"additions":165,"deletions":108},"files":[{"sha":"4eb0bbbc2dc388980831e9dc64069f589a66d397","filename":"client/pom.xml","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/client%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/client%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fpom.xml?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -48,7 +48,7 @@ under the License.\n       <groupId>commons-lang</groupId>\n       <artifactId>commons-lang</artifactId>\n     </dependency>\n-    \n+\n     <dependency>\n       <groupId>org.springframework</groupId>\n       <artifactId>spring-webmvc</artifactId>\n@@ -59,16 +59,11 @@ under the License.\n       <artifactId>jackson-mapper-asl</artifactId>\n     </dependency>\n \n-    <dependency>\n-      <groupId>com.thoughtworks.xstream</groupId>\n-      <artifactId>xstream</artifactId>\n-    </dependency>\n-\n     <dependency>\n       <groupId>org.apache.httpcomponents</groupId>\n       <artifactId>httpclient</artifactId>\n     </dependency>\n-\n+    \n     <dependency>\n       <groupId>ch.qos.logback</groupId>\n       <artifactId>logback-core</artifactId>\n@@ -101,7 +96,6 @@ under the License.\n               org.apache.syncope*;version=${project.version};-split-package:=merge-first\n             </Export-Package>\n             <Import-Package>\n-              com.thoughtworks.xstream;version=\"[1.4,2)\",\n               org.apache.commons.lang*;version=\"[2.6,3)\",\n               org.apache.http*;version=\"[4,5)\",\n               org.codehaus.jackson.annotate;version=\"[1.9,2)\","},{"sha":"c90dcbfd4bec4ccc9ff6dd849d4d47e280fd059b","filename":"client/src/main/java/org/apache/syncope/client/validation/SyncopeClientErrorHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -23,12 +23,12 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.lang.ArrayUtils;\n+import org.apache.syncope.types.SyncopeClientExceptionType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.client.ClientHttpResponse;\n import org.springframework.web.client.DefaultResponseErrorHandler;\n-import org.apache.syncope.types.SyncopeClientExceptionType;\n \n public class SyncopeClientErrorHandler extends DefaultResponseErrorHandler {\n "},{"sha":"241f1cb332025af64b7aa1d2ecc23440628523e0","filename":"client/src/main/java/org/apache/syncope/types/AuditLoggerName.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ftypes%2FAuditLoggerName.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -19,13 +19,13 @@\n package org.apache.syncope.types;\n \n import java.text.ParseException;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.client.AbstractBaseBean;\n import org.apache.syncope.types.AuditElements.Category;\n import org.apache.syncope.types.AuditElements.Result;\n import org.codehaus.jackson.annotate.JsonCreator;\n import org.codehaus.jackson.annotate.JsonProperty;\n import org.codehaus.jackson.annotate.JsonTypeInfo;\n-import org.springframework.util.StringUtils;\n \n public class AuditLoggerName extends AbstractBaseBean {\n \n@@ -76,7 +76,7 @@ public String toLoggerName() {\n     public static AuditLoggerName fromLoggerName(final String loggerName)\n             throws IllegalArgumentException, ParseException {\n \n-        if (!StringUtils.hasText(loggerName)) {\n+        if (StringUtils.isBlank(loggerName)) {\n             throw new IllegalArgumentException(\"Null value not permitted\");\n         }\n "},{"sha":"44b52a7676b153c01a2ebaeba3e9f916d440329d","filename":"console/src/test/java/org/apache/syncope/console/ConnInstanceTestITCase.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -29,7 +29,7 @@ public class ConnInstanceTestITCase extends AbstractTest {\n     private static String connidSoapVersion;\n \n     @BeforeClass\n-    public static void init() {\n+    public static void init() throws IOException {\n         Properties props = new Properties();\n         InputStream propStream = null;\n         try {\n@@ -40,11 +40,7 @@ public static void init() {\n             LOG.error(\"Could not load bundles.properties\", e);\n         } finally {\n             if (propStream != null) {\n-                try {\n-                    propStream.close();\n-                } catch (IOException e) {\n-                    LOG.error(\"While reading bundles.properties\", e);\n-                }\n+                propStream.close();\n             }\n         }\n         assertNotNull(connidSoapVersion);"},{"sha":"7fe077cc143b82d125a77561752873338ac68458","filename":"core/pom.xml","status":"modified","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -281,32 +281,12 @@ under the License.\n       <type>war</type>\n       <scope>test</scope>\n     </dependency>\n-    <dependency>\n-      <groupId>org.connid.bundles.soap</groupId>\n-      <artifactId>org.connid.bundles.soap</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n     <dependency>\n       <groupId>org.connid.bundles.soap</groupId>\n       <artifactId>wssample</artifactId>\n       <type>war</type>\n       <scope>test</scope>\n     </dependency>\n-    <dependency>\n-      <groupId>org.connid.bundles.db</groupId>\n-      <artifactId>org.connid.bundles.db.table</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.connid.bundles</groupId>\n-      <artifactId>org.connid.bundles.csvdir</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.connid.bundles</groupId>\n-      <artifactId>org.connid.bundles.ldap</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n     <dependency>\n       <groupId>junit</groupId>\n       <artifactId>junit</artifactId>"},{"sha":"5f55c2d0dcef43177ef735bebc547bca99a22597","filename":"core/src/main/java/org/apache/syncope/core/init/SpringContextInitializer.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -22,7 +22,6 @@\n import java.io.InputStream;\n import java.util.Properties;\n import javax.servlet.ServletContext;\n-\n import org.apache.syncope.core.propagation.ConnectorFactory;\n import org.apache.syncope.core.workflow.WorkflowLoader;\n import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n@@ -66,7 +65,7 @@ public class SpringContextInitializer implements ServletContextAware, BeanFactor\n      *\n      * @throws IOException if anything goes wrong\n      */\n-    public static void initUWFAdapterClassName() throws IOException {\n+    private static void initUWFAdapterClassName() throws IOException {\n         Properties props = new java.util.Properties();\n         InputStream propStream = null;\n         try {"},{"sha":"96cd1cd200d1f91f57055c8219c80a1aa5891b1a","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ConnInstance.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -33,7 +33,7 @@\n import javax.persistence.Id;\n import javax.persistence.Lob;\n import javax.persistence.OneToMany;\n-import org.apache.syncope.client.util.XMLSerializer;\n+import org.apache.syncope.core.util.XMLSerializer;\n import org.apache.syncope.types.ConnConfProperty;\n import org.apache.syncope.types.ConnectorCapability;\n "},{"sha":"adade6d1d3bcaa5a73f3d37731d1235edbda2d35","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -36,7 +36,7 @@\n import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.commons.lang.StringUtils;\n-import org.apache.syncope.client.util.XMLSerializer;\n+import org.apache.syncope.core.util.XMLSerializer;\n import org.apache.syncope.core.persistence.beans.role.RMapping;\n import org.apache.syncope.core.persistence.beans.user.UMapping;\n import org.apache.syncope.core.persistence.validation.entity.ExternalResourceCheck;"},{"sha":"7ecceb3709427c6cb9daf4d778f48df6816dd121","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/Notification.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -35,7 +35,7 @@\n import javax.validation.constraints.Min;\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.client.search.NodeCond;\n-import org.apache.syncope.client.util.XMLSerializer;\n+import org.apache.syncope.core.util.XMLSerializer;\n import org.apache.syncope.core.persistence.validation.entity.NotificationCheck;\n import org.apache.syncope.types.IntMappingType;\n import org.apache.syncope.types.TraceLevel;"},{"sha":"68524d2dd00f7df91e37bac70bb19b4cdac419a5","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/Policy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -24,7 +24,7 @@\n import javax.persistence.Id;\n import javax.persistence.Lob;\n import javax.validation.constraints.NotNull;\n-import org.apache.syncope.client.util.XMLSerializer;\n+import org.apache.syncope.core.util.XMLSerializer;\n import org.apache.syncope.core.persistence.validation.entity.PolicyCheck;\n import org.apache.syncope.types.AbstractPolicySpec;\n import org.apache.syncope.types.PolicyType;"},{"sha":"de010b1c31731a7006f6c567312c7a4a09032f2b","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/PropagationTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -24,7 +24,7 @@\n import javax.persistence.Enumerated;\n import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n-import org.apache.syncope.client.util.XMLSerializer;\n+import org.apache.syncope.core.util.XMLSerializer;\n import org.apache.syncope.core.persistence.validation.entity.PropagationTaskCheck;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.PropagationMode;"},{"sha":"b48b23de8d1dffbec92bc9554fd5155ebde64c8f","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/ReportletConfInstance.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReportletConfInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReportletConfInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReportletConfInstance.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -23,7 +23,7 @@\n import javax.persistence.Lob;\n import javax.persistence.ManyToOne;\n import org.apache.syncope.client.report.ReportletConf;\n-import org.apache.syncope.client.util.XMLSerializer;\n+import org.apache.syncope.core.util.XMLSerializer;\n \n @Entity\n public class ReportletConfInstance extends AbstractBaseBean {"},{"sha":"f6ca7c7ef978d96dfc6c512691ee98945c0ea5b0","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/SyncTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -26,7 +26,7 @@\n import javax.validation.constraints.Min;\n import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.UserTO;\n-import org.apache.syncope.client.util.XMLSerializer;\n+import org.apache.syncope.core.util.XMLSerializer;\n import org.apache.syncope.core.persistence.validation.entity.SyncTaskCheck;\n \n @Entity"},{"sha":"e383b5ec64d53b1fbc8027aca59a9445cc437f40","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/UserRequest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FUserRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FUserRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FUserRequest.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -28,7 +28,7 @@\n import javax.validation.constraints.NotNull;\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.to.UserTO;\n-import org.apache.syncope.client.util.XMLSerializer;\n+import org.apache.syncope.core.util.XMLSerializer;\n import org.apache.syncope.types.UserRequestType;\n \n @Entity"},{"sha":"0201ce5a65e562ffc2d147051d21a6a22873932a","filename":"core/src/main/java/org/apache/syncope/core/propagation/ConnectorFacadeProxy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -184,7 +184,7 @@ public Uid create(final PropagationMode propagationMode, final ObjectClass objec\n \n             result = connector.create(objectClass, attrs, options);\n         } else {\n-            LOG.info(\"Create was attempted, although the \" + \"connector only has these capabilities: {}. No action.\",\n+            LOG.info(\"Create was attempted, although the connector only has these capabilities: {}. No action.\",\n                     activeConnInstance.getCapabilities());\n         }\n "},{"sha":"f88776dc4b089bbf5fe04c1b68eab4ce814fa24c","filename":"core/src/main/java/org/apache/syncope/core/util/ConnBundleManager.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnBundleManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnBundleManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnBundleManager.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -88,13 +88,13 @@ public ConfigurationProperties getConfigurationProperties(final String bundleNam\n \n         //Create key for search all properties\n         final ConnectorKey key = new ConnectorKey(bundleName, version, connectorName);\n-\n         if (key == null) {\n             throw new NotFoundException(\"Connector Key\");\n         }\n \n         if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"\\nBundle name: \" + key.getBundleName() + \"\\nBundle version: \" + key.getBundleVersion()\n+            LOG.debug(\"\\nBundle name: \" + key.getBundleName()\n+                    + \"\\nBundle version: \" + key.getBundleVersion()\n                     + \"\\nBundle class: \" + key.getConnectorName());\n         }\n \n@@ -132,8 +132,8 @@ public ConfigurationProperties getConfigurationProperties(final ConnectorInfo in\n         // Print out what the properties are (not necessary)\n         if (LOG.isDebugEnabled()) {\n             for (String propName : properties.getPropertyNames()) {\n-                LOG.debug(\"\\nProperty Name: \" + properties.getProperty(propName).getName() + \"\\nProperty Type: \"\n-                        + properties.getProperty(propName).getType());\n+                LOG.debug(\"\\nProperty Name: \" + properties.getProperty(propName).getName()\n+                        + \"\\nProperty Type: \" + properties.getProperty(propName).getType());\n             }\n         }\n "},{"sha":"37d03e40aaa5459aa474dbc4406f7fb97656a9c7","filename":"core/src/main/java/org/apache/syncope/core/util/GuardedStringConverter.java","status":"added","additions":126,"deletions":0,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FGuardedStringConverter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FGuardedStringConverter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FGuardedStringConverter.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.util;\n+\n+import com.thoughtworks.xstream.converters.Converter;\n+import com.thoughtworks.xstream.converters.MarshallingContext;\n+import com.thoughtworks.xstream.converters.UnmarshallingContext;\n+import com.thoughtworks.xstream.io.HierarchicalStreamReader;\n+import com.thoughtworks.xstream.io.HierarchicalStreamWriter;\n+import java.lang.reflect.Field;\n+import org.identityconnectors.common.Base64;\n+import org.identityconnectors.common.security.EncryptorFactory;\n+import org.identityconnectors.common.security.GuardedString;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Help in XStream serialization of GuardedString by (de)serializing instances using the default Encryptor (which works\n+ * consistently across class loading) instead of a random Encryptor instance.\n+ *\n+ * @see XMLSerializer\n+ * @see GuardedString\n+ */\n+public class GuardedStringConverter implements Converter {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GuardedStringConverter.class);\n+\n+    @Override\n+    public void marshal(final Object source, final HierarchicalStreamWriter writer, final MarshallingContext context) {\n+        boolean readOnly = false;\n+        try {\n+            Field readOnlyField = GuardedString.class.getDeclaredField(\"_readOnly\");\n+            readOnlyField.setAccessible(true);\n+            readOnly = readOnlyField.getBoolean(source);\n+        } catch (Exception e) {\n+            LOG.error(\"Could not get field value\", e);\n+        }\n+        writer.startNode(\"readonly\");\n+        writer.setValue(Boolean.toString(readOnly));\n+        writer.endNode();\n+\n+        boolean disposed = false;\n+        try {\n+            Field disposedField = GuardedString.class.getDeclaredField(\"_disposed\");\n+            disposedField.setAccessible(true);\n+            disposed = disposedField.getBoolean(source);\n+        } catch (Exception e) {\n+            LOG.error(\"Could not get field value\", e);\n+        }\n+        writer.startNode(\"disposed\");\n+        writer.setValue(Boolean.toString(disposed));\n+        writer.endNode();\n+\n+        writer.startNode(\"encryptedBytes\");\n+        final StringBuilder cleartext = new StringBuilder();\n+        ((GuardedString) source).access(new GuardedString.Accessor() {\n+\n+            @Override\n+            public void access(final char[] clearChars) {\n+                cleartext.append(clearChars);\n+            }\n+        });\n+        final byte[] encryptedBytes =\n+                EncryptorFactory.getInstance().getDefaultEncryptor().encrypt(cleartext.toString().getBytes());\n+        writer.setValue(Base64.encode(encryptedBytes));\n+        writer.endNode();\n+    }\n+\n+    @Override\n+    public Object unmarshal(final HierarchicalStreamReader reader, final UnmarshallingContext context) {\n+        reader.moveDown();\n+        final boolean readOnly = Boolean.valueOf(reader.getValue());\n+        reader.moveUp();\n+\n+        reader.moveDown();\n+        final boolean disposed = Boolean.valueOf(reader.getValue());\n+        reader.moveUp();\n+\n+        reader.moveDown();\n+        final byte[] encryptedBytes = Base64.decode(reader.getValue());\n+        reader.moveUp();\n+\n+        final byte[] clearBytes = EncryptorFactory.getInstance().getDefaultEncryptor().decrypt(encryptedBytes);\n+\n+        GuardedString dest = new GuardedString(new String(clearBytes).toCharArray());\n+\n+        try {\n+            Field readOnlyField = GuardedString.class.getDeclaredField(\"_readOnly\");\n+            readOnlyField.setAccessible(true);\n+            readOnlyField.setBoolean(dest, readOnly);\n+        } catch (Exception e) {\n+            LOG.error(\"Could not set field value to {}\", readOnly, e);\n+        }\n+\n+        try {\n+            Field readOnlyField = GuardedString.class.getDeclaredField(\"_disposed\");\n+            readOnlyField.setAccessible(true);\n+            readOnlyField.setBoolean(dest, disposed);\n+        } catch (Exception e) {\n+            LOG.error(\"Could not set field value to {}\", disposed, e);\n+        }\n+\n+        return dest;\n+    }\n+\n+    @Override\n+    public boolean canConvert(final Class type) {\n+        return type.equals(GuardedString.class);\n+    }\n+}"},{"sha":"ec64dd62a4013f6fa320b59bfd9ab171443babbb","filename":"core/src/main/java/org/apache/syncope/core/util/XMLSerializer.java","status":"renamed","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FXMLSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FXMLSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FXMLSerializer.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.util;\n+package org.apache.syncope.core.util;\n \n import com.thoughtworks.xstream.XStream;\n import java.io.UnsupportedEncodingException;\n@@ -38,6 +38,7 @@ public static String serialize(final Object object) {\n         String result = null;\n \n         XStream xstream = new XStream();\n+        xstream.registerConverter(new GuardedStringConverter());\n         try {\n             result = URLEncoder.encode(xstream.toXML(object), \"UTF-8\");\n         } catch (UnsupportedEncodingException e) {\n@@ -52,6 +53,7 @@ public static <T extends Object> T deserialize(final String serialized) {\n         T result = null;\n \n         XStream xstream = new XStream();\n+        xstream.registerConverter(new GuardedStringConverter());\n         try {\n             result = (T) xstream.fromXML(URLDecoder.decode(serialized, \"UTF-8\"));\n         } catch (UnsupportedEncodingException e) {","previous_filename":"client/src/main/java/org/apache/syncope/client/util/XMLSerializer.java"},{"sha":"d00d7260bd7759eda7dcb53553d35050974fdd6d","filename":"core/src/test/java/org/apache/syncope/core/AbstractTest.java","status":"modified","additions":1,"deletions":34,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2FAbstractTest.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -22,10 +22,6 @@\n \n import java.io.InputStream;\n import java.io.IOException;\n-import java.sql.Connection;\n-import java.sql.ResultSet;\n-import java.sql.SQLException;\n-import java.sql.Statement;\n import java.util.Properties;\n import org.junit.BeforeClass;\n import org.junit.runner.RunWith;\n@@ -48,38 +44,9 @@ public abstract class AbstractTest {\n \n     protected static String bundlesDirectory;\n \n-    private void logTableContent(final Connection conn, final String tableName) throws SQLException {\n-\n-        LOG.debug(\"Table: \" + tableName);\n-\n-        Statement stmt = null;\n-        ResultSet rs = null;\n-        try {\n-            stmt = conn.createStatement();\n-            rs = stmt.executeQuery(\"SELECT * FROM \" + tableName);\n-\n-            final StringBuilder row = new StringBuilder();\n-            while (rs.next()) {\n-                for (int i = 0; i < rs.getMetaData().getColumnCount(); i++) {\n-                    row.append(rs.getMetaData().getColumnLabel(i + 1)).append(\"=\").append(rs.getString(i + 1)).append(\n-                            \" \");\n-                }\n-\n-                LOG.debug(row.toString());\n-\n-                row.delete(0, row.length());\n-            }\n-        } catch (SQLException sqle) {\n-            LOG.error(\"While dumping \" + tableName + \"content\", sqle);\n-        } finally {\n-            rs.close();\n-            stmt.close();\n-        }\n-    }\n-\n     @BeforeClass\n     public static void setUpIdentityConnectorsBundles() throws IOException {\n-        Properties props = new java.util.Properties();\n+        Properties props = new Properties();\n         InputStream propStream = null;\n         try {\n             propStream = AbstractTest.class.getResourceAsStream(\"/bundles.properties\");"},{"sha":"359425e445ba31f57eb0d5901eb0fb24b0c91e40","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/ConnInstanceTest.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceTest.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -28,7 +28,6 @@\n import org.apache.syncope.core.persistence.beans.ConnInstance;\n import org.apache.syncope.types.ConnConfPropSchema;\n import org.apache.syncope.types.ConnConfProperty;\n-import org.connid.bundles.soap.WebServiceConnector;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n@@ -52,8 +51,8 @@ public void findById() {\n \n         assertNotNull(\"findById did not work\", connectorInstance);\n \n-        assertEquals(\"invalid connector name\", WebServiceConnector.class.getName(), connectorInstance\n-                .getConnectorName());\n+        assertEquals(\"invalid connector name\",\n+                \"org.connid.bundles.soap.WebServiceConnector\", connectorInstance.getConnectorName());\n \n         assertEquals(\"invalid bundle name\", \"org.connid.bundles.soap\", connectorInstance.getBundleName());\n "},{"sha":"98170b601ba91cb49b73ef7176ae90a572992cdc","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -31,7 +31,6 @@\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.IntMappingType;\n-import org.connid.bundles.soap.WebServiceConnector;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n@@ -49,7 +48,8 @@ public void findById() {\n \n         ConnInstance connector = resource.getConnector();\n         assertNotNull(\"connector not found\", connector);\n-        assertEquals(\"invalid connector name\", WebServiceConnector.class.getName(), connector.getConnectorName());\n+        assertEquals(\"invalid connector name\",\n+                \"org.connid.bundles.soap.WebServiceConnector\", connector.getConnectorName());\n         assertEquals(\"invalid bundle name\", \"org.connid.bundles.soap\", connector.getBundleName());\n         assertEquals(\"invalid bundle version\", connidSoapVersion, connector.getVersion());\n "},{"sha":"85c3b6bcf7cb182dcbb7ebc4e856ca2f3d90b1d0","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -29,8 +29,6 @@\n import java.util.Map;\n import java.util.Properties;\n import java.util.Set;\n-import org.connid.bundles.db.table.DatabaseTableConnector;\n-import org.connid.bundles.soap.WebServiceConnector;\n import org.identityconnectors.common.security.GuardedString;\n import org.junit.BeforeClass;\n import org.junit.Test;\n@@ -59,7 +57,7 @@ public class ConnInstanceTestITCase extends AbstractTest {\n     private static String bundlesDirectory;\n \n     @BeforeClass\n-    public static void init() {\n+    public static void init() throws IOException {\n         Properties props = new Properties();\n         InputStream propStream = null;\n         try {\n@@ -72,11 +70,7 @@ public static void init() {\n             LOG.error(\"Could not load bundles.properties\", e);\n         } finally {\n             if (propStream != null) {\n-                try {\n-                    propStream.close();\n-                } catch (IOException e) {\n-                    LOG.error(\"While reading bundles.properties\", e);\n-                }\n+                propStream.close();\n             }\n         }\n         assertNotNull(connidSoapVersion);\n@@ -98,7 +92,7 @@ public void create() {\n         connectorTO.setVersion(connidSoapVersion);\n \n         // set connector name\n-        connectorTO.setConnectorName(WebServiceConnector.class.getName());\n+        connectorTO.setConnectorName(\"org.connid.bundles.soap.WebServiceConnector\");\n \n         // set bundle name\n         connectorTO.setBundleName(\"org.connid.bundles.soap\");\n@@ -198,7 +192,7 @@ public void update() {\n         connectorTO.setVersion(connidSoapVersion);\n \n         // set connector name\n-        connectorTO.setConnectorName(WebServiceConnector.class.getName());\n+        connectorTO.setConnectorName(\"org.connid.bundles.soap.WebServiceConnector\");\n \n         // set bundle name\n         connectorTO.setBundleName(\"org.connid.bundles.soap\");\n@@ -427,7 +421,7 @@ public void check() {\n         connectorTO.setVersion(connidDbTableVersion);\n \n         // set connector name\n-        connectorTO.setConnectorName(DatabaseTableConnector.class.getName());\n+        connectorTO.setConnectorName(\"org.connid.bundles.db.table.DatabaseTableConnector\");\n \n         // set bundle name\n         connectorTO.setBundleName(\"org.connid.bundles.db.table\");\n@@ -555,7 +549,7 @@ public void issueSYNCOPE112() {\n         connectorTO.setVersion(connidSoapVersion);\n \n         // set connector name\n-        connectorTO.setConnectorName(WebServiceConnector.class.getName());\n+        connectorTO.setConnectorName(\"org.connid.bundles.soap.WebServiceConnector\");\n \n         // set bundle name\n         connectorTO.setBundleName(\"org.connid.bundles.soap\");"},{"sha":"a12520d76ec3cf3d74b1b018be1f95061fb15051","filename":"core/src/test/resources/content.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -602,11 +602,11 @@ under the License.\n               \n   <Task DTYPE=\"PropagationTask\" id=\"1\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" subjectType=\"USER\" subjectId=\"1\"\n-        xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n+        xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++++++++%3Cdisposed%3Efalse%3C%2Fdisposed%3E%0A++++++++++%3CencryptedBytes%3Em9nh2US0Sa6m%2BcXccCq0Xw%3D%3D%3C%2FencryptedBytes%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n   <TaskExec id=\"1\" task_id=\"1\" status=\"SUCCESS\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"2\" propagationMode=\"ONE_PHASE\" propagationOperation=\"CREATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" subjectType=\"USER\" subjectId=\"1\"\n-        xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n+        xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++++++++%3Cdisposed%3Efalse%3C%2Fdisposed%3E%0A++++++++++%3CencryptedBytes%3Em9nh2US0Sa6m%2BcXccCq0Xw%3D%3D%3C%2FencryptedBytes%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"3\" propagationMode=\"TWO_PHASES\" propagationOperation=\"DELETE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" subjectType=\"USER\" subjectId=\"1\"\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n@@ -616,7 +616,7 @@ under the License.\n   <Task DTYPE=\"SchedTask\" id=\"5\" name=\"SampleJob Task\" jobClassName=\"org.apache.syncope.core.quartz.SampleJob\" cronExpression=\"0 0 0 1 * ?\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"6\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-nopropagation\" subjectType=\"USER\" subjectId=\"1\"\n-        xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E%0A\"/>\n+        xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++++++++%3Cdisposed%3Efalse%3C%2Fdisposed%3E%0A++++++++++%3CencryptedBytes%3Em9nh2US0Sa6m%2BcXccCq0Xw%3D%3D%3C%2FencryptedBytes%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n   <Task DTYPE=\"SyncTask\" id=\"7\" name=\"TestDB Task\" resource_name=\"resource-testdb\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n         jobClassName=\"org.apache.syncope.core.sync.SyncJob\"/>"},{"sha":"5c783ffde54196e7bfbeb68f2c3d5ae7adcc428f","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/d2f727955b89a0c775dc3034a1cddf438bff168e/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/d2f727955b89a0c775dc3034a1cddf438bff168e/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=d2f727955b89a0c775dc3034a1cddf438bff168e","patch":"@@ -258,7 +258,7 @@ under the License.\n     <jstl.version>1.2</jstl.version>\n         \n     <connid.version>1.3.2</connid.version>\n-    <connid.soap.version>1.2.3</connid.soap.version>\n+    <connid.soap.version>1.2.4</connid.soap.version>\n     <connid.db.table.version>2.1.4</connid.db.table.version>\n     <connid.csvdir.version>0.5</connid.csvdir.version>\n     <connid.ldap.version>1.3.4</connid.ldap.version>"}]}