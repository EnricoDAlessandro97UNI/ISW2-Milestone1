{"sha":"cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","node_id":"C_kwDOJfYA1toAKGNmNDAzNGI4YTNjZTllNzM0MzU4ZjJkZGQ4YTk1MmZiODYxZTUzZDM","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2022-03-07T10:36:21Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-03-07T10:36:21Z"},"message":"Upgrading CAS to 6.5.x; moving wa-reference as https (#315)","tree":{"sha":"99bea09d4072eaf9f4bdae3c0892596b863b0e2d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/99bea09d4072eaf9f4bdae3c0892596b863b0e2d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiJeAlCRBK7hj4Ov3rIwAAJUUIAE5eLUeX30cokM+6pkPGnQ1J\nonzPDBi3YWoADdJN3+dA++SUewB9ysGHGyCqnfRszD8kofQLjZLP9IXRo4Oi55ef\nyTedUCyb6GvgKWAOD3fQrF+SMzQ49hcWlwg83nD43AN+pCOkk6lcm9hDSTAJNeed\nANHD7mMaRqDEjsoy2nb4Z6bIHDfpHBKZIhY6FbfiawzD6YDHJ3dSlohc+aH+i9lr\nDkQWsGNkbP89aqb631SOxmZvlL2hKSkeab40i7qTFFBVArlBx+APOOHrV39ta2B/\nzQUrLSg8p8hr80YwKLmd8oeb6Fj6ISRAzfM6Pp5quWpGBRZKMhSCR5NKp1pYCOU=\n=2VzS\n-----END PGP SIGNATURE-----\n","payload":"tree 99bea09d4072eaf9f4bdae3c0892596b863b0e2d\nparent 9f43ac26aadf9b81624ad02a008b0896e7135943\nauthor Misagh Moayyed <mm1844@gmail.com> 1646649381 +0400\ncommitter GitHub <noreply@github.com> 1646649381 +0100\n\nUpgrading CAS to 6.5.x; moving wa-reference as https (#315)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"9f43ac26aadf9b81624ad02a008b0896e7135943","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9f43ac26aadf9b81624ad02a008b0896e7135943","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9f43ac26aadf9b81624ad02a008b0896e7135943"}],"stats":{"total":562,"additions":294,"deletions":268},"files":[{"sha":"4f3a3cd9d6e59330c725da3fab64cbd0fa0e2fb0","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/ClientAppLogic.java","status":"modified","additions":11,"deletions":6,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -29,6 +29,8 @@\n import java.util.stream.Stream;\n import javax.ws.rs.InternalServerErrorException;\n import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.MediaType;\n+\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.transport.http.auth.DefaultBasicAuthSupplier;\n@@ -262,13 +264,16 @@ protected ClientAppTO resolveReference(final Method method, final Object... args\n     public void pushToWA() {\n         try {\n             NetworkService wa = serviceOps.get(NetworkService.Type.WA);\n+            String basicAuthHeader = DefaultBasicAuthSupplier.getBasicAuthHeader(\n+                securityProperties.getAnonymousUser(), securityProperties.getAnonymousKey());\n+            URI endpoint = URI.create(StringUtils.appendIfMissing(wa.getAddress(), \"/\")\n+                                      + \"actuator/registeredServices\");\n             HttpClient.newBuilder().build().send(\n-                    HttpRequest.newBuilder(URI.create(\n-                            StringUtils.appendIfMissing(wa.getAddress(), \"/\") + \"actuator/registeredServices\")).\n-                            header(HttpHeaders.AUTHORIZATION, DefaultBasicAuthSupplier.getBasicAuthHeader(\n-                                    securityProperties.getAnonymousUser(), securityProperties.getAnonymousKey())).\n-                            GET().build(),\n-                    HttpResponse.BodyHandlers.discarding());\n+                HttpRequest.newBuilder(endpoint).\n+                    header(HttpHeaders.AUTHORIZATION, basicAuthHeader).\n+                    header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON).\n+                    GET().build(),\n+                HttpResponse.BodyHandlers.discarding());\n         } catch (KeymasterException e) {\n             throw new NotFoundException(\"Could not find any WA instance\", e);\n         } catch (IOException | InterruptedException e) {"},{"sha":"31f115ac24aed14e81779438abc9f46314fde869","filename":"core/persistence-jpa-json/src/test/resources/domains/MasterContent.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -70,9 +70,9 @@ under the License.\n   <AuthModule id=\"DefaultDuoMfaAuthModule\"\n               description=\"Duo Mfa auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.DuoMfaAuthModuleConf\",\"integrationKey\":\"DIOXVRZD2UMZ8XXMNFQ5\",\"secretKey\":\"Q2IU2i8BFNd6VYflZT8Evl6lF7oPlj3PM15BmRU7\", \"applicationKey\":\"u1IHBaREMB7Cb5S4QMISAgHycpj8lPBkDGfWt23I\", \"apiHost\":\"theapi.duosecurity.com\"}'/>\n   <AuthModule id=\"DefaultOIDCAuthModule\"\n-              description=\"OIDC auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.OIDCAuthModuleConf\",\"discoveryUri\":\"https://accounts.google.com/.well-known/openid-configuration\", \"id\":\"client-id\", \"secret\": \"client-secret\" }'/>\n+              description=\"OIDC auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.OIDCAuthModuleConf\",\"discoveryUri\":\"https://localhost:9443/syncope-wa/oidc/.well-known/openid-configuration\", \"id\":\"client-id\", \"secret\": \"client-secret\" }'/>\n   <AuthModule id=\"DefaultSAML2IdPAuthModule\"\n-              description=\"SAML2 IdP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.SAML2IdPAuthModuleConf\",\"keystorePassword\":\"p@$$word\",\"privateKeyPassword\":\"p@$$word\",\"identityProviderMetadataPath\":\"classpath:/idp-metadata.xml\", \"serviceProviderEntityId\":\"syncope:apache:org\"}'/>\n+              description=\"SAML2 IdP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.SAML2IdPAuthModuleConf\",\"keystorePassword\":\"p@$$word\",\"privateKeyPassword\":\"p@$$word\",\"identityProviderMetadataPath\":\"https://localhost:9443/syncope-wa/idp/metadata\", \"serviceProviderEntityId\":\"syncope:apache:org\"}'/>\n   <AuthModule id=\"DefaultJaasAuthModule\"\n               description=\"Jaas auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.JaasAuthModuleConf\",\"realm\":\"SYNCOPE\",\"kerberosRealmSystemProperty\":\"sample-value\", \"loginConfigType\": \"JavaLoginConfig\", \"loginConfigurationFile\": \"file:/etc/jaas/login.conf\"}'/>\n   <AuthModule id=\"DefaultStaticAuthModule\""},{"sha":"f6e453a566cb26cadb38324e775eb26cdaf38133","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -70,9 +70,9 @@ under the License.\n   <AuthModule id=\"DefaultDuoMfaAuthModule\"\n               description=\"Duo Mfa auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.DuoMfaAuthModuleConf\",\"integrationKey\":\"DIOXVRZD2UMZ8XXMNFQ5\",\"secretKey\":\"Q2IU2i8BFNd6VYflZT8Evl6lF7oPlj3PM15BmRU7\", \"applicationKey\":\"u1IHBaREMB7Cb5S4QMISAgHycpj8lPBkDGfWt23I\", \"apiHost\":\"theapi.duosecurity.com\"}'/>\n   <AuthModule id=\"DefaultOIDCAuthModule\"\n-              description=\"OIDC auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.OIDCAuthModuleConf\",\"discoveryUri\":\"https://accounts.google.com/.well-known/openid-configuration\", \"id\":\"client-id\", \"secret\": \"client-secret\" }'/>\n+              description=\"OIDC auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.OIDCAuthModuleConf\",\"discoveryUri\":\"https://localhost:9443/syncope-wa/oidc/.well-known/openid-configuration\", \"id\":\"client-id\", \"secret\": \"client-secret\" }'/>\n   <AuthModule id=\"DefaultSAML2IdPAuthModule\"\n-              description=\"SAML2 IdP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.SAML2IdPAuthModuleConf\",\"keystorePassword\":\"p@$$word\",\"privateKeyPassword\":\"p@$$word\",\"identityProviderMetadataPath\":\"http://localhost:9080/syncope-wa/idp/metadata\", \"serviceProviderEntityId\":\"syncope:apache:org\"}'/>\n+              description=\"SAML2 IdP auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.SAML2IdPAuthModuleConf\",\"keystorePassword\":\"p@$$word\",\"privateKeyPassword\":\"p@$$word\",\"identityProviderMetadataPath\":\"https://localhost:9443/syncope-wa/idp/metadata\", \"serviceProviderEntityId\":\"syncope:apache:org\"}'/>\n   <AuthModule id=\"DefaultJaasAuthModule\"\n               description=\"Jaas auth module\" jsonConf='{\"_class\":\"org.apache.syncope.common.lib.auth.JaasAuthModuleConf\",\"realm\":\"SYNCOPE\",\"kerberosRealmSystemProperty\":\"sample-value\", \"loginConfigType\": \"JavaLoginConfig\", \"loginConfigurationFile\": \"file:/etc/jaas/login.conf\"}'/>\n   <AuthModule id=\"DefaultStaticAuthModule\""},{"sha":"e4c90bfbbe67bfc1cd06d35306880de7adbec736","filename":"fit/console-reference/src/main/resources/console-https.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole-https.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole-https.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole-https.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+keymaster.address=https://localhost:9443/syncope/rest/keymaster\n+\n+service.discovery.address=https://localhost:9443/syncope-console/"},{"sha":"17e9799df1e2812b745c5c0dcba530cf38ddcc5f","filename":"fit/core-reference/src/main/resources/core-https.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-https.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-https.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcore-https.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+keymaster.address=https://localhost:9443/syncope/rest/keymaster\n+\n+service.discovery.address=https://localhost:9443/syncope/rest/"},{"sha":"36dcb0560cce812e3c96e1fdcb30f8fe5ff81861","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserSelfITCase.java","status":"modified","additions":4,"deletions":15,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserSelfITCase.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -57,7 +57,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.PatchOperation;\n-import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.beans.UserRequestQuery;\n import org.apache.syncope.common.rest.api.service.AccessTokenService;\n import org.apache.syncope.common.rest.api.service.UserRequestService;\n@@ -341,26 +340,18 @@ public void passwordReset() {\n         }\n         anonClient.getService(UserSelfService.class).requestPasswordReset(user.getUsername(), \"Rossi\");\n \n-        // SYNCOPE-1293:get users with token not null before requesting password reset\n         if (ElasticsearchDetector.isElasticSearchEnabled(adminClient.platform())) {\n             try {\n                 Thread.sleep(2000);\n             } catch (InterruptedException ex) {\n                 // ignore\n             }\n         }\n-        await().atMost(MAX_WAIT_SECONDS, TimeUnit.SECONDS).pollInterval(1, TimeUnit.SECONDS).until(() -> {\n-            try {\n-                PagedResult<UserTO> tokenized = userService.search(new AnyQuery.Builder().fiql(\"token!=$null\").build());\n-                return tokenized.getResult().stream().anyMatch(u -> user.getUsername().equals(u.getUsername()));\n-            } catch (Exception e) {\n-                return false;\n-            }\n-        });\n \n         // 4. get token (normally sent via e-mail, now reading as admin)\n-        String token = userService.read(read.getKey()).getToken();\n-        assertNotNull(token);\n+        String token = await().atMost(MAX_WAIT_SECONDS, TimeUnit.SECONDS).pollInterval(1, TimeUnit.SECONDS).until(\n+                () -> userService.read(read.getKey()).getToken(),\n+                StringUtils::isNotBlank);\n \n         // 5. confirm password reset\n         try {\n@@ -374,9 +365,7 @@ public void passwordReset() {\n \n         // 6. verify that password was reset and token removed\n         authClient = clientFactory.create(user.getUsername(), \"newPassword123\");\n-        read = authClient.self().getRight();\n-        assertNotNull(read);\n-        assertNull(read.getToken());\n+        assertNull(authClient.self().getRight().getToken());\n \n         // 7. verify that password was changed on external resource\n         String newPwdOnResource = queryForObject(jdbcTemplate,"},{"sha":"7d071d05251304834e4f1caacfcebc2ddb566562","filename":"fit/enduser-reference/src/main/resources/enduser-https.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser-https.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser-https.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fresources%2Fenduser-https.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+keymaster.address=https://localhost:9443/syncope/rest/keymaster\n+\n+service.discovery.address=https://localhost:9443/syncope-enduser/"},{"sha":"2021bfb2def14895d82c880e20ac8aa6a414b3b7","filename":"fit/wa-reference/pom.xml","status":"modified","additions":35,"deletions":3,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fpom.xml?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -99,6 +99,11 @@ under the License.\n       <type>war</type>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.jsoup</groupId>\n+      <artifactId>jsoup</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n     <dependency>\n       <groupId>org.awaitility</groupId>\n       <artifactId>awaitility</artifactId>\n@@ -128,12 +133,30 @@ under the License.\n             <timeout>600000</timeout>\n             <log>${cargo.log}</log>\n             <output>${cargo.output}</output>\n+\n+            <systemProperties>\n+              <java.security.egd>file:/dev/./urandom</java.security.egd>\n+              <java.util.secureRandomSeed>true</java.util.secureRandomSeed>\n+\n+              <javax.net.ssl.trustStore>${basedir}/src/test/resources/keystore.jks</javax.net.ssl.trustStore>\n+              <javax.net.ssl.trustStorePassword>password</javax.net.ssl.trustStorePassword>\n+            </systemProperties>\n           </container>\n           <configuration>\n             <properties>\n               <cargo.jvmargs>\n-                -Dspring.profiles.active=embedded,all\n+                -Dspring.profiles.active=embedded,https,all\n                 -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>\n+\n+              <cargo.servlet.port>9443</cargo.servlet.port>\n+              <cargo.protocol>https</cargo.protocol>\n+              <cargo.tomcat.connector.keystoreFile>${basedir}/src/test/resources/keystore.jks</cargo.tomcat.connector.keystoreFile>\n+              <cargo.tomcat.connector.keystorePass>password</cargo.tomcat.connector.keystorePass>\n+              <cargo.tomcat.connector.keyAlias>tomcat</cargo.tomcat.connector.keyAlias>\n+              <cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>\n+              <cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>\n+              <cargo.tomcat.connector.redirectPort>9443</cargo.tomcat.connector.redirectPort>\n+              <cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>\n             </properties>\n           </configuration>\n           <deployables>\n@@ -149,7 +172,7 @@ under the License.\n               <groupId>org.apache.syncope.fit</groupId>\n               <artifactId>syncope-fit-core-reference</artifactId>\n               <type>war</type>\n-              <pingURL>http://localhost:${cargo.servlet.port}/syncope/index.html</pingURL>\n+              <pingURL>https://localhost:9443/syncope/index.html</pingURL>\n               <pingTimeout>${cargo.deployable.ping.timeout}</pingTimeout>\n               <properties>\n                 <context>syncope</context>\n@@ -207,11 +230,17 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-surefire-plugin</artifactId>\n         <inherited>true</inherited>\n+        <configuration>\n+          <argLine>-Djavax.net.ssl.trustStore=${basedir}/src/test/resources/keystore.jks -Djavax.net.ssl.trustStorePassword=password</argLine>          \n+        </configuration>\n       </plugin>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-failsafe-plugin</artifactId>\n         <inherited>true</inherited>\n+        <configuration>\n+          <argLine>-Djavax.net.ssl.trustStore=${basedir}/src/test/resources/keystore.jks -Djavax.net.ssl.trustStorePassword=password</argLine>          \n+        </configuration>\n         <executions>\n           <execution>\n             <id>verify</id>\n@@ -241,6 +270,9 @@ under the License.\n       <testResource>\n         <directory>src/test/resources</directory>\n         <filtering>true</filtering>\n+        <excludes>\n+          <exclude>keystore.jks</exclude>\n+        </excludes>\n       </testResource>\n       <testResource>\n         <directory>${basedir}/../../sra/src/test/resources/debug</directory>\n@@ -276,7 +308,7 @@ under the License.\n               <configuration>\n                 <properties>\n                   <cargo.jvmargs>\n-                    -Dspring.profiles.active=embedded,all\n+                    -Dspring.profiles.active=embedded,https,all\n                     -Dwicket.core.settings.general.configuration-type=development\n                     -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n                     -XX:+CMSClassUnloadingEnabled -XX:+UseG1GC -Xmx1024m -Xms512m</cargo.jvmargs>"},{"sha":"16f6bf6270cd93f6898d5082e33fc18c0b9ca204","filename":"fit/wa-reference/src/main/resources/wa-embedded.properties","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Fmain%2Fresources%2Fwa-embedded.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Fmain%2Fresources%2Fwa-embedded.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Fmain%2Fresources%2Fwa-embedded.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -16,11 +16,11 @@\n # under the License.\n spring.main.allow-circular-references=true\n \n-keymaster.address=http://localhost:9080/syncope/rest/keymaster\n+keymaster.address=https://localhost:9443/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n \n-cas.server.name=http://localhost:9080\n+cas.server.name=https://localhost:9443\n cas.server.prefix=${cas.server.name}/syncope-wa\n \n conf.directory=${conf.directory}\n@@ -31,9 +31,15 @@ cas.authn.saml-idp.metadata.http.metadata-backup-location=file:${conf.directory}\n \n cas.authn.oidc.core.issuer=${cas.server.prefix}/oidc\n \n-service.discovery.address=http://localhost:9080/syncope-wa/\n+service.discovery.address=https://localhost:9443/syncope-wa/\n \n ##\n # Default strategy for matching request paths against\n # registered Spring MVC handler mappings\n spring.mvc.pathmatch.matching-strategy=ant-path-matcher\n+\n+cas.tgc.crypto.encryption.key=a4tIE5DL52q7jdqWVxb4r03iV598lR0Yr84hU0Of_hI\n+cas.tgc.crypto.signing.key=qM7RBG27BOSnUCo7PQhBIAr5ZhYrtI-kzhMVjRvn6RJE7R2meleqFLVD6dxloW8qlYRIBOd9u9TwuSoWFvMNPw\n+\n+cas.webflow.crypto.signing.key=w0oLP9sGkSgZ_7sdmxIGvX51i-WFHD7ysGIBoU_EgA3ANl3IrsyadNMm7y5mskNHBU48gIIhxDP2QDVqtwNZng\n+cas.webflow.crypto.encryption.key=LYU6kw5VFv1hzmTgGbwTbw"},{"sha":"5de1e355d06c268f89bf7a17fc39d9b7a93233d5","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":58,"deletions":59,"changes":117,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -19,17 +19,17 @@\n package org.apache.syncope.fit;\n \n import static org.awaitility.Awaitility.await;\n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n \n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Optional;\n import java.util.concurrent.TimeUnit;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.commons.text.StringEscapeUtils;\n import org.apache.http.Consts;\n import org.apache.http.NameValuePair;\n import org.apache.http.client.entity.UrlEncodedFormEntity;\n@@ -48,6 +48,9 @@\n import org.apache.syncope.common.rest.api.service.SRARouteService;\n import org.apache.syncope.common.rest.api.service.UserService;\n import org.apache.syncope.fit.sra.AbstractSRAITCase;\n+import org.jsoup.Connection;\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.FormElement;\n import org.junit.jupiter.api.BeforeAll;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -60,13 +63,13 @@ public class AbstractITCase {\n \n     protected static final String ADMIN_PWD = \"password\";\n \n-    protected static final String CORE_ADDRESS = \"http://localhost:9080/syncope/rest\";\n+    protected static final String CORE_ADDRESS = \"https://localhost:9443/syncope/rest\";\n \n-    protected static final String CONSOLE_ADDRESS = \"http://localhost:9080/syncope-console/\";\n+    protected static final String CONSOLE_ADDRESS = \"https://localhost:9443/syncope-console/\";\n \n-    protected static final String ENDUSER_ADDRESS = \"http://localhost:9080/syncope-enduser/\";\n+    protected static final String ENDUSER_ADDRESS = \"https://localhost:9443/syncope-enduser/\";\n \n-    protected static final String WA_ADDRESS = \"http://localhost:9080/syncope-wa\";\n+    protected static final String WA_ADDRESS = \"https://localhost:9443/syncope-wa\";\n \n     protected static final String EN_LANGUAGE = \"en-US,en;q=0.5\";\n \n@@ -115,78 +118,74 @@ public static void waitForWARefresh() {\n         });\n     }\n \n-    protected static Triple<String, String, String> parseSAMLRequestForm(final String responseBody) {\n-        int begin = responseBody.indexOf(\"name=\\\"RelayState\\\" value=\\\"\");\n-        assertNotEquals(-1, begin);\n-        int end = responseBody.indexOf(\"\\\"/>\", begin);\n-        assertNotEquals(-1, end);\n-        String relayState = StringEscapeUtils.unescapeXml(responseBody.substring(begin + 25, end));\n-        assertNotNull(relayState);\n-\n-        begin = responseBody.indexOf(\"name=\\\"SAMLRequest\\\" value=\\\"\");\n-        assertNotEquals(-1, begin);\n-        end = responseBody.indexOf(\"\\\"/>\", begin);\n-        assertNotEquals(-1, end);\n-        String samlRequest = responseBody.substring(begin + 26, end);\n-        assertNotNull(samlRequest);\n-\n-        begin = responseBody.indexOf(\"<form action=\\\"\");\n-        assertNotEquals(-1, begin);\n-        end = responseBody.indexOf(\"\\\" method=\\\"post\\\">\");\n-        assertNotEquals(-1, end);\n-        String action = StringEscapeUtils.unescapeXml(responseBody.substring(begin + 14, end));\n+    protected static Triple<String, String, String> parseSAMLRequestForm(final String body) {\n+        FormElement form = (FormElement) Jsoup.parse(body).body().getElementsByTag(\"form\").first();\n+        assertNotNull(form);\n+\n+        String action = form.attr(\"action\");\n         assertNotNull(action);\n \n-        return Triple.of(action, relayState, samlRequest);\n+        Optional<String> relayState = form.formData().stream().\n+                filter(keyval -> \"RelayState\".equals(keyval.key())).\n+                map(Connection.KeyVal::value).\n+                findFirst();\n+        assertTrue(relayState.isPresent());\n+\n+        Optional<String> samlRequest = form.formData().stream().\n+                filter(keyval -> \"SAMLRequest\".equals(keyval.key())).\n+                map(Connection.KeyVal::value).\n+                findFirst();\n+        assertTrue(samlRequest.isPresent());\n+\n+        return Triple.of(action, relayState.get(), samlRequest.get());\n     }\n \n-    protected static Triple<String, String, String> parseSAMLResponseForm(final String responseBody) {\n-        int begin = responseBody.indexOf(\"name=\\\"RelayState\\\" value=\\\"\");\n-        assertNotEquals(-1, begin);\n-        int end = responseBody.indexOf(\"\\\"/>\");\n-        assertNotEquals(-1, end);\n-        String relayState = responseBody.substring(begin + 26, end);\n-        assertNotNull(relayState);\n-\n-        begin = responseBody.indexOf(\"name=\\\"SAMLResponse\\\" value=\\\"\");\n-        assertNotEquals(-1, begin);\n-        end = responseBody.indexOf(\"\\\"/>\", begin);\n-        assertNotEquals(-1, end);\n-        String samlResponse = responseBody.substring(begin + 27, end);\n-        assertNotNull(samlResponse);\n-\n-        begin = responseBody.indexOf(\"<form action=\\\"\");\n-        assertNotEquals(-1, begin);\n-        end = responseBody.indexOf(\"\\\" method=\\\"post\\\">\");\n-        assertNotEquals(-1, end);\n-        String action = StringEscapeUtils.unescapeXml(responseBody.substring(begin + 14, end));\n+    protected static Triple<String, String, String> parseSAMLResponseForm(final String body) {\n+        FormElement form = (FormElement) Jsoup.parse(body).body().getElementsByTag(\"form\").first();\n+        assertNotNull(form);\n+\n+        String action = form.attr(\"action\");\n         assertNotNull(action);\n \n-        return Triple.of(action, relayState, samlResponse);\n+        Optional<String> relayState = form.formData().stream().\n+                filter(keyval -> \"RelayState\".equals(keyval.key())).\n+                map(Connection.KeyVal::value).\n+                findFirst();\n+        assertTrue(relayState.isPresent());\n+\n+        Optional<String> samlResponse = form.formData().stream().\n+                filter(keyval -> \"SAMLResponse\".equals(keyval.key())).\n+                map(Connection.KeyVal::value).\n+                findFirst();\n+        assertTrue(samlResponse.isPresent());\n+\n+        return Triple.of(action, relayState.get(), samlResponse.get());\n     }\n \n-    protected static String extractCASExecution(final String responseBody) {\n-        int begin = responseBody.indexOf(\"name=\\\"execution\\\" value=\\\"\");\n-        assertNotEquals(-1, begin);\n-        int end = responseBody.indexOf(\"\\\"/><input type=\\\"hidden\\\" name=\\\"_eventId\\\"\");\n-        assertNotEquals(-1, end);\n+    protected static String extractWAExecution(final String body) {\n+        FormElement form = (FormElement) Jsoup.parse(body).body().getElementsByTag(\"form\").first();\n+        assertNotNull(form);\n+\n+        Optional<String> execution = form.formData().stream().\n+                filter(keyval -> \"execution\".equals(keyval.key())).\n+                map(Connection.KeyVal::value).\n+                findFirst();\n+        assertTrue(execution.isPresent());\n \n-        String execution = responseBody.substring(begin + 24, end);\n-        assertNotNull(execution);\n-        return execution;\n+        return execution.get();\n     }\n \n-    protected static CloseableHttpResponse authenticateToCas(\n+    protected static CloseableHttpResponse authenticateToWA(\n             final String username,\n             final String password,\n-            final String responseBody,\n+            final String body,\n             final CloseableHttpClient httpclient,\n             final HttpClientContext context)\n             throws IOException {\n \n         List<NameValuePair> form = new ArrayList<>();\n         form.add(new BasicNameValuePair(\"_eventId\", \"submit\"));\n-        form.add(new BasicNameValuePair(\"execution\", extractCASExecution(responseBody)));\n+        form.add(new BasicNameValuePair(\"execution\", extractWAExecution(body)));\n         form.add(new BasicNameValuePair(\"username\", username));\n         form.add(new BasicNameValuePair(\"password\", password));\n         form.add(new BasicNameValuePair(\"geolocation\", \"\"));"},{"sha":"10e2f778c91612dd0da47d190974bd4c5914f4ff","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/AbstractSRAITCase.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -163,12 +163,19 @@ protected static void doStartSRA(final String activeProfile)\n         String keymasterClientJar = props.getProperty(\"keymaster-client.jar\");\n         assertNotNull(keymasterClientJar);\n \n+        String trustStore = props.getProperty(\"trustStore\");\n+        assertNotNull(trustStore);\n+        String trustStorePassword = props.getProperty(\"trustStorePassword\");\n+        assertNotNull(trustStorePassword);\n+\n         String targetTestClasses = props.getProperty(\"targetTestClasses\");\n         assertNotNull(targetTestClasses);\n \n         ProcessBuilder processBuilder = new ProcessBuilder(\n                 javaHome + \"/bin/java\",\n                 \"-Dreactor.netty.http.server.accessLogEnabled=true\",\n+                \"-Djavax.net.ssl.trustStore=\" + trustStore,\n+                \"-Djavax.net.ssl.trustStorePassword=\" + trustStorePassword,\n                 \"-jar\",\n                 \"-Xdebug\",\n                 \"-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8002\","},{"sha":"c57534dafeeacc3bd2f050798ff8aecf614091a4","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/CASSRAITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FCASSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FCASSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FCASSRAITCase.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -113,12 +113,12 @@ public void web() throws IOException {\n \n         // 2a. authenticate\n         String responseBody = EntityUtils.toString(response.getEntity());\n-        response = authenticateToCas(\"bellini\", \"password\", responseBody, httpclient, context);\n+        response = authenticateToWA(\"bellini\", \"password\", responseBody, httpclient, context);\n \n         // 2b. WA attribute consent screen\n         if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {\n             responseBody = EntityUtils.toString(response.getEntity());\n-            String execution = extractCASExecution(responseBody);\n+            String execution = extractWAExecution(responseBody);\n \n             List<NameValuePair> form = new ArrayList<>();\n             form.add(new BasicNameValuePair(\"_eventId\", \"confirm\"));"},{"sha":"6e4552e5a3196cff44be73291ad9351e68807fea","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/OIDCSRAITCase.java","status":"modified","additions":6,"deletions":11,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FOIDCSRAITCase.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -20,7 +20,6 @@\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n@@ -61,6 +60,7 @@\n import org.apache.syncope.common.lib.types.ClientAppType;\n import org.apache.syncope.common.lib.types.OIDCSubjectType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.jsoup.Jsoup;\n import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n \n@@ -164,12 +164,12 @@ public void web() throws IOException {\n \n         // 2a. redirected to WA login screen\n         String responseBody = EntityUtils.toString(response.getEntity());\n-        response = authenticateToCas(\"bellini\", \"password\", responseBody, httpclient, context);\n+        response = authenticateToWA(\"bellini\", \"password\", responseBody, httpclient, context);\n \n         // 2b. WA attribute consent screen\n         if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {\n             responseBody = EntityUtils.toString(response.getEntity());\n-            String execution = extractCASExecution(responseBody);\n+            String execution = extractWAExecution(responseBody);\n \n             List<NameValuePair> form = new ArrayList<>();\n             form.add(new BasicNameValuePair(\"_eventId\", \"confirm\"));\n@@ -195,14 +195,9 @@ public void web() throws IOException {\n \n         responseBody = EntityUtils.toString(response.getEntity());\n \n-        int begin = responseBody.indexOf(\"name=\\\"allow\\\"\");\n-        assertNotEquals(-1, begin);\n-        begin = responseBody.indexOf(\"href=\\\"\", begin);\n-        assertNotEquals(-1, begin);\n-        int end = responseBody.indexOf(\"\\\">\", begin);\n-        assertNotEquals(-1, end);\n-\n-        String allow = responseBody.substring(begin + 6, end).replace(\"&amp;\", \"&\");\n+        String allow = Jsoup.parse(responseBody).body().\n+                getElementsByTag(\"a\").select(\"a[name=allow]\").first().\n+                attr(\"href\");\n         assertNotNull(allow);\n \n         // 2d. finally get requested content"},{"sha":"10bab776b37d18cbb3c5946626505a909a4f1ab3","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/SAML2SRAITCase.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FSAML2SRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FSAML2SRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FSAML2SRAITCase.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -60,6 +60,7 @@ public static void startSRA() throws IOException, InterruptedException, TimeoutE\n         assumeTrue(SAML2SRAITCase.class.equals(MethodHandles.lookup().lookupClass()));\n \n         doStartSRA(\"saml2\");\n+//        sraRouteService.pushToSRA();\n     }\n \n     @BeforeAll\n@@ -146,7 +147,7 @@ public void web() throws IOException {\n \n         boolean isOk = false;\n         try (CloseableHttpResponse response =\n-                authenticateToCas(\"bellini\", \"password\", responseBody, httpclient, context)) {\n+                authenticateToWA(\"bellini\", \"password\", responseBody, httpclient, context)) {\n \n             switch (response.getStatusLine().getStatusCode()) {\n                 case HttpStatus.SC_OK:\n@@ -165,7 +166,7 @@ public void web() throws IOException {\n \n         // 2c. WA attribute consent screen\n         if (isOk) {\n-            String execution = extractCASExecution(responseBody);\n+            String execution = extractWAExecution(responseBody);\n \n             List<NameValuePair> form = new ArrayList<>();\n             form.add(new BasicNameValuePair(\"_eventId\", \"confirm\"));\n@@ -180,7 +181,8 @@ public void web() throws IOException {\n             post.setEntity(new UrlEncodedFormEntity(form, Consts.UTF_8));\n             try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n                 assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n-                location = response.getFirstHeader(HttpHeaders.LOCATION).getValue().replace(\":8080\", \":9080\");\n+                location = response.getFirstHeader(HttpHeaders.LOCATION).getValue().\n+                        replace(\"http://\", \"https://\").replace(\":8080\", \":9443\");\n             }\n         }\n "},{"sha":"ff6b3c04a5c78d5feb575828ca01a93641560063","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/OIDC4UIITCase.java","status":"modified","additions":6,"deletions":11,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FOIDC4UIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FOIDC4UIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FOIDC4UIITCase.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.fit.ui;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n@@ -51,6 +50,7 @@\n import org.apache.syncope.common.lib.types.ClientAppType;\n import org.apache.syncope.common.lib.types.OIDCSubjectType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.jsoup.Jsoup;\n import org.junit.jupiter.api.BeforeAll;\n \n public class OIDC4UIITCase extends AbstractUIITCase {\n@@ -195,12 +195,12 @@ protected void sso(final String baseURL, final String username, final String pas\n \n         // 2a. redirected to WA login screen\n         String responseBody = EntityUtils.toString(response.getEntity());\n-        response = authenticateToCas(username, password, responseBody, httpclient, context);\n+        response = authenticateToWA(username, password, responseBody, httpclient, context);\n \n         // 2b. WA attribute consent screen\n         if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {\n             responseBody = EntityUtils.toString(response.getEntity());\n-            String execution = extractCASExecution(responseBody);\n+            String execution = extractWAExecution(responseBody);\n \n             List<NameValuePair> form = new ArrayList<>();\n             form.add(new BasicNameValuePair(\"_eventId\", \"confirm\"));\n@@ -226,14 +226,9 @@ protected void sso(final String baseURL, final String username, final String pas\n \n         responseBody = EntityUtils.toString(response.getEntity());\n \n-        int begin = responseBody.indexOf(\"name=\\\"allow\\\"\");\n-        assertNotEquals(-1, begin);\n-        begin = responseBody.indexOf(\"href=\\\"\", begin);\n-        assertNotEquals(-1, begin);\n-        int end = responseBody.indexOf(\"\\\">\", begin);\n-        assertNotEquals(-1, end);\n-\n-        String allow = responseBody.substring(begin + 6, end).replace(\"&amp;\", \"&\");\n+        String allow = Jsoup.parse(responseBody).body().\n+                getElementsByTag(\"a\").select(\"a[name=allow]\").first().\n+                attr(\"href\");\n         assertNotNull(allow);\n \n         // 2d. finally get requested content"},{"sha":"ff2ab5775a6543564388771978ae1e889296fe3d","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/ui/SAML2SP4UIITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FSAML2SP4UIITCase.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -187,7 +187,7 @@ protected void sso(final String baseURL, final String username, final String pas\n \n         // 2. click on the SAML 2.0 IdP\n         get = new HttpGet(baseURL + SAML2SP4UIConstants.URL_CONTEXT\n-                + \"/login?idp=http%3A//localhost%3A9080/syncope-wa/saml\");\n+                + \"/login?idp=https%3A//localhost%3A9443/syncope-wa/saml\");\n         String responseBody;\n         try (CloseableHttpResponse response = httpclient.execute(get, context)) {\n             responseBody = EntityUtils.toString(response.getEntity());\n@@ -218,7 +218,7 @@ protected void sso(final String baseURL, final String username, final String pas\n         }\n         boolean isOk = false;\n         try (CloseableHttpResponse response =\n-                authenticateToCas(username, password, responseBody, httpclient, context)) {\n+                authenticateToWA(username, password, responseBody, httpclient, context)) {\n \n             switch (response.getStatusLine().getStatusCode()) {\n                 case HttpStatus.SC_OK:\n@@ -237,7 +237,7 @@ protected void sso(final String baseURL, final String username, final String pas\n \n         // 2c. WA attribute consent screen\n         if (isOk) {\n-            String execution = extractCASExecution(responseBody);\n+            String execution = extractWAExecution(responseBody);\n \n             List<NameValuePair> form = new ArrayList<>();\n             form.add(new BasicNameValuePair(\"_eventId\", \"confirm\"));\n@@ -252,7 +252,7 @@ protected void sso(final String baseURL, final String username, final String pas\n             post.setEntity(new UrlEncodedFormEntity(form, Consts.UTF_8));\n             try (CloseableHttpResponse response = httpclient.execute(post, context)) {\n                 assertEquals(HttpStatus.SC_MOVED_TEMPORARILY, response.getStatusLine().getStatusCode());\n-                location = response.getFirstHeader(HttpHeaders.LOCATION).getValue().replace(\":8080\", \":9080\");\n+                location = response.getFirstHeader(HttpHeaders.LOCATION).getValue();\n             }\n         }\n "},{"sha":"035511149ca0881370cc6f2dcb6c2e590ebd9a91","filename":"fit/wa-reference/src/test/resources/keystore.jks","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fkeystore.jks","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fkeystore.jks","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fkeystore.jks?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3"},{"sha":"d70c50cb96a0f48bc77c8b7c3dce32eb229fd5e7","filename":"fit/wa-reference/src/test/resources/sra-cas.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-cas.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-cas.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-cas.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -14,12 +14,11 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-keymaster.address=http://localhost:9080/syncope/rest/keymaster\n+keymaster.address=https://localhost:9443/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n \n sra.am-type=CAS\n-sra.cas.server-name=http://localhost:9080\n-sra.cas.server-prefix=http://localhost:9080/syncope-wa/\n+sra.cas.server-prefix=https://localhost:9443/syncope-wa/\n \n sra.global.postLogout=http://localhost:8080/logout"},{"sha":"4f990029d48a75116606c65c3fa6887d0968b507","filename":"fit/wa-reference/src/test/resources/sra-oauth2.properties","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-oauth2.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-oauth2.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-oauth2.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -14,18 +14,18 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-keymaster.address=http://localhost:9080/syncope/rest/keymaster\n+keymaster.address=https://localhost:9443/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n \n sra.am-type=OAUTH2\n-sra.oauth2.tokenUri=http://localhost:9080/syncope-wa/oauth2.0/accessToken\n-sra.oauth2.authorizationUri=http://localhost:9080/syncope-wa/oauth2.0/authorize\n-sra.oauth2.userInfoUri=http://localhost:9080/syncope-wa/oauth2.0/profile\n+sra.oauth2.tokenUri=https://localhost:9443/syncope-wa/oauth2.0/accessToken\n+sra.oauth2.authorizationUri=https://localhost:9443/syncope-wa/oauth2.0/authorize\n+sra.oauth2.userInfoUri=https://localhost:9443/syncope-wa/oauth2.0/profile\n sra.oauth2.userNameAttributeName=id\n sra.oauth2.scopes=\n sra.oauth2.jwkSetUri=\n-sra.oauth2.issuer=http://localhost:9080/syncope-wa\n+sra.oauth2.issuer=https://localhost:9443/syncope-wa\n sra.oauth2.client-id=oauth2TestClientId\n sra.oauth2.client-secret=oauth2TestClientSecret\n "},{"sha":"9f7b8f3ea35c1bc9edc755095138717c33abe57a","filename":"fit/wa-reference/src/test/resources/sra-oidc.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-oidc.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-oidc.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-oidc.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -14,12 +14,12 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-keymaster.address=http://localhost:9080/syncope/rest/keymaster\n+keymaster.address=https://localhost:9443/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n \n sra.am-type=OIDC\n-sra.oidc.configuration=http://localhost:9080/syncope-wa/oidc\n+sra.oidc.configuration=https://localhost:9443/syncope-wa/oidc\n sra.oidc.client-id=oidcTestClientId\n sra.oidc.client-secret=oidcTestClientSecret\n "},{"sha":"eb68049407565f9803a1dd16701609198c84f7de","filename":"fit/wa-reference/src/test/resources/sra-saml2.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-saml2.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-saml2.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Fsra-saml2.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-keymaster.address=http://localhost:9080/syncope/rest/keymaster\n+keymaster.address=https://localhost:9443/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n \n@@ -25,7 +25,7 @@ sra.saml2.logout-response-binding=REDIRECT\n sra.saml2.entityId=http://localhost:8080\n sra.saml2.skew=300\n sra.saml2.sp-metadata-file-path=/tmp/saml2-sp-metadata.xml\n-sra.saml2.idp-metadata=http://localhost:9080/syncope-wa/idp/metadata\n+sra.saml2.idp-metadata=https://localhost:9443/syncope-wa/idp/metadata\n sra.saml2.keystore=classpath:/saml.keystore.jks\n sra.saml2.keystore-type=jks\n sra.saml2.keystore-storepass=changeit"},{"sha":"7cbe265531f9a52d585f2336e25c209b99f7b635","filename":"fit/wa-reference/src/test/resources/test.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Ftest.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Ftest.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fresources%2Ftest.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -18,4 +18,6 @@ java.home=${java.home}\n sra.jar=${basedir}/../../sra/target/syncope-sra-${project.version}-exec.jar\n keymaster-api.jar=${settings.localRepository}/org/apache/syncope/common/keymaster/self/syncope-common-keymaster-self-rest-api/${project.version}/syncope-common-keymaster-self-rest-api-${project.version}.jar\n keymaster-client.jar=${settings.localRepository}/org/apache/syncope/common/keymaster/self/syncope-common-keymaster-client-self/${project.version}/syncope-common-keymaster-client-self-${project.version}.jar\n+trustStore=${basedir}/src/test/resources/keystore.jks\n+trustStorePassword=password\n targetTestClasses=${project.build.testOutputDirectory}"},{"sha":"5a29230592bc4e9a57c709006109413d94002ba4","filename":"pom.xml","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -446,9 +446,9 @@ under the License.\n \n     <modernizer-maven.version>2.3.0</modernizer-maven.version>\n \n-    <pac4j.version>5.2.1</pac4j.version>\n+    <pac4j.version>5.3.1</pac4j.version>\n \n-    <cas.version>6.5.0-RC4</cas.version>\n+    <cas.version>6.5.1</cas.version>\n     <cas-client.version>3.6.4</cas-client.version>\n \n     <h2.version>1.4.200</h2.version>\n@@ -1405,6 +1405,12 @@ under the License.\n         <groupId>org.apereo.cas</groupId>\n         <artifactId>cas-server-support-syncope-authentication</artifactId>\n         <version>${cas.version}</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>com.github.mmoayyed.cxf</groupId>\n+            <artifactId>cxf-rt-rs-extension-search</artifactId>\n+          </exclusion>\n+        </exclusions>\n       </dependency>\n       <dependency>\n         <groupId>org.apereo.cas</groupId>\n@@ -2769,7 +2775,7 @@ under the License.\n           <plugin>\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-site-plugin</artifactId>\n-            <version>3.10.0</version>\n+            <version>3.11.0</version>\n             <configuration>\n               <locales>en</locales>\n               <generateProjectInfo>false</generateProjectInfo>"},{"sha":"84f8280d58af43f5552bf7c906f455140adf8f87","filename":"sra/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fpom.xml?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -293,6 +293,7 @@ under the License.\n               </systemPropertyVariables>\n               <jvmArguments>\n                 -Xdebug -Xrunjdwp:transport=dt_socket,address=8002,server=y,suspend=n\n+                -Djavax.net.ssl.trustStore=${basedir}/../fit/wa-reference/src/test/resources/keystore.jks -Djavax.net.ssl.trustStorePassword=password\n               </jvmArguments>\n               <profiles>\n                 <profile>debug</profile>"},{"sha":"3e1504c96a4505b26126dd6098aacb5797b32f6c","filename":"sra/src/main/java/org/apache/syncope/sra/SRAProperties.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSRAProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSRAProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSRAProperties.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -322,20 +322,10 @@ public void setKeystoreKeypass(final String keystoreKeyPass) {\n \n     public static class CAS {\n \n-        private String serverName;\n-\n         private String serverPrefix;\n \n         private Protocol protocol = Protocol.CAS3;\n \n-        public String getServerName() {\n-            return serverName;\n-        }\n-\n-        public void setServerName(final String serverName) {\n-            this.serverName = serverName;\n-        }\n-\n         public String getServerPrefix() {\n             return serverPrefix;\n         }"},{"sha":"98f2949d1b26ab8b1d304217ef9b2ee5366ff9ab","filename":"sra/src/main/java/org/apache/syncope/sra/SecurityConfig.java","status":"modified","additions":35,"deletions":36,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSecurityConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSecurityConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSecurityConfig.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -119,17 +119,17 @@ public ReactiveUserDetailsService userDetailsService(final SRAProperties props)\n     @ConditionalOnProperty(prefix = SRAProperties.PREFIX, name = SRAProperties.AM_TYPE, havingValue = \"OIDC\")\n     public ClientRegistration oidcClientRegistration(final SRAProperties props) {\n         return ClientRegistrations.fromOidcIssuerLocation(props.getOidc().getConfiguration()).\n-            registrationId(SRAProperties.AMType.OIDC.name()).\n-            clientId(props.getOidc().getClientId()).\n-            clientSecret(props.getOidc().getClientSecret()).\n-            scope(props.getOidc().getScopes().toArray(new String[0])).\n-            build();\n+                registrationId(SRAProperties.AMType.OIDC.name()).\n+                clientId(props.getOidc().getClientId()).\n+                clientSecret(props.getOidc().getClientSecret()).\n+                scope(props.getOidc().getScopes().toArray(new String[0])).\n+                build();\n     }\n \n     @Bean\n     @ConditionalOnProperty(prefix = SRAProperties.PREFIX, name = SRAProperties.AM_TYPE, havingValue = \"OIDC\")\n     public ReactiveClientRegistrationRepository oidcClientRegistrationRepository(\n-        @Qualifier(\"oidcClientRegistration\") final ClientRegistration oidcClientRegistration) {\n+            @Qualifier(\"oidcClientRegistration\") final ClientRegistration oidcClientRegistration) {\n         return new InMemoryReactiveClientRegistrationRepository(oidcClientRegistration);\n     }\n \n@@ -150,17 +150,17 @@ public Converter<Map<String, Object>, Map<String, Object>> jwtClaimSetConverter(\n     @ConditionalOnMissingBean\n     @ConditionalOnProperty(prefix = SRAProperties.PREFIX, name = SRAProperties.AM_TYPE, havingValue = \"OIDC\")\n     public ReactiveJwtDecoder oidcJWTDecoder(\n-        @Qualifier(\"oidcClientRegistration\")\n-        final ClientRegistration oidcClientRegistration,\n-        @Qualifier(\"oidcJWTValidator\")\n-        final OAuth2TokenValidator<Jwt> oidcJWTValidator,\n-        @Qualifier(\"jwtClaimSetConverter\")\n-        final Converter<Map<String, Object>, Map<String, Object>> jwtClaimSetConverter) {\n+            @Qualifier(\"oidcClientRegistration\")\n+            final ClientRegistration oidcClientRegistration,\n+            @Qualifier(\"oidcJWTValidator\")\n+            final OAuth2TokenValidator<Jwt> oidcJWTValidator,\n+            @Qualifier(\"jwtClaimSetConverter\")\n+            final Converter<Map<String, Object>, Map<String, Object>> jwtClaimSetConverter) {\n         String jwkSetUri = oidcClientRegistration.getProviderDetails().getJwkSetUri();\n         NimbusReactiveJwtDecoder jwtDecoder = NimbusReactiveJwtDecoder.withJwkSetUri(jwkSetUri)\n-            .jwsAlgorithm(SignatureAlgorithm.RS256)\n-            .jwsAlgorithm(SignatureAlgorithm.RS512)\n-            .build();\n+                .jwsAlgorithm(SignatureAlgorithm.RS256)\n+                .jwsAlgorithm(SignatureAlgorithm.RS512)\n+                .build();\n         jwtDecoder.setJwtValidator(oidcJWTValidator);\n         jwtDecoder.setClaimSetConverter(jwtClaimSetConverter);\n         return jwtDecoder;\n@@ -170,23 +170,23 @@ public ReactiveJwtDecoder oidcJWTDecoder(\n     @ConditionalOnProperty(prefix = SRAProperties.PREFIX, name = SRAProperties.AM_TYPE, havingValue = \"OAUTH2\")\n     public ClientRegistration oauth2ClientRegistration(final SRAProperties props) {\n         return ClientRegistration.withRegistrationId(SRAProperties.AMType.OAUTH2.name()).\n-            redirectUri(\"{baseUrl}/{action}/oauth2/code/{registrationId}\").\n-            tokenUri(props.getOauth2().getTokenUri()).\n-            authorizationUri(props.getOauth2().getAuthorizationUri()).\n-            userInfoUri(props.getOauth2().getUserInfoUri()).\n-            userNameAttributeName(props.getOauth2().getUserNameAttributeName()).\n-            clientId(props.getOauth2().getClientId()).\n-            clientSecret(props.getOauth2().getClientSecret()).\n-            scope(props.getOauth2().getScopes().toArray(new String[0])).\n-            authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).\n-            jwkSetUri(props.getOauth2().getJwkSetUri()).\n-            build();\n+                redirectUri(\"{baseUrl}/{action}/oauth2/code/{registrationId}\").\n+                tokenUri(props.getOauth2().getTokenUri()).\n+                authorizationUri(props.getOauth2().getAuthorizationUri()).\n+                userInfoUri(props.getOauth2().getUserInfoUri()).\n+                userNameAttributeName(props.getOauth2().getUserNameAttributeName()).\n+                clientId(props.getOauth2().getClientId()).\n+                clientSecret(props.getOauth2().getClientSecret()).\n+                scope(props.getOauth2().getScopes().toArray(new String[0])).\n+                authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE).\n+                jwkSetUri(props.getOauth2().getJwkSetUri()).\n+                build();\n     }\n-    \n+\n     @Bean\n     @ConditionalOnProperty(prefix = SRAProperties.PREFIX, name = SRAProperties.AM_TYPE, havingValue = \"OAUTH2\")\n     public ReactiveClientRegistrationRepository oauth2ClientRegistrationRepository(\n-        @Qualifier(\"oauth2ClientRegistration\") final ClientRegistration oauth2ClientRegistration) {\n+            @Qualifier(\"oauth2ClientRegistration\") final ClientRegistration oauth2ClientRegistration) {\n         return new InMemoryReactiveClientRegistrationRepository(oauth2ClientRegistration);\n     }\n \n@@ -203,12 +203,12 @@ public OAuth2TokenValidator<Jwt> oauth2JWTValidator(final SRAProperties props) {\n     @ConditionalOnMissingBean\n     @ConditionalOnProperty(prefix = SRAProperties.PREFIX, name = SRAProperties.AM_TYPE, havingValue = \"OAUTH2\")\n     public ReactiveJwtDecoder oauth2JWTDecoder(\n-        @Qualifier(\"oauth2ClientRegistration\")\n-        final ClientRegistration oauth2ClientRegistration,\n-        @Qualifier(\"oauth2JWTValidator\")\n-        final OAuth2TokenValidator<Jwt> oauth2JWTValidator,\n-        @Qualifier(\"jwtClaimSetConverter\")\n-        final Converter<Map<String, Object>, Map<String, Object>> jwtClaimSetConverter) {\n+            @Qualifier(\"oauth2ClientRegistration\")\n+            final ClientRegistration oauth2ClientRegistration,\n+            @Qualifier(\"oauth2JWTValidator\")\n+            final OAuth2TokenValidator<Jwt> oauth2JWTValidator,\n+            @Qualifier(\"jwtClaimSetConverter\")\n+            final Converter<Map<String, Object>, Map<String, Object>> jwtClaimSetConverter) {\n \n         String jwkSetUri = oauth2ClientRegistration.getProviderDetails().getJwkSetUri();\n         NimbusReactiveJwtDecoder jwtDecoder;\n@@ -232,7 +232,7 @@ public ReactiveJwtDecoder oauth2JWTDecoder(\n     @ConditionalOnMissingBean\n     @ConditionalOnProperty(prefix = SRAProperties.PREFIX, name = SRAProperties.AM_TYPE, havingValue = \"SAML2\")\n     public SAML2Client saml2Client(final ResourcePatternResolver resourceResolver,\n-                              final SRAProperties props) {\n+            final SRAProperties props) {\n         SAML2Configuration cfg = new SAML2Configuration(\n                 resourceResolver.getResource(props.getSaml2().getKeystore()),\n                 props.getSaml2().getKeystoreStorePass(),\n@@ -319,7 +319,6 @@ public SecurityWebFilterChain routesSecurityFilterChain(\n             case CAS:\n                 CASSecurityConfigUtils.forLogin(\n                         http,\n-                        props.getCas().getServerName(),\n                         props.getCas().getProtocol(),\n                         props.getCas().getServerPrefix(),\n                         publicRouteMatcher);"},{"sha":"dc546d180f8f7682d0272d3af873445335c16e58","filename":"sra/src/main/java/org/apache/syncope/sra/security/cas/CASAuthenticationRequestWebFilter.java","status":"modified","additions":5,"deletions":13,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASAuthenticationRequestWebFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASAuthenticationRequestWebFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASAuthenticationRequestWebFilter.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -41,12 +41,6 @@ public class CASAuthenticationRequestWebFilter implements WebFilter {\n \n     private final ServerWebExchangeMatcher matcher;\n \n-    /**\n-     * The name of the server. Should be in the following format: {protocol}:{hostName}:{port}.\n-     * Standard ports can be excluded.\n-     */\n-    private final String serverName;\n-\n     private final Protocol protocol;\n \n     /**\n@@ -58,17 +52,15 @@ public class CASAuthenticationRequestWebFilter implements WebFilter {\n \n     public CASAuthenticationRequestWebFilter(\n             final PublicRouteMatcher publicRouteMatcher,\n-            final String serverName,\n             final Protocol protocol,\n             final String casServerUrlPrefix) {\n \n-        this.matcher = ServerWebExchangeMatchers.matchers(\n+        matcher = ServerWebExchangeMatchers.matchers(\n                 publicRouteMatcher,\n                 CASUtils.ticketAvailable(protocol),\n                 SessionUtils.authInSession());\n-        this.serverName = serverName;\n         this.protocol = protocol;\n-        this.casServerLoginUrl = StringUtils.appendIfMissing(casServerUrlPrefix, \"/\") + \"login\";\n+        casServerLoginUrl = StringUtils.appendIfMissing(casServerUrlPrefix, \"/\") + \"login\";\n     }\n \n     public void setAuthenticationRedirectStrategy(final ServerRedirectStrategy authenticationRedirectStrategy) {\n@@ -87,12 +79,12 @@ public Mono<Void> filter(final ServerWebExchange exchange, final WebFilterChain\n \n                     LOG.debug(\"no ticket and no assertion found\");\n \n-                    String serviceUrl = CASUtils.constructServiceUrl(exchange, this.serverName, this.protocol);\n+                    String serviceUrl = CASUtils.constructServiceUrl(exchange, protocol);\n                     LOG.debug(\"Constructed service url: {}\", serviceUrl);\n \n                     String urlToRedirectTo = CommonUtils.constructRedirectUrl(\n-                            this.casServerLoginUrl,\n-                            this.protocol.getServiceParameterName(),\n+                            casServerLoginUrl,\n+                            protocol.getServiceParameterName(),\n                             serviceUrl,\n                             false,\n                             false,"},{"sha":"379efd4ef4ade6dd8ce96c9944e472380f1728c2","filename":"sra/src/main/java/org/apache/syncope/sra/security/cas/CASAuthenticationWebFilter.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASAuthenticationWebFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASAuthenticationWebFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASAuthenticationWebFilter.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -44,21 +44,17 @@ public class CASAuthenticationWebFilter extends AuthenticationWebFilter {\n \n     private static final Logger LOG = LoggerFactory.getLogger(CASAuthenticationWebFilter.class);\n \n-    private final String serverName;\n-\n     private final Protocol protocol;\n \n     private final TicketValidator ticketValidator;\n \n     public CASAuthenticationWebFilter(\n             final ReactiveAuthenticationManager authenticationManager,\n-            final String serverName,\n             final Protocol protocol,\n             final String casServerUrlPrefix) {\n \n         super(authenticationManager);\n \n-        this.serverName = serverName;\n         this.protocol = protocol;\n         this.ticketValidator = new Cas30JsonServiceTicketValidator(casServerUrlPrefix);\n \n@@ -72,12 +68,15 @@ public CASAuthenticationWebFilter(\n     }\n \n     private ServerAuthenticationConverter validateAssertion() {\n-        return exchange -> CASUtils.retrieveTicketFromRequest(exchange, this.protocol).\n+        return exchange -> CASUtils.retrieveTicketFromRequest(exchange, protocol).\n                 flatMap(ticket -> {\n                     try {\n-                        Assertion assertion = this.ticketValidator.validate(\n+                        String serviceUrl = CASUtils.constructServiceUrl(exchange, protocol);\n+                        LOG.debug(\"Constructed service url: {}\", serviceUrl);\n+\n+                        Assertion assertion = ticketValidator.validate(\n                                 ticket,\n-                                CASUtils.constructServiceUrl(exchange, this.serverName, this.protocol));\n+                                CASUtils.constructServiceUrl(exchange, protocol));\n                         return Mono.just(new CASAuthenticationToken(assertion));\n                     } catch (TicketValidationException e) {\n                         LOG.error(\"Could not validate {}\", ticket, e);\n@@ -96,7 +95,7 @@ public Mono<Void> onAuthenticationSuccess(\n                     final WebFilterExchange webFilterExchange, final Authentication authentication) {\n \n                 return webFilterExchange.getExchange().getSession().\n-                        flatMap(session -> this.redirectStrategy.sendRedirect(\n+                        flatMap(session -> redirectStrategy.sendRedirect(\n                         webFilterExchange.getExchange(),\n                         session.<URI>getRequiredAttribute(SessionUtils.INITIAL_REQUEST_URI)));\n             }"},{"sha":"83cdc5b3d144ffea4b7435954d310998c106257b","filename":"sra/src/main/java/org/apache/syncope/sra/security/cas/CASSecurityConfigUtils.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASSecurityConfigUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASSecurityConfigUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASSecurityConfigUtils.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -45,7 +45,6 @@ private static ReactiveAuthenticationManager authenticationManager() {\n \n     public static void forLogin(\n             final ServerHttpSecurity http,\n-            final String serverName,\n             final Protocol protocol,\n             final String casServerUrlPrefix,\n             final PublicRouteMatcher publicRouteMatcher) {\n@@ -54,14 +53,13 @@ public static void forLogin(\n \n         CASAuthenticationRequestWebFilter authRequestFilter = new CASAuthenticationRequestWebFilter(\n                 publicRouteMatcher,\n-                serverName,\n                 protocol,\n                 casServerUrlPrefix);\n         http.addFilterAt(authRequestFilter, SecurityWebFiltersOrder.HTTP_BASIC);\n \n         AuthenticationWebFilter authenticationFilter = new CASAuthenticationWebFilter(\n                 authenticationManager,\n-                serverName, protocol,\n+                protocol,\n                 casServerUrlPrefix);\n         authenticationFilter.setAuthenticationFailureHandler((exchange, ex) -> Mono.error(ex));\n         authenticationFilter.setSecurityContextRepository(new WebSessionServerSecurityContextRepository());"},{"sha":"4f479865d4d3d8fe10b0dfdf109355d7fe154a7f","filename":"sra/src/main/java/org/apache/syncope/sra/security/cas/CASUtils.java","status":"modified","additions":6,"deletions":51,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Fsecurity%2Fcas%2FCASUtils.java?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -18,16 +18,12 @@\n  */\n package org.apache.syncope.sra.security.cas;\n \n-import java.util.List;\n-import org.apache.commons.lang3.StringUtils;\n import org.jasig.cas.client.Protocol;\n-import org.jasig.cas.client.util.URIBuilder;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.http.HttpMethod;\n import org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher;\n import org.springframework.web.server.ServerWebExchange;\n-import org.springframework.web.util.UriComponents;\n import org.springframework.web.util.UriComponentsBuilder;\n import reactor.core.publisher.Mono;\n \n@@ -52,57 +48,16 @@ public static Mono<String> retrieveTicketFromRequest(final ServerWebExchange exc\n     }\n \n     public static ServerWebExchangeMatcher ticketAvailable(final Protocol protocol) {\n-        return exchange -> CASUtils.retrieveTicketFromRequest(exchange, protocol).\n+        return exchange -> retrieveTicketFromRequest(exchange, protocol).\n                 flatMap(ticket -> ServerWebExchangeMatcher.MatchResult.match()).\n                 switchIfEmpty(ServerWebExchangeMatcher.MatchResult.notMatch());\n     }\n \n-    public static String constructServiceUrl(\n-            final ServerWebExchange exchange,\n-            final String serverName,\n-            final Protocol protocol) {\n-\n-        UriComponents requestURI = UriComponentsBuilder.fromHttpRequest(exchange.getRequest()).build();\n-\n-        URIBuilder originalRequestUrl = new URIBuilder(\n-                StringUtils.substringBefore(requestURI.toUriString(), \"?\"), true);\n-        originalRequestUrl.setParameters(requestURI.getQuery());\n-\n-        URIBuilder builder;\n-        if (!serverName.startsWith(\"https://\") && !serverName.startsWith(\"http://\")) {\n-            String scheme = exchange.getRequest().getSslInfo() == null ? \"http://\" : \"https://\";\n-            builder = new URIBuilder(scheme + serverName, true);\n-        } else {\n-            builder = new URIBuilder(serverName, true);\n-        }\n-\n-        builder.setPort(requestURI.getPort());\n-\n-        builder.setEncodedPath(builder.getEncodedPath() + requestURI.getPath());\n-\n-        List<String> serviceParameterNames = List.of(protocol.getServiceParameterName().split(\",\"));\n-        if (!serviceParameterNames.isEmpty() && !originalRequestUrl.getQueryParams().isEmpty()) {\n-            originalRequestUrl.getQueryParams().stream().\n-                    filter(pair -> !pair.getName().equals(protocol.getArtifactParameterName())\n-                    && !serviceParameterNames.contains(pair.getName())).\n-                    forEach(pair -> {\n-                        String name = pair.getName();\n-                        if (name.contains(\"&\") || name.contains(\"=\")) {\n-                            URIBuilder encodedParamBuilder = new URIBuilder();\n-                            encodedParamBuilder.setParameters(name);\n-                            encodedParamBuilder.getQueryParams().stream().\n-                                    filter(pair2 -> !pair2.getName().equals(protocol.getArtifactParameterName())\n-                                    && !serviceParameterNames.contains(pair2.getName())).\n-                                    forEach(pair2 -> builder.addParameter(pair2.getName(), pair2.getValue()));\n-                        } else {\n-                            builder.addParameter(name, pair.getValue());\n-                        }\n-                    });\n-        }\n-\n-        String result = builder.toString();\n-        LOG.debug(\"serviceUrl generated: {}\", result);\n-        return result;\n+    public static String constructServiceUrl(final ServerWebExchange exchange, final Protocol protocol) {\n+        return UriComponentsBuilder.fromHttpRequest(exchange.getRequest()).\n+                replaceQueryParam(protocol.getArtifactParameterName()).\n+                build().\n+                toUriString();\n     }\n \n     private CASUtils() {"},{"sha":"f73cd07e941fdf2f16af14957bacc7fc7b77e580","filename":"sra/src/test/resources/debug/sra-debug.properties","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fsra-debug.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/sra%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fsra-debug.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Ftest%2Fresources%2Fdebug%2Fsra-debug.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -14,23 +14,23 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-keymaster.address=http://localhost:9080/syncope/rest/keymaster\n+keymaster.address=https://localhost:9443/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n \n sra.am-type=OIDC\n-sra.oidc.configuration=http://localhost:9080/syncope-wa/oidc\n+sra.oidc.configuration=https://localhost:9443/syncope-wa/oidc\n sra.oidc.client-id=oidcTestClientId\n sra.oidc.client-secret=oidcTestClientSecret\n \n #sra.am-type=OAUTH2\n-#sra.oauth2.tokenUri=http://localhost:9080/syncope-wa/oauth2.0/accessToken\n-#sra.oauth2.authorizationUri=http://localhost:9080/syncope-wa/oauth2.0/authorize\n-#sra.oauth2.userInfoUri=http://localhost:9080/syncope-wa/oauth2.0/profile\n+#sra.oauth2.tokenUri=https://localhost:9443/syncope-wa/oauth2.0/accessToken\n+#sra.oauth2.authorizationUri=https://localhost:9443/syncope-wa/oauth2.0/authorize\n+#sra.oauth2.userInfoUri=https://localhost:9443/syncope-wa/oauth2.0/profile\n #sra.oauth2.userNameAttributeName=id\n #sra.oauth2.scopes=\n #sra.oauth2.jwkSetUri=\n-#sra.oauth2.issuer=http://localhost:9080/syncope-wa\n+#sra.oauth2.issuer=https://localhost:9443/syncope-wa\n #sra.oauth2.client-id=oauth2TestClientId\n #sra.oauth2.client-secret=oauth2TestClientSecret\n \n@@ -41,14 +41,13 @@ sra.oidc.client-secret=oidcTestClientSecret\n #sra.saml2.entityId=http://localhost:8080\n #sra.saml2.skew=300\n #sra.saml2.sp-metadata-file-path=/tmp/saml2-sp-metadata.xml\n-#sra.saml2.idp-metadata=http://localhost:9080/syncope-wa/idp/metadata\n+#sra.saml2.idp-metadata=https://localhost:9443/syncope-wa/idp/metadata\n #sra.saml2.keystore=classpath:/saml.keystore.jks\n #sra.saml2.keystore-type=jks\n #sra.saml2.keystore-storepass=changeit\n #sra.saml2.keystore-keypass=changeit\n \n #sra.am-type=CAS\n-#sra.cas.server-name=http://localhost:9080\n-#sra.cas.server-prefix=http://localhost:9080/syncope-wa/\n+#sra.cas.server-prefix=https://localhost:9443/syncope-wa/\n \n sra.global.postLogout=http://localhost:8080/logout"},{"sha":"525443dc0de5b76368ff2b8643c49f9bcaeac623","filename":"wa/starter/src/main/resources/cas-theme-default.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fcas-theme-default.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fcas-theme-default.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fcas-theme-default.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -19,7 +19,7 @@\n \n cas.theme.name=Apache Syncope\n cas.standard.css.file=/css/cas.css\n-cas.standard.js.file=/js/cas.js\n+cas.standard.js.file=/js/cas.js,/js/material.js\n cas.logo.file=/images/logo.png\n cas.favicon.file=/images/favicon.png\n cas.drawer-menu.enabled=false"},{"sha":"e2418d7327f805071529065b948d59a800a03488","filename":"wa/starter/src/main/resources/wa.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf4034b8a3ce9e734358f2ddd8a952fb861e53d3/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fwa.properties?ref=cf4034b8a3ce9e734358f2ddd8a952fb861e53d3","patch":"@@ -71,7 +71,6 @@ cas.server.name=http://localhost:8080\n cas.server.prefix=${cas.server.name}/syncope-wa\n cas.server.scope=syncope.org\n \n-cas.tgc.secure=false\n cas.logout.follow-service-redirects=true\n \n cas.authn.saml-idp.core.entity-id=${cas.server.prefix}/saml"}]}