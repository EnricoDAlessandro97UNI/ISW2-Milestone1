{"sha":"5f98c9be2669c958c368ff3b370a68d3569be8f5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVmOThjOWJlMjY2OWM5NThjMzY4ZmYzYjM3MGE2OGQzNTY5YmU4ZjU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-02-13T05:42:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-02-13T05:57:16Z"},"message":"Ensure to ignore synthetic fields during reflection","tree":{"sha":"81151723c81208a8097a98e434437f331b5ec1ee","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/81151723c81208a8097a98e434437f331b5ec1ee"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5f98c9be2669c958c368ff3b370a68d3569be8f5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5f98c9be2669c958c368ff3b370a68d3569be8f5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5f98c9be2669c958c368ff3b370a68d3569be8f5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5f98c9be2669c958c368ff3b370a68d3569be8f5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"83fb294b3f84e81ccd63da0177e389953ee04528","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/83fb294b3f84e81ccd63da0177e389953ee04528","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/83fb294b3f84e81ccd63da0177e389953ee04528"}],"stats":{"total":31,"additions":14,"deletions":17},"files":[{"sha":"56f8eda0a056158d622f436a8418e54e5987ed9f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=5f98c9be2669c958c368ff3b370a68d3569be8f5","patch":"@@ -89,7 +89,7 @@ private static void initFieldNames(final Class<?> entityClass, final Set<String>\n         classes.add(entityClass);\n         classes.forEach(clazz -> {\n             for (Field field : clazz.getDeclaredFields()) {\n-                if (!Modifier.isStatic(field.getModifiers())\n+                if (!field.isSynthetic() && !Modifier.isStatic(field.getModifiers())\n                         && !Collection.class.isAssignableFrom(field.getType())\n                         && !Map.class.isAssignableFrom(field.getType())) {\n "},{"sha":"05f7062b7c889b11dfda299ab7f912e8dff1cfcc","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=5f98c9be2669c958c368ff3b370a68d3569be8f5","patch":"@@ -202,11 +202,11 @@ protected void addPropertyColumn(\n             columns.add(new KeyPropertyColumn<>(new ResourceModel(name, name), name, name));\n         } else if (Constants.DEFAULT_TOKEN_FIELD_NAME.equalsIgnoreCase(name)) {\n             columns.add(new TokenColumn<>(new ResourceModel(name, name), name));\n-        } else if (field != null\n+        } else if (field != null && !field.isSynthetic()\n                 && (field.getType().equals(Boolean.class) || field.getType().equals(boolean.class))) {\n \n             columns.add(new BooleanPropertyColumn<>(new ResourceModel(name, name), name, name));\n-        } else if (field != null && field.getType().equals(Date.class)) {\n+        } else if (field != null && !field.isSynthetic() && field.getType().equals(Date.class)) {\n             columns.add(new DatePropertyColumn<>(new ResourceModel(name, name), name, name));\n         } else {\n             columns.add(new PropertyColumn<>(new ResourceModel(name, name), name, name));"},{"sha":"b9068b530ed6bd5016b18d50e31be92f0124d76d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=5f98c9be2669c958c368ff3b370a68d3569be8f5","patch":"@@ -119,7 +119,7 @@ protected List<IColumn<AnyTypeClassTO, String>> getColumns() {\n         final List<IColumn<AnyTypeClassTO, String>> columns = new ArrayList<>();\n \n         for (Field field : AnyTypeClassTO.class.getDeclaredFields()) {\n-            if (field != null && !Modifier.isStatic(field.getModifiers())) {\n+            if (!field.isSynthetic() && !Modifier.isStatic(field.getModifiers())) {\n                 final String fieldName = field.getName();\n                 if (field.getType().isArray()\n                         || Collection.class.isAssignableFrom(field.getType())"},{"sha":"7f75281ec9ead461fa3b1eb97a56f89b47ab93fd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypesPanel.java?ref=5f98c9be2669c958c368ff3b370a68d3569be8f5","patch":"@@ -118,7 +118,7 @@ protected List<IColumn<AnyTypeTO, String>> getColumns() {\n         final List<IColumn<AnyTypeTO, String>> columns = new ArrayList<>();\n \n         for (Field field : AnyTypeTO.class.getDeclaredFields()) {\n-            if (field != null && !Modifier.isStatic(field.getModifiers())) {\n+            if (!field.isSynthetic() && !Modifier.isStatic(field.getModifiers())) {\n                 final String fieldName = field.getName();\n                 if (field.getType().isArray()\n                         || Collection.class.isAssignableFrom(field.getType())"},{"sha":"6fb90bfbe1723f7ce031e0e0b28198eb56869f49","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/BeanPanel.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java?ref=5f98c9be2669c958c368ff3b370a68d3569be8f5","patch":"@@ -95,19 +95,20 @@ public BeanPanel(\n         this.excluded.add(\"serialVersionUID\");\n         this.excluded.add(\"class\");\n \n-        final LoadableDetachableModel<List<String>> model = new LoadableDetachableModel<List<String>>() {\n+        LoadableDetachableModel<List<String>> model = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n             protected List<String> load() {\n-                final List<String> result = new ArrayList<>();\n+                List<String> result = new ArrayList<>();\n \n                 if (BeanPanel.this.getDefaultModelObject() != null) {\n-                    ReflectionUtils.doWithFields(BeanPanel.this.getDefaultModelObject().getClass(), field -> {\n-                        result.add(field.getName());\n-                    }, field -> !BeanPanel.this.excluded.contains(field.getName()));\n+                    ReflectionUtils.doWithFields(BeanPanel.this.getDefaultModelObject().getClass(),\n+                            field -> result.add(field.getName()),\n+                            field -> !field.isSynthetic() && !BeanPanel.this.excluded.contains(field.getName()));\n                 }\n+\n                 return result;\n             }\n         };"},{"sha":"21d90225ee545726731ae409a4900af74741df36","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=5f98c9be2669c958c368ff3b370a68d3569be8f5","patch":"@@ -152,11 +152,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             listOfItems = new ArrayList<>();\n         } else {\n             listOfItems = list;\n-            if (LOG.isDebugEnabled()) {\n-                toBeIncluded.forEach(field -> {\n-                    LOG.debug(\"Show field {}\", field);\n-                });\n-            }\n+            LOG.debug(\"Show fields {}\", toBeIncluded);\n         }\n \n         addInnerObject(header(toBeIncluded));"},{"sha":"a55bc2e806175d958e1c223062128063b59999f8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypesPanel.java?ref=5f98c9be2669c958c368ff3b370a68d3569be8f5","patch":"@@ -122,7 +122,7 @@ protected List<IColumn<RelationshipTypeTO, String>> getColumns() {\n         final List<IColumn<RelationshipTypeTO, String>> columns = new ArrayList<>();\n \n         for (Field field : RelationshipTypeTO.class.getDeclaredFields()) {\n-            if (field != null && !Modifier.isStatic(field.getModifiers())) {\n+            if (!field.isSynthetic() && !Modifier.isStatic(field.getModifiers())) {\n                 final String fieldName = field.getName();\n                 if (field.getType().isArray()\n                         || Collection.class.isAssignableFrom(field.getType())"},{"sha":"d0ccb5efefe7fd7c856a3d78d86befa14f16cb38","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f98c9be2669c958c368ff3b370a68d3569be8f5/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=5f98c9be2669c958c368ff3b370a68d3569be8f5","patch":"@@ -131,7 +131,7 @@ protected List<IColumn<SchemaTO, String>> getColumns() {\n         for (String field : COL_NAMES.get(schemaType)) {\n             Field clazzField = ReflectionUtils.findField(schemaType.getToClass(), field);\n \n-            if (clazzField != null) {\n+            if (clazzField != null && !clazzField.isSynthetic()) {\n                 if (clazzField.getType().equals(Boolean.class) || clazzField.getType().equals(boolean.class)) {\n                     columns.add(new BooleanPropertyColumn<>(new ResourceModel(field), field, field));\n                 } else {"}]}