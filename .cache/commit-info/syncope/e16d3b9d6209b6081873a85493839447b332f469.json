{"sha":"e16d3b9d6209b6081873a85493839447b332f469","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUxNmQzYjlkNjIwOWI2MDgxODczYTg1NDkzODM5NDQ3YjMzMmY0Njk=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-12-14T09:01:12Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-12-14T09:01:12Z"},"message":"Fixes SYNCOPE-459 on the branch 1.1.X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1550905 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"465a53d8448ab598abfdbef0dd7e703aa44b12d0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/465a53d8448ab598abfdbef0dd7e703aa44b12d0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e16d3b9d6209b6081873a85493839447b332f469","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e16d3b9d6209b6081873a85493839447b332f469","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e16d3b9d6209b6081873a85493839447b332f469","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e16d3b9d6209b6081873a85493839447b332f469/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"fdada804b94b385db0e50ffb28e06a42e20e621e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fdada804b94b385db0e50ffb28e06a42e20e621e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fdada804b94b385db0e50ffb28e06a42e20e621e"}],"stats":{"total":102,"additions":86,"deletions":16},"files":[{"sha":"7e44d79c212f20ff462d1f30bddd32fdd24cded5","filename":"common/src/main/java/org/apache/syncope/common/util/AttributableOperations.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e16d3b9d6209b6081873a85493839447b332f469/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e16d3b9d6209b6081873a85493839447b332f469/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Futil%2FAttributableOperations.java?ref=e16d3b9d6209b6081873a85493839447b332f469","patch":"@@ -72,7 +72,18 @@ private static void populate(final Map<String, AttributeTO> updatedAttrs,\n                     ? new HashSet<String>(originalAttrs.get(entry.getKey()).getValues())\r\n                     : Collections.<String>emptySet();\r\n \r\n-            if (!updatedValues.equals(originalValues)) {\r\n+            if (!originalAttrs.containsKey(entry.getKey())) {\r\n+                // SYNCOPE-459: take care of user virtual attributes without any value\r\n+                updatedValues.remove(\"\");\r\n+                mod.setValuesToBeAdded(new ArrayList<String>(updatedValues));\r\n+\r\n+                if (virtuals) {\r\n+                    result.addVirtualAttributeToBeUpdated(mod);\r\n+                } else {\r\n+                    result.addAttributeToBeUpdated(mod);\r\n+                }\r\n+\r\n+            } else if (!updatedValues.equals(originalValues)) {\r\n                 // avoid unwanted inputs\r\n                 updatedValues.remove(\"\");\r\n                 if (!entry.getValue().isReadonly()) {\r"},{"sha":"c750561d745a357edb9cb8197a10b4af23a0c0e8","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":20,"deletions":10,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e16d3b9d6209b6081873a85493839447b332f469/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e16d3b9d6209b6081873a85493839447b332f469/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=e16d3b9d6209b6081873a85493839447b332f469","patch":"@@ -302,7 +302,7 @@ public UserTO update(@RequestBody final UserMod userMod) {\n                     actual.getVirtualAttributesToBeRemoved(), actual.getVirtualAttributesToBeUpdated());\n         } else {\n             // 2b. generate the propagation task list in two phases: first the ones containing password,\n-            // the the rest (with no password)\n+            // the rest (with no password)\n             final PropagationByResource origPropByRes = new PropagationByResource();\n             origPropByRes.merge(updated.getPropByRes());\n \n@@ -347,11 +347,21 @@ public UserTO update(@RequestBody final UserMod userMod) {\n \n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getApplicationContext().getBean(PropagationReporter.class);\n-        try {\n-            taskExecutor.execute(tasks, propagationReporter);\n-        } catch (PropagationException e) {\n-            LOG.error(\"Error propagation primary resource\", e);\n-            propagationReporter.onPrimaryResourceFailure(tasks);\n+\n+        if (tasks.isEmpty()) {\n+            // SYNCOPE-459: take care of user virtual attributes ...\n+            binder.forceVirtualAttributes(\n+                    updated.getResult().getKey(),\n+                    actual.getVirtualAttributesToBeRemoved(),\n+                    actual.getVirtualAttributesToBeUpdated());\n+\n+        } else {\n+            try {\n+                taskExecutor.execute(tasks, propagationReporter);\n+            } catch (PropagationException e) {\n+                LOG.error(\"Error propagation primary resource\", e);\n+                propagationReporter.onPrimaryResourceFailure(tasks);\n+            }\n         }\n \n         // 4. prepare result, including propagation status on external resources\n@@ -486,7 +496,7 @@ public UserTO executeWorkflow(@RequestBody final UserTO userTO, @PathVariable(\"t\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n                 new WorkflowResult<Map.Entry<Long, Boolean>>(new SimpleEntry<Long, Boolean>(updated.getResult(), null),\n-                        updated.getPropByRes(), updated.getPerformedTasks()));\n+                updated.getPropByRes(), updated.getPerformedTasks()));\n \n         taskExecutor.execute(tasks);\n \n@@ -527,9 +537,9 @@ public UserTO submitForm(@RequestBody final WorkflowFormTO form) {\n         if (updated.getPropByRes() != null && !updated.getPropByRes().isEmpty()) {\n             List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n                     new WorkflowResult<Map.Entry<Long, Boolean>>(\n-                            new SimpleEntry<Long, Boolean>(updated.getResult().getKey(), Boolean.TRUE),\n-                            updated.getPropByRes(),\n-                            updated.getPerformedTasks()),\n+                    new SimpleEntry<Long, Boolean>(updated.getResult().getKey(), Boolean.TRUE),\n+                    updated.getPropByRes(),\n+                    updated.getPerformedTasks()),\n                     updated.getResult().getValue(),\n                     true,\n                     null,"},{"sha":"88de59f168264e7c51f9ca9b0ebac19aed5b403c","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e16d3b9d6209b6081873a85493839447b332f469/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e16d3b9d6209b6081873a85493839447b332f469/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=e16d3b9d6209b6081873a85493839447b332f469","patch":"@@ -155,7 +155,7 @@ private <T extends AbstractVirSchema> T getVirtualSchema(final String virSchemaN\n                 LOG.debug(\"Ignoring invalid virtual schema {}\", virSchemaName);\n             }\n         }\n-        \n+\n         return virtualSchema;\n     }\n "},{"sha":"449fc0e9f32135cfe35d3e57aa51ce8e26f488e5","filename":"core/src/main/java/org/apache/syncope/core/rest/data/RoleDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e16d3b9d6209b6081873a85493839447b332f469/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e16d3b9d6209b6081873a85493839447b332f469/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FRoleDataBinder.java?ref=e16d3b9d6209b6081873a85493839447b332f469","patch":"@@ -53,7 +53,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = { Throwable.class })\n public class RoleDataBinder extends AbstractAttributableDataBinder {\n \n     @Autowired"},{"sha":"41d583fae9b0d490481425b14057c7a53f827956","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":24,"deletions":3,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e16d3b9d6209b6081873a85493839447b332f469/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e16d3b9d6209b6081873a85493839447b332f469/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=e16d3b9d6209b6081873a85493839447b332f469","patch":"@@ -23,6 +23,7 @@\n import java.util.Set;\n import javax.annotation.Resource;\n import org.apache.commons.lang.StringUtils;\n+import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.MembershipTO;\n@@ -62,11 +63,11 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = { Throwable.class })\n public class UserDataBinder extends AbstractAttributableDataBinder {\n \n-    private static final String[] IGNORE_USER_PROPERTIES = {\"memberships\", \"attributes\", \"derivedAttributes\",\n-        \"virtualAttributes\", \"resources\"};\n+    private static final String[] IGNORE_USER_PROPERTIES = { \"memberships\", \"attributes\", \"derivedAttributes\",\n+        \"virtualAttributes\", \"resources\" };\n \n     @Autowired\n     private ConnObjectUtil connObjectUtil;\n@@ -408,4 +409,24 @@ public UserTO getUserTO(final String username) {\n     public UserTO getUserTO(final Long userId) {\n         return getUserTO(getUserFromId(userId));\n     }\n+\n+    /**\n+     * SYNCOPE-459: force virtual attribute changes.\n+     * <br />\n+     * To be used in case of no propagation task defined.\n+     *\n+     * @param id attributable id\n+     * @param vAttrsToBeRemoved virtual attribute to be removed.\n+     * @param vAttrsToBeUpdated virtyal attribute to be updated.\n+     */\n+    public void forceVirtualAttributes(\n+            final Long id, final Set<String> vAttrsToBeRemoved, final Set<AttributeMod> vAttrsToBeUpdated) {\n+        final SyncopeUser syncopeUser = getUserFromId(id);\n+\n+        fillVirtual(\n+                syncopeUser,\n+                vAttrsToBeRemoved,\n+                vAttrsToBeUpdated,\n+                AttributableUtil.getInstance(syncopeUser));\n+    }\n }"},{"sha":"ef2b6f8d940f1ae063c149a636d14f7f589dd851","filename":"core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e16d3b9d6209b6081873a85493839447b332f469/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e16d3b9d6209b6081873a85493839447b332f469/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java?ref=e16d3b9d6209b6081873a85493839447b332f469","patch":"@@ -519,4 +519,32 @@ public void issueSYNCOPE453() {\n         roleService.delete(roleTO.getId());\n         // -------------------------------------------\n     }\n+\n+    @Test\n+    public void issueSYNCOPE459() {\n+        UserTO userTO = getUniqueSampleTO(\"syncope459@apache.org\");\n+        userTO.getResources().clear();\n+        userTO.getMemberships().clear();\n+        userTO.getVirtualAttributes().clear();\n+\n+        final AttributeTO virtualReadOnly = attributeTO(\"virtualReadOnly\", \"\");\n+        virtualReadOnly.getValues().clear();\n+\n+        userTO.addVirtualAttribute(virtualReadOnly);\n+\n+        userTO = createUser(userTO);\n+\n+        assertNotNull(userTO.getVirtualAttributeMap().get(\"virtualReadOnly\"));\n+\n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+\n+        AttributeMod virtualdata = new AttributeMod();\n+        virtualdata.setSchema(\"virtualdata\");\n+\n+        userMod.addVirtualAttributeToBeUpdated(virtualdata);\n+\n+        userTO = userService.update(userTO.getId(), userMod);\n+        assertNotNull(userTO.getVirtualAttributeMap().get(\"virtualdata\"));\n+    }\n }"}]}