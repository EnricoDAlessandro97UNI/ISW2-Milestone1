{"sha":"e6e560a488409b15674faaa24b895ec37dc7e045","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU2ZTU2MGE0ODg0MDliMTU2NzRmYWFhMjRiODk1ZWMzN2RjN2UwNDU=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-30T11:26:24Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-30T11:26:24Z"},"message":"Reverting some useless (and Hibernate-killer) modifications\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247384 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"be2ee8972a3ddf0e0d3c3fa8c919d86b9db10f01","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/be2ee8972a3ddf0e0d3c3fa8c919d86b9db10f01"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e6e560a488409b15674faaa24b895ec37dc7e045","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e6e560a488409b15674faaa24b895ec37dc7e045","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e6e560a488409b15674faaa24b895ec37dc7e045","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e6e560a488409b15674faaa24b895ec37dc7e045/comments","author":null,"committer":null,"parents":[{"sha":"e592a9c4812b90079bbab932c77e7c8d0f9006b0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e592a9c4812b90079bbab932c77e7c8d0f9006b0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e592a9c4812b90079bbab932c77e7c8d0f9006b0"}],"stats":{"total":75,"additions":39,"deletions":36},"files":[{"sha":"28c22de7b020e825383ccbf7d5cc6b504b4807a9","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=e6e560a488409b15674faaa24b895ec37dc7e045","patch":"@@ -153,22 +153,22 @@ public abstract <T extends AbstractVirAttr> boolean removeVirtualAttribute(\n     public abstract void setVirtualAttributes(\n             List<? extends AbstractVirAttr> virtualAttributes);\n \n-    protected abstract List<ExternalResource> resources();\n+    protected abstract Set<ExternalResource> resources();\n \n     public boolean addResource(final ExternalResource resource) {\n-        return resources().contains(resource) || resources().add(resource);\n+        return resources().add(resource);\n     }\n \n     public boolean removeResource(final ExternalResource resource) {\n         return resources().remove(resource);\n     }\n \n-    public List<ExternalResource> getResources() {\n+    public Set<ExternalResource> getResources() {\n         return resources();\n     }\n \n     public Set<String> getResourceNames() {\n-        List<ExternalResource> ownResources = getResources();\n+        Set<ExternalResource> ownResources = getResources();\n \n         Set<String> result = new HashSet<String>(ownResources.size());\n         for (ExternalResource resource : ownResources) {\n@@ -178,7 +178,7 @@ public Set<String> getResourceNames() {\n         return result;\n     }\n \n-    public void setResources(final List<ExternalResource> resources) {\n+    public void setResources(final Set<ExternalResource> resources) {\n         resources().clear();\n         if (resources != null) {\n             resources().addAll(resources);"},{"sha":"11990da9cd840e28942c8add0227238d26e7f2b2","filename":"core/src/main/java/org/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=e6e560a488409b15674faaa24b895ec37dc7e045","patch":"@@ -14,10 +14,8 @@\n  */\n package org.syncope.core.persistence.beans;\n \n-import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashSet;\n-import java.util.List;\n import java.util.Set;\n import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n@@ -78,11 +76,14 @@ public class ExternalResource extends AbstractBaseBean {\n \n     /**\n      * Attribute mappings.\n+     *\n+     * List type cannot be used. Please, take a look at\n+     * https://hibernate.onjira.com/browse/HHH-1718\n      */\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true,\n     fetch = FetchType.EAGER, mappedBy = \"resource\")\n     @Valid\n-    private List<SchemaMapping> mappings;\n+    private Set<SchemaMapping> mappings;\n \n     /**\n      * A JEXL expression for determining how to link user account id in Syncope\n@@ -153,7 +154,7 @@ public ExternalResource() {\n         super();\n \n         forceMandatoryConstraint = getBooleanAsInteger(false);\n-        mappings = new ArrayList<SchemaMapping>();\n+        mappings = new HashSet<SchemaMapping>();\n         propagationPrimary = 0;\n         propagationPriority = 0;\n         propagationMode = PropagationMode.TWO_PHASES;\n@@ -207,14 +208,14 @@ public void setPropagationMode(PropagationMode propagationMode) {\n         this.propagationMode = propagationMode;\n     }\n \n-    public List<SchemaMapping> getMappings() {\n+    public Set<SchemaMapping> getMappings() {\n         return mappings;\n     }\n \n-    public List<SchemaMapping> getMappings(final String intAttrName,\n+    public Set<SchemaMapping> getMappings(final String intAttrName,\n             final IntMappingType intMappingType) {\n \n-        List<SchemaMapping> result = new ArrayList<SchemaMapping>();\n+        Set<SchemaMapping> result = new HashSet<SchemaMapping>();\n         for (SchemaMapping mapping : mappings) {\n             if (intAttrName.equals(mapping.getIntAttrName())\n                     && mapping.getIntMappingType() == intMappingType) {"},{"sha":"3e045fc0ad1155583c74c0c804cec5b818af16a0","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=e6e560a488409b15674faaa24b895ec37dc7e045","patch":"@@ -26,8 +26,8 @@\n import javax.persistence.Table;\n import javax.persistence.UniqueConstraint;\n import javax.validation.Valid;\n-import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.AbstractAttr;\n+import org.syncope.core.persistence.beans.AbstractAttributable;\n import org.syncope.core.persistence.beans.AbstractDerAttr;\n import org.syncope.core.persistence.beans.AbstractVirAttr;\n import org.syncope.core.persistence.beans.ExternalResource;\n@@ -79,8 +79,8 @@ public Long getId() {\n     }\n \n     @Override\n-    protected List<ExternalResource> resources() {\n-        return Collections.EMPTY_LIST;\n+    protected Set<ExternalResource> resources() {\n+        return Collections.EMPTY_SET;\n     }\n \n     public SyncopeRole getSyncopeRole() {\n@@ -185,8 +185,8 @@ public boolean removeResource(final ExternalResource resource) {\n     }\n \n     @Override\n-    public List<ExternalResource> getResources() {\n-        return Collections.EMPTY_LIST;\n+    public Set<ExternalResource> getResources() {\n+        return Collections.EMPTY_SET;\n     }\n \n     @Override\n@@ -195,7 +195,7 @@ public Set<String> getResourceNames() {\n     }\n \n     @Override\n-    public void setResources(final List<ExternalResource> resources) {\n+    public void setResources(final Set<ExternalResource> resources) {\n     }\n \n     @Override"},{"sha":"1103f682214e6453ce19f61ee4307c0e7123550c","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=e6e560a488409b15674faaa24b895ec37dc7e045","patch":"@@ -17,8 +17,10 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n@@ -73,7 +75,7 @@ public class SyncopeRole extends AbstractAttributable {\n     @JoinColumn(name = \"role_id\"),\n     inverseJoinColumns =\n     @JoinColumn(name = \"entitlement_name\"))\n-    private List<Entitlement> entitlements;\n+    private Set<Entitlement> entitlements;\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n@@ -127,12 +129,12 @@ public class SyncopeRole extends AbstractAttributable {\n     inverseJoinColumns =\n     @JoinColumn(name = \"resource_name\"))\n     @Valid\n-    private List<ExternalResource> resources;\n+    private Set<ExternalResource> resources;\n \n     public SyncopeRole() {\n         super();\n \n-        entitlements = new ArrayList<Entitlement>();\n+        entitlements = new HashSet<Entitlement>();\n         attributes = new ArrayList<RAttr>();\n         derivedAttributes = new ArrayList<RDerAttr>();\n         virtualAttributes = new ArrayList<RVirAttr>();\n@@ -141,7 +143,7 @@ public SyncopeRole() {\n         inheritVirtualAttributes = getBooleanAsInteger(false);\n         inheritPasswordPolicy = getBooleanAsInteger(false);\n         inheritAccountPolicy = getBooleanAsInteger(false);\n-        resources = new ArrayList<ExternalResource>();\n+        resources = new HashSet<ExternalResource>();\n     }\n \n     @Override\n@@ -150,7 +152,7 @@ public Long getId() {\n     }\n \n     @Override\n-    protected List<ExternalResource> resources() {\n+    protected Set<ExternalResource> resources() {\n         return resources;\n     }\n \n@@ -171,15 +173,14 @@ public void setParent(SyncopeRole parent) {\n     }\n \n     public boolean addEntitlement(final Entitlement entitlement) {\n-        return entitlements.contains(entitlement)\n-                || entitlements.add(entitlement);\n+        return entitlements.add(entitlement);\n     }\n \n     public boolean removeEntitlement(final Entitlement entitlement) {\n         return entitlements.remove(entitlement);\n     }\n \n-    public List<Entitlement> getEntitlements() {\n+    public Set<Entitlement> getEntitlements() {\n         return entitlements;\n     }\n "},{"sha":"a482d21c06a29bee33a408bf884a1b2d8d2ec270","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=e6e560a488409b15674faaa24b895ec37dc7e045","patch":"@@ -173,7 +173,7 @@ public class SyncopeUser extends AbstractAttributable {\n     @JoinColumn(name = \"user_id\"),\n     inverseJoinColumns =\n     @JoinColumn(name = \"resource_name\"))\n-    private List<ExternalResource> resources;\n+    private Set<ExternalResource> resources;\n \n     public SyncopeUser() {\n         super();\n@@ -185,7 +185,7 @@ public SyncopeUser() {\n         passwordHistory = new ArrayList<String>();\n         failedLogins = 0;\n         suspended = getBooleanAsInteger(Boolean.FALSE);\n-        resources = new ArrayList<ExternalResource>();\n+        resources = new HashSet<ExternalResource>();\n     }\n \n     @Override\n@@ -194,7 +194,7 @@ public Long getId() {\n     }\n \n     @Override\n-    protected List<ExternalResource> resources() {\n+    protected Set<ExternalResource> resources() {\n         return resources;\n     }\n \n@@ -258,8 +258,8 @@ public Set<Long> getRoleIds() {\n     }\n \n     @Override\n-    public List<ExternalResource> getResources() {\n-        List<ExternalResource> result = new ArrayList<ExternalResource>();\n+    public Set<ExternalResource> getResources() {\n+        Set<ExternalResource> result = new HashSet<ExternalResource>();\n         result.addAll(super.getResources());\n         for (SyncopeRole role : getRoles()) {\n             result.addAll(role.getResources());"},{"sha":"148442db24361a5137648152af166c7f621fa54a","filename":"core/src/main/java/org/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=e6e560a488409b15674faaa24b895ec37dc7e045","patch":"@@ -14,7 +14,6 @@\n  */\n package org.syncope.core.rest.data;\n \n-import org.syncope.core.util.AttributableUtil;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashSet;\n@@ -52,12 +51,13 @@\n import org.syncope.core.persistence.dao.MembershipDAO;\n import org.syncope.core.persistence.dao.PolicyDAO;\n import org.syncope.core.persistence.dao.ResourceDAO;\n-import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.RoleDAO;\n+import org.syncope.core.persistence.dao.SchemaDAO;\n import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.persistence.dao.VirAttrDAO;\n import org.syncope.core.persistence.dao.VirSchemaDAO;\n import org.syncope.core.propagation.PropagationByResource;\n+import org.syncope.core.util.AttributableUtil;\n import org.syncope.core.util.JexlUtil;\n import org.syncope.types.PropagationOperation;\n import org.syncope.types.SyncopeClientExceptionType;\n@@ -238,7 +238,7 @@ private boolean evaluateMandatoryCondition(\n     }\n \n     private boolean evaluateMandatoryCondition(\n-            final List<ExternalResource> resources,\n+            final Collection<ExternalResource> resources,\n             final List<? extends AbstractAttr> attributes,\n             final String intAttrName,\n             final AttributableUtil attributableUtil) {"},{"sha":"3993cc3f9d1af87c991ed9524468c4c7322afe3e","filename":"core/src/test/java/org/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=e6e560a488409b15674faaa24b895ec37dc7e045","patch":"@@ -17,6 +17,7 @@\n import static org.junit.Assert.*;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Set;\n import org.connid.bundles.soap.WebServiceConnector;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -55,7 +56,7 @@ public void findById() {\n         assertEquals(\"invalid bundle version\",\n                 connidSoapVersion, connector.getVersion());\n \n-        List<SchemaMapping> mappings = resource.getMappings();\n+        Set<SchemaMapping> mappings = resource.getMappings();\n         assertNotNull(\"mappings not found\", mappings);\n         assertFalse(\"no mapping specified\", mappings.isEmpty());\n "},{"sha":"b48f3f1f596b6ddc1d1cffc72bfe635ebb8ff552","filename":"core/src/test/java/org/syncope/core/persistence/relationships/ResourceTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e6e560a488409b15674faaa24b895ec37dc7e045/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FResourceTest.java?ref=e6e560a488409b15674faaa24b895ec37dc7e045","patch":"@@ -222,7 +222,7 @@ public void save() {\n         assertTrue(resource.getConnector().equals(connector));\n \n         // check mappings\n-        List<SchemaMapping> schemaMappings = resource.getMappings();\n+        Set<SchemaMapping> schemaMappings = resource.getMappings();\n         assertNotNull(schemaMappings);\n         assertEquals(5, schemaMappings.size());\n "}]}