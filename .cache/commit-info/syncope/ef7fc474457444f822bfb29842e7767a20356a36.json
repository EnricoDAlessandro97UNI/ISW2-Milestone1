{"sha":"ef7fc474457444f822bfb29842e7767a20356a36","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVmN2ZjNDc0NDU3NDQ0ZjgyMmJmYjI5ODQyZTc3NjdhMjAzNTZhMzY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-04T12:01:35Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-08-04T12:01:35Z"},"message":"[SYNCOPE-916] Restoring table filter","tree":{"sha":"8946d976c36ced94a7e96e983ed5e37887564207","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8946d976c36ced94a7e96e983ed5e37887564207"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ef7fc474457444f822bfb29842e7767a20356a36","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ef7fc474457444f822bfb29842e7767a20356a36","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ef7fc474457444f822bfb29842e7767a20356a36","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ef7fc474457444f822bfb29842e7767a20356a36/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f17d110305c1606daccf1fc3ea6f39776fec6852","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f17d110305c1606daccf1fc3ea6f39776fec6852","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f17d110305c1606daccf1fc3ea6f39776fec6852"}],"stats":{"total":57,"additions":44,"deletions":13},"files":[{"sha":"b6c31b48a4edeed8260a699c7b3235fb0bf07519","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ConfigurationLogic.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef7fc474457444f822bfb29842e7767a20356a36/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef7fc474457444f822bfb29842e7767a20356a36/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java?ref=ef7fc474457444f822bfb29842e7767a20356a36","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.provisioning.api.data.ConfigurationDataBinder;\n+import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -59,6 +60,9 @@ public class ConfigurationLogic extends AbstractTransactionalLogic<AttrTO> {\n     @Autowired\n     private GroupWorkflowAdapter gwfAdapter;\n \n+    @Autowired\n+    private AnyObjectWorkflowAdapter awfAdapter;\n+\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONFIGURATION_DELETE + \"')\")\n     public void delete(final String schema) {\n         CPlainAttr conf = confDAO.find(schema);\n@@ -106,7 +110,12 @@ public void set(final AttrTO value) {\n     @Transactional(readOnly = true)\n     public void export(final OutputStream os) {\n         try {\n-            exporter.export(AuthContextUtils.getDomain(), os, uwfAdapter.getPrefix(), gwfAdapter.getPrefix());\n+            exporter.export(\n+                    AuthContextUtils.getDomain(),\n+                    os,\n+                    uwfAdapter.getPrefix(),\n+                    gwfAdapter.getPrefix(),\n+                    awfAdapter.getPrefix());\n             LOG.debug(\"Database content successfully exported\");\n         } catch (Exception e) {\n             LOG.error(\"While exporting database content\", e);"},{"sha":"4b2cf10c572fcec6b2f91c27885b11458d9e678d","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/content/ContentExporter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef7fc474457444f822bfb29842e7767a20356a36/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef7fc474457444f822bfb29842e7767a20356a36/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentExporter.java?ref=ef7fc474457444f822bfb29842e7767a20356a36","patch":"@@ -24,6 +24,6 @@\n \n public interface ContentExporter {\n \n-    void export(String domain, OutputStream output, String uwfPrefix, String rwfPrefix) \n+    void export(String domain, OutputStream output, String uwfPrefix, String gwfPrefix, String awfPrefix) \n             throws SAXException, TransformerConfigurationException;\n }"},{"sha":"7618e1b6f6588c91ed43555f8b1f3a69a7bd6e53","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java","status":"modified","additions":33,"deletions":11,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef7fc474457444f822bfb29842e7767a20356a36/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef7fc474457444f822bfb29842e7767a20356a36/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java?ref=ef7fc474457444f822bfb29842e7767a20356a36","patch":"@@ -47,6 +47,8 @@\n import javax.xml.transform.sax.SAXTransformerFactory;\n import javax.xml.transform.sax.TransformerHandler;\n import javax.xml.transform.stream.StreamResult;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -79,20 +81,30 @@\n @Component\n public class XMLContentExporter extends AbstractContentDealer implements ContentExporter {\n \n-    protected static final Set<String> TABLE_PREFIXES_TO_BE_EXCLUDED =\n-            new HashSet<>(Arrays.asList(new String[] {\n-                \"QRTZ_\", \"LOGGING\", JPAReportExec.TABLE, JPATaskExec.TABLE,\n-                JPAUser.TABLE, JPAUPlainAttr.TABLE, JPAUPlainAttrValue.TABLE, JPAUPlainAttrUniqueValue.TABLE,\n-                JPAAnyObject.TABLE, JPAAPlainAttr.TABLE, JPAAPlainAttrValue.TABLE, JPAAPlainAttrUniqueValue.TABLE,\n-                JPAARelationship.TABLE, JPAAMembership.TABLE, JPAURelationship.TABLE, JPAUMembership.TABLE\n-            }));\n+    protected static final Set<String> TABLE_PREFIXES_TO_BE_EXCLUDED = new HashSet<>(Arrays.asList(new String[] {\n+        \"QRTZ_\", \"LOGGING\", JPAReportExec.TABLE, JPATaskExec.TABLE,\n+        JPAUser.TABLE, JPAUPlainAttr.TABLE, JPAUPlainAttrValue.TABLE, JPAUPlainAttrUniqueValue.TABLE,\n+        JPAURelationship.TABLE, JPAUMembership.TABLE,\n+        JPAAnyObject.TABLE, JPAAPlainAttr.TABLE, JPAAPlainAttrValue.TABLE, JPAAPlainAttrUniqueValue.TABLE,\n+        JPAARelationship.TABLE, JPAAMembership.TABLE\n+    }));\n \n     protected static final Map<String, String> TABLES_TO_BE_FILTERED =\n             Collections.singletonMap(\"TASK\", \"DTYPE <> 'PropagationTask'\");\n \n     protected static final Map<String, Set<String>> COLUMNS_TO_BE_NULLIFIED =\n             Collections.singletonMap(\"SYNCOPEGROUP\", Collections.singleton(\"USEROWNER_ID\"));\n \n+    private boolean isTableAllowed(final String tableName) {\n+        return IterableUtils.matchesAll(TABLE_PREFIXES_TO_BE_EXCLUDED, new Predicate<String>() {\n+\n+            @Override\n+            public boolean evaluate(final String prefix) {\n+                return !tableName.toUpperCase().startsWith(prefix.toUpperCase());\n+            }\n+        });\n+    }\n+\n     private List<String> sortByForeignKeys(final String dbSchema, final Connection conn, final Set<String> tableNames)\n             throws SQLException {\n \n@@ -304,14 +316,22 @@ private void doExportTable(final TransformerHandler handler, final Connection co\n     }\n \n     @Override\n-    public void export(final String domain, final OutputStream os, final String uwfPrefix, final String rwfPrefix)\n+    public void export(\n+            final String domain,\n+            final OutputStream os,\n+            final String uwfPrefix,\n+            final String gwfPrefix,\n+            final String awfPrefix)\n             throws SAXException, TransformerConfigurationException {\n \n         if (StringUtils.isNotBlank(uwfPrefix)) {\n             TABLE_PREFIXES_TO_BE_EXCLUDED.add(uwfPrefix);\n         }\n-        if (StringUtils.isNotBlank(rwfPrefix)) {\n-            TABLE_PREFIXES_TO_BE_EXCLUDED.add(rwfPrefix);\n+        if (StringUtils.isNotBlank(gwfPrefix)) {\n+            TABLE_PREFIXES_TO_BE_EXCLUDED.add(gwfPrefix);\n+        }\n+        if (StringUtils.isNotBlank(awfPrefix)) {\n+            TABLE_PREFIXES_TO_BE_EXCLUDED.add(awfPrefix);\n         }\n \n         StreamResult streamResult = new StreamResult(os);\n@@ -346,7 +366,9 @@ public void export(final String domain, final OutputStream os, final String uwfP\n             while (rs.next()) {\n                 String tableName = rs.getString(\"TABLE_NAME\");\n                 LOG.debug(\"Found table {}\", tableName);\n-                tableNames.add(tableName);\n+                if (isTableAllowed(tableName)) {\n+                    tableNames.add(tableName);\n+                }\n             }\n \n             LOG.debug(\"Tables to be exported {}\", tableNames);"}]}