{"sha":"7300f2ff03144768464e246321be8fac6987877f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjczMDBmMmZmMDMxNDQ3Njg0NjRlMjQ2MzIxYmU4ZmFjNjk4Nzg3N2Y=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-02T10:14:35Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-02T10:14:35Z"},"message":"[SYNCOPE-155] Moving from static initialization to proper Wicket application's init","tree":{"sha":"00efaa386a7aca2589ecbe5369de7696c3016d55","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/00efaa386a7aca2589ecbe5369de7696c3016d55"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7300f2ff03144768464e246321be8fac6987877f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7300f2ff03144768464e246321be8fac6987877f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7300f2ff03144768464e246321be8fac6987877f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7300f2ff03144768464e246321be8fac6987877f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4af3335a7544f39e7020a4df5c91ed2799b33bf0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4af3335a7544f39e7020a4df5c91ed2799b33bf0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4af3335a7544f39e7020a4df5c91ed2799b33bf0"}],"stats":{"total":56,"additions":26,"deletions":30},"files":[{"sha":"ce7b15523836fac407bc5792b6fda5b944aba155","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":26,"deletions":30,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7300f2ff03144768464e246321be8fac6987877f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7300f2ff03144768464e246321be8fac6987877f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=7300f2ff03144768464e246321be8fac6987877f","patch":"@@ -77,18 +77,36 @@ Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\")\n \n     private static final String ACTIVITI_MODELER_CONTEXT = \"activiti-modeler\";\n \n-    private static Map<String, Class<? extends BasePage>> PAGE_CLASSES;\n+    public static SyncopeConsoleApplication get() {\n+        return (SyncopeConsoleApplication) WebApplication.get();\n+    }\n+\n+    private String version;\n+\n+    private String site;\n+\n+    private String license;\n+\n+    private String anonymousUser;\n+\n+    private String anonymousKey;\n+\n+    private String activitiModelerDirectory;\n+\n+    private SyncopeClientFactoryBean clientFactory;\n+\n+    private Map<String, Class<? extends BasePage>> pageClasses;\n \n     @SuppressWarnings(\"unchecked\")\n-    private static void populatePageClasses(final Properties props) {\n-        Enumeration<String> propNames = (Enumeration<String>) props.propertyNames();\n+    protected void populatePageClasses(final Properties props) {\n+        Enumeration<String> propNames = (Enumeration<String>) props.<String>propertyNames();\n         while (propNames.hasMoreElements()) {\n             String name = propNames.nextElement();\n             if (name.startsWith(\"page.\")) {\n                 try {\n                     Class<?> clazz = ClassUtils.getClass(props.getProperty(name));\n                     if (BasePage.class.isAssignableFrom(clazz)) {\n-                        PAGE_CLASSES.put(\n+                        pageClasses.put(\n                                 StringUtils.substringAfter(\"page.\", name), (Class<? extends BasePage>) clazz);\n                     } else {\n                         LOG.warn(\"{} does not extend {}, ignoring...\", clazz.getName(), BasePage.class.getName());\n@@ -100,24 +118,6 @@ private static void populatePageClasses(final Properties props) {\n         }\n     }\n \n-    public static SyncopeConsoleApplication get() {\n-        return (SyncopeConsoleApplication) WebApplication.get();\n-    }\n-\n-    private String version;\n-\n-    private String site;\n-\n-    private String license;\n-\n-    private String anonymousUser;\n-\n-    private String anonymousKey;\n-\n-    private String activitiModelerDirectory;\n-\n-    private SyncopeClientFactoryBean clientFactory;\n-\n     @Override\n     protected void init() {\n         super.init();\n@@ -160,13 +160,9 @@ protected void init() {\n         clientFactory = new SyncopeClientFactoryBean().setAddress(scheme + \"://\" + host + \":\" + port + \"/\" + rootPath);\n \n         // process page properties\n-        synchronized (LOG) {\n-            if (PAGE_CLASSES == null) {\n-                PAGE_CLASSES = new HashMap<>();\n-                populatePageClasses(props);\n-                PAGE_CLASSES = Collections.unmodifiableMap(PAGE_CLASSES);\n-            }\n-        }\n+        pageClasses = new HashMap<>();\n+        populatePageClasses(props);\n+        pageClasses = Collections.unmodifiableMap(pageClasses);\n \n         // Application settings\n         IBootstrapSettings settings = new BootstrapSettings();\n@@ -264,7 +260,7 @@ public Class<? extends Page> getHomePage() {\n     }\n \n     public Class<? extends BasePage> getPageClass(final String key) {\n-        return PAGE_CLASSES.get(key);\n+        return pageClasses.get(key);\n     }\n \n     public String getVersion() {"}]}