{"sha":"2b0960de57a0faa07fe470003f4f0901ad4a8ad4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJiMDk2MGRlNTdhMGZhYTA3ZmU0NzAwMDNmNGYwOTAxYWQ0YThhZDQ=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-05-03T18:48:55Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-05-03T18:48:55Z"},"message":"[SYNCOPE-745] report reportlet management","tree":{"sha":"c79fad10a645997eac6390b22fe98f826e631cb0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c79fad10a645997eac6390b22fe98f826e631cb0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2b0960de57a0faa07fe470003f4f0901ad4a8ad4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2b0960de57a0faa07fe470003f4f0901ad4a8ad4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2b0960de57a0faa07fe470003f4f0901ad4a8ad4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"c6ad7270d0f66a4d63acff5b992c144ed439139b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c6ad7270d0f66a4d63acff5b992c144ed439139b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c6ad7270d0f66a4d63acff5b992c144ed439139b"}],"stats":{"total":1472,"additions":1394,"deletions":78},"files":[{"sha":"38dba85c571d9a30e0fa4fa378d919cbf5a9bfe8","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -110,6 +110,10 @@ public final class Constants {\n \n     public static final String PREF_PROPAGATION_TASKS_PAGINATOR_ROWS = \"proagationtasks.paginator.rows\";\n \n+    public static final String PREF_REPORT_TASKS_PAGINATOR_ROWS = \"report.paginator.rows\";\n+\n+    public static final String PREF_REPORTLET_TASKS_PAGINATOR_ROWS = \"reportlet.paginator.rows\";\n+\n     public static final String PREF_TASK_EXECS_PAGINATOR_ROWS = \"task.execs.paginator.rows\";\n \n     public static final String PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS = \"notificationtasks.paginator.rows\";"},{"sha":"b3a2c93e45088f4eb21d1141a1ce0054de2d96b8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardPanel.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardPanel.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -28,15 +28,11 @@\n import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class ParametersCreateWizardPanel extends AjaxWizardBuilder<ParametersCreateWizardPanel.ParametersForm> {\n \n     private static final long serialVersionUID = -2868592590785581481L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(ParametersCreateWizardPanel.class);\n-\n     public ParametersCreateWizardPanel(final ParametersForm defaultItem, final PageReference pageRef) {\n         super(defaultItem, pageRef);\n "},{"sha":"327164780261d02a314b4d731513ee55f097abae","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -690,7 +690,7 @@ public String getObject(final String id, final IModel<? extends List<? extends S\n \n         @Override\n         public Object getDisplayValue(final String object) {\n-            return groupNames.getObject().get(Long.parseLong(object));\n+            return groupNames.getObject().get(object);\n         }\n     }\n "},{"sha":"6857e2000eaca68e3949b5e2b9eb6dd049c1bc3e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchUtils.java","status":"modified","additions":24,"deletions":5,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -117,7 +117,16 @@ public static SearchClause getPrimitiveSearchClause(final SearchCondition<Search\n \n         LOG.info(\"Condition: \" + sc.getCondition());\n \n-        if (SpecialAttr.GROUPS.toString().equals(property)) {\n+        if (SpecialAttr.ROLES.toString().equals(property)) {\n+            res.setType(SearchClause.Type.ROLE_MEMBERSHIP);\n+            res.setProperty(value);\n+        } else if (SpecialAttr.RELATIONSHIPS.toString().equals(property)) {\n+            res.setType(SearchClause.Type.RELATIONSHIP);\n+            res.setProperty(value);\n+        } else if (SpecialAttr.RELATIONSHIP_TYPES.toString().equals(property)) {\n+            res.setType(SearchClause.Type.RELATIONSHIP);\n+            res.setProperty(value);\n+        } else if (SpecialAttr.GROUPS.toString().equals(property)) {\n             res.setType(SearchClause.Type.GROUP_MEMBERSHIP);\n             res.setProperty(value);\n         } else if (SpecialAttr.RESOURCES.toString().equals(property)) {\n@@ -129,13 +138,23 @@ public static SearchClause getPrimitiveSearchClause(final SearchCondition<Search\n \n         switch (sc.getConditionType()) {\n             case EQUALS:\n-                res.setComparator(SpecialAttr.NULL.toString().equals(value)\n-                        ? SearchClause.Comparator.IS_NULL : SearchClause.Comparator.EQUALS);\n+                if (SpecialAttr.RELATIONSHIP_TYPES.toString().equals(property)) {\n+                    res.setComparator(SpecialAttr.NULL.toString().equals(value)\n+                            ? SearchClause.Comparator.EQUALS : SearchClause.Comparator.IS_NULL);\n+                } else {\n+                    res.setComparator(SpecialAttr.NULL.toString().equals(value)\n+                            ? SearchClause.Comparator.IS_NULL : SearchClause.Comparator.EQUALS);\n+                }\n                 break;\n \n             case NOT_EQUALS:\n-                res.setComparator(SpecialAttr.NULL.toString().equals(value)\n-                        ? SearchClause.Comparator.IS_NOT_NULL : SearchClause.Comparator.NOT_EQUALS);\n+                if (SpecialAttr.RELATIONSHIP_TYPES.toString().equals(property)) {\n+                    res.setComparator(SpecialAttr.NULL.toString().equals(value)\n+                            ? SearchClause.Comparator.NOT_EQUALS : SearchClause.Comparator.IS_NOT_NULL);\n+                } else {\n+                    res.setComparator(SpecialAttr.NULL.toString().equals(value)\n+                            ? SearchClause.Comparator.IS_NOT_NULL : SearchClause.Comparator.NOT_EQUALS);\n+                }\n                 break;\n \n             case GREATER_OR_EQUALS:"},{"sha":"cb5336bf6c64f1d7f923cbe2e253568357dac3bd","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportDirectoryPanel.java","status":"modified","additions":31,"deletions":8,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.reports;\n \n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -36,6 +37,7 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -52,6 +54,7 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n@@ -63,6 +66,8 @@\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n+    private final BaseModal<ReportTO> reportletModal = new BaseModal<ReportTO>(\"outer\");\n+\n     private final ReportStartAtTogglePanel startAt;\n \n     protected ReportDirectoryPanel(final MultilevelPanel multiLevelPanelRef, final PageReference pageRef) {\n@@ -72,6 +77,7 @@ protected ReportDirectoryPanel(final MultilevelPanel multiLevelPanelRef, final P\n         this.addNewItemPanelBuilder(new ReportWizardBuilder(new ReportTO(), pageRef), true);\n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.REPORT_CREATE);\n \n+        modal.size(Modal.Size.Large);\n         initResultTable();\n \n         startAt = new ReportStartAtTogglePanel(container);\n@@ -113,15 +119,31 @@ protected List<IColumn<ReportTO, String>> getColumns() {\n             @Override\n             public ActionLinksPanel<ReportTO> getActions(final String componentId, final IModel<ReportTO> model) {\n \n-                final ReportTO reportTO = model.getObject();\n-\n                 final ActionLinksPanel<ReportTO> panel = ActionLinksPanel.<ReportTO>builder().\n                         add(new ActionLink<ReportTO>() {\n \n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportTO modelObject) {\n+                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n+                                target.add(modal.setContent(new ReportletDirectoryPanel(\n+                                        modal, model.getObject().getKey(), pageRef)));\n+\n+                                modal.header(new StringResourceModel(\n+                                        \"reportlet.conf\", ReportDirectoryPanel.this, Model.of(model.getObject())));\n+\n+                                MetaDataRoleAuthorizationStrategy.authorize(\n+                                        modal.getForm(), ENABLE, StandardEntitlement.RESOURCE_UPDATE);\n+\n+                                modal.show(true);\n+                            }\n+                        }, ActionLink.ActionType.COMPOSE, StandardEntitlement.REPORT_UPDATE).\n+                        add(new ActionLink<ReportTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n                                 final ReportTO clone = SerializationUtils.clone(model.getObject());\n                                 clone.setKey(null);\n                                 send(ReportDirectoryPanel.this, Broadcast.EXACT,\n@@ -133,7 +155,7 @@ public void onClick(final AjaxRequestTarget target, final ReportTO modelObject)\n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportTO modelObject) {\n+                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n                                 send(ReportDirectoryPanel.this, Broadcast.EXACT,\n                                         new AjaxWizard.EditItemActionEvent<>(\n                                                 restClient.read(model.getObject().getKey()), target));\n@@ -144,8 +166,8 @@ public void onClick(final AjaxRequestTarget target, final ReportTO modelObject)\n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportTO modelObject) {\n-                                viewTask(reportTO, target);\n+                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n+                                viewTask(model.getObject(), target);\n                             }\n                         }, ActionLink.ActionType.VIEW, StandardEntitlement.REPORT_READ).\n                         add(new ActionLink<ReportTO>() {\n@@ -164,7 +186,8 @@ public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n                             private static final long serialVersionUID = -3722207913631435501L;\n \n                             @Override\n-                            public void onClick(final AjaxRequestTarget target, final ReportTO modelObject) {\n+                            public void onClick(final AjaxRequestTarget target, final ReportTO ignore) {\n+                                final ReportTO reportTO = model.getObject();\n                                 try {\n                                     restClient.delete(reportTO.getKey());\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n@@ -217,7 +240,7 @@ protected ReportDataProvider dataProvider() {\n \n     @Override\n     protected String paginatorRowsKey() {\n-        return Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS;\n+        return Constants.PREF_REPORT_TASKS_PAGINATOR_ROWS;\n     }\n \n     protected abstract void viewTask(final ReportTO reportTO, final AjaxRequestTarget target);"},{"sha":"f2ddf6bed141ee1ea4f2b35952c1b6329fb3c27b","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportTemplateDirectoryPanel.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportTemplateDirectoryPanel.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -68,10 +68,6 @@ public ReportTemplateDirectoryPanel(final String id, final PageReference pageRef\n         super(id, pageReference, true);\n         disableCheckBoxes();\n \n-        modal.size(Modal.Size.Small);\n-        modal.addSubmitButton();\n-        setFooterVisibility(true);\n-\n         addOuterObject(utilityModal);\n         setWindowClosedReloadCallback(utilityModal);\n         utilityModal.size(Modal.Size.Large);"},{"sha":"15f754a8398277df7bf095975a22e82ab022291a","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"added","additions":334,"deletions":0,"changes":334,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,334 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.reports;\n+\n+import static org.apache.wicket.Component.ENABLE;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.panels.DirectoryPanel;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.reports.ReportletDirectoryPanel.ReportletWrapper;\n+import org.apache.syncope.client.console.rest.ReportRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.report.AbstractReportletConf;\n+import org.apache.syncope.common.lib.report.ReportletConf;\n+import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+/**\n+ * Reportlets page.\n+ */\n+public class ReportletDirectoryPanel extends DirectoryPanel<\n+        ReportletWrapper, ReportletWrapper, DirectoryDataProvider<ReportletWrapper>, ReportRestClient>\n+        implements ModalPanel {\n+\n+    private static final long serialVersionUID = 4984337552918213290L;\n+\n+    private final BaseModal<ReportTO> baseModal;\n+\n+    private final String report;\n+\n+    protected ReportletDirectoryPanel(\n+            final BaseModal<ReportTO> baseModal, final String report, final PageReference pageRef) {\n+        super(BaseModal.CONTENT_ID, pageRef, false);\n+        this.baseModal = baseModal;\n+        this.report = report;\n+        this.restClient = new ReportRestClient();\n+\n+        enableExitButton();\n+\n+        this.addNewItemPanelBuilder(new ReportletWizardBuilder(\n+                report, new ReportletWrapper(), pageRef).setEventSink(ReportletDirectoryPanel.this), true);\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.REPORT_UPDATE);\n+        restClient = new ReportRestClient();\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected List<IColumn<ReportletWrapper, String>> getColumns() {\n+        final List<IColumn<ReportletWrapper, String>> columns = new ArrayList<>();\n+\n+        columns.add(new PropertyColumn<ReportletWrapper, String>(\n+                new StringResourceModel(\"reportlet\", this, null), \"name\", \"name\"));\n+\n+        columns.add(new AbstractColumn<ReportletWrapper, String>(\n+                new StringResourceModel(\"configuration\", this, null)) {\n+\n+            private static final long serialVersionUID = -4008579357070833846L;\n+\n+            @Override\n+            public void populateItem(\n+                    final Item<ICellPopulator<ReportletWrapper>> cellItem,\n+                    final String componentId,\n+                    final IModel<ReportletWrapper> rowModel) {\n+                cellItem.add(new Label(componentId, rowModel.getObject().getConf().getClass().getName()));\n+            }\n+        });\n+\n+        columns.add(new ActionColumn<ReportletWrapper, String>(new ResourceModel(\"actions\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public ActionLinksPanel<ReportletWrapper> getActions(final String componentId,\n+                    final IModel<ReportletWrapper> model) {\n+\n+                final ActionLinksPanel<ReportletWrapper> panel = ActionLinksPanel.<ReportletWrapper>builder().\n+                        add(new ActionLink<ReportletWrapper>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n+                                AbstractReportletConf clone = SerializationUtils.clone(model.getObject().getConf());\n+                                clone.setName(null);\n+\n+                                send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(\n+                                                new ReportletWrapper().setConf(clone),\n+                                                target));\n+                            }\n+                        }, ActionLink.ActionType.CLONE, StandardEntitlement.REPORT_UPDATE).\n+                        add(new ActionLink<ReportletWrapper>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n+                                send(ReportletDirectoryPanel.this, Broadcast.EXACT,\n+                                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+                            }\n+                        }, ActionLink.ActionType.EDIT, StandardEntitlement.REPORT_UPDATE).\n+                        add(new ActionLink<ReportletWrapper>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n+                                final ReportletConf reportlet = model.getObject().getConf();\n+                                try {\n+                                    final ReportTO actual = restClient.read(report);\n+                                    CollectionUtils.filter(actual.getReportletConfs(), new Predicate<ReportletConf>() {\n+\n+                                        @Override\n+                                        public boolean evaluate(final ReportletConf object) {\n+                                            return !object.getName().equals(reportlet.getName());\n+                                        }\n+                                    });\n+                                    restClient.update(actual);\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    customActionOnCloseCallback(target);\n+                                } catch (SyncopeClientException e) {\n+                                    LOG.error(\"While deleting {}\", reportlet.getName(), e);\n+                                    error(StringUtils.isBlank(e.getMessage())\n+                                            ? e.getClass().getName() : e.getMessage());\n+                                }\n+                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.REPORT_UPDATE).build(componentId);\n+\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<ReportletWrapper> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<ReportletWrapper> panel = ActionLinksPanel.builder();\n+\n+                return panel.add(new ActionLink<ReportletWrapper>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n+                        if (target != null) {\n+                            customActionOnCloseCallback(target);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected Collection<ActionType> getBulkActions() {\n+        final List<ActionType> bulkActions = new ArrayList<>();\n+        bulkActions.add(ActionType.DELETE);\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected ReportDataProvider dataProvider() {\n+        return new ReportDataProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_REPORTLET_TASKS_PAGINATOR_ROWS;\n+    }\n+\n+    protected class ReportDataProvider extends DirectoryDataProvider<ReportletWrapper> {\n+\n+        private static final long serialVersionUID = 4725679400450513556L;\n+\n+        private final SortableDataProviderComparator<ReportletWrapper> comparator;\n+\n+        public ReportDataProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+\n+            //Default sorting\n+            setSort(\"name\", SortOrder.DESCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<ReportletWrapper> iterator(final long first, final long count) {\n+            final ReportTO actual = restClient.read(report);\n+\n+            final ArrayList<ReportletWrapper> reportlets = CollectionUtils.collect(\n+                    actual.getReportletConfs(),\n+                    new Transformer<AbstractReportletConf, ReportletWrapper>() {\n+\n+                @Override\n+                public ReportletWrapper transform(final AbstractReportletConf input) {\n+                    return new ReportletWrapper(input.getName()).setName(input.getName()).setConf(input);\n+                }\n+            }, new ArrayList<ReportletWrapper>());\n+\n+            Collections.sort(reportlets, comparator);\n+            return reportlets.subList((int) first, (int) (first + count)).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            final ReportTO actual = restClient.read(report);\n+            return actual.getReportletConfs().size();\n+        }\n+\n+        @Override\n+        public IModel<ReportletWrapper> model(final ReportletWrapper object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+\n+    public static class ReportletWrapper implements Serializable {\n+\n+        private static final long serialVersionUID = 2472755929742424558L;\n+\n+        private String oldname;\n+\n+        private String name;\n+\n+        private AbstractReportletConf conf;\n+\n+        private final Map<String, Pair<AbstractFiqlSearchConditionBuilder, List<SearchClause>>> scondWrapper;\n+\n+        public ReportletWrapper() {\n+            this(null);\n+        }\n+\n+        public ReportletWrapper(final String name) {\n+            this.oldname = name;\n+            this.scondWrapper = new HashMap<>();\n+        }\n+\n+        public boolean isNew() {\n+            return oldname == null;\n+        }\n+\n+        public String getOldName() {\n+            return this.oldname;\n+        }\n+\n+        public String getName() {\n+            return this.name;\n+        }\n+\n+        public ReportletWrapper setName(final String name) {\n+            this.name = name;\n+            return this;\n+        }\n+\n+        public AbstractReportletConf getConf() {\n+            return conf;\n+        }\n+\n+        public ReportletWrapper setConf(final AbstractReportletConf conf) {\n+            this.conf = conf;\n+            return this;\n+        }\n+\n+        public Map<String, Pair<AbstractFiqlSearchConditionBuilder, List<SearchClause>>> getSCondWrapper() {\n+            return scondWrapper;\n+        }\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        super.onEvent(event);\n+        if (event.getPayload() instanceof ExitEvent && modal != null) {\n+            final AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n+            baseModal.show(false);\n+            baseModal.close(target);\n+        }\n+    }\n+}"},{"sha":"cf94ddfac65e26efd7f85b38799f050fd536210f","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletWizardBuilder.java","status":"added","additions":386,"deletions":0,"changes":386,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,386 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.reports;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.ParameterizedType;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n+import org.apache.syncope.client.console.panels.search.GroupSearchPanel;\n+import org.apache.syncope.client.console.panels.search.SearchClause;\n+import org.apache.syncope.client.console.panels.search.SearchUtils;\n+import org.apache.syncope.client.console.panels.search.UserSearchPanel;\n+import org.apache.syncope.client.console.rest.ReportRestClient;\n+import org.apache.syncope.client.console.rest.SchemaRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxSpinnerFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.DateTimeFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.report.AbstractReportletConf;\n+import org.apache.syncope.common.lib.report.Schema;\n+import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.springframework.beans.BeanWrapper;\n+import org.springframework.beans.PropertyAccessorFactory;\n+import org.springframework.util.ClassUtils;\n+import org.apache.syncope.common.lib.report.SearchCondition;\n+import org.apache.syncope.common.lib.search.AbstractFiqlSearchConditionBuilder;\n+import org.apache.wicket.event.IEventSink;\n+\n+public class ReportletWizardBuilder extends AjaxWizardBuilder<ReportletDirectoryPanel.ReportletWrapper> {\n+\n+    private static final long serialVersionUID = 5945391813567245081L;\n+\n+    private final ReportRestClient restClient = new ReportRestClient();\n+\n+    private final String report;\n+\n+    public ReportletWizardBuilder(\n+            final String report,\n+            final ReportletDirectoryPanel.ReportletWrapper reportlet,\n+            final PageReference pageRef) {\n+        super(reportlet, pageRef);\n+        this.report = report;\n+    }\n+\n+    public ReportletWizardBuilder setEventSink(final IEventSink eventSink) {\n+        this.eventSink = eventSink;\n+        return this;\n+    }\n+\n+    @Override\n+    protected Serializable onApplyInternal(final ReportletDirectoryPanel.ReportletWrapper modelObject) {\n+        modelObject.getConf().setName(modelObject.getName());\n+\n+        final ReportTO reportTO = restClient.read(report);\n+\n+        if (modelObject.isNew()) {\n+            reportTO.getReportletConfs().add(modelObject.getConf());\n+        } else {\n+            CollectionUtils.filter(\n+                    reportTO.getReportletConfs(), new Predicate<AbstractReportletConf>() {\n+\n+                @Override\n+                public boolean evaluate(final AbstractReportletConf object) {\n+                    return !object.getName().equals(modelObject.getOldName());\n+                }\n+            });\n+            reportTO.getReportletConfs().add(modelObject.getConf());\n+        }\n+\n+        BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(modelObject.getConf());\n+        for (Map.Entry<String, Pair<AbstractFiqlSearchConditionBuilder, List<SearchClause>>> entry\n+                : modelObject.getSCondWrapper().entrySet()) {\n+            wrapper.setPropertyValue(entry.getKey(),\n+                    SearchUtils.buildFIQL(entry.getValue().getRight(), entry.getValue().getLeft()));\n+        }\n+\n+        restClient.update(reportTO);\n+        return modelObject;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(\n+            final ReportletDirectoryPanel.ReportletWrapper modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new Profile(modelObject));\n+        wizardModel.add(new Configuration(modelObject));\n+        return wizardModel;\n+    }\n+\n+    public class Profile extends WizardStep {\n+\n+        private static final long serialVersionUID = -3043839139187792810L;\n+\n+        public Profile(final ReportletDirectoryPanel.ReportletWrapper reportlet) {\n+\n+            final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n+                    \"name\", \"reportlet\", new PropertyModel<String>(reportlet, \"name\"), false);\n+            name.addRequiredLabel();\n+            name.setEnabled(true);\n+            add(name);\n+\n+            final AjaxDropDownChoicePanel<String> conf = new AjaxDropDownChoicePanel<>(\n+                    \"configuration\", getString(\"configuration\"), new PropertyModel<String>(reportlet, \"conf\") {\n+\n+                private static final long serialVersionUID = -6427731218492117883L;\n+\n+                @Override\n+                public String getObject() {\n+                    return reportlet.getConf() == null ? null : reportlet.getConf().getClass().getName();\n+                }\n+\n+                @Override\n+                public void setObject(final String object) {\n+                    AbstractReportletConf conf = null;\n+\n+                    try {\n+                        conf = AbstractReportletConf.class.cast(Class.forName(object).newInstance());\n+                    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n+                        LOG.warn(\"Error retrieving reportlet configuration instance\", e);\n+                    }\n+\n+                    reportlet.setConf(conf);\n+                }\n+            });\n+\n+            conf.setChoices(new ArrayList<>(SyncopeConsoleSession.get().getPlatformInfo().getReportletConfs()));\n+\n+            conf.addRequiredLabel();\n+            add(conf);\n+        }\n+    }\n+\n+    public class Configuration extends WizardStep {\n+\n+        private static final long serialVersionUID = -785981096328637758L;\n+\n+        private final String[] excluded = new String[] { \"serialVersionUID\", \"class\", \"name\", \"reportletClassName\" };\n+\n+        private final ReportletDirectoryPanel.ReportletWrapper reportlet;\n+\n+        public Configuration(final ReportletDirectoryPanel.ReportletWrapper reportlet) {\n+            this.reportlet = reportlet;\n+\n+            LoadableDetachableModel<List<String>> propViewModel = new LoadableDetachableModel<List<String>>() {\n+\n+                private static final long serialVersionUID = 5275935387613157437L;\n+\n+                @Override\n+                protected List<String> load() {\n+                    List<String> result = new ArrayList<String>();\n+                    if (Configuration.this.reportlet.getConf() != null) {\n+                        for (Field field : Configuration.this.reportlet.getConf().getClass().getDeclaredFields()) {\n+                            if (!ArrayUtils.contains(excluded, field.getName())) {\n+                                result.add(field.getName());\n+                            }\n+                        }\n+                    }\n+\n+                    return result;\n+                }\n+            };\n+\n+            add(new ListView<String>(\"propView\", propViewModel) {\n+\n+                private static final long serialVersionUID = 9101744072914090143L;\n+\n+                @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+                @Override\n+                protected void populateItem(final ListItem<String> item) {\n+                    final String fieldName = item.getModelObject();\n+\n+                    item.add(new Label(\"fieldName\", new ResourceModel(fieldName, fieldName)));\n+\n+                    Field field = null;\n+                    try {\n+                        field = reportlet.getConf().getClass().getDeclaredField(fieldName);\n+                    } catch (NoSuchFieldException | SecurityException e) {\n+                        LOG.error(\"Could not find field {} in class {}\", fieldName, reportlet.getConf().getClass(), e);\n+                    }\n+\n+                    if (field == null) {\n+                        return;\n+                    }\n+\n+                    final SearchCondition scondAnnot = field.getAnnotation(SearchCondition.class);\n+                    final Schema schemaAnnot = field.getAnnotation(Schema.class);\n+\n+                    BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(reportlet.getConf());\n+\n+                    Panel panel;\n+\n+                    if (scondAnnot != null) {\n+                        final String fiql = (String) wrapper.getPropertyValue(fieldName);\n+\n+                        final List<SearchClause> clauses;\n+                        if (StringUtils.isEmpty(fiql)) {\n+                            clauses = new ArrayList<>();\n+                        } else {\n+                            clauses = SearchUtils.getSearchClauses(fiql);\n+                        }\n+\n+                        final AbstractFiqlSearchConditionBuilder builder;\n+\n+                        switch (scondAnnot.type()) {\n+                            case \"USER\":\n+                                panel = new UserSearchPanel.Builder(\n+                                        new ListModel<SearchClause>(clauses)).required(false).build(\"value\");\n+                                builder = SyncopeClient.getUserSearchConditionBuilder();\n+                                break;\n+                            case \"GROUP\":\n+                                panel = new GroupSearchPanel.Builder(\n+                                        new ListModel<SearchClause>(clauses)).required(false).build(\"value\");\n+                                builder = SyncopeClient.getGroupSearchConditionBuilder();\n+                                break;\n+                            default:\n+                                panel = new AnyObjectSearchPanel.Builder(\n+                                        scondAnnot.type(),\n+                                        new ListModel<SearchClause>(clauses)).required(false).build(\"value\");\n+                                builder = SyncopeClient.getAnyObjectSearchConditionBuilder(null);\n+                        }\n+\n+                        reportlet.getSCondWrapper().put(fieldName, Pair.of(builder, clauses));\n+                    } else if (List.class.equals(field.getType())) {\n+                        Class<?> listItemType = String.class;\n+                        if (field.getGenericType() instanceof ParameterizedType) {\n+                            listItemType = (Class<?>) ((ParameterizedType) field.getGenericType()).\n+                                    getActualTypeArguments()[0];\n+                        }\n+\n+                        if (listItemType.equals(String.class) && schemaAnnot != null) {\n+                            SchemaRestClient schemaRestClient = new SchemaRestClient();\n+\n+                            List<AbstractSchemaTO> choices;\n+                            switch (schemaAnnot.schema()) {\n+                                case UserPlainSchema:\n+                                    choices = schemaRestClient.getSchemas(SchemaType.PLAIN, AnyTypeKind.USER);\n+                                    break;\n+\n+                                case UserDerivedSchema:\n+                                    choices = schemaRestClient.getSchemas(SchemaType.DERIVED, AnyTypeKind.USER);\n+                                    break;\n+\n+                                case UserVirtualSchema:\n+                                    choices = schemaRestClient.getSchemas(SchemaType.VIRTUAL, AnyTypeKind.USER);\n+                                    break;\n+\n+                                case GroupPlainSchema:\n+                                    choices = schemaRestClient.getSchemas(SchemaType.PLAIN, AnyTypeKind.GROUP);\n+                                    break;\n+\n+                                case GroupDerivedSchema:\n+                                    choices = schemaRestClient.getSchemas(SchemaType.DERIVED, AnyTypeKind.GROUP);\n+                                    break;\n+\n+                                case GroupVirtualSchema:\n+                                    choices = schemaRestClient.getSchemas(SchemaType.VIRTUAL, AnyTypeKind.GROUP);\n+                                    break;\n+\n+                                case AnyObjectPlainSchema:\n+                                    choices = schemaRestClient.getSchemas(SchemaType.PLAIN, AnyTypeKind.ANY_OBJECT);\n+                                    break;\n+\n+                                case AnyObjectDerivedSchema:\n+                                    choices = schemaRestClient.getSchemas(SchemaType.DERIVED, AnyTypeKind.ANY_OBJECT);\n+                                    break;\n+\n+                                case AnyObjectVirtualSchema:\n+                                    choices = schemaRestClient.getSchemas(SchemaType.VIRTUAL, AnyTypeKind.ANY_OBJECT);\n+                                    break;\n+\n+                                default:\n+                                    choices = Collections.emptyList();\n+                            }\n+\n+                            panel = new AjaxPalettePanel.Builder<String>().setName(fieldName).build(\n+                                    \"value\",\n+                                    new PropertyModel<List<String>>(reportlet.getConf(), fieldName),\n+                                    new ListModel<String>(\n+                                            CollectionUtils.collect(\n+                                                    choices, new Transformer<AbstractSchemaTO, String>() {\n+\n+                                                @Override\n+                                                public String transform(final AbstractSchemaTO input) {\n+                                                    return input.getKey();\n+                                                }\n+                                            }, new ArrayList<String>()))).hideLabel();\n+                        } else if (listItemType.isEnum()) {\n+                            panel = new AjaxPalettePanel.Builder<String>().setName(fieldName).build(\n+                                    \"value\",\n+                                    new PropertyModel<List<String>>(reportlet.getConf(), fieldName),\n+                                    new ListModel(Arrays.asList(listItemType.getEnumConstants()))).hideLabel();\n+                        } else {\n+                            if (((List) wrapper.getPropertyValue(fieldName)).isEmpty()) {\n+                                ((List) wrapper.getPropertyValue(fieldName)).add(null);\n+                            }\n+\n+                            panel = new MultiFieldPanel.Builder<String>(\n+                                    new PropertyModel<List<String>>(reportlet.getConf(), fieldName)).build(\n+                                    \"value\",\n+                                    fieldName,\n+                                    buildSinglePanel(field.getType(), fieldName, \"panel\")).hideLabel();\n+                        }\n+                    } else {\n+                        panel = buildSinglePanel(field.getType(), fieldName, \"value\").hideLabel();\n+                    }\n+\n+                    item.add(panel.setRenderBodyOnly(true));\n+                }\n+            });\n+        }\n+\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        private FieldPanel buildSinglePanel(final Class<?> type, final String fieldName, final String id) {\n+            FieldPanel result = null;\n+            PropertyModel model = new PropertyModel(reportlet.getConf(), fieldName);\n+            if (ClassUtils.isAssignable(Boolean.class, type)) {\n+                result = new AjaxCheckBoxPanel(id, fieldName, model);\n+            } else if (ClassUtils.isAssignable(Number.class, type)) {\n+                result = new AjaxSpinnerFieldPanel.Builder<Number>().build(\n+                        id, fieldName, (Class<Number>) ClassUtils.resolvePrimitiveIfNecessary(type), model);\n+            } else if (Date.class.equals(type)) {\n+                result = new DateTimeFieldPanel(id, fieldName, model, SyncopeConstants.DEFAULT_DATE_PATTERN);\n+            } else if (type.isEnum()) {\n+                result = new AjaxDropDownChoicePanel(id, fieldName, model).setChoices(\n+                        Arrays.asList(type.getEnumConstants()));\n+            }\n+\n+            // treat as String if nothing matched above\n+            if (result == null) {\n+                result = new AjaxTextFieldPanel(id, fieldName, model);\n+            }\n+\n+            result.hideLabel();\n+            return result;\n+        }\n+    }\n+}"},{"sha":"570c9698dae668f40c52a731b94422514685157d","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -18,17 +18,22 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n+\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.EntityTOUtils;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n+import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n \n /**\n@@ -38,6 +43,45 @@ public class SchemaRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -2479730152700312373L;\n \n+    public <T extends AbstractSchemaTO> List<T> getSchemas(final SchemaType schemaType, final AnyTypeKind kind) {\n+        final AnyTypeService client = getService(AnyTypeService.class);\n+\n+        final List<String> classes = new ArrayList<>();\n+\n+        switch (kind) {\n+            case USER:\n+            case GROUP:\n+                final AnyTypeTO type = client.read(kind.name());\n+                if (type != null) {\n+                    classes.addAll(type.getClasses());\n+                }\n+                break;\n+            default:\n+                for (AnyTypeTO anyTypeTO : getService(AnyTypeService.class).list()) {\n+                    if (anyTypeTO.getKind() != AnyTypeKind.USER && anyTypeTO.getKind() != AnyTypeKind.GROUP) {\n+                        classes.addAll(anyTypeTO.getClasses());\n+                    }\n+                }\n+        }\n+        return getSchemas(schemaType, classes.toArray(new String[] {}));\n+    }\n+\n+    public <T extends AbstractSchemaTO> List<T> getSchemas(final SchemaType schemaType, final String typeName) {\n+        AnyTypeTO type = null;\n+\n+        try {\n+            type = getService(AnyTypeService.class).read(typeName);\n+        } catch (SyncopeClientException e) {\n+            LOG.error(\"While reading all any types\", e);\n+        }\n+\n+        if (type == null) {\n+            return getSchemas(schemaType);\n+        } else {\n+            return getSchemas(schemaType, type.getClasses().toArray(new String[] {}));\n+        }\n+    }\n+\n     public <T extends AbstractSchemaTO> List<T> getSchemas(final SchemaType schemaType, final String... kind) {\n         List<T> schemas = new ArrayList<>();\n "},{"sha":"b28998fcff9e9a1d27e51155db5eadcbcd996de3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -144,8 +144,13 @@ public BaseModal<T> setContent(final ModalPanel component, final AjaxRequestTarg\n         return this;\n     }\n \n-    public BaseModal<T> changeCloseButtonLabel(final String label, final AjaxRequestTarget target) {\n+    public BaseModal<T> changeCloseButtonLabel(final String label) {\n         defaultModalCloseButton.getModel().setObject(label);\n+        return this;\n+    }\n+\n+    public BaseModal<T> changeCloseButtonLabel(final String label, final AjaxRequestTarget target) {\n+        changeCloseButtonLabel(label);\n         target.add(defaultModalCloseButton);\n         return this;\n     }"},{"sha":"a79e4a73c3bc5385608692857264ba2fdeb9fff1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -50,6 +50,7 @@ public enum ActionType {\n         FO_EDIT(\"read\"),\n         HTML_EDIT(\"read\"),\n         TEXT_EDIT(\"read\"),\n+        COMPOSE(\"update\"),\n         LAYOUT_EDIT(\"read\"),\n         RESET(\"update\"),\n         ENABLE(\"update\"),"},{"sha":"85bfb20349331cb2f929a7609166df03d2e2cb23","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -65,6 +65,7 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelFoEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelHtmlEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelTextEdit\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelCompose\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelLayoutEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelReset\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEnable\", \"emptyFragment\", this));\n@@ -388,6 +389,25 @@ public String getAjaxIndicatorMarkupId() {\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n+            case COMPOSE:\n+                fragment = new Fragment(\"panelCompose\", \"fragmentCompose\", this);\n+\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"composeLink\") {\n+\n+                    private static final long serialVersionUID = -1876519166660008562L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n             case LAYOUT_EDIT:\n                 fragment = new Fragment(\"panelLayoutEdit\", \"fragmentLayoutEdit\", this);\n \n@@ -904,6 +924,10 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n                 break;\n \n+            case COMPOSE:\n+                super.addOrReplace(new Fragment(\"panelCompose\", \"emptyFragment\", this));\n+                break;\n+\n             case EDIT:\n                 super.addOrReplace(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n                 break;"},{"sha":"bf166861038e31dd1f1a05473edc13c62ddd34d9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -58,7 +58,7 @@\n \n     public AjaxPalettePanel(\n             final String id, final IModel<List<T>> model, final Builder.Query<T> choices, final Builder<T> builder) {\n-        super(id, id, model);\n+        super(id, builder.name == null ? id : builder.name, model);\n \n         choicesModel = new PaletteLoadableDetachableModel(builder) {\n \n@@ -74,7 +74,7 @@ protected List<T> getChoices() {\n \n     public AjaxPalettePanel(\n             final String id, final IModel<List<T>> model, final ListModel<T> choices, final Builder<T> builder) {\n-        super(id, id, model);\n+        super(id, builder.name == null ? id : builder.name, model);\n \n         choicesModel = new PaletteLoadableDetachableModel(builder) {\n \n@@ -218,13 +218,20 @@ public Collection<T> getModelCollection() {\n \n         private String filter = conf.getDefaultFilter();\n \n+        private String name;\n+\n         public Builder() {\n             this.allowMoveAll = false;\n             this.allowOrder = false;\n             this.filtered = false;\n             this.renderer = new SelectChoiceRenderer<>();\n         }\n \n+        public Builder<T> setName(final String name) {\n+            this.name = name;\n+            return this;\n+        }\n+\n         public Builder<T> setAllowOrder(final boolean allowOrder) {\n             this.allowOrder = allowOrder;\n             return this;"},{"sha":"65dc06a816f1004bc64aa17c98a922e83cb18442","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizardBuilder.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizardBuilder.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -24,11 +24,15 @@\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEventSink;\n import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public abstract class AjaxWizardBuilder<T extends Serializable> extends AbstractModalPanelBuilder<T> {\n \n     private static final long serialVersionUID = 5241745929825564456L;\n \n+    protected static final Logger LOG = LoggerFactory.getLogger(AjaxWizardBuilder.class);\n+\n     protected AjaxWizard.Mode mode = AjaxWizard.Mode.CREATE;\n \n     protected IEventSink eventSink = null;"},{"sha":"430ed3530d75c5871f3ff63c1f92cd207998e1ca","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":47,"deletions":7,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -67,6 +67,8 @@\n \n     protected final AjaxLink<?> addAjaxLink;\n \n+    protected final AjaxLink<?> exitAjaxLink;\n+\n     protected ModalPanelBuilder<T> newItemPanelBuilder;\n \n     protected NotificationPanel notificationPanel;\n@@ -123,6 +125,20 @@ public void onClick(final AjaxRequestTarget target) {\n         addAjaxLink.setVisible(false);\n         initialFragment.addOrReplace(addAjaxLink);\n \n+        exitAjaxLink = new AjaxLink<T>(\"exit\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                send(WizardMgtPanel.this, Broadcast.EXACT, new ExitEvent(target));\n+            }\n+        };\n+\n+        exitAjaxLink.setEnabled(false);\n+        exitAjaxLink.setVisible(false);\n+        initialFragment.addOrReplace(exitAjaxLink);\n+\n         add(new ListView<Component>(\"outerObjectsRepeater\", outerObjects) {\n \n             private static final long serialVersionUID = -9180479401817023838L;\n@@ -138,7 +154,11 @@ protected void populateItem(final ListItem<Component> item) {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n+        if (event.getPayload() instanceof ExitEvent && modal != null) {\n+            final AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n+            // default behaviour: change it catching the event if needed\n+            modal.close(target);\n+        } else if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n             final AjaxWizard.NewItemEvent<T> newItemEvent = AjaxWizard.NewItemEvent.class.cast(event.getPayload());\n             final AjaxRequestTarget target = newItemEvent.getTarget();\n             final T item = newItemEvent.getItem();\n@@ -169,7 +189,6 @@ public void onEvent(final IEvent<?> event) {\n                 }\n             } else if (event.getPayload() instanceof AjaxWizard.NewItemCancelEvent) {\n                 if (wizardInModal) {\n-                    modal.show(false);\n                     modal.close(target);\n                 } else {\n                     container.addOrReplace(initialFragment);\n@@ -187,23 +206,21 @@ public void onEvent(final IEvent<?> event) {\n \n                         @Override\n                         protected void closeAction(final AjaxRequestTarget target) {\n-                            modal.show(false);\n                             modal.close(target);\n                         }\n \n                         @Override\n-                        protected Panel customResultBody(\n-                                final String id, final T item, final Serializable result) {\n+                        protected Panel customResultBody(final String id, final T item, final Serializable result) {\n                             return WizardMgtPanel.this.customResultBody(id, item, result);\n                         }\n                     });\n                     target.add(modal.getForm());\n                 } else if (wizardInModal) {\n-                    modal.show(false);\n                     modal.close(target);\n                 } else {\n                     container.addOrReplace(initialFragment);\n                 }\n+                customActionOnCloseCallback(target);\n             }\n \n             if (containerAutoRefresh) {\n@@ -229,6 +246,17 @@ protected Panel customResultBody(final String panelId, final T item, final Seria\n         };\n     }\n \n+    /**\n+     * Show exit butto sending ExitEvent paylad.\n+     *\n+     * @return the current instance.\n+     */\n+    protected final WizardMgtPanel<T> enableExitButton() {\n+        exitAjaxLink.setEnabled(true);\n+        exitAjaxLink.setVisible(true);\n+        return this;\n+    }\n+\n     /**\n      * Add object inside the main container.\n      *\n@@ -298,7 +326,6 @@ protected final void setWindowClosedReloadCallback(final BaseModal<?> modal) {\n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n                 modal.show(false);\n-                customActionOnCloseCallback(target);\n             }\n         });\n     }\n@@ -384,4 +411,17 @@ public Builder<T> addNotificationPanel(final NotificationPanel notificationPanel\n             return this;\n         }\n     }\n+\n+    public static class ExitEvent {\n+\n+        private final AjaxRequestTarget target;\n+\n+        public ExitEvent(final AjaxRequestTarget target) {\n+            this.target = target;\n+        }\n+\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n+        }\n+    }\n }"},{"sha":"5e3db1b35ef329914950312d477d493d25a378f3","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -261,7 +261,7 @@ div.wizard-view div.wizard-view{\n \n .wizard-view > div {\n   display: block;\n-  height: 98%;\n+  height: 95%;\n   position: relative;\n }\n \n@@ -640,10 +640,18 @@ START - Search - AjaxDateTimePicker\n   width: 120px !important;\n }\n \n+.clause .type button{\n+  width: 120px !important;\n+}\n+\n .clause .property{\n   width: 190px;\n }\n \n+.clause .property button{\n+  width: 190px;\n+}\n+\n .clause .comparator{\n   width: 100px;\n }"},{"sha":"d63f1c0ffbe94213f8933c6e4fc9e86295ea6a3c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportDirectoryPanel.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -33,3 +33,5 @@ any.new=New Report\n any.finish=Submit Report\n any.cancel=Cancel Report\n report.view=Executions of report '${key}'\n+reportlet.conf=Reportlet configuration for ${key}\n+close=Close"},{"sha":"8449d96377440a0d0a0a996f3e6dde68ce984880","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportDirectoryPanel_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel_it.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -33,3 +33,5 @@ any.new=Nuovo Report\n any.finish=Conferma Report\n any.cancel=Annulla Report\n report.view=Esecuzioni del report '${key}'\n+reportlet.conf=Configurazione reportlet per ${key}\n+close=Close"},{"sha":"a0ad0693adfc9c320412261fa76eee2000b69797","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportDirectoryPanel_pt_BR.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel_pt_BR.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -33,3 +33,5 @@ any.new=New Report\n any.finish=Submit Report\n any.cancel=Cancel Report\n report.view=Executions of report '${key}'\n+reportlet.conf=Reportlet configuration for ${key}\n+close=Close"},{"sha":"f6124f7bde8e1a89a3a03fabed627b2f7879a1fe","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportDirectoryPanel_ru.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportDirectoryPanel_ru.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -41,3 +41,5 @@ any.finish=Submit Report\n any.cancel=Cancel Report\n # task.view=\\u00d0\\u0097\\u00d0\\u00b0\\u00d0\\u00bf\\u00d1\\u0083\\u00d1\\u0081\\u00d0\\u00ba\\u00d0\\u00b8 \\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b8\n report.view=Executions of report '${key}'\n+reportlet.conf=Reportlet configuration for ${key}\n+close=Close"},{"sha":"1345bdb23057164e24099d7619d9bf3d5779f416","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportWizardBuilder$Profile.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportWizardBuilder%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportWizardBuilder%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportWizardBuilder%24Profile.html?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -18,7 +18,7 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n-    <div class=\"form-group\"><span wicket:id=\"name\">[id]</span></div>\n+    <div class=\"form-group\"><span wicket:id=\"name\">[name]</span></div>\n     <div class=\"form-group\"><span wicket:id=\"template\">[template]</span></div>\n     <div class=\"form-group\"><span wicket:id=\"active\">[active]</span></div>\n   </wicket:panel>"},{"sha":"680d073f44d2033fb736c2242befaa4c98ec06b6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+reportlet=Reportlet\n+profile=Profile\n+configuration=Configuration"},{"sha":"7a16c3bc41a2e154aab850119e378cf103c617f5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletDirectoryPanel_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_it.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+reportlet=Reportlet\n+profile=Profilo\n+configuration=Configurazione"},{"sha":"680d073f44d2033fb736c2242befaa4c98ec06b6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletDirectoryPanel_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_pt_BR.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+reportlet=Reportlet\n+profile=Profile\n+configuration=Configuration"},{"sha":"680d073f44d2033fb736c2242befaa4c98ec06b6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletDirectoryPanel_ru.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel_ru.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+reportlet=Reportlet\n+profile=Profile\n+configuration=Configuration"},{"sha":"3d584102abf361b50f8e7bc565e6901561f6f4fa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Configuration.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration.html?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"propView\">\n+      <div class=\"form-group inforow\">\n+        <label wicket:id=\"fieldName\">[LABEL]</label>\n+        <span wicket:id=\"value\">[value]</span>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"8d2c500e11a13f53b300065f3db11c8571704970","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Configuration.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+plainAttrs=Plain Attributes\n+derAttrs=Derived Attributes\n+virAttrs=Virtual Attributes\n+features=Features\n+matchingCond=Matching Condition\n+userMatchingCond=User Matching Condition\n+groupMatchingCond=Group Matching Condition\n+anyObjectMatchingCond=AnyObject Matching Condition"},{"sha":"6688f852c27c506f95f30149b2a587ea9ffbeb9c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Configuration_it.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration_it.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+plainAttrs=Attributi\n+derAttrs=Attributi Derivati\n+virAttrs=Attributi Virtuali\n+features=Features\n+matchingCond=Condizione di matching\n+userMatchingCond=Condizione di matching utente\n+groupMatchingCond=Condizione di matching gruppo\n+anyObjectMatchingCond=Condizione di matching any"},{"sha":"8d2c500e11a13f53b300065f3db11c8571704970","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Configuration_pt_BR.properties","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration_pt_BR.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,24 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+plainAttrs=Plain Attributes\n+derAttrs=Derived Attributes\n+virAttrs=Virtual Attributes\n+features=Features\n+matchingCond=Matching Condition\n+userMatchingCond=User Matching Condition\n+groupMatchingCond=Group Matching Condition\n+anyObjectMatchingCond=AnyObject Matching Condition"},{"sha":"2020b8e55cc613f6e5ab2f1939ac82ef830e5aa4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Configuration_ru.properties","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Configuration_ru.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,26 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+# name=\\u00d0\\u009d\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n+plainAttrs=Plain Attributes\n+derAttrs=Derived Attributes\n+virAttrs=Virtual Attributes\n+features=Features\n+matchingCond=Matching Condition\n+userMatchingCond=User Matching Condition\n+groupMatchingCond=Group Matching Condition\n+anyObjectMatchingCond=AnyObject Matching Condition"},{"sha":"20ec5554fe43cc40932fed0cab583c765a35120a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Profile.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.html?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,24 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div class=\"form-group\"><span wicket:id=\"name\">[name]</span></div>\n+    <div class=\"form-group\"><span wicket:id=\"configuration\">[configuration]</span></div>\n+  </wicket:panel>\n+</html>"},{"sha":"4b158cd11177f219cd9bac3f739554ae6c5fe759","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Profile.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+name=Name\n+configuration=Configuration"},{"sha":"98cdbf1e4d162d95e718082d39c6b824e9038b15","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Profile_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_it.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+name=Name\n+configuration=Configurazione"},{"sha":"4b158cd11177f219cd9bac3f739554ae6c5fe759","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Profile_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_pt_BR.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+name=Name\n+configuration=Configuration"},{"sha":"532096314d3e0782197d44ac028b88ac56edef3e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/reports/ReportletWizardBuilder$Profile_ru.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder%24Profile_ru.properties?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+# name=\\u00d0\\u009d\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n+name=\\u041d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u0435\n+configuration=Configuration"},{"sha":"01afd7cb217be9d3db9852bfd9c7e163de23b044","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -47,6 +47,7 @@\n     <span wicket:id=\"panelFoEdit\">[plus]</span>\n     <span wicket:id=\"panelHtmlEdit\">[plus]</span>\n     <span wicket:id=\"panelTextEdit\">[plus]</span>\n+    <span wicket:id=\"panelCompose\">[plus]</span>\n     <span wicket:id=\"panelLayoutEdit\">[plus]</span>\n     <span wicket:id=\"panelExport\">[plus]</span>\n     <span wicket:id=\"panelPropagationTasks\">[plus]</span>\n@@ -139,6 +140,10 @@\n       <a href=\"#\" wicket:id=\"textEditLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-file-text-o\" alt=\"text edit icon\" title=\"TEXT Edit\"></i></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentCompose\">\n+      <a href=\"#\" wicket:id=\"composeLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-puzzle-piece\" alt=\"compose icon\" title=\"Compose\"></i></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"fragmentLayoutEdit\">\n       <a href=\"#\" wicket:id=\"layoutEditLink\" class=\"btn\"><i id=\"actionLink\" class=\"fa fa-object-ungroup\" alt=\"layout edit icon\" title=\"Layout Edit\"></i></a>\n     </wicket:fragment>"},{"sha":"633a3102638e57405e363f547b2e689f0883f21c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPalettePanel.html","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.html?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -31,6 +31,8 @@\n       <div><label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/></div>\n       <span wicket:id=\"externalAction\"/>\n     </wicket:enclosure>\n-    <span wicket:id=\"paletteField\">[Palette]</span>\n+    <fieldset class=\"input-group\">\n+      <span wicket:id=\"paletteField\">[Palette]</span>\n+    </fieldset>\n   </wicket:extend>\n </html>"},{"sha":"463c7dbb48ff0f8051768ade618632c8e4490bd7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/WizardMgtPanel.html","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -32,6 +32,9 @@\n \n       <wicket:enclosure child=\"add\">\n         <div class=\"modal-footer\" style=\"text-align: right\">\n+          <a haref=\"#\"  class=\"btn btn-default btn-circle btn-lg pull-left\" wicket:id=\"exit\">\n+            <i class=\"fa fa-sign-out\"></i>\n+          </a>\n           <a haref=\"#\"  class=\"btn btn-primary btn-circle btn-lg\" wicket:id=\"add\">\n             <i class=\"glyphicon glyphicon-plus\"></i>\n           </a>"},{"sha":"5e951023c8ca3465fedcba6cdf102f9a79084b91","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/AbstractAnyReportletConf.java","status":"modified","additions":0,"deletions":43,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractAnyReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractAnyReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractAnyReportletConf.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -18,61 +18,18 @@\n  */\n package org.apache.syncope.common.lib.report;\n \n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.util.ArrayList;\n-import java.util.List;\n-import javax.xml.bind.annotation.XmlElement;\n-import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlType;\n \n @XmlType\n public abstract class AbstractAnyReportletConf extends AbstractReportletConf {\n \n     private static final long serialVersionUID = -5388597116592877789L;\n \n-    protected String matchingCond;\n-\n-    protected final List<String> plainAttrs = new ArrayList<>();\n-\n-    protected final List<String> derAttrs = new ArrayList<>();\n-\n-    protected final List<String> virAttrs = new ArrayList<>();\n-\n     public AbstractAnyReportletConf() {\n         super();\n     }\n \n     public AbstractAnyReportletConf(final String name) {\n         super(name);\n     }\n-\n-    public String getMatchingCond() {\n-        return matchingCond;\n-    }\n-\n-    public void setMatchingCond(final String matchingCond) {\n-        this.matchingCond = matchingCond;\n-    }\n-\n-    @XmlElementWrapper(name = \"plainAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"plainAttrs\")\n-    public List<String> getPlainAttrs() {\n-        return plainAttrs;\n-    }\n-\n-    @XmlElementWrapper(name = \"derAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"derAttrs\")\n-    public List<String> getDerAttrs() {\n-        return derAttrs;\n-    }\n-\n-    @XmlElementWrapper(name = \"virAttrs\")\n-    @XmlElement(name = \"attribute\")\n-    @JsonProperty(\"virAttrs\")\n-    public List<String> getVirAttrs() {\n-        return virAttrs;\n-    }\n-\n }"},{"sha":"68f64dd777b8c337fd66d8fd89953c2c87a28832","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/GroupReportletConf.java","status":"modified","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -26,6 +26,7 @@\n import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.types.IntMappingType;\n \n @XmlRootElement(name = \"groupReportletConf\")\n @XmlType\n@@ -46,8 +47,49 @@ public enum Feature {\n \n     }\n \n+    @Schema(schema = IntMappingType.GroupPlainSchema)\n+    private final List<String> plainAttrs = new ArrayList<>();\n+\n+    @Schema(schema = IntMappingType.GroupDerivedSchema)\n+    private final List<String> derAttrs = new ArrayList<>();\n+\n+    @Schema(schema = IntMappingType.GroupVirtualSchema)\n+    private final List<String> virAttrs = new ArrayList<>();\n+\n+    @SearchCondition(type = \"GROUP\")\n+    protected String matchingCond;\n+\n     private final List<Feature> features = new ArrayList<>();\n \n+    public String getMatchingCond() {\n+        return matchingCond;\n+    }\n+\n+    public void setMatchingCond(final String matchingCond) {\n+        this.matchingCond = matchingCond;\n+    }\n+\n+    @XmlElementWrapper(name = \"plainAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"plainAttrs\")\n+    public List<String> getPlainAttrs() {\n+        return plainAttrs;\n+    }\n+\n+    @XmlElementWrapper(name = \"derAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"derAttrs\")\n+    public List<String> getDerAttrs() {\n+        return derAttrs;\n+    }\n+\n+    @XmlElementWrapper(name = \"virAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"virAttrs\")\n+    public List<String> getVirAttrs() {\n+        return virAttrs;\n+    }\n+\n     public GroupReportletConf() {\n         super();\n     }"},{"sha":"ce67f46c5e89f13be58aed01b25d3efd35e94e01","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/ReconciliationReportletConf.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReconciliationReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReconciliationReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FReconciliationReportletConf.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -51,10 +51,13 @@ public enum Feature {\n \n     }\n \n+    @SearchCondition(type = \"USER\")\n     private String userMatchingCond;\n \n+    @SearchCondition(type = \"GROUP\")\n     private String groupMatchingCond;\n \n+    @SearchCondition(type = \"\")\n     private String anyObjectMatchingCond;\n \n     private final List<Feature> features = new ArrayList<>();"},{"sha":"aea2fe99970eb973475857a6bafe6afe98a024d0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/Schema.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FSchema.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.report;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+import org.apache.syncope.common.lib.types.IntMappingType;\n+\n+@Target({ ElementType.FIELD })\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface Schema {\n+\n+    IntMappingType schema() default IntMappingType.UserPlainSchema;\n+}"},{"sha":"0570dabdfe17228af39031fd673b24eeb65071bd","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/SearchCondition.java","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FSearchCondition.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FSearchCondition.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FSearchCondition.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.report;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target({ ElementType.FIELD })\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface SearchCondition {\n+\n+    String type() default \"USER\";\n+}"},{"sha":"ac6f430d9550e405f74a349d449199a1d241f345","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/UserReportletConf.java","status":"modified","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b0960de57a0faa07fe470003f4f0901ad4a8ad4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java?ref=2b0960de57a0faa07fe470003f4f0901ad4a8ad4","patch":"@@ -26,11 +26,21 @@\n import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.types.IntMappingType;\n \n @XmlRootElement(name = \"userReportletConf\")\n @XmlType\n public class UserReportletConf extends AbstractAnyReportletConf {\n \n+    @Schema(schema = IntMappingType.UserPlainSchema)\n+    private final List<String> plainAttrs = new ArrayList<>();\n+\n+    @Schema(schema = IntMappingType.UserDerivedSchema)\n+    private final List<String> derAttrs = new ArrayList<>();\n+\n+    @Schema(schema = IntMappingType.UserVirtualSchema)\n+    private final List<String> virAttrs = new ArrayList<>();\n+\n     @XmlEnum\n     @XmlType(name = \"userReportletConfFeature\")\n     public enum Feature {\n@@ -52,6 +62,30 @@ public enum Feature {\n \n     private static final long serialVersionUID = 6602717600064602764L;\n \n+    @SearchCondition(type = \"USER\")\n+    protected String matchingCond;\n+\n+    @XmlElementWrapper(name = \"plainAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"plainAttrs\")\n+    public List<String> getPlainAttrs() {\n+        return plainAttrs;\n+    }\n+\n+    @XmlElementWrapper(name = \"derAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"derAttrs\")\n+    public List<String> getDerAttrs() {\n+        return derAttrs;\n+    }\n+\n+    @XmlElementWrapper(name = \"virAttrs\")\n+    @XmlElement(name = \"attribute\")\n+    @JsonProperty(\"virAttrs\")\n+    public List<String> getVirAttrs() {\n+        return virAttrs;\n+    }\n+\n     private final List<Feature> features = new ArrayList<>();\n \n     public UserReportletConf() {\n@@ -62,6 +96,14 @@ public UserReportletConf(final String name) {\n         super(name);\n     }\n \n+    public String getMatchingCond() {\n+        return matchingCond;\n+    }\n+\n+    public void setMatchingCond(final String matchingCond) {\n+        this.matchingCond = matchingCond;\n+    }\n+\n     @XmlElementWrapper(name = \"features\")\n     @XmlElement(name = \"feature\")\n     @JsonProperty(\"features\")"}]}