{"sha":"4434d414511f9b730616dca0384d71321df971f5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ0MzRkNDE0NTExZjliNzMwNjE2ZGNhMDM4NGQ3MTMyMWRmOTcxZjU=","commit":{"author":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2017-11-15T08:28:39Z"},"committer":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2017-11-15T08:29:13Z"},"message":"[SYNCOPE-1229] It is now possible to properly delete all task executions","tree":{"sha":"0f01cee72610e736b369ccdedaccdde14203214b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0f01cee72610e736b369ccdedaccdde14203214b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4434d414511f9b730616dca0384d71321df971f5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4434d414511f9b730616dca0384d71321df971f5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4434d414511f9b730616dca0384d71321df971f5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4434d414511f9b730616dca0384d71321df971f5/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"f96afc989569cbaff7af4d2f1acee746fe67b6e1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f96afc989569cbaff7af4d2f1acee746fe67b6e1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f96afc989569cbaff7af4d2f1acee746fe67b6e1"}],"stats":{"total":48,"additions":35,"deletions":13},"files":[{"sha":"0445f8310c11fb06de3ec9c4f1076923813976a4","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkContent.java","status":"modified","additions":35,"deletions":13,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4434d414511f9b730616dca0384d71321df971f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4434d414511f9b730616dca0384d71321df971f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java?ref=4434d414511f9b730616dca0384d71321df971f5","patch":"@@ -41,7 +41,9 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.lib.to.BulkActionResult.Status;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -137,22 +139,42 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n \n                         BulkActionResult res = null;\n                         try {\n-                            if (items.iterator().next() instanceof StatusBean) {\n+                            T singleItem = items.iterator().next();\n+                            if (singleItem instanceof StatusBean) {\n                                 throw new IllegalArgumentException(\"Invalid items\");\n                             }\n \n-                            final BulkAction bulkAction = new BulkAction();\n-                            bulkAction.setType(BulkAction.Type.valueOf(actionToBeAddresed.name()));\n-                            items.forEach(item -> {\n-                                try {\n-                                    bulkAction.getTargets().add(getTargetId(item, keyFieldName).toString());\n-                                } catch (IllegalAccessException | InvocationTargetException e) {\n-                                    LOG.error(\"Error retrieving item id {}\", keyFieldName, e);\n-                                }\n-                            });\n-                            res = BulkActionResult.class.cast(\n-                                    bulkActionExecutor.getClass().getMethod(\"bulkAction\", BulkAction.class).invoke(\n-                                            bulkActionExecutor, bulkAction));\n+                            if (singleItem instanceof ExecTO) {\n+                                res = new BulkActionResult();\n+                                final Map<String, Status> results = res.getResults();\n+                                items.forEach(item -> {\n+                                    ExecTO exec = ExecTO.class.cast(item);\n+                                    String key = exec.getKey();\n+\n+                                    try {\n+                                        bulkActionExecutor.getClass().getMethod(\"deleteExecution\",\n+                                                String.class).invoke(bulkActionExecutor, exec.getKey());\n+                                        results.put(String.valueOf(key), BulkActionResult.Status.SUCCESS);\n+                                    } catch (Exception e) {\n+                                        LOG.error(\"Error deleting execution {} of task {}\", exec.getKey(), key, e);\n+                                        results.put(String.valueOf(key), BulkActionResult.Status.FAILURE);\n+                                    }\n+                                });\n+                            } else {\n+                                final BulkAction bulkAction = new BulkAction();\n+                                bulkAction.setType(BulkAction.Type.valueOf(actionToBeAddresed.name()));\n+                                items.forEach(item -> {\n+                                    try {\n+                                        bulkAction.getTargets().add(getTargetId(item, keyFieldName).toString());\n+                                    } catch (IllegalAccessException | InvocationTargetException e) {\n+                                        LOG.error(\"Error retrieving item id {}\", keyFieldName, e);\n+                                    }\n+                                });\n+                                res = BulkActionResult.class.cast(\n+                                        bulkActionExecutor.getClass().getMethod(\"bulkAction\",\n+                                                BulkAction.class).invoke(bulkActionExecutor, bulkAction));\n+                            }\n+\n                         } catch (IllegalArgumentException biae) {\n                             if (!(items.iterator().next() instanceof StatusBean)) {\n                                 throw new IllegalArgumentException(\"Invalid items\");"}]}