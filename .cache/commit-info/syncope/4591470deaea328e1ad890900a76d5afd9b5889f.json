{"sha":"4591470deaea328e1ad890900a76d5afd9b5889f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ1OTE0NzBkZWFlYTMyOGUxYWQ4OTA5MDBhNzZkNWFmZDliNTg4OWY=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-31T15:47:24Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-31T15:47:24Z"},"message":"SYNCOPE-231 Simplified PolicyService and TaskService\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1441024 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d5d39954e744564501b6a203c30a55b4b2e94ba3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d5d39954e744564501b6a203c30a55b4b2e94ba3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4591470deaea328e1ad890900a76d5afd9b5889f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4591470deaea328e1ad890900a76d5afd9b5889f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4591470deaea328e1ad890900a76d5afd9b5889f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4591470deaea328e1ad890900a76d5afd9b5889f/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"24b1bca839159ff1125123631257dc331e924f72","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/24b1bca839159ff1125123631257dc331e924f72","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/24b1bca839159ff1125123631257dc331e924f72"}],"stats":{"total":70,"additions":24,"deletions":46},"files":[{"sha":"5dc5687e7b86fe2fc2ded77e9c0bc478d6ec0efe","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/PolicyController.java","status":"modified","additions":7,"deletions":20,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4591470deaea328e1ad890900a76d5afd9b5889f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FPolicyController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4591470deaea328e1ad890900a76d5afd9b5889f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FPolicyController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FPolicyController.java?ref=4591470deaea328e1ad890900a76d5afd9b5889f","patch":"@@ -66,43 +66,30 @@ public class PolicyController extends AbstractController {\n     @RequestMapping(method = RequestMethod.POST, value = \"/password/create\")\n     public PasswordPolicyTO create(final HttpServletResponse response, @RequestBody final PasswordPolicyTO policyTO)\n             throws SyncopeClientCompositeErrorException {\n-\n-        LOG.debug(\"Creating policy \" + policyTO);\n-\n-        final PasswordPolicy policy = binder.getPolicy(null, policyTO);\n-\n-        auditManager.audit(Category.policy, PolicySubCategory.create, Result.success,\n-                \"Successfully created password policy: \" + policy.getId());\n-\n-        return binder.getPolicyTO(policyDAO.save(policy));\n+        return (PasswordPolicyTO) createInternal(policyTO);\n     }\n \n     @PreAuthorize(\"hasRole('POLICY_CREATE')\")\n     @RequestMapping(method = RequestMethod.POST, value = \"/account/create\")\n     public AccountPolicyTO create(final HttpServletResponse response, @RequestBody final AccountPolicyTO policyTO)\n             throws SyncopeClientCompositeErrorException {\n-\n-        LOG.debug(\"Creating policy \" + policyTO);\n-\n-        final AccountPolicy policy = binder.getPolicy(null, policyTO);\n-\n-        auditManager.audit(Category.policy, PolicySubCategory.create, Result.success,\n-                \"Successfully created account policy: \" + policy.getId());\n-\n-        return binder.getPolicyTO(policyDAO.save(policy));\n+        return (AccountPolicyTO) createInternal(policyTO);\n     }\n \n     @PreAuthorize(\"hasRole('POLICY_CREATE')\")\n     @RequestMapping(method = RequestMethod.POST, value = \"/sync/create\")\n     public SyncPolicyTO create(final HttpServletResponse response, @RequestBody final SyncPolicyTO policyTO)\n             throws SyncopeClientCompositeErrorException {\n+        return (SyncPolicyTO) createInternal(policyTO);\n+    }\n \n+    public PolicyTO createInternal(final PolicyTO policyTO) {\n         LOG.debug(\"Creating policy \" + policyTO);\n \n-        final SyncPolicy policy = binder.getPolicy(null, policyTO);\n+        final Policy policy = binder.getPolicy(null, policyTO);\n \n         auditManager.audit(Category.policy, PolicySubCategory.create, Result.success,\n-                \"Successfully created sync policy: \" + policy.getId());\n+                \"Successfully created \" + policy.getType().toString() + \" policy: \" + policy.getId());\n \n         return binder.getPolicyTO(policyDAO.save(policy));\n     }"},{"sha":"7cfae7c6d71ed0de9c7179d492ff7b5d3144be48","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/TaskController.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4591470deaea328e1ad890900a76d5afd9b5889f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4591470deaea328e1ad890900a76d5afd9b5889f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=4591470deaea328e1ad890900a76d5afd9b5889f","patch":"@@ -111,7 +111,12 @@ public TaskTO createSyncTask(final HttpServletResponse response, @RequestBody fi\n     @RequestMapping(method = RequestMethod.POST, value = \"/create/sched\")\n     public TaskTO createSchedTask(final HttpServletResponse response, @RequestBody final SchedTaskTO taskTO)\n             throws NotFoundException {\n+        TaskTO createdTaskTO = createSchedTaskInternal(taskTO);\n+        response.setStatus(HttpServletResponse.SC_CREATED);\n+        return createdTaskTO;\n+    }\n \n+    public TaskTO createSchedTaskInternal(final SchedTaskTO taskTO) {\n         LOG.debug(\"Creating task \" + taskTO);\n \n         TaskUtil taskUtil = getTaskUtil(taskTO);\n@@ -135,7 +140,6 @@ public TaskTO createSchedTask(final HttpServletResponse response, @RequestBody f\n         auditManager.audit(Category.task, TaskSubCategory.create, Result.success,\n                 \"Successfully created task: \" + task.getId() + \"/\" + taskUtil);\n \n-        response.setStatus(HttpServletResponse.SC_CREATED);\n         return binder.getTaskTO(task, taskUtil);\n     }\n \n@@ -184,7 +188,11 @@ public TaskTO updateSched(@RequestBody final SchedTaskTO taskTO) throws NotFound\n     @PreAuthorize(\"hasRole('TASK_LIST')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/{kind}/count\")\n     public ModelAndView count(@PathVariable(\"kind\") final String kind) {\n-        return new ModelAndView().addObject(taskDAO.count(getTaskUtil(kind).taskClass()));\n+        return new ModelAndView().addObject(countInternal(kind));\n+    }\n+\n+    public int countInternal(final String kind) {\n+        return taskDAO.count(getTaskUtil(kind).taskClass());\n     }\n \n     @PreAuthorize(\"hasRole('TASK_LIST')\")"},{"sha":"558e95f77e77fece4188917e4cef66531bc64c70","filename":"core/src/main/java/org/apache/syncope/core/services/PolicyServiceImpl.java","status":"modified","additions":1,"deletions":17,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4591470deaea328e1ad890900a76d5afd9b5889f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4591470deaea328e1ad890900a76d5afd9b5889f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FPolicyServiceImpl.java?ref=4591470deaea328e1ad890900a76d5afd9b5889f","patch":"@@ -46,23 +46,7 @@ public class PolicyServiceImpl implements PolicyService, ContextAware {\n \r\n     @Override\r\n     public <T extends PolicyTO> Response create(final PolicyType type, final T policyTO) {\r\n-        PolicyTO policy;\r\n-        switch (type) {\r\n-            case ACCOUNT:\r\n-                policy = policyController.create(new DummyHTTPServletResponse(), (AccountPolicyTO) policyTO);\r\n-                break;\r\n-\r\n-            case PASSWORD:\r\n-                policy = policyController.create(new DummyHTTPServletResponse(), (PasswordPolicyTO) policyTO);\r\n-                break;\r\n-\r\n-            case SYNC:\r\n-                policy = policyController.create(new DummyHTTPServletResponse(), (SyncPolicyTO) policyTO);\r\n-                break;\r\n-\r\n-            default:\r\n-                throw new BadRequestException();\r\n-        }\r\n+        PolicyTO policy = policyController.createInternal(policyTO);\r\n         URI location = uriInfo.getAbsolutePathBuilder().path(policy.getId() + \"\").build();\r\n         return Response.created(location)\r\n                 .header(SyncopeConstants.REST_HEADER_ID, policy.getId())\r"},{"sha":"2bae8fc835eec0ff6b14f8d5ad710f6662cbae94","filename":"core/src/main/java/org/apache/syncope/core/services/TaskServiceImpl.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4591470deaea328e1ad890900a76d5afd9b5889f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4591470deaea328e1ad890900a76d5afd9b5889f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FTaskServiceImpl.java?ref=4591470deaea328e1ad890900a76d5afd9b5889f","patch":"@@ -37,7 +37,10 @@\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\r\n import org.apache.syncope.common.types.TaskType;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n+import org.apache.syncope.core.persistence.dao.TaskDAO;\r\n import org.apache.syncope.core.rest.controller.TaskController;\r\n+import org.slf4j.Logger;\r\n+import org.slf4j.LoggerFactory;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.stereotype.Service;\r\n \r\n@@ -51,18 +54,14 @@ public class TaskServiceImpl implements TaskService, ContextAware {\n \r\n     @Override\r\n     public int count(final TaskType taskType) {\r\n-        return (Integer) taskController.count(taskType.toString()).getModel().values().iterator().next();\r\n+        return taskController.countInternal(taskType.toString());\r\n     }\r\n \r\n \t@Override\r\n \tpublic Response create(final TaskTO taskTO) {\r\n \t\tTaskTO createdTask;\r\n-\t\tif (taskTO instanceof SyncTaskTO) {\r\n-\t\t\tcreatedTask = taskController.createSyncTask(\r\n-\t\t\t\t\tnew DummyHTTPServletResponse(), (SyncTaskTO) taskTO);\r\n-\t\t} else if (taskTO instanceof SchedTaskTO) {\r\n-\t\t\tcreatedTask = taskController.createSchedTask(\r\n-\t\t\t\t\tnew DummyHTTPServletResponse(), (SchedTaskTO) taskTO);\r\n+\t\tif (taskTO instanceof SyncTaskTO || taskTO instanceof SchedTaskTO) {\r\n+\t\t\tcreatedTask = taskController.createSchedTaskInternal((SchedTaskTO) taskTO);\r\n \t\t} else {\r\n \t\t\tthrow new BadRequestException();\r\n \t\t}\r"}]}