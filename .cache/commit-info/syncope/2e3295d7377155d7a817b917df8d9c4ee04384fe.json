{"sha":"2e3295d7377155d7a817b917df8d9c4ee04384fe","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJlMzI5NWQ3Mzc3MTU1ZDdhODE3YjkxN2RmOGQ5YzRlZTA0Mzg0ZmU=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-07-19T13:32:27Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-07-19T13:32:27Z"},"message":"SYNCOPE-403 Added to the ResultStatusModalPage the possibility to see the error message if the propagation fails\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1504872 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e6914857cedf3f19c6693f92a08da00114f9b566","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e6914857cedf3f19c6693f92a08da00114f9b566"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2e3295d7377155d7a817b917df8d9c4ee04384fe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2e3295d7377155d7a817b917df8d9c4ee04384fe","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2e3295d7377155d7a817b917df8d9c4ee04384fe","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2e3295d7377155d7a817b917df8d9c4ee04384fe/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"5eedc275608cd1ac3be18b0819c31418b1a71ee0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5eedc275608cd1ac3be18b0819c31418b1a71ee0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5eedc275608cd1ac3be18b0819c31418b1a71ee0"}],"stats":{"total":213,"additions":177,"deletions":36},"files":[{"sha":"fb6c1996bdfc07fa3c108f9567135275ac647137","filename":"common/src/main/java/org/apache/syncope/common/to/PropagationStatusTO.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e3295d7377155d7a817b917df8d9c4ee04384fe/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationStatusTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e3295d7377155d7a817b917df8d9c4ee04384fe/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationStatusTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FPropagationStatusTO.java?ref=2e3295d7377155d7a817b917df8d9c4ee04384fe","patch":"@@ -57,9 +57,9 @@ public class PropagationStatusTO extends AbstractBaseBean {\n     private PropagationTaskExecStatus status;\r\n     \r\n     /**\r\n-     * Propagation task execution message.\r\n+     * Propagation task execution failure message.\r\n      */\r\n-    private String executionMessage;\r\n+    private String failureReason;\r\n \r\n     /**\r\n      * After object getter.\r\n@@ -136,18 +136,18 @@ public void setStatus(final PropagationTaskExecStatus status) {\n     /**\r\n      * Propagation execution message getter.\r\n      *\r\n-     * @return executionMessage.\r\n+     * @return failureReason.\r\n      */\r\n-    public String getExecutionMessage() {\r\n-        return executionMessage;\r\n+    public String getFailureReason() {\r\n+        return failureReason;\r\n     }\r\n \r\n     /**\r\n-     * Propagation execution message setter.\r\n+     * Propagation execution failure message setter.\r\n      *\r\n-     * @param executionMessage\r\n+     * @param failureReason\r\n      */\r\n-    public void setExecutionMessage(final String executionMessage) {\r\n-        this.executionMessage = executionMessage;\r\n+    public void setFailureReason(final String failureReason) {\r\n+        this.failureReason = failureReason;\r\n     }\r\n }\r"},{"sha":"89b0b821519cd4f5a9ef42d3eac126586f5cb03d","filename":"console/src/main/java/org/apache/syncope/console/pages/FailureMessageModalPage.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e3295d7377155d7a817b917df8d9c4ee04384fe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FFailureMessageModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e3295d7377155d7a817b917df8d9c4ee04384fe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FFailureMessageModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FFailureMessageModalPage.java?ref=2e3295d7377155d7a817b917df8d9c4ee04384fe","patch":"@@ -0,0 +1,37 @@\n+    /*\n+     * Licensed to the Apache Software Foundation (ASF) under one\n+     * or more contributor license agreements.  See the NOTICE file\n+     * distributed with this work for additional information\n+     * regarding copyright ownership.  The ASF licenses this file\n+     * to you under the Apache License, Version 2.0 (the\n+     * \"License\"); you may not use this file except in compliance\n+     * with the License.  You may obtain a copy of the License at\n+     *\n+     *   http://www.apache.org/licenses/LICENSE-2.0\n+     *\n+     * Unless required by applicable law or agreed to in writing,\n+     * software distributed under the License is distributed on an\n+     * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+     * KIND, either express or implied.  See the License for the\n+     * specific language governing permissions and limitations\n+     * under the License.\n+     */\n+    package org.apache.syncope.console.pages;\n+\n+    import org.apache.wicket.markup.html.basic.Label;\n+    import org.apache.wicket.model.Model;\n+\n+    public class FailureMessageModalPage extends BaseModalPage {\n+\n+        private static final long serialVersionUID = 9216117990503199258L;\n+\n+        public FailureMessageModalPage(final String message, final String failureMessage) {\n+            final Label executionFailureMessage;\n+            if (!failureMessage.isEmpty()) {\n+                executionFailureMessage = new Label(\"failureMessage\", new Model<String>(failureMessage));\n+            } else {\n+                executionFailureMessage = new Label(\"failureMessage\");\n+            }\n+            add(executionFailureMessage.setOutputMarkupId(true));\n+        }\n+    }"},{"sha":"03d512a46607408aec73dd552f3d01d8d050932c","filename":"console/src/main/java/org/apache/syncope/console/pages/ResultStatusModalPage.java","status":"modified","additions":38,"deletions":1,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e3295d7377155d7a817b917df8d9c4ee04384fe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e3295d7377155d7a817b917df8d9c4ee04384fe/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=2e3295d7377155d7a817b917df8d9c4ee04384fe","patch":"@@ -29,6 +29,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n@@ -40,6 +41,7 @@\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.StatusUtils;\n import org.apache.wicket.Component;\n+import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.behavior.Behavior;\n@@ -164,6 +166,17 @@ protected void populateItem(final ListItem<PropagationStatusTO> item) {\n \n                     final Image image;\n                     final String alt, title;\n+                    final ModalWindow failureWindow = new ModalWindow(\"failureWindow\");\n+                    final AjaxLink<?> failureWindowLink = new AjaxLink<Void>(\"showFailureWindow\") {\n+\n+                        private static final long serialVersionUID = -7978723352517770644L;\n+\n+                        @Override\n+                        public void onClick(AjaxRequestTarget target) {\n+                            failureWindow.show(target);\n+                        }\n+                    };\n+\n                     switch (propTO.getStatus()) {\n \n                         case SUCCESS:\n@@ -173,6 +186,8 @@ protected void populateItem(final ListItem<PropagationStatusTO> item) {\n                                     + Constants.PNG_EXT);\n                             alt = \"success icon\";\n                             title = \"success\";\n+                            failureWindow.setVisible(false);\n+                            failureWindowLink.setEnabled(false);\n                             break;\n \n                         default:\n@@ -192,8 +207,30 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n                             tag.put(\"title\", title);\n                         }\n                     });\n+                    final FailureMessageModalPage executionFailureMessagePage;\n+                    if (propTO.getFailureReason() != null) {\n+                        executionFailureMessagePage = new FailureMessageModalPage(failureWindow.getContentId(), propTO.\n+                                getFailureReason());\n+                    } else {\n+                        executionFailureMessagePage = new FailureMessageModalPage(failureWindow.getContentId(),\n+                                StringUtils.EMPTY);\n+                    }\n+\n+                    failureWindow.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                        private static final long serialVersionUID = -7834632442532690940L;\n \n-                    attrhead.add(image);\n+                        @Override\n+                        public Page createPage() {\n+                            return executionFailureMessagePage;\n+                        }\n+                    });\n+                    failureWindow.setCookieName(\"failureWindow\");\n+                    failureWindow.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+                    //attrhead.add(image);\n+                    failureWindowLink.add(image);\n+                    attrhead.add(failureWindowLink);\n+                    attrhead.add(failureWindow);\n                 }\n             };\n             fragment.add(propRes);"},{"sha":"832e5b089a5be2b1160ebaa2f0b0e85f7a653f86","filename":"console/src/main/resources/org/apache/syncope/console/pages/FailureMessageModalPage.html","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e3295d7377155d7a817b917df8d9c4ee04384fe/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FFailureMessageModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e3295d7377155d7a817b917df8d9c4ee04384fe/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FFailureMessageModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FFailureMessageModalPage.html?ref=2e3295d7377155d7a817b917df8d9c4ee04384fe","patch":"@@ -0,0 +1,45 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE html>\n+<style>\n+  .w_content_3 {\n+    padding: 0;\n+  }\n+\n+  .w_body_1{\n+    color: #333333;\n+    font-family: Verdana,Tahoma,sans-serif;\n+    font-size: 62.5%;\n+  }\n+</style>\n+<html>\n+  <head>\n+    <title></title>\n+    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n+  </head>\n+  <body class=\"w_body_1\">\n+    <div class=\"w_content_3\">\n+      <div>\n+          <div style=\"margin: 1em\">\n+            <pre wicket:id=\"failureMessage\"></pre> \n+          </div>\n+      </div>\n+    </div>\n+  </body>\n+</html>"},{"sha":"0e51290bae5e309e3a3efbcddb23ab183e685b4d","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResultStatusModalPage.html","status":"modified","additions":30,"deletions":16,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e3295d7377155d7a817b917df8d9c4ee04384fe/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e3295d7377155d7a817b917df8d9c4ee04384fe/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.html?ref=2e3295d7377155d7a817b917df8d9c4ee04384fe","patch":"@@ -91,12 +91,16 @@\n       display: table-cell;\n       width: 220px;\n       height: 30px;\n-      padding: 3px 0px 5px 0px;\n+      padding: 10px 0px 5px 0px;\n     }\n \n     div#resource img{\n       width: 12px;\n       height: 12px;\n+      position: relative;\n+      left: 3px;\n+      top: 1px;\n+      opacity: 1;\n     }\n \n     div#attrhead {\n@@ -106,8 +110,8 @@\n       height: 30px;\n       padding: 3px 0px 5px 0px;\n       text-align: center;\n-      vertical-align: bottom;\n-      font-size: 8px;\n+      vertical-align: middle;\n+      font-size: 11px;\n     }\n   </style>\n </wicket:head>\n@@ -159,13 +163,18 @@\n       <div id=\"resource\">\n         <div>\n           <span wicket:id=\"resource\">[resource name]</span>\n-          <img wicket:id=\"icon\"/>\n-        </div>\n+          <a wicket:id=\"showFailureWindow\" href=\"#\">\n+            <img wicket:id=\"icon\"/>\n+          </a>\n+         \n+          <div id=\"propagation\">\n+            <wicket:message key=\"propresult\">[propagation result message]</wicket:message>\n+            &nbsp;\n+            <span wicket:id=\"propagation\">[propagation result]</span>\n+          </div>\n+         \n+          <div wicket:id=\"failureWindow\"></div>\n \n-        <div id=\"propagation\">\n-          <wicket:message key=\"propresult\">[propagation result message]</wicket:message>\n-          &nbsp;\n-          <span wicket:id=\"propagation\">[propagation result]</span>\n         </div>\n       </div>\n \n@@ -184,13 +193,18 @@\n       <div id=\"resource\">\n         <div>\n           <span wicket:id=\"resource\">[resource name]</span>\n-          <img wicket:id=\"icon\"/>\n-        </div>\n-\n-        <div id=\"propagation\">\n-          <wicket:message key=\"propresult\">[propagation result message]</wicket:message>\n-          &nbsp;\n-          <span wicket:id=\"propagation\">[propagation result]</span>\n+          <a wicket:id=\"showFailureWindow\" href=\"#\">\n+            <img wicket:id=\"icon\"/>\n+          </a>\n+\n+          <div id=\"propagation\">\n+            <wicket:message key=\"propresult\">[propagation result message]</wicket:message>\n+            &nbsp;\n+            <span wicket:id=\"propagation\">[propagation result]</span>\n+            <div wicket:id=\"failureWindow\"></div>\n+\n+          </div>\n+         \n         </div>\n       </div>\n     </div>"},{"sha":"af11caf60adc6b39debcadd513f24b43d1f7cb13","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationHandler.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e3295d7377155d7a817b917df8d9c4ee04384fe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e3295d7377155d7a817b917df8d9c4ee04384fe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationHandler.java?ref=2e3295d7377155d7a817b917df8d9c4ee04384fe","patch":"@@ -32,9 +32,10 @@ public interface PropagationHandler {\n      *\n      * @param resourceName resource name.\n      * @param execStatus propagation execution status.\n+     * @param failureReason propagation execution failure message.\n      * @param beforeObj retrieved connector object before operation execution.\n      * @param afterObj retrieved connector object after operation execution.\n      */\n     void handle(String resourceName, PropagationTaskExecStatus execStatus,\n-            String taskExecutionMessage, ConnectorObject beforeObj, ConnectorObject afterObj);\n+            String failureReason, ConnectorObject beforeObj, ConnectorObject afterObj);\n }"},{"sha":"99fa518340138d7492fdcca0d01a25b382436969","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/AbstractPropagationTaskExecutor.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e3295d7377155d7a817b917df8d9c4ee04384fe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e3295d7377155d7a817b917df8d9c4ee04384fe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java?ref=2e3295d7377155d7a817b917df8d9c4ee04384fe","patch":"@@ -275,6 +275,7 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n         execution.setStatus(PropagationTaskExecStatus.CREATED.name());\n \n         String taskExecutionMessage = null;\n+        String failureReason = null;\n \n         // Flag to state whether any propagation has been attempted\n         Set<String> propagationAttempted = new HashSet<String>();\n@@ -314,11 +315,17 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n \n             if (e instanceof ConnectorException && e.getCause() != null) {\n                 taskExecutionMessage = e.getCause().getMessage();\n+                failureReason = e.getMessage() + \"\\n\\n Cause: \" + e.getCause().getMessage().split(\"\\n\")[0];\n             } else {\n                 StringWriter exceptionWriter = new StringWriter();\n                 exceptionWriter.write(e.getMessage() + \"\\n\\n\");\n                 e.printStackTrace(new PrintWriter(exceptionWriter));\n                 taskExecutionMessage = exceptionWriter.toString();\n+                if (e.getCause() != null) {\n+                    failureReason = e.getMessage() + \"\\n\\n Cause: \" + e.getCause().getMessage().split(\"\\n\")[0];\n+                } else {\n+                    failureReason = e.getMessage();\n+                }\n             }\n \n             try {\n@@ -362,12 +369,12 @@ public TaskExec execute(final PropagationTask task, final PropagationHandler han\n                 // this flush call is needed to generate a value for the execution id\n                 taskDAO.flush();\n             }\n-            \n+\n             if (handler != null) {\n                 handler.handle(\n                         task.getResource().getName(),\n                         PropagationTaskExecStatus.valueOf(execution.getStatus()),\n-                        taskExecutionMessage,\n+                        failureReason,\n                         beforeObj,\n                         afterObj);\n             }"},{"sha":"716f63f19529cf34fb0565658a89f79713e7494f","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/DefaultPropagationHandler.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e3295d7377155d7a817b917df8d9c4ee04384fe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e3295d7377155d7a817b917df8d9c4ee04384fe/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java?ref=2e3295d7377155d7a817b917df8d9c4ee04384fe","patch":"@@ -45,12 +45,12 @@ public DefaultPropagationHandler(final ConnObjectUtil connObjectUtil,\n \n     @Override\n     public void handle(final String resource, final PropagationTaskExecStatus executionStatus,\n-            final String taskExecutionMessage, final ConnectorObject beforeObj, final ConnectorObject afterObj) {\n+            final String failureReason, final ConnectorObject beforeObj, final ConnectorObject afterObj) {\n \n         final PropagationStatusTO propagation = new PropagationStatusTO();\n         propagation.setResource(resource);\n         propagation.setStatus(executionStatus);\n-        propagation.setExecutionMessage(taskExecutionMessage);\n+        propagation.setFailureReason(failureReason);\n \n         if (beforeObj != null) {\n             propagation.setBeforeObj(connObjectUtil.getConnObjectTO(beforeObj));\n@@ -75,7 +75,7 @@ public void completeWhenPrimaryResourceErrored(\n                 final PropagationStatusTO propagationStatusTO = new PropagationStatusTO();\n                 propagationStatusTO.setResource(propagationTask.getResource().getName());\n                 propagationStatusTO.setStatus(PropagationTaskExecStatus.FAILURE);\n-                propagationStatusTO.setExecutionMessage(\n+                propagationStatusTO.setFailureReason(\n                         \"Propagation error: \" + failedResource + \" primary resource failed to propagate.\");\n                 propagations.add(propagationStatusTO);\n             }"},{"sha":"56947f6b8d0138740b9af9d4a4922fe6c982db94","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2e3295d7377155d7a817b917df8d9c4ee04384fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2e3295d7377155d7a817b917df8d9c4ee04384fe/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=2e3295d7377155d7a817b917df8d9c4ee04384fe","patch":"@@ -242,7 +242,7 @@ public void issue186() {\n         userMod.addResourceToBeAdded(\"ws-target-resource-1\");\n \n         userTO = userService.update(userMod.getId(), userMod);\n-        assertNotNull(userTO.getPropagationStatusTOs().get(0).getExecutionMessage());\n+        assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n \n         // 4. update assigning a resource NOT forcing mandatory constraints\n         // BUT not primary: must succeed\n@@ -1817,7 +1817,7 @@ public void issueSYNCOPE279() {\n         userTO.addResource(\"ws-target-resource-timeout\");\n         userTO = createUser(userTO);\n         assertEquals(\"ws-target-resource-timeout\", userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertNotNull(userTO.getPropagationStatusTOs().get(0).getExecutionMessage());\n+        assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n         assertEquals(PropagationTaskExecStatus.UNSUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n     }\n \n@@ -2213,7 +2213,7 @@ public void issueSYNCOPE383() {\n         userTO = userService.update(userMod.getId(), userMod);\n         assertEquals(RESOURCE_NAME_TESTDB, userTO.getResources().iterator().next());\n         assertFalse(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n-        assertNotNull(userTO.getPropagationStatusTOs().get(0).getExecutionMessage());\n+        assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n \n         // 3. request to change password only on testdb\n         userMod = new UserMod();\n@@ -2325,7 +2325,7 @@ public void issueSYNCOPE402() {\n         userMod.addResourceToBeAdded(\"resource-testdb\");\n         userTO = userService.update(userMod.getId(), userMod);\n         assertEquals(\"ws-target-resource-1\", userTO.getPropagationStatusTOs().get(1).getResource());\n-        assertNotNull(userTO.getPropagationStatusTOs().get(1).getExecutionMessage());\n+        assertNotNull(userTO.getPropagationStatusTOs().get(1).getFailureReason());\n         assertEquals(PropagationTaskExecStatus.UNSUBMITTED, userTO.getPropagationStatusTOs().get(1).getStatus());\n     }\n "}]}