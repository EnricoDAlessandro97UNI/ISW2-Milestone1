{"sha":"a57825dfd7eaa65c7521361c2429fbe863381faa","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE1NzgyNWRmZDdlYWE2NWM3NTIxMzYxYzI0MjlmYmU4NjMzODFmYWE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-07T16:27:23Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-12-07T16:27:23Z"},"message":"Supporting loading from external LDIF file\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/DEV_ROLE_PROVISIONING@1418382 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4151e8a6ad3263e2cf0fec7bab3b45e212b7792a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4151e8a6ad3263e2cf0fec7bab3b45e212b7792a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a57825dfd7eaa65c7521361c2429fbe863381faa","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a57825dfd7eaa65c7521361c2429fbe863381faa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a57825dfd7eaa65c7521361c2429fbe863381faa","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a57825dfd7eaa65c7521361c2429fbe863381faa/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"79e751374d06c4e6a09c8858cc6f25caad4f9c82","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/79e751374d06c4e6a09c8858cc6f25caad4f9c82","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/79e751374d06c4e6a09c8858cc6f25caad4f9c82"}],"stats":{"total":181,"additions":163,"deletions":18},"files":[{"sha":"bb46d1a7a8a1b47088f709ba1c0069bbbe4390f3","filename":"build-tools/src/main/java/org/apache/syncope/buildtools/ApacheDSStartStopListener.java","status":"modified","additions":5,"deletions":18,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a57825dfd7eaa65c7521361c2429fbe863381faa/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a57825dfd7eaa65c7521361c2429fbe863381faa/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java?ref=a57825dfd7eaa65c7521361c2429fbe863381faa","patch":"@@ -172,24 +172,11 @@ private void initDirectoryService(final ServletContext servletContext, final Fil\n         // And start the service\n         service.startup();\n \n-        // Finally, build base DN entries\n-        final DN dnIsp = new DN(\"o=isp\");\n-        final ServerEntry rootEntry = service.newEntry(dnIsp);\n-        rootEntry.add(\"objectClass\", \"top\", \"organization\");\n-        rootEntry.add(\"o\", \"isp\");\n-        service.getAdminSession().add(rootEntry);\n-\n-        final DN dnPeople = new DN(\"ou=People,o=isp\");\n-        final ServerEntry peopleEntry = service.newEntry(dnPeople);\n-        peopleEntry.add(\"objectClass\", \"top\", \"organizationalUnit\");\n-        peopleEntry.add(\"ou\", \"People\");\n-        service.getAdminSession().add(peopleEntry);\n-\n-        final DN dnGroups = new DN(\"ou=Groups,o=isp\");\n-        final ServerEntry groupsEntry = service.newEntry(dnGroups);\n-        groupsEntry.add(\"objectClass\", \"top\", \"organizationalUnit\");\n-        groupsEntry.add(\"ou\", \"Groups\");\n-        service.getAdminSession().add(groupsEntry);\n+        // Finally, load content LDIF\n+        final LdifURLLoader contentLoader = new LdifURLLoader(service.getAdminSession(),\n+                servletContext.getResource(\"/WEB-INF/classes/content.ldif\"));\n+        final int numEntries = contentLoader.execute();\n+        servletContext.log(\"Successfully created \" + numEntries + \" entries\");\n     }\n \n     /**"},{"sha":"bb02d947591135d6c1dc79efd7fc07dcf662df14","filename":"build-tools/src/main/java/org/apache/syncope/buildtools/LdifURLLoader.java","status":"added","additions":127,"deletions":0,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a57825dfd7eaa65c7521361c2429fbe863381faa/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FLdifURLLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a57825dfd7eaa65c7521361c2429fbe863381faa/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FLdifURLLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fbuildtools%2FLdifURLLoader.java?ref=a57825dfd7eaa65c7521361c2429fbe863381faa","patch":"@@ -0,0 +1,127 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *  \n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *  \n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License. \n+ *  \n+ */\n+package org.apache.syncope.buildtools;\n+\n+import java.io.FileNotFoundException;\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.util.List;\n+import javax.naming.NamingException;\n+import org.apache.directory.server.core.CoreSession;\n+import org.apache.directory.server.i18n.I18n;\n+import org.apache.directory.shared.ldap.entry.DefaultServerEntry;\n+import org.apache.directory.shared.ldap.entry.Entry;\n+import org.apache.directory.shared.ldap.entry.Modification;\n+import org.apache.directory.shared.ldap.ldif.LdifEntry;\n+import org.apache.directory.shared.ldap.ldif.LdifReader;\n+import org.apache.directory.shared.ldap.name.DN;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Support for commands to load an LDIF from an URL into a DirContext.\n+ *\n+ * @see org.apache.directory.server.protocol.shared.store.LdifFileLoader\n+ */\n+public class LdifURLLoader {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(LdifURLLoader.class);\n+\n+    /**\n+     * A handle on the top core session.\n+     */\n+    protected CoreSession coreSession;\n+\n+    /**\n+     * The LDIF URL.\n+     */\n+    protected URL ldif;\n+\n+    /**\n+     * The total count of entries loaded.\n+     */\n+    private int count;\n+\n+    public LdifURLLoader(final CoreSession coreSession, final URL ldif) {\n+        this.coreSession = coreSession;\n+        this.ldif = ldif;\n+    }\n+\n+    /**\n+     * Opens the LDIF file and loads the entries into the context.\n+     *\n+     * @return The count of entries created.\n+     */\n+    public int execute() {\n+        DN rdn = null;\n+        InputStream in = null;\n+\n+        try {\n+            in = ldif.openStream();\n+\n+            for (final LdifEntry ldifEntry : new LdifReader(in)) {\n+                final DN dn = ldifEntry.getDn();\n+\n+                if (ldifEntry.isEntry()) {\n+                    final Entry entry = ldifEntry.getEntry();\n+                    try {\n+                        coreSession.lookup(dn);\n+                        LOG.info(\"Found {}, will not create.\", rdn);\n+                    } catch (Exception e) {\n+                        try {\n+                            coreSession.add(new DefaultServerEntry(\n+                                    coreSession.getDirectoryService().getSchemaManager(), entry));\n+                            count++;\n+                            LOG.info(\"Created {}.\", rdn);\n+                        } catch (NamingException ne) {\n+                            LOG.info(\"Could not create entry {}\", entry, ne);\n+                        }\n+                    }\n+                } else {\n+                    //modify\n+                    final List<Modification> items = ldifEntry.getModificationItems();\n+                    try {\n+                        coreSession.modify(dn, items);\n+                        LOG.info(\"Modified: \" + dn + \" with modificationItems: \" + items);\n+                    } catch (NamingException e) {\n+                        LOG.info(\"Could not modify: \" + dn + \" with modificationItems: \" + items, e);\n+                    }\n+                }\n+            }\n+        } catch (FileNotFoundException fnfe) {\n+            LOG.error(I18n.err(I18n.ERR_173));\n+        } catch (Exception ioe) {\n+            LOG.error(I18n.err(I18n.ERR_174), ioe);\n+        } finally {\n+            if (in != null) {\n+                try {\n+                    in.close();\n+                } catch (Exception e) {\n+                    LOG.error(I18n.err(I18n.ERR_175), e);\n+                }\n+            }\n+        }\n+\n+        return count;\n+    }\n+}"},{"sha":"79b4e4606a9a84c9c4f780fe0a9832eacbef48ee","filename":"build-tools/src/main/resources/content.ldif","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a57825dfd7eaa65c7521361c2429fbe863381faa/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a57825dfd7eaa65c7521361c2429fbe863381faa/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif?ref=a57825dfd7eaa65c7521361c2429fbe863381faa","patch":"@@ -0,0 +1,31 @@\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+DN: o=isp\n+objectClass: organization\n+objectClass: top\n+o: isp\n+\n+DN: ou=People,o=isp\n+objectClass: organizationalUnit\n+objectClass: top\n+ou: People\n+\n+DN: ou=Groups,o=isp\n+objectClass: organizationalUnit\n+objectClass: top\n+ou: Groups\n+\n+DN: cn=testLDAPGroup,ou=Groups,o=isp\n+objectClass: groupOfUniqueNames\n+objectClass: top\n+cn: testLDAPGroup\n+uniqueMember: uid=admin,ou=system"}]}