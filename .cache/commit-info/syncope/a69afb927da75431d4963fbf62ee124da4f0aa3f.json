{"sha":"a69afb927da75431d4963fbf62ee124da4f0aa3f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE2OWFmYjkyN2RhNzU0MzFkNDk2M2ZiZjYyZWUxMjRkYTRmMGFhM2Y=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-12-13T09:24:06Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-12-13T09:28:55Z"},"message":"[SYNCOPE-1250] splits filtering (performed on schema set) and sorting (performed on attributes)","tree":{"sha":"6d8f4a3b28ce80c4237fe1e268504ec89e756508","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6d8f4a3b28ce80c4237fe1e268504ec89e756508"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a69afb927da75431d4963fbf62ee124da4f0aa3f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a69afb927da75431d4963fbf62ee124da4f0aa3f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a69afb927da75431d4963fbf62ee124da4f0aa3f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a69afb927da75431d4963fbf62ee124da4f0aa3f/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"5d259daee8eb0753b686d1ce0de23b8b39c172de","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5d259daee8eb0753b686d1ce0de23b8b39c172de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5d259daee8eb0753b686d1ce0de23b8b39c172de"}],"stats":{"total":36,"additions":15,"deletions":21},"files":[{"sha":"bae86f175d3320e9b89187f2d99e7d4a5f3a94b0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":15,"deletions":21,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a69afb927da75431d4963fbf62ee124da4f0aa3f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a69afb927da75431d4963fbf62ee124da4f0aa3f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=a69afb927da75431d4963fbf62ee124da4f0aa3f","patch":"@@ -22,7 +22,6 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n-import java.util.HashMap;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n@@ -161,27 +160,11 @@ private void setSchemas(final List<String> anyTypeClasses, final Map<String, S>\n             // 1. remove attributes not selected for display\n             allSchemas.removeAll(allSchemas.stream().\n                     filter(schemaTO -> !whichAttrs.contains(schemaTO.getKey())).collect(Collectors.toSet()));\n-\n-            // 2. sort remainig attributes according to configuration, e.g. attrLayout\n-            final Map<String, Integer> attrLayoutMap = new HashMap<>(whichAttrs.size());\n-            for (int i = 0; i < whichAttrs.size(); i++) {\n-                attrLayoutMap.put(whichAttrs.get(i), i);\n-            }\n-            Collections.sort(allSchemas, (schema1, schema2) -> {\n-                int value = 0;\n-\n-                if (attrLayoutMap.get(schema1.getKey()) > attrLayoutMap.get(schema2.getKey())) {\n-                    value = 1;\n-                } else if (attrLayoutMap.get(schema1.getKey()) < attrLayoutMap.get(schema2.getKey())) {\n-                    value = -1;\n-                }\n-\n-                return value;\n-            });\n-        }\n+        \n         allSchemas.forEach(schemaTO -> {\n             scs.put(schemaTO.getKey(), schemaTO);\n-        });\n+            });\n+        }\n     }\n \n     @Override\n@@ -225,7 +208,7 @@ public PageReference getPageReference() {\n         return null;\n     }\n \n-    protected static class AttrComparator implements Comparator<AttrTO>, Serializable {\n+    protected class AttrComparator implements Comparator<AttrTO>, Serializable {\n \n         private static final long serialVersionUID = -5105030477767941060L;\n \n@@ -236,6 +219,17 @@ public int compare(final AttrTO left, final AttrTO right) {\n             }\n             if (right == null || StringUtils.isEmpty(right.getSchema())) {\n                 return 1;\n+            } else if (AbstractAttrs.this.reoderSchemas()) {\n+                int leftIndex = AbstractAttrs.this.whichAttrs.indexOf(left.getSchema());\n+                int rightIndex = AbstractAttrs.this.whichAttrs.indexOf(right.getSchema());\n+\n+                if (leftIndex > rightIndex) {\n+                    return 1;\n+                } else if (leftIndex < rightIndex) {\n+                    return -1;\n+                } else {\n+                    return 0;\n+                }\n             } else {\n                 return left.getSchema().compareTo(right.getSchema());\n             }"}]}