{"sha":"a9aafe2dcb3d66465253e87b1676488a67defe4a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE5YWFmZTJkY2IzZDY2NDY1MjUzZTg3YjE2NzY0ODhhNjdkZWZlNGE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-22T14:12:47Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-09-22T14:13:01Z"},"message":"[SYNCOPE-949] Remove management of WebApplicationException and BadRequestException","tree":{"sha":"9db0b794748ec94a61d0553051fd9332a12f8297","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9db0b794748ec94a61d0553051fd9332a12f8297"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a9aafe2dcb3d66465253e87b1676488a67defe4a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9aafe2dcb3d66465253e87b1676488a67defe4a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a9aafe2dcb3d66465253e87b1676488a67defe4a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a9aafe2dcb3d66465253e87b1676488a67defe4a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c4339686a93422f3954a2b0718485c6ec05577aa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c4339686a93422f3954a2b0718485c6ec05577aa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c4339686a93422f3954a2b0718485c6ec05577aa"}],"stats":{"total":21,"additions":1,"deletions":20},"files":[{"sha":"eb584df5f432683273100e2c6d7516a2a0b63c29","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":1,"deletions":20,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a9aafe2dcb3d66465253e87b1676488a67defe4a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a9aafe2dcb3d66465253e87b1676488a67defe4a/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=a9aafe2dcb3d66465253e87b1676488a67defe4a","patch":"@@ -28,8 +28,6 @@\n import javax.persistence.PersistenceException;\n import javax.persistence.RollbackException;\n import javax.validation.ValidationException;\n-import javax.ws.rs.BadRequestException;\n-import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.Response.ResponseBuilder;\n@@ -99,15 +97,6 @@ public Response toResponse(final Exception ex) {\n             builder = sce.isComposite()\n                     ? getSyncopeClientCompositeExceptionResponse(sce.asComposite())\n                     : getSyncopeClientExceptionResponse(sce);\n-        } else if (ex instanceof WebApplicationException) {\n-            Response response = ((WebApplicationException) ex).getResponse();\n-\n-            ErrorTO error = new ErrorTO();\n-            error.setStatus(response.getStatus());\n-            error.setType(ClientExceptionType.Unknown);\n-            error.getElements().add(ExceptionUtils.getRootCauseMessage(ex));\n-\n-            builder = builder(response).entity(error);\n         } else if (ex instanceof AccessDeniedException) {\n             builder = Response.status(Response.Status.UNAUTHORIZED).\n                     header(RESTHeaders.ERROR_CODE, Response.Status.UNAUTHORIZED.getReasonPhrase()).\n@@ -260,8 +249,6 @@ private ResponseBuilder processInvalidEntityExceptions(final Exception ex) {\n     }\n \n     private ResponseBuilder processBadRequestExceptions(final Exception ex) {\n-        ResponseBuilder builder = Response.status(Response.Status.BAD_REQUEST);\n-\n         // This exception might be raised by Activiti (if enabled)\n         Class<?> ibatisPersistenceException = null;\n         try {\n@@ -270,13 +257,7 @@ private ResponseBuilder processBadRequestExceptions(final Exception ex) {\n             // ignore\n         }\n \n-        if (ex instanceof BadRequestException) {\n-            if (((BadRequestException) ex).getResponse() == null) {\n-                return builder;\n-            } else {\n-                return builder(((BadRequestException) ex).getResponse());\n-            }\n-        } else if (ex instanceof WorkflowException) {\n+        if (ex instanceof WorkflowException) {\n             return builder(ClientExceptionType.Workflow, ExceptionUtils.getRootCauseMessage(ex));\n         } else if (ex instanceof PersistenceException) {\n             return builder(ClientExceptionType.GenericPersistence, ExceptionUtils.getRootCauseMessage(ex));"}]}