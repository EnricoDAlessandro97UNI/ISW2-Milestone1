{"sha":"b28b5843654e8b4c8975b7f8fb1491aba5f92412","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIyOGI1ODQzNjU0ZThiNGM4OTc1YjdmOGZiMTQ5MWFiYTVmOTI0MTI=","commit":{"author":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2013-05-31T16:06:05Z"},"committer":{"name":"Massimiliano Perrone","email":"massi@apache.org","date":"2013-05-31T16:06:05Z"},"message":"[SYNCOPE-381] bug introduced from builder\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1488286 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"dc184bc1f96d7213dc24edbefd8dbc1ce7d3d068","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/dc184bc1f96d7213dc24edbefd8dbc1ce7d3d068"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b28b5843654e8b4c8975b7f8fb1491aba5f92412","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b28b5843654e8b4c8975b7f8fb1491aba5f92412","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b28b5843654e8b4c8975b7f8fb1491aba5f92412","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b28b5843654e8b4c8975b7f8fb1491aba5f92412/comments","author":null,"committer":null,"parents":[{"sha":"fbd31cd5dd2022c37d9cedff58898d9c9218bdc1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fbd31cd5dd2022c37d9cedff58898d9c9218bdc1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fbd31cd5dd2022c37d9cedff58898d9c9218bdc1"}],"stats":{"total":179,"additions":90,"deletions":89},"files":[{"sha":"1572a8b93d70d998d78e73ff8535bd7a9e2e15c0","filename":"console/src/main/java/org/apache/syncope/console/SyncopeSession.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b28b5843654e8b4c8975b7f8fb1491aba5f92412/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b28b5843654e8b4c8975b7f8fb1491aba5f92412/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=b28b5843654e8b4c8975b7f8fb1491aba5f92412","patch":"@@ -71,7 +71,7 @@ public class SyncopeSession extends WebSession {\n \n     private static final long serialVersionUID = 7743446298924805872L;\n \n-    public static final List<Locale> SUPPORTED_LOCALES = Arrays.asList(new Locale[] {\n+    public static final List<Locale> SUPPORTED_LOCALES = Arrays.asList(new Locale[]{\n         Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\")});\n \n     private String userId;"},{"sha":"7b0843f24eeb7a9b9e85331f13754ba1b19f3819","filename":"console/src/main/java/org/apache/syncope/console/pages/ResultStatusModalPage.java","status":"modified","additions":89,"deletions":88,"changes":177,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b28b5843654e8b4c8975b7f8fb1491aba5f92412/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b28b5843654e8b4c8975b7f8fb1491aba5f92412/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResultStatusModalPage.java?ref=b28b5843654e8b4c8975b7f8fb1491aba5f92412","patch":"@@ -105,111 +105,112 @@ private ResultStatusModalPage(final Builder builder) {\n             this.mode = UserModalPage.Mode.ADMIN;\n         } else {\n             this.mode = builder.mode;\n-            final BaseModalPage page = this;\n-\n-            final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n-            container.setOutputMarkupId(true);\n-            add(container);\n-\n-            final Fragment fragment = new Fragment(\"resultFrag\", mode == UserModalPage.Mode.SELF\n-                    ? \"userRequestResultFrag\"\n-                    : \"propagationResultFrag\", this);\n-            fragment.setOutputMarkupId(true);\n-            container.add(fragment);\n-\n-            if (mode == UserModalPage.Mode.ADMIN) {\n-                // add Syncope propagation status\n-                PropagationStatusTO syncope = new PropagationStatusTO();\n-                syncope.setResource(\"Syncope\");\n-                syncope.setStatus(PropagationTaskExecStatus.SUCCESS);\n-\n-                List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-                propagations.add(syncope);\n-                propagations.addAll(attributable.getPropagationStatusTOs());\n-\n-                fragment.add(new Label(\"info\",\n-                        ((attributable instanceof UserTO) && ((UserTO) attributable).getUsername() != null)\n-                        ? ((UserTO) attributable).getUsername()\n-                        : ((attributable instanceof RoleTO) && ((RoleTO) attributable).getName() != null)\n-                        ? ((RoleTO) attributable).getName()\n-                        : String.valueOf(attributable.getId())));\n-\n-                final ListView<PropagationStatusTO> propRes = new ListView<PropagationStatusTO>(\"resources\",\n-                        propagations) {\n-\n-                    private static final long serialVersionUID = -1020475259727720708L;\n-\n-                    @Override\n-                    protected void populateItem(final ListItem<PropagationStatusTO> item) {\n-                        final PropagationStatusTO propTO = (PropagationStatusTO) item.getDefaultModelObject();\n-\n-                        final ListView attributes = getConnObjectView(propTO);\n-\n-                        final Fragment attrhead;\n-                        if (attributes.getModelObject() == null || attributes.getModelObject().isEmpty()) {\n-                            attrhead = new Fragment(\"attrhead\", \"emptyAttrHeadFrag\", page);\n-                        } else {\n-                            attrhead = new Fragment(\"attrhead\", \"attrHeadFrag\", page);\n-                        }\n+        }\n \n-                        item.add(attrhead);\n-                        item.add(attributes);\n+        final BaseModalPage page = this;\n \n-                        attrhead.add(new Label(\"resource\", propTO.getResource()));\n+        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n \n-                        attrhead.add(new Label(\"propagation\", propTO.getStatus() == null\n-                                ? \"UNDEFINED\" : propTO.getStatus().toString()));\n+        final Fragment fragment = new Fragment(\"resultFrag\", mode == UserModalPage.Mode.SELF\n+                ? \"userRequestResultFrag\"\n+                : \"propagationResultFrag\", this);\n+        fragment.setOutputMarkupId(true);\n+        container.add(fragment);\n \n-                        final Image image;\n-                        final String alt, title;\n-                        switch (propTO.getStatus()) {\n+        if (mode == UserModalPage.Mode.ADMIN) {\n+            // add Syncope propagation status\n+            PropagationStatusTO syncope = new PropagationStatusTO();\n+            syncope.setResource(\"Syncope\");\n+            syncope.setStatus(PropagationTaskExecStatus.SUCCESS);\n \n-                            case SUCCESS:\n-                            case SUBMITTED:\n-                            case CREATED:\n-                                image = new Image(\"icon\", IMG_STATUSES + StatusUtils.Status.ACTIVE.toString()\n-                                        + Constants.PNG_EXT);\n-                                alt = \"success icon\";\n-                                title = \"success\";\n-                                break;\n+            List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n+            propagations.add(syncope);\n+            propagations.addAll(attributable.getPropagationStatusTOs());\n \n-                            default:\n-                                image = new Image(\"icon\", IMG_STATUSES + StatusUtils.Status.SUSPENDED.toString()\n-                                        + Constants.PNG_EXT);\n-                                alt = \"failure icon\";\n-                                title = \"failure\";\n-                        }\n+            fragment.add(new Label(\"info\",\n+                    ((attributable instanceof UserTO) && ((UserTO) attributable).getUsername() != null)\n+                    ? ((UserTO) attributable).getUsername()\n+                    : ((attributable instanceof RoleTO) && ((RoleTO) attributable).getName() != null)\n+                    ? ((RoleTO) attributable).getName()\n+                    : String.valueOf(attributable.getId())));\n \n-                        image.add(new Behavior() {\n+            final ListView<PropagationStatusTO> propRes = new ListView<PropagationStatusTO>(\"resources\",\n+                    propagations) {\n \n-                            private static final long serialVersionUID = 1469628524240283489L;\n+                private static final long serialVersionUID = -1020475259727720708L;\n \n-                            @Override\n-                            public void onComponentTag(final Component component, final ComponentTag tag) {\n-                                tag.put(\"alt\", alt);\n-                                tag.put(\"title\", title);\n-                            }\n-                        });\n+                @Override\n+                protected void populateItem(final ListItem<PropagationStatusTO> item) {\n+                    final PropagationStatusTO propTO = (PropagationStatusTO) item.getDefaultModelObject();\n+\n+                    final ListView attributes = getConnObjectView(propTO);\n \n-                        attrhead.add(image);\n+                    final Fragment attrhead;\n+                    if (attributes.getModelObject() == null || attributes.getModelObject().isEmpty()) {\n+                        attrhead = new Fragment(\"attrhead\", \"emptyAttrHeadFrag\", page);\n+                    } else {\n+                        attrhead = new Fragment(\"attrhead\", \"attrHeadFrag\", page);\n                     }\n-                };\n-                fragment.add(propRes);\n-            }\n \n-            final AjaxLink close = new IndicatingAjaxLink(\"close\") {\n+                    item.add(attrhead);\n+                    item.add(attributes);\n \n-                private static final long serialVersionUID = -7978723352517770644L;\n+                    attrhead.add(new Label(\"resource\", propTO.getResource()));\n \n-                @Override\n-                public void onClick(final AjaxRequestTarget target) {\n-                    builder.window.close(target);\n+                    attrhead.add(new Label(\"propagation\", propTO.getStatus() == null\n+                            ? \"UNDEFINED\" : propTO.getStatus().toString()));\n+\n+                    final Image image;\n+                    final String alt, title;\n+                    switch (propTO.getStatus()) {\n+\n+                        case SUCCESS:\n+                        case SUBMITTED:\n+                        case CREATED:\n+                            image = new Image(\"icon\", IMG_STATUSES + StatusUtils.Status.ACTIVE.toString()\n+                                    + Constants.PNG_EXT);\n+                            alt = \"success icon\";\n+                            title = \"success\";\n+                            break;\n+\n+                        default:\n+                            image = new Image(\"icon\", IMG_STATUSES + StatusUtils.Status.SUSPENDED.toString()\n+                                    + Constants.PNG_EXT);\n+                            alt = \"failure icon\";\n+                            title = \"failure\";\n+                    }\n+\n+                    image.add(new Behavior() {\n+\n+                        private static final long serialVersionUID = 1469628524240283489L;\n+\n+                        @Override\n+                        public void onComponentTag(final Component component, final ComponentTag tag) {\n+                            tag.put(\"alt\", alt);\n+                            tag.put(\"title\", title);\n+                        }\n+                    });\n+\n+                    attrhead.add(image);\n                 }\n             };\n-            container.add(close);\n-\n-            setOutputMarkupId(true);\n+            fragment.add(propRes);\n         }\n+\n+        final AjaxLink close = new IndicatingAjaxLink(\"close\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                builder.window.close(target);\n+            }\n+        };\n+        container.add(close);\n+\n+        setOutputMarkupId(true);\n     }\n \n     /**"}]}