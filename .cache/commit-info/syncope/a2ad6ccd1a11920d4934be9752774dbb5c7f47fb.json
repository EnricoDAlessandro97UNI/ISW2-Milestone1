{"sha":"a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmEyYWQ2Y2NkMWExMTkyMGQ0OTM0YmU5NzUyNzc0ZGJiNWM3ZjQ3ZmI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-02T15:33:08Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-02T15:33:08Z"},"message":"[SYNCOPE-460] Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1554832 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6324d8fa5db1f273b3c931c66ada2392913f9812","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6324d8fa5db1f273b3c931c66ada2392913f9812"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"dd64e6132c37e9d9364d7ecea06d8c89acb62934","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd64e6132c37e9d9364d7ecea06d8c89acb62934","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dd64e6132c37e9d9364d7ecea06d8c89acb62934"},{"sha":"7126dd25b1bb769b55cc48fc6613eeec531bec04","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7126dd25b1bb769b55cc48fc6613eeec531bec04","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7126dd25b1bb769b55cc48fc6613eeec531bec04"}],"stats":{"total":127,"additions":96,"deletions":31},"files":[{"sha":"a9da33d8c7b57275f2f5854cc91138904c9c7987","filename":"core/pom.xml","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -236,6 +236,11 @@ under the License.\n       <groupId>org.apache.openjpa</groupId>\n       <artifactId>openjpa-persistence-jdbc</artifactId>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>commons-dbcp</groupId> \n+      <artifactId>commons-dbcp</artifactId>\n+    </dependency>\n \n     <dependency>\n       <groupId>org.apache.geronimo.specs</groupId>\n@@ -1021,14 +1026,14 @@ under the License.\n     <profile>\n       <id>postgres-it</id>\n       <properties>\n-        <jdbcdriver.groupId>postgresql</jdbcdriver.groupId>\n+        <jdbcdriver.groupId>org.postgresql</jdbcdriver.groupId>\n         <jdbcdriver.artifactId>postgresql</jdbcdriver.artifactId>\n       </properties>\n       <dependencies>\n         <dependency>\n-          <groupId>postgresql</groupId>\n+          <groupId>org.postgresql</groupId>\n           <artifactId>postgresql</artifactId>\n-          <version>9.1-901-1.jdbc4</version>\n+          <version>9.3-1100-jdbc41</version>\n           <scope>test</scope>\n         </dependency>\n       </dependencies>"},{"sha":"dbddeefbc65f0e0081e1092933c6c3c39170327c","filename":"core/src/main/java/org/apache/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.Task;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n+import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.ReportDAO;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.quartz.TaskJob;\n@@ -183,6 +184,18 @@ public void registerJob(final Task task, final String jobClassName, final String\n         registerJob(getJobName(task), jobInstance, cronExpression);\n     }\n \n+    @Transactional(readOnly = true)\n+    public void registerTaskJob(final Long taskId)\n+            throws ClassNotFoundException, SchedulerException, ParseException {\n+\n+        SchedTask task = taskDAO.find(taskId);\n+        if (task == null) {\n+            throw new NotFoundException(\"Task \" + taskId);\n+        } else {\n+            registerJob(task, task.getJobClassName(), task.getCronExpression());\n+        }\n+    }\n+\n     public void registerJob(final Report report) throws SchedulerException, ParseException {\n         Job jobInstance = (Job) ApplicationContextProvider.getBeanFactory().\n                 createBean(ReportJob.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n@@ -191,6 +204,16 @@ public void registerJob(final Report report) throws SchedulerException, ParseExc\n         registerJob(getJobName(report), jobInstance, report.getCronExpression());\n     }\n \n+    @Transactional(readOnly = true)\n+    public void registerReportJob(final Long reportId) throws SchedulerException, ParseException {\n+        Report report = reportDAO.find(reportId);\n+        if (report == null) {\n+            throw new NotFoundException(\"Report \" + reportId);\n+        } else {\n+            registerJob(report);\n+        }\n+    }\n+\n     private void unregisterJob(final String jobName) {\n         try {\n             scheduler.getScheduler().unscheduleJob(new TriggerKey(jobName, Scheduler.DEFAULT_GROUP));"},{"sha":"96b6da0a2422c7b63d7882bf0a9a59e09884220d","filename":"core/src/main/java/org/apache/syncope/core/quartz/AbstractTaskJob.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FAbstractTaskJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FAbstractTaskJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FAbstractTaskJob.java?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -39,7 +39,7 @@\n /**\n  * Abstract job implementation that delegates to concrete implementation the actual job execution and provides some\n  * base features.\n- * <strong>Extending ttis class will not provide support transaction management.</strong><br/>\n+ * <strong>Extending this class will not provide support transaction management.</strong><br/>\n  * Extend <tt>AbstractTransactionalTaskJob</tt> for this purpose.\n  *\n  * @see AbstractTransactionalTaskJob"},{"sha":"9fe4b850d649e0f3c05f900fe98d364b7252cf5f","filename":"core/src/main/java/org/apache/syncope/core/quartz/SpringBeanJobFactory.java","status":"modified","additions":2,"deletions":14,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -19,10 +19,6 @@\n package org.apache.syncope.core.quartz;\n \n import org.apache.syncope.core.init.JobInstanceLoader;\n-import org.apache.syncope.core.persistence.beans.Report;\n-import org.apache.syncope.core.persistence.beans.SchedTask;\n-import org.apache.syncope.core.persistence.dao.ReportDAO;\n-import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.quartz.SchedulerContext;\n import org.quartz.spi.TriggerFiredBundle;\n import org.springframework.beans.BeanWrapper;\n@@ -58,27 +54,20 @@ public void setSchedulerContext(final SchedulerContext schedulerContext) {\n      */\n     @Override\n     protected Object createJobInstance(final TriggerFiredBundle bundle) throws Exception {\n-\n         final ApplicationContext ctx = ((ConfigurableApplicationContext) schedulerContext.get(\"applicationContext\"));\n \n         // Try to re-create job bean from underlying task (useful for managing failover scenarios)\n         if (!ctx.containsBean(bundle.getJobDetail().getKey().getName())) {\n             Long taskId = JobInstanceLoader.getTaskIdFromJobName(bundle.getJobDetail().getKey().getName());\n             if (taskId != null) {\n-                TaskDAO taskDAO = ctx.getBean(TaskDAO.class);\n-                SchedTask task = taskDAO.find(taskId);\n-\n                 JobInstanceLoader jobInstanceLoader = ctx.getBean(JobInstanceLoader.class);\n-                jobInstanceLoader.registerJob(task, task.getJobClassName(), task.getCronExpression());\n+                jobInstanceLoader.registerTaskJob(taskId);\n             }\n \n             Long reportId = JobInstanceLoader.getReportIdFromJobName(bundle.getJobDetail().getKey().getName());\n             if (reportId != null) {\n-                ReportDAO reportDAO = ctx.getBean(ReportDAO.class);\n-                Report report = reportDAO.find(reportId);\n-\n                 JobInstanceLoader jobInstanceLoader = ctx.getBean(JobInstanceLoader.class);\n-                jobInstanceLoader.registerJob(report);\n+                jobInstanceLoader.registerReportJob(reportId);\n             }\n         }\n \n@@ -96,7 +85,6 @@ protected Object createJobInstance(final TriggerFiredBundle bundle) throws Excep\n             } else {\n                 for (String propName : this.ignoredUnknownProperties) {\n                     if (pvs.contains(propName) && !wrapper.isWritableProperty(propName)) {\n-\n                         pvs.removePropertyValue(propName);\n                     }\n                 }"},{"sha":"3008d4645a83c924f884f634b1879262e0a073c7","filename":"core/src/main/resources/persistence.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -19,6 +19,8 @@ jpa.url=jdbc:postgresql://localhost:5432/syncope\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.PostgresDictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n quartz.sql=tables_postgres.sql\n audit.sql=audit.sql"},{"sha":"0b0029a3e7be58b1653dcb8326c5afeba766521e","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":31,"deletions":10,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -21,12 +21,17 @@ under the License.\n        xmlns:context=\"http://www.springframework.org/schema/context\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xmlns:tx=\"http://www.springframework.org/schema/tx\"\n+       xmlns:util=\"http://www.springframework.org/schema/util\"\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n                            http://www.springframework.org/schema/context\n                            http://www.springframework.org/schema/context/spring-context.xsd\n                            http://www.springframework.org/schema/tx\n-                           http://www.springframework.org/schema/tx/spring-tx.xsd\">\n+                           http://www.springframework.org/schema/tx/spring-tx.xsd\n+                           http://www.springframework.org/schema/aop\n+                           http://www.springframework.org/schema/aop/spring-aop.xsd\n+                           http://www.springframework.org/schema/util\n+                           http://www.springframework.org/schema/util/spring-util.xsd\">\n \n   <import resource=\"persistenceContextEMFactory.xml\"/>\n \n@@ -43,16 +48,32 @@ under the License.\n     <property name=\"defaultObject\" ref=\"localDataSource\"/>\n   </bean>\n \n-  <bean id=\"localDataSource\" class=\"org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter\">\n-    <property name=\"targetDataSource\">\n-      <bean class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n-        <property name=\"driverClassName\" value=\"${jpa.driverClassName}\"/>\n-        <property name=\"url\" value=\"${jpa.url}\"/>\n-        <property name=\"username\" value=\"${jpa.username}\"/>\n-        <property name=\"password\" value=\"${jpa.password}\"/>\n-      </bean>\n+  <bean id=\"localDataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\n+    <property name=\"driverClassName\" value=\"${jpa.driverClassName}\"/>\n+    <property name=\"url\" value=\"${jpa.url}\"/>\n+    <property name=\"username\" value=\"${jpa.username}\"/>\n+    <property name=\"password\" value=\"${jpa.password}\"/>\n+    <!-- connection pool configuration - transaction isolation, default READ_COMMITTED (see SYNCOPE-202) -->\n+    <property name=\"defaultTransactionIsolation\">\n+      <util:constant static-field=\"${jpa.pool.defaultTransactionIsolation:java.sql.Connection.TRANSACTION_READ_COMMITTED}\"/>\n     </property>\n-    <property name=\"isolationLevelName\" value=\"ISOLATION_READ_COMMITTED\"/>\n+    <!-- connection pool configuration - default values taken from BasicDataSource default values -->\n+    <property name=\"initialSize\" value=\"${jpa.pool.initialSize:0}\"/>\n+    <property name=\"maxActive\" value=\"${jpa.pool.maxActive:8}\"/>\n+    <property name=\"maxIdle\" value=\"${jpa.pool.maxIdle:8}\"/>\n+    <property name=\"minIdle\" value=\"${jpa.pool.minIdle:0}\"/>\n+    <property name=\"maxWait\" value=\"${jpa.pool.maxWait:-1}\"/>\n+    <property name=\"validationQuery\" value=\"${jpa.pool.validationQuery}\"/>\n+    <property name=\"validationQueryTimeout\" value=\"${jpa.pool.validationQueryTimeout:-1}\"/>\n+    <property name=\"testOnBorrow\" value=\"${jpa.pool.testOnBorrow:true}\"/>\n+    <property name=\"testOnReturn\" value=\"${jpa.pool.testOnReturn:false}\"/>\n+    <property name=\"testWhileIdle\" value=\"${jpa.pool.testWhileIdle:false}\"/>\n+    <property name=\"timeBetweenEvictionRunsMillis\" value=\"${jpa.pool.timeBetweenEvictionRunsMillis:-1}\"/>\n+    <property name=\"numTestsPerEvictionRun\" value=\"${jpa.pool.numTestsPerEvictionRun:3}\"/>\n+    <property name=\"minEvictableIdleTimeMillis\" value=\"${jpa.pool.minEvictableIdleTimeMillis:1800000}\"/>\n+    <property name=\"removeAbandoned\" value=\"${jpa.pool.removeAbandoned:false}\"/>\n+    <property name=\"removeAbandonedTimeout\" value=\"${jpa.pool.removeAbandonedTimeout:300}\"/>\n+    <property name=\"logAbandoned\" value=\"${jpa.pool.logAbandoned:false}\"/>\n   </bean>\n \n   <bean id=\"entityManager\" class=\"org.springframework.orm.jpa.support.SharedEntityManagerBean\">"},{"sha":"295f8f4742a90cc1a87cb134f929f6789e6d24ff","filename":"core/src/main/resources/schedulingContext.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fresources%2FschedulingContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Fmain%2Fresources%2FschedulingContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FschedulingContext.xml?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -35,6 +35,8 @@ under the License.\n     </property>\n     <property name=\"quartzProperties\">\n       <props>\n+        <prop key=\"org.quartz.scheduler.idleWaitTime\">${quartz.scheduler.idleWaitTime:30000}</prop>\n+        \n         <prop key=\"org.quartz.jobStore.misfireThreshold\">6000000</prop>\n         <prop key=\"org.quartz.jobStore.driverDelegateClass\">${quartz.jobstore}</prop>\n "},{"sha":"e769bfb819620e0cc7403a0b96e1f640911607d0","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -47,7 +47,7 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class ReportTestITCase extends AbstractTest {\n \n-    public ReportTO createReport(final ReportTO report) {\n+    private ReportTO createReport(final ReportTO report) {\n         Response response = reportService.create(report);\n         assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n         return getObject(response.getLocation(), ReportService.class, ReportTO.class);\n@@ -181,7 +181,8 @@ public void executeAndExport() throws IOException {\n             assertNotNull(reportTO.getExecutions());\n \n             i++;\n-        } while (!ReportExecStatus.SUCCESS.name().equals(reportTO.getExecutions().get(0).getStatus()) && i < maxit);\n+        } while (reportTO.getExecutions().isEmpty()\n+                || (!ReportExecStatus.SUCCESS.name().equals(reportTO.getExecutions().get(0).getStatus()) && i < maxit));\n         assertEquals(ReportExecStatus.SUCCESS.name(), reportTO.getExecutions().get(0).getStatus());\n \n         long execId = reportTO.getExecutions().get(0).getId();"},{"sha":"c357a8cf211e3f6cdefd701a8db1496a495eebaa","filename":"core/src/test/resources/mysql/persistence.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -19,6 +19,9 @@ jpa.url=jdbc:mysql://localhost:3306/syncope?characterEncoding=UTF-8\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.MySQLDictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_mysql.sql\n audit.sql=audit.sql"},{"sha":"9da1b73c1a4ceb89cb2154d2a1ff3fae677f9dba","filename":"core/src/test/resources/oracle/persistence.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -19,7 +19,10 @@ jpa.url=jdbc:oracle:thin:@pioppo:1521:orcl\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.OracleDictionary\n+jpa.pool.validationQuery=SELECT 1 FROM DUAL\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.oracle.OracleDelegate\n+quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_oracle.sql\n audit.sql=audit_oracle.sql\n database.schema=SYNCOPE"},{"sha":"1449b8790675f96c93d7458c9ad6443134260d7a","filename":"core/src/test/resources/persistence.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -19,6 +19,9 @@ jpa.url=jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\n jpa.username=sa\n jpa.password=\n jpa.dialect=org.apache.openjpa.jdbc.sql.H2Dictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_h2.sql\n audit.sql=audit.sql"},{"sha":"8709a8ef496d39dc971b088c2de17bc541f87c51","filename":"core/src/test/resources/postgres/persistence.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -19,5 +19,9 @@ jpa.url=jdbc:postgresql://localhost:5432/syncope\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.PostgresDictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n+quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_postgres.sql\n+audit.sql=audit.sql"},{"sha":"78ac33000c8135ee5a7577b81cb40eb61523c78f","filename":"core/src/test/resources/sqlserver/persistence.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -19,6 +19,9 @@ jpa.url=jdbc:sqlserver://acacia:1433;database=syncope;selectMethod=cursor;sendSt\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.SQLServerDictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.MSSQLDelegate\n+quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_sqlServer.sql\n audit.sql=audit_sqlserver.sql"},{"sha":"94d9a1646122a1ec5a62a139c5a6ef1fdff31abc","filename":"pom.xml","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a2ad6ccd1a11920d4934be9752774dbb5c7f47fb/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=a2ad6ccd1a11920d4934be9752774dbb5c7f47fb","patch":"@@ -321,7 +321,8 @@ under the License.\n \n     <openjpa.version>2.3.0</openjpa.version>\n     <bval.version>0.5</bval.version>\n-        \n+    <commons-dbcp.version>1.4</commons-dbcp.version>\n+\n     <cocoon.version>3.0.0-alpha-3</cocoon.version>\n \n     <wicket.version>6.12.0</wicket.version>\n@@ -504,6 +505,12 @@ under the License.\n         <artifactId>openjpa-persistence-jdbc</artifactId>\n         <version>${openjpa.version}</version>\n       </dependency>\n+\n+      <dependency>\n+        <groupId>commons-dbcp</groupId>\n+        <artifactId>commons-dbcp</artifactId>\n+        <version>${commons-dbcp.version}</version>\n+      </dependency>\n       \n       <dependency>\n         <groupId>org.apache.geronimo.specs</groupId>"}]}