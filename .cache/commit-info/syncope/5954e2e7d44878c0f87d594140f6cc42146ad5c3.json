{"sha":"5954e2e7d44878c0f87d594140f6cc42146ad5c3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU5NTRlMmU3ZDQ0ODc4YzBmODdkNTk0MTQwZjZjYzQyMTQ2YWQ1YzM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-10-28T13:13:40Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-10-28T13:13:40Z"},"message":"[SYNCOPE-717] Fixing locale issue with conversion pattern on core, replacing SpinnerFieldPanel with new AjaxDoubleFieldPanel on console","tree":{"sha":"73f4f252a0dcf0dafbe484691191be4bce475b4e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/73f4f252a0dcf0dafbe484691191be4bce475b4e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5954e2e7d44878c0f87d594140f6cc42146ad5c3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5954e2e7d44878c0f87d594140f6cc42146ad5c3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5954e2e7d44878c0f87d594140f6cc42146ad5c3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5954e2e7d44878c0f87d594140f6cc42146ad5c3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"893d88901513100e3daf5d4d5b4b47a3f72f9aea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/893d88901513100e3daf5d4d5b4b47a3f72f9aea","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/893d88901513100e3daf5d4d5b4b47a3f72f9aea"}],"stats":{"total":281,"additions":275,"deletions":6},"files":[{"sha":"8e44f85e623eb6c7b9afc5917672b4f40481ce1e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=5954e2e7d44878c0f87d594140f6cc42146ad5c3","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n-import java.util.Collection;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.Date;\n@@ -28,7 +27,6 @@\n import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.List;\n-import java.util.ListIterator;\n import java.util.Map;\n import java.util.Set;\n import java.util.TreeMap;\n@@ -52,6 +50,7 @@\n import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxDoubleFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.BinaryFieldPanel;\n@@ -318,8 +317,8 @@ public String getIdValue(final String value, final int i) {\n                 break;\n \n             case Double:\n-                panel = new SpinnerFieldPanel<Double>(\"panel\", schemaTO.getName(),\n-                        Double.class, new Model<Double>(), null, null);\n+                panel = new AjaxDoubleFieldPanel(\"panel\", schemaTO.getName(), schemaTO.getConversionPattern(),\n+                        new Model<Double>());\n \n                 if (required) {\n                     panel.addRequiredLabel();"},{"sha":"a5f8129fb5c14a1ec5bd6ff3acef1ec29cf80a19","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxDoubleFieldPanel.java","status":"added","additions":196,"deletions":0,"changes":196,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDoubleFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDoubleFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDoubleFieldPanel.java?ref=5954e2e7d44878c0f87d594140f6cc42146ad5c3","patch":"@@ -0,0 +1,196 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import java.text.DecimalFormat;\n+import java.text.DecimalFormatSymbols;\n+import java.text.ParseException;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.regex.Pattern;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.console.SyncopeSession;\n+import org.apache.syncope.console.commons.Constants;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class AjaxDoubleFieldPanel extends FieldPanel<Double> {\n+\n+    private static final long serialVersionUID = 935151916638207380L;\n+\n+    private static final Pattern ENGLISH_DOUBLE_PATTERN = Pattern.compile(\"\\\\d+\\\\.\\\\d+\");\n+\n+    private static final Pattern OTHER_DOUBLE_PATTERN = Pattern.compile(\"\\\\d+,\\\\d+\");\n+\n+    private final String name;\n+\n+    private final Pattern pattern;\n+\n+    private final DecimalFormat englishDf;\n+\n+    private final DecimalFormat localeDf;\n+\n+    public AjaxDoubleFieldPanel(\n+            final String id, final String name, final String conversionPattern, final IModel<Double> model) {\n+\n+        super(id, model);\n+\n+        this.name = name;\n+\n+        this.pattern = SyncopeSession.get().getLocale().equals(Locale.ENGLISH)\n+                ? ENGLISH_DOUBLE_PATTERN\n+                : OTHER_DOUBLE_PATTERN;\n+\n+        englishDf = new DecimalFormat();\n+        englishDf.setDecimalFormatSymbols(DecimalFormatSymbols.getInstance(Locale.ENGLISH));\n+        if (StringUtils.isNotBlank(conversionPattern)) {\n+            englishDf.applyPattern(conversionPattern);\n+        }\n+        localeDf = new DecimalFormat();\n+        localeDf.setDecimalFormatSymbols(DecimalFormatSymbols.getInstance(SyncopeSession.get().getLocale()));\n+        if (StringUtils.isNotBlank(conversionPattern)) {\n+            localeDf.applyPattern(conversionPattern);\n+        }\n+\n+        field = new TextField<Double>(\"doubleField\", model) {\n+\n+            private static final long serialVersionUID = -378877047108711669L;\n+\n+            @Override\n+            protected void convertInput() {\n+                if (StringUtils.isNotBlank(getInput())) {\n+                    if (pattern.matcher(getInput()).matches()) {\n+                        Double value;\n+                        try {\n+                            value = localeDf.parse(getInput()).doubleValue();\n+                            setConvertedInput(value);\n+                        } catch (ParseException e) {\n+                            error(name + \": \" + getString(\"textField.DoubleValidator\"));\n+                        }\n+                    } else {\n+                        error(name + \": \" + getString(\"textField.DoubleValidator\"));\n+                    }\n+                }\n+            }\n+        };\n+        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n+\n+        if (!isReadOnly()) {\n+            field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+                private static final long serialVersionUID = -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    // nothing to do\n+                }\n+            });\n+        }\n+    }\n+\n+    @Override\n+    public FieldPanel<Double> addRequiredLabel() {\n+        if (!isRequired()) {\n+            setRequired(true);\n+        }\n+\n+        this.isRequiredLabelAdded = true;\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public FieldPanel<Double> setNewModel(final List<Serializable> list) {\n+        setNewModel(new Model<Double>() {\n+\n+            private static final long serialVersionUID = 527651414610325237L;\n+\n+            @Override\n+            public Double getObject() {\n+                Double value = null;\n+\n+                if (list != null && !list.isEmpty()) {\n+                    try {\n+                        value = englishDf.parse(list.get(0).toString()).doubleValue();\n+                    } catch (ParseException e) {\n+                        error(name + \": \" + getString(\"textField.DoubleValidator\"));\n+                    }\n+                }\n+\n+                return value;\n+            }\n+\n+            @Override\n+            public void setObject(final Double object) {\n+                list.clear();\n+                if (object != null) {\n+                    list.add(englishDf.format(object));\n+                }\n+            }\n+        });\n+\n+        return this;\n+    }\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    @Override\n+    public FieldPanel<Double> setNewModel(final ListItem item) {\n+        IModel<Double> model = new Model<Double>() {\n+\n+            private static final long serialVersionUID = 6799404673615637845L;\n+\n+            @Override\n+            public Double getObject() {\n+                Double value = null;\n+\n+                final Object obj = item.getModelObject();\n+\n+                if (obj != null && !obj.toString().isEmpty()) {\n+                    if (obj instanceof String) {\n+                        try {\n+                            value = englishDf.parse(obj.toString()).doubleValue();\n+                        } catch (ParseException e) {\n+                            error(name + \": \" + getString(\"textField.DoubleValidator\"));\n+                        }\n+                    } else if (obj instanceof Double) {\n+                        // Don't parse anything\n+                        value = (Double) obj;\n+                    }\n+                }\n+\n+                return value;\n+            }\n+\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public void setObject(final Double object) {\n+                item.setModelObject(englishDf.format(object));\n+            }\n+        };\n+\n+        field.setModel(model);\n+        return this;\n+    }\n+\n+}"},{"sha":"ae02f873dc7409007183f1cc003b63845772607b","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=5954e2e7d44878c0f87d594140f6cc42146ad5c3","patch":"@@ -126,7 +126,7 @@ public FieldPanel<T> setModelObject(final T object) {\n     }\n \n     public T getModelObject() {\n-        return (T) field.getModelObject();\n+        return field.getModelObject();\n     }\n \n     public FieldPanel<T> setNewModel(final IModel<T> model) {"},{"sha":"c733b0922d8967acdc655f33a6d6ab757921409f","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties?ref=5954e2e7d44878c0f87d594140f6cc42146ad5c3","patch":"@@ -52,3 +52,4 @@ jexl_ex1=surname + ',' + firstname\n jexl_ex2='new.' + surname\n jexl_syntax_url=Full JEXL reference\n create=Create\n+textField.DoubleValidator=Double value not valid"},{"sha":"9f3d00c6cfa65e0641ed5d539f3b85f6e59fd302","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties?ref=5954e2e7d44878c0f87d594140f6cc42146ad5c3","patch":"@@ -51,3 +51,4 @@ jexl_ex1=surname + ',' + firstname\n jexl_ex2='new.' + surname\n jexl_syntax_url=Sintassi JEXL completa\n create=Crea\n+textField.DoubleValidator=Valore double non valido"},{"sha":"653983d99971d16c4ce0abef24391b56f5c3e856","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties?ref=5954e2e7d44878c0f87d594140f6cc42146ad5c3","patch":"@@ -51,3 +51,4 @@ jexl_ex1=sobrenome + ',' + nome\n jexl_ex2='novo.' + sobrenome\n jexl_syntax_url=Refer\\u00eancia JEXL completa\n create=Criar\n+textField.DoubleValidator=Double valor n\\u00e3o \\u00e9 v\\u00e1lido"},{"sha":"050ff2d95739e86cb45715e76cccb39507d0c897","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/AjaxDoubleFieldPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDoubleFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5954e2e7d44878c0f87d594140f6cc42146ad5c3/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDoubleFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDoubleFieldPanel.html?ref=5954e2e7d44878c0f87d594140f6cc42146ad5c3","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <input type=\"text\" class=\"ui-widget-content ui-corner-all long_dynamicsize\" wicket:id=\"doubleField\"/>\n+  </wicket:extend>\n+</html>"},{"sha":"4296422e52c556ffa04c8a315dc2bc5c68876337","filename":"core/src/main/java/org/apache/syncope/core/util/DataFormat.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5954e2e7d44878c0f87d594140f6cc42146ad5c3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FDataFormat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5954e2e7d44878c0f87d594140f6cc42146ad5c3/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FDataFormat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FDataFormat.java?ref=5954e2e7d44878c0f87d594140f6cc42146ad5c3","patch":"@@ -19,9 +19,11 @@\n package org.apache.syncope.core.util;\n \n import java.text.DecimalFormat;\n+import java.text.DecimalFormatSymbols;\n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n+import java.util.Locale;\n import org.apache.commons.lang3.time.DateUtils;\n import org.apache.syncope.common.SyncopeConstants;\n \n@@ -44,7 +46,9 @@ protected SimpleDateFormat initialValue() {\n \n         @Override\n         protected DecimalFormat initialValue() {\n-            return new DecimalFormat();\n+            DecimalFormat df = new DecimalFormat();\n+            df.setDecimalFormatSymbols(DecimalFormatSymbols.getInstance(Locale.ENGLISH));\n+            return df;\n         }\n     };\n "},{"sha":"ce553cc716dd6aa07b655599827643cf3b5f036c","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5954e2e7d44878c0f87d594140f6cc42146ad5c3/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5954e2e7d44878c0f87d594140f6cc42146ad5c3/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=5954e2e7d44878c0f87d594140f6cc42146ad5c3","patch":"@@ -51,6 +51,7 @@\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.MappingPurpose;\n@@ -886,4 +887,46 @@ public void issueSYNCOPE632() {\n             resourceService.delete(\"new-ldap\");\n         }\n     }\n+\n+    @Test\n+    public void issueSYNCOPE717() {\n+        String doubleSchemaName = \"double\" + getUUIDString();\n+\n+        // 1. create double schema without conversion pattern\n+        SchemaTO schema = new SchemaTO();\n+        schema.setName(doubleSchemaName);\n+        schema.setType(AttributeSchemaType.Double);\n+\n+        schema = createSchema(AttributableType.ROLE, SchemaType.NORMAL, schema);\n+        assertNotNull(schema);\n+        assertNull(schema.getConversionPattern());\n+\n+        // 2. create role, provide valid input value\n+        RoleTO roleTO = buildBasicRoleTO(\"syncope717\");\n+        roleTO.getRAttrTemplates().add(doubleSchemaName);\n+        roleTO.getAttrs().add(attributeTO(doubleSchemaName, \"11.23\"));\n+\n+        roleTO = createRole(roleTO);\n+        assertNotNull(roleTO);\n+        assertEquals(\"11.23\", roleTO.getAttrMap().get(doubleSchemaName).getValues().get(0));\n+\n+        // 3. update schema, set conversion pattern\n+        schema.setConversionPattern(\"0.000\");\n+        schemaService.update(AttributableType.ROLE, SchemaType.NORMAL, schema.getName(), schema);\n+\n+        // 4. re-read role, verify that pattern was applied\n+        roleTO = roleService.read(roleTO.getId());\n+        assertNotNull(roleTO);\n+        assertEquals(\"11.230\", roleTO.getAttrMap().get(doubleSchemaName).getValues().get(0));\n+\n+        // 5. modify role with new double value\n+        RoleMod roleMod = new RoleMod();\n+        roleMod.setId(roleTO.getId());\n+        roleMod.getAttrsToRemove().add(doubleSchemaName);\n+        roleMod.getAttrsToUpdate().add(attributeMod(doubleSchemaName, \"11.257\"));\n+\n+        roleTO = updateRole(roleMod);\n+        assertNotNull(roleTO);\n+        assertEquals(\"11.257\", roleTO.getAttrMap().get(doubleSchemaName).getValues().get(0));\n+    }\n }"},{"sha":"65dd9222d5fe379119b16b8866cb140dc07249a2","filename":"pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5954e2e7d44878c0f87d594140f6cc42146ad5c3/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5954e2e7d44878c0f87d594140f6cc42146ad5c3/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=5954e2e7d44878c0f87d594140f6cc42146ad5c3","patch":"@@ -1026,6 +1026,7 @@ under the License.\n           <configuration>\n             <source>${targetJdk}</source>\n             <target>${targetJdk}</target>\n+            <useIncrementalCompilation>false</useIncrementalCompilation>\n             <showWarnings>true</showWarnings>\n             <showDeprecation>true</showDeprecation>\n             <!--<compilerArgument>-Xlint:unchecked</compilerArgument>-->"}]}