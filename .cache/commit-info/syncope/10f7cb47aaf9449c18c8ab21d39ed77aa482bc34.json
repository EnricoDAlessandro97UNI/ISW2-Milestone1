{"sha":"10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjEwZjdjYjQ3YWFmOTQ0OWMxOGM4YWIyMWQzOWVkNzdhYTQ4MmJjMzQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-15T10:17:12Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-15T10:17:12Z"},"message":"Applying defined ruleset for Java code formatting to whole source code\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1300882 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a0a036f6c472a5263799b9b6f46ddd5cb3207a50","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a0a036f6c472a5263799b9b6f46ddd5cb3207a50"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"73f63718bfb17a05c55c5838c6806fc171b4edeb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/73f63718bfb17a05c55c5838c6806fc171b4edeb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/73f63718bfb17a05c55c5838c6806fc171b4edeb"}],"stats":{"total":15956,"additions":5800,"deletions":10156},"files":[{"sha":"9fd5555a342c785bc66ab78fb159a605d1cc012d","filename":"build-tools/src/main/java/org/syncope/buildtools/ApacheDSRootDseServlet.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FApacheDSRootDseServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FApacheDSRootDseServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FApacheDSRootDseServlet.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -42,9 +42,7 @@ public class ApacheDSRootDseServlet extends HttpServlet {\n     private static final long serialVersionUID = 1514567335969002735L;\n \n     @Override\n-    protected void doGet(final HttpServletRequest req,\n-            final HttpServletResponse resp)\n-            throws ServletException {\n+    protected void doGet(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException {\n \n         try {\n             resp.setContentType(\"text/plain\");\n@@ -55,11 +53,10 @@ protected void doGet(final HttpServletRequest req,\n             DirContext ctx = new InitialDirContext(this.createEnv());\n \n             SearchControls ctls = new SearchControls();\n-            ctls.setReturningAttributes(new String[]{\"*\", \"+\"});\n+            ctls.setReturningAttributes(new String[] { \"*\", \"+\" });\n             ctls.setSearchScope(SearchControls.OBJECT_SCOPE);\n \n-            NamingEnumeration<SearchResult> result = ctx.search(\"\",\n-                    \"(objectClass=*)\", ctls);\n+            NamingEnumeration<SearchResult> result = ctx.search(\"\", \"(objectClass=*)\", ctls);\n             if (result.hasMore()) {\n                 SearchResult entry = result.next();\n                 Attributes as = entry.getAttributes();\n@@ -87,14 +84,12 @@ protected void doGet(final HttpServletRequest req,\n     private Hashtable<Object, Object> createEnv() {\n         // Fetch directory service from servlet context\n         ServletContext servletContext = this.getServletContext();\n-        DirectoryService directoryService = (DirectoryService) servletContext.\n-                getAttribute(DirectoryService.JNDI_KEY);\n+        DirectoryService directoryService = (DirectoryService) servletContext.getAttribute(DirectoryService.JNDI_KEY);\n \n         Hashtable<Object, Object> env = new Hashtable<Object, Object>();\n         env.put(DirectoryService.JNDI_KEY, directoryService);\n         env.put(Context.PROVIDER_URL, \"\");\n-        env.put(Context.INITIAL_CONTEXT_FACTORY, CoreContextFactory.class.\n-                getName());\n+        env.put(Context.INITIAL_CONTEXT_FACTORY, CoreContextFactory.class.getName());\n \n         env.put(Context.SECURITY_PRINCIPAL, \"uid=admin,ou=system\");\n         env.put(Context.SECURITY_CREDENTIALS, \"secret\");"},{"sha":"bbe120461f310249bb1710aaed44de03173e7a10","filename":"build-tools/src/main/java/org/syncope/buildtools/ApacheDSStartStopListener.java","status":"modified","additions":20,"deletions":41,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FApacheDSStartStopListener.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -63,28 +63,22 @@ public class ApacheDSStartStopListener implements ServletContextListener {\n      *\n      * @throws Exception if the schema LDIF files are not found on the classpath\n      */\n-    private void initSchemaPartition(final ServletContext servletContext)\n-            throws Exception {\n+    private void initSchemaPartition(final ServletContext servletContext) throws Exception {\n \n-        Pattern sharedLdapSchemaManagerPattern =\n-                Pattern.compile(\".*apacheds-all-.*\\\\.jar\");\n+        Pattern sharedLdapSchemaManagerPattern = Pattern.compile(\".*apacheds-all-.*\\\\.jar\");\n         File found = null;\n-        for (File jarFile : new File(\n-                servletContext.getRealPath(\"/WEB-INF/lib\")).listFiles()) {\n+        for (File jarFile : new File(servletContext.getRealPath(\"/WEB-INF/lib\")).listFiles()) {\n \n-            if (sharedLdapSchemaManagerPattern.matcher(\n-                    jarFile.getAbsolutePath()).matches()) {\n+            if (sharedLdapSchemaManagerPattern.matcher(jarFile.getAbsolutePath()).matches()) {\n \n                 found = jarFile;\n             }\n         }\n         if (found == null) {\n-            throw new RuntimeException(\n-                    \"No apache-ds-all JAR found under WEB-INF/lib\");\n+            throw new RuntimeException(\"No apache-ds-all JAR found under WEB-INF/lib\");\n         }\n \n-        SchemaPartition schemaPartition = service.getSchemaService().\n-                getSchemaPartition();\n+        SchemaPartition schemaPartition = service.getSchemaService().getSchemaPartition();\n \n         // Init the LdifPartition\n         LdifPartition ldifPartition = new LdifPartition();\n@@ -93,8 +87,7 @@ private void initSchemaPartition(final ServletContext servletContext)\n \n         // Extract the schema on disk (a brand new one) and load the registries\n         File schemaRepository = new File(workingDirectory, \"schema\");\n-        SchemaLdifExtractor extractor = new JarSchemaLdifExtractor(\n-                new File(workingDirectory), found);\n+        SchemaLdifExtractor extractor = new JarSchemaLdifExtractor(new File(workingDirectory), found);\n         extractor.extractOrCopy(true);\n \n         schemaPartition.setWrappedPartition(ldifPartition);\n@@ -124,15 +117,12 @@ private void initSchemaPartition(final ServletContext servletContext)\n      * @return The newly added partition\n      * @throws Exception If the partition can't be added\n      */\n-    private Partition addPartition(final String partitionId,\n-            final String partitionDn)\n-            throws Exception {\n+    private Partition addPartition(final String partitionId, final String partitionDn) throws Exception {\n \n         // Create a new partition named 'foo'.\n         JdbmPartition partition = new JdbmPartition();\n         partition.setId(partitionId);\n-        partition.setPartitionDir(new File(service.getWorkingDirectory(),\n-                partitionId));\n+        partition.setPartitionDir(new File(service.getWorkingDirectory(), partitionId));\n         partition.setSuffix(partitionDn);\n         service.addPartition(partition);\n \n@@ -147,12 +137,10 @@ private Partition addPartition(final String partitionId,\n      */\n     private void addIndex(final Partition partition, final String... attrs) {\n         // Index some attributes on the apache partition\n-        HashSet<Index<?, ServerEntry, Long>> indexedAttributes =\n-                new HashSet<Index<?, ServerEntry, Long>>();\n+        HashSet<Index<?, ServerEntry, Long>> indexedAttributes = new HashSet<Index<?, ServerEntry, Long>>();\n \n         for (String attribute : attrs) {\n-            indexedAttributes.add(\n-                    new JdbmIndex<String, ServerEntry>(attribute));\n+            indexedAttributes.add(new JdbmIndex<String, ServerEntry>(attribute));\n         }\n \n         ((JdbmPartition) partition).setIndexedAttributes(indexedAttributes);\n@@ -165,9 +153,7 @@ private void addIndex(final Partition partition, final String... attrs) {\n      * @param workDir the directory to be used for storing the data\n      * @throws Exception if there were some problems while initializing\n      */\n-    private void initDirectoryService(final ServletContext servletContext,\n-            final File workDir)\n-            throws Exception {\n+    private void initDirectoryService(final ServletContext servletContext, final File workDir) throws Exception {\n \n         // Initialize the LDAP service\n         service = new DefaultDirectoryService();\n@@ -178,8 +164,7 @@ private void initDirectoryService(final ServletContext servletContext,\n \n         // then the system partition\n         // this is a MANDATORY partition\n-        Partition systemPartition = addPartition(\"system\",\n-                ServerDNConstants.SYSTEM_DN);\n+        Partition systemPartition = addPartition(\"system\", ServerDNConstants.SYSTEM_DN);\n         service.setSystemPartition(systemPartition);\n \n         // Disable the ChangeLog system\n@@ -218,29 +203,25 @@ private void initDirectoryService(final ServletContext servletContext,\n      */\n     @Override\n     public void contextInitialized(final ServletContextEvent sce) {\n-        File workDir = (File) sce.getServletContext().getAttribute(\n-                \"javax.servlet.context.tempdir\");\n+        File workDir = (File) sce.getServletContext().getAttribute(\"javax.servlet.context.tempdir\");\n         workDir = new File(workDir, \"server-work\");\n         if (!workDir.mkdirs()) {\n-            throw new RuntimeException(\"Could not create \" + workDir.\n-                    getAbsolutePath());\n+            throw new RuntimeException(\"Could not create \" + workDir.getAbsolutePath());\n         }\n \n         Entry result;\n         try {\n             initDirectoryService(sce.getServletContext(), workDir);\n \n             server = new LdapServer();\n-            server.setTransports(new TcpTransport(Integer.valueOf(\n-                    sce.getServletContext().\n-                    getInitParameter(\"testds.port\"))));\n+            server.setTransports(new TcpTransport(Integer.valueOf(sce.getServletContext().getInitParameter(\n+                    \"testds.port\"))));\n             server.setDirectoryService(service);\n \n             server.start();\n \n             // store directoryService in context to provide it to servlets etc.\n-            sce.getServletContext().setAttribute(DirectoryService.JNDI_KEY,\n-                    service);\n+            sce.getServletContext().setAttribute(DirectoryService.JNDI_KEY, service);\n \n             result = service.getAdminSession().lookup(new DN(\"o=isp\"));\n         } catch (Exception e) {\n@@ -251,8 +232,7 @@ public void contextInitialized(final ServletContextEvent sce) {\n         if (result == null) {\n             throw new RuntimeException(\"Base DN not found\");\n         } else {\n-            sce.getServletContext().log(\n-                    \"ApacheDS startup completed succesfully\");\n+            sce.getServletContext().log(\"ApacheDS startup completed succesfully\");\n         }\n     }\n \n@@ -271,8 +251,7 @@ public void contextDestroyed(final ServletContextEvent scEvent) {\n                 service.shutdown();\n             }\n         } catch (Exception e) {\n-            scEvent.getServletContext().log(\n-                    \"Fatal error in context shutdown\", e);\n+            scEvent.getServletContext().log(\"Fatal error in context shutdown\", e);\n             throw new RuntimeException(e);\n         }\n     }"},{"sha":"a0cc8121d1388f073bcaf18be7dacbe515070c84","filename":"build-tools/src/main/java/org/syncope/buildtools/H2StartStopListener.java","status":"modified","additions":5,"deletions":11,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FH2StartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FH2StartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FH2StartStopListener.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -42,32 +42,26 @@ public class H2StartStopListener implements ServletContextListener {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(H2StartStopListener.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(H2StartStopListener.class);\n \n     private static final String H2_TESTDB = \"h2TestDb\";\n \n     @Override\n     public void contextInitialized(final ServletContextEvent sce) {\n         ServletContext context = sce.getServletContext();\n \n-        File workDir = (File) sce.getServletContext().getAttribute(\n-                \"javax.servlet.context.tempdir\");\n+        File workDir = (File) sce.getServletContext().getAttribute(\"javax.servlet.context.tempdir\");\n         try {\n             Server h2TestDb = new Server();\n-            h2TestDb.runTool(\n-                    \"-baseDir\", workDir.getAbsolutePath(),\n-                    \"-tcp\", \"-tcpDaemon\",\n-                    \"-web\", \"-webDaemon\", \"-webPort\",\n-                    sce.getServletContext().getInitParameter(\"testdb.webport\"));\n+            h2TestDb.runTool(\"-baseDir\", workDir.getAbsolutePath(), \"-tcp\", \"-tcpDaemon\", \"-web\", \"-webDaemon\",\n+                    \"-webPort\", sce.getServletContext().getInitParameter(\"testdb.webport\"));\n \n             context.setAttribute(H2_TESTDB, h2TestDb);\n         } catch (SQLException e) {\n             LOG.error(\"Could not start H2 test db\", e);\n         }\n \n-        WebApplicationContext ctx =\n-                WebApplicationContextUtils.getWebApplicationContext(context);\n+        WebApplicationContext ctx = WebApplicationContextUtils.getWebApplicationContext(context);\n         DataSource datasource = ctx.getBean(DataSource.class);\n \n         Connection conn = null;"},{"sha":"b5b4ec16902bc080963e2ba88b1bd5c52e56be8e","filename":"build-tools/src/main/java/org/syncope/buildtools/JarSchemaLdifExtractor.java","status":"modified","additions":13,"deletions":26,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FJarSchemaLdifExtractor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FJarSchemaLdifExtractor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fbuildtools%2FJarSchemaLdifExtractor.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -55,17 +55,14 @@ public class JarSchemaLdifExtractor implements SchemaLdifExtractor {\n      * @param outputDirectory the directory where the schema root is extracted\n      * @param jarFile the JAR file\n      */\n-    public JarSchemaLdifExtractor(final File outputDirectory,\n-            final File jarFile)\n-            throws IOException {\n+    public JarSchemaLdifExtractor(final File outputDirectory, final File jarFile) throws IOException {\n \n         this.outputDirectory = outputDirectory;\n         this.schemaDirectory = new File(outputDirectory, SCHEMA_SUBDIR);\n         this.jarFile = jarFile;\n \n         if (!outputDirectory.exists() && !outputDirectory.mkdir()) {\n-            throw new IOException(\"Failed to create outputDirectory: \"\n-                    + outputDirectory);\n+            throw new IOException(\"Failed to create outputDirectory: \" + outputDirectory);\n         }\n \n         extracted = !schemaDirectory.exists();\n@@ -88,22 +85,18 @@ public boolean isExtracted() {\n      * @throws IOException if schema already extracted and on IO errors\n      */\n     @Override\n-    public void extractOrCopy(final boolean overwrite)\n-            throws IOException {\n+    public void extractOrCopy(final boolean overwrite) throws IOException {\n \n         if (!outputDirectory.exists() && !outputDirectory.mkdir()) {\n-            throw new IOException(\"Could not create \"\n-                    + outputDirectory.getAbsolutePath());\n+            throw new IOException(\"Could not create \" + outputDirectory.getAbsolutePath());\n         }\n \n         if (!schemaDirectory.exists()) {\n             if (!schemaDirectory.mkdir()) {\n-                throw new IOException(\"Could not create \"\n-                        + schemaDirectory.getAbsolutePath());\n+                throw new IOException(\"Could not create \" + schemaDirectory.getAbsolutePath());\n             }\n         } else if (!overwrite) {\n-            throw new IOException(I18n.err(I18n.ERR_08001, schemaDirectory.\n-                    getAbsolutePath()));\n+            throw new IOException(I18n.err(I18n.ERR_08001, schemaDirectory.getAbsolutePath()));\n         }\n \n         final Pattern pattern = Pattern.compile(\".*schema/ou=schema.*\\\\.ldif\");\n@@ -120,14 +113,12 @@ public void extractOrCopy(final boolean overwrite)\n      * @throws IOException if schema already extracted and on IO errors\n      */\n     @Override\n-    public void extractOrCopy()\n-            throws IOException {\n+    public void extractOrCopy() throws IOException {\n \n         extractOrCopy(false);\n     }\n \n-    private Set<String> getResources(final Pattern pattern)\n-            throws IOException {\n+    private Set<String> getResources(final Pattern pattern) throws IOException {\n \n         final Set<String> result = new HashSet<String>();\n \n@@ -150,12 +141,10 @@ private Set<String> getResources(final Pattern pattern)\n      * @param resource the LDIF schema resource\n      * @throws IOException if there are IO errors\n      */\n-    private void extractFromJar(final String resource)\n-            throws IOException {\n+    private void extractFromJar(final String resource) throws IOException {\n \n-        final InputStream in =\n-                DefaultSchemaLdifExtractor.getUniqueResourceAsStream(\n-                resource, \"LDIF file in schema repository\");\n+        final InputStream in = DefaultSchemaLdifExtractor.getUniqueResourceAsStream(resource,\n+                \"LDIF file in schema repository\");\n         try {\n             final File destination = new File(outputDirectory, resource);\n \n@@ -166,11 +155,9 @@ private void extractFromJar(final String resource)\n                 return;\n             }\n \n-            if (!destination.getParentFile().exists() && !destination.\n-                    getParentFile().mkdirs()) {\n+            if (!destination.getParentFile().exists() && !destination.getParentFile().mkdirs()) {\n \n-                throw new IOException(\"Could not create \"\n-                        + destination.getParentFile().getAbsolutePath());\n+                throw new IOException(\"Could not create \" + destination.getParentFile().getAbsolutePath());\n             }\n \n             final FileOutputStream out = new FileOutputStream(destination);"},{"sha":"09417a1254f073481a26b7dd3728cd9a765fb119","filename":"client/src/main/java/org/syncope/annotation/FormAttributeField.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fannotation%2FFormAttributeField.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fannotation%2FFormAttributeField.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fannotation%2FFormAttributeField.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -24,7 +24,7 @@\n import java.lang.annotation.Target;\n import org.syncope.types.IntMappingType;\n \n-@Target({ElementType.FIELD})\n+@Target( { ElementType.FIELD })\n @Retention(RetentionPolicy.RUNTIME)\n public @interface FormAttributeField {\n "},{"sha":"e652532ba9549a718ed431799fb81f07937cf51b","filename":"client/src/main/java/org/syncope/client/SyncopeConstants.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2FSyncopeConstants.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -20,12 +20,8 @@\n \n public class SyncopeConstants {\n \n-    public final static String[] DATE_PATTERNS = {\n-        \"yyyy-MM-dd'T'HH:mm:ssZ\",\n-        \"EEE, dd MMM yyyy HH:mm:ss z\",\n-        \"yyyy-MM-dd'T'HH:mm:ssz\",\n-        \"yyyy-MM-dd HH:mm:ss\",\n-        \"yyyy-MM-dd\"};\n+    public final static String[] DATE_PATTERNS = { \"yyyy-MM-dd'T'HH:mm:ssZ\", \"EEE, dd MMM yyyy HH:mm:ss z\",\n+            \"yyyy-MM-dd'T'HH:mm:ssz\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy-MM-dd\" };\n \n     public static String DEFAULT_DATE_PATTERN = \"yyyy-MM-dd'T'HH:mm:ssZ\";\n "},{"sha":"69e9ab297b588b4085db6d96f03a8771f243fdea","filename":"client/src/main/java/org/syncope/client/http/PreemptiveAuthHttpRequestFactory.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fhttp%2FPreemptiveAuthHttpRequestFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fhttp%2FPreemptiveAuthHttpRequestFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fhttp%2FPreemptiveAuthHttpRequestFactory.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -37,20 +37,17 @@\n  *\n  * @see DefaultContextHttpClient\n  */\n-public class PreemptiveAuthHttpRequestFactory\n-        extends HttpComponentsClientHttpRequestFactory {\n+public class PreemptiveAuthHttpRequestFactory extends HttpComponentsClientHttpRequestFactory {\n \n     private final HttpHost targetHost;\n \n-    public PreemptiveAuthHttpRequestFactory(\n-            final String host, final int port, final String scheme) {\n+    public PreemptiveAuthHttpRequestFactory(final String host, final int port, final String scheme) {\n \n         super();\n         targetHost = new HttpHost(host, port, scheme);\n     }\n \n-    public PreemptiveAuthHttpRequestFactory(\n-            final String host, final int port, final String scheme,\n+    public PreemptiveAuthHttpRequestFactory(final String host, final int port, final String scheme,\n             final ClientConnectionManager conman, final HttpParams params) {\n \n         super();\n@@ -62,8 +59,7 @@ public AuthScope getAuthScope() {\n     }\n \n     @Override\n-    protected HttpContext createHttpContext(final HttpMethod httpMethod,\n-            final URI uri) {\n+    protected HttpContext createHttpContext(final HttpMethod httpMethod, final URI uri) {\n \n         AuthCache authCache = new BasicAuthCache();\n         // Generate BASIC scheme object and add it to the local auth cache"},{"sha":"039a3621d121d6b55cca1cbd39574b5bea598669","filename":"client/src/main/java/org/syncope/client/mod/AbstractAttributableMod.java","status":"modified","additions":13,"deletions":26,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FAbstractAttributableMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FAbstractAttributableMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FAbstractAttributableMod.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -93,8 +93,7 @@ public Set<AttributeMod> getAttributesToBeUpdated() {\n         return attributesToBeUpdated;\n     }\n \n-    public void setAttributesToBeUpdated(\n-            Set<AttributeMod> attributesToBeUpdated) {\n+    public void setAttributesToBeUpdated(Set<AttributeMod> attributesToBeUpdated) {\n \n         this.attributesToBeUpdated = attributesToBeUpdated;\n     }\n@@ -111,8 +110,7 @@ public Set<String> getDerivedAttributesToBeAdded() {\n         return derivedAttributesToBeAdded;\n     }\n \n-    public void setDerivedAttributesToBeAdded(\n-            Set<String> derivedAttributesToBeAdded) {\n+    public void setDerivedAttributesToBeAdded(Set<String> derivedAttributesToBeAdded) {\n \n         this.derivedAttributesToBeAdded = derivedAttributesToBeAdded;\n     }\n@@ -129,8 +127,7 @@ public Set<String> getDerivedAttributesToBeRemoved() {\n         return derivedAttributesToBeRemoved;\n     }\n \n-    public void setDerivedAttributesToBeRemoved(\n-            Set<String> derivedAttributesToBeRemoved) {\n+    public void setDerivedAttributesToBeRemoved(Set<String> derivedAttributesToBeRemoved) {\n \n         this.derivedAttributesToBeRemoved = derivedAttributesToBeRemoved;\n     }\n@@ -139,32 +136,27 @@ public Set<String> getVirtualAttributesToBeRemoved() {\n         return virtualAttributesToBeRemoved;\n     }\n \n-    public boolean addVirtualAttributeToBeRemoved(\n-            String virtualAttributeToBeRemoved) {\n+    public boolean addVirtualAttributeToBeRemoved(String virtualAttributeToBeRemoved) {\n \n         return virtualAttributesToBeRemoved.add(virtualAttributeToBeRemoved);\n     }\n \n-    public boolean removeVirtualAttributeToBeRemoved(\n-            String virtualAttributeToBeRemoved) {\n+    public boolean removeVirtualAttributeToBeRemoved(String virtualAttributeToBeRemoved) {\n \n         return virtualAttributesToBeRemoved.remove(virtualAttributeToBeRemoved);\n     }\n \n-    public void setVirtualAttributesToBeRemoved(\n-            Set<String> virtualAttributesToBeRemoved) {\n+    public void setVirtualAttributesToBeRemoved(Set<String> virtualAttributesToBeRemoved) {\n \n         this.virtualAttributesToBeRemoved = virtualAttributesToBeRemoved;\n     }\n \n-    public boolean addVirtualAttributeToBeUpdated(\n-            AttributeMod virtualAttributeToBeUpdated) {\n+    public boolean addVirtualAttributeToBeUpdated(AttributeMod virtualAttributeToBeUpdated) {\n \n         return virtualAttributesToBeUpdated.add(virtualAttributeToBeUpdated);\n     }\n \n-    public boolean removeVirtualAttributeToBeUpdated(\n-            AttributeMod virtualAttributeToBeUpdated) {\n+    public boolean removeVirtualAttributeToBeUpdated(AttributeMod virtualAttributeToBeUpdated) {\n \n         return virtualAttributesToBeUpdated.remove(virtualAttributeToBeUpdated);\n     }\n@@ -173,8 +165,7 @@ public Set<AttributeMod> getVirtualAttributesToBeUpdated() {\n         return virtualAttributesToBeUpdated;\n     }\n \n-    public void setVirtualAttributesToBeUpdated(\n-            Set<AttributeMod> virtualAttributesToBeUpdated) {\n+    public void setVirtualAttributesToBeUpdated(Set<AttributeMod> virtualAttributesToBeUpdated) {\n \n         this.virtualAttributesToBeUpdated = virtualAttributesToBeUpdated;\n     }\n@@ -212,13 +203,9 @@ public void setResourcesToBeRemoved(Set<String> resourcesToBeRemoved) {\n     }\n \n     public boolean isEmpty() {\n-        return attributesToBeUpdated.isEmpty()\n-                && attributesToBeRemoved.isEmpty()\n-                && derivedAttributesToBeAdded.isEmpty()\n-                && derivedAttributesToBeRemoved.isEmpty()\n-                && virtualAttributesToBeUpdated.isEmpty()\n-                && virtualAttributesToBeRemoved.isEmpty()\n-                && resourcesToBeAdded.isEmpty()\n-                && resourcesToBeRemoved.isEmpty();\n+        return attributesToBeUpdated.isEmpty() && attributesToBeRemoved.isEmpty()\n+                && derivedAttributesToBeAdded.isEmpty() && derivedAttributesToBeRemoved.isEmpty()\n+                && virtualAttributesToBeUpdated.isEmpty() && virtualAttributesToBeRemoved.isEmpty()\n+                && resourcesToBeAdded.isEmpty() && resourcesToBeRemoved.isEmpty();\n     }\n }"},{"sha":"a161fb5e34a8d597f0a9f09c5617ae7ffcf3f52d","filename":"client/src/main/java/org/syncope/client/mod/AttributeMod.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FAttributeMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FAttributeMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FAttributeMod.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -82,7 +82,6 @@ public void setValuesToBeRemoved(List<String> valuesToBeRemoved) {\n \n     @JsonIgnore\n     public boolean isEmpty() {\n-        return valuesToBeAdded.isEmpty()\n-                && valuesToBeRemoved.isEmpty();\n+        return valuesToBeAdded.isEmpty() && valuesToBeRemoved.isEmpty();\n     }\n }"},{"sha":"74dbcda0f482f47053c4b49b14b75eb12c54fbb3","filename":"client/src/main/java/org/syncope/client/mod/MembershipMod.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FMembershipMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FMembershipMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FMembershipMod.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -77,7 +77,6 @@ public void setResourcesToBeRemoved(Set<String> resourcesToBeRemoved) {\n     @JsonIgnore\n     @Override\n     public boolean isEmpty() {\n-        return super.isEmpty()\n-                && role == 0;\n+        return super.isEmpty() && role == 0;\n     }\n }"},{"sha":"451757a64b894d25f7ae72e2abb1039f99f70c22","filename":"client/src/main/java/org/syncope/client/mod/RoleMod.java","status":"modified","additions":6,"deletions":16,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FRoleMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FRoleMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FRoleMod.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -54,26 +54,23 @@ public Boolean getInheritAttributes() {\n         return inheritAttributes;\n     }\n \n-    public void setInheritAttributes(\n-            final Boolean inheritAttributes) {\n+    public void setInheritAttributes(final Boolean inheritAttributes) {\n         this.inheritAttributes = inheritAttributes;\n     }\n \n     public Boolean getInheritDerivedAttributes() {\n         return inheritDerivedAttributes;\n     }\n \n-    public void setInheritDerivedAttributes(\n-            final Boolean inheritDerivedAttributes) {\n+    public void setInheritDerivedAttributes(final Boolean inheritDerivedAttributes) {\n         this.inheritDerivedAttributes = inheritDerivedAttributes;\n     }\n \n     public Boolean getInheritVirtualAttributes() {\n         return inheritVirtualAttributes;\n     }\n \n-    public void setInheritVirtualAttributes(\n-            final Boolean inheritVirtualAttributes) {\n+    public void setInheritVirtualAttributes(final Boolean inheritVirtualAttributes) {\n         this.inheritVirtualAttributes = inheritVirtualAttributes;\n     }\n \n@@ -139,15 +136,8 @@ public void setInheritAccountPolicy(final Boolean inheritAccountPolicy) {\n     @JsonIgnore\n     @Override\n     public boolean isEmpty() {\n-        return super.isEmpty()\n-                && name == null\n-                && inheritAccountPolicy == null\n-                && inheritPasswordPolicy == null\n-                && inheritAttributes == null\n-                && inheritDerivedAttributes == null\n-                && inheritVirtualAttributes == null\n-                && accountPolicy == null\n-                && passwordPolicy == null\n-                && entitlements.isEmpty();\n+        return super.isEmpty() && name == null && inheritAccountPolicy == null && inheritPasswordPolicy == null\n+                && inheritAttributes == null && inheritDerivedAttributes == null && inheritVirtualAttributes == null\n+                && accountPolicy == null && passwordPolicy == null && entitlements.isEmpty();\n     }\n }"},{"sha":"f14069bfde7eab363e0bb37d7e4f1942c9e00e02","filename":"client/src/main/java/org/syncope/client/mod/UserMod.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FUserMod.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FUserMod.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fmod%2FUserMod.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -92,10 +92,7 @@ public void setMembershipsToBeRemoved(Set<Long> membershipsToBeRemoved) {\n     @JsonIgnore\n     @Override\n     public boolean isEmpty() {\n-        return super.isEmpty()\n-                && password == null\n-                && username == null\n-                && membershipsToBeAddeded.isEmpty()\n+        return super.isEmpty() && password == null && username == null && membershipsToBeAddeded.isEmpty()\n                 && membershipsToBeRemoved.isEmpty();\n     }\n }"},{"sha":"7b1e9d9b2c65983795c14e2668ab40937602ee37","filename":"client/src/main/java/org/syncope/client/report/StaticReportletConf.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FStaticReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FStaticReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FStaticReportletConf.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -49,11 +49,15 @@ public StaticReportletConf(final String name) {\n     }\n \n     public Date getDateField() {\n-        return dateField == null ? null : new Date(dateField.getTime());\n+        return dateField == null\n+                ? null\n+                : new Date(dateField.getTime());\n     }\n \n     public void setDateField(Date dateField) {\n-        this.dateField = dateField == null ? null : new Date(dateField.getTime());\n+        this.dateField = dateField == null\n+                ? null\n+                : new Date(dateField.getTime());\n     }\n \n     public Double getDoubleField() {"},{"sha":"06481d4d0c6d2bea3979ae5e8659317c4b63a29b","filename":"client/src/main/java/org/syncope/client/search/AttributeCond.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FAttributeCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FAttributeCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FAttributeCond.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -80,8 +80,6 @@ public final void setType(final Type conditionType) {\n     }\n \n     public final boolean checkValidity() {\n-        return type != null && schema != null\n-                && (type == Type.ISNULL || type == Type.ISNOTNULL\n-                || expression != null);\n+        return type != null && schema != null && (type == Type.ISNULL || type == Type.ISNOTNULL || expression != null);\n     }\n }"},{"sha":"ea02733a8c42a46a6c3d4443935a95419466f791","filename":"client/src/main/java/org/syncope/client/search/NodeCond.java","status":"modified","additions":15,"deletions":27,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FNodeCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FNodeCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FNodeCond.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -24,7 +24,10 @@ public class NodeCond extends AbstractBaseBean {\n \n     public enum Type {\n \n-        LEAF, NOT_LEAF, AND, OR\n+        LEAF,\n+        NOT_LEAF,\n+        AND,\n+        OR\n     }\n \n     private Type type;\n@@ -101,8 +104,7 @@ public static NodeCond getNotLeafCond(final ResourceCond resourceCond) {\n         return nodeCond;\n     }\n \n-    public static NodeCond getAndCond(final NodeCond leftCond,\n-            final NodeCond rightCond) {\n+    public static NodeCond getAndCond(final NodeCond leftCond, final NodeCond rightCond) {\n \n         NodeCond nodeCond = new NodeCond();\n \n@@ -113,8 +115,7 @@ public static NodeCond getAndCond(final NodeCond leftCond,\n         return nodeCond;\n     }\n \n-    public static NodeCond getOrCond(final NodeCond leftCond,\n-            final NodeCond rightCond) {\n+    public static NodeCond getOrCond(final NodeCond leftCond, final NodeCond rightCond) {\n \n         NodeCond nodeCond = new NodeCond();\n \n@@ -189,32 +190,19 @@ public final boolean checkValidity() {\n         switch (type) {\n             case LEAF:\n             case NOT_LEAF:\n-                return (syncopeUserCond != null\n-                        && attributeCond == null\n-                        && membershipCond == null\n-                        && resourceCond == null\n-                        && syncopeUserCond.checkValidity())\n-                        || (syncopeUserCond == null\n-                        && attributeCond != null\n-                        && membershipCond == null\n-                        && resourceCond == null\n-                        && attributeCond.checkValidity())\n-                        || (syncopeUserCond == null\n-                        && attributeCond == null\n-                        && membershipCond != null\n-                        && resourceCond == null\n-                        && membershipCond.checkValidity())\n-                        || (syncopeUserCond == null\n-                        && attributeCond == null\n-                        && membershipCond == null\n-                        && resourceCond != null\n-                        && resourceCond.checkValidity());\n+                return (syncopeUserCond != null && attributeCond == null && membershipCond == null\n+                        && resourceCond == null && syncopeUserCond.checkValidity())\n+                        || (syncopeUserCond == null && attributeCond != null && membershipCond == null\n+                                && resourceCond == null && attributeCond.checkValidity())\n+                        || (syncopeUserCond == null && attributeCond == null && membershipCond != null\n+                                && resourceCond == null && membershipCond.checkValidity())\n+                        || (syncopeUserCond == null && attributeCond == null && membershipCond == null\n+                                && resourceCond != null && resourceCond.checkValidity());\n             case AND:\n             case OR:\n                 return (leftNodeCond == null || rightNodeCond == null)\n                         ? false\n-                        : leftNodeCond.checkValidity()\n-                        && rightNodeCond.checkValidity();\n+                        : leftNodeCond.checkValidity() && rightNodeCond.checkValidity();\n             default:\n                 return false;\n         }"},{"sha":"da57b18ee2765ac93a7611329578ec6fe511aaa4","filename":"client/src/main/java/org/syncope/client/to/AbstractAttributableTO.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractAttributableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractAttributableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractAttributableTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -56,8 +56,7 @@ public void setId(final long id) {\n \n     @JsonIgnore\n     public Map<String, AttributeTO> getDerivedAttributeMap() {\n-        Map<String, AttributeTO> result =\n-                new HashMap<String, AttributeTO>(derivedAttributes.size());\n+        Map<String, AttributeTO> result = new HashMap<String, AttributeTO>(derivedAttributes.size());\n         for (AttributeTO attributeTO : derivedAttributes) {\n             result.put(attributeTO.getSchema(), attributeTO);\n         }\n@@ -67,8 +66,7 @@ public Map<String, AttributeTO> getDerivedAttributeMap() {\n \n     @JsonIgnore\n     public Map<String, AttributeTO> getVirtualAttributeMap() {\n-        Map<String, AttributeTO> result =\n-                new HashMap<String, AttributeTO>(virtualAttributes.size());\n+        Map<String, AttributeTO> result = new HashMap<String, AttributeTO>(virtualAttributes.size());\n         for (AttributeTO attributeTO : virtualAttributes) {\n             result.put(attributeTO.getSchema(), attributeTO);\n         }\n@@ -88,8 +86,7 @@ public List<AttributeTO> getDerivedAttributes() {\n         return derivedAttributes;\n     }\n \n-    public void setDerivedAttributes(\n-            final List<AttributeTO> derivedAttributes) {\n+    public void setDerivedAttributes(final List<AttributeTO> derivedAttributes) {\n \n         this.derivedAttributes = derivedAttributes;\n     }"},{"sha":"9b8c6ac0490eec82c4dc6f3c6dcdccdd33f1e97a","filename":"client/src/main/java/org/syncope/client/to/AbstractExecTO.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractExecTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractExecTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAbstractExecTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -60,7 +60,9 @@ public void setStatus(String status) {\n     }\n \n     public Date getStartDate() {\n-        return startDate == null ? null : new Date(startDate.getTime());\n+        return startDate == null\n+                ? null\n+                : new Date(startDate.getTime());\n     }\n \n     public void setStartDate(Date startDate) {\n@@ -70,7 +72,9 @@ public void setStartDate(Date startDate) {\n     }\n \n     public Date getEndDate() {\n-        return endDate == null ? null : new Date(endDate.getTime());\n+        return endDate == null\n+                ? null\n+                : new Date(endDate.getTime());\n     }\n \n     public void setEndDate(Date endDate) {"},{"sha":"91272e3b13ee55ac4e34473958d6ab33a5cea54f","filename":"client/src/main/java/org/syncope/client/to/AccountPolicyTO.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAccountPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAccountPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAccountPolicyTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -34,7 +34,9 @@ public AccountPolicyTO() {\n     public AccountPolicyTO(boolean global) {\n         super();\n \n-        this.type = global ? PolicyType.GLOBAL_ACCOUNT : PolicyType.ACCOUNT;\n+        this.type = global\n+                ? PolicyType.GLOBAL_ACCOUNT\n+                : PolicyType.ACCOUNT;\n     }\n \n     public void setSpecification(final AccountPolicySpec specification) {"},{"sha":"e1e9690f87c105e6f7b9ea20ed5d79b51c4a6f37","filename":"client/src/main/java/org/syncope/client/to/AttributeTO.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -70,15 +70,19 @@ public void setSchema(final String schema) {\n      * @return wether the operation succeeded or not\n      */\n     public boolean addValue(final String value) {\n-        return value == null || isReadonly() ? false : values.add(value);\n+        return value == null || isReadonly()\n+                ? false\n+                : values.add(value);\n     }\n \n     /**\n      * @param value an attribute value to be removed\n      * @return wether the operation succeeded or not\n      */\n     public boolean removeValue(final String value) {\n-        return value == null || isReadonly() ? false : values.remove(value);\n+        return value == null || isReadonly()\n+                ? false\n+                : values.remove(value);\n     }\n \n     /**"},{"sha":"08da142f71172b932b472e9535590cf2816fb444","filename":"client/src/main/java/org/syncope/client/to/ConnInstanceTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -83,8 +83,7 @@ public Set<ConnConfProperty> getConfiguration() {\n \n     @JsonIgnore\n     public Map<String, ConnConfProperty> getConfigurationMap() {\n-        Map<String, ConnConfProperty> result =\n-                new HashMap<String, ConnConfProperty>();\n+        Map<String, ConnConfProperty> result = new HashMap<String, ConnConfProperty>();\n         for (ConnConfProperty prop : getConfiguration()) {\n             result.put(prop.getSchema().getName(), prop);\n         }"},{"sha":"e6c2826e5f8f3497cb5c13f2c8d25dd20f349db9","filename":"client/src/main/java/org/syncope/client/to/ConnObjectTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnObjectTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -55,8 +55,7 @@ public void setAttributes(final List<AttributeTO> attributes) {\n \n     @JsonIgnore\n     public Map<String, AttributeTO> getAttributeMap() {\n-        Map<String, AttributeTO> result =\n-                new HashMap<String, AttributeTO>(attributes.size());\n+        Map<String, AttributeTO> result = new HashMap<String, AttributeTO>(attributes.size());\n         for (AttributeTO attributeTO : attributes) {\n             result.put(attributeTO.getSchema(), attributeTO);\n         }"},{"sha":"8758d4771e0a6cdcbbd86d33a81b52a3a9401679","filename":"client/src/main/java/org/syncope/client/to/PasswordPolicyTO.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPasswordPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPasswordPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPasswordPolicyTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -34,7 +34,9 @@ public PasswordPolicyTO() {\n     public PasswordPolicyTO(boolean global) {\n         super();\n \n-        this.type = global ? PolicyType.GLOBAL_PASSWORD : PolicyType.PASSWORD;\n+        this.type = global\n+                ? PolicyType.GLOBAL_PASSWORD\n+                : PolicyType.PASSWORD;\n     }\n \n     public void setSpecification(final PasswordPolicySpec specification) {"},{"sha":"cdaf2e35d52aa90399354a58398ae23a85afd9bf","filename":"client/src/main/java/org/syncope/client/to/PropagationTaskTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPropagationTaskTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -75,8 +75,7 @@ public PropagationOperation getPropagationOperation() {\n         return propagationOperation;\n     }\n \n-    public void setPropagationOperation(\n-            PropagationOperation propagationOperation) {\n+    public void setPropagationOperation(PropagationOperation propagationOperation) {\n \n         this.propagationOperation = propagationOperation;\n     }"},{"sha":"d6fd12c7db037cbf8e526f7a24352ec3ede8e2ad","filename":"client/src/main/java/org/syncope/client/to/ReportTO.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FReportTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FReportTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FReportTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -116,7 +116,9 @@ public void setLatestExecStatus(String latestExecStatus) {\n     }\n \n     public Date getLastExec() {\n-        return lastExec == null ? null : new Date(lastExec.getTime());\n+        return lastExec == null\n+                ? null\n+                : new Date(lastExec.getTime());\n     }\n \n     public void setLastExec(Date lastExec) {\n@@ -126,7 +128,9 @@ public void setLastExec(Date lastExec) {\n     }\n \n     public Date getNextExec() {\n-        return nextExec == null ? null : new Date(nextExec.getTime());\n+        return nextExec == null\n+                ? null\n+                : new Date(nextExec.getTime());\n     }\n \n     public void setNextExec(Date nextExec) {"},{"sha":"18c0a31e79f43ae8ce38f2af310ccfe639be7906","filename":"client/src/main/java/org/syncope/client/to/ResourceTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -213,8 +213,7 @@ public Set<ConnConfProperty> getConnConfProperties() {\n         return connConfProperties;\n     }\n \n-    public void setConnectorConfigurationProperties(\n-            final Set<ConnConfProperty> connConfProperties) {\n+    public void setConnectorConfigurationProperties(final Set<ConnConfProperty> connConfProperties) {\n         this.connConfProperties = connConfProperties;\n     }\n "},{"sha":"ed01c38dcf67577f9c029ce9d69fbbe42ead75a8","filename":"client/src/main/java/org/syncope/client/to/RoleTO.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n \n-@JsonIgnoreProperties({\"displayName\", \"empty\"})\n+@JsonIgnoreProperties( { \"displayName\", \"empty\" })\n public class RoleTO extends AbstractAttributableTO {\n \n     private static final long serialVersionUID = -7785920258290147542L;\n@@ -79,8 +79,7 @@ public boolean isInheritDerivedAttributes() {\n         return inheritDerivedAttributes;\n     }\n \n-    public void setInheritDerivedAttributes(\n-            final boolean inheritDerivedAttributes) {\n+    public void setInheritDerivedAttributes(final boolean inheritDerivedAttributes) {\n \n         this.inheritDerivedAttributes = inheritDerivedAttributes;\n     }"},{"sha":"461e5aa8e22e9de3395269efd60865c04d68ce10","filename":"client/src/main/java/org/syncope/client/to/SchedTaskTO.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchedTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchedTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchedTaskTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -49,7 +49,9 @@ public void setJobClassName(String jobClassName) {\n     }\n \n     public Date getLastExec() {\n-        return lastExec == null ? null : new Date(lastExec.getTime());\n+        return lastExec == null\n+                ? null\n+                : new Date(lastExec.getTime());\n     }\n \n     public void setLastExec(Date lastExec) {\n@@ -59,7 +61,9 @@ public void setLastExec(Date lastExec) {\n     }\n \n     public Date getNextExec() {\n-        return nextExec == null ? null : new Date(nextExec.getTime());\n+        return nextExec == null\n+                ? null\n+                : new Date(nextExec.getTime());\n     }\n \n     public void setNextExec(Date nextExec) {"},{"sha":"6d4e7f230d96e48e29e36c57c4162cdf77ef794c","filename":"client/src/main/java/org/syncope/client/to/SchemaTO.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -58,7 +58,8 @@ public void setConversionPattern(String conversionPattern) {\n \n     public String getMandatoryCondition() {\n         return StringUtils.isNotBlank(mandatoryCondition)\n-                ? mandatoryCondition : \"false\";\n+                ? mandatoryCondition\n+                : \"false\";\n     }\n \n     public void setMandatoryCondition(String mandatoryCondition) {"},{"sha":"4d838cce77e39f1f9b10b3a0da286df6feff372c","filename":"client/src/main/java/org/syncope/client/to/SyncPolicyTO.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSyncPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSyncPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FSyncPolicyTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -34,7 +34,9 @@ public SyncPolicyTO() {\n     public SyncPolicyTO(boolean global) {\n         super();\n \n-        this.type = global ? PolicyType.GLOBAL_SYNC : PolicyType.SYNC;\n+        this.type = global\n+                ? PolicyType.GLOBAL_SYNC\n+                : PolicyType.SYNC;\n     }\n \n     public void setSpecification(final SyncPolicySpec specification) {"},{"sha":"ad127bf75516b3284d30a26dd6d67a67fe56ded1","filename":"client/src/main/java/org/syncope/client/to/UserTO.java","status":"modified","additions":6,"deletions":9,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -87,8 +87,7 @@ public void setMemberships(List<MembershipTO> memberships) {\n \n     @JsonIgnore\n     public Map<Long, MembershipTO> getMembershipMap() {\n-        Map<Long, MembershipTO> result = new HashMap<Long, MembershipTO>(\n-                getMemberships().size());\n+        Map<Long, MembershipTO> result = new HashMap<Long, MembershipTO>(getMemberships().size());\n \n         for (MembershipTO membership : getMemberships()) {\n             result.put(membership.getRoleId(), membership);\n@@ -115,7 +114,8 @@ public void setToken(String token) {\n \n     public Date getTokenExpireTime() {\n         return tokenExpireTime == null\n-                ? null : new Date(tokenExpireTime.getTime());\n+                ? null\n+                : new Date(tokenExpireTime.getTime());\n     }\n \n     public void setTokenExpireTime(Date tokenExpireTime) {\n@@ -171,8 +171,7 @@ public void addPropagationTO(final PropagationTO status) {\n     public void removePropagationTO(final String resource) {\n         if (resource != null && getPropagationTOs().isEmpty()) {\n \n-            final List<PropagationTO> toBeRemoved =\n-                    new ArrayList<PropagationTO>();\n+            final List<PropagationTO> toBeRemoved = new ArrayList<PropagationTO>();\n \n             for (PropagationTO propagationTO : getPropagationTOs()) {\n                 if (resource.equals(propagationTO.getResourceName())) {\n@@ -188,17 +187,15 @@ public List<PropagationTO> getPropagationTOs() {\n         return propagationTOs;\n     }\n \n-    public void setPropagationTOs(\n-            final List<PropagationTO> propagationTOs) {\n+    public void setPropagationTOs(final List<PropagationTO> propagationTOs) {\n \n         this.propagationTOs.clear();\n         this.propagationTOs.addAll(propagationTOs);\n     }\n \n     @Override\n     public String toString() {\n-        return new ReflectionToStringBuilder(this,\n-                ToStringStyle.MULTI_LINE_STYLE) {\n+        return new ReflectionToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE) {\n \n             @Override\n             protected boolean accept(Field f) {"},{"sha":"c4c3ee287677ad5606e14aee56fa76191f11445b","filename":"client/src/main/java/org/syncope/client/to/WorkflowFormTO.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FWorkflowFormTO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -103,15 +103,15 @@ public List<WorkflowFormPropertyTO> getProperties() {\n \n     public boolean addProperty(final WorkflowFormPropertyTO property) {\n         return properties.contains(property)\n-                ? true : properties.add(property);\n+                ? true\n+                : properties.add(property);\n     }\n \n     public boolean removeProperty(final WorkflowFormPropertyTO property) {\n         return properties.remove(property);\n     }\n \n-    public void setProperties(\n-            final Collection<WorkflowFormPropertyTO> properties) {\n+    public void setProperties(final Collection<WorkflowFormPropertyTO> properties) {\n \n         this.properties.clear();\n         if (properties != null) {\n@@ -121,8 +121,7 @@ public void setProperties(\n \n     @JsonIgnore\n     public Map<String, WorkflowFormPropertyTO> getPropertiesAsMap() {\n-        Map<String, WorkflowFormPropertyTO> props =\n-                new HashMap<String, WorkflowFormPropertyTO>();\n+        Map<String, WorkflowFormPropertyTO> props = new HashMap<String, WorkflowFormPropertyTO>();\n         for (WorkflowFormPropertyTO prop : getProperties()) {\n             props.put(prop.getId(), prop);\n         }"},{"sha":"c036e2fc9ea92fcf497660c760d2b9c0994f8e7a","filename":"client/src/main/java/org/syncope/client/util/AttributableOperations.java","status":"modified","additions":31,"deletions":62,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -52,30 +52,22 @@ public static <T extends AbstractAttributableTO> T clone(final T original) {\n         return (T) SerializationUtils.clone(original);\n     }\n \n-    private static void populate(\n-            final Map<String, AttributeTO> updatedAttrs,\n-            final Map<String, AttributeTO> originalAttrs,\n-            final AbstractAttributableMod result) {\n+    private static void populate(final Map<String, AttributeTO> updatedAttrs,\n+            final Map<String, AttributeTO> originalAttrs, final AbstractAttributableMod result) {\n         populate(updatedAttrs, originalAttrs, result, false);\n     }\n \n-    private static void populate(\n-            final Map<String, AttributeTO> updatedAttrs,\n-            final Map<String, AttributeTO> originalAttrs,\n-            final AbstractAttributableMod result,\n-            final boolean virtuals) {\n+    private static void populate(final Map<String, AttributeTO> updatedAttrs,\n+            final Map<String, AttributeTO> originalAttrs, final AbstractAttributableMod result, final boolean virtuals) {\n \n         for (Map.Entry<String, AttributeTO> entry : updatedAttrs.entrySet()) {\n             AttributeMod mod = new AttributeMod();\n             mod.setSchema(entry.getKey());\n \n-            Set<String> updatedValues = new HashSet<String>(\n-                    entry.getValue().getValues());\n+            Set<String> updatedValues = new HashSet<String>(entry.getValue().getValues());\n \n-            Set<String> originalValues =\n-                    originalAttrs.containsKey(entry.getKey())\n-                    ? new HashSet<String>(\n-                    originalAttrs.get(entry.getKey()).getValues())\n+            Set<String> originalValues = originalAttrs.containsKey(entry.getKey())\n+                    ? new HashSet<String>(originalAttrs.get(entry.getKey()).getValues())\n                     : Collections.EMPTY_SET;\n \n             if (!updatedValues.equals(originalValues)) {\n@@ -86,16 +78,14 @@ private static void populate(\n \n                     if (!mod.isEmpty()) {\n                         if (virtuals) {\n-                            result.addVirtualAttributeToBeRemoved(\n-                                    mod.getSchema());\n+                            result.addVirtualAttributeToBeRemoved(mod.getSchema());\n                         } else {\n                             result.addAttributeToBeRemoved(mod.getSchema());\n                         }\n                     }\n                 }\n \n-                mod.setValuesToBeRemoved(\n-                        new ArrayList<String>(originalValues));\n+                mod.setValuesToBeRemoved(new ArrayList<String>(originalValues));\n \n                 if (!mod.isEmpty()) {\n                     if (virtuals) {\n@@ -108,31 +98,26 @@ private static void populate(\n         }\n     }\n \n-    private static void diff(\n-            final AbstractAttributableTO updated,\n-            final AbstractAttributableTO original,\n+    private static void diff(final AbstractAttributableTO updated, final AbstractAttributableTO original,\n             final AbstractAttributableMod result) {\n \n         // 1. check same id\n         if (updated.getId() != original.getId()) {\n-            throw new IllegalArgumentException(\n-                    \"AttributableTO's id must be the same\");\n+            throw new IllegalArgumentException(\"AttributableTO's id must be the same\");\n         }\n         result.setId(updated.getId());\n \n         // 2. attributes\n         Map<String, AttributeTO> updatedAttrs = updated.getAttributeMap();\n         Map<String, AttributeTO> originalAttrs = original.getAttributeMap();\n \n-        Set<String> originalAttrNames =\n-                new HashSet<String>(originalAttrs.keySet());\n+        Set<String> originalAttrNames = new HashSet<String>(originalAttrs.keySet());\n         originalAttrNames.removeAll(updatedAttrs.keySet());\n         result.setAttributesToBeRemoved(originalAttrNames);\n \n         Set<String> emptyUpdatedAttrs = new HashSet<String>();\n         for (Map.Entry<String, AttributeTO> entry : updatedAttrs.entrySet()) {\n-            if (entry.getValue().getValues() == null\n-                    || entry.getValue().getValues().isEmpty()) {\n+            if (entry.getValue().getValues() == null || entry.getValue().getValues().isEmpty()) {\n \n                 emptyUpdatedAttrs.add(entry.getKey());\n             }\n@@ -189,15 +174,13 @@ public static UserMod diff(final UserTO updated, final UserTO original) {\n         diff(updated, original, result);\n \n         // 1. password\n-        if (original.getPassword() != null\n-                && !original.getPassword().equals(updated.getPassword())) {\n+        if (original.getPassword() != null && !original.getPassword().equals(updated.getPassword())) {\n \n             result.setPassword(updated.getPassword());\n         }\n \n         // 2. username\n-        if (original.getUsername() != null\n-                && !original.getUsername().equals(updated.getUsername())) {\n+        if (original.getUsername() != null && !original.getUsername().equals(updated.getUsername())) {\n \n             result.setUsername(updated.getUsername());\n         }\n@@ -211,11 +194,9 @@ public static UserMod diff(final UserTO updated, final UserTO original) {\n             membMod.setRole(entry.getValue().getRoleId());\n \n             if (originalMembs.containsKey(entry.getKey())) {\n-                diff(entry.getValue(), originalMembs.get(entry.getKey()),\n-                        membMod);\n+                diff(entry.getValue(), originalMembs.get(entry.getKey()), membMod);\n             } else {\n-                for (AttributeTO attr :\n-                        entry.getValue().getAttributes()) {\n+                for (AttributeTO attr : entry.getValue().getAttributes()) {\n \n                     AttributeMod attrMod = new AttributeMod();\n                     attrMod.setSchema(attr.getSchema());\n@@ -226,13 +207,11 @@ public static UserMod diff(final UserTO updated, final UserTO original) {\n                         membMod.addAttributeToBeRemoved(attrMod.getSchema());\n                     }\n                 }\n-                for (AttributeTO attr :\n-                        entry.getValue().getDerivedAttributes()) {\n+                for (AttributeTO attr : entry.getValue().getDerivedAttributes()) {\n \n                     membMod.addDerivedAttributeToBeAdded(attr.getSchema());\n                 }\n-                for (AttributeTO attr :\n-                        entry.getValue().getVirtualAttributes()) {\n+                for (AttributeTO attr : entry.getValue().getVirtualAttributes()) {\n \n                     AttributeMod attrMod = new AttributeMod();\n                     attrMod.setSchema(attr.getSchema());\n@@ -275,10 +254,8 @@ public static RoleMod diff(final RoleTO updated, final RoleTO original) {\n         result.setInheritAccountPolicy(updated.isInheritAccountPolicy());\n         result.setInheritPasswordPolicy(updated.isInheritPasswordPolicy());\n         result.setInheritAttributes(updated.isInheritAttributes());\n-        result.setInheritDerivedAttributes(\n-                updated.isInheritDerivedAttributes());\n-        result.setInheritVirtualAttributes(\n-                updated.isInheritVirtualAttributes());\n+        result.setInheritDerivedAttributes(updated.isInheritDerivedAttributes());\n+        result.setInheritVirtualAttributes(updated.isInheritVirtualAttributes());\n \n         // 2. policies\n         ReferenceMod refAccountPolicy = new ReferenceMod();\n@@ -295,21 +272,17 @@ public static RoleMod diff(final RoleTO updated, final RoleTO original) {\n         }\n \n         // 4. entitlements\n-        Set<String> updatedEnts = new HashSet<String>(\n-                updated.getEntitlements());\n-        Set<String> originalEnts = new HashSet<String>(\n-                original.getEntitlements());\n+        Set<String> updatedEnts = new HashSet<String>(updated.getEntitlements());\n+        Set<String> originalEnts = new HashSet<String>(original.getEntitlements());\n         if (!updatedEnts.equals(originalEnts)) {\n             result.setEntitlements(updated.getEntitlements());\n         }\n \n         return result;\n     }\n \n-    private static List<AttributeTO> getUpdateValues(\n-            final Map<String, AttributeTO> attrs,\n-            final Set<String> attrsToBeRemoved,\n-            final Set<AttributeMod> attrsToBeUpdated) {\n+    private static List<AttributeTO> getUpdateValues(final Map<String, AttributeTO> attrs,\n+            final Set<String> attrsToBeRemoved, final Set<AttributeMod> attrsToBeUpdated) {\n \n         for (String attrName : attrsToBeRemoved) {\n             attrs.remove(attrName);\n@@ -331,19 +304,17 @@ private static List<AttributeTO> getUpdateValues(\n         return new ArrayList(attrs.values());\n     }\n \n-    private static <T extends AbstractAttributableTO, K extends AbstractAttributableMod> void apply(\n-            final T to, final K mod, final T result) {\n+    private static <T extends AbstractAttributableTO, K extends AbstractAttributableMod> void apply(final T to,\n+            final K mod, final T result) {\n \n         // 1. check same id\n         if (to.getId() != mod.getId()) {\n-            throw new IllegalArgumentException(\n-                    \"AttributableTO and AttributableMod ids must be the same\");\n+            throw new IllegalArgumentException(\"AttributableTO and AttributableMod ids must be the same\");\n         }\n \n         // 2. attributes\n-        result.setAttributes(getUpdateValues(to.getAttributeMap(),\n-                mod.getAttributesToBeRemoved(),\n-                mod.getAttributesToBeUpdated()));\n+        result.setAttributes(getUpdateValues(to.getAttributeMap(), mod.getAttributesToBeRemoved(), mod\n+                .getAttributesToBeUpdated()));\n \n         // 3. derived attributes\n         Map<String, AttributeTO> attrs = to.getDerivedAttributeMap();\n@@ -359,9 +330,7 @@ private static <T extends AbstractAttributableTO, K extends AbstractAttributable\n         result.setDerivedAttributes(new ArrayList(attrs.values()));\n \n         // 4. virtual attributes\n-        result.setVirtualAttributes(\n-                getUpdateValues(to.getVirtualAttributeMap(),\n-                mod.getVirtualAttributesToBeRemoved(),\n+        result.setVirtualAttributes(getUpdateValues(to.getVirtualAttributeMap(), mod.getVirtualAttributesToBeRemoved(),\n                 mod.getVirtualAttributesToBeUpdated()));\n \n         // 5. resources"},{"sha":"1dd926fa79f00d2fa618996b94e5a1c98f9655a1","filename":"client/src/main/java/org/syncope/client/util/ConnConfPropUtils.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FConnConfPropUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FConnConfPropUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FConnConfPropUtils.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -34,21 +34,17 @@ public final class ConnConfPropUtils {\n     private ConnConfPropUtils() {\n     }\n \n-    public static Set<ConnConfProperty> joinConnInstanceProperties(\n-            final Map<String, ConnConfProperty> connectorProp,\n+    public static Set<ConnConfProperty> joinConnInstanceProperties(final Map<String, ConnConfProperty> connectorProp,\n             final Map<String, ConnConfProperty> resourceProp) {\n \n         connectorProp.putAll(resourceProp);\n         return new HashSet<ConnConfProperty>(connectorProp.values());\n     }\n \n-    public static Map<String, ConnConfProperty> getConnConfPropertyMap(\n-            final Set<ConnConfProperty> properties) {\n+    public static Map<String, ConnConfProperty> getConnConfPropertyMap(final Set<ConnConfProperty> properties) {\n \n-        final Map<String, ConnConfProperty> prop =\n-                new HashMap<String, ConnConfProperty>();\n-        for (Iterator<ConnConfProperty> item =\n-                properties.iterator(); item.hasNext();) {\n+        final Map<String, ConnConfProperty> prop = new HashMap<String, ConnConfProperty>();\n+        for (Iterator<ConnConfProperty> item = properties.iterator(); item.hasNext();) {\n             ConnConfProperty property = item.next();\n             prop.put(property.getSchema().getName(), property);\n         }"},{"sha":"43cb314afdfd23af0d1a19ff30c11f1622e74064","filename":"client/src/main/java/org/syncope/client/util/XMLSerializer.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FXMLSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FXMLSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FXMLSerializer.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -32,32 +32,28 @@\n  */\n public class XMLSerializer {\n \n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(XMLSerializer.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(XMLSerializer.class);\n \n     public static String serialize(final Object object) {\n         String result = null;\n \n         XStream xstream = new XStream();\n         try {\n-            result = URLEncoder.encode(\n-                    xstream.toXML(object), \"UTF-8\");\n+            result = URLEncoder.encode(xstream.toXML(object), \"UTF-8\");\n         } catch (UnsupportedEncodingException e) {\n             LOG.error(\"During serialization\", e);\n         }\n \n         return result;\n     }\n \n-    public static <T extends Object> T deserialize(\n-            final String serialized) {\n+    public static <T extends Object> T deserialize(final String serialized) {\n \n         T result = null;\n \n         XStream xstream = new XStream();\n         try {\n-            result = (T) xstream.fromXML(\n-                    URLDecoder.decode(serialized, \"UTF-8\"));\n+            result = (T) xstream.fromXML(URLDecoder.decode(serialized, \"UTF-8\"));\n         } catch (UnsupportedEncodingException e) {\n             LOG.error(\"During deserialization\", e);\n         }"},{"sha":"e85a8aaa059d5f74b9d3d346db713e5879e6e1a3","filename":"client/src/main/java/org/syncope/client/validation/SyncopeClientCompositeErrorException.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientCompositeErrorException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientCompositeErrorException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientCompositeErrorException.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -25,8 +25,7 @@\n import org.springframework.web.client.HttpClientErrorException;\n import org.syncope.types.SyncopeClientExceptionType;\n \n-public class SyncopeClientCompositeErrorException\n-        extends HttpClientErrorException {\n+public class SyncopeClientCompositeErrorException extends HttpClientErrorException {\n \n     private Set<SyncopeClientException> exceptions;\n \n@@ -43,21 +42,21 @@ public boolean hasException(SyncopeClientExceptionType exceptionType) {\n         return getException(exceptionType) != null;\n     }\n \n-    public SyncopeClientException getException(\n-            SyncopeClientExceptionType exceptionType) {\n+    public SyncopeClientException getException(SyncopeClientExceptionType exceptionType) {\n \n         boolean found = false;\n         SyncopeClientException syncopeClientException = null;\n-        for (Iterator<SyncopeClientException> itor = exceptions.iterator();\n-                itor.hasNext() && !found;) {\n+        for (Iterator<SyncopeClientException> itor = exceptions.iterator(); itor.hasNext() && !found;) {\n \n             syncopeClientException = itor.next();\n             if (syncopeClientException.getType().equals(exceptionType)) {\n                 found = true;\n             }\n         }\n \n-        return found ? syncopeClientException : null;\n+        return found\n+                ? syncopeClientException\n+                : null;\n     }\n \n     public Set<SyncopeClientException> getExceptions() {\n@@ -66,8 +65,7 @@ public Set<SyncopeClientException> getExceptions() {\n \n     public boolean addException(SyncopeClientException exception) {\n         if (exception.getType() == null) {\n-            throw new IllegalArgumentException(exception\n-                    + \" does not have the right \"\n+            throw new IllegalArgumentException(exception + \" does not have the right \"\n                     + SyncopeClientExceptionType.class.getName() + \" set\");\n         }\n "},{"sha":"58f9b34ee4af39fe893b35aed947f2dff57eb463","filename":"client/src/main/java/org/syncope/client/validation/SyncopeClientErrorHandler.java","status":"modified","additions":12,"deletions":24,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fvalidation%2FSyncopeClientErrorHandler.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -37,56 +37,44 @@ public class SyncopeClientErrorHandler extends DefaultResponseErrorHandler {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            SyncopeClientErrorHandler.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeClientErrorHandler.class);\n \n-    public static final HttpStatus[] MANAGED_STATUSES = new HttpStatus[]{\n-        HttpStatus.BAD_REQUEST, HttpStatus.NOT_FOUND};\n+    public static final HttpStatus[] MANAGED_STATUSES = new HttpStatus[] { HttpStatus.BAD_REQUEST, HttpStatus.NOT_FOUND };\n \n     @Override\n-    public void handleError(final ClientHttpResponse response)\n-            throws IOException {\n+    public void handleError(final ClientHttpResponse response) throws IOException {\n \n         if (!ArrayUtils.contains(MANAGED_STATUSES, response.getStatusCode())) {\n             super.handleError(response);\n         }\n \n-        List<String> exceptionTypesInHeaders = response.getHeaders().get(\n-                EXCEPTION_TYPE_HEADER);\n+        List<String> exceptionTypesInHeaders = response.getHeaders().get(EXCEPTION_TYPE_HEADER);\n         if (exceptionTypesInHeaders == null) {\n             LOG.debug(\"No \" + EXCEPTION_TYPE_HEADER + \" provided\");\n \n             return;\n         }\n \n-        SyncopeClientCompositeErrorException compositeException =\n-                new SyncopeClientCompositeErrorException(\n-                response.getStatusCode());\n+        SyncopeClientCompositeErrorException compositeException = new SyncopeClientCompositeErrorException(response\n+                .getStatusCode());\n \n         Set<String> handledExceptions = new HashSet<String>();\n         for (String exceptionTypeAsString : exceptionTypesInHeaders) {\n             SyncopeClientExceptionType exceptionType = null;\n             try {\n-                exceptionType = SyncopeClientExceptionType.getFromHeaderValue(\n-                        exceptionTypeAsString);\n+                exceptionType = SyncopeClientExceptionType.getFromHeaderValue(exceptionTypeAsString);\n             } catch (IllegalArgumentException e) {\n-                LOG.error(\"Unexpected value of \"\n-                        + EXCEPTION_TYPE_HEADER + \": \" + exceptionTypeAsString,\n-                        e);\n+                LOG.error(\"Unexpected value of \" + EXCEPTION_TYPE_HEADER + \": \" + exceptionTypeAsString, e);\n             }\n             if (exceptionType != null) {\n                 handledExceptions.add(exceptionTypeAsString);\n \n-                SyncopeClientException clientException =\n-                        new SyncopeClientException();\n+                SyncopeClientException clientException = new SyncopeClientException();\n                 clientException.setType(exceptionType);\n-                if (response.getHeaders().get(\n-                        exceptionType.getElementHeaderName()) != null\n-                        && !response.getHeaders().get(\n-                        exceptionType.getElementHeaderName()).isEmpty()) {\n+                if (response.getHeaders().get(exceptionType.getElementHeaderName()) != null\n+                        && !response.getHeaders().get(exceptionType.getElementHeaderName()).isEmpty()) {\n \n-                    clientException.setElements(response.getHeaders().get(\n-                            exceptionType.getElementHeaderName()));\n+                    clientException.setElements(response.getHeaders().get(exceptionType.getElementHeaderName()));\n                 }\n \n                 compositeException.addException(clientException);"},{"sha":"3fddeb641c1eae637a40ecbf46c68bb83b9b1e70","filename":"client/src/main/java/org/syncope/types/AuditElements.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FAuditElements.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FAuditElements.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FAuditElements.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -63,12 +63,10 @@ public static EnumSet<? extends Enum> getSubCategories(final Category category)\n                 result = EnumSet.allOf(ConnectorSubCategory.class);\n                 break;\n \n-\n             case logger:\n                 result = EnumSet.allOf(LoggerSubCategory.class);\n                 break;\n \n-\n             default:\n                 result = null;\n         }"},{"sha":"603a7921e063a3079f970b095bbef6805829796d","filename":"client/src/main/java/org/syncope/types/ConnConfPropSchema.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfPropSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfPropSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfPropSchema.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -20,8 +20,7 @@\n \n import org.syncope.client.AbstractBaseBean;\n \n-public class ConnConfPropSchema extends AbstractBaseBean\n-        implements Comparable<ConnConfPropSchema> {\n+public class ConnConfPropSchema extends AbstractBaseBean implements Comparable<ConnConfPropSchema> {\n \n     private static final long serialVersionUID = -1976365781005801296L;\n "},{"sha":"5e42716b60703fbdcba73b93c82466c703ab7962","filename":"client/src/main/java/org/syncope/types/ConnConfProperty.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -22,8 +22,7 @@\n import java.util.List;\n import org.syncope.client.AbstractBaseBean;\n \n-public class ConnConfProperty extends AbstractBaseBean\n-        implements Comparable<ConnConfProperty> {\n+public class ConnConfProperty extends AbstractBaseBean implements Comparable<ConnConfProperty> {\n \n     private static final long serialVersionUID = -8391413960221862238L;\n "},{"sha":"d04f032d0fad04d6d162c4b862c84649f99e44ea","filename":"client/src/main/java/org/syncope/types/EntityViolationType.java","status":"modified","additions":30,"deletions":54,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FEntityViolationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FEntityViolationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FEntityViolationType.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -21,60 +21,34 @@\n public enum EntityViolationType {\n \n     Standard(\"\"),\n-    MultivalueAndUniqueConstraint(\n-    \"org.syncope.core.validation.schema.multivalueAndUniqueConstraint\"),\n-    InvalidAccountIdCount(\n-    \"org.syncope.core.validation.externalresource.invalidAccountIdCount\"),\n-    MoreThanOneNonNull(\n-    \"org.syncope.core.validation.attrvalue.moreThanOneNonNull\"),\n-    InvalidUSchema(\n-    \"org.syncope.core.validation.attrvalue.invalidUSchema\"),\n-    InvalidUDerSchema(\n-    \"org.syncope.core.validation.attrvalue.invalidUDerSchema\"),\n-    InvalidUVirSchema(\n-    \"org.syncope.core.validation.attrvalue.invalidUVirSchema\"),\n-    InvalidRSchema(\n-    \"org.syncope.core.validation.attrvalue.invalidRSchema\"),\n-    InvalidRDerSchema(\n-    \"org.syncope.core.validation.attrvalue.invalidRDerSchema\"),\n-    InvalidRVirSchema(\n-    \"org.syncope.core.validation.attrvalue.invalidRVirSchema\"),\n-    InvalidMSchema(\n-    \"org.syncope.core.validation.attrvalue.invalidMSchema\"),\n-    InvalidMDerSchema(\n-    \"org.syncope.core.validation.attrvalue.invalidMDerSchema\"),\n-    InvalidMVirSchema(\n-    \"org.syncope.core.validation.attrvalue.invalidMVirSchema\"),\n-    InvalidSchemaTypeSpecification(\n-    \"org.syncope.core.validation.attrvalue.invalidSchemaTypeSpecification\"),\n-    InvalidValueList(\n-    \"org.syncope.core.validation.attr.invalidValueList\"),\n-    InvalidEntitlementName(\n-    \"org.syncope.core.validation.entitlement.invalidName\"),\n-    InvalidPropagationTask(\n-    \"org.syncope.core.validation.propagationtask.invalid\"),\n-    InvalidSchedTask(\n-    \"org.syncope.core.validation.schedtask.invalid\"),\n-    InvalidSyncTask(\n-    \"org.syncope.core.validation.synctask.invalid\"),\n-    InvalidPassword(\n-    \"org.syncope.core.validation.password.invalid\"),\n-    InvalidUsername(\n-    \"org.syncope.core.validation.username.invalid\"),\n+    MultivalueAndUniqueConstraint(\"org.syncope.core.validation.schema.multivalueAndUniqueConstraint\"),\n+    InvalidAccountIdCount(\"org.syncope.core.validation.externalresource.invalidAccountIdCount\"),\n+    MoreThanOneNonNull(\"org.syncope.core.validation.attrvalue.moreThanOneNonNull\"),\n+    InvalidUSchema(\"org.syncope.core.validation.attrvalue.invalidUSchema\"),\n+    InvalidUDerSchema(\"org.syncope.core.validation.attrvalue.invalidUDerSchema\"),\n+    InvalidUVirSchema(\"org.syncope.core.validation.attrvalue.invalidUVirSchema\"),\n+    InvalidRSchema(\"org.syncope.core.validation.attrvalue.invalidRSchema\"),\n+    InvalidRDerSchema(\"org.syncope.core.validation.attrvalue.invalidRDerSchema\"),\n+    InvalidRVirSchema(\"org.syncope.core.validation.attrvalue.invalidRVirSchema\"),\n+    InvalidMSchema(\"org.syncope.core.validation.attrvalue.invalidMSchema\"),\n+    InvalidMDerSchema(\"org.syncope.core.validation.attrvalue.invalidMDerSchema\"),\n+    InvalidMVirSchema(\"org.syncope.core.validation.attrvalue.invalidMVirSchema\"),\n+    InvalidSchemaTypeSpecification(\"org.syncope.core.validation.attrvalue.invalidSchemaTypeSpecification\"),\n+    InvalidValueList(\"org.syncope.core.validation.attr.invalidValueList\"),\n+    InvalidEntitlementName(\"org.syncope.core.validation.entitlement.invalidName\"),\n+    InvalidPropagationTask(\"org.syncope.core.validation.propagationtask.invalid\"),\n+    InvalidSchedTask(\"org.syncope.core.validation.schedtask.invalid\"),\n+    InvalidSyncTask(\"org.syncope.core.validation.synctask.invalid\"),\n+    InvalidPassword(\"org.syncope.core.validation.password.invalid\"),\n+    InvalidUsername(\"org.syncope.core.validation.username.invalid\"),\n     InvalidPolicy(// not throwable using rest interface because the TO is typed\n-    \"org.syncope.core.validation.policy.invalid\"),\n-    InvalidPasswordPolicy(\n-    \"org.syncope.core.validation.policy.invalid\"),\n-    InvalidAccountPolicy(\n-    \"org.syncope.core.validation.policy.invalid\"),\n-    InvalidSyncPolicy(\n-    \"org.syncope.core.validation.policy.invalid\"),\n-    InvalidNotification(\n-    \"org.syncope.core.validation.notification.invalid\"),\n-    InvalidReport(\n-    \"org.syncope.core.validation.report.invalid\"),\n-    InvalidSchemaMapping(\n-    \"org.syncope.core.validation.mapping.invalid\");\n+            \"org.syncope.core.validation.policy.invalid\"),\n+    InvalidPasswordPolicy(\"org.syncope.core.validation.policy.invalid\"),\n+    InvalidAccountPolicy(\"org.syncope.core.validation.policy.invalid\"),\n+    InvalidSyncPolicy(\"org.syncope.core.validation.policy.invalid\"),\n+    InvalidNotification(\"org.syncope.core.validation.notification.invalid\"),\n+    InvalidReport(\"org.syncope.core.validation.report.invalid\"),\n+    InvalidSchemaMapping(\"org.syncope.core.validation.mapping.invalid\");\n \n     private String message;\n \n@@ -88,6 +62,8 @@ public void setMessageTemplate(final String message) {\n \n     @Override\n     public String toString() {\n-        return this == Standard ? message : super.toString();\n+        return this == Standard\n+                ? message\n+                : super.toString();\n     }\n }"},{"sha":"0f230c6a41a532be74745740c38223d2fb60960c","filename":"client/src/main/java/org/syncope/types/PropagationOperation.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FPropagationOperation.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FPropagationOperation.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FPropagationOperation.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -20,5 +20,7 @@\n \n public enum PropagationOperation {\n \n-    CREATE, UPDATE, DELETE\n+    CREATE,\n+    UPDATE,\n+    DELETE\n }"},{"sha":"f67ac57f6dc530935622778f7cbf63ef7014d39e","filename":"client/src/main/java/org/syncope/types/SchemaType.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSchemaType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSchemaType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSchemaType.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -38,8 +38,6 @@ public String getClassName() {\n     }\n \n     public boolean isConversionPatternNeeded() {\n-        return this == SchemaType.Date\n-                || this == SchemaType.Double\n-                || this == SchemaType.Long;\n+        return this == SchemaType.Date || this == SchemaType.Double || this == SchemaType.Long;\n     }\n }"},{"sha":"957c0021830f18e64c920d799c9db5c9e393b5cb","filename":"client/src/main/java/org/syncope/types/SyncPolicySpec.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncPolicySpec.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -45,8 +45,7 @@ public ConflictResolutionAction getConflictResolutionAction() {\n         }\n     }\n \n-    public void setConflictResolutionAction(\n-            final ConflictResolutionAction conflictResolutionAction) {\n+    public void setConflictResolutionAction(final ConflictResolutionAction conflictResolutionAction) {\n         this.conflictResolutionAction = conflictResolutionAction;\n     }\n \n@@ -57,8 +56,7 @@ public List<String> getAlternativeSearchAttrs() {\n         return alternativeSearchAttrs;\n     }\n \n-    public void setAlternativeSearchAttrs(\n-            final List<String> alternativeSearchAttrs) {\n+    public void setAlternativeSearchAttrs(final List<String> alternativeSearchAttrs) {\n         this.alternativeSearchAttrs = alternativeSearchAttrs;\n     }\n }"},{"sha":"6c131696ca52be45bd9e52b9b3697078667cfdca","filename":"client/src/main/java/org/syncope/types/SyncopeClientExceptionType.java","status":"modified","additions":45,"deletions":127,"changes":172,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncopeClientExceptionType.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -20,152 +20,70 @@\n \n public enum SyncopeClientExceptionType {\n \n-    Deadlock(\n-    \"Syncope.Deadlock\",\n-    \"\"),\n-    DataIntegrityViolation(\n-    \"Syncope.DataIntegrityViolation\",\n-    \"Syncope.DataIntegrityViolation.name\"),\n-    ExistingResource(\n-    \"Syncope.ExistingResource\",\n-    \"Syncope.ExistingResource.name\"),\n-    GenericPersistence(\n-    \"Syncope.GenericPersistence\",\n-    \"Syncope.GenericPersistence.cause\"),\n-    InvalidLogger(\n-    \"Syncope.InvalidLogger\",\n-    \"Syncope.InvalidLogger.message\"),\n-    InvalidConnInstance(\n-    \"Syncope.InvalidConnInstance\",\n-    \"Syncope.InvalidConnInstance.message\"),\n-    InvalidPasswordPolicy(\n-    \"Syncope.InvalidPasswordPolicy\",\n-    \"Syncope.InvalidPasswordPolicy.reason\"),\n-    InvalidAccountPolicy(\n-    \"Syncope.InvalidAccountPolicy\",\n-    \"Syncope.InvalidAccountPolicy.reason\"),\n-    InvalidSyncPolicy(\n-    \"Syncope.InvalidSyncPolicy\",\n-    \"Syncope.InvalidSyncPolicy.reason\"),\n-    InvalidSyncopeRole(\n-    \"Syncope.InvalidSyncopeRole\",\n-    \"Syncope.InvalidSyncopeRole.reason\"),\n-    InvalidReportExec(\n-    \"Syncope.InvalidReportExec\",\n-    \"Syncope.InvalidReportExec.reason\"),\n-    InvalidRoles(\n-    \"Syncope.InvalidRoles\",\n-    \"Syncope.InvalidRoles.name\"),\n-    InvalidSchemaDefinition(\n-    \"Syncope.InvalidSchemaDefinition\",\n-    \"\"),\n-    InvalidSearchCondition(\n-    \"Syncope.InvalidSearchCondition\",\n-    \"\"),\n+    Deadlock(\"Syncope.Deadlock\", \"\"),\n+    DataIntegrityViolation(\"Syncope.DataIntegrityViolation\", \"Syncope.DataIntegrityViolation.name\"),\n+    ExistingResource(\"Syncope.ExistingResource\", \"Syncope.ExistingResource.name\"),\n+    GenericPersistence(\"Syncope.GenericPersistence\", \"Syncope.GenericPersistence.cause\"),\n+    InvalidLogger(\"Syncope.InvalidLogger\", \"Syncope.InvalidLogger.message\"),\n+    InvalidConnInstance(\"Syncope.InvalidConnInstance\", \"Syncope.InvalidConnInstance.message\"),\n+    InvalidPasswordPolicy(\"Syncope.InvalidPasswordPolicy\", \"Syncope.InvalidPasswordPolicy.reason\"),\n+    InvalidAccountPolicy(\"Syncope.InvalidAccountPolicy\", \"Syncope.InvalidAccountPolicy.reason\"),\n+    InvalidSyncPolicy(\"Syncope.InvalidSyncPolicy\", \"Syncope.InvalidSyncPolicy.reason\"),\n+    InvalidSyncopeRole(\"Syncope.InvalidSyncopeRole\", \"Syncope.InvalidSyncopeRole.reason\"),\n+    InvalidReportExec(\"Syncope.InvalidReportExec\", \"Syncope.InvalidReportExec.reason\"),\n+    InvalidRoles(\"Syncope.InvalidRoles\", \"Syncope.InvalidRoles.name\"),\n+    InvalidSchemaDefinition(\"Syncope.InvalidSchemaDefinition\", \"\"),\n+    InvalidSearchCondition(\"Syncope.InvalidSearchCondition\", \"\"),\n     InvalidPropagationTaskExecReport(\n-    \"Syncope.InvalidPropagationTaskExecReport\",\n-    \"Syncope.InvalidPropagationTaskExecReport.element\"),\n-    InvalidUSchema(\n-    \"Syncope.InvalidUSchemaUpdate\",\n-    \"Syncope.InvalidUSchemaUpdate.name\"),\n-    InvalidUDerSchema(\n-    \"Syncope.InvalidUDerSchemaUpdate\",\n-    \"Syncope.InvalidUDerSchemaUpdate.name\"),\n-    InvalidUVirSchema(\n-    \"Syncope.InvalidUVirSchemaUpdate\",\n-    \"Syncope.InvalidUVirSchemaUpdate.name\"),\n-    InvalidRSchema(\n-    \"Syncope.InvalidRSchemaUpdate\",\n-    \"Syncope.InvalidRSchemaUpdate.name\"),\n-    InvalidRDerSchema(\n-    \"Syncope.InvalidRDerSchemaUpdate\",\n-    \"Syncope.InvalidRDerSchemaUpdate.name\"),\n-    InvalidRVirSchema(\n-    \"Syncope.InvalidRVirSchemaUpdate\",\n-    \"Syncope.InvalidRVirSchemaUpdate.name\"),\n-    InvalidMSchema(\n-    \"Syncope.InvalidMSchemaUpdate\",\n-    \"Syncope.InvalidMSchemaUpdate.name\"),\n-    InvalidMDerSchema(\n-    \"Syncope.InvalidMDerSchemaUpdate\",\n-    \"Syncope.InvalidMDerSchemaUpdate.name\"),\n-    InvalidMVirSchema(\n-    \"Syncope.InvalidMVirSchemaUpdate\",\n-    \"Syncope.InvalidMVirSchemaUpdate.name\"),\n-    InvalidSchemaMapping(\n-    \"Syncope.InvalidSchemaMapping\",\n-    \"\"),\n-    InvalidSyncopeUser(\n-    \"Syncope.InvalidSyncopeUser\",\n-    \"Syncope.InvalidSyncopeUser.element\"),\n-    InvalidExternalResource(\n-    \"Syncope.InvalidExternalResource\",\n-    \"Syncope.InvalidExternalResource.element\"),\n-    InvalidNotification(\n-    \"Syncope.InvalidNotification\",\n-    \"Syncope.InvalidNotification.element\"),\n-    InvalidPropagationTask(\n-    \"Syncope.InvalidPropagationTask\",\n-    \"Syncope.InvalidPropagationTask.element\"),\n-    InvalidSchedTask(\n-    \"Syncope.InvalidSchedTask\",\n-    \"Syncope.InvalidSchedTask.element\"),\n-    InvalidSyncTask(\n-    \"Syncope.InvalidSyncTask\",\n-    \"Syncope.InvalidSyncTask.element\"),\n-    InvalidValues(\n-    \"Syncope.InvalidValues\",\n-    \"Syncope.InvalidValues.attributeName\"),\n-    NotFound(\n-    \"Syncope.NotFound\",\n-    \"Syncope.NotFound.entity\"),\n-    Propagation(\n-    \"Syncope.Propagation\",\n-    \"Syncope.Propagation.resourceName\"),\n-    RejectedUserCreate(\n-    \"Syncope.RejectUserCreate\",\n-    \"Syncope.RejectUserCreate.syncopeUserId\"),\n-    RequiredValuesMissing(\n-    \"Syncope.RequiredValuesMissing\",\n-    \"Syncope.RequiredValuesMissing.attributeName\"),\n-    Scheduling(\n-    \"Syncope.Scheduling\",\n-    \"Syncope.Scheduling.message\"),\n-    UnauthorizedRole(\n-    \"Syncope.UnauthorizedRole\",\n-    \"Syncope.UnauthorizedRole.id\"),\n-    Unknown(\n-    \"Syncope.Unknown\",\n-    \"\"),\n-    Workflow(\n-    \"Syncope.Workflow\",\n-    \"Syncope.Workflow.message\");\n+            \"Syncope.InvalidPropagationTaskExecReport\",\n+            \"Syncope.InvalidPropagationTaskExecReport.element\"),\n+    InvalidUSchema(\"Syncope.InvalidUSchemaUpdate\", \"Syncope.InvalidUSchemaUpdate.name\"),\n+    InvalidUDerSchema(\"Syncope.InvalidUDerSchemaUpdate\", \"Syncope.InvalidUDerSchemaUpdate.name\"),\n+    InvalidUVirSchema(\"Syncope.InvalidUVirSchemaUpdate\", \"Syncope.InvalidUVirSchemaUpdate.name\"),\n+    InvalidRSchema(\"Syncope.InvalidRSchemaUpdate\", \"Syncope.InvalidRSchemaUpdate.name\"),\n+    InvalidRDerSchema(\"Syncope.InvalidRDerSchemaUpdate\", \"Syncope.InvalidRDerSchemaUpdate.name\"),\n+    InvalidRVirSchema(\"Syncope.InvalidRVirSchemaUpdate\", \"Syncope.InvalidRVirSchemaUpdate.name\"),\n+    InvalidMSchema(\"Syncope.InvalidMSchemaUpdate\", \"Syncope.InvalidMSchemaUpdate.name\"),\n+    InvalidMDerSchema(\"Syncope.InvalidMDerSchemaUpdate\", \"Syncope.InvalidMDerSchemaUpdate.name\"),\n+    InvalidMVirSchema(\"Syncope.InvalidMVirSchemaUpdate\", \"Syncope.InvalidMVirSchemaUpdate.name\"),\n+    InvalidSchemaMapping(\"Syncope.InvalidSchemaMapping\", \"\"),\n+    InvalidSyncopeUser(\"Syncope.InvalidSyncopeUser\", \"Syncope.InvalidSyncopeUser.element\"),\n+    InvalidExternalResource(\"Syncope.InvalidExternalResource\", \"Syncope.InvalidExternalResource.element\"),\n+    InvalidNotification(\"Syncope.InvalidNotification\", \"Syncope.InvalidNotification.element\"),\n+    InvalidPropagationTask(\"Syncope.InvalidPropagationTask\", \"Syncope.InvalidPropagationTask.element\"),\n+    InvalidSchedTask(\"Syncope.InvalidSchedTask\", \"Syncope.InvalidSchedTask.element\"),\n+    InvalidSyncTask(\"Syncope.InvalidSyncTask\", \"Syncope.InvalidSyncTask.element\"),\n+    InvalidValues(\"Syncope.InvalidValues\", \"Syncope.InvalidValues.attributeName\"),\n+    NotFound(\"Syncope.NotFound\", \"Syncope.NotFound.entity\"),\n+    Propagation(\"Syncope.Propagation\", \"Syncope.Propagation.resourceName\"),\n+    RejectedUserCreate(\"Syncope.RejectUserCreate\", \"Syncope.RejectUserCreate.syncopeUserId\"),\n+    RequiredValuesMissing(\"Syncope.RequiredValuesMissing\", \"Syncope.RequiredValuesMissing.attributeName\"),\n+    Scheduling(\"Syncope.Scheduling\", \"Syncope.Scheduling.message\"),\n+    UnauthorizedRole(\"Syncope.UnauthorizedRole\", \"Syncope.UnauthorizedRole.id\"),\n+    Unknown(\"Syncope.Unknown\", \"\"),\n+    Workflow(\"Syncope.Workflow\", \"Syncope.Workflow.message\");\n \n     private String headerValue;\n \n     private String elementHeaderName;\n \n-    private SyncopeClientExceptionType(String headerValue,\n-            String elementHeaderName) {\n+    private SyncopeClientExceptionType(String headerValue, String elementHeaderName) {\n \n         this.headerValue = headerValue;\n         this.elementHeaderName = elementHeaderName;\n     }\n \n-    public static SyncopeClientExceptionType getFromHeaderValue(\n-            String exceptionTypeHeaderValue) {\n+    public static SyncopeClientExceptionType getFromHeaderValue(String exceptionTypeHeaderValue) {\n \n         SyncopeClientExceptionType result = null;\n         for (SyncopeClientExceptionType syncopeClientExceptionType : values()) {\n-            if (exceptionTypeHeaderValue.equals(\n-                    syncopeClientExceptionType.getHeaderValue())) {\n+            if (exceptionTypeHeaderValue.equals(syncopeClientExceptionType.getHeaderValue())) {\n                 result = syncopeClientExceptionType;\n             }\n         }\n \n         if (result == null) {\n-            throw new IllegalArgumentException(\"Unexpected header value: \"\n-                    + exceptionTypeHeaderValue);\n+            throw new IllegalArgumentException(\"Unexpected header value: \" + exceptionTypeHeaderValue);\n         }\n \n         return result;"},{"sha":"aaa4b1f9c9229fe987099afc45857303fe3450fe","filename":"client/src/test/java/org/syncope/client/test/JSONTest.java","status":"modified","additions":9,"deletions":17,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fclient%2Ftest%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fclient%2Ftest%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fclient%2Ftest%2FJSONTest.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -38,20 +38,17 @@\n public class JSONTest {\n \n     @Test\n-    public void testSearchCondition()\n-            throws IOException {\n+    public void testSearchCondition() throws IOException {\n \n-        final AttributeCond usernameCond =\n-                new AttributeCond(AttributeCond.Type.LIKE);\n+        final AttributeCond usernameCond = new AttributeCond(AttributeCond.Type.LIKE);\n         usernameCond.setSchema(\"username\");\n         usernameCond.setExpression(\"%o%\");\n \n         final MembershipCond membershipCond = new MembershipCond();\n         membershipCond.setRoleName(\"root\");\n \n-        final NodeCond searchCondition = NodeCond.getAndCond(\n-                NodeCond.getLeafCond(usernameCond),\n-                NodeCond.getLeafCond(membershipCond));\n+        final NodeCond searchCondition = NodeCond.getAndCond(NodeCond.getLeafCond(usernameCond), NodeCond\n+                .getLeafCond(membershipCond));\n \n         assertTrue(searchCondition.checkValidity());\n \n@@ -65,8 +62,7 @@ public void testSearchCondition()\n     }\n \n     @Test\n-    public void testLists()\n-            throws IOException {\n+    public void testLists() throws IOException {\n \n         List<SchemaTO> schemas = new ArrayList<SchemaTO>();\n         SchemaTO schemaTO = new SchemaTO();\n@@ -81,16 +77,14 @@ public void testLists()\n         StringWriter writer = new StringWriter();\n         mapper.writeValue(writer, schemas);\n \n-        List<SchemaTO> unserializedSchemas = Arrays.asList(\n-                mapper.readValue(writer.toString(), SchemaTO[].class));\n+        List<SchemaTO> unserializedSchemas = Arrays.asList(mapper.readValue(writer.toString(), SchemaTO[].class));\n         for (SchemaTO unserializedSchema : unserializedSchemas) {\n             assertNotNull(unserializedSchema);\n         }\n     }\n \n     @Test\n-    public void testMap()\n-            throws IOException {\n+    public void testMap() throws IOException {\n \n         WorkflowFormPropertyTO prop = new WorkflowFormPropertyTO();\n         prop.putEnumValue(\"key1\", \"value1\");\n@@ -101,14 +95,12 @@ public void testMap()\n         StringWriter writer = new StringWriter();\n         mapper.writeValue(writer, prop);\n \n-        WorkflowFormPropertyTO unserializedProp = mapper.readValue(\n-                writer.toString(), WorkflowFormPropertyTO.class);\n+        WorkflowFormPropertyTO unserializedProp = mapper.readValue(writer.toString(), WorkflowFormPropertyTO.class);\n         assertEquals(prop, unserializedProp);\n     }\n \n     @Test\n-    public void testReportletConfImplementations()\n-            throws IOException {\n+    public void testReportletConfImplementations() throws IOException {\n \n         ReportTO report = new ReportTO();\n         report.setName(\"testReportForCreate\");"},{"sha":"7f97dba7a68bec402026a88766ad270e648d40b8","filename":"console/src/main/java/org/syncope/console/SyncopeApplication.java","status":"modified","additions":59,"deletions":88,"changes":147,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -52,8 +52,7 @@\n /**\n  * SyncopeApplication class.\n  */\n-public class SyncopeApplication extends WebApplication\n-        implements IUnauthorizedComponentInstantiationListener,\n+public class SyncopeApplication extends WebApplication implements IUnauthorizedComponentInstantiationListener,\n         IRoleCheckingStrategy {\n \n     public static final String IMG_PREFIX = \"/img/menu/\";\n@@ -64,110 +63,83 @@ public class SyncopeApplication extends WebApplication\n \n     @Override\n     protected void init() {\n-        getComponentInstantiationListeners().add(\n-                new SpringComponentInjector(this));\n+        getComponentInstantiationListeners().add(new SpringComponentInjector(this));\n \n         getResourceSettings().setThrowExceptionOnMissingResource(true);\n \n-        getSecuritySettings().\n-                setAuthorizationStrategy(new RoleAuthorizationStrategy(this));\n-        getSecuritySettings().\n-                setUnauthorizedComponentInstantiationListener(this);\n+        getSecuritySettings().setAuthorizationStrategy(new RoleAuthorizationStrategy(this));\n+        getSecuritySettings().setUnauthorizedComponentInstantiationListener(this);\n \n         getMarkupSettings().setStripWicketTags(true);\n \n         getRequestCycleListeners().add(new SyncopeRequestCycleListener());\n     }\n \n-    public void setupNavigationPane(final WebPage page,\n-            final XMLRolesReader xmlRolesReader, final boolean notsel,\n+    public void setupNavigationPane(final WebPage page, final XMLRolesReader xmlRolesReader, final boolean notsel,\n             final String version) {\n \n-        page.add(new Label(\"version\", \"Console: \" + version\n-                + \"; Core: \" + SyncopeSession.get().getCoreVersion()));\n+        page.add(new Label(\"version\", \"Console: \" + version + \"; Core: \" + SyncopeSession.get().getCoreVersion()));\n \n-        BookmarkablePageLink schemaLink =\n-                new BookmarkablePageLink(\"schema\", Schema.class);\n-        MetaDataRoleAuthorizationStrategy.authorizeAll(\n-                schemaLink, WebPage.ENABLE);\n+        BookmarkablePageLink schemaLink = new BookmarkablePageLink(\"schema\", Schema.class);\n+        MetaDataRoleAuthorizationStrategy.authorizeAll(schemaLink, WebPage.ENABLE);\n         page.add(schemaLink);\n-        schemaLink.add(\n-                new Image(\"schemaIcon\",\n-                new ContextRelativeResource(IMG_PREFIX\n-                + (notsel ? IMG_NOTSEL : \"\") + \"schema\" + IMG_SUFFIX)));\n-\n-        BookmarkablePageLink usersLink =\n-                new BookmarkablePageLink(\"users\", Users.class);\n-        String allowedUsersRoles =\n-                xmlRolesReader.getAllAllowedRoles(\"Users\", \"list\");\n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                usersLink, WebPage.ENABLE, allowedUsersRoles);\n+        schemaLink.add(new Image(\"schemaIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n+                ? IMG_NOTSEL\n+                : \"\") + \"schema\" + IMG_SUFFIX)));\n+\n+        BookmarkablePageLink usersLink = new BookmarkablePageLink(\"users\", Users.class);\n+        String allowedUsersRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"list\");\n+        MetaDataRoleAuthorizationStrategy.authorize(usersLink, WebPage.ENABLE, allowedUsersRoles);\n         page.add(usersLink);\n-        usersLink.add(new Image(\"usersIcon\",\n-                new ContextRelativeResource(IMG_PREFIX\n-                + (notsel ? IMG_NOTSEL : \"\") + \"users\" + IMG_SUFFIX)));\n-\n-        BookmarkablePageLink rolesLink =\n-                new BookmarkablePageLink(\"roles\", Roles.class);\n-        MetaDataRoleAuthorizationStrategy.authorizeAll(\n-                rolesLink, WebPage.ENABLE);\n+        usersLink.add(new Image(\"usersIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n+                ? IMG_NOTSEL\n+                : \"\") + \"users\" + IMG_SUFFIX)));\n+\n+        BookmarkablePageLink rolesLink = new BookmarkablePageLink(\"roles\", Roles.class);\n+        MetaDataRoleAuthorizationStrategy.authorizeAll(rolesLink, WebPage.ENABLE);\n         page.add(rolesLink);\n-        rolesLink.add(new Image(\"rolesIcon\",\n-                new ContextRelativeResource(IMG_PREFIX\n-                + (notsel ? IMG_NOTSEL : \"\") + \"roles\" + IMG_SUFFIX)));\n-\n-        BookmarkablePageLink resourcesLink =\n-                new BookmarkablePageLink(\"resources\", Resources.class);\n-        MetaDataRoleAuthorizationStrategy.authorizeAll(\n-                resourcesLink, WebPage.ENABLE);\n+        rolesLink.add(new Image(\"rolesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n+                ? IMG_NOTSEL\n+                : \"\") + \"roles\" + IMG_SUFFIX)));\n+\n+        BookmarkablePageLink resourcesLink = new BookmarkablePageLink(\"resources\", Resources.class);\n+        MetaDataRoleAuthorizationStrategy.authorizeAll(resourcesLink, WebPage.ENABLE);\n         page.add(resourcesLink);\n-        resourcesLink.add(new Image(\"resourcesIcon\",\n-                new ContextRelativeResource(\n-                IMG_PREFIX + (notsel ? IMG_NOTSEL : \"\") + \"resources\"\n-                + IMG_SUFFIX)));\n-\n-        BookmarkablePageLink todoLink =\n-                new BookmarkablePageLink(\"todo\", Todo.class);\n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                todoLink, WebPage.ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Approval\", \"list\"));\n+        resourcesLink.add(new Image(\"resourcesIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n+                ? IMG_NOTSEL\n+                : \"\") + \"resources\" + IMG_SUFFIX)));\n+\n+        BookmarkablePageLink todoLink = new BookmarkablePageLink(\"todo\", Todo.class);\n+        MetaDataRoleAuthorizationStrategy.authorize(todoLink, WebPage.ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Approval\", \"list\"));\n         page.add(todoLink);\n-        todoLink.add(new Image(\"todoIcon\",\n-                new ContextRelativeResource(IMG_PREFIX\n-                + (notsel ? IMG_NOTSEL : \"\") + \"todo\" + IMG_SUFFIX)));\n-\n-        BookmarkablePageLink reportLink =\n-                new BookmarkablePageLink(\"reports\", Reports.class);\n-        String allowedReportRoles =\n-                xmlRolesReader.getAllAllowedRoles(\"Reports\", \"list\");\n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                reportLink, WebPage.ENABLE, allowedReportRoles);\n+        todoLink.add(new Image(\"todoIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n+                ? IMG_NOTSEL\n+                : \"\") + \"todo\" + IMG_SUFFIX)));\n+\n+        BookmarkablePageLink reportLink = new BookmarkablePageLink(\"reports\", Reports.class);\n+        String allowedReportRoles = xmlRolesReader.getAllAllowedRoles(\"Reports\", \"list\");\n+        MetaDataRoleAuthorizationStrategy.authorize(reportLink, WebPage.ENABLE, allowedReportRoles);\n         page.add(reportLink);\n-        reportLink.add(new Image(\"reportsIcon\",\n-                new ContextRelativeResource(IMG_PREFIX\n-                + (notsel ? IMG_NOTSEL : \"\") + \"reports\" + IMG_SUFFIX)));\n-\n-        BookmarkablePageLink configurationLink =\n-                new BookmarkablePageLink(\"configuration\", Configuration.class);\n-        String allowedConfigurationRoles =\n-                xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"list\");\n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                configurationLink, WebPage.ENABLE, allowedConfigurationRoles);\n+        reportLink.add(new Image(\"reportsIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n+                ? IMG_NOTSEL\n+                : \"\") + \"reports\" + IMG_SUFFIX)));\n+\n+        BookmarkablePageLink configurationLink = new BookmarkablePageLink(\"configuration\", Configuration.class);\n+        String allowedConfigurationRoles = xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"list\");\n+        MetaDataRoleAuthorizationStrategy.authorize(configurationLink, WebPage.ENABLE, allowedConfigurationRoles);\n         page.add(configurationLink);\n-        configurationLink.add(new Image(\"configurationIcon\",\n-                new ContextRelativeResource(IMG_PREFIX\n-                + (notsel ? IMG_NOTSEL : \"\") + \"configuration\" + IMG_SUFFIX)));\n-\n-        BookmarkablePageLink taskLink =\n-                new BookmarkablePageLink(\"tasks\", Tasks.class);\n-        String allowedTasksRoles =\n-                xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"list\");\n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                taskLink, WebPage.ENABLE, allowedTasksRoles);\n+        configurationLink.add(new Image(\"configurationIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n+                ? IMG_NOTSEL\n+                : \"\") + \"configuration\" + IMG_SUFFIX)));\n+\n+        BookmarkablePageLink taskLink = new BookmarkablePageLink(\"tasks\", Tasks.class);\n+        String allowedTasksRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"list\");\n+        MetaDataRoleAuthorizationStrategy.authorize(taskLink, WebPage.ENABLE, allowedTasksRoles);\n         page.add(taskLink);\n-        taskLink.add(new Image(\"tasksIcon\",\n-                new ContextRelativeResource(IMG_PREFIX\n-                + (notsel ? IMG_NOTSEL : \"\") + \"tasks\" + IMG_SUFFIX)));\n+        taskLink.add(new Image(\"tasksIcon\", new ContextRelativeResource(IMG_PREFIX + (notsel\n+                ? IMG_NOTSEL\n+                : \"\") + \"tasks\" + IMG_SUFFIX)));\n \n         page.add(new BookmarkablePageLink(\"logout\", Logout.class));\n     }\n@@ -196,8 +168,7 @@ public void onUnauthorizedInstantiation(final Component component) {\n     }\n \n     @Override\n-    public boolean hasAnyRole(\n-            final org.apache.wicket.authroles.authorization.strategies.role.Roles roles) {\n+    public boolean hasAnyRole(final org.apache.wicket.authroles.authorization.strategies.role.Roles roles) {\n \n         return SyncopeSession.get().hasAnyRole(roles);\n     }"},{"sha":"2ef2b93d7acd00b7bdcafdfe10e05cfb4f73bdf3","filename":"console/src/main/java/org/syncope/console/SyncopeRequestCycleListener.java","status":"modified","additions":9,"deletions":19,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycleListener.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -39,48 +39,38 @@ public class SyncopeRequestCycleListener extends AbstractRequestCycleListener {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            SyncopeRequestCycleListener.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeRequestCycleListener.class);\n \n     /**\n      * {@inheritDoc}\n      */\n     @Override\n-    public IRequestHandler onException(final RequestCycle cycle,\n-            final Exception e) {\n+    public IRequestHandler onException(final RequestCycle cycle, final Exception e) {\n \n         LOG.error(\"Exception found\", e);\n \n         final Page errorPage;\n         PageParameters errorParameters = new PageParameters();\n-        errorParameters.add(\"errorTitle\",\n-                new StringResourceModel(\"alert\", null).getString());\n+        errorParameters.add(\"errorTitle\", new StringResourceModel(\"alert\", null).getString());\n \n         if (e instanceof UnauthorizedInstantiationException) {\n-            errorParameters.add(\"errorMessage\", new StringResourceModel(\n-                    \"unauthorizedInstantiationException\", null).getString());\n+            errorParameters.add(\"errorMessage\", new StringResourceModel(\"unauthorizedInstantiationException\", null)\n+                    .getString());\n \n             errorPage = new ErrorPage(errorParameters);\n         } else if (e instanceof HttpClientErrorException) {\n-            errorParameters.add(\"errorMessage\",\n-                    new StringResourceModel(\"httpClientException\", null).\n-                    getString());\n+            errorParameters.add(\"errorMessage\", new StringResourceModel(\"httpClientException\", null).getString());\n \n             errorPage = new ErrorPage(errorParameters);\n-        } else if (e instanceof PageExpiredException\n-                || !(SyncopeSession.get()).isAuthenticated()) {\n+        } else if (e instanceof PageExpiredException || !(SyncopeSession.get()).isAuthenticated()) {\n \n-            errorParameters.add(\"errorMessage\",\n-                    new StringResourceModel(\"pageExpiredException\", null).\n-                    getString());\n+            errorParameters.add(\"errorMessage\", new StringResourceModel(\"pageExpiredException\", null).getString());\n \n             errorPage = new ErrorPage(errorParameters);\n         } else if (e.getCause() != null && e.getCause().getCause() != null\n                 && e.getCause().getCause() instanceof RestClientException) {\n \n-            errorParameters.add(\"errorMessage\",\n-                    new StringResourceModel(\"restClientException\", null).\n-                    getString());\n+            errorParameters.add(\"errorMessage\", new StringResourceModel(\"restClientException\", null).getString());\n \n             errorPage = new ErrorPage(errorParameters);\n         } else {"},{"sha":"2ad7380a4f67a248d91fba645437117ed7dbc1f2","filename":"console/src/main/java/org/syncope/console/commons/Constants.java","status":"modified","additions":29,"deletions":55,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -20,82 +20,57 @@\n \n public final class Constants {\n \n-    public static final String PREF_USERS_DETAILS_VIEW =\n-            \"users.details.view\";\n+    public static final String PREF_USERS_DETAILS_VIEW = \"users.details.view\";\n \n-    public static final String PREF_USERS_ATTRIBUTES_VIEW =\n-            \"users.attributes.view\";\n+    public static final String PREF_USERS_ATTRIBUTES_VIEW = \"users.attributes.view\";\n \n-    public static final String PREF_USERS_DERIVED_ATTRIBUTES_VIEW =\n-            \"users.derived.attributes.view\";\n+    public static final String PREF_USERS_DERIVED_ATTRIBUTES_VIEW = \"users.derived.attributes.view\";\n \n-    public static final String PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW =\n-            \"users.virtual.attributes.view\";\n+    public static final String PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW = \"users.virtual.attributes.view\";\n \n     public static final String PREFS_COOKIE_NAME = \"syncopeConsolePrefs\";\n \n-    public static final String PREF_USER_SCHEMA_PAGINATOR_ROWS =\n-            \"user.schema.paginator.rows\";\n+    public static final String PREF_USER_SCHEMA_PAGINATOR_ROWS = \"user.schema.paginator.rows\";\n \n-    public static final String PREF_USER_DER_SCHEMA_PAGINATOR_ROWS =\n-            \"user.derived.schema.paginator.rows\";\n+    public static final String PREF_USER_DER_SCHEMA_PAGINATOR_ROWS = \"user.derived.schema.paginator.rows\";\n \n-    public static final String PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS =\n-            \"user.virtual.schema.paginator.rows\";\n+    public static final String PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS = \"user.virtual.schema.paginator.rows\";\n \n-    public static final String PREF_ROLE_SCHEMA_PAGINATOR_ROWS =\n-            \"role.schema.paginator.rows\";\n+    public static final String PREF_ROLE_SCHEMA_PAGINATOR_ROWS = \"role.schema.paginator.rows\";\n \n-    public static final String PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS =\n-            \"role.derived.schema.paginator.rows\";\n+    public static final String PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS = \"role.derived.schema.paginator.rows\";\n \n-    public static final String PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS =\n-            \"role.virtual.schema.paginator.rows\";\n+    public static final String PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS = \"role.virtual.schema.paginator.rows\";\n \n-    public static final String PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS =\n-            \"membership.schema.paginator.rows\";\n+    public static final String PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS = \"membership.schema.paginator.rows\";\n \n-    public static final String PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS =\n-            \"membership.derived.aschema.paginator.rows\";\n+    public static final String PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS = \"membership.derived.aschema.paginator.rows\";\n \n-    public static final String PREF_MEMBERSHIP_VIR_SCHEMA_PAGINATOR_ROWS =\n-            \"membership.virtual.aschema.paginator.rows\";\n+    public static final String PREF_MEMBERSHIP_VIR_SCHEMA_PAGINATOR_ROWS = \"membership.virtual.aschema.paginator.rows\";\n \n-    public static final String PREF_USERS_PAGINATOR_ROWS =\n-            \"users.paginator.rows\";\n+    public static final String PREF_USERS_PAGINATOR_ROWS = \"users.paginator.rows\";\n \n-    public static final String PREF_RESOURCES_PAGINATOR_ROWS =\n-            \"resources.paginator.rows\";\n+    public static final String PREF_RESOURCES_PAGINATOR_ROWS = \"resources.paginator.rows\";\n \n-    public static final String PREF_CONNECTORS_PAGINATOR_ROWS =\n-            \"connectors.paginator.rows\";\n+    public static final String PREF_CONNECTORS_PAGINATOR_ROWS = \"connectors.paginator.rows\";\n \n-    public static final String PREF_CONFIGURATION_PAGINATOR_ROWS =\n-            \"configuration.paginator.rows\";\n+    public static final String PREF_CONFIGURATION_PAGINATOR_ROWS = \"configuration.paginator.rows\";\n \n-    public static final String PREF_NOTIFICATION_PAGINATOR_ROWS =\n-            \"notification.paginator.rows\";\n+    public static final String PREF_NOTIFICATION_PAGINATOR_ROWS = \"notification.paginator.rows\";\n \n-    public static final String PREF_PROPAGATION_TASKS_PAGINATOR_ROWS =\n-            \"proagationtasks.paginator.rows\";\n+    public static final String PREF_PROPAGATION_TASKS_PAGINATOR_ROWS = \"proagationtasks.paginator.rows\";\n \n-    public static final String PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS =\n-            \"notificationtasks.paginator.rows\";\n+    public static final String PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS = \"notificationtasks.paginator.rows\";\n \n-    public static final String PREF_SCHED_TASKS_PAGINATOR_ROWS =\n-            \"schedtasks.paginator.rows\";\n+    public static final String PREF_SCHED_TASKS_PAGINATOR_ROWS = \"schedtasks.paginator.rows\";\n \n-    public static final String PREF_SYNC_TASKS_PAGINATOR_ROWS =\n-            \"synctasks.paginator.rows\";\n+    public static final String PREF_SYNC_TASKS_PAGINATOR_ROWS = \"synctasks.paginator.rows\";\n \n-    public static final String PREF_APPROVAL_PAGINATOR_ROWS =\n-            \"approval.paginator.rows\";\n+    public static final String PREF_APPROVAL_PAGINATOR_ROWS = \"approval.paginator.rows\";\n \n-    public static final String PREF_USER_REQUEST_PAGINATOR_ROWS =\n-            \"userRequest.paginator.rows\";\n+    public static final String PREF_USER_REQUEST_PAGINATOR_ROWS = \"userRequest.paginator.rows\";\n \n-    public static final String PREF_REPORT_PAGINATOR_ROWS =\n-            \"report.paginator.rows\";\n+    public static final String PREF_REPORT_PAGINATOR_ROWS = \"report.paginator.rows\";\n \n     public static final String PAGEPARAM_CREATE = \"CREATE\";\n \n@@ -108,14 +83,13 @@ public final class Constants {\n \n     public static final String ENGLISH_DATE_FORMAT = \"MM/dd/yyyy HH:mm:ss\";\n \n-    public static final String[] SCHEMA_FIELDS = {\"name\", \"type\"};\n+    public static final String[] SCHEMA_FIELDS = { \"name\", \"type\" };\n \n-    public static final String[] VIRTUAL_SCHEMA_FIELDS = {\"name\"};\n+    public static final String[] VIRTUAL_SCHEMA_FIELDS = { \"name\" };\n \n-    public static final String[] DERIVED_SCHEMA_FIELDS = {\"name\", \"expression\"};\n+    public static final String[] DERIVED_SCHEMA_FIELDS = { \"name\", \"expression\" };\n \n-    public static final String PREF_POLICY_PAGINATOR_ROWS =\n-            \"policy.paginator.rows\";\n+    public static final String PREF_POLICY_PAGINATOR_ROWS = \"policy.paginator.rows\";\n \n     private Constants() {\n     }"},{"sha":"39967c6bfe58c75c6407476ea2d18000ef17ae5e","filename":"console/src/main/java/org/syncope/console/commons/DateFormatROModel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FDateFormatROModel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FDateFormatROModel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FDateFormatROModel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -36,8 +36,8 @@ public DateFormatROModel(final PropertyModel model) {\n     @Override\n     public String getObject() {\n         return model.getObject() == null\n-                ? \"\" : SyncopeSession.get().getDateFormat().\n-                format((Date) model.getObject());\n+                ? \"\"\n+                : SyncopeSession.get().getDateFormat().format((Date) model.getObject());\n     }\n \n     @Override"},{"sha":"6d221ff56583d3ad9e79bd1b9c093896bf89f533","filename":"console/src/main/java/org/syncope/console/commons/HttpResourceStream.java","status":"modified","additions":13,"deletions":20,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FHttpResourceStream.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FHttpResourceStream.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FHttpResourceStream.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -40,13 +40,11 @@\n import org.springframework.web.client.RestTemplate;\n import org.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n \n-public class HttpResourceStream extends AbstractResourceStream\n-        implements IFixedLocationResourceStream {\n+public class HttpResourceStream extends AbstractResourceStream implements IFixedLocationResourceStream {\n \n     private static final long serialVersionUID = 5811207817876330189L;\n \n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(HttpResourceStream.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(HttpResourceStream.class);\n \n     private final URI uri;\n \n@@ -58,8 +56,7 @@ public class HttpResourceStream extends AbstractResourceStream\n \n     private transient String filename;\n \n-    public HttpResourceStream(final String uri, final RestTemplate restTemplate)\n-            throws URISyntaxException {\n+    public HttpResourceStream(final String uri, final RestTemplate restTemplate) throws URISyntaxException {\n \n         this.uri = new URI(Args.notNull(uri, \"uri\"));\n         this.restTemplate = Args.notNull(restTemplate, \"restTemplate\");\n@@ -72,9 +69,8 @@ private HttpResponse buildFakeResponse(final String errorMessage) {\n         entity.setContentLength(0);\n         entity.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n \n-        BasicHttpResponse response = new BasicHttpResponse(\n-                new ProtocolVersion(\"HTTP\", 1, 1), 400,\n-                \"Exception: \" + errorMessage);\n+        BasicHttpResponse response = new BasicHttpResponse(new ProtocolVersion(\"HTTP\", 1, 1), 400, \"Exception: \"\n+                + errorMessage);\n         response.setEntity(entity);\n \n         response.addHeader(\"Content-Disposition\", \"attachment; filename=error\");\n@@ -90,17 +86,15 @@ private void execute() {\n         HttpGet getMethod = new HttpGet(this.uri);\n         HttpResponse response;\n         try {\n-            response = ((PreemptiveAuthHttpRequestFactory) restTemplate.\n-                    getRequestFactory()).getHttpClient().execute(getMethod);\n+            response = ((PreemptiveAuthHttpRequestFactory) restTemplate.getRequestFactory()).getHttpClient().execute(\n+                    getMethod);\n         } catch (Exception e) {\n-            LOG.error(\"Unexpected exception while executing HTTP method to {}\",\n-                    this.uri, e);\n+            LOG.error(\"Unexpected exception while executing HTTP method to {}\", this.uri, e);\n             response = buildFakeResponse(e.getMessage());\n         }\n         if (response.getStatusLine().getStatusCode() != 200) {\n             LOG.error(\"Unsuccessful HTTP method to {}\", this.uri);\n-            response = buildFakeResponse(\"HTTP status \"\n-                    + response.getStatusLine().getStatusCode());\n+            response = buildFakeResponse(\"HTTP status \" + response.getStatusLine().getStatusCode());\n         }\n \n         responseEntity = response.getEntity();\n@@ -120,8 +114,7 @@ private void execute() {\n     }\n \n     @Override\n-    public InputStream getInputStream()\n-            throws ResourceStreamNotFoundException {\n+    public InputStream getInputStream() throws ResourceStreamNotFoundException {\n \n         try {\n             execute();\n@@ -132,8 +125,7 @@ public InputStream getInputStream()\n     }\n \n     @Override\n-    public void close()\n-            throws IOException {\n+    public void close() throws IOException {\n         // Nothing needed here, because we are using HttpComponents HttpClient\n     }\n \n@@ -147,7 +139,8 @@ public String getContentType() {\n         execute();\n \n         return contentType == null\n-                ? MediaType.APPLICATION_OCTET_STREAM_VALUE : contentType;\n+                ? MediaType.APPLICATION_OCTET_STREAM_VALUE\n+                : contentType;\n     }\n \n     public String getFilename() {"},{"sha":"4227ff092b60ddc4b3acd5cb2da5cb8f650ccbae","filename":"console/src/main/java/org/syncope/console/commons/PreferenceManager.java","status":"modified","additions":20,"deletions":39,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -44,17 +44,14 @@ public class PreferenceManager {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            PreferenceManager.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(PreferenceManager.class);\n \n     private static final int ONE_YEAR_TIME = 60 * 60 * 24 * 365;\n \n-    private static final TypeReference MAP_TYPE_REF =\n-            new TypeReference<Map<String, String>>() {\n-            };\n+    private static final TypeReference MAP_TYPE_REF = new TypeReference<Map<String, String>>() {\n+    };\n \n-    private static final List<Integer> PAGINATOR_CHOICES =\n-            Arrays.asList(new Integer[]{10, 25, 50});\n+    private static final List<Integer> PAGINATOR_CHOICES = Arrays.asList(new Integer[] { 10, 25, 50 });\n \n     @Autowired\n     private ObjectMapper mapper;\n@@ -83,8 +80,7 @@ private Map<String, String> getPrefs(final String value) {\n         return prefs;\n     }\n \n-    private String setPrefs(final Map<String, String> prefs)\n-            throws IOException {\n+    private String setPrefs(final Map<String, String> prefs) throws IOException {\n \n         StringWriter writer = new StringWriter();\n         mapper.writeValue(writer, prefs);\n@@ -95,13 +91,11 @@ private String setPrefs(final Map<String, String> prefs)\n     public String get(final Request request, final String key) {\n         String result = null;\n \n-        Cookie prefCookie = ((WebRequest) request).getCookie(\n-                Constants.PREFS_COOKIE_NAME);\n+        Cookie prefCookie = ((WebRequest) request).getCookie(Constants.PREFS_COOKIE_NAME);\n \n         if (prefCookie != null) {\n \n-            final Map<String, String> prefs = getPrefs(new String(\n-                    Base64.decodeBase64(prefCookie.getValue().getBytes())));\n+            final Map<String, String> prefs = getPrefs(new String(Base64.decodeBase64(prefCookie.getValue().getBytes())));\n \n             result = prefs.get(key);\n \n@@ -112,8 +106,7 @@ public String get(final Request request, final String key) {\n         return result;\n     }\n \n-    public Integer getPaginatorRows(final Request request,\n-            final String key) {\n+    public Integer getPaginatorRows(final Request request, final String key) {\n \n         Integer result = getPaginatorChoices().get(0);\n \n@@ -143,30 +136,25 @@ public List<String> getList(final Request request, final String key) {\n         return result;\n     }\n \n-    public void set(final Request request, final Response response,\n-            final Map<String, List<String>> prefs) {\n+    public void set(final Request request, final Response response, final Map<String, List<String>> prefs) {\n \n-        Cookie prefCookie =\n-                ((WebRequest) request).getCookie(Constants.PREFS_COOKIE_NAME);\n+        Cookie prefCookie = ((WebRequest) request).getCookie(Constants.PREFS_COOKIE_NAME);\n \n         final Map<String, String> current = new HashMap<String, String>();\n \n         if (prefCookie == null || !StringUtils.hasText(prefCookie.getValue())) {\n             prefCookie = new Cookie(Constants.PREFS_COOKIE_NAME, null);\n         } else {\n-            current.putAll(getPrefs(new String(Base64.decodeBase64(\n-                    prefCookie.getValue().getBytes()))));\n+            current.putAll(getPrefs(new String(Base64.decodeBase64(prefCookie.getValue().getBytes()))));\n         }\n \n         // after retrieved previous setting in order to overwrite the key ...\n         for (Entry<String, List<String>> entry : prefs.entrySet()) {\n-            current.put(entry.getKey(), StringUtils.collectionToDelimitedString(\n-                    entry.getValue(), \";\"));\n+            current.put(entry.getKey(), StringUtils.collectionToDelimitedString(entry.getValue(), \";\"));\n         }\n \n         try {\n-            prefCookie.setValue(new String(\n-                    Base64.encodeBase64(setPrefs(current).getBytes())));\n+            prefCookie.setValue(new String(Base64.encodeBase64(setPrefs(current).getBytes())));\n         } catch (IOException e) {\n             LOG.error(\"Could not set preferences \" + current, e);\n         }\n@@ -175,27 +163,23 @@ public void set(final Request request, final Response response,\n         ((WebResponse) response).addCookie(prefCookie);\n     }\n \n-    public void set(final Request request, final Response response,\n-            final String key, final String value) {\n+    public void set(final Request request, final Response response, final String key, final String value) {\n \n-        Cookie prefCookie =\n-                ((WebRequest) request).getCookie(Constants.PREFS_COOKIE_NAME);\n+        Cookie prefCookie = ((WebRequest) request).getCookie(Constants.PREFS_COOKIE_NAME);\n \n         final Map<String, String> prefs = new HashMap<String, String>();\n \n         if (prefCookie == null || !StringUtils.hasText(prefCookie.getValue())) {\n             prefCookie = new Cookie(Constants.PREFS_COOKIE_NAME, null);\n         } else {\n-            prefs.putAll(getPrefs(new String(Base64.decodeBase64(\n-                    prefCookie.getValue().getBytes()))));\n+            prefs.putAll(getPrefs(new String(Base64.decodeBase64(prefCookie.getValue().getBytes()))));\n         }\n \n         // after retrieved previous setting in order to overwrite the key ...\n         prefs.put(key, value);\n \n         try {\n-            prefCookie.setValue(new String(\n-                    Base64.encodeBase64(setPrefs(prefs).getBytes())));\n+            prefCookie.setValue(new String(Base64.encodeBase64(setPrefs(prefs).getBytes())));\n         } catch (IOException e) {\n             LOG.error(\"Could not set preferences \" + prefs, e);\n         }\n@@ -204,15 +188,12 @@ public void set(final Request request, final Response response,\n         ((WebResponse) response).addCookie(prefCookie);\n     }\n \n-    public void setList(final Request request, final Response response,\n-            final String key, final List<String> values) {\n+    public void setList(final Request request, final Response response, final String key, final List<String> values) {\n \n-        set(request, response,\n-                key, StringUtils.collectionToDelimitedString(values, \";\"));\n+        set(request, response, key, StringUtils.collectionToDelimitedString(values, \";\"));\n     }\n \n-    public void setList(final Request request, final Response response,\n-            final Map<String, List<String>> prefs) {\n+    public void setList(final Request request, final Response response, final Map<String, List<String>> prefs) {\n \n         set(request, response, prefs);\n     }"},{"sha":"32e8e79f1efff87f00c7f13429b9d977018fed2a","filename":"console/src/main/java/org/syncope/console/commons/RoleTreeBuilder.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FRoleTreeBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FRoleTreeBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FRoleTreeBuilder.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -37,8 +37,7 @@ public class RoleTreeBuilder {\n \n     private RoleTOComparator comparator = new RoleTOComparator();\n \n-    private List<RoleTO> getChildRoles(final long parentRoleId,\n-            final List<RoleTO> roles) {\n+    private List<RoleTO> getChildRoles(final long parentRoleId, final List<RoleTO> roles) {\n \n         List<RoleTO> result = new ArrayList<RoleTO>();\n         for (RoleTO role : roles) {\n@@ -51,8 +50,7 @@ private List<RoleTO> getChildRoles(final long parentRoleId,\n         return result;\n     }\n \n-    private void populateSubtree(final DefaultMutableTreeNode subRoot,\n-            final List<RoleTO> roles) {\n+    private void populateSubtree(final DefaultMutableTreeNode subRoot, final List<RoleTO> roles) {\n \n         RoleTO role = (RoleTO) subRoot.getUserObject();\n \n@@ -69,16 +67,14 @@ public TreeModel build() {\n     }\n \n     public TreeModel build(final List<RoleTO> roles) {\n-        DefaultMutableTreeNode fakeroot =\n-                new DefaultMutableTreeNode(new FakeRootRoleTO());\n+        DefaultMutableTreeNode fakeroot = new DefaultMutableTreeNode(new FakeRootRoleTO());\n \n         populateSubtree(fakeroot, roles);\n \n         return new DefaultTreeModel(fakeroot);\n     }\n \n-    private static class RoleTOComparator\n-            implements Comparator<RoleTO>, Serializable {\n+    private static class RoleTOComparator implements Comparator<RoleTO>, Serializable {\n \n         private static final long serialVersionUID = 7085057398406518811L;\n "},{"sha":"27a9ec46908e84e11697bacc3ebe0accafda97e0","filename":"console/src/main/java/org/syncope/console/commons/SchemaModalPageFactory.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -45,8 +45,7 @@ public enum SchemaType {\n \n     };\n \n-    public static AbstractSchemaModalPage getSchemaModalPage(\n-            AttributableType entity, SchemaType schemaType) {\n+    public static AbstractSchemaModalPage getSchemaModalPage(AttributableType entity, SchemaType schemaType) {\n \n         AbstractSchemaModalPage page;\n "},{"sha":"24943cffd32512183754540d9799e2149057e0a7","filename":"console/src/main/java/org/syncope/console/commons/SearchCondWrapper.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchCondWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchCondWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSearchCondWrapper.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -108,7 +108,6 @@ public void setFilterValue(String filterValue) {\n \n     @Override\n     public String toString() {\n-        return ReflectionToStringBuilder.toString(this,\n-                ToStringStyle.MULTI_LINE_STYLE);\n+        return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);\n     }\n }"},{"sha":"f1875f906b9aa2ceab3abf12d00c7864b6731b0c","filename":"console/src/main/java/org/syncope/console/commons/SelectOption.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSelectOption.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSelectOption.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSelectOption.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -56,8 +56,7 @@ public boolean equals(final Object obj) {\n             return false;\n         }\n \n-        return (keyValue == null && ((SelectOption) obj).keyValue == null)\n-                || keyValue != null\n+        return (keyValue == null && ((SelectOption) obj).keyValue == null) || keyValue != null\n                 && keyValue.equals(((SelectOption) obj).keyValue);\n     }\n "},{"sha":"d81546cbe0c825f9714fd460e1f43a6b22af5420","filename":"console/src/main/java/org/syncope/console/commons/SortableDataProviderComparator.java","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableDataProviderComparator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -24,21 +24,18 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.PropertyModel;\n \n-public class SortableDataProviderComparator<T> implements\n-        Comparator<T>, Serializable {\n+public class SortableDataProviderComparator<T> implements Comparator<T>, Serializable {\n \n     private static final long serialVersionUID = -8897687699977460543L;\n \n     protected final SortableDataProvider<T> provider;\n \n-    public SortableDataProviderComparator(\n-            final SortableDataProvider<T> provider) {\n+    public SortableDataProviderComparator(final SortableDataProvider<T> provider) {\n \n         this.provider = provider;\n     }\n \n-    protected int compare(final IModel<Comparable> model1,\n-            IModel<Comparable> model2) {\n+    protected int compare(final IModel<Comparable> model1, IModel<Comparable> model2) {\n \n         int result;\n \n@@ -52,17 +49,17 @@ protected int compare(final IModel<Comparable> model1,\n             result = model1.getObject().compareTo(model2.getObject());\n         }\n \n-        result = provider.getSort().isAscending() ? result : -result;\n+        result = provider.getSort().isAscending()\n+                ? result\n+                : -result;\n \n         return result;\n     }\n \n     @Override\n     public int compare(final T o1, final T o2) {\n-        IModel<Comparable> model1 = new PropertyModel<Comparable>(\n-                o1, provider.getSort().getProperty());\n-        IModel<Comparable> model2 = new PropertyModel<Comparable>(\n-                o2, provider.getSort().getProperty());\n+        IModel<Comparable> model1 = new PropertyModel<Comparable>(o1, provider.getSort().getProperty());\n+        IModel<Comparable> model2 = new PropertyModel<Comparable>(o2, provider.getSort().getProperty());\n \n         return compare(model1, model2);\n     }"},{"sha":"1e1f7e8f339f3be602aa23da3feb6df5db3c0a97","filename":"console/src/main/java/org/syncope/console/commons/SortableUserProviderComparator.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableUserProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableUserProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSortableUserProviderComparator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -27,8 +27,7 @@\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.UserTO;\n \n-public class SortableUserProviderComparator\n-        extends SortableDataProviderComparator<UserTO> {\n+public class SortableUserProviderComparator extends SortableDataProviderComparator<UserTO> {\n \n     private static final Set<String> inlineProps;\n \n@@ -39,8 +38,7 @@\n         inlineProps.add(\"token\");\n     }\n \n-    public SortableUserProviderComparator(\n-            final SortableDataProvider<UserTO> provider) {\n+    public SortableUserProviderComparator(final SortableDataProvider<UserTO> provider) {\n \n         super(provider);\n     }\n@@ -51,8 +49,7 @@ public int compare(final UserTO o1, final UserTO o2) {\n             return super.compare(o1, o2);\n         }\n \n-        return super.compare(new AttrModel(o1.getAttributeMap()),\n-                new AttrModel(o2.getAttributeMap()));\n+        return super.compare(new AttrModel(o1.getAttributeMap()), new AttrModel(o2.getAttributeMap()));\n     }\n \n     private class AttrModel extends AbstractReadOnlyModel<Comparable> {\n@@ -69,8 +66,7 @@ public AttrModel(final Map<String, AttributeTO> attrMap) {\n         public Comparable getObject() {\n             Comparable result = null;\n \n-            List<String> values = attrMap.get(\n-                    provider.getSort().getProperty()).getValues();\n+            List<String> values = attrMap.get(provider.getSort().getProperty()).getValues();\n             if (values != null && !values.isEmpty()) {\n                 result = values.iterator().next();\n             }"},{"sha":"d1ac925b79b8c83ccac36feb00772b90373fe6a2","filename":"console/src/main/java/org/syncope/console/commons/StatusUtils.java","status":"modified","additions":29,"deletions":32,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FStatusUtils.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -40,8 +40,7 @@ public class StatusUtils {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(StatusUtils.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(StatusUtils.class);\n \n     @Autowired\n     private UserRestClient userRestClient;\n@@ -72,7 +71,9 @@ public List<StatusBean> getRemoteStatuses(final UserTO userTO) {\n \n             String objectId = null;\n \n-            switch (accountId != null ? accountId.getKey() : IntMappingType.SyncopeUserId) {\n+            switch (accountId != null\n+                    ? accountId.getKey()\n+                    : IntMappingType.SyncopeUserId) {\n \n                 case SyncopeUserId:\n                     objectId = String.valueOf(userTO.getId());\n@@ -82,29 +83,24 @@ public List<StatusBean> getRemoteStatuses(final UserTO userTO) {\n                     break;\n                 case UserSchema:\n                     AttributeTO attributeTO = userTO.getAttributeMap().get(accountId.getValue());\n-                    objectId =\n-                            attributeTO != null\n-                            && attributeTO.getValues() != null\n+                    objectId = attributeTO != null && attributeTO.getValues() != null\n                             && !attributeTO.getValues().isEmpty()\n-                            ? attributeTO.getValues().get(0) : null;\n+                            ? attributeTO.getValues().get(0)\n+                            : null;\n                     break;\n                 case UserDerivedSchema:\n-                    attributeTO = userTO.getDerivedAttributeMap().\n-                            get(accountId.getValue());\n-                    objectId =\n-                            attributeTO != null\n-                            && attributeTO.getValues() != null\n+                    attributeTO = userTO.getDerivedAttributeMap().get(accountId.getValue());\n+                    objectId = attributeTO != null && attributeTO.getValues() != null\n                             && !attributeTO.getValues().isEmpty()\n-                            ? attributeTO.getValues().get(0) : null;\n+                            ? attributeTO.getValues().get(0)\n+                            : null;\n                     break;\n                 case UserVirtualSchema:\n-                    attributeTO = userTO.getVirtualAttributeMap().\n-                            get(accountId.getValue());\n-                    objectId =\n-                            attributeTO != null\n-                            && attributeTO.getValues() != null\n+                    attributeTO = userTO.getVirtualAttributeMap().get(accountId.getValue());\n+                    objectId = attributeTO != null && attributeTO.getValues() != null\n                             && !attributeTO.getValues().isEmpty()\n-                            ? attributeTO.getValues().get(0) : null;\n+                            ? attributeTO.getValues().get(0)\n+                            : null;\n                     break;\n                 default:\n             }\n@@ -125,8 +121,7 @@ public List<StatusBean> getRemoteStatuses(final UserTO userTO) {\n         return statuses;\n     }\n \n-    public StatusBean getRemoteStatus(\n-            final ConnObjectTO objectTO) {\n+    public StatusBean getRemoteStatus(final ConnObjectTO objectTO) {\n \n         final StatusBean statusBean = new StatusBean();\n \n@@ -136,8 +131,8 @@ public StatusBean getRemoteStatus(\n             final StatusUtils.Status status = enabled == null\n                     ? StatusUtils.Status.UNDEFINED\n                     : enabled\n-                    ? StatusUtils.Status.ACTIVE\n-                    : StatusUtils.Status.SUSPENDED;\n+                            ? StatusUtils.Status.ACTIVE\n+                            : StatusUtils.Status.SUSPENDED;\n \n             final String accountLink = getAccountLink(objectTO);\n \n@@ -155,30 +150,32 @@ public Boolean isEnabled(final ConnObjectTO objectTO) {\n \n         final AttributeTO status = attributeTOs.get(STATUSATTR);\n \n-        return status != null && status.getValues() != null\n-                && !status.getValues().isEmpty() ? Boolean.parseBoolean(status.getValues().get(0)) : null;\n+        return status != null && status.getValues() != null && !status.getValues().isEmpty()\n+                ? Boolean.parseBoolean(status.getValues().get(0))\n+                : null;\n     }\n \n     public String getAccountLink(final ConnObjectTO objectTO) {\n         final String NAME = \"__NAME__\";\n \n         final Map<String, AttributeTO> attributeTOs = objectTO != null\n-                ? objectTO.getAttributeMap() : Collections.EMPTY_MAP;\n+                ? objectTO.getAttributeMap()\n+                : Collections.EMPTY_MAP;\n \n         final AttributeTO name = attributeTOs.get(NAME);\n \n-        return name != null && name.getValues() != null\n-                && !name.getValues().isEmpty() ? (String) name.getValues().get(0) : null;\n+        return name != null && name.getValues() != null && !name.getValues().isEmpty()\n+                ? (String) name.getValues().get(0)\n+                : null;\n     }\n \n-    public Map.Entry<IntMappingType, String> getAccountId(\n-            final ResourceTO resourceTO) {\n+    public Map.Entry<IntMappingType, String> getAccountId(final ResourceTO resourceTO) {\n         Map.Entry<IntMappingType, String> accountId = null;\n \n         for (SchemaMappingTO mapping : resourceTO.getMappings()) {\n             if (mapping.isAccountid()) {\n-                accountId = new AbstractMap.SimpleEntry<IntMappingType, String>(\n-                        mapping.getIntMappingType(), mapping.getIntAttrName());\n+                accountId = new AbstractMap.SimpleEntry<IntMappingType, String>(mapping.getIntMappingType(), mapping\n+                        .getIntAttrName());\n             }\n         }\n "},{"sha":"8270ccdc42629bf2ec9f020500020e57bbd8bda0","filename":"console/src/main/java/org/syncope/console/commons/UserDataProvider.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FUserDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FUserDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FUserDataProvider.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -43,10 +43,7 @@ public class UserDataProvider extends SortableDataProvider<UserTO> {\n \n     private UserRestClient restClient;\n \n-    public UserDataProvider(\n-            final UserRestClient restClient,\n-            final int paginatorRows,\n-            final boolean filtered) {\n+    public UserDataProvider(final UserRestClient restClient, final int paginatorRows, final boolean filtered) {\n \n         super();\n \n@@ -71,8 +68,7 @@ public Iterator<UserTO> iterator(final int first, final int count) {\n         if (filtered) {\n             users = filter == null\n                     ? Collections.EMPTY_LIST\n-                    : restClient.search(filter, (first / paginatorRows) + 1,\n-                    paginatorRows);\n+                    : restClient.search(filter, (first / paginatorRows) + 1, paginatorRows);\n         } else {\n             users = restClient.list((first / paginatorRows) + 1, paginatorRows);\n         }\n@@ -84,7 +80,9 @@ public Iterator<UserTO> iterator(final int first, final int count) {\n     @Override\n     public int size() {\n         if (filtered) {\n-            return filter == null ? 0 : restClient.searchCount(filter);\n+            return filter == null\n+                    ? 0\n+                    : restClient.searchCount(filter);\n         } else {\n             return restClient.count();\n         }"},{"sha":"82bc0121d62aabd1867d1df3267ea5bd22ba4009","filename":"console/src/main/java/org/syncope/console/commons/XMLRolesReader.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -39,8 +39,7 @@ public class XMLRolesReader {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            XMLRolesReader.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(XMLRolesReader.class);\n \n     @Autowired\n     private String authorizations;\n@@ -52,8 +51,7 @@ public void init() {\n         dbf.setNamespaceAware(true);\n         try {\n             DocumentBuilder db = dbf.newDocumentBuilder();\n-            doc = db.parse(getClass().getResource(\"/\" + authorizations).\n-                    openStream());\n+            doc = db.parse(getClass().getResource(\"/\" + authorizations).openStream());\n             doc.getDocumentElement().normalize();\n         } catch (Exception e) {\n             LOG.error(\"While initializing parsing of {}\", authorizations, e);\n@@ -68,8 +66,7 @@ public void init() {\n      * @param actionId\n      * @return roles list comma separated\n      */\n-    public String getAllAllowedRoles(final String pageId,\n-            final String actionId) {\n+    public String getAllAllowedRoles(final String pageId, final String actionId) {\n \n         if (doc == null) {\n             init();\n@@ -82,9 +79,7 @@ public String getAllAllowedRoles(final String pageId,\n         try {\n             XPathFactory factory = XPathFactory.newInstance();\n             XPath xpath = factory.newXPath();\n-            XPathExpression expr = xpath.compile(\n-                    \"//page[@id='\" + pageId + \"']/\"\n-                    + \"action[@id='\" + actionId + \"']/\"\n+            XPathExpression expr = xpath.compile(\"//page[@id='\" + pageId + \"']/\" + \"action[@id='\" + actionId + \"']/\"\n                     + \"entitlement/text()\");\n             Object result = expr.evaluate(doc, XPathConstants.NODESET);\n "},{"sha":"a6e4a1ad3a2c0bf1bc7e0e1216f7af6ea307077e","filename":"console/src/main/java/org/syncope/console/markup/html/CrontabContainer.java","status":"modified","additions":50,"deletions":93,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fmarkup%2Fhtml%2FCrontabContainer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fmarkup%2Fhtml%2FCrontabContainer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fmarkup%2Fhtml%2FCrontabContainer.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -38,23 +38,14 @@ public class CrontabContainer extends WebMarkupContainer {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            CrontabContainer.class);\n-\n-    private static final SelectOption[] CRON_TEMPLATES = new SelectOption[]{\n-        new SelectOption(\n-        \"Unschedule\", \"UNSCHEDULE\"),\n-        new SelectOption(\n-        \"Every 5 minutes\", \"0 0/5 * * * ?\"),\n-        new SelectOption(\n-        \"Fire at 12pm (noon) every day\", \"0 0 12 * * ?\"),\n-        new SelectOption(\n-        \"Fire at 12am (midnight) every first day of the month\", \"0 0 0 1 * ?\"),\n-        new SelectOption(\n-        \"Fire at 12am (midnight) every last day of the month\", \"0 0 0 L * ?\"),\n-        new SelectOption(\n-        \"Fire at 12am (midnight) every Monday\", \"0 0 0 ? * 2\")\n-    };\n+    protected static final Logger LOG = LoggerFactory.getLogger(CrontabContainer.class);\n+\n+    private static final SelectOption[] CRON_TEMPLATES = new SelectOption[] {\n+            new SelectOption(\"Unschedule\", \"UNSCHEDULE\"), new SelectOption(\"Every 5 minutes\", \"0 0/5 * * * ?\"),\n+            new SelectOption(\"Fire at 12pm (noon) every day\", \"0 0 12 * * ?\"),\n+            new SelectOption(\"Fire at 12am (midnight) every first day of the month\", \"0 0 0 1 * ?\"),\n+            new SelectOption(\"Fire at 12am (midnight) every last day of the month\", \"0 0 0 L * ?\"),\n+            new SelectOption(\"Fire at 12am (midnight) every Monday\", \"0 0 0 ? * 2\") };\n \n     private static final long serialVersionUID = 7879593326085337650L;\n \n@@ -70,28 +61,22 @@ public class CrontabContainer extends WebMarkupContainer {\n \n     private final TextField daysOfWeek;\n \n-    public CrontabContainer(final String id,\n-            final PropertyModel<String> cronExpressionModel,\n+    public CrontabContainer(final String id, final PropertyModel<String> cronExpressionModel,\n             final String cronExpression) {\n \n         super(id);\n         setOutputMarkupId(true);\n \n-        final DropDownChoice<SelectOption> cronTemplateChooser =\n-                new DropDownChoice(\"cronTemplateChooser\") {\n+        final DropDownChoice<SelectOption> cronTemplateChooser = new DropDownChoice(\"cronTemplateChooser\") {\n \n-                    private static final long serialVersionUID =\n-                            -5843424545478691442L;\n+            private static final long serialVersionUID = -5843424545478691442L;\n \n-                    @Override\n-                    protected CharSequence getDefaultChoice(\n-                            final String selected) {\n+            @Override\n+            protected CharSequence getDefaultChoice(final String selected) {\n \n-                        return \"<option value=\\\"\\\">\"\n-                                + getString(\"chooseForTemplate\")\n-                                + \"</option>\";\n-                    }\n-                };\n+                return \"<option value=\\\"\\\">\" + getString(\"chooseForTemplate\") + \"</option>\";\n+            }\n+        };\n         cronTemplateChooser.setModel(new IModel<SelectOption>() {\n \n             private static final long serialVersionUID = 6762568283146531315L;\n@@ -100,8 +85,7 @@ protected CharSequence getDefaultChoice(\n             public SelectOption getObject() {\n                 SelectOption result = null;\n                 for (SelectOption so : CRON_TEMPLATES) {\n-                    if (so.getKeyValue().equals(\n-                            cronExpressionModel.getObject())) {\n+                    if (so.getKeyValue().equals(cronExpressionModel.getObject())) {\n \n                         result = so;\n                     }\n@@ -112,9 +96,9 @@ public SelectOption getObject() {\n \n             @Override\n             public void setObject(final SelectOption object) {\n-                cronExpressionModel.setObject(\n-                        object == null || object.equals(CRON_TEMPLATES[0])\n-                        ? null : object.toString());\n+                cronExpressionModel.setObject(object == null || object.equals(CRON_TEMPLATES[0])\n+                        ? null\n+                        : object.toString());\n             }\n \n             @Override\n@@ -125,57 +109,42 @@ public void detach() {\n         cronTemplateChooser.setChoiceRenderer(new SelectChoiceRenderer());\n         add(cronTemplateChooser);\n \n-        seconds = new TextField(\"seconds\",\n-                new Model(getCronField(cronExpression, 0)));\n+        seconds = new TextField(\"seconds\", new Model(getCronField(cronExpression, 0)));\n         add(seconds);\n \n-        minutes = new TextField(\"minutes\",\n-                new Model(getCronField(cronExpression, 1)));\n+        minutes = new TextField(\"minutes\", new Model(getCronField(cronExpression, 1)));\n         add(minutes);\n \n-        hours = new TextField(\"hours\",\n-                new Model(getCronField(cronExpression, 2)));\n+        hours = new TextField(\"hours\", new Model(getCronField(cronExpression, 2)));\n         add(hours);\n \n-        daysOfMonth = new TextField(\"daysOfMonth\",\n-                new Model(getCronField(cronExpression, 3)));\n+        daysOfMonth = new TextField(\"daysOfMonth\", new Model(getCronField(cronExpression, 3)));\n         add(daysOfMonth);\n \n-        months = new TextField(\"months\",\n-                new Model(getCronField(cronExpression, 4)));\n+        months = new TextField(\"months\", new Model(getCronField(cronExpression, 4)));\n         add(months);\n \n-        daysOfWeek = new TextField(\"daysOfWeek\",\n-                new Model(getCronField(cronExpression, 5)));\n+        daysOfWeek = new TextField(\"daysOfWeek\", new Model(getCronField(cronExpression, 5)));\n         add(daysOfWeek);\n \n-        cronTemplateChooser.add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                    private static final long serialVersionUID =\n-                            -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        seconds.setModelObject(\n-                                getCronField(cronTemplateChooser, 0));\n-                        minutes.setModelObject(\n-                                getCronField(cronTemplateChooser, 1));\n-                        hours.setModelObject(\n-                                getCronField(cronTemplateChooser, 2));\n-                        daysOfMonth.setModelObject(\n-                                getCronField(cronTemplateChooser, 3));\n-                        months.setModelObject(\n-                                getCronField(cronTemplateChooser, 4));\n-                        daysOfWeek.setModelObject(\n-                                getCronField(cronTemplateChooser, 5));\n-                        target.add(CrontabContainer.this);\n-                    }\n-                });\n+        cronTemplateChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                seconds.setModelObject(getCronField(cronTemplateChooser, 0));\n+                minutes.setModelObject(getCronField(cronTemplateChooser, 1));\n+                hours.setModelObject(getCronField(cronTemplateChooser, 2));\n+                daysOfMonth.setModelObject(getCronField(cronTemplateChooser, 3));\n+                months.setModelObject(getCronField(cronTemplateChooser, 4));\n+                daysOfWeek.setModelObject(getCronField(cronTemplateChooser, 5));\n+                target.add(CrontabContainer.this);\n+            }\n+        });\n     }\n \n-    private String getCronField(final FormComponent formComponent,\n-            final int field) {\n+    private String getCronField(final FormComponent formComponent, final int field) {\n \n         String cronField = null;\n \n@@ -199,26 +168,14 @@ private String getCronField(final String cron, final int field) {\n     public String getCronExpression() {\n         String cronExpression = null;\n \n-        if (seconds != null && seconds.getInput() != null\n-                && minutes != null && minutes.getInput() != null\n-                && hours != null && hours.getInput() != null\n-                && daysOfMonth != null && daysOfMonth.getInput() != null\n-                && months != null && months.getInput() != null\n-                && daysOfWeek != null && daysOfWeek.getInput() != null) {\n-\n-            cronExpression = new StringBuilder().append(\n-                    seconds.getInput().trim()).\n-                    append(\" \").\n-                    append(minutes.getInput().trim()).\n-                    append(\" \").\n-                    append(hours.getInput().trim()).\n-                    append(\" \").\n-                    append(daysOfMonth.getInput().trim()).\n-                    append(\" \").\n-                    append(months.getInput().trim()).\n-                    append(\" \").\n-                    append(daysOfWeek.getInput().trim()).\n-                    toString();\n+        if (seconds != null && seconds.getInput() != null && minutes != null && minutes.getInput() != null\n+                && hours != null && hours.getInput() != null && daysOfMonth != null && daysOfMonth.getInput() != null\n+                && months != null && months.getInput() != null && daysOfWeek != null && daysOfWeek.getInput() != null) {\n+\n+            cronExpression = new StringBuilder().append(seconds.getInput().trim()).append(\" \").append(\n+                    minutes.getInput().trim()).append(\" \").append(hours.getInput().trim()).append(\" \").append(\n+                    daysOfMonth.getInput().trim()).append(\" \").append(months.getInput().trim()).append(\" \").append(\n+                    daysOfWeek.getInput().trim()).toString();\n         }\n \n         return cronExpression;"},{"sha":"9e2e498d2d264b5c7d0062072d51bd79725b699a","filename":"console/src/main/java/org/syncope/console/pages/AbstractSchedTaskModalPage.java","status":"modified","additions":13,"deletions":21,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -43,16 +43,13 @@ public abstract class AbstractSchedTaskModalPage extends TaskModalPage {\n \n     protected CrontabContainer crontab;\n \n-    public AbstractSchedTaskModalPage(\n-            final ModalWindow window,\n-            final SchedTaskTO taskTO,\n+    public AbstractSchedTaskModalPage(final ModalWindow window, final SchedTaskTO taskTO,\n             final PageReference callerPageRef) {\n \n         super(taskTO);\n \n-        crontab = new CrontabContainer(\"crontab\",\n-                new PropertyModel<String>(taskTO, \"cronExpression\"),\n-                taskTO.getCronExpression());\n+        crontab = new CrontabContainer(\"crontab\", new PropertyModel<String>(taskTO, \"cronExpression\"), taskTO\n+                .getCronExpression());\n         form.add(crontab);\n \n         final AjaxTextFieldPanel lastExec = new AjaxTextFieldPanel(\"lastExec\", getString(\"lastExec\"),\n@@ -65,20 +62,17 @@ public AbstractSchedTaskModalPage(\n         nextExec.setEnabled(false);\n         profile.add(nextExec);\n \n-        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new ResourceModel(\"apply\")) {\n+        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\"apply\", new ResourceModel(\"apply\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(\n-                    final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 SchedTaskTO taskTO = (SchedTaskTO) form.getModelObject();\n-                taskTO.setCronExpression(\n-                        !StringUtils.hasText(taskTO.getCronExpression())\n-                        ? null : crontab.getCronExpression());\n+                taskTO.setCronExpression(!StringUtils.hasText(taskTO.getCronExpression())\n+                        ? null\n+                        : crontab.getCronExpression());\n \n                 try {\n                     if (taskTO.getId() > 0) {\n@@ -106,20 +100,18 @@ protected void onSubmit(\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n         };\n \n-\n         if (taskTO.getId() > 0) {\n-            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n-                    xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"update\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                    \"update\"));\n         } else {\n-            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n-                    xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"create\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                    \"create\"));\n         }\n \n         form.add(submit);"},{"sha":"8c9304af9164e408096e6ee48bf9da3b9a79ec1c","filename":"console/src/main/java/org/syncope/console/pages/AbstractSchemaModalPage.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -41,11 +41,8 @@ public AbstractSchemaModalPage(AttributableType kind) {\n         this.kind = kind;\n     }\n \n-    abstract public void setSchemaModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n-            AbstractBaseBean schema,\n-            final boolean createFlag);\n+    abstract public void setSchemaModalPage(final PageReference callerPageRef, final ModalWindow window,\n+            AbstractBaseBean schema, final boolean createFlag);\n \n     public AttributableType getKind() {\n         return kind;"},{"sha":"3e53306c12edeb568fca86962f21a1a1aea07296","filename":"console/src/main/java/org/syncope/console/pages/ApprovalModalPage.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -80,42 +80,42 @@ protected List<WorkflowFormPropertyTO> load() {\n             protected void populateItem(final ListItem<WorkflowFormPropertyTO> item) {\n                 final WorkflowFormPropertyTO prop = item.getModelObject();\n \n-                Label label = new Label(\"key\", prop.getName() == null ? prop.getId() : prop.getName());\n+                Label label = new Label(\"key\", prop.getName() == null\n+                        ? prop.getId()\n+                        : prop.getName());\n                 item.add(label);\n \n                 FieldPanel field;\n                 switch (prop.getType()) {\n                     case Boolean:\n-                        field = new AjaxDropDownChoicePanel(\"value\", label.getDefaultModelObjectAsString(),\n-                                new Model(Boolean.valueOf(prop.getValue()))).setChoices(Arrays.asList(\n-                                new String[]{\"Yes\", \"No\"}));\n+                        field = new AjaxDropDownChoicePanel(\"value\", label.getDefaultModelObjectAsString(), new Model(\n+                                Boolean.valueOf(prop.getValue()))).setChoices(Arrays\n+                                .asList(new String[] { \"Yes\", \"No\" }));\n                         break;\n \n                     case Date:\n-                        SimpleDateFormat df =\n-                                StringUtils.isNotBlank(prop.getDatePattern())\n+                        SimpleDateFormat df = StringUtils.isNotBlank(prop.getDatePattern())\n                                 ? new SimpleDateFormat(prop.getDatePattern())\n                                 : new SimpleDateFormat();\n                         Date parsedDate = null;\n                         if (StringUtils.isNotBlank(prop.getValue())) {\n                             try {\n                                 parsedDate = df.parse(prop.getValue());\n                             } catch (ParseException e) {\n-                                LOG.error(\"Unparsable date: {}\",\n-                                        prop.getValue(), e);\n+                                LOG.error(\"Unparsable date: {}\", prop.getValue(), e);\n                             }\n                         }\n \n-                        field = new DateTimeFieldPanel(\"value\", label.getDefaultModelObjectAsString(),\n-                                new Model(parsedDate), df.toLocalizedPattern());\n+                        field = new DateTimeFieldPanel(\"value\", label.getDefaultModelObjectAsString(), new Model(\n+                                parsedDate), df.toLocalizedPattern());\n                         break;\n \n                     case Enum:\n-                        MapChoiceRenderer<String, String> enumCR =\n-                                new MapChoiceRenderer<String, String>(prop.getEnumValues());\n+                        MapChoiceRenderer<String, String> enumCR = new MapChoiceRenderer<String, String>(prop\n+                                .getEnumValues());\n \n-                        field = new AjaxDropDownChoicePanel(\"value\", label.getDefaultModelObjectAsString(),\n-                                new Model(prop.getValue())).setChoiceRenderer(enumCR).setChoices(new Model() {\n+                        field = new AjaxDropDownChoicePanel(\"value\", label.getDefaultModelObjectAsString(), new Model(\n+                                prop.getValue())).setChoiceRenderer(enumCR).setChoices(new Model() {\n \n                             private static final long serialVersionUID = -858521070366432018L;\n \n@@ -127,8 +127,8 @@ public Serializable getObject() {\n                         break;\n \n                     case Long:\n-                        field = new AjaxNumberFieldPanel(\"value\", label.getDefaultModelObjectAsString(),\n-                                new Model(Long.valueOf(prop.getValue())), Long.class);\n+                        field = new AjaxNumberFieldPanel(\"value\", label.getDefaultModelObjectAsString(), new Model(Long\n+                                .valueOf(prop.getValue())), Long.class);\n                         break;\n \n                     case String:\n@@ -203,8 +203,8 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         form.add(propView);\n         form.add(submit);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(form, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Approval\", \"submit\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(form, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Approval\",\n+                \"submit\"));\n \n         add(form);\n     }"},{"sha":"1dc1519987294b06f65d8c9709336085bd5537a1","filename":"console/src/main/java/org/syncope/console/pages/BaseModalPage.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -33,8 +33,7 @@ public abstract class BaseModalPage extends WebPage {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            BasePage.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(BasePage.class);\n \n     private static final long serialVersionUID = -1443079028368471943L;\n "},{"sha":"6c2eaa99e52ddbd9ad6366d9b867f9affb2fecec","filename":"console/src/main/java/org/syncope/console/pages/BasePage.java","status":"modified","additions":39,"deletions":60,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -54,8 +54,7 @@ public class BasePage extends WebPage implements IAjaxIndicatorAware {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            BasePage.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(BasePage.class);\n \n     private static final long serialVersionUID = 1571997737305598502L;\n \n@@ -97,8 +96,7 @@ public BasePage(final PageParameters parameters) {\n     }\n \n     private void pageSetup() {\n-        ((SyncopeApplication) getApplication()).setupNavigationPane(\n-                this, xmlRolesReader, true, version);\n+        ((SyncopeApplication) getApplication()).setupNavigationPane(this, xmlRolesReader, true, version);\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n         feedbackPanel.setOutputMarkupId(true);\n@@ -109,12 +107,10 @@ private void pageSetup() {\n         if (kindLink != null) {\n             kindLink.add(new Behavior() {\n \n-                private static final long serialVersionUID =\n-                        1469628524240283489L;\n+                private static final long serialVersionUID = 1469628524240283489L;\n \n                 @Override\n-                public void onComponentTag(final Component component,\n-                        final ComponentTag tag) {\n+                public void onComponentTag(final Component component, final ComponentTag tag) {\n \n                     tag.put(\"class\", kind);\n                 }\n@@ -124,23 +120,19 @@ public void onComponentTag(final Component component,\n             if (kindIcon != null) {\n                 kindIcon.add(new Behavior() {\n \n-                    private static final long serialVersionUID =\n-                            1469628524240283489L;\n+                    private static final long serialVersionUID = 1469628524240283489L;\n \n                     @Override\n-                    public void onComponentTag(final Component component,\n-                            final ComponentTag tag) {\n+                    public void onComponentTag(final Component component, final ComponentTag tag) {\n \n-                        tag.put(\"src\", \"../..\" + SyncopeApplication.IMG_PREFIX\n-                                + kind + SyncopeApplication.IMG_SUFFIX);\n+                        tag.put(\"src\", \"../..\" + SyncopeApplication.IMG_PREFIX + kind + SyncopeApplication.IMG_SUFFIX);\n                     }\n                 });\n             }\n         }\n \n         // Modal window for editing user profile\n-        final ModalWindow editProfileModalWin =\n-                new ModalWindow(\"editProfileModal\");\n+        final ModalWindow editProfileModalWin = new ModalWindow(\"editProfileModal\");\n         editProfileModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editProfileModalWin.setInitialHeight(EDIT_PROFILE_WIN_HEIGHT);\n         editProfileModalWin.setInitialWidth(EDIT_PROFILE_WIN_WIDTH);\n@@ -151,45 +143,35 @@ public void onComponentTag(final Component component,\n \n         Fragment editProfileFrag;\n         if (\"admin\".equals(SyncopeSession.get().getUserId())) {\n-            editProfileFrag =\n-                    new Fragment(\"editProfile\", \"adminEmptyFrag\", this);\n+            editProfileFrag = new Fragment(\"editProfile\", \"adminEmptyFrag\", this);\n         } else {\n             final UserTO userTO = SyncopeSession.get().isAuthenticated()\n                     ? profileRestClient.readProfile()\n                     : new UserTO();\n \n-            editProfileFrag =\n-                    new Fragment(\"editProfile\", \"editProfileFrag\", this);\n+            editProfileFrag = new Fragment(\"editProfile\", \"editProfileFrag\", this);\n \n-            AjaxLink editProfileLink =\n-                    new IndicatingAjaxLink(\"link\") {\n+            AjaxLink editProfileLink = new IndicatingAjaxLink(\"link\") {\n \n-                        private static final long serialVersionUID =\n-                                -7978723352517770644L;\n+                private static final long serialVersionUID = -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    editProfileModalWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                         @Override\n-                        public void onClick(final AjaxRequestTarget target) {\n-                            editProfileModalWin.setPageCreator(\n-                                    new ModalWindow.PageCreator() {\n-\n-                                        @Override\n-                                        public Page createPage() {\n-                                            return new UserRequestModalPage(\n-                                                    BasePage.this.\n-                                                    getPageReference(),\n-                                                    editProfileModalWin,\n-                                                    userTO);\n-                                        }\n-                                    });\n-\n-                            editProfileModalWin.show(target);\n+                        public Page createPage() {\n+                            return new UserRequestModalPage(BasePage.this.getPageReference(), editProfileModalWin,\n+                                    userTO);\n                         }\n-                    };\n-            editProfileLink.add(\n-                    new Label(\"linkTitle\", getString(\"editProfile\")));\n+                    });\n \n-            Panel panel = new LinkPanel(\"editProfile\",\n-                    new ResourceModel(\"editProfile\"));\n+                    editProfileModalWin.show(target);\n+                }\n+            };\n+            editProfileLink.add(new Label(\"linkTitle\", getString(\"editProfile\")));\n+\n+            Panel panel = new LinkPanel(\"editProfile\", new ResourceModel(\"editProfile\"));\n             panel.add(editProfileLink);\n             editProfileFrag.add(panel);\n         }\n@@ -219,24 +201,21 @@ public void setModalResult(final boolean operationResult) {\n      * @param window window\n      * @param container container\n      */\n-    protected void setWindowClosedCallback(final ModalWindow window,\n-            final WebMarkupContainer container) {\n+    protected void setWindowClosedCallback(final ModalWindow window, final WebMarkupContainer container) {\n \n-        window.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n+        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n-                    private static final long serialVersionUID =\n-                            8804221891699487139L;\n+            private static final long serialVersionUID = 8804221891699487139L;\n \n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        target.add(container);\n-                        if (isModalResult()) {\n-                            info(getString(\"operation_succeded\"));\n-                            target.add(feedbackPanel);\n-                            setModalResult(false);\n-                        }\n-                    }\n-                });\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                target.add(container);\n+                if (isModalResult()) {\n+                    info(getString(\"operation_succeded\"));\n+                    target.add(feedbackPanel);\n+                    setModalResult(false);\n+                }\n+            }\n+        });\n     }\n }"},{"sha":"8ffbd3f98eaf2ab963b4ebb8b594db9af849d6b7","filename":"console/src/main/java/org/syncope/console/pages/Configuration.java","status":"modified","additions":49,"deletions":56,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -150,8 +150,7 @@ public Configuration(final PageParameters parameters) {\n \n         Form wfForm = new Form(\"workflowDefForm\", new CompoundPropertyModel(workflowDef));\n \n-        TextArea<WorkflowDefinitionTO> workflowDefArea =\n-                new TextArea<WorkflowDefinitionTO>(\"workflowDefArea\",\n+        TextArea<WorkflowDefinitionTO> workflowDefArea = new TextArea<WorkflowDefinitionTO>(\"workflowDefArea\",\n                 new PropertyModel<WorkflowDefinitionTO>(workflowDef, \"xmlDefinition\"));\n         wfForm.add(workflowDefArea);\n \n@@ -178,14 +177,14 @@ protected void onError(final AjaxRequestTarget target, final Form form) {\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"workflowDefUpdate\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Configuration\",\n+                \"workflowDefUpdate\"));\n         wfForm.add(submit);\n \n         workflowDefContainer.add(wfForm);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(workflowDefContainer, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"workflowDefRead\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(workflowDefContainer, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\", \"workflowDefRead\"));\n         add(workflowDefContainer);\n \n         // Logger stuff\n@@ -194,8 +193,8 @@ protected void onError(final AjaxRequestTarget target, final Form form) {\n         coreLoggerContainer.add(coreLoggerList);\n         coreLoggerContainer.setOutputMarkupId(true);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(coreLoggerContainer, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"logList\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(coreLoggerContainer, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\", \"logList\"));\n         add(coreLoggerContainer);\n \n         ConsoleLoggerController consoleLoggerController = new ConsoleLoggerController();\n@@ -205,8 +204,8 @@ protected void onError(final AjaxRequestTarget target, final Form form) {\n         consoleLoggerContainer.add(consoleLoggerList);\n         consoleLoggerContainer.setOutputMarkupId(true);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(consoleLoggerContainer, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"logList\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(consoleLoggerContainer, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\", \"logList\"));\n         add(consoleLoggerContainer);\n     }\n \n@@ -229,8 +228,8 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(final Item<ICellPopulator<ConfigurationTO>> cellItem,\n-                    final String componentId, final IModel<ConfigurationTO> model) {\n+            public void populateItem(final Item<ICellPopulator<ConfigurationTO>> cellItem, final String componentId,\n+                    final IModel<ConfigurationTO> model) {\n \n                 final ConfigurationTO configurationTO = model.getObject();\n \n@@ -245,13 +244,12 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         editConfigWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n                             @Override\n                             public Page createPage() {\n-                                return new ConfigurationModalPage(Configuration.this.getPageReference(),\n-                                        editConfigWin, configurationTO, false);\n+                                return new ConfigurationModalPage(Configuration.this.getPageReference(), editConfigWin,\n+                                        configurationTO, false);\n                             }\n                         });\n \n@@ -306,8 +304,7 @@ public void onClick(final AjaxRequestTarget target) {\n         setWindowClosedCallback(createConfigWin, confContainer);\n         setWindowClosedCallback(editConfigWin, confContainer);\n \n-        AjaxLink createConfigurationLink = new AjaxLink(\n-                \"createConfigurationLink\") {\n+        AjaxLink createConfigurationLink = new AjaxLink(\"createConfigurationLink\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -320,17 +317,17 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        return new ConfigurationModalPage(Configuration.this.getPageReference(),\n-                                createConfigWin, new ConfigurationTO(), true);\n+                        return new ConfigurationModalPage(Configuration.this.getPageReference(), createConfigWin,\n+                                new ConfigurationTO(), true);\n                     }\n                 });\n \n                 createConfigWin.show(target);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createConfigurationLink, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createConfigurationLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\", \"create\"));\n         add(createConfigurationLink);\n \n         Link dbExportLink = new Link<Void>(\"dbExportLink\") {\n@@ -340,11 +337,12 @@ public Page createPage() {\n             @Override\n             public void onClick() {\n                 try {\n-                    HttpResourceStream stream = new HttpResourceStream(\n-                            baseURL + \"configuration/dbexport\", restTemplate);\n+                    HttpResourceStream stream = new HttpResourceStream(baseURL + \"configuration/dbexport\", restTemplate);\n \n                     ResourceStreamRequestHandler rsrh = new ResourceStreamRequestHandler(stream);\n-                    rsrh.setFileName(stream.getFilename() == null ? \"content.xml\" : stream.getFilename());\n+                    rsrh.setFileName(stream.getFilename() == null\n+                            ? \"content.xml\"\n+                            : stream.getFilename());\n                     rsrh.setContentDisposition(ContentDisposition.ATTACHMENT);\n \n                     getRequestCycle().scheduleRequestHandlerAfterCurrent(rsrh);\n@@ -354,23 +352,23 @@ public void onClick() {\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(dbExportLink, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"read\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(dbExportLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\", \"read\"));\n         add(dbExportLink);\n \n         Form confPaginatorForm = new Form(\"confPaginatorForm\");\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"confPaginatorRows\"), prefMan.getPaginatorChoices());\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n+                \"confPaginatorRows\"), prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_CONFIGURATION_PAGINATOR_ROWS,\n-                        String.valueOf(confPaginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_CONFIGURATION_PAGINATOR_ROWS, String\n+                        .valueOf(confPaginatorRows));\n                 confTable.setItemsPerPage(confPaginatorRows);\n \n                 target.add(confContainer);\n@@ -382,8 +380,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     }\n \n     private void setupNotification() {\n-        notificationPaginatorRows = prefMan.getPaginatorRows(getRequest(),\n-                Constants.PREF_NOTIFICATION_PAGINATOR_ROWS);\n+        notificationPaginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_NOTIFICATION_PAGINATOR_ROWS);\n \n         List<IColumn> notificationCols = new ArrayList<IColumn>();\n         notificationCols.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n@@ -418,8 +415,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         editNotificationWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n                             @Override\n                             public Page createPage() {\n@@ -492,33 +488,32 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        return new NotificationModalPage(Configuration.this.getPageReference(),\n-                                createNotificationWin, new NotificationTO(), true);\n+                        return new NotificationModalPage(Configuration.this.getPageReference(), createNotificationWin,\n+                                new NotificationTO(), true);\n                     }\n                 });\n \n                 createNotificationWin.show(target);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createNotificationLink, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Notification\", \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createNotificationLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Notification\", \"create\"));\n         add(createNotificationLink);\n \n         Form notificationPaginatorForm = new Form(\"notificationPaginatorForm\");\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"notificationPaginatorRows\"),\n-                prefMan.getPaginatorChoices());\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n+                \"notificationPaginatorRows\"), prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_NOTIFICATION_PAGINATOR_ROWS,\n-                        String.valueOf(notificationPaginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_NOTIFICATION_PAGINATOR_ROWS, String\n+                        .valueOf(notificationPaginatorRows));\n                 notificationTable.setItemsPerPage(notificationPaginatorRows);\n \n                 target.add(notificationContainer);\n@@ -529,8 +524,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         add(notificationPaginatorForm);\n     }\n \n-    private class SyncopeConfProvider\n-            extends SortableDataProvider<ConfigurationTO> {\n+    private class SyncopeConfProvider extends SortableDataProvider<ConfigurationTO> {\n \n         private static final long serialVersionUID = -276043813563988590L;\n \n@@ -571,8 +565,7 @@ public ConfigurationTO getObject() {\n         }\n     }\n \n-    private class NotificationProvider\n-            extends SortableDataProvider<NotificationTO> {\n+    private class NotificationProvider extends SortableDataProvider<NotificationTO> {\n \n         private static final long serialVersionUID = -276043813563988590L;\n \n@@ -619,8 +612,8 @@ private class LoggerPropertyList extends PropertyListView<LoggerTO> {\n \n         private final ConsoleLoggerController consoleLoggerController;\n \n-        public LoggerPropertyList(final ConsoleLoggerController consoleLoggerController,\n-                final String id, final List<? extends LoggerTO> list) {\n+        public LoggerPropertyList(final ConsoleLoggerController consoleLoggerController, final String id,\n+                final List<? extends LoggerTO> list) {\n \n             super(id, list);\n             this.consoleLoggerController = consoleLoggerController;\n@@ -659,11 +652,11 @@ public void detach() {\n                 protected void onUpdate(final AjaxRequestTarget target) {\n                     try {\n                         if (getId().equals(\"corelogger\")) {\n-                            confRestClient.setLogLevel(item.getModelObject().getName(),\n-                                    item.getModelObject().getLevel());\n+                            confRestClient.setLogLevel(item.getModelObject().getName(), item.getModelObject()\n+                                    .getLevel());\n                         } else {\n-                            consoleLoggerController.setLogLevel(item.getModelObject().getName(),\n-                                    item.getModelObject().getLevel());\n+                            consoleLoggerController.setLogLevel(item.getModelObject().getName(), item.getModelObject()\n+                                    .getLevel());\n                         }\n \n                         info(getString(\"operation_succeded\"));\n@@ -675,8 +668,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n \n-            MetaDataRoleAuthorizationStrategy.authorize(level, ENABLE,\n-                    xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"logSetLevel\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(level, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                    \"Configuration\", \"logSetLevel\"));\n \n             item.add(level);\n         }"},{"sha":"19d387c42ff5752adc78ef87bc07ec5c6bf090b5","filename":"console/src/main/java/org/syncope/console/pages/ConfigurationModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -64,8 +64,8 @@ public ConfigurationModalPage(final PageReference callPageRef, final ModalWindow\n         key.setEnabled(createFlag);\n         key.addRequiredLabel();\n \n-        final AjaxTextFieldPanel value = new AjaxTextFieldPanel(\"value\", \"value\",\n-                new PropertyModel(configurationTO, \"value\"));\n+        final AjaxTextFieldPanel value = new AjaxTextFieldPanel(\"value\", \"value\", new PropertyModel(configurationTO,\n+                \"value\"));\n         form.add(value);\n         value.addRequiredLabel();\n "},{"sha":"8609080759e9964d9e3b357362f3949e1ecbc3d4","filename":"console/src/main/java/org/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":43,"deletions":55,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -78,16 +78,8 @@ public class ConnectorModalPage extends BaseModalPage {\n     // GuardedByteArray is not in classpath\n     private static final String GUARDED_BYTE_ARRAY = \"org.identityconnectors.common.security.GuardedByteArray\";\n \n-    private static final List<Class> NUMBER = Arrays.asList(new Class[]{\n-                Integer.class,\n-                Double.class,\n-                Long.class,\n-                Float.class,\n-                Number.class,\n-                Integer.TYPE,\n-                Long.TYPE,\n-                Double.TYPE,\n-                Float.TYPE});\n+    private static final List<Class> NUMBER = Arrays.asList(new Class[] { Integer.class, Double.class, Long.class,\n+            Float.class, Number.class, Integer.TYPE, Long.TYPE, Double.TYPE, Float.TYPE });\n \n     @SpringBean\n     private ConnectorRestClient restClient;\n@@ -108,18 +100,18 @@ public ConnectorModalPage(final PageReference callerPageRef, final ModalWindow w\n         super();\n \n         selectedCapabilities = new ArrayList(connectorTO.getId() == 0\n-                ? EnumSet.noneOf(ConnectorCapability.class) : connectorTO.getCapabilities());\n+                ? EnumSet.noneOf(ConnectorCapability.class)\n+                : connectorTO.getCapabilities());\n \n-        final IModel<List<ConnectorCapability>> capabilities =\n-                new LoadableDetachableModel<List<ConnectorCapability>>() {\n+        final IModel<List<ConnectorCapability>> capabilities = new LoadableDetachableModel<List<ConnectorCapability>>() {\n \n-                    private static final long serialVersionUID = 5275935387613157437L;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-                    @Override\n-                    protected List<ConnectorCapability> load() {\n-                        return Arrays.asList(ConnectorCapability.values());\n-                    }\n-                };\n+            @Override\n+            protected List<ConnectorCapability> load() {\n+                return Arrays.asList(ConnectorCapability.values());\n+            }\n+        };\n \n         final IModel<List<ConnBundleTO>> bundles = new LoadableDetachableModel<List<ConnBundleTO>>() {\n \n@@ -144,19 +136,18 @@ protected List<ConnBundleTO> load() {\n         displayName.setOutputMarkupId(true);\n         displayName.addRequiredLabel();\n \n-        final AjaxTextFieldPanel version = new AjaxTextFieldPanel(\"version\", \"version\",\n-                new PropertyModel<String>(connectorTO, \"version\"));\n+        final AjaxTextFieldPanel version = new AjaxTextFieldPanel(\"version\", \"version\", new PropertyModel<String>(\n+                connectorTO, \"version\"));\n         displayName.setOutputMarkupId(true);\n         version.setEnabled(false);\n \n-        final AjaxDropDownChoicePanel<ConnBundleTO> bundle = new AjaxDropDownChoicePanel<ConnBundleTO>(\n-                \"bundle\", \"bundle\", new Model<ConnBundleTO>(bundleTO));\n+        final AjaxDropDownChoicePanel<ConnBundleTO> bundle = new AjaxDropDownChoicePanel<ConnBundleTO>(\"bundle\",\n+                \"bundle\", new Model<ConnBundleTO>(bundleTO));\n         bundle.setStyleShet(\"long_dynamicsize\");\n         bundle.setChoices(bundles.getObject());\n         bundle.setChoiceRenderer(new ChoiceRenderer<ConnBundleTO>() {\n \n-            private static final long serialVersionUID =\n-                    -1945543182376191187L;\n+            private static final long serialVersionUID = -1945543182376191187L;\n \n             @Override\n             public Object getDisplayValue(final ConnBundleTO object) {\n@@ -174,8 +165,7 @@ public String getIdValue(final ConnBundleTO object, final int index) {\n         bundle.setRequired(true);\n         bundle.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            private static final long serialVersionUID =\n-                    -1107858522700306810L;\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n@@ -221,15 +211,14 @@ public void detach() {\n         final ListView<ConnConfProperty> view = new ListView<ConnConfProperty>(\"connectorProperties\",\n                 new PropertyModel(this, \"properties\")) {\n \n-            private static final long serialVersionUID =\n-                    9101744072914090143L;\n+            private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<ConnConfProperty> item) {\n                 final ConnConfProperty property = item.getModelObject();\n \n-                final Label label = new Label(\"connPropAttrSchema\",\n-                        property.getSchema().getDisplayName() == null || property.getSchema().getDisplayName().isEmpty()\n+                final Label label = new Label(\"connPropAttrSchema\", property.getSchema().getDisplayName() == null\n+                        || property.getSchema().getDisplayName().isEmpty()\n                         ? property.getSchema().getName()\n                         : property.getSchema().getDisplayName());\n \n@@ -254,8 +243,8 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                     Class propertySchemaClass;\n \n                     try {\n-                        propertySchemaClass = ClassUtils.forName(property.getSchema().getType(),\n-                                ClassUtils.getDefaultClassLoader());\n+                        propertySchemaClass = ClassUtils.forName(property.getSchema().getType(), ClassUtils\n+                                .getDefaultClassLoader());\n                     } catch (Exception e) {\n                         LOG.error(\"Error parsing attribute type\", e);\n                         propertySchemaClass = String.class;\n@@ -288,8 +277,8 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                         property.getValues().add(null);\n                     }\n \n-                    item.add(new MultiValueSelectorPanel<String>(\"panel\",\n-                            new PropertyModel<List<String>>(property, \"values\"), field));\n+                    item.add(new MultiValueSelectorPanel<String>(\"panel\", new PropertyModel<List<String>>(property,\n+                            \"values\"), field));\n                 } else {\n                     if (required) {\n                         field.addRequiredLabel();\n@@ -321,25 +310,24 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n         connectorForm.add(propertiesContainer);\n         connectorPropForm.add(view);\n \n-        final AjaxLink check =\n-                new IndicatingAjaxLink(\"check\", new ResourceModel(\"check\")) {\n+        final AjaxLink check = new IndicatingAjaxLink(\"check\", new ResourceModel(\"check\")) {\n \n-                    private static final long serialVersionUID = -7978723352517770644L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        connectorTO.setBundleName(bundleTO.getBundleName());\n-                        connectorTO.setVersion(bundleTO.getVersion());\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                connectorTO.setBundleName(bundleTO.getBundleName());\n+                connectorTO.setVersion(bundleTO.getVersion());\n \n-                        if (restClient.check(connectorTO).booleanValue()) {\n-                            info(getString(\"success_connection\"));\n-                        } else {\n-                            error(getString(\"error_connection\"));\n-                        }\n+                if (restClient.check(connectorTO).booleanValue()) {\n+                    info(getString(\"success_connection\"));\n+                } else {\n+                    error(getString(\"error_connection\"));\n+                }\n \n-                        target.add(feedbackPanel);\n-                    }\n-                };\n+                target.add(feedbackPanel);\n+            }\n+        };\n \n         connectorPropForm.add(check);\n \n@@ -355,7 +343,8 @@ protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 // Set the model object's capabilites to capabilitiesPalette's converted Set\n                 conn.setCapabilities(selectedCapabilities.isEmpty()\n-                        ? EnumSet.noneOf(ConnectorCapability.class) : EnumSet.copyOf(selectedCapabilities));\n+                        ? EnumSet.noneOf(ConnectorCapability.class)\n+                        : EnumSet.copyOf(selectedCapabilities));\n                 try {\n                     if (connectorTO.getId() == 0) {\n                         restClient.create(conn);\n@@ -391,8 +380,8 @@ protected void onError(final AjaxRequestTarget target, final Form form) {\n         connectorForm.add(bundle);\n         connectorForm.add(version);\n \n-        capabilitiesPalette = new CheckBoxMultipleChoice(\"capabilitiesPalette\",\n-                new PropertyModel(this, \"selectedCapabilities\"), capabilities);\n+        capabilitiesPalette = new CheckBoxMultipleChoice(\"capabilitiesPalette\", new PropertyModel(this,\n+                \"selectedCapabilities\"), capabilities);\n         connectorForm.add(capabilitiesPalette);\n \n         connectorForm.add(submit);\n@@ -405,8 +394,7 @@ private ConnBundleTO getSelectedBundleTO(final List<ConnBundleTO> bundles, final\n         // Manage bundle and connector beans\n         // -------------------------------------\n \n-        if (connTO != null\n-                && StringUtils.isNotBlank(connTO.getBundleName())\n+        if (connTO != null && StringUtils.isNotBlank(connTO.getBundleName())\n                 && StringUtils.isNotBlank(connTO.getVersion())) {\n \n             for (ConnBundleTO to : bundles) {"},{"sha":"0323205e5e8f31ffc226c8668f257ae29e2982d8","filename":"console/src/main/java/org/syncope/console/pages/DerivedSchemaModalPage.java","status":"modified","additions":12,"deletions":23,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -45,11 +45,8 @@ public DerivedSchemaModalPage(AttributableType kind) {\n     }\n \n     @Override\n-    public void setSchemaModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n-            AbstractBaseBean schema,\n-            final boolean createFlag) {\n+    public void setSchemaModalPage(final PageReference callerPageRef, final ModalWindow window,\n+            AbstractBaseBean schema, final boolean createFlag) {\n \n         if (schema == null) {\n             schema = new DerivedSchemaTO();\n@@ -59,8 +56,8 @@ public void setSchemaModalPage(\n \n         schemaForm.setModel(new CompoundPropertyModel(schema));\n \n-        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"),\n-                new PropertyModel<String>(schema, \"name\"));\n+        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"), new PropertyModel<String>(\n+                schema, \"name\"));\n         name.addRequiredLabel();\n \n         final AjaxTextFieldPanel expression = new AjaxTextFieldPanel(\"expression\", getString(\"expression\"),\n@@ -69,17 +66,14 @@ public void setSchemaModalPage(\n \n         name.setEnabled(createFlag);\n \n-        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new ResourceModel(\"submit\")) {\n+        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\"apply\", new ResourceModel(\"submit\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n-                DerivedSchemaTO schemaTO =\n-                        (DerivedSchemaTO) form.getDefaultModelObject();\n+                DerivedSchemaTO schemaTO = (DerivedSchemaTO) form.getDefaultModelObject();\n \n                 try {\n                     if (createFlag) {\n@@ -88,8 +82,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n                         restClient.updateDerivedSchema(kind, schemaTO);\n                     }\n                     if (callerPageRef.getPage() instanceof BasePage) {\n-                        ((BasePage) callerPageRef.getPage()).setModalResult(\n-                                true);\n+                        ((BasePage) callerPageRef.getPage()).setModalResult(true);\n                     }\n \n                     window.close(target);\n@@ -100,8 +93,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n@@ -110,15 +102,12 @@ protected void onError(final AjaxRequestTarget target,\n         String allowedRoles;\n \n         if (createFlag) {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n-                    \"create\");\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\", \"create\");\n         } else {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n-                    \"update\");\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\", \"update\");\n         }\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                submit, ENABLE, allowedRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, allowedRoles);\n \n         schemaForm.add(name);\n         schemaForm.add(expression);"},{"sha":"6a432f588e38a1c90071d8b898c005e2d89cd4cd","filename":"console/src/main/java/org/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":108,"deletions":157,"changes":265,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -60,9 +60,8 @@ public class DisplayAttributesModalPage extends BaseModalPage {\n      */\n     private static final int MAX_SELECTIONS = 9;\n \n-    private List<String> ATTRIBUTES_NOTINCLUDED = Arrays.asList(new String[]{\n-                \"attributes\", \"derivedAttributes\", \"virtualAttributes\",\n-                \"serialVersionUID\", \"memberships\", \"resources\", \"password\"});\n+    private List<String> ATTRIBUTES_NOTINCLUDED = Arrays.asList(new String[] { \"attributes\", \"derivedAttributes\",\n+            \"virtualAttributes\", \"serialVersionUID\", \"memberships\", \"resources\", \"password\" });\n \n     @SpringBean\n     private PreferenceManager prefMan;\n@@ -73,90 +72,82 @@ public class DisplayAttributesModalPage extends BaseModalPage {\n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n-    final private IModel<List<String>> dnames =\n-            new LoadableDetachableModel<List<String>>() {\n+    final private IModel<List<String>> dnames = new LoadableDetachableModel<List<String>>() {\n \n-                private static final long serialVersionUID = 5275935387613157437L;\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-                @Override\n-                protected List<String> load() {\n+        @Override\n+        protected List<String> load() {\n \n-                    final List<String> details = new ArrayList<String>();\n+            final List<String> details = new ArrayList<String>();\n \n-                    Class<?> clazz = UserTO.class;\n+            Class<?> clazz = UserTO.class;\n \n-                    // loop on class and all superclasses searching for field\n-                    while (clazz != null && clazz != Object.class) {\n-                        for (Field field : clazz.getDeclaredFields()) {\n-                            if (!ATTRIBUTES_NOTINCLUDED.contains(field.getName())) {\n-                                details.add(field.getName());\n-                            }\n-                        }\n-                        clazz = clazz.getSuperclass();\n+            // loop on class and all superclasses searching for field\n+            while (clazz != null && clazz != Object.class) {\n+                for (Field field : clazz.getDeclaredFields()) {\n+                    if (!ATTRIBUTES_NOTINCLUDED.contains(field.getName())) {\n+                        details.add(field.getName());\n                     }\n-\n-                    Collections.reverse(details);\n-                    return details;\n                 }\n-            };\n+                clazz = clazz.getSuperclass();\n+            }\n \n-    final private IModel<List<String>> names =\n-            new LoadableDetachableModel<List<String>>() {\n+            Collections.reverse(details);\n+            return details;\n+        }\n+    };\n \n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n+    final private IModel<List<String>> names = new LoadableDetachableModel<List<String>>() {\n \n-                @Override\n-                protected List<String> load() {\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-                    List<String> schemas =\n-                            schemaRestClient.getSchemaNames(AttributableType.USER);\n+        @Override\n+        protected List<String> load() {\n \n-                    if (schemas == null) {\n-                        schemas = new ArrayList<String>();\n-                    }\n+            List<String> schemas = schemaRestClient.getSchemaNames(AttributableType.USER);\n \n-                    return schemas;\n-                }\n-            };\n+            if (schemas == null) {\n+                schemas = new ArrayList<String>();\n+            }\n \n-    final private IModel<List<String>> dsnames =\n-            new LoadableDetachableModel<List<String>>() {\n+            return schemas;\n+        }\n+    };\n \n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n+    final private IModel<List<String>> dsnames = new LoadableDetachableModel<List<String>>() {\n \n-                @Override\n-                protected List<String> load() {\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-                    List<String> schemas = schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n+        @Override\n+        protected List<String> load() {\n \n-                    if (schemas == null) {\n-                        schemas = new ArrayList<String>();\n-                    }\n+            List<String> schemas = schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n \n-                    return schemas;\n-                }\n-            };\n+            if (schemas == null) {\n+                schemas = new ArrayList<String>();\n+            }\n \n-    final private IModel<List<String>> vsnames =\n-            new LoadableDetachableModel<List<String>>() {\n+            return schemas;\n+        }\n+    };\n \n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n+    final private IModel<List<String>> vsnames = new LoadableDetachableModel<List<String>>() {\n \n-                @Override\n-                protected List<String> load() {\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-                    List<String> schemas = schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+        @Override\n+        protected List<String> load() {\n \n-                    if (schemas == null) {\n-                        schemas = new ArrayList<String>();\n-                    }\n+            List<String> schemas = schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n \n-                    return schemas;\n-                }\n-            };\n+            if (schemas == null) {\n+                schemas = new ArrayList<String>();\n+            }\n+\n+            return schemas;\n+        }\n+    };\n \n     private final List<String> userDetails;\n \n@@ -166,171 +157,131 @@ protected List<String> load() {\n \n     private final List<String> selectedDerSchemas;\n \n-    public DisplayAttributesModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window) {\n+    public DisplayAttributesModalPage(final PageReference callerPageRef, final ModalWindow window) {\n \n         super();\n \n         final Form form = new Form(\"form\");\n         form.setModel(new CompoundPropertyModel(this));\n \n-        userDetails = prefMan.getList(\n-                getRequest(), Constants.PREF_USERS_DETAILS_VIEW);\n+        userDetails = prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW);\n \n-        selectedSchemas = prefMan.getList(\n-                getRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW);\n+        selectedSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW);\n \n-        selectedVirSchemas = prefMan.getList(\n-                getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW);\n+        selectedVirSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW);\n \n-        selectedDerSchemas = prefMan.getList(\n-                getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW);\n+        selectedDerSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW);\n \n-        final CheckGroup dgroup = new CheckGroup(\n-                \"dCheckGroup\", new PropertyModel(this, \"userDetails\"));\n+        final CheckGroup dgroup = new CheckGroup(\"dCheckGroup\", new PropertyModel(this, \"userDetails\"));\n         form.add(dgroup);\n \n-        final ListView<String> details =\n-                new ListView<String>(\"details\", dnames) {\n+        final ListView<String> details = new ListView<String>(\"details\", dnames) {\n \n-                    private static final long serialVersionUID = 9101744072914090143L;\n+            private static final long serialVersionUID = 9101744072914090143L;\n \n-                    @Override\n-                    protected void populateItem(ListItem<String> item) {\n-                        item.add(new Check(\"dcheck\", item.getModel()));\n-                        item.add(new Label(\"dname\", new ResourceModel(\n-                                item.getModelObject(),\n-                                item.getModelObject())));\n-                    }\n-                };\n+            @Override\n+            protected void populateItem(ListItem<String> item) {\n+                item.add(new Check(\"dcheck\", item.getModel()));\n+                item.add(new Label(\"dname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+            }\n+        };\n         dgroup.add(details);\n \n         if (names.getObject() != null && !names.getObject().isEmpty()) {\n-            final Fragment fragment =\n-                    new Fragment(\"schemas\", \"sfragment\", form);\n+            final Fragment fragment = new Fragment(\"schemas\", \"sfragment\", form);\n             form.add(fragment);\n \n-            final CheckGroup sgroup = new CheckGroup(\n-                    \"sCheckGroup\", new PropertyModel(this, \"selectedSchemas\"));\n+            final CheckGroup sgroup = new CheckGroup(\"sCheckGroup\", new PropertyModel(this, \"selectedSchemas\"));\n             fragment.add(sgroup);\n \n-            final ListView<String> schemas =\n-                    new ListView<String>(\"schemas\", names) {\n+            final ListView<String> schemas = new ListView<String>(\"schemas\", names) {\n \n-                        private static final long serialVersionUID = 9101744072914090143L;\n+                private static final long serialVersionUID = 9101744072914090143L;\n \n-                        @Override\n-                        protected void populateItem(ListItem<String> item) {\n-                            item.add(new Check(\"scheck\", item.getModel()));\n-                            item.add(new Label(\"sname\", new ResourceModel(\n-                                    item.getModelObject(),\n-                                    item.getModelObject())));\n-                        }\n-                    };\n+                @Override\n+                protected void populateItem(ListItem<String> item) {\n+                    item.add(new Check(\"scheck\", item.getModel()));\n+                    item.add(new Label(\"sname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                }\n+            };\n             sgroup.add(schemas);\n         } else {\n-            final Fragment fragment =\n-                    new Fragment(\"schemas\", \"emptyFragment\", form);\n+            final Fragment fragment = new Fragment(\"schemas\", \"emptyFragment\", form);\n             form.add(fragment);\n \n             selectedSchemas.clear();\n         }\n \n         if (vsnames.getObject() != null && !vsnames.getObject().isEmpty()) {\n-            final Fragment fragment =\n-                    new Fragment(\"vschemas\", \"vsfragment\", form);\n+            final Fragment fragment = new Fragment(\"vschemas\", \"vsfragment\", form);\n             form.add(fragment);\n \n-            final CheckGroup vsgroup = new CheckGroup(\n-                    \"vsCheckGroup\",\n-                    new PropertyModel(this, \"selectedVirSchemas\"));\n+            final CheckGroup vsgroup = new CheckGroup(\"vsCheckGroup\", new PropertyModel(this, \"selectedVirSchemas\"));\n             fragment.add(vsgroup);\n \n-            final ListView<String> virSchemas =\n-                    new ListView<String>(\"virSchemas\", vsnames) {\n+            final ListView<String> virSchemas = new ListView<String>(\"virSchemas\", vsnames) {\n \n-                        private static final long serialVersionUID = 9101744072914090143L;\n+                private static final long serialVersionUID = 9101744072914090143L;\n \n-                        @Override\n-                        protected void populateItem(ListItem<String> item) {\n-                            item.add(new Check(\"vscheck\", item.getModel()));\n-                            item.add(new Label(\"vsname\", new ResourceModel(\n-                                    item.getModelObject(),\n-                                    item.getModelObject())));\n-                        }\n-                    };\n+                @Override\n+                protected void populateItem(ListItem<String> item) {\n+                    item.add(new Check(\"vscheck\", item.getModel()));\n+                    item.add(new Label(\"vsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                }\n+            };\n             vsgroup.add(virSchemas);\n         } else {\n-            final Fragment fragment =\n-                    new Fragment(\"vschemas\", \"emptyFragment\", form);\n+            final Fragment fragment = new Fragment(\"vschemas\", \"emptyFragment\", form);\n             form.add(fragment);\n \n             selectedVirSchemas.clear();\n         }\n \n         if (dsnames.getObject() != null && !dsnames.getObject().isEmpty()) {\n-            final Fragment fragment =\n-                    new Fragment(\"dschemas\", \"dsfragment\", form);\n+            final Fragment fragment = new Fragment(\"dschemas\", \"dsfragment\", form);\n             form.add(fragment);\n \n-            final CheckGroup dsgroup = new CheckGroup(\n-                    \"dsCheckGroup\",\n-                    new PropertyModel(this, \"selectedDerSchemas\"));\n+            final CheckGroup dsgroup = new CheckGroup(\"dsCheckGroup\", new PropertyModel(this, \"selectedDerSchemas\"));\n             fragment.add(dsgroup);\n \n-            final ListView<String> derSchemas =\n-                    new ListView<String>(\"derSchemas\", dsnames) {\n+            final ListView<String> derSchemas = new ListView<String>(\"derSchemas\", dsnames) {\n \n-                        private static final long serialVersionUID = 9101744072914090143L;\n+                private static final long serialVersionUID = 9101744072914090143L;\n \n-                        @Override\n-                        protected void populateItem(ListItem<String> item) {\n-                            item.add(new Check(\"dscheck\", item.getModel()));\n-                            item.add(new Label(\"dsname\", new ResourceModel(\n-                                    item.getModelObject(),\n-                                    item.getModelObject())));\n-                        }\n-                    };\n+                @Override\n+                protected void populateItem(ListItem<String> item) {\n+                    item.add(new Check(\"dscheck\", item.getModel()));\n+                    item.add(new Label(\"dsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                }\n+            };\n             dsgroup.add(derSchemas);\n         } else {\n-            final Fragment fragment =\n-                    new Fragment(\"dschemas\", \"emptyFragment\", form);\n+            final Fragment fragment = new Fragment(\"dschemas\", \"emptyFragment\", form);\n             form.add(fragment);\n \n             selectedDerSchemas.clear();\n         }\n \n-        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n-                \"submit\", new ResourceModel(\"submit\")) {\n+        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\"submit\", new ResourceModel(\"submit\")) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n-                if (userDetails.size()\n-                        + selectedSchemas.size()\n-                        + selectedVirSchemas.size()\n-                        + selectedDerSchemas.size() > MAX_SELECTIONS) {\n+                if (userDetails.size() + selectedSchemas.size() + selectedVirSchemas.size() + selectedDerSchemas.size() > MAX_SELECTIONS) {\n                     error(getString(\"tooMuchSelections\"));\n                     onError(target, form);\n                 } else {\n-                    final Map<String, List<String>> prefs =\n-                            new HashMap<String, List<String>>();\n+                    final Map<String, List<String>> prefs = new HashMap<String, List<String>>();\n \n-                    prefs.put(Constants.PREF_USERS_DETAILS_VIEW,\n-                            userDetails);\n+                    prefs.put(Constants.PREF_USERS_DETAILS_VIEW, userDetails);\n \n-                    prefs.put(Constants.PREF_USERS_ATTRIBUTES_VIEW,\n-                            selectedSchemas);\n+                    prefs.put(Constants.PREF_USERS_ATTRIBUTES_VIEW, selectedSchemas);\n \n-                    prefs.put(Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW,\n-                            selectedVirSchemas);\n+                    prefs.put(Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW, selectedVirSchemas);\n \n-                    prefs.put(Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW,\n-                            selectedDerSchemas);\n+                    prefs.put(Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW, selectedDerSchemas);\n \n                     prefMan.setList(getRequest(), getResponse(), prefs);\n "},{"sha":"b45b7e59ed64b6d492479cbdb5d2dd77c85f9e87","filename":"console/src/main/java/org/syncope/console/pages/EditUserModalPage.java","status":"modified","additions":7,"deletions":17,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -43,10 +43,7 @@ public class EditUserModalPage extends UserModalPage {\n \n     private UserTO initialUserTO = null;\n \n-    public EditUserModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n-            final UserTO userTO) {\n+    public EditUserModalPage(final PageReference callerPageRef, final ModalWindow window, final UserTO userTO) {\n \n         super(callerPageRef, window, userTO, Mode.ADMIN, true);\n \n@@ -58,31 +55,25 @@ public EditUserModalPage(\n         if (userTO.getId() != 0) {\n             final List<StatusBean> statuses = new ArrayList<StatusBean>();\n \n-            form.addOrReplace(new StatusPanel(\n-                    \"statuspanel\", userTO, statuses, false));\n+            form.addOrReplace(new StatusPanel(\"statuspanel\", userTO, statuses, false));\n \n-            form.addOrReplace(\n-                    new AccountInformationPanel(\"accountinformation\", userTO));\n+            form.addOrReplace(new AccountInformationPanel(\"accountinformation\", userTO));\n         }\n     }\n \n-    public EditUserModalPage(\n-            final ModalWindow window,\n-            final UserTO userTO) {\n+    public EditUserModalPage(final ModalWindow window, final UserTO userTO) {\n         super(window, userTO, Mode.ADMIN);\n     }\n \n     @Override\n-    protected void submitAction(\n-            final AjaxRequestTarget target, final Form form) {\n+    protected void submitAction(final AjaxRequestTarget target, final Form form) {\n \n         final UserTO updatedUserTO = (UserTO) form.getModelObject();\n \n         if (updatedUserTO.getId() == 0) {\n             userTO = userRestClient.create(updatedUserTO);\n         } else {\n-            final UserMod userMod = AttributableOperations.diff(\n-                    updatedUserTO, initialUserTO);\n+            final UserMod userMod = AttributableOperations.diff(updatedUserTO, initialUserTO);\n \n             // update user just if it is changed\n             if (!userMod.isEmpty()) {\n@@ -93,8 +84,7 @@ protected void submitAction(\n     }\n \n     @Override\n-    protected void closeAction(\n-            final AjaxRequestTarget target, final Form form) {\n+    protected void closeAction(final AjaxRequestTarget target, final Form form) {\n         setResponsePage(new EditUserModalPage(window, userTO));\n     }\n }"},{"sha":"91000ceb6e36ec9a5910c8480aede7edd9afc50d","filename":"console/src/main/java/org/syncope/console/pages/ErrorPage.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FErrorPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -33,10 +33,8 @@ public class ErrorPage extends BasePage {\n     public ErrorPage(final PageParameters parameters) {\n         super(parameters);\n \n-        add(new Label(\"errorTitle\", new Model<String>(\n-                parameters.get(\"errorTitle\").toString())));\n-        add(new Label(\"errorMessage\", new Model<String>(\n-                parameters.get(\"errorMessage\").toString())));\n+        add(new Label(\"errorTitle\", new Model<String>(parameters.get(\"errorTitle\").toString())));\n+        add(new Label(\"errorMessage\", new Model<String>(parameters.get(\"errorMessage\").toString())));\n \n         add(new BookmarkablePageLink(\"home\", getApplication().getHomePage()));\n     }"},{"sha":"49cd92a0b89fd760cdb1e684b2c79c34e08b8cf2","filename":"console/src/main/java/org/syncope/console/pages/ExecMessageModalPage.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FExecMessageModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FExecMessageModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FExecMessageModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,8 +26,7 @@ public class ExecMessageModalPage extends BaseModalPage {\n     private static final long serialVersionUID = 3163146190501510888L;\n \n     public ExecMessageModalPage(final String message) {\n-        final Label dialogContent =\n-                new Label(\"message\", new Model<String>(message));\n+        final Label dialogContent = new Label(\"message\", new Model<String>(message));\n         add(dialogContent.setOutputMarkupId(true));\n     }\n }"},{"sha":"287de5e54ad75f15f8158ba4c9969fa37c5e0071","filename":"console/src/main/java/org/syncope/console/pages/Login.java","status":"modified","additions":30,"deletions":49,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -64,8 +64,7 @@ public class Login extends WebPage {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            Login.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(Login.class);\n \n     private static final long serialVersionUID = -3744389270366566218L;\n \n@@ -100,20 +99,17 @@ public Login(final PageParameters parameters) {\n         passwordField.setMarkupId(\"password\");\n         form.add(passwordField);\n \n-        languageSelect = new LocaleDropDown(\"language\", Arrays.asList(\n-                new Locale[]{Locale.ENGLISH, Locale.ITALIAN}));\n+        languageSelect = new LocaleDropDown(\"language\", Arrays.asList(new Locale[] { Locale.ENGLISH, Locale.ITALIAN }));\n \n         form.add(languageSelect);\n \n-        Button submitButton = new Button(\"submit\", new Model(\n-                getString(\"submit\"))) {\n+        Button submitButton = new Button(\"submit\", new Model(getString(\"submit\"))) {\n \n             private static final long serialVersionUID = 429178684321093953L;\n \n             @Override\n             public void onSubmit() {\n-                String[] entitlements = authenticate(\n-                        userIdField.getRawInput(), passwordField.getRawInput());\n+                String[] entitlements = authenticate(userIdField.getRawInput(), passwordField.getRawInput());\n \n                 if (entitlements == null) {\n                     error(getString(\"login-error\"));\n@@ -134,8 +130,7 @@ public void onSubmit() {\n         add(new FeedbackPanel(\"feedback\"));\n \n         // Modal window for self registration\n-        final ModalWindow editProfileModalWin =\n-                new ModalWindow(\"selfRegModal\");\n+        final ModalWindow editProfileModalWin = new ModalWindow(\"selfRegModal\");\n         editProfileModalWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editProfileModalWin.setInitialHeight(SELF_REG_WIN_HEIGHT);\n         editProfileModalWin.setInitialWidth(SELF_REG_WIN_WIDTH);\n@@ -144,63 +139,50 @@ public void onSubmit() {\n \n         Fragment selfRegFrag;\n         if (isSelfRegistrationAllowed()) {\n-            selfRegFrag =\n-                    new Fragment(\"selfRegistration\", \"selfRegAllowed\", this);\n+            selfRegFrag = new Fragment(\"selfRegistration\", \"selfRegAllowed\", this);\n \n             AjaxLink selfRegLink = new IndicatingAjaxLink(\"link\") {\n \n-                private static final long serialVersionUID =\n-                        -7978723352517770644L;\n+                private static final long serialVersionUID = -7978723352517770644L;\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n-                    editProfileModalWin.setPageCreator(\n-                            new ModalWindow.PageCreator() {\n+                    editProfileModalWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                private static final long serialVersionUID =\n-                                        -7834632442532690940L;\n+                        private static final long serialVersionUID = -7834632442532690940L;\n \n-                                @Override\n-                                public Page createPage() {\n-                                    return new UserRequestModalPage(\n-                                            Login.this.getPageReference(),\n-                                            editProfileModalWin,\n-                                            new UserTO());\n-                                }\n-                            });\n+                        @Override\n+                        public Page createPage() {\n+                            return new UserRequestModalPage(Login.this.getPageReference(), editProfileModalWin,\n+                                    new UserTO());\n+                        }\n+                    });\n \n                     editProfileModalWin.show(target);\n                 }\n             };\n-            selfRegLink.add(\n-                    new Label(\"linkTitle\", getString(\"selfRegistration\")));\n+            selfRegLink.add(new Label(\"linkTitle\", getString(\"selfRegistration\")));\n \n-            Panel panel = new LinkPanel(\"selfRegistration\",\n-                    new ResourceModel(\"selfRegistration\"));\n+            Panel panel = new LinkPanel(\"selfRegistration\", new ResourceModel(\"selfRegistration\"));\n             panel.add(selfRegLink);\n             selfRegFrag.add(panel);\n         } else {\n-            selfRegFrag =\n-                    new Fragment(\"selfRegistration\", \"selfRegNotAllowed\", this);\n+            selfRegFrag = new Fragment(\"selfRegistration\", \"selfRegNotAllowed\", this);\n         }\n         add(selfRegFrag);\n     }\n \n     private String[] authenticate(final String userId, final String password) {\n         // 1. Set provided credentials to check\n-        PreemptiveAuthHttpRequestFactory requestFactory =\n-                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n-                getRequestFactory());\n-        ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(\n-                requestFactory.getAuthScope(),\n-                new UsernamePasswordCredentials(userId, password));\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n+                .getRequestFactory());\n+        ((DefaultHttpClient) requestFactory.getHttpClient()).getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(), new UsernamePasswordCredentials(userId, password));\n \n         // 2. Search authorizations for user specified by credentials\n         String[] entitlements = null;\n         try {\n-            entitlements = restTemplate.getForObject(\n-                    baseURL + \"auth/entitlements.json\", String[].class);\n+            entitlements = restTemplate.getForObject(baseURL + \"auth/entitlements.json\", String[].class);\n         } catch (HttpClientErrorException e) {\n             LOG.error(\"While fetching user's entitlements\", e);\n         }\n@@ -211,19 +193,19 @@ private String[] authenticate(final String userId, final String password) {\n     private boolean isSelfRegistrationAllowed() {\n         Boolean result = null;\n         try {\n-            result = restTemplate.getForObject(\n-                    baseURL + \"user/request/create/allowed\", Boolean.class);\n+            result = restTemplate.getForObject(baseURL + \"user/request/create/allowed\", Boolean.class);\n         } catch (HttpClientErrorException e) {\n             LOG.error(\"While seeking if self registration is allowed\", e);\n         }\n \n-        return result == null ? false : result.booleanValue();\n+        return result == null\n+                ? false\n+                : result.booleanValue();\n     }\n \n     private String getCoreVersion() {\n-        PreemptiveAuthHttpRequestFactory requestFactory =\n-                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n-                getRequestFactory());\n+        PreemptiveAuthHttpRequestFactory requestFactory = ((PreemptiveAuthHttpRequestFactory) restTemplate\n+                .getRequestFactory());\n \n         String version = \"\";\n         try {\n@@ -255,8 +237,7 @@ public String getDisplayValue(final Locale locale) {\n             }\n         }\n \n-        public LocaleDropDown(final String id,\n-                final List<Locale> supportedLocales) {\n+        public LocaleDropDown(final String id, final List<Locale> supportedLocales) {\n \n             super(id, supportedLocales);\n "},{"sha":"bd16a0227a4e14ef83df2963c3a604a9c24220d2","filename":"console/src/main/java/org/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":7,"deletions":16,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -41,16 +41,12 @@ public class MembershipModalPage extends BaseModalPage {\n \n     private AjaxButton submit;\n \n-    public MembershipModalPage(\n-            final PageReference pageRef,\n-            final ModalWindow window,\n-            final MembershipTO membershipTO,\n+    public MembershipModalPage(final PageReference pageRef, final ModalWindow window, final MembershipTO membershipTO,\n             final boolean templateMode) {\n \n         final Form form = new Form(\"MembershipForm\");\n \n-        final UserTO userTO =\n-                ((UserModalPage) pageRef.getPage()).getUserTO();\n+        final UserTO userTO = ((UserModalPage) pageRef.getPage()).getUserTO();\n \n         form.setModel(new CompoundPropertyModel(membershipTO));\n \n@@ -59,8 +55,7 @@ public MembershipModalPage(\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(\n-                    final AjaxRequestTarget target, final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 userTO.removeMembership(membershipTO);\n                 userTO.addMembership(membershipTO);\n@@ -71,8 +66,7 @@ protected void onSubmit(\n             }\n \n             @Override\n-            protected void onError(\n-                    final AjaxRequestTarget target, final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n@@ -81,16 +75,14 @@ protected void onError(\n         String allowedRoles = userTO.getId() == 0\n                 ? xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\")\n                 : xmlRolesReader.getAllAllowedRoles(\"Users\", \"update\");\n-        MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n-                allowedRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, allowedRoles);\n \n         form.add(submit);\n \n         //--------------------------------\n         // Attributes panel\n         //--------------------------------\n-        form.add(new AttributesPanel(\"attributes\", membershipTO, form,\n-                templateMode));\n+        form.add(new AttributesPanel(\"attributes\", membershipTO, form, templateMode));\n         //--------------------------------\n \n         //--------------------------------\n@@ -102,8 +94,7 @@ protected void onError(\n         //--------------------------------\n         // Virtual attributes container\n         //--------------------------------\n-        form.add(new VirtualAttributesPanel(\"virtualAttributes\", membershipTO,\n-                templateMode));\n+        form.add(new VirtualAttributesPanel(\"virtualAttributes\", membershipTO, templateMode));\n         //--------------------------------\n \n         add(form);"},{"sha":"33e3b6543dee39ebd4ec840a8b980ef57a2f304d","filename":"console/src/main/java/org/syncope/console/pages/NotificationModalPage.java","status":"modified","additions":10,"deletions":18,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -49,13 +49,10 @@ class NotificationModalPage extends BaseModalPage {\n     @SpringBean\n     private NotificationRestClient restClient;\n \n-    public NotificationModalPage(final PageReference callPageRef,\n-            final ModalWindow window,\n-            final NotificationTO notificationTO,\n-            final boolean createFlag) {\n+    public NotificationModalPage(final PageReference callPageRef, final ModalWindow window,\n+            final NotificationTO notificationTO, final boolean createFlag) {\n \n-        Form form = new Form(\"form\", new CompoundPropertyModel(\n-                notificationTO));\n+        Form form = new Form(\"form\", new CompoundPropertyModel(notificationTO));\n         form.setModel(new CompoundPropertyModel(notificationTO));\n \n         final AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\"sender\", getString(\"sender\"),\n@@ -91,18 +88,16 @@ public NotificationModalPage(final PageReference callPageRef,\n         final UserSearchPanel recipients = new UserSearchPanel(\"recipients\", notificationTO.getRecipients());\n         form.add(recipients);\n \n-        final AjaxCheckBoxPanel selfAsRecipient = new AjaxCheckBoxPanel(\"selfAsRecipient\", getString(\"selfAsRecipient\"),\n-                new PropertyModel(notificationTO, \"selfAsRecipient\"));\n+        final AjaxCheckBoxPanel selfAsRecipient = new AjaxCheckBoxPanel(\"selfAsRecipient\",\n+                getString(\"selfAsRecipient\"), new PropertyModel(notificationTO, \"selfAsRecipient\"));\n         form.add(selfAsRecipient);\n \n-        AjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new Model<String>(getString(\"submit\"))) {\n+        AjaxButton submit = new IndicatingAjaxButton(\"apply\", new Model<String>(getString(\"submit\"))) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 notificationTO.setAbout(about.buildSearchCond());\n                 notificationTO.setRecipients(recipients.buildSearchCond());\n@@ -115,8 +110,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n                     }\n                     info(getString(\"operation_succeded\"));\n \n-                    Configuration callerPage =\n-                            (Configuration) callPageRef.getPage();\n+                    Configuration callerPage = (Configuration) callPageRef.getPage();\n                     callerPage.setModalResult(true);\n \n                     window.close(target);\n@@ -127,8 +121,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n@@ -137,8 +130,7 @@ protected void onError(final AjaxRequestTarget target,\n         String allowedRoles = createFlag\n                 ? xmlRolesReader.getAllAllowedRoles(\"Notification\", \"create\")\n                 : xmlRolesReader.getAllAllowedRoles(\"Notification\", \"update\");\n-        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n-                allowedRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, allowedRoles);\n \n         form.add(submit);\n "},{"sha":"d49e712dd64b006196f5af2eea536ab6abc51a3b","filename":"console/src/main/java/org/syncope/console/pages/NotificationTaskModalPage.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -38,8 +38,7 @@ public NotificationTaskModalPage(final TaskTO taskTO) {\n         sender.setEnabled(false);\n         profile.add(sender);\n \n-        final ListMultipleChoice<String> recipients =\n-                new ListMultipleChoice<String>(\"recipients\",\n+        final ListMultipleChoice<String> recipients = new ListMultipleChoice<String>(\"recipients\",\n                 new ArrayList<String>(((NotificationTaskTO) taskTO).getRecipients()));\n         recipients.setMaxRows(5);\n         recipients.setEnabled(false);"},{"sha":"010ef4f18a70d98703c0fb02844dfefa210187dc","filename":"console/src/main/java/org/syncope/console/pages/PolicyModalPage.java","status":"modified","additions":13,"deletions":27,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -51,8 +51,7 @@\n     @SpringBean\n     private PolicyRestClient policyRestClient;\n \n-    public PolicyModalPage(\n-            final ModalWindow window, final T policyTO) {\n+    public PolicyModalPage(final ModalWindow window, final T policyTO) {\n \n         super();\n \n@@ -63,15 +62,13 @@ public PolicyModalPage(\n         final AjaxTextFieldPanel policyid = new AjaxTextFieldPanel(\"id\", \"id\",\n                 new PropertyModel<String>(policyTO, \"id\"));\n         policyid.setEnabled(false);\n-        policyid.setStyleShet(\n-                \"ui-widget-content ui-corner-all short_fixedsize\");\n+        policyid.setStyleShet(\"ui-widget-content ui-corner-all short_fixedsize\");\n         form.add(policyid);\n \n         final AjaxTextFieldPanel description = new AjaxTextFieldPanel(\"description\", \"description\",\n                 new PropertyModel<String>(policyTO, \"description\"));\n         description.addRequiredLabel();\n-        description.setStyleShet(\n-                \"ui-widget-content ui-corner-all medium_dynamicsize\");\n+        description.setStyleShet(\"ui-widget-content ui-corner-all medium_dynamicsize\");\n         form.add(description);\n \n         final AjaxDropDownChoicePanel<PolicyType> type = new AjaxDropDownChoicePanel<PolicyType>(\"type\", \"type\",\n@@ -80,20 +77,17 @@ public PolicyModalPage(\n         switch (policyTO.getType()) {\n             case GLOBAL_ACCOUNT:\n             case ACCOUNT:\n-                type.setChoices(Arrays.asList(new PolicyType[]{\n-                            PolicyType.GLOBAL_ACCOUNT, PolicyType.ACCOUNT}));\n+                type.setChoices(Arrays.asList(new PolicyType[] { PolicyType.GLOBAL_ACCOUNT, PolicyType.ACCOUNT }));\n                 break;\n \n             case GLOBAL_PASSWORD:\n             case PASSWORD:\n-                type.setChoices(Arrays.asList(new PolicyType[]{\n-                            PolicyType.GLOBAL_PASSWORD, PolicyType.PASSWORD}));\n+                type.setChoices(Arrays.asList(new PolicyType[] { PolicyType.GLOBAL_PASSWORD, PolicyType.PASSWORD }));\n                 break;\n \n             case GLOBAL_SYNC:\n             case SYNC:\n-                type.setChoices(Arrays.asList(new PolicyType[]{\n-                            PolicyType.GLOBAL_SYNC, PolicyType.SYNC}));\n+                type.setChoices(Arrays.asList(new PolicyType[] { PolicyType.GLOBAL_SYNC, PolicyType.SYNC }));\n \n             default:\n         }\n@@ -107,15 +101,12 @@ public PolicyModalPage(\n \n         form.add(new PolicyBeanPanel(\"panel\", policy));\n \n-        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new ResourceModel(\"apply\")) {\n+        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\"apply\", new ResourceModel(\"apply\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(\n-                    final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 setPolicySpecification(policyTO, policy);\n \n@@ -136,8 +127,7 @@ protected void onSubmit(\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(getPage().get(\"feedback\"));\n             }\n@@ -175,26 +165,22 @@ private AbstractPolicySpec getPolicySpecification(final PolicyTO policyTO) {\n         return spec;\n     }\n \n-    private void setPolicySpecification(\n-            final PolicyTO policyTO, final AbstractPolicySpec specification) {\n+    private void setPolicySpecification(final PolicyTO policyTO, final AbstractPolicySpec specification) {\n \n         switch (policyTO.getType()) {\n             case GLOBAL_ACCOUNT:\n             case ACCOUNT:\n-                ((AccountPolicyTO) policyTO).setSpecification(\n-                        (AccountPolicySpec) specification);\n+                ((AccountPolicyTO) policyTO).setSpecification((AccountPolicySpec) specification);\n                 break;\n \n             case GLOBAL_PASSWORD:\n             case PASSWORD:\n-                ((PasswordPolicyTO) policyTO).setSpecification(\n-                        (PasswordPolicySpec) specification);\n+                ((PasswordPolicyTO) policyTO).setSpecification((PasswordPolicySpec) specification);\n                 break;\n \n             case GLOBAL_SYNC:\n             case SYNC:\n-                ((SyncPolicyTO) policyTO).setSpecification(\n-                        (SyncPolicySpec) specification);\n+                ((SyncPolicyTO) policyTO).setSpecification((SyncPolicySpec) specification);\n \n             default:\n         }"},{"sha":"42bb9c9e0074861dd0ffad38a7c7b05034190ef0","filename":"console/src/main/java/org/syncope/console/pages/ReportExecResultDownloadModalPage.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportExecResultDownloadModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportExecResultDownloadModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportExecResultDownloadModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -32,11 +32,9 @@ public class ReportExecResultDownloadModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = 3163146190501510888L;\n \n-    public ReportExecResultDownloadModalPage(final ModalWindow window,\n-            final PageReference callerPageRef) {\n+    public ReportExecResultDownloadModalPage(final ModalWindow window, final PageReference callerPageRef) {\n \n-        final AjaxDropDownChoicePanel<ReportExecExportFormat> format =\n-                new AjaxDropDownChoicePanel<ReportExecExportFormat>(\n+        final AjaxDropDownChoicePanel<ReportExecExportFormat> format = new AjaxDropDownChoicePanel<ReportExecExportFormat>(\n                 \"format\", \"format\", new Model<ReportExecExportFormat>());\n \n         format.setChoices(Arrays.asList(ReportExecExportFormat.values()));\n@@ -51,23 +49,19 @@ public Object getDisplayValue(final ReportExecExportFormat object) {\n             }\n \n             @Override\n-            public String getIdValue(final ReportExecExportFormat object,\n-                    final int index) {\n+            public String getIdValue(final ReportExecExportFormat object, final int index) {\n \n                 return object.name();\n             }\n         });\n \n-        format.getField().add(new AjaxFormComponentUpdatingBehavior(\n-                \"onchange\") {\n+        format.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            private static final long serialVersionUID =\n-                    -1107858522700306810L;\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                ((ReportModalPage) callerPageRef.getPage()).setExportFormat(\n-                        format.getField().getInput());\n+                ((ReportModalPage) callerPageRef.getPage()).setExportFormat(format.getField().getInput());\n                 window.close(target);\n             }\n         });"},{"sha":"2f6ded0eace07c96062556e5ef55d29a1f1bf545","filename":"console/src/main/java/org/syncope/console/pages/ReportModalPage.java","status":"modified","additions":46,"deletions":58,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -119,8 +119,8 @@ public ReportModalPage(final ModalWindow window, final ReportTO reportTO, final\n         setupProfile();\n         setupExecutions();\n \n-        final CrontabContainer crontab = new CrontabContainer(\"crontab\",\n-                new PropertyModel<String>(reportTO, \"cronExpression\"), reportTO.getCronExpression());\n+        final CrontabContainer crontab = new CrontabContainer(\"crontab\", new PropertyModel<String>(reportTO,\n+                \"cronExpression\"), reportTO.getCronExpression());\n         form.add(crontab);\n \n         final IndicatingAjaxButton submit = new IndicatingAjaxButton(\"apply\", new ResourceModel(\"apply\")) {\n@@ -131,7 +131,8 @@ public ReportModalPage(final ModalWindow window, final ReportTO reportTO, final\n             protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n                 ReportTO reportTO = (ReportTO) form.getModelObject();\n                 reportTO.setCronExpression(StringUtils.hasText(reportTO.getCronExpression())\n-                        ? crontab.getCronExpression() : null);\n+                        ? crontab.getCronExpression()\n+                        : null);\n \n                 try {\n                     if (reportTO.getId() > 0) {\n@@ -156,13 +157,12 @@ protected void onError(final AjaxRequestTarget target, final Form form) {\n             }\n         };\n \n-\n         if (reportTO.getId() > 0) {\n-            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n-                    xmlRolesReader.getAllAllowedRoles(\"Reports\", \"update\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, xmlRolesReader.getAllAllowedRoles(\"Reports\",\n+                    \"update\"));\n         } else {\n-            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n-                    xmlRolesReader.getAllAllowedRoles(\"Reports\", \"create\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, xmlRolesReader.getAllAllowedRoles(\"Reports\",\n+                    \"create\"));\n         }\n \n         form.add(submit);\n@@ -208,16 +208,16 @@ public void onClose(final AjaxRequestTarget target) {\n         final Label idLabel = new Label(\"idLabel\", new ResourceModel(\"id\"));\n         profile.add(idLabel);\n \n-        final AjaxTextFieldPanel id = new AjaxTextFieldPanel(\"id\", getString(\"id\"),\n-                new PropertyModel<String>(reportTO, \"id\"));\n+        final AjaxTextFieldPanel id = new AjaxTextFieldPanel(\"id\", getString(\"id\"), new PropertyModel<String>(reportTO,\n+                \"id\"));\n         id.setEnabled(false);\n         profile.add(id);\n \n         final Label nameLabel = new Label(\"nameLabel\", new ResourceModel(\"name\"));\n         profile.add(nameLabel);\n \n-        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"),\n-                new PropertyModel<String>(reportTO, \"name\"));\n+        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"), new PropertyModel<String>(\n+                reportTO, \"name\"));\n         profile.add(name);\n \n         final AjaxTextFieldPanel lastExec = new AjaxTextFieldPanel(\"lastExec\", getString(\"lastExec\"),\n@@ -234,8 +234,7 @@ public void onClose(final AjaxRequestTarget target) {\n                 new PropertyModel<List<? extends ReportletConf>>(reportTO, \"reportletConfs\"),\n                 new IChoiceRenderer<ReportletConf>() {\n \n-                    private static final long serialVersionUID =\n-                            1048000918946220007L;\n+                    private static final long serialVersionUID = 1048000918946220007L;\n \n                     @Override\n                     public Object getDisplayValue(final ReportletConf object) {\n@@ -275,8 +274,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         public Page createPage() {\n                             modalReportletConfOldName = reportlets.getSelectedItem().getName();\n                             modalReportletConf = null;\n-                            return new ReportletConfModalPage(reportlets.getSelectedItem(),\n-                                    reportletConfWin, ReportModalPage.this.getPageReference());\n+                            return new ReportletConfModalPage(reportlets.getSelectedItem(), reportletConfWin,\n+                                    ReportModalPage.this.getPageReference());\n                         }\n                     });\n                     reportletConfWin.show(target);\n@@ -297,8 +296,8 @@ public void onClick(final AjaxRequestTarget target) {\n                     public Page createPage() {\n                         modalReportletConfOldName = null;\n                         modalReportletConf = null;\n-                        return new ReportletConfModalPage(null,\n-                                reportletConfWin, ReportModalPage.this.getPageReference());\n+                        return new ReportletConfModalPage(null, reportletConfWin, ReportModalPage.this\n+                                .getPageReference());\n                     }\n                 });\n                 reportletConfWin.show(target);\n@@ -320,8 +319,7 @@ protected IAjaxCallDecorator getAjaxCallDecorator() {\n \n                     @Override\n                     public CharSequence preDecorateScript(final CharSequence script) {\n-                        return script\n-                                + reportlets.getEditOnClickJS();\n+                        return script + reportlets.getEditOnClickJS();\n                     }\n                 };\n             }\n@@ -342,10 +340,8 @@ protected IAjaxCallDecorator getAjaxCallDecorator() {\n \n                     @Override\n                     public CharSequence preDecorateScript(final CharSequence script) {\n-                        return \"if (confirm('\" + getString(\"confirmDelete\") + \"')) {\"\n-                                + script\n-                                + reportlets.getRemoveOnClickJS()\n-                                + \"}\";\n+                        return \"if (confirm('\" + getString(\"confirmDelete\") + \"')) {\" + script\n+                                + reportlets.getRemoveOnClickJS() + \"}\";\n                     }\n                 };\n             }\n@@ -370,13 +366,12 @@ private void setupExecutions() {\n         reportExecExportWin.setInitialWidth(EXEC_EXPORT_WIN_WIDTH);\n         reportExecExportWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n-            private static final long serialVersionUID =\n-                    8804221891699487139L;\n+            private static final long serialVersionUID = 8804221891699487139L;\n \n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n-                AjaxExportDownloadBehavior behavior = new AjaxExportDownloadBehavior(\n-                        ReportModalPage.this.exportFormat, ReportModalPage.this.exportExecId);\n+                AjaxExportDownloadBehavior behavior = new AjaxExportDownloadBehavior(ReportModalPage.this.exportFormat,\n+                        ReportModalPage.this.exportExecId);\n                 executions.add(behavior);\n                 behavior.initiate(target);\n             }\n@@ -398,9 +393,7 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<ReportExecTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<ReportExecTO>> cellItem, final String componentId,\n                     final IModel<ReportExecTO> model) {\n \n                 final ReportExecTO taskExecutionTO = model.getObject();\n@@ -424,37 +417,33 @@ public Page createPage() {\n                         });\n                         reportExecMessageWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Reports\", \"read\",\n-                        StringUtils.hasText(model.getObject().getMessage()));\n+                }, ActionLink.ActionType.EDIT, \"Reports\", \"read\", StringUtils.hasText(model.getObject().getMessage()));\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        reportExecExportWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n-\n-                                    private static final long serialVersionUID = -7834632442532690940L;\n-\n-                                    @Override\n-                                    public Page createPage() {\n-                                        ReportModalPage.this.exportExecId = model.getObject().getId();\n-                                        return new ReportExecResultDownloadModalPage(\n-                                                reportExecExportWin, ReportModalPage.this.getPageReference());\n-                                    }\n-                                });\n+                        reportExecExportWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                ReportModalPage.this.exportExecId = model.getObject().getId();\n+                                return new ReportExecResultDownloadModalPage(reportExecExportWin, ReportModalPage.this\n+                                        .getPageReference());\n+                            }\n+                        });\n                         reportExecExportWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EXPORT, \"Reports\", \"read\",\n-                        ReportExecStatus.SUCCESS.name().equals(model.getObject().getStatus()));\n+                }, ActionLink.ActionType.EXPORT, \"Reports\", \"read\", ReportExecStatus.SUCCESS.name().equals(\n+                        model.getObject().getStatus()));\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -477,8 +466,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable table =\n-                new AjaxFallbackDefaultDataTable(\"executionsTable\", columns,\n+        final AjaxFallbackDefaultDataTable table = new AjaxFallbackDefaultDataTable(\"executionsTable\", columns,\n                 new ReportExecutionsProvider(reportTO), 10);\n         executions.add(table);\n     }\n@@ -506,8 +494,7 @@ public ReportExecutionsProvider(final ReportTO reportTO) {\n         }\n \n         @Override\n-        public Iterator<ReportExecTO> iterator(final int first,\n-                final int count) {\n+        public Iterator<ReportExecTO> iterator(final int first, final int count) {\n \n             List<ReportExecTO> list = reportTO.getExecutions();\n \n@@ -555,8 +542,7 @@ public AjaxExportDownloadBehavior(final String exportFormat, final long exportEx\n \n         private void createResourceStream() {\n             StringBuilder urlBuilder = new StringBuilder();\n-            urlBuilder.append(baseURL).\n-                    append(\"report/execution/export/\").append(exportExecId);\n+            urlBuilder.append(baseURL).append(\"report/execution/export/\").append(exportExecId);\n             if (exportFormat != null) {\n                 urlBuilder.append(\"?fmt=\").append(exportFormat);\n             }\n@@ -576,7 +562,9 @@ private void createResourceStream() {\n         @Override\n         protected String getFileName() {\n             createResourceStream();\n-            return stream == null ? null : stream.getFilename();\n+            return stream == null\n+                    ? null\n+                    : stream.getFilename();\n         }\n \n         @Override"},{"sha":"0ee69f07040d57a35230ebf497bdb7e861c47c9a","filename":"console/src/main/java/org/syncope/console/pages/ReportletConfModalPage.java","status":"modified","additions":51,"deletions":51,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -72,8 +72,8 @@ public class ReportletConfModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = 3910027601200382958L;\n \n-    private static final String[] EXCLUDE_PROPERTIES = new String[]{\n-        \"serialVersionUID\", \"class\", \"name\", \"reportletClassName\"};\n+    private static final String[] EXCLUDE_PROPERTIES = new String[] { \"serialVersionUID\", \"class\", \"name\",\n+            \"reportletClassName\" };\n \n     @SpringBean\n     private ReportRestClient restClient;\n@@ -89,8 +89,8 @@ public class ReportletConfModalPage extends BaseModalPage {\n \n     private ListView<String> propView;\n \n-    public ReportletConfModalPage(final ReportletConf reportletConf,\n-            final ModalWindow window, final PageReference callerPageRef) {\n+    public ReportletConfModalPage(final ReportletConf reportletConf, final ModalWindow window,\n+            final PageReference callerPageRef) {\n \n         this.reportletConf = reportletConf;\n \n@@ -101,38 +101,40 @@ public ReportletConfModalPage(final ReportletConf reportletConf,\n         propertiesContainer.setOutputMarkupId(true);\n         form.add(propertiesContainer);\n \n-        name = new AjaxTextFieldPanel(\"name\", \"name\",\n-                this.reportletConf == null ? new Model() : new PropertyModel<String>(this.reportletConf, \"name\"));\n+        name = new AjaxTextFieldPanel(\"name\", \"name\", this.reportletConf == null\n+                ? new Model()\n+                : new PropertyModel<String>(this.reportletConf, \"name\"));\n         name.setOutputMarkupId(true);\n         name.addRequiredLabel();\n         form.add(name);\n \n-        final AjaxDropDownChoicePanel<String> reportletClass = new AjaxDropDownChoicePanel<String>(\n-                \"reportletClass\", \"reportletClass\", new IModel<String>() {\n+        final AjaxDropDownChoicePanel<String> reportletClass = new AjaxDropDownChoicePanel<String>(\"reportletClass\",\n+                \"reportletClass\", new IModel<String>() {\n \n-            private static final long serialVersionUID = -2316468110411802130L;\n+                    private static final long serialVersionUID = -2316468110411802130L;\n \n-            @Override\n-            public String getObject() {\n-                return ReportletConfModalPage.this.reportletConf == null\n-                        ? null : ReportletConfModalPage.this.reportletConf.getClass().getName();\n-            }\n+                    @Override\n+                    public String getObject() {\n+                        return ReportletConfModalPage.this.reportletConf == null\n+                                ? null\n+                                : ReportletConfModalPage.this.reportletConf.getClass().getName();\n+                    }\n \n-            @Override\n-            public void setObject(final String object) {\n-                try {\n-                    Class reportletClass = Class.forName(object);\n-                    ReportletConfModalPage.this.reportletConf = (ReportletConf) reportletClass.newInstance();\n-                    propertiesContainer.replace(buildPropView());\n-                } catch (Exception e) {\n-                    LOG.error(\"Cannot find or initialize {}\", object, e);\n-                }\n-            }\n+                    @Override\n+                    public void setObject(final String object) {\n+                        try {\n+                            Class reportletClass = Class.forName(object);\n+                            ReportletConfModalPage.this.reportletConf = (ReportletConf) reportletClass.newInstance();\n+                            propertiesContainer.replace(buildPropView());\n+                        } catch (Exception e) {\n+                            LOG.error(\"Cannot find or initialize {}\", object, e);\n+                        }\n+                    }\n \n-            @Override\n-            public void detach() {\n-            }\n-        });\n+                    @Override\n+                    public void detach() {\n+                    }\n+                });\n         reportletClass.setStyleShet(\"long_dynamicsize\");\n         reportletClass.setChoices(restClient.getReportletConfClasses());\n         ((DropDownChoice) reportletClass.getField()).setNullValid(true);\n@@ -158,8 +160,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                final BeanWrapper wrapper =\n-                        PropertyAccessorFactory.forBeanPropertyAccess(ReportletConfModalPage.this.reportletConf);\n+                final BeanWrapper wrapper = PropertyAccessorFactory\n+                        .forBeanPropertyAccess(ReportletConfModalPage.this.reportletConf);\n                 wrapper.setPropertyValue(\"name\", name.getField().getInput());\n \n                 // Iterate over properties in order to find UserSearchPanel instances and manually update\n@@ -174,8 +176,8 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     }\n                 }\n \n-                ((ReportModalPage) callerPageRef.getPage()).setModalReportletConf(\n-                        ReportletConfModalPage.this.reportletConf);\n+                ((ReportModalPage) callerPageRef.getPage())\n+                        .setModalReportletConf(ReportletConfModalPage.this.reportletConf);\n                 window.close(target);\n             }\n \n@@ -192,16 +194,15 @@ private FieldPanel buildSinglePanel(final Class<?> type, final String fieldName,\n         PropertyModel model = new PropertyModel(ReportletConfModalPage.this.reportletConf, fieldName);\n         if (Boolean.TYPE.equals(type) || Boolean.class.equals(type)) {\n             result = new AjaxCheckBoxPanel(id, fieldName, model);\n-        } else if (Integer.TYPE.equals(type) || Integer.class.equals(type)\n-                || Long.TYPE.equals(type) || Long.class.equals(type)\n-                || Double.TYPE.equals(type) || Double.class.equals(type)) {\n+        } else if (Integer.TYPE.equals(type) || Integer.class.equals(type) || Long.TYPE.equals(type)\n+                || Long.class.equals(type) || Double.TYPE.equals(type) || Double.class.equals(type)) {\n \n             result = new AjaxNumberFieldPanel(id, fieldName, model, ClassUtils.resolvePrimitiveIfNecessary(type));\n         } else if (Date.class.equals(type)) {\n             result = new DateTimeFieldPanel(id, fieldName, model, SyncopeConstants.DEFAULT_DATE_PATTERN);\n         } else if (type.isEnum()) {\n-            result = new AjaxDropDownChoicePanel(id, fieldName, model).setChoices(\n-                    Arrays.asList(type.getEnumConstants()));\n+            result = new AjaxDropDownChoicePanel(id, fieldName, model).setChoices(Arrays\n+                    .asList(type.getEnumConstants()));\n         }\n \n         // treat as String if nothing matched above\n@@ -247,15 +248,15 @@ protected void populateItem(final ListItem<String> item) {\n                 try {\n                     field = ReportletConfModalPage.this.reportletConf.getClass().getDeclaredField(fieldName);\n                 } catch (Exception e) {\n-                    LOG.error(\"Could not find field {} in class {}\",\n-                            new Object[]{fieldName, ReportletConfModalPage.this.reportletConf.getClass(), e});\n+                    LOG.error(\"Could not find field {} in class {}\", new Object[] { fieldName,\n+                            ReportletConfModalPage.this.reportletConf.getClass(), e });\n                 }\n                 if (field == null) {\n                     return;\n                 }\n \n-                BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(\n-                        ReportletConfModalPage.this.reportletConf);\n+                BeanWrapper wrapper = PropertyAccessorFactory\n+                        .forBeanPropertyAccess(ReportletConfModalPage.this.reportletConf);\n \n                 Panel panel;\n \n@@ -270,8 +271,7 @@ protected void populateItem(final ListItem<String> item) {\n \n                     Class listItemType = String.class;\n                     if (field.getGenericType() instanceof ParameterizedType) {\n-                        listItemType =\n-                                (Class) ((ParameterizedType) field.getGenericType()).getActualTypeArguments()[0];\n+                        listItemType = (Class) ((ParameterizedType) field.getGenericType()).getActualTypeArguments()[0];\n                     }\n \n                     FormAttributeField annotation = field.getAnnotation(FormAttributeField.class);\n@@ -320,20 +320,20 @@ protected void populateItem(final ListItem<String> item) {\n                         }\n \n                         panel = new AjaxPalettePanel(\"value\", new PropertyModel<List<String>>(\n-                                ReportletConfModalPage.this.reportletConf, fieldName),\n-                                new ListModel<String>(choices), true);\n+                                ReportletConfModalPage.this.reportletConf, fieldName), new ListModel<String>(choices),\n+                                true);\n                     } else if (listItemType.isEnum()) {\n-                        panel = new CheckBoxMultipleChoiceFieldPanel(\"value\",\n-                                new PropertyModel(ReportletConfModalPage.this.reportletConf, fieldName),\n-                                new ListModel(Arrays.asList(listItemType.getEnumConstants())));\n+                        panel = new CheckBoxMultipleChoiceFieldPanel(\"value\", new PropertyModel(\n+                                ReportletConfModalPage.this.reportletConf, fieldName), new ListModel(Arrays\n+                                .asList(listItemType.getEnumConstants())));\n                     } else {\n                         if (((List) wrapper.getPropertyValue(fieldName)).isEmpty()) {\n                             ((List) wrapper.getPropertyValue(fieldName)).add(null);\n                         }\n \n-                        panel = new MultiValueSelectorPanel(\"value\",\n-                                new PropertyModel<List>(ReportletConfModalPage.this.reportletConf, fieldName),\n-                                buildSinglePanel(field.getType(), fieldName, \"panel\"));\n+                        panel = new MultiValueSelectorPanel(\"value\", new PropertyModel<List>(\n+                                ReportletConfModalPage.this.reportletConf, fieldName), buildSinglePanel(\n+                                field.getType(), fieldName, \"panel\"));\n                     }\n                 } else {\n                     panel = buildSinglePanel(field.getType(), fieldName, \"value\");"},{"sha":"ff1a5120b63ffad4d70a6eda73c74df27f0d2322","filename":"console/src/main/java/org/syncope/console/pages/Reports.java","status":"modified","additions":31,"deletions":61,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReports.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -96,27 +96,18 @@ private void setupReport() {\n         reportContainer = new WebMarkupContainer(\"reportContainer\");\n         setWindowClosedCallback(window, reportContainer);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                reportContainer, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"Reports\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(reportContainer, RENDER, xmlRolesReader.getAllAllowedRoles(\n+                \"Reports\", \"list\"));\n \n-        paginatorRows = prefMan.getPaginatorRows(getRequest(),\n-                Constants.PREF_REPORT_PAGINATOR_ROWS);\n+        paginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_REPORT_PAGINATOR_ROWS);\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n-        columns.add(new PropertyColumn(new ResourceModel(\"id\"),\n-                \"id\", \"id\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"name\"),\n-                \"name\", \"name\"));\n-        columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n-        columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"latestExecStatus\"),\n-                \"latestExecStatus\", \"latestExecStatus\"));\n-        columns.add(new AbstractColumn<ReportTO>(\n-                new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new AbstractColumn<ReportTO>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -126,34 +117,27 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<ReportTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<ReportTO>> cellItem, final String componentId,\n                     final IModel<ReportTO> model) {\n \n                 final ReportTO reportTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n \n                         window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n                             @Override\n                             public Page createPage() {\n-                                return new ReportModalPage(\n-                                        window, reportTO,\n-                                        Reports.this.getPageReference());\n+                                return new ReportModalPage(window, reportTO, Reports.this.getPageReference());\n                             }\n                         });\n \n@@ -163,8 +147,7 @@ public Page createPage() {\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -182,8 +165,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -202,8 +184,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable reportTable =\n-                new AjaxFallbackDefaultDataTable(\"reportTable\", columns,\n+        final AjaxFallbackDefaultDataTable reportTable = new AjaxFallbackDefaultDataTable(\"reportTable\", columns,\n                 new ReportProvider(), paginatorRows);\n \n         reportContainer.add(reportTable);\n@@ -213,12 +194,10 @@ public void onClick(final AjaxRequestTarget target) {\n \n         Form paginatorForm = new Form(\"paginatorForm\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                paginatorForm, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"Reports\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(paginatorForm, RENDER, xmlRolesReader.getAllAllowedRoles(\"Reports\",\n+                \"list\"));\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"paginatorRows\"),\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n@@ -227,10 +206,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(),\n-                        getResponse(),\n-                        Constants.PREF_REPORT_PAGINATOR_ROWS,\n-                        String.valueOf(paginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_REPORT_PAGINATOR_ROWS, String\n+                        .valueOf(paginatorRows));\n                 reportTable.setItemsPerPage(paginatorRows);\n \n                 target.add(reportContainer);\n@@ -248,28 +225,25 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             public void onClick(final AjaxRequestTarget target) {\n                 window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                    private static final long serialVersionUID =\n-                            -7834632442532690940L;\n+                    private static final long serialVersionUID = -7834632442532690940L;\n \n                     @Override\n                     public Page createPage() {\n-                        return new ReportModalPage(window, new ReportTO(),\n-                                Reports.this.getPageReference());\n+                        return new ReportModalPage(window, new ReportTO(), Reports.this.getPageReference());\n                     }\n                 });\n \n                 window.show(target);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createLink, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"Reports\", \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createLink, RENDER, xmlRolesReader.getAllAllowedRoles(\"Reports\",\n+                \"create\"));\n \n         add(createLink);\n     }\n \n-    private class ReportProvider\n-            extends SortableDataProvider<ReportTO> {\n+    private class ReportProvider extends SortableDataProvider<ReportTO> {\n \n         private static final long serialVersionUID = -2311716167583335852L;\n \n@@ -278,16 +252,13 @@ public Page createPage() {\n         public ReportProvider() {\n             //Default sorting\n             setSort(\"key\", SortOrder.ASCENDING);\n-            comparator =\n-                    new SortableDataProviderComparator<ReportTO>(this);\n+            comparator = new SortableDataProviderComparator<ReportTO>(this);\n         }\n \n         @Override\n-        public Iterator<ReportTO> iterator(final int first,\n-                final int count) {\n+        public Iterator<ReportTO> iterator(final int first, final int count) {\n \n-            List<ReportTO> list = reportRestClient.list(\n-                    (first / paginatorRows) + 1, paginatorRows);\n+            List<ReportTO> list = reportRestClient.list((first / paginatorRows) + 1, paginatorRows);\n \n             Collections.sort(list, comparator);\n \n@@ -304,8 +275,7 @@ public IModel<ReportTO> model(final ReportTO configuration) {\n \n             return new AbstractReadOnlyModel<ReportTO>() {\n \n-                private static final long serialVersionUID =\n-                        4921104837546595602L;\n+                private static final long serialVersionUID = 4921104837546595602L;\n \n                 @Override\n                 public ReportTO getObject() {"},{"sha":"154e08e11ceab28168c32a2243fe1f17571cb0d1","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":11,"deletions":20,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -46,10 +46,7 @@ public class ResourceModalPage extends BaseModalPage {\n     @SpringBean\n     private ResourceRestClient resourceRestClient;\n \n-    public ResourceModalPage(\n-            final PageReference pageref,\n-            final ModalWindow window,\n-            final ResourceTO resourceTO,\n+    public ResourceModalPage(final PageReference pageref, final ModalWindow window, final ResourceTO resourceTO,\n             final boolean createFlag) {\n \n         super();\n@@ -81,17 +78,14 @@ public ResourceModalPage(\n         form.add(new ResourceSecurityPanel(\"security\", resourceTO));\n         //--------------------------------\n \n-        final AjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new ResourceModel(\"submit\", \"submit\")) {\n+        final AjaxButton submit = new IndicatingAjaxButton(\"apply\", new ResourceModel(\"submit\", \"submit\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(\n-                    final AjaxRequestTarget target, final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n-                final ResourceTO resourceTO =\n-                        (ResourceTO) form.getDefaultModelObject();\n+                final ResourceTO resourceTO = (ResourceTO) form.getDefaultModelObject();\n \n                 int accountIdCount = 0;\n \n@@ -102,9 +96,7 @@ protected void onSubmit(\n                 }\n \n                 if (accountIdCount == 0 || accountIdCount > 1) {\n-                    error(new ResourceModel(\n-                            \"accountIdValidation\", \"accountIdValidation\").\n-                            getObject());\n+                    error(new ResourceModel(\"accountIdValidation\", \"accountIdValidation\").getObject());\n                     target.add(feedbackPanel);\n                 } else {\n                     try {\n@@ -120,16 +112,14 @@ protected void onSubmit(\n \n                     } catch (Exception e) {\n                         LOG.error(\"Failuer managing resource {}\", resourceTO);\n-                        error(new ResourceModel(\"error\", \"error\").getObject()\n-                                + \":\" + e.getMessage());\n+                        error(new ResourceModel(\"error\", \"error\").getObject() + \":\" + e.getMessage());\n                         target.add(feedbackPanel);\n                     }\n                 }\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n@@ -138,9 +128,10 @@ protected void onError(final AjaxRequestTarget target,\n         form.add(submit);\n         add(form);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                submit, ENABLE, xmlRolesReader.getAllAllowedRoles(\n-                \"Resources\", createFlag ? \"create\" : \"update\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Resources\",\n+                createFlag\n+                        ? \"create\"\n+                        : \"update\"));\n     }\n \n     /**"},{"sha":"c9932944f8f977948bfe92cab2db3a3f7408c84c","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":92,"deletions":153,"changes":245,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -103,11 +103,8 @@ public Resources(final PageParameters parameters) {\n \n         add(feedbackPanel);\n \n-        resourcePaginatorRows = prefMan.getPaginatorRows(getRequest(),\n-                Constants.PREF_RESOURCES_PAGINATOR_ROWS);\n-        connectorPaginatorRows = prefMan.getPaginatorRows(\n-                getRequest(),\n-                Constants.PREF_CONNECTORS_PAGINATOR_ROWS);\n+        resourcePaginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_RESOURCES_PAGINATOR_ROWS);\n+        connectorPaginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_CONNECTORS_PAGINATOR_ROWS);\n \n         setupResources();\n         setupConnectors();\n@@ -116,17 +113,13 @@ public Resources(final PageParameters parameters) {\n     private void setupResources() {\n         List<IColumn> columns = new ArrayList<IColumn>();\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"name\"), \"name\", \"name\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"propagationPrimary\"),\n-                \"propagationPrimary\", \"propagationPrimary\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"propagationPriority\"),\n-                \"propagationPriority\", \"propagationPriority\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"propagationPrimary\"), \"propagationPrimary\",\n+                \"propagationPrimary\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"propagationPriority\"), \"propagationPriority\",\n+                \"propagationPriority\"));\n \n-        columns.add(new AbstractColumn<ResourceTO>(new ResourceModel(\"actions\",\n-                \"\")) {\n+        columns.add(new AbstractColumn<ResourceTO>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -136,48 +129,38 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<ResourceTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<ResourceTO>> cellItem, final String componentId,\n                     final IModel<ResourceTO> model) {\n                 final ResourceTO resourceTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n \n-                        editResourceWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        editResourceWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        ResourceModalPage form =\n-                                                new ResourceModalPage(\n-                                                Resources.this.getPageReference(),\n-                                                editResourceWin, resourceTO,\n-                                                false);\n-                                        return form;\n-                                    }\n-                                });\n+                            @Override\n+                            public Page createPage() {\n+                                ResourceModalPage form = new ResourceModalPage(Resources.this.getPageReference(),\n+                                        editResourceWin, resourceTO, false);\n+                                return form;\n+                            }\n+                        });\n \n                         editResourceWin.show(target);\n                     }\n                 }, ActionLink.ActionType.EDIT, \"Resources\", \"read\");\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -189,8 +172,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         } catch (SyncopeClientCompositeErrorException e) {\n                             error(getString(\"operation_error\"));\n \n-                            LOG.error(\"While deleting resource \"\n-                                    + resourceTO.getName(), e);\n+                            LOG.error(\"While deleting resource \" + resourceTO.getName(), e);\n                         }\n \n                         target.add(feedbackPanel);\n@@ -202,8 +184,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable table =\n-                new AjaxFallbackDefaultDataTable(\"resourceDatatable\", columns,\n+        final AjaxFallbackDefaultDataTable table = new AjaxFallbackDefaultDataTable(\"resourceDatatable\", columns,\n                 new ResourcesProvider(), resourcePaginatorRows);\n \n         resourceContainer = new WebMarkupContainer(\"resourceContainer\");\n@@ -225,60 +206,50 @@ public void onClick(final AjaxRequestTarget target) {\n         editResourceWin.setInitialWidth(WIN_WIDTH);\n         editResourceWin.setCookieName(\"edit-res-modal\");\n \n-        AjaxLink createResourceLink =\n-                new IndicatingAjaxLink(\"createResourceLink\") {\n-\n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n+        AjaxLink createResourceLink = new IndicatingAjaxLink(\"createResourceLink\") {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                        createResourceWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                createResourceWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        final ResourceModalPage windows =\n-                                                new ResourceModalPage(\n-                                                Resources.this.getPageReference(),\n-                                                editResourceWin,\n-                                                new ResourceTO(), true);\n-                                        return windows;\n-                                    }\n-                                });\n+                    private static final long serialVersionUID = -7834632442532690940L;\n \n-                        createResourceWin.show(target);\n+                    @Override\n+                    public Page createPage() {\n+                        final ResourceModalPage windows = new ResourceModalPage(Resources.this.getPageReference(),\n+                                editResourceWin, new ResourceTO(), true);\n+                        return windows;\n                     }\n-                };\n+                });\n+\n+                createResourceWin.show(target);\n+            }\n+        };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createResourceLink, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Resources\", \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createResourceLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Resources\", \"create\"));\n \n         add(createResourceLink);\n \n         final Form paginatorForm = new Form(\"resourcePaginatorForm\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                paginatorForm, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"Resources\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(paginatorForm, RENDER, xmlRolesReader.getAllAllowedRoles(\n+                \"Resources\", \"list\"));\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"resourcePaginatorRows\"),\n-                prefMan.getPaginatorChoices());\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n+                \"resourcePaginatorRows\"), prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(),\n-                        Constants.PREF_RESOURCES_PAGINATOR_ROWS,\n-                        String.valueOf(resourcePaginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_RESOURCES_PAGINATOR_ROWS, String\n+                        .valueOf(resourcePaginatorRows));\n \n                 table.setItemsPerPage(resourcePaginatorRows);\n                 target.add(resourceContainer);\n@@ -292,23 +263,17 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     private void setupConnectors() {\n         List<IColumn> columns = new ArrayList<IColumn>();\n \n-        columns.add(new PropertyColumn(new ResourceModel(\"id\"),\n-                \"id\", \"id\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new PropertyColumn(new ResourceModel(\"name\"),\n-                \"connectorName\", \"connectorName\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"name\"), \"connectorName\", \"connectorName\"));\n \n-        columns.add(new PropertyColumn(new ResourceModel(\"displayName\"),\n-                \"displayName\", \"displayName\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"displayName\"), \"displayName\", \"displayName\"));\n \n-        columns.add(new PropertyColumn(new ResourceModel(\"version\"),\n-                \"version\", \"version\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"version\"), \"version\", \"version\"));\n \n-        columns.add(new PropertyColumn(new ResourceModel(\"bundleName\"),\n-                \"bundleName\", \"bundleName\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"bundleName\"), \"bundleName\", \"bundleName\"));\n \n-        columns.add(new AbstractColumn<ConnInstanceTO>(\n-                new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<ConnInstanceTO>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -318,46 +283,38 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<ConnInstanceTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<ConnInstanceTO>> cellItem, final String componentId,\n                     final IModel<ConnInstanceTO> model) {\n \n                 final ConnInstanceTO connectorTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n \n-                        editConnectorWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        editConnectorWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new ConnectorModalPage(\n-                                                Resources.this.getPageReference(),\n-                                                editConnectorWin, connectorTO);\n-                                    }\n-                                });\n+                            @Override\n+                            public Page createPage() {\n+                                return new ConnectorModalPage(Resources.this.getPageReference(), editConnectorWin,\n+                                        connectorTO);\n+                            }\n+                        });\n \n                         editConnectorWin.show(target);\n                     }\n                 }, ActionLink.ActionType.EDIT, \"Connectors\", \"read\");\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -367,8 +324,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         } catch (SyncopeClientCompositeErrorException e) {\n                             error(getString(\"operation_error\"));\n \n-                            LOG.error(\"While deleting connector \"\n-                                    + connectorTO.getId(), e);\n+                            LOG.error(\"While deleting connector \" + connectorTO.getId(), e);\n                         }\n \n                         target.add(connectorContainer);\n@@ -380,17 +336,15 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable table =\n-                new AjaxFallbackDefaultDataTable(\"connectorDatatable\", columns,\n+        final AjaxFallbackDefaultDataTable table = new AjaxFallbackDefaultDataTable(\"connectorDatatable\", columns,\n                 new ConnectorsProvider(), connectorPaginatorRows);\n \n         connectorContainer = new WebMarkupContainer(\"connectorContainer\");\n         connectorContainer.add(table);\n         connectorContainer.setOutputMarkupId(true);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                connectorContainer, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"Connectors\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(connectorContainer, RENDER, xmlRolesReader.getAllAllowedRoles(\n+                \"Connectors\", \"list\"));\n \n         add(connectorContainer);\n \n@@ -407,59 +361,50 @@ public void onClick(final AjaxRequestTarget target) {\n         editConnectorWin.setInitialWidth(WIN_WIDTH);\n         editConnectorWin.setCookieName(\"edit-conn-modal\");\n \n-        AjaxLink createConnectorLink = new IndicatingAjaxLink(\n-                \"createConnectorLink\") {\n+        AjaxLink createConnectorLink = new IndicatingAjaxLink(\"createConnectorLink\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n \n-                createConnectorWin.setPageCreator(\n-                        new ModalWindow.PageCreator() {\n+                createConnectorWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                    private static final long serialVersionUID = -7834632442532690940L;\n \n-                            @Override\n-                            public Page createPage() {\n-                                ConnectorModalPage form =\n-                                        new ConnectorModalPage(\n-                                        Resources.this.getPageReference(),\n-                                        editConnectorWin, new ConnInstanceTO());\n-                                return form;\n-                            }\n-                        });\n+                    @Override\n+                    public Page createPage() {\n+                        ConnectorModalPage form = new ConnectorModalPage(Resources.this.getPageReference(),\n+                                editConnectorWin, new ConnInstanceTO());\n+                        return form;\n+                    }\n+                });\n \n                 createConnectorWin.show(target);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createConnectorLink, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Connectors\", \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createConnectorLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Connectors\", \"create\"));\n \n         add(createConnectorLink);\n \n         Form paginatorForm = new Form(\"connectorPaginatorForm\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                paginatorForm, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"Connectors\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(paginatorForm, RENDER, xmlRolesReader.getAllAllowedRoles(\n+                \"Connectors\", \"list\"));\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"connectorPaginatorRows\"),\n-                prefMan.getPaginatorChoices());\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n+                \"connectorPaginatorRows\"), prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(AjaxRequestTarget target) {\n-                prefMan.set(getRequest(),\n-                        getResponse(),\n-                        Constants.PREF_CONNECTORS_PAGINATOR_ROWS,\n-                        String.valueOf(connectorPaginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_CONNECTORS_PAGINATOR_ROWS, String\n+                        .valueOf(connectorPaginatorRows));\n                 table.setItemsPerPage(connectorPaginatorRows);\n \n                 target.add(connectorContainer);\n@@ -479,8 +424,7 @@ class ResourcesProvider extends SortableDataProvider<ResourceTO> {\n         public ResourcesProvider() {\n             //Default sorting\n             setSort(\"name\", SortOrder.ASCENDING);\n-            comparator =\n-                    new SortableDataProviderComparator<ResourceTO>(this);\n+            comparator = new SortableDataProviderComparator<ResourceTO>(this);\n         }\n \n         @Override\n@@ -501,8 +445,7 @@ public int size() {\n         public IModel<ResourceTO> model(final ResourceTO resource) {\n             return new AbstractReadOnlyModel<ResourceTO>() {\n \n-                private static final long serialVersionUID =\n-                        8952474152465381634L;\n+                private static final long serialVersionUID = 8952474152465381634L;\n \n                 @Override\n                 public ResourceTO getObject() {\n@@ -525,9 +468,7 @@ class ConnectorsProvider extends SortableDataProvider<ConnInstanceTO> {\n         public ConnectorsProvider() {\n             //Default sorting\n             setSort(\"id\", SortOrder.ASCENDING);\n-            comparator =\n-                    new SortableDataProviderComparator<ConnInstanceTO>(\n-                    this);\n+            comparator = new SortableDataProviderComparator<ConnInstanceTO>(this);\n         }\n \n         @Override\n@@ -545,13 +486,11 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<ConnInstanceTO> model(\n-                final ConnInstanceTO connector) {\n+        public IModel<ConnInstanceTO> model(final ConnInstanceTO connector) {\n \n             return new AbstractReadOnlyModel<ConnInstanceTO>() {\n \n-                private static final long serialVersionUID =\n-                        -6033068018293569398L;\n+                private static final long serialVersionUID = -6033068018293569398L;\n \n                 @Override\n                 public ConnInstanceTO getObject() {"},{"sha":"4c0e4dcf6d56159a9ed942a4b966c4dfd63453bc","filename":"console/src/main/java/org/syncope/console/pages/RoleModalPage.java","status":"modified","additions":15,"deletions":23,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -49,10 +49,7 @@ public class RoleModalPage extends BaseModalPage {\n \n     private RoleTO originalRoleTO;\n \n-    public RoleModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n-            final RoleTO roleTO) {\n+    public RoleModalPage(final PageReference callerPageRef, final ModalWindow window, final RoleTO roleTO) {\n \n         super();\n \n@@ -63,38 +60,33 @@ public RoleModalPage(\n \n         final Form form = new Form(\"RoleForm\");\n \n-        add(new Label(\"displayName\",\n-                roleTO.getId() != 0 ? roleTO.getDisplayName() : \"\"));\n+        add(new Label(\"displayName\", roleTO.getId() != 0\n+                ? roleTO.getDisplayName()\n+                : \"\"));\n \n         form.setModel(new CompoundPropertyModel(roleTO));\n \n-        final RoleAttributesPanel attributesPanel =\n-                new RoleAttributesPanel(\"attributesPanel\", form, roleTO);\n+        final RoleAttributesPanel attributesPanel = new RoleAttributesPanel(\"attributesPanel\", form, roleTO);\n \n         form.add(attributesPanel);\n \n-        final AjaxButton submit = new IndicatingAjaxButton(\n-                \"submit\", new ResourceModel(\"submit\")) {\n+        final AjaxButton submit = new IndicatingAjaxButton(\"submit\", new ResourceModel(\"submit\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 final RoleTO roleTO = (RoleTO) form.getDefaultModelObject();\n                 try {\n-                    final List<String> entitlementList =\n-                            new ArrayList<String>(\n-                            attributesPanel.getEntitlementsPalette().\n-                            getModelCollection());\n+                    final List<String> entitlementList = new ArrayList<String>(attributesPanel.getEntitlementsPalette()\n+                            .getModelCollection());\n                     roleTO.setEntitlements(entitlementList);\n \n                     if (createFlag) {\n                         roleRestClient.createRole(roleTO);\n                     } else {\n-                        RoleMod roleMod = AttributableOperations.diff(\n-                                roleTO, originalRoleTO);\n+                        RoleMod roleMod = AttributableOperations.diff(roleTO, originalRoleTO);\n \n                         // update role just if it is changed\n                         if (!roleMod.isEmpty()) {\n@@ -111,16 +103,16 @@ protected void onSubmit(final AjaxRequestTarget target,\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                submit, ENABLE, xmlRolesReader.getAllAllowedRoles(\n-                \"Roles\", createFlag ? \"create\" : \"update\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Roles\",\n+                createFlag\n+                        ? \"create\"\n+                        : \"update\"));\n \n         form.add(submit);\n "},{"sha":"d7b352deda42e9b70876247b82bd8ddb147d2c23","filename":"console/src/main/java/org/syncope/console/pages/Roles.java","status":"modified","additions":22,"deletions":26,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -63,37 +63,33 @@ public Roles(final PageParameters parameters) {\n         treePanel.setOutputMarkupId(true);\n         container.add(treePanel);\n \n-        final RoleSummaryPanel nodePanel =\n-                new RoleSummaryPanel(\"summaryPanel\",\n-                createRoleWin, Roles.this.getPageReference());\n+        final RoleSummaryPanel nodePanel = new RoleSummaryPanel(\"summaryPanel\", createRoleWin, Roles.this\n+                .getPageReference());\n \n         nodePanel.setOutputMarkupId(true);\n \n         container.add(nodePanel);\n \n-        createRoleWin.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n-\n-                    private static final long serialVersionUID =\n-                            8804221891699487139L;\n-\n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-\n-                        final TreeNodeClickUpdate data =\n-                                new TreeNodeClickUpdate(target,\n-                                nodePanel.getSelectedNode() == null\n-                                ? 0 : nodePanel.getSelectedNode().getId());\n-\n-                        send(getPage(), Broadcast.BREADTH, data);\n-                        target.add(container);\n-                        if (modalResult) {\n-                            getSession().info(getString(\"operation_succeded\"));\n-                            target.add(feedbackPanel);\n-                            modalResult = false;\n-                        }\n-                    }\n-                });\n+        createRoleWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+\n+                final TreeNodeClickUpdate data = new TreeNodeClickUpdate(target, nodePanel.getSelectedNode() == null\n+                        ? 0\n+                        : nodePanel.getSelectedNode().getId());\n+\n+                send(getPage(), Broadcast.BREADTH, data);\n+                target.add(container);\n+                if (modalResult) {\n+                    getSession().info(getString(\"operation_succeded\"));\n+                    target.add(feedbackPanel);\n+                    modalResult = false;\n+                }\n+            }\n+        });\n \n         container.add(createRoleWin);\n     }"},{"sha":"516dced019c2590b8666a1c62cb1824dac69b589","filename":"console/src/main/java/org/syncope/console/pages/SchedTaskModalPage.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -35,10 +35,7 @@ public class SchedTaskModalPage extends AbstractSchedTaskModalPage {\n \n     private static final long serialVersionUID = -2501860242590060867L;\n \n-    public SchedTaskModalPage(\n-            final ModalWindow window,\n-            final SchedTaskTO taskTO,\n-            final PageReference callerPageRef) {\n+    public SchedTaskModalPage(final ModalWindow window, final SchedTaskTO taskTO, final PageReference callerPageRef) {\n \n         super(window, taskTO, callerPageRef);\n \n@@ -57,8 +54,7 @@ protected List<String> load() {\n         className.setChoices(classNames.getObject());\n         className.addRequiredLabel();\n         className.setEnabled(taskTO.getId() == 0);\n-        className.setStyleShet(\n-                \"ui-widget-content ui-corner-all long_dynamicsize\");\n+        className.setStyleShet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n         profile.add(className);\n     }\n }"},{"sha":"6f2799a399ad1357a9bd8e9fbae148866a6131f9","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":186,"deletions":407,"changes":593,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -179,315 +179,172 @@ private enum SchemaVirtualType {\n     public Schema(PageParameters parameters) {\n         super(parameters);\n \n-        userSchemasContainer =\n-                new WebMarkupContainer(\"userSchemasContainer\");\n+        userSchemasContainer = new WebMarkupContainer(\"userSchemasContainer\");\n \n-        userDerivedSchemasContainer =\n-                new WebMarkupContainer(\"userDerivedSchemasContainer\");\n+        userDerivedSchemasContainer = new WebMarkupContainer(\"userDerivedSchemasContainer\");\n \n-        userVirtualSchemasContainer =\n-                new WebMarkupContainer(\"userVirtualSchemasContainer\");\n+        userVirtualSchemasContainer = new WebMarkupContainer(\"userVirtualSchemasContainer\");\n \n-        roleSchemasContainer =\n-                new WebMarkupContainer(\"roleSchemasContainer\");\n+        roleSchemasContainer = new WebMarkupContainer(\"roleSchemasContainer\");\n \n-        roleDerivedSchemasContainer =\n-                new WebMarkupContainer(\"roleDerivedSchemasContainer\");\n+        roleDerivedSchemasContainer = new WebMarkupContainer(\"roleDerivedSchemasContainer\");\n \n-        roleVirtualSchemasContainer =\n-                new WebMarkupContainer(\"roleVirtualSchemasContainer\");\n+        roleVirtualSchemasContainer = new WebMarkupContainer(\"roleVirtualSchemasContainer\");\n \n-        membershipSchemaContainer =\n-                new WebMarkupContainer(\"membershipSchemaContainer\");\n+        membershipSchemaContainer = new WebMarkupContainer(\"membershipSchemaContainer\");\n \n-        membershipDerivedSchemaContainer =\n-                new WebMarkupContainer(\"membershipDerivedSchemaContainer\");\n+        membershipDerivedSchemaContainer = new WebMarkupContainer(\"membershipDerivedSchemaContainer\");\n \n-        membershipVirtualSchemaContainer =\n-                new WebMarkupContainer(\"membershipVirtualSchemaContainer\");\n+        membershipVirtualSchemaContainer = new WebMarkupContainer(\"membershipVirtualSchemaContainer\");\n \n         add(createRoleSchemaWin = new ModalWindow(\"createRoleSchemaWin\"));\n         add(editRoleSchemaWin = new ModalWindow(\"editRoleSchemaWin\"));\n \n-        add(createRoleDerivedSchemaWin =\n-                new ModalWindow(\"createRoleDerivedSchemaWin\"));\n+        add(createRoleDerivedSchemaWin = new ModalWindow(\"createRoleDerivedSchemaWin\"));\n \n-        add(createRoleVirtualSchemaWin =\n-                new ModalWindow(\"createRoleVirtualSchemaWin\"));\n+        add(createRoleVirtualSchemaWin = new ModalWindow(\"createRoleVirtualSchemaWin\"));\n \n-        add(editRoleDerivedSchemaWin =\n-                new ModalWindow(\"editRoleDerivedSchemaWin\"));\n+        add(editRoleDerivedSchemaWin = new ModalWindow(\"editRoleDerivedSchemaWin\"));\n \n-        add(editRoleVirtualSchemaWin =\n-                new ModalWindow(\"editRoleVirtualSchemaWin\"));\n+        add(editRoleVirtualSchemaWin = new ModalWindow(\"editRoleVirtualSchemaWin\"));\n \n         add(createUserSchemaWin = new ModalWindow(\"createUserSchemaWin\"));\n \n         add(editUserSchemaWin = new ModalWindow(\"editUserSchemaWin\"));\n \n-        add(createUserDerivedSchemaWin = new ModalWindow(\n-                \"createUserDerSchemaWin\"));\n-        add(createUserVirtualSchemaWin = new ModalWindow(\n-                \"createUserVirSchemaWin\"));\n-\n-        add(editUserDerivedSchemaWin = new ModalWindow(\n-                \"editUserDerSchemaWin\"));\n-        add(editUserVirtualSchemaWin = new ModalWindow(\n-                \"editUserVirSchemaWin\"));\n-\n-        add(createMembershipSchemaWin = new ModalWindow(\n-                \"createMembershipSchemaWin\"));\n-        add(editMembershipSchemaWin = new ModalWindow(\n-                \"editMembershipSchemaWin\"));\n-\n-        add(createMembershipDerivedSchemaWin = new ModalWindow(\n-                \"createMembershipDerSchemaWin\"));\n-        add(createMembershipVirtualSchemaWin = new ModalWindow(\n-                \"createMembershipVirSchemaWin\"));\n-\n-        add(editMembershipDerivedSchemaWin = new ModalWindow(\n-                \"editMembershipDerSchemaWin\"));\n-        add(editMembershipVirtualSchemaWin = new ModalWindow(\n-                \"editMembershipVirSchemaWin\"));\n-\n-        rolePageRows = prefMan.getPaginatorRows(\n-                getRequest(),\n-                Constants.PREF_ROLE_SCHEMA_PAGINATOR_ROWS);\n-\n-        roleDerPageRows = prefMan.getPaginatorRows(\n-                getRequest(),\n-                Constants.PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS);\n-\n-        roleVirPageRows = prefMan.getPaginatorRows(\n-                getRequest(),\n-                Constants.PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS);\n-\n-        userSchemaPageRows = prefMan.getPaginatorRows(\n-                getRequest(),\n-                Constants.PREF_USER_SCHEMA_PAGINATOR_ROWS);\n-\n-        userDerSchemaPageRows = prefMan.getPaginatorRows(\n-                getRequest(),\n-                Constants.PREF_USER_DER_SCHEMA_PAGINATOR_ROWS);\n-\n-        userVirSchemaPageRows = prefMan.getPaginatorRows(\n-                getRequest(),\n-                Constants.PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS);\n-\n-        membershipPageRows = prefMan.getPaginatorRows(\n-                getRequest(),\n-                Constants.PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS);\n-\n-        membershipDerPageRows = prefMan.getPaginatorRows(\n-                getRequest(),\n+        add(createUserDerivedSchemaWin = new ModalWindow(\"createUserDerSchemaWin\"));\n+        add(createUserVirtualSchemaWin = new ModalWindow(\"createUserVirSchemaWin\"));\n+\n+        add(editUserDerivedSchemaWin = new ModalWindow(\"editUserDerSchemaWin\"));\n+        add(editUserVirtualSchemaWin = new ModalWindow(\"editUserVirSchemaWin\"));\n+\n+        add(createMembershipSchemaWin = new ModalWindow(\"createMembershipSchemaWin\"));\n+        add(editMembershipSchemaWin = new ModalWindow(\"editMembershipSchemaWin\"));\n+\n+        add(createMembershipDerivedSchemaWin = new ModalWindow(\"createMembershipDerSchemaWin\"));\n+        add(createMembershipVirtualSchemaWin = new ModalWindow(\"createMembershipVirSchemaWin\"));\n+\n+        add(editMembershipDerivedSchemaWin = new ModalWindow(\"editMembershipDerSchemaWin\"));\n+        add(editMembershipVirtualSchemaWin = new ModalWindow(\"editMembershipVirSchemaWin\"));\n+\n+        rolePageRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_ROLE_SCHEMA_PAGINATOR_ROWS);\n+\n+        roleDerPageRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS);\n+\n+        roleVirPageRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS);\n+\n+        userSchemaPageRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_USER_SCHEMA_PAGINATOR_ROWS);\n+\n+        userDerSchemaPageRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_USER_DER_SCHEMA_PAGINATOR_ROWS);\n+\n+        userVirSchemaPageRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS);\n+\n+        membershipPageRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS);\n+\n+        membershipDerPageRows = prefMan.getPaginatorRows(getRequest(),\n                 Constants.PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n \n-        membershipVirPageRows = prefMan.getPaginatorRows(\n-                getRequest(),\n+        membershipVirPageRows = prefMan.getPaginatorRows(getRequest(),\n                 Constants.PREF_MEMBERSHIP_VIR_SCHEMA_PAGINATOR_ROWS);\n \n-        final String allowedCreateRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Schema\", \"create\");\n+        final String allowedCreateRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\", \"create\");\n \n-        final String allowedReadRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Schema\", \"read\");\n+        final String allowedReadRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\", \"read\");\n \n-        final String allowedDeleteRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Schema\", \"delete\");\n+        final String allowedDeleteRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\", \"delete\");\n \n-        List<IColumn> rolesColumns = getColumnsForSchema(\n-                roleSchemasContainer,\n-                editRoleSchemaWin,\n-                AttributableType.ROLE,\n-                SchemaModalPageFactory.SchemaType.NORMAL,\n-                Constants.SCHEMA_FIELDS,\n-                allowedReadRoles,\n-                allowedCreateRoles);\n+        List<IColumn> rolesColumns = getColumnsForSchema(roleSchemasContainer, editRoleSchemaWin,\n+                AttributableType.ROLE, SchemaModalPageFactory.SchemaType.NORMAL, Constants.SCHEMA_FIELDS,\n+                allowedReadRoles, allowedCreateRoles);\n \n-        final AjaxFallbackDefaultDataTable tableRoles =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", rolesColumns,\n+        final AjaxFallbackDefaultDataTable tableRoles = new AjaxFallbackDefaultDataTable(\"datatable\", rolesColumns,\n                 new SchemaProvider(SchemaType.RoleSchema), rolePageRows);\n \n-        add(getPaginatorForm(\n-                roleSchemasContainer,\n-                tableRoles,\n-                \"RolesPaginatorForm\",\n-                \"rolePageRows\",\n+        add(getPaginatorForm(roleSchemasContainer, tableRoles, \"RolesPaginatorForm\", \"rolePageRows\",\n                 Constants.PREF_ROLE_SCHEMA_PAGINATOR_ROWS));\n \n-        List<IColumn> columnsRolesDer = getColumnsForSchema(\n-                roleDerivedSchemasContainer,\n-                editRoleDerivedSchemaWin,\n-                AttributableType.ROLE,\n-                SchemaModalPageFactory.SchemaType.DERIVED,\n-                Constants.DERIVED_SCHEMA_FIELDS,\n-                allowedReadRoles,\n-                allowedDeleteRoles);\n-\n-        final AjaxFallbackDefaultDataTable tableRolesDer =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", columnsRolesDer,\n-                new DerivedSchemaProvider(SchemaDerivedType.RoleDerivedSchema),\n-                roleDerPageRows);\n-\n-        add(getPaginatorForm(\n-                roleDerivedSchemasContainer,\n-                tableRolesDer,\n-                \"RolesDerPaginatorForm\",\n-                \"roleDerPageRows\",\n+        List<IColumn> columnsRolesDer = getColumnsForSchema(roleDerivedSchemasContainer, editRoleDerivedSchemaWin,\n+                AttributableType.ROLE, SchemaModalPageFactory.SchemaType.DERIVED, Constants.DERIVED_SCHEMA_FIELDS,\n+                allowedReadRoles, allowedDeleteRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableRolesDer = new AjaxFallbackDefaultDataTable(\"datatable\",\n+                columnsRolesDer, new DerivedSchemaProvider(SchemaDerivedType.RoleDerivedSchema), roleDerPageRows);\n+\n+        add(getPaginatorForm(roleDerivedSchemasContainer, tableRolesDer, \"RolesDerPaginatorForm\", \"roleDerPageRows\",\n                 Constants.PREF_ROLE_DER_SCHEMA_PAGINATOR_ROWS));\n \n-        List<IColumn> columnsRolesVir = getColumnsForSchema(\n-                roleVirtualSchemasContainer,\n-                editRoleVirtualSchemaWin,\n-                AttributableType.ROLE,\n-                SchemaModalPageFactory.SchemaType.VIRTUAL,\n-                Constants.VIRTUAL_SCHEMA_FIELDS,\n-                allowedReadRoles,\n-                allowedDeleteRoles);\n-\n-        final AjaxFallbackDefaultDataTable tableRolesVir =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", columnsRolesVir,\n-                new VirtualSchemaProvider(SchemaVirtualType.RoleVirtualSchema),\n-                roleVirPageRows);\n-\n-        add(getPaginatorForm(\n-                roleVirtualSchemasContainer,\n-                tableRolesVir,\n-                \"RolesVirPaginatorForm\",\n-                \"roleVirPageRows\",\n+        List<IColumn> columnsRolesVir = getColumnsForSchema(roleVirtualSchemasContainer, editRoleVirtualSchemaWin,\n+                AttributableType.ROLE, SchemaModalPageFactory.SchemaType.VIRTUAL, Constants.VIRTUAL_SCHEMA_FIELDS,\n+                allowedReadRoles, allowedDeleteRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableRolesVir = new AjaxFallbackDefaultDataTable(\"datatable\",\n+                columnsRolesVir, new VirtualSchemaProvider(SchemaVirtualType.RoleVirtualSchema), roleVirPageRows);\n+\n+        add(getPaginatorForm(roleVirtualSchemasContainer, tableRolesVir, \"RolesVirPaginatorForm\", \"roleVirPageRows\",\n                 Constants.PREF_ROLE_VIR_SCHEMA_PAGINATOR_ROWS));\n \n-        List<IColumn> userColumns = getColumnsForSchema(\n-                userSchemasContainer,\n-                editUserSchemaWin,\n-                AttributableType.USER,\n-                SchemaModalPageFactory.SchemaType.NORMAL,\n-                Constants.SCHEMA_FIELDS,\n-                allowedReadRoles,\n-                allowedCreateRoles);\n-\n-        final AjaxFallbackDefaultDataTable tableUsers =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", userColumns,\n+        List<IColumn> userColumns = getColumnsForSchema(userSchemasContainer, editUserSchemaWin, AttributableType.USER,\n+                SchemaModalPageFactory.SchemaType.NORMAL, Constants.SCHEMA_FIELDS, allowedReadRoles, allowedCreateRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableUsers = new AjaxFallbackDefaultDataTable(\"datatable\", userColumns,\n                 new SchemaProvider(SchemaType.UserSchema), userSchemaPageRows);\n \n         tableUsers.setMarkupId(\"tableUsers\");\n \n-        add(getPaginatorForm(\n-                userSchemasContainer,\n-                tableUsers,\n-                \"UsersPaginatorForm\",\n-                \"userSchemaPageRows\",\n+        add(getPaginatorForm(userSchemasContainer, tableUsers, \"UsersPaginatorForm\", \"userSchemaPageRows\",\n                 Constants.PREF_USER_SCHEMA_PAGINATOR_ROWS));\n \n-        List<IColumn> columnsUsersDer = getColumnsForSchema(\n-                userDerivedSchemasContainer,\n-                editUserDerivedSchemaWin,\n-                AttributableType.USER,\n-                SchemaModalPageFactory.SchemaType.DERIVED,\n-                Constants.DERIVED_SCHEMA_FIELDS,\n-                allowedReadRoles,\n-                allowedDeleteRoles);\n-\n-        final AjaxFallbackDefaultDataTable tableUsersDer =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", columnsUsersDer,\n-                new DerivedSchemaProvider(SchemaDerivedType.UserDerivedSchema),\n-                userDerSchemaPageRows);\n-\n-        add(getPaginatorForm(\n-                userDerivedSchemasContainer,\n-                tableUsersDer,\n-                \"UsersDerPaginatorForm\",\n-                \"userDerSchemaPageRows\",\n-                Constants.PREF_USER_DER_SCHEMA_PAGINATOR_ROWS));\n-\n-        List<IColumn> columnsUsersVir = getColumnsForSchema(\n-                userVirtualSchemasContainer,\n-                editUserVirtualSchemaWin,\n-                AttributableType.USER,\n-                SchemaModalPageFactory.SchemaType.VIRTUAL,\n-                Constants.VIRTUAL_SCHEMA_FIELDS,\n-                allowedReadRoles,\n-                allowedDeleteRoles);\n-\n-        final AjaxFallbackDefaultDataTable tableUsersVir =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", columnsUsersVir,\n-                new VirtualSchemaProvider(SchemaVirtualType.UserVirtualSchema),\n-                userVirSchemaPageRows);\n-\n-        add(getPaginatorForm(\n-                userVirtualSchemasContainer,\n-                tableUsersVir,\n-                \"UsersVirPaginatorForm\",\n-                \"userVirSchemaPageRows\",\n-                Constants.PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS));\n-\n-        List<IColumn> membershipsColumns = getColumnsForSchema(\n-                membershipSchemaContainer,\n-                editMembershipSchemaWin,\n-                AttributableType.MEMBERSHIP,\n-                SchemaModalPageFactory.SchemaType.NORMAL,\n-                Constants.SCHEMA_FIELDS,\n-                allowedReadRoles,\n-                allowedCreateRoles);\n-\n-        final AjaxFallbackDefaultDataTable tableMemberships =\n-                new AjaxFallbackDefaultDataTable(\n-                \"datatable\", membershipsColumns,\n-                new SchemaProvider(SchemaType.MembershipSchema),\n-                membershipPageRows);\n-\n-        add(getPaginatorForm(\n-                membershipSchemaContainer,\n-                tableMemberships,\n-                \"MembershipPaginatorForm\",\n-                \"membershipPageRows\",\n-                Constants.PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS));\n-\n-        List<IColumn> columnsMembershipsDer = getColumnsForSchema(\n-                membershipDerivedSchemaContainer,\n-                editMembershipDerivedSchemaWin,\n-                AttributableType.MEMBERSHIP,\n-                SchemaModalPageFactory.SchemaType.DERIVED,\n-                Constants.DERIVED_SCHEMA_FIELDS,\n-                allowedReadRoles,\n-                allowedDeleteRoles);\n-\n-        final AjaxFallbackDefaultDataTable tableMembershipsDer =\n-                new AjaxFallbackDefaultDataTable(\"datatable\",\n-                columnsMembershipsDer,\n-                new DerivedSchemaProvider(\n-                SchemaDerivedType.MembershipDerivedSchema),\n+        List<IColumn> columnsUsersDer = getColumnsForSchema(userDerivedSchemasContainer, editUserDerivedSchemaWin,\n+                AttributableType.USER, SchemaModalPageFactory.SchemaType.DERIVED, Constants.DERIVED_SCHEMA_FIELDS,\n+                allowedReadRoles, allowedDeleteRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableUsersDer = new AjaxFallbackDefaultDataTable(\"datatable\",\n+                columnsUsersDer, new DerivedSchemaProvider(SchemaDerivedType.UserDerivedSchema), userDerSchemaPageRows);\n+\n+        add(getPaginatorForm(userDerivedSchemasContainer, tableUsersDer, \"UsersDerPaginatorForm\",\n+                \"userDerSchemaPageRows\", Constants.PREF_USER_DER_SCHEMA_PAGINATOR_ROWS));\n+\n+        List<IColumn> columnsUsersVir = getColumnsForSchema(userVirtualSchemasContainer, editUserVirtualSchemaWin,\n+                AttributableType.USER, SchemaModalPageFactory.SchemaType.VIRTUAL, Constants.VIRTUAL_SCHEMA_FIELDS,\n+                allowedReadRoles, allowedDeleteRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableUsersVir = new AjaxFallbackDefaultDataTable(\"datatable\",\n+                columnsUsersVir, new VirtualSchemaProvider(SchemaVirtualType.UserVirtualSchema), userVirSchemaPageRows);\n+\n+        add(getPaginatorForm(userVirtualSchemasContainer, tableUsersVir, \"UsersVirPaginatorForm\",\n+                \"userVirSchemaPageRows\", Constants.PREF_USER_VIR_SCHEMA_PAGINATOR_ROWS));\n+\n+        List<IColumn> membershipsColumns = getColumnsForSchema(membershipSchemaContainer, editMembershipSchemaWin,\n+                AttributableType.MEMBERSHIP, SchemaModalPageFactory.SchemaType.NORMAL, Constants.SCHEMA_FIELDS,\n+                allowedReadRoles, allowedCreateRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableMemberships = new AjaxFallbackDefaultDataTable(\"datatable\",\n+                membershipsColumns, new SchemaProvider(SchemaType.MembershipSchema), membershipPageRows);\n+\n+        add(getPaginatorForm(membershipSchemaContainer, tableMemberships, \"MembershipPaginatorForm\",\n+                \"membershipPageRows\", Constants.PREF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS));\n+\n+        List<IColumn> columnsMembershipsDer = getColumnsForSchema(membershipDerivedSchemaContainer,\n+                editMembershipDerivedSchemaWin, AttributableType.MEMBERSHIP, SchemaModalPageFactory.SchemaType.DERIVED,\n+                Constants.DERIVED_SCHEMA_FIELDS, allowedReadRoles, allowedDeleteRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableMembershipsDer = new AjaxFallbackDefaultDataTable(\"datatable\",\n+                columnsMembershipsDer, new DerivedSchemaProvider(SchemaDerivedType.MembershipDerivedSchema),\n                 membershipDerPageRows);\n \n-        add(getPaginatorForm(\n-                membershipDerivedSchemaContainer,\n-                tableMembershipsDer,\n-                \"MembershipDerPaginatorForm\",\n-                \"membershipDerPageRows\",\n-                Constants.PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS));\n-\n-        List<IColumn> columnsMembershipsVir = getColumnsForSchema(\n-                membershipVirtualSchemaContainer,\n-                editMembershipVirtualSchemaWin,\n-                AttributableType.MEMBERSHIP,\n-                SchemaModalPageFactory.SchemaType.VIRTUAL,\n-                Constants.VIRTUAL_SCHEMA_FIELDS,\n-                allowedReadRoles,\n-                allowedDeleteRoles);\n-\n-        final AjaxFallbackDefaultDataTable tableMembershipsVir =\n-                new AjaxFallbackDefaultDataTable(\"datatable\",\n-                columnsMembershipsVir,\n-                new VirtualSchemaProvider(\n-                SchemaVirtualType.MembershipVirtualSchema),\n+        add(getPaginatorForm(membershipDerivedSchemaContainer, tableMembershipsDer, \"MembershipDerPaginatorForm\",\n+                \"membershipDerPageRows\", Constants.PREF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS));\n+\n+        List<IColumn> columnsMembershipsVir = getColumnsForSchema(membershipVirtualSchemaContainer,\n+                editMembershipVirtualSchemaWin, AttributableType.MEMBERSHIP, SchemaModalPageFactory.SchemaType.VIRTUAL,\n+                Constants.VIRTUAL_SCHEMA_FIELDS, allowedReadRoles, allowedDeleteRoles);\n+\n+        final AjaxFallbackDefaultDataTable tableMembershipsVir = new AjaxFallbackDefaultDataTable(\"datatable\",\n+                columnsMembershipsVir, new VirtualSchemaProvider(SchemaVirtualType.MembershipVirtualSchema),\n                 membershipVirPageRows);\n \n-        add(getPaginatorForm(\n-                membershipVirtualSchemaContainer,\n-                tableMembershipsVir,\n-                \"MembershipVirPaginatorForm\",\n-                \"membershipVirPageRows\",\n-                Constants.PREF_MEMBERSHIP_VIR_SCHEMA_PAGINATOR_ROWS));\n+        add(getPaginatorForm(membershipVirtualSchemaContainer, tableMembershipsVir, \"MembershipVirPaginatorForm\",\n+                \"membershipVirPageRows\", Constants.PREF_MEMBERSHIP_VIR_SCHEMA_PAGINATOR_ROWS));\n \n         roleSchemasContainer.add(tableRoles);\n         roleSchemasContainer.setOutputMarkupId(true);\n@@ -594,8 +451,7 @@ public Schema(PageParameters parameters) {\n         editMembershipSchemaWin.setInitialWidth(WIN_WIDTH);\n         editMembershipSchemaWin.setCookieName(\"modal-14\");\n \n-        createMembershipDerivedSchemaWin.setCssClassName(\n-                ModalWindow.CSS_CLASS_GRAY);\n+        createMembershipDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createMembershipDerivedSchemaWin.setInitialWidth(WIN_WIDTH);\n         createMembershipDerivedSchemaWin.setInitialHeight(WIN_HEIGHT);\n         createMembershipDerivedSchemaWin.setCookieName(\"modal-15\");\n@@ -604,14 +460,12 @@ public Schema(PageParameters parameters) {\n         editMembershipSchemaWin.setInitialWidth(WIN_WIDTH);\n         editMembershipSchemaWin.setCookieName(\"modal-16\");\n \n-        createMembershipVirtualSchemaWin.setCssClassName(\n-                ModalWindow.CSS_CLASS_GRAY);\n+        createMembershipVirtualSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createMembershipVirtualSchemaWin.setInitialWidth(WIN_WIDTH);\n         createMembershipVirtualSchemaWin.setInitialHeight(WIN_HEIGHT);\n         createMembershipVirtualSchemaWin.setCookieName(\"modal-17\");\n \n-        editMembershipVirtualSchemaWin.setCssClassName(\n-                ModalWindow.CSS_CLASS_GRAY);\n+        editMembershipVirtualSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editMembershipVirtualSchemaWin.setInitialWidth(WIN_WIDTH);\n         editMembershipVirtualSchemaWin.setInitialHeight(WIN_HEIGHT);\n         editMembershipVirtualSchemaWin.setCookieName(\"modal-18\");\n@@ -620,123 +474,71 @@ public Schema(PageParameters parameters) {\n \n         setWindowClosedCallback(editUserSchemaWin, userSchemasContainer);\n \n-        setWindowClosedCallback(createUserDerivedSchemaWin,\n-                userDerivedSchemasContainer);\n+        setWindowClosedCallback(createUserDerivedSchemaWin, userDerivedSchemasContainer);\n \n-        setWindowClosedCallback(createUserVirtualSchemaWin,\n-                userVirtualSchemasContainer);\n+        setWindowClosedCallback(createUserVirtualSchemaWin, userVirtualSchemasContainer);\n \n-        setWindowClosedCallback(editUserDerivedSchemaWin,\n-                userDerivedSchemasContainer);\n+        setWindowClosedCallback(editUserDerivedSchemaWin, userDerivedSchemasContainer);\n \n-        setWindowClosedCallback(editUserVirtualSchemaWin,\n-                userVirtualSchemasContainer);\n+        setWindowClosedCallback(editUserVirtualSchemaWin, userVirtualSchemasContainer);\n \n         setWindowClosedCallback(createRoleSchemaWin, roleSchemasContainer);\n \n         setWindowClosedCallback(editRoleSchemaWin, roleSchemasContainer);\n \n-        setWindowClosedCallback(createRoleDerivedSchemaWin,\n-                roleDerivedSchemasContainer);\n+        setWindowClosedCallback(createRoleDerivedSchemaWin, roleDerivedSchemasContainer);\n \n-        setWindowClosedCallback(createRoleVirtualSchemaWin,\n-                roleVirtualSchemasContainer);\n+        setWindowClosedCallback(createRoleVirtualSchemaWin, roleVirtualSchemasContainer);\n \n-        setWindowClosedCallback(editRoleDerivedSchemaWin,\n-                roleDerivedSchemasContainer);\n+        setWindowClosedCallback(editRoleDerivedSchemaWin, roleDerivedSchemasContainer);\n \n-        setWindowClosedCallback(editRoleVirtualSchemaWin,\n-                roleVirtualSchemasContainer);\n+        setWindowClosedCallback(editRoleVirtualSchemaWin, roleVirtualSchemasContainer);\n \n-        setWindowClosedCallback(createMembershipSchemaWin,\n-                membershipSchemaContainer);\n+        setWindowClosedCallback(createMembershipSchemaWin, membershipSchemaContainer);\n \n-        setWindowClosedCallback(editMembershipSchemaWin,\n-                membershipSchemaContainer);\n+        setWindowClosedCallback(editMembershipSchemaWin, membershipSchemaContainer);\n \n-        setWindowClosedCallback(createMembershipDerivedSchemaWin,\n-                membershipDerivedSchemaContainer);\n+        setWindowClosedCallback(createMembershipDerivedSchemaWin, membershipDerivedSchemaContainer);\n \n-        setWindowClosedCallback(createMembershipVirtualSchemaWin,\n-                membershipVirtualSchemaContainer);\n+        setWindowClosedCallback(createMembershipVirtualSchemaWin, membershipVirtualSchemaContainer);\n \n-        setWindowClosedCallback(editMembershipDerivedSchemaWin,\n-                membershipDerivedSchemaContainer);\n+        setWindowClosedCallback(editMembershipDerivedSchemaWin, membershipDerivedSchemaContainer);\n \n-        setWindowClosedCallback(editMembershipVirtualSchemaWin,\n-                membershipVirtualSchemaContainer);\n+        setWindowClosedCallback(editMembershipVirtualSchemaWin, membershipVirtualSchemaContainer);\n \n-        add(getCreateSchemaWindow(\n-                createRoleSchemaWin,\n-                AttributableType.ROLE,\n-                SchemaModalPageFactory.SchemaType.NORMAL,\n-                \"createRoleSchemaWinLink\",\n-                \"createRoleSchemaWin\",\n-                allowedCreateRoles));\n+        add(getCreateSchemaWindow(createRoleSchemaWin, AttributableType.ROLE, SchemaModalPageFactory.SchemaType.NORMAL,\n+                \"createRoleSchemaWinLink\", \"createRoleSchemaWin\", allowedCreateRoles));\n \n-        add(getCreateSchemaWindow(\n-                createRoleDerivedSchemaWin,\n-                AttributableType.ROLE,\n-                SchemaModalPageFactory.SchemaType.DERIVED,\n-                \"createRoleDerivedSchemaWinLink\",\n-                \"createRoleDerivedSchemaWin\",\n-                allowedCreateRoles));\n+        add(getCreateSchemaWindow(createRoleDerivedSchemaWin, AttributableType.ROLE,\n+                SchemaModalPageFactory.SchemaType.DERIVED, \"createRoleDerivedSchemaWinLink\",\n+                \"createRoleDerivedSchemaWin\", allowedCreateRoles));\n \n-        add(getCreateSchemaWindow(\n-                createRoleVirtualSchemaWin,\n-                AttributableType.ROLE,\n-                SchemaModalPageFactory.SchemaType.VIRTUAL,\n-                \"createRoleVirtualSchemaWinLink\",\n-                \"createRoleVirtualSchemaWin\",\n-                allowedCreateRoles));\n+        add(getCreateSchemaWindow(createRoleVirtualSchemaWin, AttributableType.ROLE,\n+                SchemaModalPageFactory.SchemaType.VIRTUAL, \"createRoleVirtualSchemaWinLink\",\n+                \"createRoleVirtualSchemaWin\", allowedCreateRoles));\n \n-        add(getCreateSchemaWindow(\n-                createUserSchemaWin,\n-                AttributableType.USER,\n-                SchemaModalPageFactory.SchemaType.NORMAL,\n-                \"createUserSchemaWinLink\",\n-                \"createUserSchemaModalWin\",\n-                allowedCreateRoles));\n+        add(getCreateSchemaWindow(createUserSchemaWin, AttributableType.USER, SchemaModalPageFactory.SchemaType.NORMAL,\n+                \"createUserSchemaWinLink\", \"createUserSchemaModalWin\", allowedCreateRoles));\n \n-        add(getCreateSchemaWindow(\n-                createUserDerivedSchemaWin,\n-                AttributableType.USER,\n-                SchemaModalPageFactory.SchemaType.DERIVED,\n-                \"createUserDerSchemaWinLink\",\n-                \"createUserDerSchemaModalWin\",\n+        add(getCreateSchemaWindow(createUserDerivedSchemaWin, AttributableType.USER,\n+                SchemaModalPageFactory.SchemaType.DERIVED, \"createUserDerSchemaWinLink\", \"createUserDerSchemaModalWin\",\n                 allowedCreateRoles));\n \n-        add(getCreateSchemaWindow(\n-                createUserVirtualSchemaWin,\n-                AttributableType.USER,\n-                SchemaModalPageFactory.SchemaType.VIRTUAL,\n-                \"createUserVirSchemaWinLink\",\n-                \"createUserVirSchemaModalWin\",\n+        add(getCreateSchemaWindow(createUserVirtualSchemaWin, AttributableType.USER,\n+                SchemaModalPageFactory.SchemaType.VIRTUAL, \"createUserVirSchemaWinLink\", \"createUserVirSchemaModalWin\",\n                 allowedCreateRoles));\n \n-        add(getCreateSchemaWindow(\n-                createMembershipSchemaWin,\n-                AttributableType.MEMBERSHIP,\n-                SchemaModalPageFactory.SchemaType.NORMAL,\n-                \"createMembershipSchemaWinLink\",\n-                \"createMembershipSchemaModalWin\",\n-                allowedCreateRoles));\n+        add(getCreateSchemaWindow(createMembershipSchemaWin, AttributableType.MEMBERSHIP,\n+                SchemaModalPageFactory.SchemaType.NORMAL, \"createMembershipSchemaWinLink\",\n+                \"createMembershipSchemaModalWin\", allowedCreateRoles));\n \n-        add(getCreateSchemaWindow(\n-                createMembershipDerivedSchemaWin,\n-                AttributableType.MEMBERSHIP,\n-                SchemaModalPageFactory.SchemaType.DERIVED,\n-                \"createMembershipDerSchemaWinLink\",\n-                \"createMembershipDerivedSchemaWin\",\n-                allowedCreateRoles));\n+        add(getCreateSchemaWindow(createMembershipDerivedSchemaWin, AttributableType.MEMBERSHIP,\n+                SchemaModalPageFactory.SchemaType.DERIVED, \"createMembershipDerSchemaWinLink\",\n+                \"createMembershipDerivedSchemaWin\", allowedCreateRoles));\n \n-        add(getCreateSchemaWindow(\n-                createMembershipVirtualSchemaWin,\n-                AttributableType.MEMBERSHIP,\n-                SchemaModalPageFactory.SchemaType.VIRTUAL,\n-                \"createMembershipVirSchemaWinLink\",\n-                \"createMembershipVirtualSchemaWin\",\n-                allowedCreateRoles));\n+        add(getCreateSchemaWindow(createMembershipVirtualSchemaWin, AttributableType.MEMBERSHIP,\n+                SchemaModalPageFactory.SchemaType.VIRTUAL, \"createMembershipVirSchemaWinLink\",\n+                \"createMembershipVirtualSchemaWin\", allowedCreateRoles));\n     }\n \n     private class SchemaProvider extends SortableDataProvider<SchemaTO> {\n@@ -799,8 +601,7 @@ private List<SchemaTO> getSchemaDB() {\n         }\n     }\n \n-    private class DerivedSchemaProvider\n-            extends SortableDataProvider<DerivedSchemaTO> {\n+    private class DerivedSchemaProvider extends SortableDataProvider<DerivedSchemaTO> {\n \n         private static final long serialVersionUID = -8518694430295937917L;\n \n@@ -814,8 +615,7 @@ public DerivedSchemaProvider(final SchemaDerivedType schema) {\n \n             //Default sorting\n             setSort(\"name\", SortOrder.ASCENDING);\n-            comparator =\n-                    new SortableDataProviderComparator<DerivedSchemaTO>(this);\n+            comparator = new SortableDataProviderComparator<DerivedSchemaTO>(this);\n         }\n \n         @Override\n@@ -853,8 +653,7 @@ private List<DerivedSchemaTO> getDerivedSchemaDB() {\n         }\n     }\n \n-    private class VirtualSchemaProvider\n-            extends SortableDataProvider<VirtualSchemaTO> {\n+    private class VirtualSchemaProvider extends SortableDataProvider<VirtualSchemaTO> {\n \n         private static final long serialVersionUID = -5431560608852987760L;\n \n@@ -868,8 +667,7 @@ public VirtualSchemaProvider(final SchemaVirtualType schema) {\n \n             //Default sorting\n             setSort(\"name\", SortOrder.ASCENDING);\n-            comparator =\n-                    new SortableDataProviderComparator<VirtualSchemaTO>(this);\n+            comparator = new SortableDataProviderComparator<VirtualSchemaTO>(this);\n         }\n \n         @Override\n@@ -908,21 +706,16 @@ private List<VirtualSchemaTO> getVirtualSchemaDB() {\n     }\n \n     private <T extends AbstractSchemaModalPage> List<IColumn> getColumnsForSchema(\n-            final WebMarkupContainer webContainer,\n-            final ModalWindow modalWindow,\n-            final AttributableType attributableType,\n-            final SchemaModalPageFactory.SchemaType schemaType,\n-            final String[] fields,\n-            final String readPermissions,\n-            final String deletePermissions) {\n+            final WebMarkupContainer webContainer, final ModalWindow modalWindow,\n+            final AttributableType attributableType, final SchemaModalPageFactory.SchemaType schemaType,\n+            final String[] fields, final String readPermissions, final String deletePermissions) {\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n \n         for (String field : fields) {\n             columns.add(new PropertyColumn(new ResourceModel(field), field, field));\n         }\n \n-\n         columns.add(new AbstractColumn<AbstractBaseBean>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n@@ -933,9 +726,7 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<AbstractBaseBean>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<AbstractBaseBean>> cellItem, final String componentId,\n                     final IModel<AbstractBaseBean> model) {\n \n                 final AbstractBaseBean schemaTO = model.getObject();\n@@ -954,11 +745,10 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                AbstractSchemaModalPage page =\n-                                        SchemaModalPageFactory.getSchemaModalPage(attributableType, schemaType);\n+                                AbstractSchemaModalPage page = SchemaModalPageFactory.getSchemaModalPage(\n+                                        attributableType, schemaType);\n \n-                                page.setSchemaModalPage(Schema.this.getPageReference(), modalWindow,\n-                                        schemaTO, false);\n+                                page.setSchemaModalPage(Schema.this.getPageReference(), modalWindow, schemaTO, false);\n \n                                 return page;\n                             }\n@@ -970,18 +760,19 @@ public Page createPage() {\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n \n                         switch (schemaType) {\n                             case DERIVED:\n-                                restClient.deleteDerivedSchema(attributableType, ((DerivedSchemaTO) schemaTO).getName());\n+                                restClient\n+                                        .deleteDerivedSchema(attributableType, ((DerivedSchemaTO) schemaTO).getName());\n                                 break;\n                             case VIRTUAL:\n-                                restClient.deleteVirtualSchema(attributableType, ((VirtualSchemaTO) schemaTO).getName());\n+                                restClient\n+                                        .deleteVirtualSchema(attributableType, ((VirtualSchemaTO) schemaTO).getName());\n                                 break;\n                             default:\n                                 restClient.deleteSchema(attributableType, ((SchemaTO) schemaTO).getName());\n@@ -1002,20 +793,13 @@ public void onClick(final AjaxRequestTarget target) {\n         return columns;\n     }\n \n-    private Form getPaginatorForm(\n-            final WebMarkupContainer webContainer,\n-            final AjaxFallbackDefaultDataTable dataTable,\n-            final String formname,\n-            final String rowname,\n-            final String rowsPerPagePrefName) {\n+    private Form getPaginatorForm(final WebMarkupContainer webContainer, final AjaxFallbackDefaultDataTable dataTable,\n+            final String formname, final String rowname, final String rowsPerPagePrefName) {\n \n         Form usersPaginatorForm = new Form(formname);\n \n-        final DropDownChoice rowChooser = new DropDownChoice(\n-                \"rowsChooser\",\n-                new PropertyModel(this, rowname),\n-                prefMan.getPaginatorChoices(),\n-                new SelectChoiceRenderer());\n+        final DropDownChoice rowChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, rowname), prefMan\n+                .getPaginatorChoices(), new SelectChoiceRenderer());\n \n         rowChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n@@ -1035,13 +819,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         return usersPaginatorForm;\n     }\n \n-    private <T extends AbstractSchemaModalPage> AjaxLink getCreateSchemaWindow(\n-            final ModalWindow createSchemaWin,\n-            final AttributableType attributableType,\n-            final SchemaModalPageFactory.SchemaType schemaType,\n-            final String winLinkName,\n-            final String winName,\n-            final String createPermissions) {\n+    private <T extends AbstractSchemaModalPage> AjaxLink getCreateSchemaWindow(final ModalWindow createSchemaWin,\n+            final AttributableType attributableType, final SchemaModalPageFactory.SchemaType schemaType,\n+            final String winLinkName, final String winName, final String createPermissions) {\n \n         AjaxLink createSchemaWinLink = new IndicatingAjaxLink(winLinkName) {\n \n@@ -1056,8 +836,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        AbstractSchemaModalPage page = SchemaModalPageFactory.getSchemaModalPage(\n-                                attributableType, schemaType);\n+                        AbstractSchemaModalPage page = SchemaModalPageFactory.getSchemaModalPage(attributableType,\n+                                schemaType);\n \n                         page.setSchemaModalPage(Schema.this.getPageReference(), new ModalWindow(winName), null, true);\n \n@@ -1069,8 +849,7 @@ public Page createPage() {\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                createSchemaWinLink, ENABLE, createPermissions);\n+        MetaDataRoleAuthorizationStrategy.authorize(createSchemaWinLink, ENABLE, createPermissions);\n \n         return createSchemaWinLink;\n     }"},{"sha":"d76d84017bd35cd0d9eb0eb7659d2b31908184f4","filename":"console/src/main/java/org/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":46,"deletions":64,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -60,39 +60,35 @@ public SchemaModalPage(AttributableType kind) {\n     }\n \n     @Override\n-    public void setSchemaModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n-            AbstractBaseBean schemaTO,\n-            final boolean createFlag) {\n+    public void setSchemaModalPage(final PageReference callerPageRef, final ModalWindow window,\n+            AbstractBaseBean schemaTO, final boolean createFlag) {\n \n-        final SchemaTO schema =\n-                schemaTO == null ? new SchemaTO() : (SchemaTO) schemaTO;\n+        final SchemaTO schema = schemaTO == null\n+                ? new SchemaTO()\n+                : (SchemaTO) schemaTO;\n \n         final Form schemaForm = new Form(\"form\");\n \n         schemaForm.setModel(new CompoundPropertyModel(schema));\n         schemaForm.setOutputMarkupId(Boolean.TRUE);\n \n-        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"),\n-                new PropertyModel<String>(schema, \"name\"));\n+        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"), new PropertyModel<String>(\n+                schema, \"name\"));\n         name.addRequiredLabel();\n         name.setEnabled(createFlag);\n \n         final AjaxTextFieldPanel conversionPattern = new AjaxTextFieldPanel(\"conversionPattern\",\n                 getString(\"conversionPattern\"), new PropertyModel<String>(schema, \"conversionPattern\"));\n \n-        final IModel<List<String>> validatorsList =\n-                new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> validatorsList = new LoadableDetachableModel<List<String>>() {\n \n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-                    @Override\n-                    protected List<String> load() {\n-                        return restClient.getAllValidatorClasses();\n-                    }\n-                };\n+            @Override\n+            protected List<String> load() {\n+                return restClient.getAllValidatorClasses();\n+            }\n+        };\n \n         final AjaxDropDownChoicePanel<String> validatorClass = new AjaxDropDownChoicePanel<String>(\"validatorClass\",\n                 getString(\"validatorClass\"), new PropertyModel(schema, \"validatorClass\"));\n@@ -122,12 +118,10 @@ protected List<String> load() {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                if (SchemaType.Enum.ordinal()\n-                        == Integer.parseInt(type.getField().getValue())) {\n+                if (SchemaType.Enum.ordinal() == Integer.parseInt(type.getField().getValue())) {\n                     enumerationValues.addRequiredLabel();\n                     enumerationValues.setEnabled(Boolean.TRUE);\n-                    enumerationValues.setModelObject(\n-                            ((SchemaTO) schema).getEnumerationValues());\n+                    enumerationValues.setModelObject(((SchemaTO) schema).getEnumerationValues());\n                 } else {\n                     enumerationValues.removeRequiredLabel();\n                     enumerationValues.setEnabled(Boolean.FALSE);\n@@ -138,42 +132,37 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AutoCompleteTextField mandatoryCondition =\n-                new AutoCompleteTextField(\"mandatoryCondition\") {\n+        final AutoCompleteTextField mandatoryCondition = new AutoCompleteTextField(\"mandatoryCondition\") {\n \n-                    private static final long serialVersionUID =\n-                            -2428903969518079100L;\n+            private static final long serialVersionUID = -2428903969518079100L;\n \n-                    @Override\n-                    protected Iterator getChoices(String input) {\n-                        List<String> choices = new ArrayList<String>();\n-\n-                        if (Strings.isEmpty(input)) {\n-                            choices = Collections.emptyList();\n-                            return choices.iterator();\n-                        }\n+            @Override\n+            protected Iterator getChoices(String input) {\n+                List<String> choices = new ArrayList<String>();\n \n-                        if (\"true\".startsWith(input.toLowerCase())) {\n-                            choices.add(\"true\");\n-                        } else if (\"false\".startsWith(input.toLowerCase())) {\n-                            choices.add(\"false\");\n-                        }\n+                if (Strings.isEmpty(input)) {\n+                    choices = Collections.emptyList();\n+                    return choices.iterator();\n+                }\n \n+                if (\"true\".startsWith(input.toLowerCase())) {\n+                    choices.add(\"true\");\n+                } else if (\"false\".startsWith(input.toLowerCase())) {\n+                    choices.add(\"false\");\n+                }\n \n-                        return choices.iterator();\n-                    }\n-                };\n+                return choices.iterator();\n+            }\n+        };\n \n-        mandatoryCondition.add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        mandatoryCondition.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                    private static final long serialVersionUID =\n-                            -1107858522700306810L;\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n-                    @Override\n-                    protected void onUpdate(AjaxRequestTarget art) {\n-                    }\n-                });\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget art) {\n+            }\n+        });\n \n         final AjaxCheckBoxPanel multivalue = new AjaxCheckBoxPanel(\"multivalue\", getString(\"multivalue\"),\n                 new PropertyModel<Boolean>(schema, \"multivalue\"));\n@@ -184,14 +173,12 @@ protected void onUpdate(AjaxRequestTarget art) {\n         final AjaxCheckBoxPanel uniqueConstraint = new AjaxCheckBoxPanel(\"uniqueConstraint\",\n                 getString(\"uniqueConstraint\"), new PropertyModel<Boolean>(schema, \"uniqueConstraint\"));\n \n-        final AjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new ResourceModel(\"submit\")) {\n+        final AjaxButton submit = new IndicatingAjaxButton(\"apply\", new ResourceModel(\"submit\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 SchemaTO schemaTO = (SchemaTO) form.getDefaultModelObject();\n \n@@ -208,8 +195,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n                         restClient.updateSchema(kind, schemaTO);\n                     }\n                     if (callerPageRef.getPage() instanceof BasePage) {\n-                        ((BasePage) callerPageRef.getPage()).setModalResult(\n-                                true);\n+                        ((BasePage) callerPageRef.getPage()).setModalResult(true);\n                     }\n \n                     window.close(target);\n@@ -220,8 +206,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n@@ -230,15 +215,12 @@ protected void onError(final AjaxRequestTarget target,\n         String allowedRoles;\n \n         if (createFlag) {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n-                    \"create\");\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\", \"create\");\n         } else {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n-                    \"update\");\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\", \"update\");\n         }\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                submit, ENABLE, allowedRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, allowedRoles);\n \n         schemaForm.add(name);\n         schemaForm.add(conversionPattern);"},{"sha":"1684e174c80ee430878cf73927ac317847837363","filename":"console/src/main/java/org/syncope/console/pages/StatusModalPage.java","status":"modified","additions":8,"deletions":20,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -40,10 +40,7 @@ public class StatusModalPage extends BaseModalPage {\n     @SpringBean\n     private UserRestClient userRestClient;\n \n-    public StatusModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n-            final UserTO userTO) {\n+    public StatusModalPage(final PageReference callerPageRef, final ModalWindow window, final UserTO userTO) {\n \n         super();\n \n@@ -52,19 +49,15 @@ public StatusModalPage(\n \n         final List<StatusBean> statuses = new ArrayList<StatusBean>();\n \n-        final StatusPanel statusPanel =\n-                new StatusPanel(\"statuspanel\", userTO, statuses);\n+        final StatusPanel statusPanel = new StatusPanel(\"statuspanel\", userTO, statuses);\n         form.add(statusPanel);\n \n-        final AjaxButton disable = new IndicatingAjaxButton(\n-                \"disable\", new ResourceModel(\"disable\", \"Disable\")) {\n+        final AjaxButton disable = new IndicatingAjaxButton(\"disable\", new ResourceModel(\"disable\", \"Disable\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(\n-                    final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 try {\n                     userRestClient.suspend(userTO.getId(), statuses);\n@@ -82,22 +75,18 @@ protected void onSubmit(\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n         };\n \n-        final AjaxButton enable = new IndicatingAjaxButton(\n-                \"enable\", new ResourceModel(\"enable\", \"Enable\")) {\n+        final AjaxButton enable = new IndicatingAjaxButton(\"enable\", new ResourceModel(\"enable\", \"Enable\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(\n-                    final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 try {\n                     userRestClient.reactivate(userTO.getId(), statuses);\n@@ -113,8 +102,7 @@ protected void onSubmit(\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }"},{"sha":"9bf6ae7e8e9afa6531170aca4088ee12d7209ace","filename":"console/src/main/java/org/syncope/console/pages/SyncTaskModalPage.java","status":"modified","additions":13,"deletions":21,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -43,32 +43,25 @@ public class SyncTaskModalPage extends AbstractSchedTaskModalPage {\n     @SpringBean\n     private ResourceRestClient resourceRestClient;\n \n-    public SyncTaskModalPage(\n-            final ModalWindow window,\n-            final SyncTaskTO taskTO,\n-            final PageReference callerPageRef) {\n+    public SyncTaskModalPage(final ModalWindow window, final SyncTaskTO taskTO, final PageReference callerPageRef) {\n \n         super(window, taskTO, callerPageRef);\n \n-        final IModel<List<String>> allResources =\n-                new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> allResources = new LoadableDetachableModel<List<String>>() {\n \n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-                    @Override\n-                    protected List<String> load() {\n-                        final List<String> resourceNames =\n-                                new ArrayList<String>();\n+            @Override\n+            protected List<String> load() {\n+                final List<String> resourceNames = new ArrayList<String>();\n \n-                        for (ResourceTO resourceTO :\n-                                resourceRestClient.getAllResources()) {\n+                for (ResourceTO resourceTO : resourceRestClient.getAllResources()) {\n \n-                            resourceNames.add(resourceTO.getName());\n-                        }\n-                        return resourceNames;\n-                    }\n-                };\n+                    resourceNames.add(resourceTO.getName());\n+                }\n+                return resourceNames;\n+            }\n+        };\n \n         final AjaxDropDownChoicePanel<String> resource = new AjaxDropDownChoicePanel<String>(\"resource\",\n                 getString(\"resourceName\"), new PropertyModel(taskTO, \"resource\"));\n@@ -93,8 +86,7 @@ protected List<String> load() {\n         final AjaxDropDownChoicePanel<String> actionsClassName = new AjaxDropDownChoicePanel<String>(\n                 \"jobActionsClassName\", getString(\"actionsClass\"), new PropertyModel(taskTO, \"jobActionsClassName\"));\n         actionsClassName.setChoices(classNames.getObject());\n-        actionsClassName.setStyleShet(\n-                \"ui-widget-content ui-corner-all long_dynamicsize\");\n+        actionsClassName.setStyleShet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n         profile.add(actionsClassName);\n \n         final AjaxCheckBoxPanel creates = new AjaxCheckBoxPanel(\"performCreate\", getString(\"creates\"),"},{"sha":"915421bce1eab9f21b019695ba4fb6803d8ae05d","filename":"console/src/main/java/org/syncope/console/pages/TaskModalPage.java","status":"modified","additions":33,"deletions":55,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -77,19 +77,16 @@ public TaskModalPage(final TaskTO taskTO) {\n         final TaskTO actual = taskTO.getId() == 0\n                 ? taskTO\n                 : taskTO instanceof PropagationTaskTO\n-                ? taskRestClient.readPropagationTask(taskTO.getId())\n-                : taskTO instanceof NotificationTaskTO\n-                ? taskRestClient.readNotificationTask(taskTO.getId())\n-                : taskTO instanceof SyncTaskTO\n-                ? taskRestClient.readSchedTask(\n-                SyncTaskTO.class, taskTO.getId())\n-                : taskRestClient.readSchedTask(\n-                SchedTaskTO.class, taskTO.getId());\n+                        ? taskRestClient.readPropagationTask(taskTO.getId())\n+                        : taskTO instanceof NotificationTaskTO\n+                                ? taskRestClient.readNotificationTask(taskTO.getId())\n+                                : taskTO instanceof SyncTaskTO\n+                                        ? taskRestClient.readSchedTask(SyncTaskTO.class, taskTO.getId())\n+                                        : taskRestClient.readSchedTask(SchedTaskTO.class, taskTO.getId());\n \n         taskTO.setExecutions(actual.getExecutions());\n \n-        final ModalWindow taskExecMessageWin = new ModalWindow(\n-                \"taskExecMessageWin\");\n+        final ModalWindow taskExecMessageWin = new ModalWindow(\"taskExecMessageWin\");\n         taskExecMessageWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         taskExecMessageWin.setCookieName(\"task-exec-message-win-modal\");\n         add(taskExecMessageWin);\n@@ -109,26 +106,22 @@ public TaskModalPage(final TaskTO taskTO) {\n         final Label idLabel = new Label(\"idLabel\", new ResourceModel(\"id\"));\n         profile.add(idLabel);\n \n-        final AjaxTextFieldPanel id = new AjaxTextFieldPanel(\"id\", getString(\"id\"),\n-                new PropertyModel<String>(taskTO, \"id\"));\n+        final AjaxTextFieldPanel id = new AjaxTextFieldPanel(\"id\", getString(\"id\"), new PropertyModel<String>(taskTO,\n+                \"id\"));\n \n         id.setEnabled(false);\n         profile.add(id);\n \n         final List<IColumn> columns = new ArrayList<IColumn>();\n         columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n \n-        columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"status\"), \"status\", \"status\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"status\"), \"status\", \"status\"));\n \n-        columns.add(new AbstractColumn<TaskExecTO>(\n-                new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<TaskExecTO>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -138,50 +131,40 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<TaskExecTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<TaskExecTO>> cellItem, final String componentId,\n                     final IModel<TaskExecTO> model) {\n \n                 final TaskExecTO taskExecutionTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        taskExecMessageWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n-\n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n-\n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new ExecMessageModalPage(\n-                                                model.getObject().getMessage());\n-                                    }\n-                                });\n+                        taskExecMessageWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new ExecMessageModalPage(model.getObject().getMessage());\n+                            }\n+                        });\n                         taskExecMessageWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Tasks\", \"read\",\n-                        StringUtils.hasText(model.getObject().getMessage()));\n+                }, ActionLink.ActionType.EDIT, \"Tasks\", \"read\", StringUtils.hasText(model.getObject().getMessage()));\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            taskRestClient.deleteExecution(\n-                                    taskExecutionTO.getId());\n+                            taskRestClient.deleteExecution(taskExecutionTO.getId());\n \n                             taskTO.removeExecution(taskExecutionTO);\n \n@@ -199,8 +182,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable table =\n-                new AjaxFallbackDefaultDataTable(\"executionsTable\", columns,\n+        final AjaxFallbackDefaultDataTable table = new AjaxFallbackDefaultDataTable(\"executionsTable\", columns,\n                 new TaskExecutionsProvider(taskTO), 10);\n \n         executions.add(table);\n@@ -218,13 +200,11 @@ public TaskExecutionsProvider(final TaskTO taskTO) {\n             //Default sorting\n             this.taskTO = taskTO;\n             setSort(\"startDate\", SortOrder.ASCENDING);\n-            comparator =\n-                    new SortableDataProviderComparator<TaskExecTO>(this);\n+            comparator = new SortableDataProviderComparator<TaskExecTO>(this);\n         }\n \n         @Override\n-        public Iterator<TaskExecTO> iterator(final int first,\n-                final int count) {\n+        public Iterator<TaskExecTO> iterator(final int first, final int count) {\n \n             List<TaskExecTO> list = taskTO.getExecutions();\n \n@@ -239,13 +219,11 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<TaskExecTO> model(\n-                final TaskExecTO taskExecution) {\n+        public IModel<TaskExecTO> model(final TaskExecTO taskExecution) {\n \n             return new AbstractReadOnlyModel<TaskExecTO>() {\n \n-                private static final long serialVersionUID =\n-                        7485475149862342421L;\n+                private static final long serialVersionUID = 7485475149862342421L;\n \n                 @Override\n                 public TaskExecTO getObject() {"},{"sha":"da0959020631bd8ecf3d96f48d4a542a2936b550","filename":"console/src/main/java/org/syncope/console/pages/Tasks.java","status":"modified","additions":17,"deletions":33,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -55,14 +55,12 @@ public Tasks(final PageParameters parameters) {\n     }\n \n     @Override\n-    public void setWindowClosedCallback(final ModalWindow window,\n-            final WebMarkupContainer container) {\n+    public void setWindowClosedCallback(final ModalWindow window, final WebMarkupContainer container) {\n \n         super.setWindowClosedCallback(window, container);\n     }\n \n-    public static class TaskExecutionsProvider\n-            extends SortableDataProvider<TaskExecTO> {\n+    public static class TaskExecutionsProvider extends SortableDataProvider<TaskExecTO> {\n \n         private static final long serialVersionUID = -5401263348984206145L;\n \n@@ -80,8 +78,7 @@ public TaskExecutionsProvider(final TaskTO taskTO) {\n         }\n \n         @Override\n-        public Iterator<TaskExecTO> iterator(final int first,\n-                final int count) {\n+        public Iterator<TaskExecTO> iterator(final int first, final int count) {\n \n             List<TaskExecTO> list = getTaskDB();\n \n@@ -96,8 +93,7 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<TaskExecTO> model(\n-                final TaskExecTO taskExecution) {\n+        public IModel<TaskExecTO> model(final TaskExecTO taskExecution) {\n \n             return new AbstractReadOnlyModel<TaskExecTO>() {\n                 private static final long serialVersionUID = 7485475149862342421L;\n@@ -114,8 +110,7 @@ public List<TaskExecTO> getTaskDB() {\n         }\n     }\n \n-    public static class TasksProvider<T extends TaskTO>\n-            extends SortableDataProvider<T> {\n+    public static class TasksProvider<T extends TaskTO> extends SortableDataProvider<T> {\n \n         private static final long serialVersionUID = -20112718133295756L;\n \n@@ -129,10 +124,7 @@ public List<TaskExecTO> getTaskDB() {\n \n         private Class<T> reference;\n \n-        public TasksProvider(\n-                final TaskRestClient restClient,\n-                final int paginatorRows,\n-                final String id,\n+        public TasksProvider(final TaskRestClient restClient, final int paginatorRows, final String id,\n                 final Class<T> reference) {\n \n             super();\n@@ -150,30 +142,22 @@ public TasksProvider(\n         public Iterator<T> iterator(final int first, final int count) {\n             final List<T> tasks = new ArrayList<T>();\n \n-            for (T task : (List<T>) restClient.listTasks(\n-                    reference, (first / paginatorRows) + 1, paginatorRows)) {\n+            for (T task : (List<T>) restClient.listTasks(reference, (first / paginatorRows) + 1, paginatorRows)) {\n \n-                if (task instanceof SchedTaskTO\n-                        && ((SchedTaskTO) task).getLastExec() == null\n-                        && task.getExecutions() != null\n-                        && !task.getExecutions().isEmpty()) {\n+                if (task instanceof SchedTaskTO && ((SchedTaskTO) task).getLastExec() == null\n+                        && task.getExecutions() != null && !task.getExecutions().isEmpty()) {\n \n-                    Collections.sort(task.getExecutions(),\n-                            new Comparator<TaskExecTO>() {\n+                    Collections.sort(task.getExecutions(), new Comparator<TaskExecTO>() {\n \n-                                @Override\n-                                public int compare(\n-                                        final TaskExecTO left,\n-                                        final TaskExecTO right) {\n+                        @Override\n+                        public int compare(final TaskExecTO left, final TaskExecTO right) {\n \n-                                    return left.getStartDate().\n-                                            compareTo(right.getStartDate());\n-                                }\n-                            });\n+                            return left.getStartDate().compareTo(right.getStartDate());\n+                        }\n+                    });\n \n-                    ((SchedTaskTO) task).setLastExec(\n-                            task.getExecutions().get(\n-                            task.getExecutions().size() - 1).getStartDate());\n+                    ((SchedTaskTO) task).setLastExec(task.getExecutions().get(task.getExecutions().size() - 1)\n+                            .getStartDate());\n                 }\n                 tasks.add(task);\n             }"},{"sha":"a592caadfcd7e593fe381f8e374ddf4ea4da65cb","filename":"console/src/main/java/org/syncope/console/pages/Todo.java","status":"modified","additions":71,"deletions":129,"changes":200,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -109,28 +109,19 @@ public Todo(final PageParameters parameters) {\n     private void setupApproval() {\n         approvalContainer = new WebMarkupContainer(\"approvalContainer\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                approvalContainer, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"Approval\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(approvalContainer, RENDER, xmlRolesReader.getAllAllowedRoles(\n+                \"Approval\", \"list\"));\n \n-        approvalPaginatorRows = prefMan.getPaginatorRows(getRequest(),\n-                Constants.PREF_APPROVAL_PAGINATOR_ROWS);\n+        approvalPaginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_APPROVAL_PAGINATOR_ROWS);\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n-        columns.add(new PropertyColumn(new ResourceModel(\"taskId\"),\n-                \"taskId\", \"taskId\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"key\"),\n-                \"key\", \"key\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"description\"),\n-                \"description\", \"description\"));\n-        columns.add(new DatePropertyColumn(new ResourceModel(\"createTime\"),\n-                \"createTime\", \"createTime\"));\n-        columns.add(new DatePropertyColumn(new ResourceModel(\"dueDate\"),\n-                \"dueDate\", \"dueDate\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"owner\"),\n-                \"owner\", \"owner\"));\n-        columns.add(new AbstractColumn<WorkflowFormTO>(\n-                new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new PropertyColumn(new ResourceModel(\"taskId\"), \"taskId\", \"taskId\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"key\"), \"key\", \"key\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"description\"), \"description\", \"description\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"createTime\"), \"createTime\", \"createTime\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"dueDate\"), \"dueDate\", \"dueDate\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"owner\"), \"owner\", \"owner\"));\n+        columns.add(new AbstractColumn<WorkflowFormTO>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -140,20 +131,16 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<WorkflowFormTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<WorkflowFormTO>> cellItem, final String componentId,\n                     final IModel<WorkflowFormTO> model) {\n \n                 final WorkflowFormTO formTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -170,37 +157,30 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        editApprovalWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        editApprovalWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new ApprovalModalPage(\n-                                                Todo.this.getPageReference(),\n-                                                editApprovalWin, formTO);\n-                                    }\n-                                });\n+                            @Override\n+                            public Page createPage() {\n+                                return new ApprovalModalPage(Todo.this.getPageReference(), editApprovalWin, formTO);\n+                            }\n+                        });\n \n                         editApprovalWin.show(target);\n                     }\n-                }, ActionLink.ActionType.EDIT, \"Approval\", \"read\",\n-                        SyncopeSession.get().getUserId().equals(\n+                }, ActionLink.ActionType.EDIT, \"Approval\", \"read\", SyncopeSession.get().getUserId().equals(\n                         formTO.getOwner()));\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable approvalTable =\n-                new AjaxFallbackDefaultDataTable(\"approvalTable\", columns,\n+        final AjaxFallbackDefaultDataTable approvalTable = new AjaxFallbackDefaultDataTable(\"approvalTable\", columns,\n                 new ApprovalProvider(), approvalPaginatorRows);\n \n         approvalContainer.add(approvalTable);\n@@ -210,24 +190,20 @@ public Page createPage() {\n \n         Form approvalPaginatorForm = new Form(\"approvalPaginatorForm\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                approvalPaginatorForm, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"Approval\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(approvalPaginatorForm, RENDER, xmlRolesReader.getAllAllowedRoles(\n+                \"Approval\", \"list\"));\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"approvalPaginatorRows\"),\n-                prefMan.getPaginatorChoices());\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n+                \"approvalPaginatorRows\"), prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(),\n-                        getResponse(),\n-                        Constants.PREF_APPROVAL_PAGINATOR_ROWS,\n-                        String.valueOf(approvalPaginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_APPROVAL_PAGINATOR_ROWS, String\n+                        .valueOf(approvalPaginatorRows));\n                 approvalTable.setItemsPerPage(approvalPaginatorRows);\n \n                 target.add(approvalContainer);\n@@ -248,21 +224,16 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     private void setupUserRequest() {\n         userRequestContainer = new WebMarkupContainer(\"userRequestContainer\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                userRequestContainer, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"UserRequest\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(userRequestContainer, RENDER, xmlRolesReader.getAllAllowedRoles(\n+                \"UserRequest\", \"list\"));\n \n-        userRequestPaginatorRows = prefMan.getPaginatorRows(getRequest(),\n-                Constants.PREF_USER_REQUEST_PAGINATOR_ROWS);\n+        userRequestPaginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_USER_REQUEST_PAGINATOR_ROWS);\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n-        columns.add(new PropertyColumn(new ResourceModel(\"id\"),\n-                \"id\", \"id\"));\n-        columns.add(new PropertyColumn(new ResourceModel(\"type\"),\n-                \"type\", \"type\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"type\"), \"type\", \"type\"));\n         columns.add(new UserRequestColumn(\"user\"));\n-        columns.add(new AbstractColumn<UserRequestTO>(\n-                new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<UserRequestTO>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -272,37 +243,29 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<UserRequestTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<UserRequestTO>> cellItem, final String componentId,\n                     final IModel<UserRequestTO> model) {\n \n                 final UserRequestTO request = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        editUserRequestWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        editUserRequestWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new UserRequestModalPage(\n-                                                Todo.this.getPageReference(),\n-                                                editUserRequestWin,\n-                                                model.getObject());\n-                                    }\n-                                });\n+                            @Override\n+                            public Page createPage() {\n+                                return new UserRequestModalPage(Todo.this.getPageReference(), editUserRequestWin, model\n+                                        .getObject());\n+                            }\n+                        });\n \n                         editUserRequestWin.show(target);\n                     }\n@@ -311,16 +274,13 @@ public Page createPage() {\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            userRestClient.delete(\n-                                    model.getObject().getUserId());\n-                            userRequestRestClient.delete(\n-                                    model.getObject().getId());\n+                            userRestClient.delete(model.getObject().getUserId());\n+                            userRequestRestClient.delete(model.getObject().getId());\n                         } catch (SyncopeClientCompositeErrorException e) {\n                             LOG.error(\"While deleting an user\", e);\n                             error(e.getMessage());\n@@ -337,8 +297,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -361,9 +320,8 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable userRequestTable =\n-                new AjaxFallbackDefaultDataTable(\"userRequestTable\", columns,\n-                new UserRequestProvider(), userRequestPaginatorRows);\n+        final AjaxFallbackDefaultDataTable userRequestTable = new AjaxFallbackDefaultDataTable(\"userRequestTable\",\n+                columns, new UserRequestProvider(), userRequestPaginatorRows);\n \n         userRequestContainer.add(userRequestTable);\n         userRequestContainer.setOutputMarkupId(true);\n@@ -372,24 +330,20 @@ public void onClick(final AjaxRequestTarget target) {\n \n         Form userRequestPaginatorForm = new Form(\"userRequestPaginatorForm\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                userRequestPaginatorForm, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"UserRequest\", \"list\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(userRequestPaginatorForm, RENDER, xmlRolesReader\n+                .getAllAllowedRoles(\"UserRequest\", \"list\"));\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"userRequestPaginatorRows\"),\n-                prefMan.getPaginatorChoices());\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this,\n+                \"userRequestPaginatorRows\"), prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(),\n-                        getResponse(),\n-                        Constants.PREF_USER_REQUEST_PAGINATOR_ROWS,\n-                        String.valueOf(userRequestPaginatorRows));\n+                prefMan.set(getRequest(), getResponse(), Constants.PREF_USER_REQUEST_PAGINATOR_ROWS, String\n+                        .valueOf(userRequestPaginatorRows));\n                 userRequestTable.setItemsPerPage(userRequestPaginatorRows);\n \n                 target.add(userRequestContainer);\n@@ -407,8 +361,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         setWindowClosedCallback(editUserRequestWin, userRequestContainer);\n     }\n \n-    private class ApprovalProvider\n-            extends SortableDataProvider<WorkflowFormTO> {\n+    private class ApprovalProvider extends SortableDataProvider<WorkflowFormTO> {\n \n         private static final long serialVersionUID = -2311716167583335852L;\n \n@@ -417,13 +370,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         public ApprovalProvider() {\n             //Default sorting\n             setSort(\"key\", SortOrder.ASCENDING);\n-            comparator =\n-                    new SortableDataProviderComparator<WorkflowFormTO>(this);\n+            comparator = new SortableDataProviderComparator<WorkflowFormTO>(this);\n         }\n \n         @Override\n-        public Iterator<WorkflowFormTO> iterator(final int first,\n-                final int count) {\n+        public Iterator<WorkflowFormTO> iterator(final int first, final int count) {\n \n             List<WorkflowFormTO> list = approvalRestClient.getForms();\n \n@@ -438,13 +389,11 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<WorkflowFormTO> model(\n-                final WorkflowFormTO configuration) {\n+        public IModel<WorkflowFormTO> model(final WorkflowFormTO configuration) {\n \n             return new AbstractReadOnlyModel<WorkflowFormTO>() {\n \n-                private static final long serialVersionUID =\n-                        -2566070996511906708L;\n+                private static final long serialVersionUID = -2566070996511906708L;\n \n                 @Override\n                 public WorkflowFormTO getObject() {\n@@ -454,8 +403,7 @@ public WorkflowFormTO getObject() {\n         }\n     }\n \n-    private class UserRequestProvider\n-            extends SortableDataProvider<UserRequestTO> {\n+    private class UserRequestProvider extends SortableDataProvider<UserRequestTO> {\n \n         private static final long serialVersionUID = -2311716167583335852L;\n \n@@ -464,13 +412,11 @@ public WorkflowFormTO getObject() {\n         public UserRequestProvider() {\n             //Default sorting\n             setSort(\"id\", SortOrder.ASCENDING);\n-            comparator =\n-                    new SortableDataProviderComparator<UserRequestTO>(this);\n+            comparator = new SortableDataProviderComparator<UserRequestTO>(this);\n         }\n \n         @Override\n-        public Iterator<UserRequestTO> iterator(final int first,\n-                final int count) {\n+        public Iterator<UserRequestTO> iterator(final int first, final int count) {\n \n             List<UserRequestTO> list = userRequestRestClient.list();\n \n@@ -485,13 +431,11 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<UserRequestTO> model(\n-                final UserRequestTO userRequestTO) {\n+        public IModel<UserRequestTO> model(final UserRequestTO userRequestTO) {\n \n             return new AbstractReadOnlyModel<UserRequestTO>() {\n \n-                private static final long serialVersionUID =\n-                        -2566070996511906708L;\n+                private static final long serialVersionUID = -2566070996511906708L;\n \n                 @Override\n                 public UserRequestTO getObject() {\n@@ -510,9 +454,8 @@ public UserRequestColumn(final String name) {\n         }\n \n         @Override\n-        public void populateItem(\n-                final Item<ICellPopulator<UserRequestTO>> cellItem,\n-                final String componentId, final IModel<UserRequestTO> rowModel) {\n+        public void populateItem(final Item<ICellPopulator<UserRequestTO>> cellItem, final String componentId,\n+                final IModel<UserRequestTO> rowModel) {\n \n             String label = \"\";\n             switch (rowModel.getObject().getType()) {\n@@ -524,8 +467,7 @@ public void populateItem(\n                     break;\n \n                 case UPDATE:\n-                    label = String.valueOf(\n-                            rowModel.getObject().getUserMod().getId());\n+                    label = String.valueOf(rowModel.getObject().getUserMod().getId());\n                     break;\n \n                 case DELETE:"},{"sha":"3ecfa00a59fec94693eb41a7788b3fb50325744b","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":19,"deletions":32,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -65,12 +65,8 @@ public enum Mode {\n \n     private final boolean resetPassword;\n \n-    public UserModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n-            final UserTO userTO,\n-            final Mode mode,\n-            final boolean resetPassword) {\n+    public UserModalPage(final PageReference callerPageRef, final ModalWindow window, final UserTO userTO,\n+            final Mode mode, final boolean resetPassword) {\n \n         super();\n \n@@ -85,10 +81,7 @@ public UserModalPage(\n         add(fragment);\n     }\n \n-    public UserModalPage(\n-            final ModalWindow window,\n-            final UserTO userTO,\n-            final Mode mode) {\n+    public UserModalPage(final ModalWindow window, final UserTO userTO, final Mode mode) {\n \n         super();\n \n@@ -102,8 +95,8 @@ public UserModalPage(\n         fragment.setOutputMarkupId(true);\n         add(fragment);\n \n-        final UserManagementResultPanel result = new UserManagementResultPanel(\n-                \"userModalPageResult\", window, mode, userTO);\n+        final UserManagementResultPanel result = new UserManagementResultPanel(\"userModalPageResult\", window, mode,\n+                userTO);\n         result.setOutputMarkupId(true);\n \n         fragment.add(result);\n@@ -120,30 +113,30 @@ public void setUserTO(final UserTO userTO) {\n     protected Form setupEditPanel() {\n \n         fragment.add(new Label(\"id\", userTO.getId() == 0\n-                ? \"\" : userTO.getUsername()));\n+                ? \"\"\n+                : userTO.getUsername()));\n \n         fragment.add(new Label(\"new\", userTO.getId() == 0\n-                ? new ResourceModel(\"new\") : new Model(\"\")));\n+                ? new ResourceModel(\"new\")\n+                : new Model(\"\")));\n \n         final Form form = new Form(\"UserForm\");\n         form.setModel(new CompoundPropertyModel(userTO));\n \n         //--------------------------------\n         // User details\n         //--------------------------------\n-        form.add(new UserDetailsPanel(\n-                \"details\", userTO, form, resetPassword, mode == Mode.TEMPLATE));\n-        \n+        form.add(new UserDetailsPanel(\"details\", userTO, form, resetPassword, mode == Mode.TEMPLATE));\n+\n         form.add(new Label(\"statuspanel\", \"\"));\n-        \n+\n         form.add(new Label(\"accountinformation\", \"\"));\n         //--------------------------------\n \n         //--------------------------------\n         // Attributes panel\n         //--------------------------------\n-        form.add(new AttributesPanel(\n-                \"attributes\", userTO, form, mode == Mode.TEMPLATE));\n+        form.add(new AttributesPanel(\"attributes\", userTO, form, mode == Mode.TEMPLATE));\n         //--------------------------------\n \n         //--------------------------------\n@@ -155,8 +148,7 @@ protected Form setupEditPanel() {\n         //--------------------------------\n         // Virtual attributes panel\n         //--------------------------------\n-        form.add(new VirtualAttributesPanel(\n-                \"virtualAttributes\", userTO, mode == Mode.TEMPLATE));\n+        form.add(new VirtualAttributesPanel(\"virtualAttributes\", userTO, mode == Mode.TEMPLATE));\n         //--------------------------------\n \n         //--------------------------------\n@@ -177,8 +169,7 @@ protected Form setupEditPanel() {\n             String allowedRoles = userTO.getId() == 0\n                     ? xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\")\n                     : xmlRolesReader.getAllAllowedRoles(\"Users\", \"update\");\n-            MetaDataRoleAuthorizationStrategy.authorize(\n-                    submit, RENDER, allowedRoles);\n+            MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, allowedRoles);\n         }\n \n         fragment.add(form);\n@@ -193,8 +184,7 @@ protected AjaxButton getOnSubmit() {\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(\n-                    final AjaxRequestTarget target, final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 try {\n                     submitAction(target, form);\n@@ -213,17 +203,14 @@ protected void onSubmit(\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n         };\n     }\n \n-    protected abstract void submitAction(\n-            final AjaxRequestTarget target, final Form form);\n+    protected abstract void submitAction(final AjaxRequestTarget target, final Form form);\n \n-    protected abstract void closeAction(\n-            final AjaxRequestTarget target, final Form form);\n+    protected abstract void closeAction(final AjaxRequestTarget target, final Form form);\n }"},{"sha":"002309d2c213d2421588e5698b725f91ed3471f5","filename":"console/src/main/java/org/syncope/console/pages/UserRequestModalPage.java","status":"modified","additions":9,"deletions":21,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -47,19 +47,14 @@ public class UserRequestModalPage extends UserModalPage {\n \n     private UserRequestTO userRequestTO;\n \n-    public UserRequestModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n-            final UserTO userTO) {\n+    public UserRequestModalPage(final PageReference callerPageRef, final ModalWindow window, final UserTO userTO) {\n \n         super(callerPageRef, window, userTO, Mode.SELF, false);\n \n         setupEditPanel();\n     }\n \n-    public UserRequestModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n+    public UserRequestModalPage(final PageReference callerPageRef, final ModalWindow window,\n             final UserRequestTO userRequestTO) {\n \n         super(callerPageRef, window, null, Mode.SELF, false);\n@@ -72,12 +67,9 @@ public UserRequestModalPage(\n                 break;\n \n             case UPDATE:\n-                this.initialUserTO =\n-                        userRestClient.read(userRequestTO.getUserMod().getId());\n+                this.initialUserTO = userRestClient.read(userRequestTO.getUserMod().getId());\n \n-                userTO = AttributableOperations.apply(\n-                        initialUserTO,\n-                        userRequestTO.getUserMod());\n+                userTO = AttributableOperations.apply(initialUserTO, userRequestTO.getUserMod());\n                 break;\n \n             case DELETE:\n@@ -89,23 +81,20 @@ public UserRequestModalPage(\n         setupEditPanel();\n     }\n \n-    public UserRequestModalPage(\n-            final ModalWindow window,\n-            final UserTO userTO) {\n+    public UserRequestModalPage(final ModalWindow window, final UserTO userTO) {\n \n         super(window, userTO, Mode.SELF);\n     }\n \n     @Override\n-    protected void submitAction(\n-            final AjaxRequestTarget target, final Form form) {\n+    protected void submitAction(final AjaxRequestTarget target, final Form form) {\n         final UserTO updatedUserTO = (UserTO) form.getModelObject();\n \n         if (updatedUserTO.getId() == 0) {\n             requestRestClient.requestCreate(updatedUserTO);\n         } else {\n-            final UserMod userMod = AttributableOperations.diff(\n-                    updatedUserTO, userRestClient.read(updatedUserTO.getId()));\n+            final UserMod userMod = AttributableOperations.diff(updatedUserTO, userRestClient.read(updatedUserTO\n+                    .getId()));\n \n             // update user just if it is changed\n             if (!userMod.isEmpty()) {\n@@ -115,8 +104,7 @@ protected void submitAction(\n     }\n \n     @Override\n-    protected void closeAction(\n-            final AjaxRequestTarget target, final Form form) {\n+    protected void closeAction(final AjaxRequestTarget target, final Form form) {\n         setResponsePage(new UserRequestModalPage(window, userTO));\n     }\n }"},{"sha":"659bce40feef4a0856e55b5d0fb492fe8fed0099","filename":"console/src/main/java/org/syncope/console/pages/UserTemplateModalPage.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserTemplateModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserTemplateModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserTemplateModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -37,14 +37,12 @@ public class UserTemplateModalPage extends UserModalPage {\n \n     private SyncTaskTO syncTaskTO;\n \n-    public UserTemplateModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n+    public UserTemplateModalPage(final PageReference callerPageRef, final ModalWindow window,\n             final SyncTaskTO syncTaskTO) {\n \n         super(callerPageRef, window, syncTaskTO.getUserTemplate() == null\n-                ? new UserTO() : syncTaskTO.getUserTemplate(),\n-                Mode.TEMPLATE, true);\n+                ? new UserTO()\n+                : syncTaskTO.getUserTemplate(), Mode.TEMPLATE, true);\n \n         this.syncTaskTO = syncTaskTO;\n "},{"sha":"bea3aeb50739c62f9585cc613935da10b4fb7095","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":10,"deletions":20,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -55,12 +55,10 @@ public Users(final PageParameters parameters) {\n         editModalWin.setCookieName(\"edit-modal\");\n         add(editModalWin);\n \n-        final ResultSetPanel searchResult = new ResultSetPanel(\"searchResult\",\n-                true, null, getPageReference());\n+        final ResultSetPanel searchResult = new ResultSetPanel(\"searchResult\", true, null, getPageReference());\n         add(searchResult);\n \n-        final ResultSetPanel listResult = new ResultSetPanel(\"listResult\",\n-                false, null, getPageReference());\n+        final ResultSetPanel listResult = new ResultSetPanel(\"listResult\", false, null, getPageReference());\n         add(listResult);\n \n         // create new user\n@@ -72,22 +70,19 @@ public Users(final PageParameters parameters) {\n             public void onClick(final AjaxRequestTarget target) {\n                 editModalWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                    private static final long serialVersionUID =\n-                            -7834632442532690940L;\n+                    private static final long serialVersionUID = -7834632442532690940L;\n \n                     @Override\n                     public Page createPage() {\n-                        return new EditUserModalPage(\n-                                Users.this.getPageReference(),\n-                                editModalWin, new UserTO());\n+                        return new EditUserModalPage(Users.this.getPageReference(), editModalWin, new UserTO());\n                     }\n                 });\n \n                 editModalWin.show(target);\n             }\n         };\n-        MetaDataRoleAuthorizationStrategy.authorize(createLink, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Users\",\n+                \"create\"));\n         add(createLink);\n \n         setWindowClosedReloadCallback(editModalWin);\n@@ -98,14 +93,12 @@ public Page createPage() {\n         final UserSearchPanel searchPanel = new UserSearchPanel(\"searchPanel\");\n         searchForm.add(searchPanel);\n \n-        searchForm.add(new IndicatingAjaxButton(\n-                \"search\", new ResourceModel(\"search\")) {\n+        searchForm.add(new IndicatingAjaxButton(\"search\", new ResourceModel(\"search\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                 final NodeCond searchCond = searchPanel.buildSearchCond();\n                 LOG.debug(\"Node condition \" + searchCond);\n@@ -117,17 +110,14 @@ protected void onSubmit(final AjaxRequestTarget target,\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(searchPanel.getSearchFeedback());\n             }\n         });\n     }\n \n-    private void doSearch(final AjaxRequestTarget target,\n-            final NodeCond searchCond,\n-            final ResultSetPanel resultsetPanel) {\n+    private void doSearch(final AjaxRequestTarget target, final NodeCond searchCond, final ResultSetPanel resultsetPanel) {\n \n         if (searchCond == null || !searchCond.checkValidity()) {\n             error(getString(\"search_error\"));"},{"sha":"18ad8a795d083ae3e6bf253703f39a9aa2dc61d0","filename":"console/src/main/java/org/syncope/console/pages/VirtualSchemaModalPage.java","status":"modified","additions":12,"deletions":23,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -45,11 +45,8 @@ public VirtualSchemaModalPage(AttributableType kind) {\n     }\n \n     @Override\n-    public void setSchemaModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n-            AbstractBaseBean schema,\n-            final boolean createFlag) {\n+    public void setSchemaModalPage(final PageReference callerPageRef, final ModalWindow window,\n+            AbstractBaseBean schema, final boolean createFlag) {\n \n         if (schema == null) {\n             schema = new VirtualSchemaTO();\n@@ -59,23 +56,20 @@ public void setSchemaModalPage(\n \n         schemaForm.setModel(new CompoundPropertyModel(schema));\n \n-        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"),\n-                new PropertyModel<String>(schema, \"name\"));\n+        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"), new PropertyModel<String>(\n+                schema, \"name\"));\n         name.addRequiredLabel();\n \n         name.setEnabled(createFlag);\n \n-        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new ResourceModel(\"submit\")) {\n+        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\"apply\", new ResourceModel(\"submit\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n-                VirtualSchemaTO schemaTO =\n-                        (VirtualSchemaTO) form.getDefaultModelObject();\n+                VirtualSchemaTO schemaTO = (VirtualSchemaTO) form.getDefaultModelObject();\n \n                 try {\n                     if (createFlag) {\n@@ -84,8 +78,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n                         restClient.updateVirtualSchema(kind, schemaTO);\n                     }\n                     if (callerPageRef.getPage() instanceof BasePage) {\n-                        ((BasePage) callerPageRef.getPage()).setModalResult(\n-                                true);\n+                        ((BasePage) callerPageRef.getPage()).setModalResult(true);\n                     }\n \n                     window.close(target);\n@@ -96,8 +89,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n@@ -106,15 +98,12 @@ protected void onError(final AjaxRequestTarget target,\n         String allowedRoles;\n \n         if (createFlag) {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n-                    \"create\");\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\", \"create\");\n         } else {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n-                    \"update\");\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\", \"update\");\n         }\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                submit, ENABLE, allowedRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, allowedRoles);\n \n         schemaForm.add(name);\n "},{"sha":"45b8d76e1636703777b9d130bae0fc2da825465a","filename":"console/src/main/java/org/syncope/console/pages/WelcomePage.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -40,7 +40,6 @@ public class WelcomePage extends WebPage {\n     public WelcomePage(final PageParameters parameters) {\n         super(parameters);\n \n-        ((SyncopeApplication) getApplication()).setupNavigationPane(\n-                this, xmlRolesReader, false, version);\n+        ((SyncopeApplication) getApplication()).setupNavigationPane(this, xmlRolesReader, false, version);\n     }\n }"},{"sha":"b9fc40896585caf71637abb0f0fd6fc24790911d","filename":"console/src/main/java/org/syncope/console/pages/panels/AccountInformationPanel.java","status":"modified","additions":18,"deletions":21,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -27,59 +27,56 @@\n \n public class AccountInformationPanel extends Panel {\n \n-    public <T extends AbstractAttributableTO> AccountInformationPanel(\n-            final String id,\n-            final UserTO userTO) {\n+    public <T extends AbstractAttributableTO> AccountInformationPanel(final String id, final UserTO userTO) {\n \n         super(id);\n \n         // ------------------------\n         // Creation date\n         // ------------------------\n-        add(new Label(\"creationDate\", new Model(\n-                userTO.getCreationDate() != null\n-                ? SyncopeSession.get().getDateFormat().format(\n-                userTO.getCreationDate()) : \"\")));\n+        add(new Label(\"creationDate\", new Model(userTO.getCreationDate() != null\n+                ? SyncopeSession.get().getDateFormat().format(userTO.getCreationDate())\n+                : \"\")));\n         // ------------------------\n \n         // ------------------------\n         // Change password date\n         // ------------------------\n-        add(new Label(\"changePwdDate\", new Model(\n-                userTO.getChangePwdDate() != null\n-                ? SyncopeSession.get().getDateFormat().format(\n-                userTO.getChangePwdDate()) : \"\")));\n+        add(new Label(\"changePwdDate\", new Model(userTO.getChangePwdDate() != null\n+                ? SyncopeSession.get().getDateFormat().format(userTO.getChangePwdDate())\n+                : \"\")));\n         // ------------------------\n \n         // ------------------------\n         // Last login date\n         // ------------------------\n-        add(new Label(\"lastLoginDate\", new Model(\n-                userTO.getLastLoginDate() != null\n-                ? SyncopeSession.get().getDateFormat().format(\n-                userTO.getLastLoginDate()) : \"\")));\n+        add(new Label(\"lastLoginDate\", new Model(userTO.getLastLoginDate() != null\n+                ? SyncopeSession.get().getDateFormat().format(userTO.getLastLoginDate())\n+                : \"\")));\n         // ------------------------\n \n         // ------------------------\n         // Failed logins\n         // ------------------------\n         add(new Label(\"failedLogins\", new Model(userTO.getFailedLogins() != null\n-                ? userTO.getFailedLogins() : \"\")));\n+                ? userTO.getFailedLogins()\n+                : \"\")));\n         // ------------------------\n \n         // ------------------------\n         // Token\n         // ------------------------\n-        add(new Label(\"token\", new Model(\n-                userTO.getToken() != null ? userTO.getToken() : \"\")));\n+        add(new Label(\"token\", new Model(userTO.getToken() != null\n+                ? userTO.getToken()\n+                : \"\")));\n         // ------------------------\n \n         // ------------------------\n         // Token expire time\n         // ------------------------\n-        add(new Label(\"tokenExpireTime\", new Model(\n-                userTO.getTokenExpireTime() != null\n-                ? userTO.getTokenExpireTime() : \"\")));\n+        add(new Label(\"tokenExpireTime\", new Model(userTO.getTokenExpireTime() != null\n+                ? userTO.getTokenExpireTime()\n+                : \"\")));\n         // ------------------------\n     }\n }"},{"sha":"dfa2db250ea9062938f724270f0680fe5acaafea","filename":"console/src/main/java/org/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":39,"deletions":58,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -61,73 +61,60 @@ public class AttributesPanel extends Panel {\n \n     private final boolean templateMode;\n \n-    public <T extends AbstractAttributableTO> AttributesPanel(\n-            final String id,\n-            final T entityTO,\n-            final Form form,\n+    public <T extends AbstractAttributableTO> AttributesPanel(final String id, final T entityTO, final Form form,\n             final boolean templateMode) {\n \n         super(id);\n         this.templateMode = templateMode;\n \n-        final IModel<Map<String, SchemaTO>> schemas =\n-                new LoadableDetachableModel<Map<String, SchemaTO>>() {\n+        final IModel<Map<String, SchemaTO>> schemas = new LoadableDetachableModel<Map<String, SchemaTO>>() {\n \n-                    private static final long serialVersionUID =\n-                            -2012833443695917883L;\n+            private static final long serialVersionUID = -2012833443695917883L;\n \n-                    @Override\n-                    protected Map<String, SchemaTO> load() {\n-                        final List<SchemaTO> schemaTOs;\n-                        if (entityTO instanceof RoleTO) {\n-                            schemaTOs = schemaRestClient.getSchemas(AttributableType.ROLE);\n-                        } else if (entityTO instanceof UserTO) {\n-                            schemaTOs = schemaRestClient.getSchemas(AttributableType.USER);\n-                        } else {\n-                            schemaTOs = schemaRestClient.getSchemas(AttributableType.MEMBERSHIP);\n-                        }\n+            @Override\n+            protected Map<String, SchemaTO> load() {\n+                final List<SchemaTO> schemaTOs;\n+                if (entityTO instanceof RoleTO) {\n+                    schemaTOs = schemaRestClient.getSchemas(AttributableType.ROLE);\n+                } else if (entityTO instanceof UserTO) {\n+                    schemaTOs = schemaRestClient.getSchemas(AttributableType.USER);\n+                } else {\n+                    schemaTOs = schemaRestClient.getSchemas(AttributableType.MEMBERSHIP);\n+                }\n \n-                        final Map<String, SchemaTO> schemas =\n-                                new HashMap<String, SchemaTO>();\n+                final Map<String, SchemaTO> schemas = new HashMap<String, SchemaTO>();\n \n-                        for (SchemaTO schemaTO : schemaTOs) {\n-                            schemas.put(schemaTO.getName(), schemaTO);\n-                        }\n+                for (SchemaTO schemaTO : schemaTOs) {\n+                    schemas.put(schemaTO.getName(), schemaTO);\n+                }\n \n-                        return schemas;\n-                    }\n-                };\n+                return schemas;\n+            }\n+        };\n \n         initEntityData(entityTO, schemas.getObject().values());\n \n-        final ListView<AttributeTO> attributeView = new ListView<AttributeTO>(\n-                \"schemas\", new PropertyModel<List<? extends AttributeTO>>(\n-                entityTO, \"attributes\")) {\n+        final ListView<AttributeTO> attributeView = new ListView<AttributeTO>(\"schemas\",\n+                new PropertyModel<List<? extends AttributeTO>>(entityTO, \"attributes\")) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem item) {\n-                final AttributeTO attributeTO =\n-                        (AttributeTO) item.getDefaultModelObject();\n+                final AttributeTO attributeTO = (AttributeTO) item.getDefaultModelObject();\n \n                 item.add(new Label(\"name\", templateMode\n                         ? attributeTO.getSchema() + \" (JEXL)\"\n                         : attributeTO.getSchema()));\n \n-                final FieldPanel panel = getFieldPanel(\n-                        schemas.getObject().get(attributeTO.getSchema()),\n-                        form, attributeTO);\n+                final FieldPanel panel = getFieldPanel(schemas.getObject().get(attributeTO.getSchema()), form,\n+                        attributeTO);\n \n-                if (templateMode\n-                        || !schemas.getObject().get(attributeTO.getSchema()).\n-                        isMultivalue()) {\n+                if (templateMode || !schemas.getObject().get(attributeTO.getSchema()).isMultivalue()) {\n \n                     item.add(panel);\n                 } else {\n-                    item.add(new MultiValueSelectorPanel<String>(\n-                            \"panel\",\n-                            new PropertyModel(attributeTO, \"values\"),\n+                    item.add(new MultiValueSelectorPanel<String>(\"panel\", new PropertyModel(attributeTO, \"values\"),\n                             panel));\n                 }\n             }\n@@ -136,9 +123,7 @@ protected void populateItem(final ListItem item) {\n         add(attributeView);\n     }\n \n-    private List<AttributeTO> initEntityData(\n-            final AbstractAttributableTO entityTO,\n-            final Collection<SchemaTO> schemas) {\n+    private List<AttributeTO> initEntityData(final AbstractAttributableTO entityTO, final Collection<SchemaTO> schemas) {\n \n         final List<AttributeTO> entityData = new ArrayList<AttributeTO>();\n \n@@ -148,9 +133,7 @@ private List<AttributeTO> initEntityData(\n             AttributeTO attributeTO = new AttributeTO();\n             attributeTO.setSchema(schema.getName());\n \n-            if (attrMap.get(schema.getName()) == null\n-                    || attrMap.get(schema.getName()).\n-                    getValues().isEmpty()) {\n+            if (attrMap.get(schema.getName()) == null || attrMap.get(schema.getName()).getValues().isEmpty()) {\n \n                 List<String> values = new ArrayList<String>();\n                 values.add(\"\");\n@@ -159,8 +142,7 @@ private List<AttributeTO> initEntityData(\n                 // is important to set readonly only after valus setting\n                 attributeTO.setReadonly(schema.isReadonly());\n             } else {\n-                attributeTO.setValues(\n-                        attrMap.get(schema.getName()).getValues());\n+                attributeTO.setValues(attrMap.get(schema.getName()).getValues());\n             }\n             entityData.add(attributeTO);\n         }\n@@ -170,30 +152,29 @@ private List<AttributeTO> initEntityData(\n         return entityData;\n     }\n \n-    private FieldPanel getFieldPanel(\n-            final SchemaTO schemaTO,\n-            final Form form,\n-            final AttributeTO attributeTO) {\n+    private FieldPanel getFieldPanel(final SchemaTO schemaTO, final Form form, final AttributeTO attributeTO) {\n \n         final FieldPanel panel;\n \n         final boolean required = templateMode\n                 ? false\n                 : schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n \n-        final boolean readOnly = templateMode ? false : schemaTO.isReadonly();\n+        final boolean readOnly = templateMode\n+                ? false\n+                : schemaTO.isReadonly();\n \n         final SchemaType type = templateMode\n-                ? SchemaType.String : schemaTO.getType();\n+                ? SchemaType.String\n+                : schemaTO.getType();\n         switch (type) {\n             case Boolean:\n                 panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getName(), new Model());\n                 panel.setRequired(required);\n                 break;\n \n             case Date:\n-                final String dataPattern = schemaTO.getConversionPattern()\n-                        != null\n+                final String dataPattern = schemaTO.getConversionPattern() != null\n                         ? schemaTO.getConversionPattern()\n                         : SyncopeConstants.DEFAULT_DATE_PATTERN;\n \n@@ -218,8 +199,8 @@ private FieldPanel getFieldPanel(\n \n             case Enum:\n                 panel = new AjaxDropDownChoicePanel<String>(\"panel\", schemaTO.getName(), new Model());\n-                ((AjaxDropDownChoicePanel) panel).setChoices(Arrays.asList(schemaTO.getEnumerationValues().\n-                        split(Schema.enumValuesSeparator)));\n+                ((AjaxDropDownChoicePanel) panel).setChoices(Arrays.asList(schemaTO.getEnumerationValues().split(\n+                        Schema.enumValuesSeparator)));\n                 if (required) {\n                     panel.addRequiredLabel();\n                 }"},{"sha":"4f9efb782f807742948955a91bbeaa1cc74e3b0c","filename":"console/src/main/java/org/syncope/console/pages/panels/DerivedAttributesPanel.java","status":"modified","additions":39,"deletions":68,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -53,84 +53,71 @@ public class DerivedAttributesPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG =\n-            LoggerFactory.getLogger(DerivedAttributesPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(DerivedAttributesPanel.class);\n \n     private static final long serialVersionUID = -5387344116983102292L;\n \n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n-    public <T extends AbstractAttributableTO> DerivedAttributesPanel(\n-            final String id, final T entityTO) {\n+    public <T extends AbstractAttributableTO> DerivedAttributesPanel(final String id, final T entityTO) {\n \n         super(id);\n         setOutputMarkupId(true);\n \n-        final IModel<List<String>> derivedSchemaNames =\n-                new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> derivedSchemaNames = new LoadableDetachableModel<List<String>>() {\n \n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-                    @Override\n-                    protected List<String> load() {\n-                        if (entityTO instanceof RoleTO) {\n-                            return schemaRestClient.getDerivedSchemaNames(AttributableType.ROLE);\n-                        } else if (entityTO instanceof UserTO) {\n-                            return schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n-                        } else {\n-                            return schemaRestClient.getDerivedSchemaNames(AttributableType.MEMBERSHIP);\n-                        }\n-                    }\n-                };\n+            @Override\n+            protected List<String> load() {\n+                if (entityTO instanceof RoleTO) {\n+                    return schemaRestClient.getDerivedSchemaNames(AttributableType.ROLE);\n+                } else if (entityTO instanceof UserTO) {\n+                    return schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n+                } else {\n+                    return schemaRestClient.getDerivedSchemaNames(AttributableType.MEMBERSHIP);\n+                }\n+            }\n+        };\n \n-        final WebMarkupContainer attributesContainer =\n-                new WebMarkupContainer(\"derAttrContainer\");\n+        final WebMarkupContainer attributesContainer = new WebMarkupContainer(\"derAttrContainer\");\n \n         attributesContainer.setOutputMarkupId(true);\n         add(attributesContainer);\n \n-        AjaxButton addAttributeBtn = new IndicatingAjaxButton(\n-                \"addAttributeBtn\", new ResourceModel(\"addAttributeBtn\")) {\n+        AjaxButton addAttributeBtn = new IndicatingAjaxButton(\"addAttributeBtn\", new ResourceModel(\"addAttributeBtn\")) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                 entityTO.getDerivedAttributes().add(new AttributeTO());\n                 target.add(attributesContainer);\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n                 target.add(attributesContainer);\n             }\n         };\n \n         add(addAttributeBtn.setDefaultFormProcessing(Boolean.FALSE));\n \n-        final ListView<AttributeTO> attributes = new ListView<AttributeTO>(\n-                \"attributes\",\n-                new PropertyModel<List<? extends AttributeTO>>(\n-                entityTO, \"derivedAttributes\")) {\n+        final ListView<AttributeTO> attributes = new ListView<AttributeTO>(\"attributes\",\n+                new PropertyModel<List<? extends AttributeTO>>(entityTO, \"derivedAttributes\")) {\n \n-            private static final long serialVersionUID =\n-                    9101744072914090143L;\n+            private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<AttributeTO> item) {\n                 final AttributeTO attributeTO = item.getModelObject();\n \n-                item.add(new AjaxDecoratedCheckbox(\n-                        \"toRemove\", new Model(Boolean.FALSE)) {\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model(Boolean.FALSE)) {\n \n-                    private static final long serialVersionUID =\n-                            7170946748485726506L;\n+                    private static final long serialVersionUID = 7170946748485726506L;\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n@@ -140,44 +127,33 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(\n-                                super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n \n-                            private static final long serialVersionUID =\n-                                    -7927968187160354605L;\n+                            private static final long serialVersionUID = -7927968187160354605L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(\n-                                    final CharSequence script) {\n+                            public CharSequence preDecorateScript(final CharSequence script) {\n \n-                                return \"if (confirm('\"\n-                                        + getString(\"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"} \"\n+                                return \"if (confirm('\" + getString(\"confirmDelete\") + \"'))\" + \"{\" + script + \"} \"\n                                         + \"else {this.checked = false;}\";\n                             }\n                         };\n                     }\n                 });\n \n-                final DropDownChoice<String> schemaChoice =\n-                        new DropDownChoice<String>(\n-                        \"schema\",\n-                        new PropertyModel<String>(attributeTO, \"schema\"),\n-                        derivedSchemaNames);\n+                final DropDownChoice<String> schemaChoice = new DropDownChoice<String>(\"schema\",\n+                        new PropertyModel<String>(attributeTO, \"schema\"), derivedSchemaNames);\n \n-                schemaChoice.add(\n-                        new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+                schemaChoice.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n \n-                            private static final long serialVersionUID =\n-                                    -1107858522700306810L;\n+                    private static final long serialVersionUID = -1107858522700306810L;\n \n-                            @Override\n-                            protected void onUpdate(\n-                                    final AjaxRequestTarget art) {\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget art) {\n \n-                                attributeTO.setSchema(schemaChoice.getModelObject());\n-                            }\n-                        });\n+                        attributeTO.setSchema(schemaChoice.getModelObject());\n+                    }\n+                });\n \n                 item.add(schemaChoice.setRequired(true));\n \n@@ -188,14 +164,9 @@ protected void onUpdate(\n                 final List<String> values = attributeTO.getValues();\n \n                 if (values == null || values.isEmpty()) {\n-                    item.add(new TextField(\n-                            \"value\",\n-                            new Model(null)).setVisible(Boolean.FALSE));\n+                    item.add(new TextField(\"value\", new Model(null)).setVisible(Boolean.FALSE));\n                 } else {\n-                    item.add(new TextField(\n-                            \"value\",\n-                            new Model(values.get(0))).setEnabled(\n-                            Boolean.FALSE));\n+                    item.add(new TextField(\"value\", new Model(values.get(0))).setEnabled(Boolean.FALSE));\n                 }\n             }\n         };"},{"sha":"a8351f702f3658e6e1f154c7517410ded1f4ee30","filename":"console/src/main/java/org/syncope/console/pages/panels/NotificationTasks.java","status":"modified","additions":26,"deletions":46,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationTasks.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -81,25 +81,16 @@ public NotificationTasks(String id) {\n \n         add(window = new ModalWindow(\"taskWin\"));\n \n-        paginatorRows = prefMan.getPaginatorRows(\n-                getWebRequest(),\n-                Constants.PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS);\n+        paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS);\n \n         List<IColumn<TaskTO>> columns = new ArrayList<IColumn<TaskTO>>();\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"id\"), \"id\", \"id\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"sender\"), \"sender\", \"sender\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"recipients\"), \"recipients\", \"recipients\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"subject\"), \"subject\", \"subject\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"traceLevel\"), \"traceLevel\", \"traceLevel\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"latestExecStatus\"),\n-                \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"sender\"), \"sender\", \"sender\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"recipients\"), \"recipients\", \"recipients\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"subject\"), \"subject\", \"subject\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"traceLevel\"), \"traceLevel\", \"traceLevel\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n \n         columns.add(new AbstractColumn<TaskTO>(new ResourceModel(\"actions\", \"\")) {\n \n@@ -111,15 +102,12 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<TaskTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<TaskTO>> cellItem, final String componentId,\n                     final IModel<TaskTO> model) {\n \n                 final TaskTO taskTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n@@ -130,8 +118,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n                             @Override\n                             public Page createPage() {\n@@ -182,34 +169,29 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable<TaskTO> table =\n-                new AjaxFallbackDefaultDataTable<TaskTO>(\n-                \"datatable\", columns, new TasksProvider(restClient,\n-                paginatorRows, getId(), NotificationTaskTO.class),\n-                paginatorRows);\n+        final AjaxFallbackDefaultDataTable<TaskTO> table = new AjaxFallbackDefaultDataTable<TaskTO>(\"datatable\",\n+                columns, new TasksProvider(restClient, paginatorRows, getId(), NotificationTaskTO.class), paginatorRows);\n \n         container = new WebMarkupContainer(\"container\");\n         container.add(table);\n         container.setOutputMarkupId(true);\n \n         add(container);\n \n-        window.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n+        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n-                    private static final long serialVersionUID =\n-                            8804221891699487139L;\n+            private static final long serialVersionUID = 8804221891699487139L;\n \n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        target.add(container);\n-                        if (operationResult) {\n-                            info(getString(\"operation_succeded\"));\n-                            target.add(getPage().get(\"feedback\"));\n-                            operationResult = false;\n-                        }\n-                    }\n-                });\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                target.add(container);\n+                if (operationResult) {\n+                    info(getString(\"operation_succeded\"));\n+                    target.add(getPage().get(\"feedback\"));\n+                    operationResult = false;\n+                }\n+            }\n+        });\n \n         window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         window.setInitialHeight(WIN_HEIGHT);\n@@ -218,8 +200,7 @@ public void onClose(final AjaxRequestTarget target) {\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"paginatorRows\"),\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n@@ -229,8 +210,7 @@ public void onClose(final AjaxRequestTarget target) {\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 prefMan.set(getWebRequest(), (WebResponse) getResponse(),\n-                        Constants.PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS,\n-                        String.valueOf(paginatorRows));\n+                        Constants.PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS, String.valueOf(paginatorRows));\n \n                 table.setItemsPerPage(paginatorRows);\n "},{"sha":"0b4595467b8cd7824312dd52ef8368decf04102f","filename":"console/src/main/java/org/syncope/console/pages/panels/PoliciesPanel.java","status":"modified","additions":47,"deletions":83,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -70,8 +70,7 @@ public class PoliciesPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            PoliciesPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(PoliciesPanel.class);\n \n     private final static int MODAL_WIN_HEIGHT = 400;\n \n@@ -88,8 +87,7 @@ public class PoliciesPanel extends Panel {\n     @SpringBean\n     private PreferenceManager prefMan;\n \n-    final private int paginatorRows = prefMan.getPaginatorRows(\n-            getWebRequest(), Constants.PREF_POLICY_PAGINATOR_ROWS);\n+    final private int paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_POLICY_PAGINATOR_ROWS);\n \n     protected boolean modalResult = false;\n \n@@ -101,8 +99,7 @@ public PoliciesPanel(final String id, final PolicyType policyType) {\n         this.policyType = policyType;\n \n         // Modal window for editing user attributes\n-        final ModalWindow mwindow =\n-                new ModalWindow(\"editModalWin\");\n+        final ModalWindow mwindow = new ModalWindow(\"editModalWin\");\n         mwindow.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         mwindow.setInitialHeight(MODAL_WIN_HEIGHT);\n         mwindow.setInitialWidth(MODAL_WIN_WIDTH);\n@@ -118,29 +115,23 @@ public PoliciesPanel(final String id, final PolicyType policyType) {\n \n         final List<IColumn> columns = new ArrayList<IColumn>();\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"description\"), \"description\", \"description\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"description\"), \"description\", \"description\"));\n \n         columns.add(new AbstractColumn<PolicyTO>(new ResourceModel(\"type\")) {\n \n             private static final long serialVersionUID = 8263694778917279290L;\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<PolicyTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<PolicyTO>> cellItem, final String componentId,\n                     final IModel<PolicyTO> model) {\n \n-                cellItem.add(new Label(componentId,\n-                        getString(model.getObject().getType().name())));\n+                cellItem.add(new Label(componentId, getString(model.getObject().getType().name())));\n             }\n         });\n \n-        columns.add(new AbstractColumn<PolicyTO>(\n-                new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<PolicyTO>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -150,15 +141,12 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<PolicyTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<PolicyTO>> cellItem, final String componentId,\n                     final IModel<PolicyTO> model) {\n \n                 final PolicyTO accountPolicyTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n@@ -169,14 +157,11 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         mwindow.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n                             @Override\n                             public Page createPage() {\n-                                final PolicyModalPage page =\n-                                        new PolicyModalPage(\n-                                        mwindow, accountPolicyTO);\n+                                final PolicyModalPage page = new PolicyModalPage(mwindow, accountPolicyTO);\n                                 return page;\n                             }\n                         });\n@@ -199,11 +184,8 @@ public void onClick(final AjaxRequestTarget target) {\n                         } catch (SyncopeClientCompositeErrorException e) {\n                             error(getString(\"operation_error\"));\n \n-                            LOG.error(\"While deleting resource {}({})\",\n-                                    new Object[]{\n-                                        accountPolicyTO.getId(),\n-                                        accountPolicyTO.getDescription()},\n-                                    e);\n+                            LOG.error(\"While deleting resource {}({})\", new Object[] { accountPolicyTO.getId(),\n+                                    accountPolicyTO.getDescription() }, e);\n                         }\n \n                         target.add(container);\n@@ -215,50 +197,41 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable table =\n-                new AjaxFallbackDefaultDataTable(\n-                \"datatable\", columns, new PolicyDataProvider(), paginatorRows);\n+        final AjaxFallbackDefaultDataTable table = new AjaxFallbackDefaultDataTable(\"datatable\", columns,\n+                new PolicyDataProvider(), paginatorRows);\n \n         container.add(table);\n \n-        final IndicatingAjaxLink createButton =\n-                new IndicatingAjaxLink(\"createLink\") {\n+        final IndicatingAjaxLink createButton = new IndicatingAjaxLink(\"createLink\") {\n \n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-\n-                        mwindow.setPageCreator(new ModalWindow.PageCreator() {\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                mwindow.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            @Override\n-                            public Page createPage() {\n-                                final PolicyModalPage page =\n-                                        new PolicyModalPage(\n-                                        mwindow,\n-                                        getPolicyTOInstance(policyType));\n-                                return page;\n-                            }\n-                        });\n+                    private static final long serialVersionUID = -7834632442532690940L;\n \n-                        mwindow.show(target);\n+                    @Override\n+                    public Page createPage() {\n+                        final PolicyModalPage page = new PolicyModalPage(mwindow, getPolicyTOInstance(policyType));\n+                        return page;\n                     }\n-                };\n+                });\n+\n+                mwindow.show(target);\n+            }\n+        };\n \n         add(createButton);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                createButton, ENABLE, xmlRolesReader.getAllAllowedRoles(\n-                \"Policies\", \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createButton, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Policies\",\n+                \"create\"));\n \n         final Form paginatorForm = new Form(\"PaginatorForm\");\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"paginatorRows\"),\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n@@ -267,9 +240,8 @@ public Page createPage() {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getWebRequest(), (WebResponse) getResponse(),\n-                        Constants.PREF_POLICY_PAGINATOR_ROWS,\n-                        String.valueOf(paginatorRows));\n+                prefMan.set(getWebRequest(), (WebResponse) getResponse(), Constants.PREF_POLICY_PAGINATOR_ROWS, String\n+                        .valueOf(paginatorRows));\n                 table.setItemsPerPage(paginatorRows);\n \n                 target.add(container);\n@@ -280,25 +252,20 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         add(paginatorForm);\n     }\n \n-    private void setWindowClosedCallback(\n-            final ModalWindow window,\n-            final WebMarkupContainer container) {\n+    private void setWindowClosedCallback(final ModalWindow window, final WebMarkupContainer container) {\n \n-        window.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n+        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n-                    private static final long serialVersionUID =\n-                            8804221891699487139L;\n+            private static final long serialVersionUID = 8804221891699487139L;\n \n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        target.add(container);\n-                    }\n-                });\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                target.add(container);\n+            }\n+        });\n     }\n \n-    private class PolicyDataProvider\n-            extends SortableDataProvider<PolicyTO> {\n+    private class PolicyDataProvider extends SortableDataProvider<PolicyTO> {\n \n         private static final long serialVersionUID = -6976327453925166730L;\n \n@@ -319,11 +286,9 @@ public int size() {\n         }\n \n         @Override\n-        public Iterator<PolicyTO> iterator(\n-                final int first, final int count) {\n+        public Iterator<PolicyTO> iterator(final int first, final int count) {\n \n-            final List<PolicyTO> policies =\n-                    policyRestClient.getPolicies(policyType);\n+            final List<PolicyTO> policies = policyRestClient.getPolicies(policyType);\n \n             Collections.sort(policies, comparator);\n \n@@ -355,7 +320,6 @@ private PolicyTO getPolicyTOInstance(final PolicyType policyType) {\n                 policyTO = new PasswordPolicyTO();\n                 break;\n \n-\n             case GLOBAL_SYNC:\n                 policyTO = new SyncPolicyTO(true);\n                 break;"},{"sha":"58ac0e696617db086658fab8acbc2a213a916421","filename":"console/src/main/java/org/syncope/console/pages/panels/PolicyBeanPanel.java","status":"modified","additions":41,"deletions":75,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -60,31 +60,27 @@ public class PolicyBeanPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            PolicyBeanPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(PolicyBeanPanel.class);\n \n     private static final long serialVersionUID = -3035998190456928143L;\n \n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n-    final IModel<List<String>> schemas =\n-            new LoadableDetachableModel<List<String>>() {\n+    final IModel<List<String>> schemas = new LoadableDetachableModel<List<String>>() {\n \n-                private static final long serialVersionUID =\n-                        -2012833443695917883L;\n+        private static final long serialVersionUID = -2012833443695917883L;\n \n-                @Override\n-                protected List<String> load() {\n-                    return schemaRestClient.getSchemaNames(AttributableType.USER);\n-                }\n-            };\n+        @Override\n+        protected List<String> load() {\n+            return schemaRestClient.getSchemaNames(AttributableType.USER);\n+        }\n+    };\n \n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n-    public PolicyBeanPanel(\n-            final String id, final AbstractPolicySpec policy) {\n+    public PolicyBeanPanel(final String id, final AbstractPolicySpec policy) {\n         super(id);\n \n         final List<FieldWrapper> items = new ArrayList<FieldWrapper>();\n@@ -103,8 +99,7 @@ public PolicyBeanPanel(\n             }\n         }\n \n-        final ListView<FieldWrapper> policies = new ListView<FieldWrapper>(\n-                \"policies\", items) {\n+        final ListView<FieldWrapper> policies = new ListView<FieldWrapper>(\"policies\", items) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n@@ -113,44 +108,37 @@ protected void populateItem(ListItem<FieldWrapper> item) {\n \n                 final FieldWrapper field = item.getModelObject();\n \n-                item.add(new Label(\n-                        \"label\", new ResourceModel(field.getName())));\n+                item.add(new Label(\"label\", new ResourceModel(field.getName())));\n \n                 final AbstractFieldPanel component;\n                 Method classMethod;\n \n                 try {\n                     if (field.getType().equals(ConflictResolutionAction.class)) {\n-                        classMethod = policy.getClass().getMethod(\n-                                \"get\" + StringUtils.capitalize(field.getName()),\n-                                new Class[]{});\n+                        classMethod = policy.getClass().getMethod(\"get\" + StringUtils.capitalize(field.getName()),\n+                                new Class[] {});\n \n-                        component = new AjaxDropDownChoicePanel(\"field\", field.getName(),\n-                                new PropertyModel(policy, field.getName()));\n+                        component = new AjaxDropDownChoicePanel(\"field\", field.getName(), new PropertyModel(policy,\n+                                field.getName()));\n \n-                        ((AjaxDropDownChoicePanel) component).setChoices(\n-                                Arrays.asList(ConflictResolutionAction.values()));\n+                        ((AjaxDropDownChoicePanel) component).setChoices(Arrays.asList(ConflictResolutionAction\n+                                .values()));\n \n                         item.add(component);\n \n-                        item.add(getActivationControl(\n-                                component,\n-                                (Enum) classMethod.invoke(\n-                                policy, new Object[]{}) != null,\n-                                ConflictResolutionAction.IGNORE,\n-                                ConflictResolutionAction.IGNORE));\n-\n+                        item.add(getActivationControl(component,\n+                                (Enum) classMethod.invoke(policy, new Object[] {}) != null,\n+                                ConflictResolutionAction.IGNORE, ConflictResolutionAction.IGNORE));\n \n                     } else if (field.getType().equals(boolean.class) || field.getType().equals(Boolean.class)) {\n-                        item.add(new AjaxCheckBoxPanel(\"check\", field.getName(),\n-                                new PropertyModel(policy, field.getName())));\n+                        item.add(new AjaxCheckBoxPanel(\"check\", field.getName(), new PropertyModel(policy, field\n+                                .getName())));\n \n                         item.add(new Label(\"field\", new Model(null)));\n \n                     } else if (field.getType().equals(List.class) || field.getType().equals(Set.class)) {\n-                        classMethod = policy.getClass().getMethod(\n-                                \"get\" + StringUtils.capitalize(field.getName()),\n-                                new Class[]{});\n+                        classMethod = policy.getClass().getMethod(\"get\" + StringUtils.capitalize(field.getName()),\n+                                new Class[] {});\n \n                         if (field.getSchemaList() != null) {\n                             final List values = schemas.getObject();\n@@ -160,62 +148,43 @@ protected void populateItem(ListItem<FieldWrapper> item) {\n                                 values.add(\"username\");\n                             }\n \n-                            component = new AjaxPalettePanel(\n-                                    \"field\",\n-                                    new PropertyModel(policy,\n-                                    field.getName()),\n+                            component = new AjaxPalettePanel(\"field\", new PropertyModel(policy, field.getName()),\n                                     new ListModel<String>(values));\n \n                             item.add(component);\n \n-                            item.add(getActivationControl(\n-                                    component,\n-                                    !((List) classMethod.invoke(\n-                                    policy, new Object[]{})).isEmpty(),\n-                                    new ArrayList<String>(),\n-                                    new ArrayList<String>()));\n+                            item.add(getActivationControl(component, !((List) classMethod.invoke(policy,\n+                                    new Object[] {})).isEmpty(), new ArrayList<String>(), new ArrayList<String>()));\n                         } else {\n                             final FieldPanel panel = new AjaxTextFieldPanel(\"panel\", field.getName(), new Model(null));\n \n                             panel.setRequired(true);\n \n-                            component = new MultiValueSelectorPanel<String>(\n-                                    \"field\",\n-                                    new PropertyModel(policy, field.getName()),\n-                                    panel);\n+                            component = new MultiValueSelectorPanel<String>(\"field\", new PropertyModel(policy, field\n+                                    .getName()), panel);\n \n                             item.add(component);\n \n-                            final List<String> reinitializedValue =\n-                                    new ArrayList<String>();\n+                            final List<String> reinitializedValue = new ArrayList<String>();\n \n                             reinitializedValue.add(\"\");\n \n-                            item.add(getActivationControl(\n-                                    component,\n-                                    !((List<String>) classMethod.invoke(\n-                                    policy, new Object[]{})).isEmpty(),\n-                                    (Serializable) new ArrayList<String>(),\n+                            item.add(getActivationControl(component, !((List<String>) classMethod.invoke(policy,\n+                                    new Object[] {})).isEmpty(), (Serializable) new ArrayList<String>(),\n                                     (Serializable) reinitializedValue));\n                         }\n-                    } else if (field.getType().equals(int.class)\n-                            || field.getType().equals(Integer.class)) {\n+                    } else if (field.getType().equals(int.class) || field.getType().equals(Integer.class)) {\n \n-                        classMethod = policy.getClass().getMethod(\n-                                \"get\" + StringUtils.capitalize(field.getName()),\n-                                new Class[]{});\n+                        classMethod = policy.getClass().getMethod(\"get\" + StringUtils.capitalize(field.getName()),\n+                                new Class[] {});\n \n-                        component = new AjaxTextFieldPanel(\"field\", field.getName(),\n-                                new PropertyModel(policy, field.getName()));\n+                        component = new AjaxTextFieldPanel(\"field\", field.getName(), new PropertyModel(policy, field\n+                                .getName()));\n \n                         item.add(component);\n \n-                        item.add(getActivationControl(\n-                                component,\n-                                (Integer) classMethod.invoke(\n-                                policy, new Object[]{}) > 0,\n-                                0,\n-                                0));\n+                        item.add(getActivationControl(component,\n+                                (Integer) classMethod.invoke(policy, new Object[] {}) > 0, 0, 0));\n                     } else {\n                         item.add(new AjaxCheckBoxPanel(\"check\", field.getName(), new Model()));\n                         item.add(new Label(\"field\", new Model(null)));\n@@ -229,11 +198,8 @@ protected void populateItem(ListItem<FieldWrapper> item) {\n         add(policies);\n     }\n \n-    private <T extends Serializable> AjaxCheckBoxPanel getActivationControl(\n-            final AbstractFieldPanel panel,\n-            final Boolean checked,\n-            final T defaultModelObject,\n-            final T reinitializedValue) {\n+    private <T extends Serializable> AjaxCheckBoxPanel getActivationControl(final AbstractFieldPanel panel,\n+            final Boolean checked, final T defaultModelObject, final T reinitializedValue) {\n \n         final AjaxCheckBoxPanel check = new AjaxCheckBoxPanel(\"check\", \"check\", new Model(checked));\n "},{"sha":"89cc6742b6adb8073be2bea41a0b9553f8bc367c","filename":"console/src/main/java/org/syncope/console/pages/panels/PropagationTasks.java","status":"modified","additions":27,"deletions":48,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPropagationTasks.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -85,32 +85,22 @@ public PropagationTasks(final String id) {\n \n         add(window = new ModalWindow(\"taskWin\"));\n \n-        paginatorRows = prefMan.getPaginatorRows(\n-                getWebRequest(),\n-                Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS);\n+        paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS);\n \n         List<IColumn<TaskTO>> columns = new ArrayList<IColumn<TaskTO>>();\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"resource\"), \"resource\", \"resource\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"resource\"), \"resource\", \"resource\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"accountId\"), \"accountId\", \"accountId\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"accountId\"), \"accountId\", \"accountId\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"propagationMode\"),\n-                \"propagationMode\", \"propagationMode\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"propagationMode\"), \"propagationMode\", \"propagationMode\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"propagationOperation\"),\n-                \"propagationOperation\", \"propagationOperation\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"propagationOperation\"), \"propagationOperation\",\n+                \"propagationOperation\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"latestExecStatus\"),\n-                \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n \n         columns.add(new AbstractColumn<TaskTO>(new ResourceModel(\"actions\", \"\")) {\n \n@@ -122,15 +112,12 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<TaskTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<TaskTO>> cellItem, final String componentId,\n                     final IModel<TaskTO> model) {\n \n                 final TaskTO taskTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n@@ -141,8 +128,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n                             @Override\n                             public Page createPage() {\n@@ -193,34 +179,29 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable<TaskTO> table =\n-                new AjaxFallbackDefaultDataTable<TaskTO>(\n-                \"datatable\", columns, new TasksProvider(restClient,\n-                paginatorRows, getId(), PropagationTaskTO.class),\n-                paginatorRows);\n+        final AjaxFallbackDefaultDataTable<TaskTO> table = new AjaxFallbackDefaultDataTable<TaskTO>(\"datatable\",\n+                columns, new TasksProvider(restClient, paginatorRows, getId(), PropagationTaskTO.class), paginatorRows);\n \n         container = new WebMarkupContainer(\"container\");\n         container.add(table);\n         container.setOutputMarkupId(true);\n \n         add(container);\n \n-        window.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n+        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n-                    private static final long serialVersionUID =\n-                            8804221891699487139L;\n+            private static final long serialVersionUID = 8804221891699487139L;\n \n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        target.add(container);\n-                        if (operationResult) {\n-                            info(getString(\"operation_succeded\"));\n-                            target.add(getPage().get(\"feedback\"));\n-                            operationResult = false;\n-                        }\n-                    }\n-                });\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                target.add(container);\n+                if (operationResult) {\n+                    info(getString(\"operation_succeded\"));\n+                    target.add(getPage().get(\"feedback\"));\n+                    operationResult = false;\n+                }\n+            }\n+        });\n \n         window.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         window.setInitialHeight(WIN_HEIGHT);\n@@ -229,8 +210,7 @@ public void onClose(final AjaxRequestTarget target) {\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"paginatorRows\"),\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n@@ -240,8 +220,7 @@ public void onClose(final AjaxRequestTarget target) {\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 prefMan.set(getWebRequest(), (WebResponse) getResponse(),\n-                        Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS,\n-                        String.valueOf(paginatorRows));\n+                        Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS, String.valueOf(paginatorRows));\n \n                 table.setItemsPerPage(paginatorRows);\n "},{"sha":"6f554ae09499c5ee93849d91591e6160b16b293e","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceConnConfPanel.java","status":"modified","additions":37,"deletions":79,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -63,34 +63,23 @@ public class ResourceConnConfPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG =\n-            LoggerFactory.getLogger(ResourceConnConfPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(ResourceConnConfPanel.class);\n \n     /**\n      * GuardedString is not in classpath.\n      */\n-    private static final String GUARDED_STRING =\n-            \"org.identityconnectors.common.security.GuardedString\";\n+    private static final String GUARDED_STRING = \"org.identityconnectors.common.security.GuardedString\";\n \n     /**\n      * GuardedByteArray is not in classpath.\n      */\n-    private static final String GUARDED_BYTE_ARRAY =\n-            \"org.identityconnectors.common.security.GuardedByteArray\";\n+    private static final String GUARDED_BYTE_ARRAY = \"org.identityconnectors.common.security.GuardedByteArray\";\n \n     /**\n      * Number java types.\n      */\n-    private static final List<Class> NUMBER = Arrays.asList(new Class[]{\n-                Integer.class,\n-                Double.class,\n-                Long.class,\n-                Float.class,\n-                Number.class,\n-                Integer.TYPE,\n-                Long.TYPE,\n-                Double.TYPE,\n-                Float.TYPE});\n+    private static final List<Class> NUMBER = Arrays.asList(new Class[] { Integer.class, Double.class, Long.class,\n+            Float.class, Number.class, Integer.TYPE, Long.TYPE, Double.TYPE, Float.TYPE });\n \n     @SpringBean\n     private ConnectorRestClient connRestClient;\n@@ -105,10 +94,7 @@ public class ResourceConnConfPanel extends Panel {\n \n     private ResourceTO resourceTO;\n \n-    public ResourceConnConfPanel(\n-            final String id,\n-            final ResourceTO resourceTO,\n-            final boolean createFlag) {\n+    public ResourceConnConfPanel(final String id, final ResourceTO resourceTO, final boolean createFlag) {\n \n         super(id);\n         setOutputMarkupId(true);\n@@ -118,31 +104,24 @@ public ResourceConnConfPanel(\n \n         connConfProperties = getConnConfProperties();\n \n-        connConfPropContainer =\n-                new WebMarkupContainer(\"connectorPropertiesContainer\");\n+        connConfPropContainer = new WebMarkupContainer(\"connectorPropertiesContainer\");\n         connConfPropContainer.setOutputMarkupId(true);\n         add(connConfPropContainer);\n \n         check = new IndicatingAjaxLink(\"check\", new ResourceModel(\"check\")) {\n \n-            private static final long serialVersionUID =\n-                    -4199438518229098169L;\n+            private static final long serialVersionUID = -4199438518229098169L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n \n-                ConnInstanceTO connectorTO =\n-                        connRestClient.read(\n-                        resourceTO.getConnectorId());\n+                ConnInstanceTO connectorTO = connRestClient.read(resourceTO.getConnectorId());\n \n-                connectorTO.setConfiguration(\n-                        ConnConfPropUtils.joinConnInstanceProperties(\n-                        connectorTO.getConfigurationMap(),\n-                        ConnConfPropUtils.getConnConfPropertyMap(\n-                        resourceTO.getConnConfProperties())));\n+                connectorTO.setConfiguration(ConnConfPropUtils.joinConnInstanceProperties(connectorTO\n+                        .getConfigurationMap(), ConnConfPropUtils.getConnConfPropertyMap(resourceTO\n+                        .getConnConfProperties())));\n \n-                if (connRestClient.check(\n-                        connectorTO).booleanValue()) {\n+                if (connRestClient.check(connectorTO).booleanValue()) {\n                     info(getString(\"success_connection\"));\n                 } else {\n                     error(getString(\"error_connection\"));\n@@ -158,18 +137,16 @@ public void onClick(final AjaxRequestTarget target) {\n         /*\n          * the list of overridable connector properties\n          */\n-        connConfPropContainer.add(new ListView<ConnConfProperty>(\n-                \"connectorProperties\",\n-                new PropertyModel(this, \"connConfProperties\")) {\n+        connConfPropContainer.add(new ListView<ConnConfProperty>(\"connectorProperties\", new PropertyModel(this,\n+                \"connConfProperties\")) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<ConnConfProperty> item) {\n                 final ConnConfProperty property = item.getModelObject();\n \n-                final Label label = new Label(\"connPropAttrSchema\",\n-                        property.getSchema().getDisplayName() == null\n+                final Label label = new Label(\"connPropAttrSchema\", property.getSchema().getDisplayName() == null\n                         || property.getSchema().getDisplayName().isEmpty()\n                         ? property.getSchema().getName()\n                         : property.getSchema().getDisplayName());\n@@ -182,10 +159,8 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n \n                 boolean isArray = false;\n \n-                if (GUARDED_STRING.equalsIgnoreCase(\n-                        property.getSchema().getType())\n-                        || GUARDED_BYTE_ARRAY.equalsIgnoreCase(\n-                        property.getSchema().getType())) {\n+                if (GUARDED_STRING.equalsIgnoreCase(property.getSchema().getType())\n+                        || GUARDED_BYTE_ARRAY.equalsIgnoreCase(property.getSchema().getType())) {\n \n                     field = new AjaxPasswordFieldPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model());\n                     ((PasswordTextField) field.getField()).setResetPassword(false);\n@@ -196,17 +171,16 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                     Class propertySchemaClass;\n \n                     try {\n-                        propertySchemaClass = ClassUtils.forName(\n-                                property.getSchema().getType(),\n-                                ClassUtils.getDefaultClassLoader());\n+                        propertySchemaClass = ClassUtils.forName(property.getSchema().getType(), ClassUtils\n+                                .getDefaultClassLoader());\n                     } catch (Exception e) {\n                         LOG.error(\"Error parsing attribute type\", e);\n                         propertySchemaClass = String.class;\n                     }\n \n                     if (NUMBER.contains(propertySchemaClass)) {\n-                        field = new AjaxNumberFieldPanel(\"panel\", label.getDefaultModelObjectAsString(),\n-                                new Model(), ClassUtils.resolvePrimitiveIfNecessary(propertySchemaClass));\n+                        field = new AjaxNumberFieldPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model(),\n+                                ClassUtils.resolvePrimitiveIfNecessary(propertySchemaClass));\n \n                         required = property.getSchema().isRequired();\n                     } else if (Boolean.class.equals(propertySchemaClass) || boolean.class.equals(propertySchemaClass)) {\n@@ -231,33 +205,24 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                         property.getValues().add(null);\n                     }\n \n-                    final MultiValueSelectorPanel multiFields =\n-                            new MultiValueSelectorPanel<String>(\n-                            \"panel\",\n-                            new PropertyModel<List<String>>(property, \"values\"),\n-                            field,\n-                            true);\n+                    final MultiValueSelectorPanel multiFields = new MultiValueSelectorPanel<String>(\"panel\",\n+                            new PropertyModel<List<String>>(property, \"values\"), field, true);\n \n                     item.add(multiFields);\n                 } else {\n                     if (required) {\n                         field.addRequiredLabel();\n                     }\n \n-                    field.getField().add(\n-                            new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+                    field.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                                private static final long serialVersionUID =\n-                                        -1107858522700306810L;\n+                        private static final long serialVersionUID = -1107858522700306810L;\n \n-                                @Override\n-                                protected void onUpdate(\n-                                        final AjaxRequestTarget target) {\n-                                    send(getPage(), Broadcast.BREADTH,\n-                                            new ConnConfModEvent(\n-                                            target, connConfProperties));\n-                                }\n-                            });\n+                        @Override\n+                        protected void onUpdate(final AjaxRequestTarget target) {\n+                            send(getPage(), Broadcast.BREADTH, new ConnConfModEvent(target, connConfProperties));\n+                        }\n+                    });\n \n                     field.setNewModel(property.getValues());\n                     item.add(field);\n@@ -285,8 +250,7 @@ private List<ConnConfProperty> getConnConfProperties() {\n             final Long connectorId = resourceTO.getConnectorId();\n \n             if (connectorId != null && connectorId > 0) {\n-                for (ConnConfProperty property :\n-                        connRestClient.getConnectorProperties(connectorId)) {\n+                for (ConnConfProperty property : connRestClient.getConnectorProperties(connectorId)) {\n \n                     if (property.isOverridable()) {\n                         props.add(property);\n@@ -302,25 +266,21 @@ private List<ConnConfProperty> getConnConfProperties() {\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof DetailsModEvent) {\n             // connectro change: update properties and forward event\n-            final AjaxRequestTarget target =\n-                    ((ResourceEvent) event.getPayload()).getTarget();\n+            final AjaxRequestTarget target = ((ResourceEvent) event.getPayload()).getTarget();\n \n             connConfProperties = getConnConfProperties();\n             check.setEnabled(!connConfProperties.isEmpty());\n \n             target.add(connConfPropContainer);\n \n             // get configuration properties and send a new event\n-            send(getPage(), Broadcast.BREADTH,\n-                    new ConnConfModEvent(target, connConfProperties));\n+            send(getPage(), Broadcast.BREADTH, new ConnConfModEvent(target, connConfProperties));\n \n         } else if (event.getPayload() instanceof MultiValueSelectorEvent) {\n             // multi value connector property change: forward event\n-            final AjaxRequestTarget target =\n-                    ((MultiValueSelectorEvent) event.getPayload()).getTarget();\n+            final AjaxRequestTarget target = ((MultiValueSelectorEvent) event.getPayload()).getTarget();\n \n-            send(getPage(), Broadcast.BREADTH,\n-                    new ConnConfModEvent(target, connConfProperties));\n+            send(getPage(), Broadcast.BREADTH, new ConnConfModEvent(target, connConfProperties));\n         }\n     }\n \n@@ -337,9 +297,7 @@ public static class ConnConfModEvent extends ResourceEvent {\n          * @param target request target.\n          * @param target connector configuration properties.\n          */\n-        public ConnConfModEvent(\n-                final AjaxRequestTarget target,\n-                final List<ConnConfProperty> conf) {\n+        public ConnConfModEvent(final AjaxRequestTarget target, final List<ConnConfProperty> conf) {\n             super(target);\n             this.configuration = conf;\n         }"},{"sha":"f931be603535cdf4c92708dcd5c3327668a78a52","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceDetailsPanel.java","status":"modified","additions":35,"deletions":49,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -51,39 +51,32 @@ public class ResourceDetailsPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG =\n-            LoggerFactory.getLogger(ResourceDetailsPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(ResourceDetailsPanel.class);\n \n     @SpringBean\n     private ConnectorRestClient connRestClient;\n \n     private ConnInstanceTO connInstanceTO;\n \n-    public ResourceDetailsPanel(\n-            final String id,\n-            final ResourceTO resourceTO,\n-            final boolean createFlag) {\n+    public ResourceDetailsPanel(final String id, final ResourceTO resourceTO, final boolean createFlag) {\n \n         super(id);\n         setOutputMarkupId(true);\n \n-        final IModel<List<ConnInstanceTO>> connectors =\n-                new LoadableDetachableModel<List<ConnInstanceTO>>() {\n+        final IModel<List<ConnInstanceTO>> connectors = new LoadableDetachableModel<List<ConnInstanceTO>>() {\n \n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-                    @Override\n-                    protected List<ConnInstanceTO> load() {\n-                        return connRestClient.getAllConnectors();\n-                    }\n-                };\n+            @Override\n+            protected List<ConnInstanceTO> load() {\n+                return connRestClient.getAllConnectors();\n+            }\n+        };\n \n-        connInstanceTO =\n-                getConectorInstanceTO(connectors.getObject(), resourceTO);\n+        connInstanceTO = getConectorInstanceTO(connectors.getObject(), resourceTO);\n \n-        final AjaxTextFieldPanel resourceName = new AjaxTextFieldPanel(\"name\",\n-                new ResourceModel(\"name\", \"name\").getObject(), new PropertyModel<String>(resourceTO, \"name\"));\n+        final AjaxTextFieldPanel resourceName = new AjaxTextFieldPanel(\"name\", new ResourceModel(\"name\", \"name\")\n+                .getObject(), new PropertyModel<String>(resourceTO, \"name\"));\n \n         resourceName.setEnabled(createFlag);\n         resourceName.addRequiredLabel();\n@@ -94,21 +87,20 @@ protected List<ConnInstanceTO> load() {\n                 new PropertyModel<Boolean>(resourceTO, \"forceMandatoryConstraint\"));\n         add(forceMandatoryConstraint);\n \n-        final AjaxCheckBoxPanel propagationPrimary = new AjaxCheckBoxPanel(\"propagationPrimary\",\n-                new ResourceModel(\"propagationPrimary\", \"propagationPrimary\").getObject(),\n-                new PropertyModel<Boolean>(resourceTO, \"propagationPrimary\"));\n+        final AjaxCheckBoxPanel propagationPrimary = new AjaxCheckBoxPanel(\"propagationPrimary\", new ResourceModel(\n+                \"propagationPrimary\", \"propagationPrimary\").getObject(), new PropertyModel<Boolean>(resourceTO,\n+                \"propagationPrimary\"));\n         add(propagationPrimary);\n \n         final AjaxNumberFieldPanel propagationPriority = new AjaxNumberFieldPanel(\"propagationPriority\",\n-                new ResourceModel(\"propagationPriority\", \"propagationPriority\").getObject(),\n-                new PropertyModel<Number>(resourceTO, \"propagationPriority\"), Integer.class);\n+                new ResourceModel(\"propagationPriority\", \"propagationPriority\").getObject(), new PropertyModel<Number>(\n+                        resourceTO, \"propagationPriority\"), Integer.class);\n         add(propagationPriority);\n \n         final AjaxDropDownChoicePanel<PropagationMode> propagationMode = new AjaxDropDownChoicePanel<PropagationMode>(\n                 \"propagationMode\", new ResourceModel(\"propagationMode\", \"propagationMode\").getObject(),\n                 new PropertyModel(resourceTO, \"propagationMode\"));\n-        propagationMode.setChoices(\n-                Arrays.asList(PropagationMode.values()));\n+        propagationMode.setChoices(Arrays.asList(PropagationMode.values()));\n         add(propagationMode);\n \n         final AjaxDropDownChoicePanel<TraceLevel> createTraceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n@@ -130,32 +122,29 @@ protected List<ConnInstanceTO> load() {\n         add(deleteTraceLevel);\n \n         final AjaxDropDownChoicePanel<TraceLevel> syncTraceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n-                \"syncTraceLevel\", new ResourceModel(\"syncTraceLevel\", \"syncTraceLevel\").getObject(),\n-                new PropertyModel(resourceTO, \"syncTraceLevel\"));\n+                \"syncTraceLevel\", new ResourceModel(\"syncTraceLevel\", \"syncTraceLevel\").getObject(), new PropertyModel(\n+                        resourceTO, \"syncTraceLevel\"));\n         syncTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n         add(syncTraceLevel);\n \n-        final AjaxCheckBoxPanel resetToken = new AjaxCheckBoxPanel(\"resetToken\",\n-                new ResourceModel(\"resetToken\", \"resetToken\").getObject(), new Model(null));\n+        final AjaxCheckBoxPanel resetToken = new AjaxCheckBoxPanel(\"resetToken\", new ResourceModel(\"resetToken\",\n+                \"resetToken\").getObject(), new Model(null));\n \n-        resetToken.getField().add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        resetToken.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                    private static final long serialVersionUID =\n-                            -1107858522700306810L;\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget art) {\n-                        if (resetToken.getModelObject()) {\n-                            resourceTO.setSyncToken(null);\n-                        }\n-                    }\n-                });\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget art) {\n+                if (resetToken.getModelObject()) {\n+                    resourceTO.setSyncToken(null);\n+                }\n+            }\n+        });\n         add(resetToken);\n \n-        final AjaxDropDownChoicePanel<ConnInstanceTO> conn = new AjaxDropDownChoicePanel<ConnInstanceTO>(\n-                \"connector\", new ResourceModel(\"connector\", \"connector\").getObject(),\n-                new PropertyModel(this, \"connInstanceTO\"));\n+        final AjaxDropDownChoicePanel<ConnInstanceTO> conn = new AjaxDropDownChoicePanel<ConnInstanceTO>(\"connector\",\n+                new ResourceModel(\"connector\", \"connector\").getObject(), new PropertyModel(this, \"connInstanceTO\"));\n         conn.setChoices(connectors.getObject());\n         conn.setChoiceRenderer(new ChoiceRenderer(\"displayName\", \"id\"));\n \n@@ -184,8 +173,7 @@ public void detach() {\n \n         conn.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            private static final long serialVersionUID =\n-                    -1107858522700306810L;\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n@@ -203,9 +191,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n      * @param resourceTO resource.\n      * @return selected connector instance.\n      */\n-    private ConnInstanceTO getConectorInstanceTO(\n-            final List<ConnInstanceTO> connectorTOs,\n-            final ResourceTO resourceTO) {\n+    private ConnInstanceTO getConectorInstanceTO(final List<ConnInstanceTO> connectorTOs, final ResourceTO resourceTO) {\n \n         for (ConnInstanceTO to : connectorTOs) {\n             if (Long.valueOf(to.getId()).equals(resourceTO.getConnectorId())) {"},{"sha":"8206d2b19b22b6bff9518da1f8162f5c1b125fc1","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":21,"deletions":30,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -71,8 +71,7 @@ public class ResourceMappingPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG =\n-            LoggerFactory.getLogger(ResourceMappingPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(ResourceMappingPanel.class);\n \n     /**\n      * Schema rest client.\n@@ -158,9 +157,8 @@ public ResourceMappingPanel(final String panelid, final ResourceTO resourceTO, f\n \n         initResourceSchemaNames();\n \n-        final AjaxTextFieldPanel accountLink = new AjaxTextFieldPanel(\"accountLink\",\n-                new ResourceModel(\"accountLink\", \"accountLink\").getObject(),\n-                new PropertyModel<String>(resourceTO, \"accountLink\"));\n+        final AjaxTextFieldPanel accountLink = new AjaxTextFieldPanel(\"accountLink\", new ResourceModel(\"accountLink\",\n+                \"accountLink\").getObject(), new PropertyModel<String>(resourceTO, \"accountLink\"));\n         add(accountLink);\n \n         mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n@@ -180,7 +178,8 @@ protected void populateItem(final ListItem<SchemaMappingTO> item) {\n                 final SchemaMappingTO mappingTO = item.getModelObject();\n \n                 final AttributableType entity = mappingTO.getIntMappingType() == null\n-                        ? null : mappingTO.getIntMappingType().getAttributableType();\n+                        ? null\n+                        : mappingTO.getIntMappingType().getAttributableType();\n \n                 attrTypes = getAttributeTypes(entity);\n \n@@ -213,10 +212,7 @@ protected IAjaxCallDecorator getAjaxCallDecorator() {\n                             @Override\n                             public CharSequence preDecorateScript(final CharSequence script) {\n \n-                                return \"if (confirm('\"\n-                                        + getString(\"confirmDelete\")\n-                                        + \"'))\"\n-                                        + \"{\" + script + \"} \"\n+                                return \"if (confirm('\" + getString(\"confirmDelete\") + \"'))\" + \"{\" + script + \"} \"\n                                         + \"else {this.checked = false;}\";\n                             }\n                         };\n@@ -270,14 +266,12 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 final FieldPanel extAttrName;\n \n                 if (schemaNames.isEmpty()) {\n-                    extAttrName = new AjaxTextFieldPanel(\"extAttrName\",\n-                            new ResourceModel(\"extAttrNames\", \"extAttrNames\").getObject(),\n-                            new PropertyModel<String>(mappingTO, \"extAttrName\"));\n+                    extAttrName = new AjaxTextFieldPanel(\"extAttrName\", new ResourceModel(\"extAttrNames\",\n+                            \"extAttrNames\").getObject(), new PropertyModel<String>(mappingTO, \"extAttrName\"));\n \n                 } else {\n-                    extAttrName = new AjaxDropDownChoicePanel<String>(\"extAttrName\",\n-                            new ResourceModel(\"extAttrNames\", \"extAttrNames\").getObject(),\n-                            new PropertyModel(mappingTO, \"extAttrName\"));\n+                    extAttrName = new AjaxDropDownChoicePanel<String>(\"extAttrName\", new ResourceModel(\"extAttrNames\",\n+                            \"extAttrNames\").getObject(), new PropertyModel(mappingTO, \"extAttrName\"));\n                     ((AjaxDropDownChoicePanel) extAttrName).setChoices(schemaNames);\n                 }\n \n@@ -289,19 +283,18 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 extAttrName.setStyleShet(fieldStyle);\n                 item.add(extAttrName);\n \n-                final AjaxTextFieldPanel mandatory = new AjaxTextFieldPanel(\"mandatoryCondition\",\n-                        new ResourceModel(\"mandatoryCondition\", \"mandatoryCondition\").getObject(),\n-                        new PropertyModel(mappingTO, \"mandatoryCondition\"));\n+                final AjaxTextFieldPanel mandatory = new AjaxTextFieldPanel(\"mandatoryCondition\", new ResourceModel(\n+                        \"mandatoryCondition\", \"mandatoryCondition\").getObject(), new PropertyModel(mappingTO,\n+                        \"mandatoryCondition\"));\n \n-                mandatory.setChoices(Arrays.asList(new String[]{\"true\", \"false\"}));\n+                mandatory.setChoices(Arrays.asList(new String[] { \"true\", \"false\" }));\n \n                 mandatory.setStyleShet(shortFieldStyle);\n \n                 item.add(mandatory);\n \n-                final AjaxCheckBoxPanel accountId = new AjaxCheckBoxPanel(\"accountId\",\n-                        new ResourceModel(\"accountId\", \"accountId\").getObject(),\n-                        new PropertyModel(mappingTO, \"accountid\"));\n+                final AjaxCheckBoxPanel accountId = new AjaxCheckBoxPanel(\"accountId\", new ResourceModel(\"accountId\",\n+                        \"accountId\").getObject(), new PropertyModel(mappingTO, \"accountid\"));\n \n                 accountId.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n \n@@ -318,9 +311,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                 item.add(accountId);\n \n-                final AjaxCheckBoxPanel password = new AjaxCheckBoxPanel(\"password\",\n-                        new ResourceModel(\"password\", \"password\").getObject(),\n-                        new PropertyModel(mappingTO, \"password\"));\n+                final AjaxCheckBoxPanel password = new AjaxCheckBoxPanel(\"password\", new ResourceModel(\"password\",\n+                        \"password\").getObject(), new PropertyModel(mappingTO, \"password\"));\n \n                 password.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n \n@@ -362,8 +354,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         mappings.setReuseItems(true);\n         mappingContainer.add(mappings);\n \n-        addMappingBtn = new IndicatingAjaxButton(\n-                \"addUserSchemaMappingBtn\", new ResourceModel(\"add\")) {\n+        addMappingBtn = new IndicatingAjaxButton(\"addUserSchemaMappingBtn\", new ResourceModel(\"add\")) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n \n@@ -515,8 +506,8 @@ private void setAttrNames(final IntMappingType type, final AjaxDropDownChoicePan\n      * @param accountId accountId checkbox.\n      * @param password password checkbox.\n      */\n-    private void setAccountId(\n-            final IntMappingType type, final AjaxCheckBoxPanel accountId, final AjaxCheckBoxPanel password) {\n+    private void setAccountId(final IntMappingType type, final AjaxCheckBoxPanel accountId,\n+            final AjaxCheckBoxPanel password) {\n \n         if (type != null && type.getAttributableType() != null) {\n             switch (type) {"},{"sha":"8d05a905864343514e8e27e66537fe940d70a5ff","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceSecurityPanel.java","status":"modified","additions":18,"deletions":27,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -43,8 +43,7 @@ public class ResourceSecurityPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG =\n-            LoggerFactory.getLogger(ResourceSecurityPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(ResourceSecurityPanel.class);\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n@@ -70,8 +69,7 @@ public ResourceSecurityPanel(final String id, final ResourceTO resourceTO) {\n             @Override\n             protected Map<Long, String> load() {\n                 Map<Long, String> res = new HashMap<Long, String>();\n-                for (PolicyTO policyTO :\n-                        policyRestClient.getPolicies(PolicyType.PASSWORD)) {\n+                for (PolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PASSWORD)) {\n                     res.put(policyTO.getId(), policyTO.getDescription());\n                 }\n                 return res;\n@@ -85,8 +83,7 @@ protected Map<Long, String> load() {\n             @Override\n             protected Map<Long, String> load() {\n                 Map<Long, String> res = new HashMap<Long, String>();\n-                for (PolicyTO policyTO :\n-                        policyRestClient.getPolicies(PolicyType.ACCOUNT)) {\n+                for (PolicyTO policyTO : policyRestClient.getPolicies(PolicyType.ACCOUNT)) {\n                     res.put(policyTO.getId(), policyTO.getDescription());\n                 }\n                 return res;\n@@ -100,16 +97,14 @@ protected Map<Long, String> load() {\n             @Override\n             protected Map<Long, String> load() {\n                 Map<Long, String> res = new HashMap<Long, String>();\n-                for (PolicyTO policyTO :\n-                        policyRestClient.getPolicies(PolicyType.SYNC)) {\n+                for (PolicyTO policyTO : policyRestClient.getPolicies(PolicyType.SYNC)) {\n                     res.put(policyTO.getId(), policyTO.getDescription());\n                 }\n                 return res;\n             }\n         };\n \n-        final WebMarkupContainer securityContainer =\n-                new WebMarkupContainer(\"security\");\n+        final WebMarkupContainer securityContainer = new WebMarkupContainer(\"security\");\n \n         securityContainer.setOutputMarkupId(true);\n         add(securityContainer);\n@@ -118,14 +113,12 @@ protected Map<Long, String> load() {\n         // Password policy specification\n         // -------------------------------\n         final AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<Long>(\"passwordPolicy\",\n-                new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n-                new PropertyModel(resourceTO, \"passwordPolicy\"));\n+                new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(), new PropertyModel(resourceTO,\n+                        \"passwordPolicy\"));\n \n-        passwordPolicy.setChoiceRenderer(\n-                new PolicyRenderer(PolicyType.PASSWORD));\n+        passwordPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.PASSWORD));\n \n-        passwordPolicy.setChoices(\n-                new ArrayList<Long>(passwordPolicies.getObject().keySet()));\n+        passwordPolicy.setChoices(new ArrayList<Long>(passwordPolicies.getObject().keySet()));\n \n         ((DropDownChoice) passwordPolicy.getField()).setNullValid(true);\n \n@@ -136,14 +129,12 @@ protected Map<Long, String> load() {\n         // Account policy specification\n         // -------------------------------\n         final AjaxDropDownChoicePanel<Long> accountPolicy = new AjaxDropDownChoicePanel<Long>(\"accountPolicy\",\n-                new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n-                new PropertyModel(resourceTO, \"accountPolicy\"));\n+                new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(), new PropertyModel(resourceTO,\n+                        \"accountPolicy\"));\n \n-        accountPolicy.setChoiceRenderer(\n-                new PolicyRenderer(PolicyType.ACCOUNT));\n+        accountPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.ACCOUNT));\n \n-        accountPolicy.setChoices(\n-                new ArrayList<Long>(accountPolicies.getObject().keySet()));\n+        accountPolicy.setChoices(new ArrayList<Long>(accountPolicies.getObject().keySet()));\n \n         ((DropDownChoice) accountPolicy.getField()).setNullValid(true);\n \n@@ -156,11 +147,9 @@ protected Map<Long, String> load() {\n         final AjaxDropDownChoicePanel<Long> syncPolicy = new AjaxDropDownChoicePanel<Long>(\"syncPolicy\",\n                 new ResourceModel(\"syncPolicy\", \"syncPolicy\").getObject(), new PropertyModel(resourceTO, \"syncPolicy\"));\n \n-        syncPolicy.setChoiceRenderer(\n-                new PolicyRenderer(PolicyType.SYNC));\n+        syncPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.SYNC));\n \n-        syncPolicy.setChoices(\n-                new ArrayList<Long>(syncPolicies.getObject().keySet()));\n+        syncPolicy.setChoices(new ArrayList<Long>(syncPolicies.getObject().keySet()));\n \n         ((DropDownChoice) syncPolicy.getField()).setNullValid(true);\n \n@@ -198,7 +187,9 @@ public Object getDisplayValue(final Long object) {\n \n         @Override\n         public String getIdValue(Long object, int index) {\n-            return String.valueOf(object != null ? object : 0L);\n+            return String.valueOf(object != null\n+                    ? object\n+                    : 0L);\n         }\n     };\n }"},{"sha":"733d9d0ba01361fb14879466f81d07339c26daf7","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourcesPanel.java","status":"modified","additions":14,"deletions":21,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -38,33 +38,26 @@ public class ResourcesPanel extends Panel {\n     @SpringBean\n     private ResourceRestClient resourceRestClient;\n \n-    final IModel<List<String>> allResources =\n-            new LoadableDetachableModel<List<String>>() {\n+    final IModel<List<String>> allResources = new LoadableDetachableModel<List<String>>() {\n \n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-                @Override\n-                protected List<String> load() {\n-                    final List<String> resourceNames =\n-                            new ArrayList<String>();\n+        @Override\n+        protected List<String> load() {\n+            final List<String> resourceNames = new ArrayList<String>();\n \n-                    for (ResourceTO resourceTO :\n-                            resourceRestClient.getAllResources()) {\n-                        resourceNames.add(resourceTO.getName());\n-                    }\n-                    return resourceNames;\n-                }\n-            };\n+            for (ResourceTO resourceTO : resourceRestClient.getAllResources()) {\n+                resourceNames.add(resourceTO.getName());\n+            }\n+            return resourceNames;\n+        }\n+    };\n \n-    public <T extends AbstractAttributableTO> ResourcesPanel(\n-            final String id, final T entityTO) {\n+    public <T extends AbstractAttributableTO> ResourcesPanel(final String id, final T entityTO) {\n         super(id);\n \n-        final AjaxPalettePanel resourcesPalette = new AjaxPalettePanel(\n-                \"resourcesPalette\",\n-                new PropertyModel(entityTO, \"resources\"),\n-                new ListModel<String>(allResources.getObject()));\n+        final AjaxPalettePanel resourcesPalette = new AjaxPalettePanel(\"resourcesPalette\", new PropertyModel(entityTO,\n+                \"resources\"), new ListModel<String>(allResources.getObject()));\n \n         add(resourcesPalette);\n     }"},{"sha":"0dcf893483ab0379b9f0d5a29ba7365cb9f7fda6","filename":"console/src/main/java/org/syncope/console/pages/panels/ResultSetPanel.java","status":"modified","additions":61,"deletions":111,"changes":172,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -79,8 +79,7 @@ public class ResultSetPanel extends Panel implements IEventSource {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(ResultSetPanel.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ResultSetPanel.class);\n \n     /**\n      * Edit modal window height.\n@@ -188,11 +187,8 @@ public class ResultSetPanel extends Panel implements IEventSource {\n      */\n     private final BasePage page;\n \n-    public <T extends AbstractAttributableTO> ResultSetPanel(\n-            final String id,\n-            final boolean filtered,\n-            final NodeCond searchCond,\n-            final PageReference callerRef) {\n+    public <T extends AbstractAttributableTO> ResultSetPanel(final String id, final boolean filtered,\n+            final NodeCond searchCond, final PageReference callerRef) {\n         super(id);\n \n         setOutputMarkupId(true);\n@@ -243,19 +239,15 @@ public <T extends AbstractAttributableTO> ResultSetPanel(\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n \n-                displaymodal.setPageCreator(\n-                        new ModalWindow.PageCreator() {\n+                displaymodal.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                    private static final long serialVersionUID = -7834632442532690940L;\n \n-                            @Override\n-                            public Page createPage() {\n-                                return new DisplayAttributesModalPage(\n-                                        page.getPageReference(),\n-                                        displaymodal);\n-                            }\n-                        });\n+                    @Override\n+                    public Page createPage() {\n+                        return new DisplayAttributesModalPage(page.getPageReference(), displaymodal);\n+                    }\n+                });\n \n                 displaymodal.show(target);\n             }\n@@ -268,8 +260,7 @@ public Page createPage() {\n             private static final long serialVersionUID = 1469628524240283489L;\n \n             @Override\n-            public void onComponentTag(\n-                    final Component component, final ComponentTag tag) {\n+            public void onComponentTag(final Component component, final ComponentTag tag) {\n \n                 if (resultTable.getRowCount() > rows) {\n                     tag.remove(\"class\");\n@@ -281,8 +272,8 @@ public void onComponentTag(\n             }\n         });\n \n-        MetaDataRoleAuthorizationStrategy.authorize(displayAttrsLink, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Users\", \"changeView\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(displayAttrsLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Users\", \"changeView\"));\n \n         container.add(displayAttrsLink);\n         // ---------------------------\n@@ -293,20 +284,16 @@ public void onComponentTag(\n         final Form paginatorForm = new Form(\"paginator\");\n         container.add(paginatorForm);\n \n-        final DropDownChoice<Integer> rowsChooser =\n-                new DropDownChoice<Integer>(\"rowsChooser\",\n-                new PropertyModel(this, \"rows\"),\n-                preferences.getPaginatorChoices());\n+        final DropDownChoice<Integer> rowsChooser = new DropDownChoice<Integer>(\"rowsChooser\", new PropertyModel(this,\n+                \"rows\"), preferences.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                preferences.set(getRequest(), getResponse(),\n-                        Constants.PREF_USERS_PAGINATOR_ROWS,\n-                        String.valueOf(rows));\n+                preferences.set(getRequest(), getResponse(), Constants.PREF_USERS_PAGINATOR_ROWS, String.valueOf(rows));\n \n                 final EventDataWrapper data = new EventDataWrapper();\n                 data.setTarget(target);\n@@ -322,8 +309,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         setWindowClosedReloadCallback(displaymodal);\n     }\n \n-    public void search(\n-            final NodeCond searchCond, final AjaxRequestTarget target) {\n+    public void search(final NodeCond searchCond, final AjaxRequestTarget target) {\n \n         this.filter = searchCond;\n         dataProvider.setSearchCond(filter);\n@@ -332,20 +318,18 @@ public void search(\n \n     private void updateResultTable(final boolean create) {\n         // Requires preferences/container attributes not null ...\n-        rows = preferences.getPaginatorRows(\n-                getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n+        rows = preferences.getPaginatorRows(getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n \n         dataProvider = new UserDataProvider(userRestClient, rows, filtered);\n         dataProvider.setSearchCond(filter);\n \n         final int currentPage = resultTable != null\n                 ? (create\n-                ? resultTable.getPageCount() - 1\n-                : resultTable.getCurrentPage())\n+                        ? resultTable.getPageCount() - 1\n+                        : resultTable.getCurrentPage())\n                 : 0;\n \n-        resultTable = new AjaxFallbackDefaultDataTable<UserTO>(\n-                \"resultTable\", getColumns(), dataProvider, rows);\n+        resultTable = new AjaxFallbackDefaultDataTable<UserTO>(\"resultTable\", getColumns(), dataProvider, rows);\n \n         resultTable.setCurrentPage(currentPage);\n \n@@ -357,8 +341,7 @@ private void updateResultTable(final boolean create) {\n     private List<IColumn<UserTO>> getColumns() {\n         final List<IColumn<UserTO>> columns = new ArrayList<IColumn<UserTO>>();\n \n-        for (String name : preferences.getList(getRequest(),\n-                Constants.PREF_USERS_DETAILS_VIEW)) {\n+        for (String name : preferences.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n \n             Field field = null;\n \n@@ -369,49 +352,36 @@ private List<IColumn<UserTO>> getColumns() {\n                 try {\n                     field = AbstractAttributableTO.class.getDeclaredField(name);\n                 } catch (Exception aae) {\n-                    LOG.error(\"Error retrieving AbstractAttributableTO field {}\",\n-                            name, aae);\n+                    LOG.error(\"Error retrieving AbstractAttributableTO field {}\", name, aae);\n                 }\n             }\n \n             if (\"token\".equalsIgnoreCase(name)) {\n                 columns.add(new TokenColumn(\"token\"));\n             } else if (field != null && field.getType().equals(Date.class)) {\n-                columns.add(new DatePropertyColumn<UserTO>(\n-                        new ResourceModel(name, name), name, name));\n+                columns.add(new DatePropertyColumn<UserTO>(new ResourceModel(name, name), name, name));\n             } else {\n-                columns.add(new PropertyColumn(\n-                        new ResourceModel(name, name), name, name));\n+                columns.add(new PropertyColumn(new ResourceModel(name, name), name, name));\n             }\n         }\n \n-        for (String name : preferences.getList(getRequest(),\n-                Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n-            columns.add(new UserAttrColumn(\n-                    name, UserAttrColumn.SchemaType.schema));\n+        for (String name : preferences.getList(getRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n+            columns.add(new UserAttrColumn(name, UserAttrColumn.SchemaType.schema));\n         }\n \n-        for (String name : preferences.getList(getRequest(),\n-                Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW)) {\n-            columns.add(new UserAttrColumn(\n-                    name, UserAttrColumn.SchemaType.derivedSchema));\n+        for (String name : preferences.getList(getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW)) {\n+            columns.add(new UserAttrColumn(name, UserAttrColumn.SchemaType.derivedSchema));\n         }\n \n-        for (String name : preferences.getList(getRequest(),\n-                Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW)) {\n-            columns.add(new UserAttrColumn(\n-                    name, UserAttrColumn.SchemaType.virtualSchema));\n+        for (String name : preferences.getList(getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW)) {\n+            columns.add(new UserAttrColumn(name, UserAttrColumn.SchemaType.virtualSchema));\n         }\n \n         // Add defaults in case of empty selections\n         if (columns.isEmpty()) {\n-            columns.add(new PropertyColumn(\n-                    new ResourceModel(\"id\", \"id\"), \"id\", \"id\"));\n-            columns.add(new PropertyColumn(\n-                    new ResourceModel(\"username\", \"username\"),\n-                    \"username\", \"username\"));\n-            columns.add(new PropertyColumn(\n-                    new ResourceModel(\"status\", \"status\"), \"status\", \"status\"));\n+            columns.add(new PropertyColumn(new ResourceModel(\"id\", \"id\"), \"id\", \"id\"));\n+            columns.add(new PropertyColumn(new ResourceModel(\"username\", \"username\"), \"username\", \"username\"));\n+            columns.add(new PropertyColumn(new ResourceModel(\"status\", \"status\"), \"status\", \"status\"));\n         }\n \n         columns.add(new AbstractColumn<UserTO>(new ResourceModel(\"actions\", \"\")) {\n@@ -424,91 +394,71 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<UserTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<UserTO>> cellItem, final String componentId,\n                     final IModel<UserTO> model) {\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        statusmodal.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        statusmodal.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new StatusModalPage(\n-                                                page.getPageReference(),\n-                                                statusmodal,\n-                                                model.getObject());\n-                                    }\n-                                });\n+                            @Override\n+                            public Page createPage() {\n+                                return new StatusModalPage(page.getPageReference(), statusmodal, model.getObject());\n+                            }\n+                        });\n \n                         statusmodal.show(target);\n                     }\n                 }, ActionLink.ActionType.SEARCH, \"Users\", \"read\");\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        editmodal.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        editmodal.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new EditUserModalPage(\n-                                                page.getPageReference(),\n-                                                editmodal,\n-                                                model.getObject());\n-                                    }\n-                                });\n+                            @Override\n+                            public Page createPage() {\n+                                return new EditUserModalPage(page.getPageReference(), editmodal, model.getObject());\n+                            }\n+                        });\n \n                         editmodal.show(target);\n                     }\n                 }, ActionLink.ActionType.EDIT, \"Users\", \"read\");\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            final UserTO userTO = userRestClient.delete(\n-                                    model.getObject().getId());\n+                            final UserTO userTO = userRestClient.delete(model.getObject().getId());\n \n                             page.setModalResult(true);\n \n-                            editmodal.setPageCreator(\n-                                    new ModalWindow.PageCreator() {\n+                            editmodal.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                        private static final long serialVersionUID =\n-                                                -7834632442532690940L;\n+                                private static final long serialVersionUID = -7834632442532690940L;\n \n-                                        @Override\n-                                        public Page createPage() {\n-                                            return new EditUserModalPage(\n-                                                    editmodal, userTO);\n-                                        }\n-                                    });\n+                                @Override\n+                                public Page createPage() {\n+                                    return new EditUserModalPage(editmodal, userTO);\n+                                }\n+                            });\n \n                             editmodal.show(target);\n "},{"sha":"eda19ac13c794261ae40da18bd0ec19a9f2cf5a8","filename":"console/src/main/java/org/syncope/console/pages/panels/RoleAttributesPanel.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleAttributesPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -39,8 +39,7 @@ public class RoleAttributesPanel extends Panel {\n \n     final Palette<String> entitlementsPalette;\n \n-    public RoleAttributesPanel(final String id,\n-            final Form form, final RoleTO roleTO) {\n+    public RoleAttributesPanel(final String id, final Form form, final RoleTO roleTO) {\n \n         super(id);\n \n@@ -73,8 +72,7 @@ public RoleAttributesPanel(final String id,\n         //--------------------------------\n         // Virtual attributes container\n         //--------------------------------\n-        this.add(new VirtualAttributesPanel(\"virtualAttributes\", roleTO,\n-                false));\n+        this.add(new VirtualAttributesPanel(\"virtualAttributes\", roleTO, false));\n \n         final AjaxCheckBoxPanel inhVirtualAttributes = new AjaxCheckBoxPanel(\"inheritVirtualAttributes\",\n                 \"inheritVirtualAttributes\", new PropertyModel<Boolean>(roleTO, \"inheritVirtualAttributes\"));\n@@ -96,16 +94,12 @@ public RoleAttributesPanel(final String id,\n         this.add(new ResourcesPanel(\"resources\", roleTO));\n         //--------------------------------\n \n-        ListModel<String> selectedEntitlements =\n-                new ListModel<String>(roleTO.getEntitlements());\n+        ListModel<String> selectedEntitlements = new ListModel<String>(roleTO.getEntitlements());\n \n-        ListModel<String> availableEntitlements =\n-                new ListModel<String>(\n-                entitlementRestClient.getAllEntitlements());\n+        ListModel<String> availableEntitlements = new ListModel<String>(entitlementRestClient.getAllEntitlements());\n \n-        entitlementsPalette = new Palette(\n-                \"entitlementsPalette\", selectedEntitlements,\n-                availableEntitlements, new SelectChoiceRenderer(), 20, false);\n+        entitlementsPalette = new Palette(\"entitlementsPalette\", selectedEntitlements, availableEntitlements,\n+                new SelectChoiceRenderer(), 20, false);\n \n         this.add(entitlementsPalette);\n     }"},{"sha":"83c0ae05798e60bc086d2d9fe93cbd3b03843e17","filename":"console/src/main/java/org/syncope/console/pages/panels/RoleSecurityPanel.java","status":"modified","additions":26,"deletions":37,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -45,8 +45,7 @@ public class RoleSecurityPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG =\n-            LoggerFactory.getLogger(RoleSecurityPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(RoleSecurityPanel.class);\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n@@ -57,8 +56,7 @@ public class RoleSecurityPanel extends Panel {\n \n     IModel<Map<Long, String>> accountPolicies = null;\n \n-    public <T extends AbstractAttributableTO> RoleSecurityPanel(\n-            final String id, final T entityTO) {\n+    public <T extends AbstractAttributableTO> RoleSecurityPanel(final String id, final T entityTO) {\n \n         super(id);\n \n@@ -71,8 +69,7 @@ public <T extends AbstractAttributableTO> RoleSecurityPanel(\n             @Override\n             protected Map<Long, String> load() {\n                 Map<Long, String> res = new HashMap<Long, String>();\n-                for (PolicyTO policyTO :\n-                        policyRestClient.getPolicies(PolicyType.PASSWORD)) {\n+                for (PolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PASSWORD)) {\n                     res.put(policyTO.getId(), policyTO.getDescription());\n                 }\n                 return res;\n@@ -86,16 +83,14 @@ protected Map<Long, String> load() {\n             @Override\n             protected Map<Long, String> load() {\n                 Map<Long, String> res = new HashMap<Long, String>();\n-                for (PolicyTO policyTO :\n-                        policyRestClient.getPolicies(PolicyType.ACCOUNT)) {\n+                for (PolicyTO policyTO : policyRestClient.getPolicies(PolicyType.ACCOUNT)) {\n                     res.put(policyTO.getId(), policyTO.getDescription());\n                 }\n                 return res;\n             }\n         };\n \n-        final WebMarkupContainer securityContainer =\n-                new WebMarkupContainer(\"security\");\n+        final WebMarkupContainer securityContainer = new WebMarkupContainer(\"security\");\n \n         securityContainer.setOutputMarkupId(true);\n         add(securityContainer);\n@@ -106,11 +101,9 @@ protected Map<Long, String> load() {\n         final AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<Long>(\"passwordPolicy\",\n                 \"passwordPolicy\", new PropertyModel(entityTO, \"passwordPolicy\"));\n \n-        passwordPolicy.setChoiceRenderer(\n-                new PolicyRenderer(PolicyType.PASSWORD));\n+        passwordPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.PASSWORD));\n \n-        passwordPolicy.setChoices(\n-                new ArrayList<Long>(passwordPolicies.getObject().keySet()));\n+        passwordPolicy.setChoices(new ArrayList<Long>(passwordPolicies.getObject().keySet()));\n \n         ((DropDownChoice) passwordPolicy.getField()).setNullValid(true);\n \n@@ -121,20 +114,16 @@ protected Map<Long, String> load() {\n \n         passwordPolicy.setReadOnly(inhPasswordPolicy.getModelObject());\n \n-        inhPasswordPolicy.getField().add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        inhPasswordPolicy.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                    private static final long serialVersionUID =\n-                            -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        passwordPolicy.setReadOnly(\n-                                inhPasswordPolicy.getModelObject());\n-                        target.add(passwordPolicy);\n-                    }\n-                });\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                passwordPolicy.setReadOnly(inhPasswordPolicy.getModelObject());\n+                target.add(passwordPolicy);\n+            }\n+        });\n \n         securityContainer.add(inhPasswordPolicy);\n         // -------------------------------\n@@ -157,18 +146,16 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 \"inheritAccountPolicy\", new PropertyModel<Boolean>(entityTO, \"inheritAccountPolicy\"));\n         accountPolicy.setReadOnly(inhAccountPolicy.getModelObject());\n \n-        inhAccountPolicy.getField().add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        inhAccountPolicy.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                    private static final long serialVersionUID =\n-                            -1107858522700306810L;\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        accountPolicy.setReadOnly(inhAccountPolicy.getModelObject());\n-                        target.add(accountPolicy);\n-                    }\n-                });\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                accountPolicy.setReadOnly(inhAccountPolicy.getModelObject());\n+                target.add(accountPolicy);\n+            }\n+        });\n \n         securityContainer.add(inhAccountPolicy);\n         // -------------------------------\n@@ -199,7 +186,9 @@ public Object getDisplayValue(final Long object) {\n \n         @Override\n         public String getIdValue(Long object, int index) {\n-            return String.valueOf(object != null ? object : 0L);\n+            return String.valueOf(object != null\n+                    ? object\n+                    : 0L);\n         }\n     };\n }"},{"sha":"d3b1829e0d3cb10e7c6b8a6d454f656d5254c5ab","filename":"console/src/main/java/org/syncope/console/pages/panels/RoleSummaryPanel.java","status":"modified","additions":18,"deletions":31,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -49,32 +49,27 @@ public class RoleSummaryPanel extends Panel {\n \n     private ModalWindow window;\n \n-    public RoleSummaryPanel(final String id,\n-            final ModalWindow window, final PageReference callerPageRef) {\n+    public RoleSummaryPanel(final String id, final ModalWindow window, final PageReference callerPageRef) {\n \n         super(id);\n \n         this.callerPageRef = callerPageRef;\n         this.window = window;\n \n-        fragment = new Fragment(\"rolePanel\",\n-                this.selectedNode == null\n-                ? \"fakerootFrag\" : (this.selectedNode.getId() != 0\n-                ? \"roleViewPanel\" : \"rootPanel\"), this);\n+        fragment = new Fragment(\"rolePanel\", this.selectedNode == null\n+                ? \"fakerootFrag\"\n+                : (this.selectedNode.getId() != 0\n+                        ? \"roleViewPanel\"\n+                        : \"rootPanel\"), this);\n \n         if (this.selectedNode != null) {\n             if (this.selectedNode.getId() != 0) {\n-                roleTabPanel =\n-                        new RoleTabPanel(\"nodeViewPanel\",\n-                        selectedNode, window, callerPageRef);\n+                roleTabPanel = new RoleTabPanel(\"nodeViewPanel\", selectedNode, window, callerPageRef);\n                 roleTabPanel.setOutputMarkupId(true);\n                 fragment.add(roleTabPanel);\n             } else {\n-                actionLink =\n-                        new TreeActionLinkPanel(\"actionLink\",\n-                        this.selectedNode.getId(),\n-                        new CompoundPropertyModel(this.selectedNode),\n-                        window, callerPageRef);\n+                actionLink = new TreeActionLinkPanel(\"actionLink\", this.selectedNode.getId(),\n+                        new CompoundPropertyModel(this.selectedNode), window, callerPageRef);\n                 fragment.add(actionLink);\n             }\n         }\n@@ -92,29 +87,22 @@ public void onEvent(final IEvent<?> event) {\n \n         if (event.getPayload() instanceof TreeNodeClickUpdate) {\n \n-            final TreeNodeClickUpdate update =\n-                    (TreeNodeClickUpdate) event.getPayload();\n+            final TreeNodeClickUpdate update = (TreeNodeClickUpdate) event.getPayload();\n \n-            this.selectedNode =\n-                    restClient.readRole(update.getSelectedNodeId());\n+            this.selectedNode = restClient.readRole(update.getSelectedNodeId());\n \n-            fragment = new Fragment(\"rolePanel\", (update.getSelectedNodeId()\n-                    != 0\n-                    ? \"roleViewPanel\" : \"rootPanel\"), this);\n+            fragment = new Fragment(\"rolePanel\", (update.getSelectedNodeId() != 0\n+                    ? \"roleViewPanel\"\n+                    : \"rootPanel\"), this);\n \n             if (update.getSelectedNodeId() != 0) {\n \n-                roleTabPanel =\n-                        new RoleTabPanel(\"nodeViewPanel\",\n-                        this.selectedNode, window, callerPageRef);\n+                roleTabPanel = new RoleTabPanel(\"nodeViewPanel\", this.selectedNode, window, callerPageRef);\n                 roleTabPanel.setOutputMarkupId(true);\n                 fragment.addOrReplace(roleTabPanel);\n             } else {\n-                actionLink =\n-                        new TreeActionLinkPanel(\"actionLink\",\n-                        update.getSelectedNodeId(),\n-                        new CompoundPropertyModel(this.selectedNode),\n-                        window, callerPageRef);\n+                actionLink = new TreeActionLinkPanel(\"actionLink\", update.getSelectedNodeId(),\n+                        new CompoundPropertyModel(this.selectedNode), window, callerPageRef);\n                 actionLink.setOutputMarkupId(true);\n                 fragment.addOrReplace(actionLink);\n             }\n@@ -130,8 +118,7 @@ public static class TreeNodeClickUpdate {\n \n         private Long selectedNodeId;\n \n-        public TreeNodeClickUpdate(final AjaxRequestTarget target,\n-                final Long selectedNodeId) {\n+        public TreeNodeClickUpdate(final AjaxRequestTarget target, final Long selectedNodeId) {\n \n             this.target = target;\n             this.selectedNodeId = selectedNodeId;"},{"sha":"83390b34977180f15cae32e3ebd217e2e34469ed","filename":"console/src/main/java/org/syncope/console/pages/panels/RoleTabPanel.java","status":"modified","additions":11,"deletions":20,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -44,62 +44,53 @@ public class RoleTabPanel extends Panel {\n \n     private RoleTO roleTO;\n \n-    public RoleTabPanel(final String id, final RoleTO roleTO,\n-            final ModalWindow window, final PageReference callerPageRef) {\n+    public RoleTabPanel(final String id, final RoleTO roleTO, final ModalWindow window,\n+            final PageReference callerPageRef) {\n \n         super(id);\n \n         this.roleTO = roleTO;\n \n         final Form form = new Form(\"RoleForm\");\n \n-        final TreeActionLinkPanel actionLink =\n-                new TreeActionLinkPanel(\"actionLink\", roleTO.getId(),\n-                new CompoundPropertyModel(roleTO),\n-                window, callerPageRef);\n+        final TreeActionLinkPanel actionLink = new TreeActionLinkPanel(\"actionLink\", roleTO.getId(),\n+                new CompoundPropertyModel(roleTO), window, callerPageRef);\n \n         this.add(actionLink);\n         this.add(new Label(\"displayName\", roleTO.getDisplayName()));\n \n         form.setModel(new CompoundPropertyModel(roleTO));\n         form.setOutputMarkupId(true);\n \n-        final RoleAttributesPanel attributesPanel =\n-                new RoleAttributesPanel(\"attributesPanel\", form, roleTO);\n+        final RoleAttributesPanel attributesPanel = new RoleAttributesPanel(\"attributesPanel\", form, roleTO);\n \n         attributesPanel.setEnabled(false);\n \n         form.add(attributesPanel);\n \n-        final WebMarkupContainer userListContainer =\n-                new WebMarkupContainer(\"userListContainer\");\n+        final WebMarkupContainer userListContainer = new WebMarkupContainer(\"userListContainer\");\n \n         userListContainer.setOutputMarkupId(true);\n         userListContainer.setEnabled(true);\n-        userListContainer.add(new ResultSetPanel(\"userList\",\n-                true, null, callerPageRef));\n-        userListContainer.add(new IndicatingAjaxButton(\n-                \"search\", new ResourceModel(\"search\")) {\n+        userListContainer.add(new ResultSetPanel(\"userList\", true, null, callerPageRef));\n+        userListContainer.add(new IndicatingAjaxButton(\"search\", new ResourceModel(\"search\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                 final MembershipCond membershipCond = new MembershipCond();\n                 membershipCond.setRoleName(roleTO.getName());\n                 NodeCond cond = NodeCond.getLeafCond(membershipCond);\n \n-                userListContainer.replace(new ResultSetPanel(\"userList\",\n-                        true, cond, callerPageRef));\n+                userListContainer.replace(new ResultSetPanel(\"userList\", true, cond, callerPageRef));\n \n                 target.add(userListContainer);\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n             }\n         });\n "},{"sha":"4b2607019227f627f63ab55032083490663cea57","filename":"console/src/main/java/org/syncope/console/pages/panels/RolesPanel.java","status":"modified","additions":36,"deletions":62,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRolesPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -55,14 +55,12 @@ public class RolesPanel extends Panel {\n \n     private UserTO userTO = null;\n \n-    public RolesPanel(final String id, final UserTO userTO,\n-            final boolean templateMode) {\n+    public RolesPanel(final String id, final UserTO userTO, final boolean templateMode) {\n \n         super(id);\n         this.userTO = userTO;\n \n-        final WebMarkupContainer membershipsContainer =\n-                new WebMarkupContainer(\"membershipsContainer\");\n+        final WebMarkupContainer membershipsContainer = new WebMarkupContainer(\"membershipsContainer\");\n         membershipsContainer.setOutputMarkupId(true);\n         add(membershipsContainer);\n \n@@ -81,98 +79,80 @@ protected IModel getNodeTextModel(final IModel model) {\n             }\n \n             @Override\n-            protected void onNodeLinkClicked(final Object node,\n-                    final BaseTree tree, final AjaxRequestTarget target) {\n+            protected void onNodeLinkClicked(final Object node, final BaseTree tree, final AjaxRequestTarget target) {\n \n-                final RoleTO roleTO =\n-                        (RoleTO) ((DefaultMutableTreeNode) node).getUserObject();\n+                final RoleTO roleTO = (RoleTO) ((DefaultMutableTreeNode) node).getUserObject();\n \n                 membershipWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                    private static final long serialVersionUID =\n-                            7661763358801821185L;\n+                    private static final long serialVersionUID = 7661763358801821185L;\n \n                     private MembershipTO membershipTO;\n \n                     @Override\n                     public Page createPage() {\n \n-                        for (MembershipTO memberTO :\n-                                membershipsView.getList()) {\n+                        for (MembershipTO memberTO : membershipsView.getList()) {\n \n                             if (memberTO.getRoleId() == roleTO.getId()) {\n-                                return new MembershipModalPage(\n-                                        getPage().getPageReference(),\n-                                        membershipWin, memberTO, templateMode);\n+                                return new MembershipModalPage(getPage().getPageReference(), membershipWin, memberTO,\n+                                        templateMode);\n                             }\n                         }\n                         membershipTO = new MembershipTO();\n                         membershipTO.setRoleId(roleTO.getId());\n                         membershipTO.setRoleName(roleTO.getName());\n \n-                        return new MembershipModalPage(\n-                                getPage().getPageReference(),\n-                                membershipWin, membershipTO, templateMode);\n+                        return new MembershipModalPage(getPage().getPageReference(), membershipWin, membershipTO,\n+                                templateMode);\n                     }\n                 });\n                 membershipWin.show(target);\n             }\n         };\n \n-        tree.setOutputMarkupId(\n-                true);\n+        tree.setOutputMarkupId(true);\n         tree.getTreeState().expandAll();\n \n         add(tree);\n \n-        membershipsView = new ListView<MembershipTO>(\n-                \"memberships\", new PropertyModel<List<? extends MembershipTO>>(\n+        membershipsView = new ListView<MembershipTO>(\"memberships\", new PropertyModel<List<? extends MembershipTO>>(\n                 userTO, \"memberships\")) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem item) {\n-                final MembershipTO membershipTO =\n-                        (MembershipTO) item.getDefaultModelObject();\n+                final MembershipTO membershipTO = (MembershipTO) item.getDefaultModelObject();\n \n-                item.add(new Label(\"roleId\", new Model(\n-                        membershipTO.getRoleId())));\n-                item.add(new Label(\"roleName\", new Model(\n-                        membershipTO.getRoleName())));\n+                item.add(new Label(\"roleId\", new Model(membershipTO.getRoleId())));\n+                item.add(new Label(\"roleName\", new Model(membershipTO.getRoleName())));\n \n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        membershipWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        membershipWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new MembershipModalPage(\n-                                                getPage().getPageReference(),\n-                                                membershipWin, membershipTO,\n-                                                templateMode);\n+                            @Override\n+                            public Page createPage() {\n+                                return new MembershipModalPage(getPage().getPageReference(), membershipWin,\n+                                        membershipTO, templateMode);\n \n-                                    }\n-                                });\n+                            }\n+                        });\n                         membershipWin.show(target);\n                     }\n                 };\n                 item.add(editLink);\n \n-                AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n-                        \"deleteLink\") {\n+                AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\"deleteLink\") {\n \n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -189,25 +169,19 @@ public void onClick(final AjaxRequestTarget target) {\n         setWindowClosedCallback(membershipWin, membershipsContainer);\n     }\n \n-    private void setWindowClosedCallback(\n-            final ModalWindow window,\n-            final WebMarkupContainer container) {\n+    private void setWindowClosedCallback(final ModalWindow window, final WebMarkupContainer container) {\n \n-        window.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n+        window.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n-                    private static final long serialVersionUID =\n-                            8804221891699487139L;\n+            private static final long serialVersionUID = 8804221891699487139L;\n \n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        final UserTO updatedUserTO =\n-                                ((UserModalPage) getPage()).getUserTO();\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                final UserTO updatedUserTO = ((UserModalPage) getPage()).getUserTO();\n \n-                        RolesPanel.this.userTO.setMemberships(\n-                                updatedUserTO.getMemberships());\n-                        target.add(container);\n-                    }\n-                });\n+                RolesPanel.this.userTO.setMemberships(updatedUserTO.getMemberships());\n+                target.add(container);\n+            }\n+        });\n     }\n }"},{"sha":"e7eb06411a83d9d08cedc270b3048c7c858da401","filename":"console/src/main/java/org/syncope/console/pages/panels/SchedTasks.java","status":"modified","additions":26,"deletions":53,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -80,8 +80,7 @@ public class SchedTasks extends Panel {\n     @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n-    public SchedTasks(final String id,\n-            final PageReference callerPageRef) {\n+    public SchedTasks(final String id, final PageReference callerPageRef) {\n \n         super(id);\n \n@@ -96,34 +95,23 @@ public SchedTasks(final String id,\n         window.setCookieName(\"view-task-win\");\n         add(window);\n \n-        ((Tasks) callerPageRef.getPage()).setWindowClosedCallback(\n-                window, container);\n+        ((Tasks) callerPageRef.getPage()).setWindowClosedCallback(window, container);\n \n-        paginatorRows = prefMan.getPaginatorRows(\n-                getWebRequest(),\n-                Constants.PREF_SCHED_TASKS_PAGINATOR_ROWS);\n+        paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_SCHED_TASKS_PAGINATOR_ROWS);\n \n-        List<IColumn<SchedTaskTO>> columns =\n-                new ArrayList<IColumn<SchedTaskTO>>();\n+        List<IColumn<SchedTaskTO>> columns = new ArrayList<IColumn<SchedTaskTO>>();\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"class\"), \"jobClassName\", \"jobClassName\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"class\"), \"jobClassName\", \"jobClassName\"));\n \n-        columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n \n-        columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"latestExecStatus\"),\n-                \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        columns.add(new AbstractColumn<SchedTaskTO>(\n-                new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<SchedTaskTO>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -133,33 +121,27 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<SchedTaskTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<SchedTaskTO>> cellItem, final String componentId,\n                     final IModel<SchedTaskTO> model) {\n \n                 final SchedTaskTO taskTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n \n                         window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n                             @Override\n                             public Page createPage() {\n-                                return new SchedTaskModalPage(\n-                                        window, taskTO, callerPageRef);\n+                                return new SchedTaskModalPage(window, taskTO, callerPageRef);\n                             }\n                         });\n \n@@ -169,8 +151,7 @@ public Page createPage() {\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -188,8 +169,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -207,8 +187,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -227,17 +206,14 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable<SchedTaskTO> table =\n-                new AjaxFallbackDefaultDataTable<SchedTaskTO>(\n-                \"datatable\", columns, new TasksProvider(\n-                restClient, paginatorRows, getId(), SchedTaskTO.class),\n+        final AjaxFallbackDefaultDataTable<SchedTaskTO> table = new AjaxFallbackDefaultDataTable<SchedTaskTO>(\n+                \"datatable\", columns, new TasksProvider(restClient, paginatorRows, getId(), SchedTaskTO.class),\n                 paginatorRows);\n         container.add(table);\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"paginatorRows\"),\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n@@ -246,8 +222,7 @@ restClient, paginatorRows, getId(), SchedTaskTO.class),\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getWebRequest(), (WebResponse) getResponse(),\n-                        Constants.PREF_SCHED_TASKS_PAGINATOR_ROWS,\n+                prefMan.set(getWebRequest(), (WebResponse) getResponse(), Constants.PREF_SCHED_TASKS_PAGINATOR_ROWS,\n                         String.valueOf(paginatorRows));\n \n                 table.setItemsPerPage(paginatorRows);\n@@ -267,22 +242,20 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             public void onClick(final AjaxRequestTarget target) {\n                 window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                    private static final long serialVersionUID =\n-                            -7834632442532690940L;\n+                    private static final long serialVersionUID = -7834632442532690940L;\n \n                     @Override\n                     public Page createPage() {\n-                        return new SchedTaskModalPage(window,\n-                                new SchedTaskTO(), callerPageRef);\n+                        return new SchedTaskModalPage(window, new SchedTaskTO(), callerPageRef);\n                     }\n                 });\n \n                 window.show(target);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createLink, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createLink, RENDER, xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                \"create\"));\n \n         add(createLink);\n     }"},{"sha":"d124f4f1eb75fe14c996184c2d29ecaf470f3938","filename":"console/src/main/java/org/syncope/console/pages/panels/StatusPanel.java","status":"modified","additions":81,"deletions":110,"changes":191,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -48,24 +48,18 @@ public class StatusPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(StatusPanel.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(StatusPanel.class);\n \n     @SpringBean\n     private StatusUtils statusUtils;\n \n-    public <T extends AbstractAttributableTO> StatusPanel(\n-            final String id,\n-            final UserTO userTO,\n+    public <T extends AbstractAttributableTO> StatusPanel(final String id, final UserTO userTO,\n             final List<StatusBean> selectedResources) {\n         this(id, userTO, selectedResources, true);\n     }\n \n-    public <T extends AbstractAttributableTO> StatusPanel(\n-            final String id,\n-            final UserTO userTO,\n-            final List<StatusBean> selectedResources,\n-            final boolean enabled) {\n+    public <T extends AbstractAttributableTO> StatusPanel(final String id, final UserTO userTO,\n+            final List<StatusBean> selectedResources, final boolean enabled) {\n \n         super(id);\n \n@@ -87,114 +81,91 @@ public <T extends AbstractAttributableTO> StatusPanel(\n         final Fragment headerCheckFrag;\n \n         if (enabled) {\n-            headerCheckFrag = new Fragment(\n-                    \"headerCheck\", \"headerCheckFrag\", this);\n-            headerCheckFrag.add(\n-                    new CheckGroupSelector(\"groupselector\", group));\n+            headerCheckFrag = new Fragment(\"headerCheck\", \"headerCheckFrag\", this);\n+            headerCheckFrag.add(new CheckGroupSelector(\"groupselector\", group));\n         } else {\n-            headerCheckFrag = new Fragment(\n-                    \"headerCheck\", \"emptyCheckFrag\", this);\n+            headerCheckFrag = new Fragment(\"headerCheck\", \"emptyCheckFrag\", this);\n         }\n \n         add(headerCheckFrag);\n \n-        final ListView<StatusBean> resources =\n-                new ListView<StatusBean>(\"resources\", statuses) {\n-\n-                    private static final long serialVersionUID =\n-                            4949588177564901031L;\n+        final ListView<StatusBean> resources = new ListView<StatusBean>(\"resources\", statuses) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<StatusBean> item) {\n+                final Image image;\n+                final String alt, title;\n+                boolean checkVisibility = true;\n+\n+                switch (item.getModelObject().getStatus()) {\n+                    case ACTIVE:\n+                        image = new Image(\"icon\", \"statuses/active.png\");\n+                        alt = \"active icon\";\n+                        title = \"Enabled\";\n+                        break;\n+                    case UNDEFINED:\n+                        image = new Image(\"icon\", \"statuses/undefined.png\");\n+                        checkVisibility = false;\n+                        alt = \"undefined icon\";\n+                        title = \"Undefined status\";\n+                        break;\n+                    case USER_NOT_FOUND:\n+                        image = new Image(\"icon\", \"statuses/usernotfound.png\");\n+                        checkVisibility = false;\n+                        alt = \"notfound icon\";\n+                        title = \"User not found\";\n+                        break;\n+                    default:\n+                        image = new Image(\"icon\", \"statuses/inactive.png\");\n+                        alt = \"inactive icon\";\n+                        title = \"Disabled\";\n+                }\n+\n+                image.add(new Behavior() {\n+\n+                    private static final long serialVersionUID = 1469628524240283489L;\n \n                     @Override\n-                    protected void populateItem(\n-                            final ListItem<StatusBean> item) {\n-                        final Image image;\n-                        final String alt, title;\n-                        boolean checkVisibility = true;\n-\n-                        switch (item.getModelObject().getStatus()) {\n-                            case ACTIVE:\n-                                image = new Image(\n-                                        \"icon\", \"statuses/active.png\");\n-                                alt = \"active icon\";\n-                                title = \"Enabled\";\n-                                break;\n-                            case UNDEFINED:\n-                                image = new Image(\n-                                        \"icon\", \"statuses/undefined.png\");\n-                                checkVisibility = false;\n-                                alt = \"undefined icon\";\n-                                title = \"Undefined status\";\n-                                break;\n-                            case USER_NOT_FOUND:\n-                                image = new Image(\n-                                        \"icon\", \"statuses/usernotfound.png\");\n-                                checkVisibility = false;\n-                                alt = \"notfound icon\";\n-                                title = \"User not found\";\n-                                break;\n-                            default:\n-                                image = new Image(\n-                                        \"icon\", \"statuses/inactive.png\");\n-                                alt = \"inactive icon\";\n-                                title = \"Disabled\";\n-                        }\n-\n-                        image.add(new Behavior() {\n-\n-                            private static final long serialVersionUID =\n-                                    1469628524240283489L;\n-\n-                            @Override\n-                            public void onComponentTag(\n-                                    final Component component,\n-                                    final ComponentTag tag) {\n-                                tag.put(\"alt\", alt);\n-                                tag.put(\"title\", title);\n-                            }\n-                        });\n-\n-                        final Fragment checkFrag;\n-\n-                        if (!enabled) {\n-                            checkFrag = new Fragment(\n-                                    \"rowCheck\",\n-                                    \"emptyCheckFrag\",\n-                                    group.getParent());\n-                        } else {\n-                            final Check check = new Check(\n-                                    \"check\", item.getModel(), group);\n-\n-                            check.setEnabled(checkVisibility);\n-                            check.setVisible(checkVisibility);\n-\n-                            checkFrag = new Fragment(\n-                                    \"rowCheck\",\n-                                    \"rowCheckFrag\",\n-                                    getParent());\n-\n-                            checkFrag.add(check);\n-                        }\n-\n-                        item.add(checkFrag);\n-\n-                        item.add(new Label(\"resource\", new ResourceModel(\n-                                item.getModelObject().getResourceName(),\n-                                item.getModelObject().getResourceName())));\n-\n-                        if (StringUtils.isNotBlank(\n-                                item.getModelObject().getAccountLink())) {\n-\n-                            item.add(new Label(\"accountLink\", new ResourceModel(\n-                                    item.getModelObject().getAccountLink(),\n-                                    item.getModelObject().getAccountLink())));\n-\n-                        } else {\n-                            item.add(new Label(\"accountLink\", \"\"));\n-                        }\n-\n-                        item.add(image);\n+                    public void onComponentTag(final Component component, final ComponentTag tag) {\n+                        tag.put(\"alt\", alt);\n+                        tag.put(\"title\", title);\n                     }\n-                };\n+                });\n+\n+                final Fragment checkFrag;\n+\n+                if (!enabled) {\n+                    checkFrag = new Fragment(\"rowCheck\", \"emptyCheckFrag\", group.getParent());\n+                } else {\n+                    final Check check = new Check(\"check\", item.getModel(), group);\n+\n+                    check.setEnabled(checkVisibility);\n+                    check.setVisible(checkVisibility);\n+\n+                    checkFrag = new Fragment(\"rowCheck\", \"rowCheckFrag\", getParent());\n+\n+                    checkFrag.add(check);\n+                }\n+\n+                item.add(checkFrag);\n+\n+                item.add(new Label(\"resource\", new ResourceModel(item.getModelObject().getResourceName(), item\n+                        .getModelObject().getResourceName())));\n+\n+                if (StringUtils.isNotBlank(item.getModelObject().getAccountLink())) {\n+\n+                    item.add(new Label(\"accountLink\", new ResourceModel(item.getModelObject().getAccountLink(), item\n+                            .getModelObject().getAccountLink())));\n+\n+                } else {\n+                    item.add(new Label(\"accountLink\", \"\"));\n+                }\n+\n+                item.add(image);\n+            }\n+        };\n \n         resources.setReuseItems(true);\n "},{"sha":"729c22c30d2074090324dc9e740f766a389f31ee","filename":"console/src/main/java/org/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":23,"deletions":48,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -94,34 +94,23 @@ public SyncTasks(String id, final PageReference callerPageRef) {\n         window.setCookieName(\"view-task-win\");\n         add(window);\n \n-        ((Tasks) callerPageRef.getPage()).setWindowClosedCallback(\n-                window, container);\n+        ((Tasks) callerPageRef.getPage()).setWindowClosedCallback(window, container);\n \n-        paginatorRows = prefMan.getPaginatorRows(\n-                getWebRequest(),\n-                Constants.PREF_SYNC_TASKS_PAGINATOR_ROWS);\n+        paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_SYNC_TASKS_PAGINATOR_ROWS);\n \n-        List<IColumn<SyncTaskTO>> columns =\n-                new ArrayList<IColumn<SyncTaskTO>>();\n+        List<IColumn<SyncTaskTO>> columns = new ArrayList<IColumn<SyncTaskTO>>();\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"id\"), \"id\", \"id\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"resourceName\"), \"resource\", \"resource\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"resourceName\"), \"resource\", \"resource\"));\n \n-        columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n \n-        columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n \n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"latestExecStatus\"),\n-                \"latestExecStatus\", \"latestExecStatus\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"latestExecStatus\"), \"latestExecStatus\", \"latestExecStatus\"));\n \n-        columns.add(new AbstractColumn<SyncTaskTO>(\n-                new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<SyncTaskTO>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -131,15 +120,12 @@ public String getCssClass() {\n             }\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<SyncTaskTO>> cellItem,\n-                    final String componentId,\n+            public void populateItem(final Item<ICellPopulator<SyncTaskTO>> cellItem, final String componentId,\n                     final IModel<SyncTaskTO> model) {\n \n                 final SyncTaskTO taskTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n@@ -150,13 +136,11 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n                             @Override\n                             public Page createPage() {\n-                                return new SyncTaskModalPage(\n-                                        window, taskTO, callerPageRef);\n+                                return new SyncTaskModalPage(window, taskTO, callerPageRef);\n                             }\n                         });\n \n@@ -173,13 +157,11 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            private static final long serialVersionUID =\n-                                    -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n                             @Override\n                             public Page createPage() {\n-                                return new UserTemplateModalPage(\n-                                        callerPageRef, window, taskTO);\n+                                return new UserTemplateModalPage(callerPageRef, window, taskTO);\n                             }\n                         });\n \n@@ -244,17 +226,13 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n \n-        final AjaxFallbackDefaultDataTable<SyncTaskTO> table =\n-                new AjaxFallbackDefaultDataTable<SyncTaskTO>(\n-                \"datatable\", columns, new TasksProvider(\n-                restClient, paginatorRows, id, SyncTaskTO.class),\n-                paginatorRows);\n+        final AjaxFallbackDefaultDataTable<SyncTaskTO> table = new AjaxFallbackDefaultDataTable<SyncTaskTO>(\n+                \"datatable\", columns, new TasksProvider(restClient, paginatorRows, id, SyncTaskTO.class), paginatorRows);\n         container.add(table);\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"paginatorRows\"),\n+        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\", new PropertyModel(this, \"paginatorRows\"),\n                 prefMan.getPaginatorChoices());\n \n         rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n@@ -263,8 +241,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getWebRequest(), (WebResponse) getResponse(),\n-                        Constants.PREF_SYNC_TASKS_PAGINATOR_ROWS,\n+                prefMan.set(getWebRequest(), (WebResponse) getResponse(), Constants.PREF_SYNC_TASKS_PAGINATOR_ROWS,\n                         String.valueOf(paginatorRows));\n \n                 table.setItemsPerPage(paginatorRows);\n@@ -285,22 +262,20 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             public void onClick(final AjaxRequestTarget target) {\n                 window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                    private static final long serialVersionUID =\n-                            -7834632442532690940L;\n+                    private static final long serialVersionUID = -7834632442532690940L;\n \n                     @Override\n                     public Page createPage() {\n-                        return new SyncTaskModalPage(\n-                                window, new SyncTaskTO(), callerPageRef);\n+                        return new SyncTaskModalPage(window, new SyncTaskTO(), callerPageRef);\n                     }\n                 });\n \n                 window.show(target);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createLink, RENDER,\n-                xmlRolesReader.getAllAllowedRoles(\"Tasks\", \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createLink, RENDER, xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                \"create\"));\n \n         add(createLink);\n     }"},{"sha":"4c2ff571f9fc71f75d027f4c41cc02d04b3dc6c9","filename":"console/src/main/java/org/syncope/console/pages/panels/UserDetailsPanel.java","status":"modified","additions":9,"deletions":18,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -40,20 +40,16 @@ public class UserDetailsPanel extends Panel {\n \n     private static final long serialVersionUID = 6592027822510220463L;\n \n-    public <T extends AbstractAttributableTO> UserDetailsPanel(\n-            final String id,\n-            final UserTO userTO,\n-            final Form form,\n-            final boolean resetPassword,\n-            final boolean templateMode) {\n+    public <T extends AbstractAttributableTO> UserDetailsPanel(final String id, final UserTO userTO, final Form form,\n+            final boolean resetPassword, final boolean templateMode) {\n \n         super(id);\n \n         // ------------------------\n         // Username\n         // ------------------------\n-        final FieldPanel username = new AjaxTextFieldPanel(\"username\", \"username\",\n-                new PropertyModel<String>(userTO, \"username\"));\n+        final FieldPanel username = new AjaxTextFieldPanel(\"username\", \"username\", new PropertyModel<String>(userTO,\n+                \"username\"));\n         if (!templateMode) {\n             username.addRequiredLabel();\n         }\n@@ -64,8 +60,7 @@ public <T extends AbstractAttributableTO> UserDetailsPanel(\n         // Password\n         // ------------------------\n         final FieldPanel password;\n-        final Label confirmPasswordLabel = new Label(\"confirmPasswordLabel\",\n-                new ResourceModel(\"confirmPassword\"));\n+        final Label confirmPasswordLabel = new Label(\"confirmPasswordLabel\", new ResourceModel(\"confirmPassword\"));\n         final FieldPanel confirmPassword;\n         if (templateMode) {\n             password = new AjaxTextFieldPanel(\"password\", \"password\", new PropertyModel<String>(userTO, \"password\"));\n@@ -86,23 +81,19 @@ public <T extends AbstractAttributableTO> UserDetailsPanel(\n             confirmPassword.setRequired(userTO.getId() == 0);\n             ((PasswordTextField) confirmPassword.getField()).setResetPassword(resetPassword);\n \n-            form.add(new EqualPasswordInputValidator(\n-                    password.getField(), confirmPassword.getField()));\n+            form.add(new EqualPasswordInputValidator(password.getField(), confirmPassword.getField()));\n         }\n         add(password);\n         add(confirmPasswordLabel);\n         add(confirmPassword);\n \n-        final WebMarkupContainer mandatoryPassword =\n-                new WebMarkupContainer(\"mandatory_pwd\");\n+        final WebMarkupContainer mandatoryPassword = new WebMarkupContainer(\"mandatory_pwd\");\n         mandatoryPassword.add(new Behavior() {\n \n-            private static final long serialVersionUID =\n-                    1469628524240283489L;\n+            private static final long serialVersionUID = 1469628524240283489L;\n \n             @Override\n-            public void onComponentTag(\n-                    final Component component, final ComponentTag tag) {\n+            public void onComponentTag(final Component component, final ComponentTag tag) {\n \n                 if (userTO.getId() > 0) {\n                     tag.put(\"style\", \"display:none;\");"},{"sha":"8725e5794ca55e9df090bfce518e4ab44285d6b1","filename":"console/src/main/java/org/syncope/console/pages/panels/UserManagementResultPanel.java","status":"modified","additions":37,"deletions":68,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserManagementResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserManagementResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserManagementResultPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -64,8 +64,7 @@ public class UserManagementResultPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(UserManagementResultPanel.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(UserManagementResultPanel.class);\n \n     /**\n      * Status management utilities.\n@@ -81,26 +80,21 @@ public class UserManagementResultPanel extends Panel {\n      * @param mode operation mode.\n      * @param userTO User TO.\n      */\n-    public UserManagementResultPanel(\n-            final String id,\n-            final ModalWindow window,\n-            final UserModalPage.Mode mode,\n+    public UserManagementResultPanel(final String id, final ModalWindow window, final UserModalPage.Mode mode,\n             final UserTO userTO) {\n \n         super(id);\n \n         // shortcut to retrieve fragments inside inner classes\n         final Panel panel = this;\n \n-        final WebMarkupContainer container =\n-                new WebMarkupContainer(\"container\");\n+        final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n         add(container);\n \n-        final Fragment fragment = new Fragment(\"userModalResultFrag\",\n-                mode == UserModalPage.Mode.SELF\n-                ? \"userModalSelfResultFrag\" : \"userModalPropagationResultFrag\",\n-                this);\n+        final Fragment fragment = new Fragment(\"userModalResultFrag\", mode == UserModalPage.Mode.SELF\n+                ? \"userModalSelfResultFrag\"\n+                : \"userModalPropagationResultFrag\", this);\n \n         fragment.setOutputMarkupId(true);\n         container.add(fragment);\n@@ -117,40 +111,35 @@ public UserManagementResultPanel(\n             propagations.addAll(userTO.getPropagationTOs());\n \n             fragment.add(new Label(\"userInfo\", userTO.getUsername() != null\n-                    ? userTO.getUsername() : String.valueOf(userTO.getId())));\n+                    ? userTO.getUsername()\n+                    : String.valueOf(userTO.getId())));\n \n-            final ListView<PropagationTO> propRes = new ListView<PropagationTO>(\n-                    \"resources\", propagations) {\n+            final ListView<PropagationTO> propRes = new ListView<PropagationTO>(\"resources\", propagations) {\n \n-                private static final long serialVersionUID =\n-                        -1020475259727720708L;\n+                private static final long serialVersionUID = -1020475259727720708L;\n \n                 @Override\n                 protected void populateItem(final ListItem item) {\n-                    final PropagationTO propTO =\n-                            (PropagationTO) item.getDefaultModelObject();\n+                    final PropagationTO propTO = (PropagationTO) item.getDefaultModelObject();\n \n                     final ListView attributes = getConnObjectView(propTO);\n \n                     final Fragment attrhead;\n \n-                    if (attributes.getModelObject() != null\n-                            && !attributes.getModelObject().isEmpty()) {\n-                        attrhead = new Fragment(\n-                                \"attrhead\", \"attrHeadFrag\", panel);\n+                    if (attributes.getModelObject() != null && !attributes.getModelObject().isEmpty()) {\n+                        attrhead = new Fragment(\"attrhead\", \"attrHeadFrag\", panel);\n                     } else {\n-                        attrhead = new Fragment(\n-                                \"attrhead\", \"emptyAttrHeadFrag\", panel);\n+                        attrhead = new Fragment(\"attrhead\", \"emptyAttrHeadFrag\", panel);\n                     }\n \n                     item.add(attrhead);\n                     item.add(attributes);\n \n                     attrhead.add(new Label(\"resource\", propTO.getResourceName()));\n \n-                    attrhead.add(new Label(\"propagation\",\n-                            propTO.getStatus() != null\n-                            ? propTO.getStatus().toString() : \"UNDEFINED\"));\n+                    attrhead.add(new Label(\"propagation\", propTO.getStatus() != null\n+                            ? propTO.getStatus().toString()\n+                            : \"UNDEFINED\"));\n \n                     final Image image;\n                     final String alt, title;\n@@ -171,13 +160,10 @@ protected void populateItem(final ListItem item) {\n \n                     image.add(new Behavior() {\n \n-                        private static final long serialVersionUID =\n-                                1469628524240283489L;\n+                        private static final long serialVersionUID = 1469628524240283489L;\n \n                         @Override\n-                        public void onComponentTag(\n-                                final Component component,\n-                                final ComponentTag tag) {\n+                        public void onComponentTag(final Component component, final ComponentTag tag) {\n                             tag.put(\"alt\", alt);\n                             tag.put(\"title\", title);\n                         }\n@@ -191,8 +177,7 @@ public void onComponentTag(\n \n         final AjaxLink close = new IndicatingAjaxLink(\"close\") {\n \n-            private static final long serialVersionUID =\n-                    -7978723352517770644L;\n+            private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n@@ -213,8 +198,7 @@ private ListView getConnObjectView(final PropagationTO propTO) {\n         final ConnObjectTO after = propTO.getAfter();\n \n         // sorted in reversed presentation order\n-        final List<String> head = Arrays.asList(new String[]{\n-                    \"__PASSWORD__\", \"__ENABLE__\", \"__UID__\", \"__NAME__\"});\n+        final List<String> head = Arrays.asList(new String[] { \"__PASSWORD__\", \"__ENABLE__\", \"__UID__\", \"__NAME__\" });\n \n         final Map<String, AttributeTO> beforeAttrMap;\n \n@@ -262,11 +246,9 @@ protected void populateItem(final ListItem item) {\n                     beforeValue = getStatusIcon(\"beforeValue\", before);\n                     afterValue = getStatusIcon(\"afterValue\", after);\n                 } else {\n-                    beforeValue = getLabelValue(\n-                            \"beforeValue\", name, beforeAttrMap);\n+                    beforeValue = getLabelValue(\"beforeValue\", name, beforeAttrMap);\n \n-                    afterValue = getLabelValue(\n-                            \"afterValue\", name, afterAttrMap);\n+                    afterValue = getLabelValue(\"afterValue\", name, afterAttrMap);\n                 }\n \n                 item.add(new Label(\"attrName\", new ResourceModel(name, name)));\n@@ -285,42 +267,34 @@ protected void populateItem(final ListItem item) {\n      * @param attrMap remote attributes map.\n      * @return fragment.\n      */\n-    private Fragment getLabelValue(\n-            final String id,\n-            final String attrName,\n-            final Map<String, AttributeTO> attrMap) {\n+    private Fragment getLabelValue(final String id, final String attrName, final Map<String, AttributeTO> attrMap) {\n         final String value;\n \n         final AttributeTO attr = attrMap.get(attrName);\n \n-        if (attr != null\n-                && attr.getValues() != null\n-                && !attr.getValues().isEmpty()) {\n+        if (attr != null && attr.getValues() != null && !attr.getValues().isEmpty()) {\n \n             if (\"__PASSWORD__\".equals(attrName)) {\n                 value = \"********\";\n             } else {\n                 value = attr.getValues().size() > 1\n-                        ? attr.getValues().toString() : attr.getValues().get(0);\n+                        ? attr.getValues().toString()\n+                        : attr.getValues().get(0);\n             }\n \n         } else {\n             value = \"\";\n         }\n \n-        Component label = new Label(\"value\", value).add(\n-                new Behavior() {\n+        Component label = new Label(\"value\", value).add(new Behavior() {\n \n-                    private static final long serialVersionUID =\n-                            1469628524240283489L;\n+            private static final long serialVersionUID = 1469628524240283489L;\n \n-                    @Override\n-                    public void onComponentTag(\n-                            final Component component,\n-                            final ComponentTag tag) {\n-                        tag.put(\"title\", value);\n-                    }\n-                });\n+            @Override\n+            public void onComponentTag(final Component component, final ComponentTag tag) {\n+                tag.put(\"title\", value);\n+            }\n+        });\n \n         final Fragment frag = new Fragment(id, \"attrValueFrag\", this);\n         frag.add(label);\n@@ -335,9 +309,7 @@ public void onComponentTag(\n      * @param objectTO connector object TO.\n      * @return fragment.\n      */\n-    private Fragment getStatusIcon(\n-            final String id,\n-            final ConnObjectTO objectTO) {\n+    private Fragment getStatusIcon(final String id, final ConnObjectTO objectTO) {\n         final Image image;\n         final String alt, title;\n \n@@ -363,13 +335,10 @@ private Fragment getStatusIcon(\n         if (image != null) {\n             image.add(new Behavior() {\n \n-                private static final long serialVersionUID =\n-                        1469628524240283489L;\n+                private static final long serialVersionUID = 1469628524240283489L;\n \n                 @Override\n-                public void onComponentTag(\n-                        final Component component,\n-                        final ComponentTag tag) {\n+                public void onComponentTag(final Component component, final ComponentTag tag) {\n                     tag.put(\"alt\", alt);\n                     tag.put(\"title\", title);\n                     tag.put(\"width\", \"12px\");"},{"sha":"337dd207e0d2d53851bc8f9c363c641183fdd9e5","filename":"console/src/main/java/org/syncope/console/pages/panels/UserSearchPanel.java","status":"modified","additions":24,"deletions":31,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -70,12 +70,10 @@ public class UserSearchPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(UserSearchPanel.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(UserSearchPanel.class);\n \n-    private List<String> ATTRIBUTES_NOTINCLUDED = Arrays.asList(new String[]{\n-                \"attributes\", \"derivedAttributes\", \"virtualAttributes\",\n-                \"serialVersionUID\", \"memberships\", \"resources\", \"password\", \"propagationStatusMap\"});\n+    private List<String> ATTRIBUTES_NOTINCLUDED = Arrays.asList(new String[] { \"attributes\", \"derivedAttributes\",\n+            \"virtualAttributes\", \"serialVersionUID\", \"memberships\", \"resources\", \"password\", \"propagationStatusMap\" });\n \n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n@@ -158,16 +156,15 @@ protected List<String> load() {\n         }\n     };\n \n-    final private IModel<List<AttributeCond.Type>> attributeTypes =\n-            new LoadableDetachableModel<List<AttributeCond.Type>>() {\n+    final private IModel<List<AttributeCond.Type>> attributeTypes = new LoadableDetachableModel<List<AttributeCond.Type>>() {\n \n-                private static final long serialVersionUID = 5275935387613157437L;\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-                @Override\n-                protected List<AttributeCond.Type> load() {\n-                    return Arrays.asList(AttributeCond.Type.values());\n-                }\n-            };\n+        @Override\n+        protected List<AttributeCond.Type> load() {\n+            return Arrays.asList(AttributeCond.Type.values());\n+        }\n+    };\n \n     final private IModel<List<FilterType>> filterTypes = new LoadableDetachableModel<List<FilterType>>() {\n \n@@ -236,8 +233,7 @@ public boolean accept(final FeedbackMessage message) {\n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                 SearchCondWrapper conditionWrapper = new SearchCondWrapper();\n                 conditionWrapper.setOperationType(OperationType.AND);\n@@ -296,7 +292,8 @@ private List<SearchCondWrapper> getSearchCondWrappers(final NodeCond searchCond)\n                 wrappers.add(getSearchCondWrapper(searchCond.getLeftNodeCond()));\n                 SearchCondWrapper wrapper = getSearchCondWrapper(searchCond.getRightNodeCond());\n                 wrapper.setOperationType(searchCond.getType() == NodeCond.Type.AND\n-                        ? OperationType.AND : OperationType.OR);\n+                        ? OperationType.AND\n+                        : OperationType.OR);\n                 wrappers.add(wrapper);\n                 break;\n \n@@ -352,14 +349,10 @@ private NodeCond buildSearchCond(final List<SearchCondWrapper> conditions) {\n             return null;\n         }\n \n-        LOG.debug(\"Search conditions: fname {}; ftype {}; fvalue {}; OP {}; type {}; isnot {}\",\n-                new Object[]{\n-                    searchConditionWrapper.getFilterName(),\n-                    searchConditionWrapper.getFilterType(),\n-                    searchConditionWrapper.getFilterValue(),\n-                    searchConditionWrapper.getOperationType(),\n-                    searchConditionWrapper.getType(),\n-                    searchConditionWrapper.isNotOperator()});\n+        LOG.debug(\"Search conditions: fname {}; ftype {}; fvalue {}; OP {}; type {}; isnot {}\", new Object[] {\n+                searchConditionWrapper.getFilterName(), searchConditionWrapper.getFilterType(),\n+                searchConditionWrapper.getFilterValue(), searchConditionWrapper.getOperationType(),\n+                searchConditionWrapper.getType(), searchConditionWrapper.isNotOperator() });\n \n         NodeCond nodeCond = null;\n \n@@ -413,7 +406,7 @@ private NodeCond buildSearchCond(final List<SearchCondWrapper> conditions) {\n                 break;\n \n             default:\n-            // nothing to do\n+                // nothing to do\n         }\n \n         LOG.debug(\"Processed condition {}\", nodeCond);\n@@ -465,8 +458,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             });\n             item.add(notOperator);\n \n-            final DropDownChoice<AttributeCond.Type> type = new DropDownChoice<AttributeCond.Type>(\n-                    \"type\", new PropertyModel<AttributeCond.Type>(searchCondition, \"type\"), attributeTypes);\n+            final DropDownChoice<AttributeCond.Type> type = new DropDownChoice<AttributeCond.Type>(\"type\",\n+                    new PropertyModel<AttributeCond.Type>(searchCondition, \"type\"), attributeTypes);\n             type.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n                 private static final long serialVersionUID = -1107858522700306810L;\n@@ -477,8 +470,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             });\n             item.add(type);\n \n-            final DropDownChoice<String> filterNameChooser = new DropDownChoice<String>(\n-                    \"filterName\", new PropertyModel<String>(searchCondition, \"filterName\"), (IModel) null);\n+            final DropDownChoice<String> filterNameChooser = new DropDownChoice<String>(\"filterName\",\n+                    new PropertyModel<String>(searchCondition, \"filterName\"), (IModel) null);\n             filterNameChooser.setOutputMarkupId(true);\n             filterNameChooser.setRequired(required);\n             filterNameChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n@@ -491,8 +484,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             });\n             item.add(filterNameChooser);\n \n-            final TextField<String> filterValue = new TextField<String>(\"filterValue\",\n-                    new PropertyModel<String>(searchCondition, \"filterValue\"));\n+            final TextField<String> filterValue = new TextField<String>(\"filterValue\", new PropertyModel<String>(\n+                    searchCondition, \"filterValue\"));\n             filterValue.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n                 private static final long serialVersionUID = -1107858522700306810L;"},{"sha":"dede178d30a8c31293870b49758bc11c98d2d398","filename":"console/src/main/java/org/syncope/console/pages/panels/VirtualAttributesPanel.java","status":"modified","additions":39,"deletions":63,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -55,76 +55,66 @@ public class VirtualAttributesPanel extends Panel {\n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n-    public <T extends AbstractAttributableTO> VirtualAttributesPanel(\n-            final String id, final T entityTO, final boolean templateMode) {\n+    public <T extends AbstractAttributableTO> VirtualAttributesPanel(final String id, final T entityTO,\n+            final boolean templateMode) {\n \n         super(id);\n \n         setOutputMarkupId(true);\n \n-        final IModel<List<String>> virtualSchemaNames =\n-                new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> virtualSchemaNames = new LoadableDetachableModel<List<String>>() {\n \n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-                    @Override\n-                    protected List<String> load() {\n-                        if (entityTO instanceof RoleTO) {\n-                            return schemaRestClient.getVirtualSchemaNames(AttributableType.ROLE);\n-                        } else if (entityTO instanceof UserTO) {\n-                            return schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n-                        } else {\n-                            return schemaRestClient.getVirtualSchemaNames(AttributableType.MEMBERSHIP);\n-                        }\n-                    }\n-                };\n+            @Override\n+            protected List<String> load() {\n+                if (entityTO instanceof RoleTO) {\n+                    return schemaRestClient.getVirtualSchemaNames(AttributableType.ROLE);\n+                } else if (entityTO instanceof UserTO) {\n+                    return schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+                } else {\n+                    return schemaRestClient.getVirtualSchemaNames(AttributableType.MEMBERSHIP);\n+                }\n+            }\n+        };\n \n-        final WebMarkupContainer attributesContainer =\n-                new WebMarkupContainer(\"virAttrContainer\");\n+        final WebMarkupContainer attributesContainer = new WebMarkupContainer(\"virAttrContainer\");\n \n         attributesContainer.setOutputMarkupId(true);\n         add(attributesContainer);\n \n-        AjaxButton addAttributeBtn = new IndicatingAjaxButton(\n-                \"addAttributeBtn\", new ResourceModel(\"addAttributeBtn\")) {\n+        AjaxButton addAttributeBtn = new IndicatingAjaxButton(\"addAttributeBtn\", new ResourceModel(\"addAttributeBtn\")) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                 entityTO.addVirtualAttribute(new AttributeTO());\n                 target.add(attributesContainer);\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n                 target.add(attributesContainer);\n             }\n         };\n \n         add(addAttributeBtn.setDefaultFormProcessing(Boolean.FALSE));\n \n-        ListView<AttributeTO> attributes = new ListView<AttributeTO>(\n-                \"attributes\",\n-                new PropertyModel<List<? extends AttributeTO>>(\n-                entityTO, \"virtualAttributes\")) {\n+        ListView<AttributeTO> attributes = new ListView<AttributeTO>(\"attributes\",\n+                new PropertyModel<List<? extends AttributeTO>>(entityTO, \"virtualAttributes\")) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n             protected void populateItem(final ListItem<AttributeTO> item) {\n                 final AttributeTO attributeTO = item.getModelObject();\n \n-                item.add(new AjaxDecoratedCheckbox(\n-                        \"toRemove\", new Model(Boolean.FALSE)) {\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model(Boolean.FALSE)) {\n \n-                    private static final long serialVersionUID =\n-                            7170946748485726506L;\n+                    private static final long serialVersionUID = 7170946748485726506L;\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n@@ -134,34 +124,25 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(\n-                                super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n \n-                            private static final long serialVersionUID =\n-                                    -7927968187160354605L;\n+                            private static final long serialVersionUID = -7927968187160354605L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(\n-                                    final CharSequence script) {\n+                            public CharSequence preDecorateScript(final CharSequence script) {\n \n-                                return \"if (confirm('\"\n-                                        + getString(\"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"} \"\n+                                return \"if (confirm('\" + getString(\"confirmDelete\") + \"'))\" + \"{\" + script + \"} \"\n                                         + \"else {this.checked = false;}\";\n                             }\n                         };\n                     }\n                 });\n \n-                final DropDownChoice<String> schemaChoice =\n-                        new DropDownChoice<String>(\n-                        \"schema\",\n-                        new PropertyModel<String>(attributeTO, \"schema\"),\n-                        virtualSchemaNames,\n+                final DropDownChoice<String> schemaChoice = new DropDownChoice<String>(\"schema\",\n+                        new PropertyModel<String>(attributeTO, \"schema\"), virtualSchemaNames,\n                         new ChoiceRenderer<String>() {\n \n-                            private static final long serialVersionUID =\n-                                    3109256773218160485L;\n+                            private static final long serialVersionUID = 3109256773218160485L;\n \n                             @Override\n                             public Object getDisplayValue(final String object) {\n@@ -171,20 +152,16 @@ public Object getDisplayValue(final String object) {\n                             }\n                         });\n \n-                schemaChoice.add(\n-                        new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n+                schemaChoice.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n \n-                            private static final long serialVersionUID =\n-                                    -1107858522700306810L;\n+                    private static final long serialVersionUID = -1107858522700306810L;\n \n-                            @Override\n-                            protected void onUpdate(\n-                                    final AjaxRequestTarget art) {\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget art) {\n \n-                                attributeTO.setSchema(\n-                                        schemaChoice.getModelObject());\n-                            }\n-                        });\n+                        attributeTO.setSchema(schemaChoice.getModelObject());\n+                    }\n+                });\n \n                 schemaChoice.setOutputMarkupId(true);\n                 schemaChoice.setRequired(true);\n@@ -197,9 +174,8 @@ protected void onUpdate(\n                 if (templateMode) {\n                     item.add(new AjaxTextFieldPanel(\"values\", \"values\", new Model()));\n                 } else {\n-                    item.add(new MultiValueSelectorPanel(\"values\",\n-                            new PropertyModel<List<String>>(attributeTO, \"values\"),\n-                            new AjaxTextFieldPanel(\"panel\", \"values\", new Model(null))));\n+                    item.add(new MultiValueSelectorPanel(\"values\", new PropertyModel<List<String>>(attributeTO,\n+                            \"values\"), new AjaxTextFieldPanel(\"panel\", \"values\", new Model(null))));\n                 }\n             }\n         };"},{"sha":"8f95c93ead3c0c92e3803d20c7e0f4a900f4a047","filename":"console/src/main/java/org/syncope/console/rest/AbstractBaseRestClient.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAbstractBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAbstractBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAbstractBaseRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,8 +28,7 @@ public abstract class AbstractBaseRestClient {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            AbstractBaseRestClient.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractBaseRestClient.class);\n \n     @Autowired\n     protected RestTemplate restTemplate;"},{"sha":"56bca915c7090cbee6fe7a5e0f057768dc4a0340","filename":"console/src/main/java/org/syncope/console/rest/ApprovalRestClient.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FApprovalRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FApprovalRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FApprovalRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -31,18 +31,14 @@\n public class ApprovalRestClient extends AbstractBaseRestClient {\n \n     public List<WorkflowFormTO> getForms() {\n-        return Arrays.asList(restTemplate.getForObject(\n-                baseURL + \"user/workflow/form/list\", WorkflowFormTO[].class));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"user/workflow/form/list\", WorkflowFormTO[].class));\n     }\n \n     public WorkflowFormTO claimForm(final String taskId) {\n-        return restTemplate.getForObject(\n-                baseURL + \"user/workflow/form/claim/{taskId}\",\n-                WorkflowFormTO.class, taskId);\n+        return restTemplate.getForObject(baseURL + \"user/workflow/form/claim/{taskId}\", WorkflowFormTO.class, taskId);\n     }\n \n     public void submitForm(final WorkflowFormTO form) {\n-        restTemplate.postForObject(baseURL + \"user/workflow/form/submit\",\n-                form, UserTO.class);\n+        restTemplate.postForObject(baseURL + \"user/workflow/form/submit\", form, UserTO.class);\n     }\n }"},{"sha":"4f49a769af852a29fe14ef932e4d2774ddf792c3","filename":"console/src/main/java/org/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":12,"deletions":19,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -44,9 +44,8 @@ public class ConnectorRestClient extends AbstractBaseRestClient {\n      * @return ConnectorInstanceTOs\n      */\n     public List<ConnInstanceTO> getAllConnectors() {\n-        return Arrays.asList(restTemplate.getForObject(\n-                baseURL + \"connector/list.json?lang=\" + SyncopeSession.get().\n-                getLocale(), ConnInstanceTO[].class));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"connector/list.json?lang=\"\n+                + SyncopeSession.get().getLocale(), ConnInstanceTO[].class));\n     }\n \n     /**\n@@ -55,10 +54,8 @@ public List<ConnInstanceTO> getAllConnectors() {\n      * @param schemaTO\n      */\n     public void create(final ConnInstanceTO connectorTO) {\n-        connectorTO.setConfiguration(\n-                filterProperties(connectorTO.getConfiguration()));\n-        restTemplate.postForObject(baseURL\n-                + \"connector/create.json\", connectorTO, ConnInstanceTO.class);\n+        connectorTO.setConfiguration(filterProperties(connectorTO.getConfiguration()));\n+        restTemplate.postForObject(baseURL + \"connector/create.json\", connectorTO, ConnInstanceTO.class);\n     }\n \n     /**\n@@ -71,8 +68,7 @@ public ConnInstanceTO read(final Long connectorInstanceId) {\n         ConnInstanceTO connectorTO = null;\n \n         try {\n-            connectorTO = restTemplate.getForObject(\n-                    baseURL + \"connector/read/\" + connectorInstanceId,\n+            connectorTO = restTemplate.getForObject(baseURL + \"connector/read/\" + connectorInstanceId,\n                     ConnInstanceTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading a connector\", e);\n@@ -82,23 +78,20 @@ public ConnInstanceTO read(final Long connectorInstanceId) {\n     }\n \n     public void update(final ConnInstanceTO connectorTO) {\n-        connectorTO.setConfiguration(\n-                filterProperties(connectorTO.getConfiguration()));\n-        restTemplate.postForObject(baseURL + \"connector/update.json\",\n-                connectorTO, ConnInstanceTO.class);\n+        connectorTO.setConfiguration(filterProperties(connectorTO.getConfiguration()));\n+        restTemplate.postForObject(baseURL + \"connector/update.json\", connectorTO, ConnInstanceTO.class);\n     }\n \n     public void delete(Long id) {\n-        restTemplate.delete(baseURL\n-                + \"connector/delete/{connectorId}.json\", id.toString());\n+        restTemplate.delete(baseURL + \"connector/delete/{connectorId}.json\", id.toString());\n     }\n \n     public List<ConnBundleTO> getAllBundles() {\n         List<ConnBundleTO> bundles = null;\n \n         try {\n-            bundles = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"connector/bundle/list?lang=\" + SyncopeSession.get().getLocale(), ConnBundleTO[].class));\n+            bundles = Arrays.asList(restTemplate.getForObject(baseURL + \"connector/bundle/list?lang=\"\n+                    + SyncopeSession.get().getLocale(), ConnBundleTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting connector bundles\", e);\n         }\n@@ -172,8 +165,8 @@ public List<String> getSchemaNames(final ConnInstanceTO connectorTO) {\n         List<String> schemaNames = null;\n \n         try {\n-            schemaNames = Arrays.asList(restTemplate.postForObject(\n-                    baseURL + \"connector/schema/list\", connectorTO, String[].class));\n+            schemaNames = Arrays.asList(restTemplate.postForObject(baseURL + \"connector/schema/list\", connectorTO,\n+                    String[].class));\n \n             // re-order schema names list\n             Collections.sort(schemaNames);"},{"sha":"b43d8cdd301deecf0b61b97733e544a5d2738687","filename":"console/src/main/java/org/syncope/console/rest/EntitlementRestClient.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FEntitlementRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FEntitlementRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FEntitlementRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -37,9 +37,7 @@ public List<String> getAllEntitlements() {\n         List<String> entitlements = null;\n \n         try {\n-            entitlements = Arrays.asList(\n-                    restTemplate.getForObject(\n-                    baseURL + \"auth/allentitlements.json\",\n+            entitlements = Arrays.asList(restTemplate.getForObject(baseURL + \"auth/allentitlements.json\",\n                     String[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading all the entitlements\", e);"},{"sha":"8f02a8318e3e8baa243a06f81c746cce642b3579","filename":"console/src/main/java/org/syncope/console/rest/NotificationRestClient.java","status":"modified","additions":14,"deletions":31,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FNotificationRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -27,55 +27,38 @@\n @Component\n public class NotificationRestClient extends AbstractBaseRestClient {\n \n-    public List<NotificationTO> getAllNotifications()\n-            throws SyncopeClientCompositeErrorException {\n+    public List<NotificationTO> getAllNotifications() throws SyncopeClientCompositeErrorException {\n \n-        return Arrays.asList(restTemplate.getForObject(baseURL\n-                + \"notification/list.json\", NotificationTO[].class));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"notification/list.json\", NotificationTO[].class));\n     }\n \n-    public NotificationTO readNotification(final Long id)\n-            throws SyncopeClientCompositeErrorException {\n+    public NotificationTO readNotification(final Long id) throws SyncopeClientCompositeErrorException {\n \n-        return restTemplate.getForObject(\n-                baseURL + \"notification/read/{notificationId}.json\",\n-                NotificationTO.class, id);\n+        return restTemplate.getForObject(baseURL + \"notification/read/{notificationId}.json\", NotificationTO.class, id);\n     }\n \n-    public void createNotification(final NotificationTO notificationTO)\n-            throws SyncopeClientCompositeErrorException {\n+    public void createNotification(final NotificationTO notificationTO) throws SyncopeClientCompositeErrorException {\n \n-        restTemplate.postForObject(\n-                baseURL + \"notification/create.json\",\n-                notificationTO, NotificationTO.class);\n+        restTemplate.postForObject(baseURL + \"notification/create.json\", notificationTO, NotificationTO.class);\n     }\n \n-    public void updateNotification(final NotificationTO notificationTO)\n-            throws SyncopeClientCompositeErrorException {\n+    public void updateNotification(final NotificationTO notificationTO) throws SyncopeClientCompositeErrorException {\n \n-        restTemplate.postForObject(\n-                baseURL + \"notification/update.json\",\n-                notificationTO, NotificationTO.class);\n+        restTemplate.postForObject(baseURL + \"notification/update.json\", notificationTO, NotificationTO.class);\n     }\n \n-    public void deleteNotification(final Long id)\n-            throws SyncopeClientCompositeErrorException {\n+    public void deleteNotification(final Long id) throws SyncopeClientCompositeErrorException {\n \n-        restTemplate.delete(\n-                baseURL + \"notification/delete/{notificationId}.json\", id);\n+        restTemplate.delete(baseURL + \"notification/delete/{notificationId}.json\", id);\n     }\n \n-    public List<String> getMailTemplates()\n-            throws SyncopeClientCompositeErrorException {\n+    public List<String> getMailTemplates() throws SyncopeClientCompositeErrorException {\n \n-        return Arrays.asList(restTemplate.getForObject(\n-                baseURL + \"configuration/mailTemplates.json\", String[].class));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"configuration/mailTemplates.json\", String[].class));\n     }\n \n-    public List<String> getEvents()\n-            throws SyncopeClientCompositeErrorException {\n+    public List<String> getEvents() throws SyncopeClientCompositeErrorException {\n \n-        return Arrays.asList(restTemplate.getForObject(\n-                baseURL + \"workflow/tasks.json\", String[].class));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"workflow/tasks.json\", String[].class));\n     }\n }"},{"sha":"7858fbec3b819e03c636bf683a2d9fb41873346c","filename":"console/src/main/java/org/syncope/console/rest/PolicyRestClient.java","status":"modified","additions":15,"deletions":34,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FPolicyRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -43,8 +43,7 @@ public <T extends PolicyTO> T getGlobalPolicy(final PolicyType type) {\n             switch (type) {\n                 case GLOBAL_ACCOUNT:\n                     try {\n-                        policy = (T) restTemplate.getForObject(\n-                                baseURL + \"policy/account/global/read\",\n+                        policy = (T) restTemplate.getForObject(baseURL + \"policy/account/global/read\",\n                                 AccountPolicyTO.class);\n                     } catch (Exception e) {\n                         LOG.debug(\"No account policy found\", e);\n@@ -53,8 +52,7 @@ public <T extends PolicyTO> T getGlobalPolicy(final PolicyType type) {\n                     break;\n                 case GLOBAL_PASSWORD:\n                     try {\n-                        policy = (T) restTemplate.getForObject(\n-                                baseURL + \"policy/password/global/read\",\n+                        policy = (T) restTemplate.getForObject(baseURL + \"policy/password/global/read\",\n                                 PasswordPolicyTO.class);\n                     } catch (Exception e) {\n                         LOG.debug(\"No password policy found\", e);\n@@ -63,9 +61,7 @@ public <T extends PolicyTO> T getGlobalPolicy(final PolicyType type) {\n                     break;\n                 case GLOBAL_SYNC:\n                     try {\n-                        policy = (T) restTemplate.getForObject(\n-                                baseURL + \"policy/sync/global/read\",\n-                                SyncPolicyTO.class);\n+                        policy = (T) restTemplate.getForObject(baseURL + \"policy/sync/global/read\", SyncPolicyTO.class);\n                     } catch (Exception e) {\n                         LOG.debug(\"No password policy found\", e);\n                         policy = (T) new SyncPolicyTO();\n@@ -114,9 +110,7 @@ public <T extends PolicyTO> List<T> getPolicies(final PolicyType type) {\n             }\n \n             try {\n-                policies = (T[]) restTemplate.getForObject(\n-                        baseURL + \"policy/\" + policy + \"/list\",\n-                        reference);\n+                policies = (T[]) restTemplate.getForObject(baseURL + \"policy/\" + policy + \"/list\", reference);\n             } catch (Exception ignore) {\n                 LOG.debug(\"No policy found\", ignore);\n             }\n@@ -128,8 +122,7 @@ public <T extends PolicyTO> List<T> getPolicies(final PolicyType type) {\n             PolicyTO globalPolicy = null;\n \n             try {\n-                globalPolicy = (T) restTemplate.getForObject(\n-                        baseURL + \"policy/\" + policy + \"/global/read\",\n+                globalPolicy = (T) restTemplate.getForObject(baseURL + \"policy/\" + policy + \"/global/read\",\n                         globalReference);\n             } catch (Exception ignore) {\n                 LOG.warn(\"No global policy found\", ignore);\n@@ -146,49 +139,37 @@ public <T extends PolicyTO> List<T> getPolicies(final PolicyType type) {\n         return res;\n     }\n \n-    public <T extends PolicyTO> T createPolicy(final T policy)\n-            throws InvalidPolicyType {\n+    public <T extends PolicyTO> T createPolicy(final T policy) throws InvalidPolicyType {\n \n         switch (policy.getType()) {\n             case GLOBAL_ACCOUNT:\n             case ACCOUNT:\n-                return (T) restTemplate.postForObject(\n-                        baseURL + \"policy/account/create\",\n-                        policy, AccountPolicyTO.class);\n+                return (T) restTemplate.postForObject(baseURL + \"policy/account/create\", policy, AccountPolicyTO.class);\n             case GLOBAL_PASSWORD:\n             case PASSWORD:\n-                return (T) restTemplate.postForObject(\n-                        baseURL + \"policy/password/create\",\n-                        policy, PasswordPolicyTO.class);\n+                return (T) restTemplate.postForObject(baseURL + \"policy/password/create\", policy,\n+                        PasswordPolicyTO.class);\n             case GLOBAL_SYNC:\n             case SYNC:\n-                return (T) restTemplate.postForObject(\n-                        baseURL + \"policy/sync/create\",\n-                        policy, SyncPolicyTO.class);\n+                return (T) restTemplate.postForObject(baseURL + \"policy/sync/create\", policy, SyncPolicyTO.class);\n             default:\n                 throw new InvalidPolicyType(\"Invalid type \" + policy.getType());\n         }\n     }\n \n-    public <T extends PolicyTO> T updatePolicy(final T policy)\n-            throws InvalidPolicyType {\n+    public <T extends PolicyTO> T updatePolicy(final T policy) throws InvalidPolicyType {\n \n         switch (policy.getType()) {\n             case GLOBAL_ACCOUNT:\n             case ACCOUNT:\n-                return (T) restTemplate.postForObject(\n-                        baseURL + \"policy/account/update\",\n-                        policy, AccountPolicyTO.class);\n+                return (T) restTemplate.postForObject(baseURL + \"policy/account/update\", policy, AccountPolicyTO.class);\n             case GLOBAL_PASSWORD:\n             case PASSWORD:\n-                return (T) restTemplate.postForObject(\n-                        baseURL + \"policy/password/update\",\n-                        policy, PasswordPolicyTO.class);\n+                return (T) restTemplate.postForObject(baseURL + \"policy/password/update\", policy,\n+                        PasswordPolicyTO.class);\n             case GLOBAL_SYNC:\n             case SYNC:\n-                return (T) restTemplate.postForObject(\n-                        baseURL + \"policy/sync/update\",\n-                        policy, SyncPolicyTO.class);\n+                return (T) restTemplate.postForObject(baseURL + \"policy/sync/update\", policy, SyncPolicyTO.class);\n             default:\n                 throw new InvalidPolicyType(\"Invalid type \" + policy.getType());\n         }"},{"sha":"62cf8af6bc7bfac68b07a9402d7d92a74421ddb6","filename":"console/src/main/java/org/syncope/console/rest/ReportRestClient.java","status":"modified","additions":13,"deletions":26,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,45 +26,39 @@\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n @Component\n-public class ReportRestClient extends AbstractBaseRestClient\n-        implements ExecutionRestClient {\n+public class ReportRestClient extends AbstractBaseRestClient implements ExecutionRestClient {\n \n     public List<String> getReportletConfClasses() {\n         List<String> reportletClasses = null;\n \n         try {\n-            reportletClasses = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"report/reportletConfClasses.json\", String[].class));\n+            reportletClasses = Arrays.asList(restTemplate.getForObject(baseURL + \"report/reportletConfClasses.json\",\n+                    String[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting available reportlet classes\", e);\n         }\n         return reportletClasses;\n     }\n \n     public List<ReportTO> list() {\n-        return Arrays.asList(restTemplate.getForObject(\n-                baseURL + \"report/list\", ReportTO[].class));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"report/list\", ReportTO[].class));\n     }\n \n     public List<ReportTO> list(final int page, final int size) {\n-        return Arrays.asList(restTemplate.getForObject(\n-                baseURL + \"report/list/{page}/{size}.json\",\n-                ReportTO[].class, page, size));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"report/list/{page}/{size}.json\", ReportTO[].class,\n+                page, size));\n     }\n \n     public int count() {\n-        return restTemplate.getForObject(\n-                baseURL + \"report/count.json\", Integer.class);\n+        return restTemplate.getForObject(baseURL + \"report/count.json\", Integer.class);\n     }\n \n     public ReportTO create(final ReportTO reportTO) {\n-        return restTemplate.postForObject(\n-                baseURL + \"report/create\", reportTO, ReportTO.class);\n+        return restTemplate.postForObject(baseURL + \"report/create\", reportTO, ReportTO.class);\n     }\n \n     public ReportTO update(final ReportTO reportTO) {\n-        return restTemplate.postForObject(\n-                baseURL + \"report/update\", reportTO, ReportTO.class);\n+        return restTemplate.postForObject(baseURL + \"report/update\", reportTO, ReportTO.class);\n     }\n \n     /**\n@@ -73,8 +67,7 @@ public ReportTO update(final ReportTO reportTO) {\n      * @param reportId report to delete\n      */\n     public void delete(final Long reportId) {\n-        restTemplate.delete(\n-                baseURL + \"report/delete/{reportId}\", reportId);\n+        restTemplate.delete(baseURL + \"report/delete/{reportId}\", reportId);\n     }\n \n     /**\n@@ -84,9 +77,7 @@ public void delete(final Long reportId) {\n      */\n     @Override\n     public void startExecution(final Long reportId) {\n-        restTemplate.postForObject(\n-                baseURL + \"report/execute/{reportId}\",\n-                null, ReportExecTO.class, reportId);\n+        restTemplate.postForObject(baseURL + \"report/execute/{reportId}\", null, ReportExecTO.class, reportId);\n     }\n \n     /**\n@@ -96,8 +87,7 @@ public void startExecution(final Long reportId) {\n      */\n     @Override\n     public void deleteExecution(final Long reportExecId) {\n-        restTemplate.delete(baseURL\n-                + \"report/execution/delete/{execId}\", reportExecId);\n+        restTemplate.delete(baseURL + \"report/execution/delete/{execId}\", reportExecId);\n     }\n \n     /**\n@@ -107,9 +97,6 @@ public void deleteExecution(final Long reportExecId) {\n      */\n     @Override\n     public List<ReportExecTO> listExecutions() {\n-        return Arrays.asList(\n-                restTemplate.getForObject(\n-                baseURL + \"report/execution/list\",\n-                ReportExecTO[].class));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"report/execution/list\", ReportExecTO[].class));\n     }\n }"},{"sha":"967a09bbda5706a31a9246f32ec201725949da93","filename":"console/src/main/java/org/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":5,"deletions":13,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -34,9 +34,7 @@ public List<ResourceTO> getAllResources() {\n         List<ResourceTO> resources = null;\n \n         try {\n-            resources = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"resource/list.json\",\n-                    ResourceTO[].class));\n+            resources = Arrays.asList(restTemplate.getForObject(baseURL + \"resource/list.json\", ResourceTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading all resources\", e);\n         }\n@@ -45,31 +43,25 @@ public List<ResourceTO> getAllResources() {\n     }\n \n     public void create(final ResourceTO resourceTO) {\n-        restTemplate.postForObject(baseURL\n-                + \"resource/create\", resourceTO, ResourceTO.class);\n+        restTemplate.postForObject(baseURL + \"resource/create\", resourceTO, ResourceTO.class);\n     }\n \n     public ResourceTO read(final String name) {\n         ResourceTO resourceTO = null;\n \n         try {\n-            resourceTO = restTemplate.getForObject(\n-                    baseURL + \"resource/read/\" + name + \".json\",\n-                    ResourceTO.class);\n+            resourceTO = restTemplate.getForObject(baseURL + \"resource/read/\" + name + \".json\", ResourceTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading a resource\", e);\n         }\n         return resourceTO;\n     }\n \n     public void update(final ResourceTO resourceTO) {\n-        restTemplate.postForObject(\n-                baseURL + \"resource/update.json\", resourceTO,\n-                ResourceTO.class);\n+        restTemplate.postForObject(baseURL + \"resource/update.json\", resourceTO, ResourceTO.class);\n     }\n \n     public void delete(final String name) {\n-        restTemplate.delete(baseURL\n-                + \"resource/delete/{resourceName}.json\", name);\n+        restTemplate.delete(baseURL + \"resource/delete/{resourceName}.json\", name);\n     }\n }"},{"sha":"efb0216a513cb503189d788300d897712b349063","filename":"console/src/main/java/org/syncope/console/rest/RoleRestClient.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -35,14 +35,12 @@ public class RoleRestClient extends AbstractBaseRestClient {\n      * Get all Roles.\n      * @return SchemaTOs\n      */\n-    public List<RoleTO> getAllRoles()\n-            throws SyncopeClientCompositeErrorException {\n+    public List<RoleTO> getAllRoles() throws SyncopeClientCompositeErrorException {\n \n         List<RoleTO> roles = null;\n \n         try {\n-            roles = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"role/list.json\", RoleTO[].class));\n+            roles = Arrays.asList(restTemplate.getForObject(baseURL + \"role/list.json\", RoleTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While listing all roles\", e);\n         }\n@@ -55,8 +53,7 @@ public List<RoleTO> getAllRoles()\n      * @param roleTO\n      */\n     public void createRole(RoleTO roleTO) {\n-        restTemplate.postForObject(\n-                baseURL + \"role/create\", roleTO, RoleTO.class);\n+        restTemplate.postForObject(baseURL + \"role/create\", roleTO, RoleTO.class);\n     }\n \n     /**\n@@ -68,8 +65,7 @@ public RoleTO readRole(Long id) {\n         RoleTO roleTO = null;\n \n         try {\n-            roleTO = restTemplate.getForObject(\n-                    baseURL + \"role/read/{roleId}.json\", RoleTO.class, id);\n+            roleTO = restTemplate.getForObject(baseURL + \"role/read/{roleId}.json\", RoleTO.class, id);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading a role\", e);\n         }\n@@ -82,8 +78,7 @@ public RoleTO readRole(Long id) {\n      * @return true is the opertion ends succesfully, false otherwise\n      */\n     public void updateRole(RoleMod roleMod) {\n-        restTemplate.postForObject(\n-                baseURL + \"role/update\", roleMod, RoleTO.class);\n+        restTemplate.postForObject(baseURL + \"role/update\", roleMod, RoleTO.class);\n     }\n \n     /**"},{"sha":"9d621c35110024287655ec3980bf3370e402db56","filename":"console/src/main/java/org/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":30,"deletions":31,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -43,8 +43,8 @@ public List<SchemaTO> getSchemas(final AttributableType type) {\n         List<SchemaTO> schemas = null;\n \n         try {\n-            schemas = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"schema/\" + type.name().toLowerCase() + \"/list.json\", SchemaTO[].class));\n+            schemas = Arrays.asList(restTemplate.getForObject(baseURL + \"schema/\" + type.name().toLowerCase()\n+                    + \"/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting all schemas\", e);\n         }\n@@ -61,8 +61,8 @@ public List<String> getSchemaNames(final AttributableType type) {\n         final List<String> schemaNames = new ArrayList<String>();\n \n         try {\n-            final List<SchemaTO> userSchemas = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"schema/\" + type.name().toLowerCase() + \"/list.json\", SchemaTO[].class));\n+            final List<SchemaTO> userSchemas = Arrays.asList(restTemplate.getForObject(baseURL + \"schema/\"\n+                    + type.name().toLowerCase() + \"/list.json\", SchemaTO[].class));\n \n             for (SchemaTO schemaTO : userSchemas) {\n                 schemaNames.add(schemaTO.getName());\n@@ -84,8 +84,8 @@ public List<DerivedSchemaTO> getDerivedSchemas(final AttributableType type) {\n         List<DerivedSchemaTO> userDerivedSchemas = null;\n \n         try {\n-            userDerivedSchemas = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/list.json\", DerivedSchemaTO[].class));\n+            userDerivedSchemas = Arrays.asList(restTemplate.getForObject(baseURL + \"derivedSchema/\"\n+                    + type.name().toLowerCase() + \"/list.json\", DerivedSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting all user derived schemas\", e);\n         }\n@@ -103,8 +103,8 @@ public List<String> getDerivedSchemaNames(final AttributableType type) {\n         final List<String> userDerivedSchemasNames = new ArrayList<String>();\n \n         try {\n-            final List<DerivedSchemaTO> userDerivedSchemas = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/list.json\", DerivedSchemaTO[].class));\n+            final List<DerivedSchemaTO> userDerivedSchemas = Arrays.asList(restTemplate.getForObject(baseURL\n+                    + \"derivedSchema/\" + type.name().toLowerCase() + \"/list.json\", DerivedSchemaTO[].class));\n \n             for (DerivedSchemaTO schemaTO : userDerivedSchemas) {\n                 userDerivedSchemasNames.add(schemaTO.getName());\n@@ -126,8 +126,8 @@ public List<VirtualSchemaTO> getVirtualSchemas(final AttributableType type) {\n         List<VirtualSchemaTO> userVirtualSchemas = null;\n \n         try {\n-            userVirtualSchemas = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"virtualSchema/\" + type.name().toLowerCase() + \"/list.json\", VirtualSchemaTO[].class));\n+            userVirtualSchemas = Arrays.asList(restTemplate.getForObject(baseURL + \"virtualSchema/\"\n+                    + type.name().toLowerCase() + \"/list.json\", VirtualSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting all user derived schemas\", e);\n         }\n@@ -144,8 +144,8 @@ public List<String> getVirtualSchemaNames(final AttributableType type) {\n         final List<String> userVirtualSchemasNames = new ArrayList<String>();\n \n         try {\n-            final List<VirtualSchemaTO> userVirtualSchemas = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"virtualSchema/\" + type.name().toLowerCase() + \"/list.json\", VirtualSchemaTO[].class));\n+            final List<VirtualSchemaTO> userVirtualSchemas = Arrays.asList(restTemplate.getForObject(baseURL\n+                    + \"virtualSchema/\" + type.name().toLowerCase() + \"/list.json\", VirtualSchemaTO[].class));\n \n             for (VirtualSchemaTO schemaTO : userVirtualSchemas) {\n                 userVirtualSchemasNames.add(schemaTO.getName());\n@@ -163,8 +163,8 @@ public List<String> getVirtualSchemaNames(final AttributableType type) {\n      * @param schemaTO\n      */\n     public void createSchema(final AttributableType type, final SchemaTO schemaTO) {\n-        restTemplate.postForObject(\n-                baseURL + \"schema/\" + type.name().toLowerCase() + \"/create\", schemaTO, SchemaTO.class);\n+        restTemplate.postForObject(baseURL + \"schema/\" + type.name().toLowerCase() + \"/create\", schemaTO,\n+                SchemaTO.class);\n     }\n \n     /**\n@@ -177,8 +177,8 @@ public SchemaTO readSchema(final AttributableType type, final String name) {\n         SchemaTO schema = null;\n \n         try {\n-            schema = restTemplate.getForObject(\n-                    baseURL + \"schema/\" + type.name().toLowerCase() + \"/read/\" + name + \".json\", SchemaTO.class);\n+            schema = restTemplate.getForObject(baseURL + \"schema/\" + type.name().toLowerCase() + \"/read/\" + name\n+                    + \".json\", SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading a user schema\", e);\n         }\n@@ -191,8 +191,8 @@ public SchemaTO readSchema(final AttributableType type, final String name) {\n      * @param schemaTO updated\n      */\n     public void updateSchema(final AttributableType type, SchemaTO schemaTO) {\n-        restTemplate.postForObject(\n-                baseURL + \"schema/\" + type.name().toLowerCase() + \"/update\", schemaTO, SchemaTO.class);\n+        restTemplate.postForObject(baseURL + \"schema/\" + type.name().toLowerCase() + \"/update\", schemaTO,\n+                SchemaTO.class);\n     }\n \n     /**\n@@ -211,8 +211,8 @@ public void deleteSchema(final AttributableType type, String name) {\n      * @param schemaTO\n      */\n     public void createDerivedSchema(final AttributableType type, final DerivedSchemaTO schemaTO) {\n-        restTemplate.postForObject(\n-                baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/create\", schemaTO, DerivedSchemaTO.class);\n+        restTemplate.postForObject(baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/create\", schemaTO,\n+                DerivedSchemaTO.class);\n     }\n \n     /**\n@@ -221,8 +221,8 @@ public void createDerivedSchema(final AttributableType type, final DerivedSchema\n      * @param schemaTO\n      */\n     public void createVirtualSchema(final AttributableType type, final VirtualSchemaTO schemaTO) {\n-        restTemplate.postForObject(\n-                baseURL + \"virtualSchema/\" + type.name().toLowerCase() + \"/create\", schemaTO, VirtualSchemaTO.class);\n+        restTemplate.postForObject(baseURL + \"virtualSchema/\" + type.name().toLowerCase() + \"/create\", schemaTO,\n+                VirtualSchemaTO.class);\n     }\n \n     /**\n@@ -234,9 +234,8 @@ public void createVirtualSchema(final AttributableType type, final VirtualSchema\n     public DerivedSchemaTO readDerivedSchema(final AttributableType type, final String name) {\n         DerivedSchemaTO derivedSchemaTO = null;\n         try {\n-            derivedSchemaTO = restTemplate.getForObject(\n-                    baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/read/\" + name + \".json\",\n-                    DerivedSchemaTO.class);\n+            derivedSchemaTO = restTemplate.getForObject(baseURL + \"derivedSchema/\" + type.name().toLowerCase()\n+                    + \"/read/\" + name + \".json\", DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading a derived user schema\", e);\n         }\n@@ -249,8 +248,8 @@ public DerivedSchemaTO readDerivedSchema(final AttributableType type, final Stri\n      * @param schemaTO updated\n      */\n     public void updateDerivedSchema(final AttributableType type, final DerivedSchemaTO schemaTO) {\n-        restTemplate.postForObject(\n-                baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/update\", schemaTO, DerivedSchemaTO.class);\n+        restTemplate.postForObject(baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/update\", schemaTO,\n+                DerivedSchemaTO.class);\n     }\n \n     /**\n@@ -259,8 +258,8 @@ public void updateDerivedSchema(final AttributableType type, final DerivedSchema\n      * @param schemaTO updated\n      */\n     public void updateVirtualSchema(final AttributableType type, final VirtualSchemaTO schemaTO) {\n-        restTemplate.postForObject(baseURL\n-                + \"virtualSchema/\" + type.name().toLowerCase() + \"/update\", schemaTO, VirtualSchemaTO.class);\n+        restTemplate.postForObject(baseURL + \"virtualSchema/\" + type.name().toLowerCase() + \"/update\", schemaTO,\n+                VirtualSchemaTO.class);\n     }\n \n     /**\n@@ -288,8 +287,8 @@ public List<String> getAllValidatorClasses() {\n         List<String> validators = null;\n \n         try {\n-            validators = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"configuration/validators.json\", String[].class));\n+            validators = Arrays.asList(restTemplate.getForObject(baseURL + \"configuration/validators.json\",\n+                    String[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting all validators\", e);\n         }"},{"sha":"17e95a9b038097d659f01a8e176a3ce661daa5ba","filename":"console/src/main/java/org/syncope/console/rest/TaskRestClient.java","status":"modified","additions":9,"deletions":14,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -35,8 +35,7 @@\n  * Console client for invoking Rest Tasks services.\n  */\n @Component\n-public class TaskRestClient extends AbstractBaseRestClient\n-        implements ExecutionRestClient {\n+public class TaskRestClient extends AbstractBaseRestClient implements ExecutionRestClient {\n \n     /**\n      * Return a list of job classes.\n@@ -86,20 +85,16 @@ public <T extends TaskTO> List<T> listTasks(final Class<T> reference, final int\n         List<T> result = Collections.EMPTY_LIST;\n \n         if (PropagationTaskTO.class == reference) {\n-            result = (List<T>) Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"task/propagation/list/{page}/{size}.json\",\n-                    PropagationTaskTO[].class, page, size));\n+            result = (List<T>) Arrays.asList(restTemplate.getForObject(baseURL\n+                    + \"task/propagation/list/{page}/{size}.json\", PropagationTaskTO[].class, page, size));\n         } else if (NotificationTaskTO.class == reference) {\n-            result = (List<T>) Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"task/notification/list/{page}/{size}.json\",\n-                    NotificationTaskTO[].class, page, size));\n+            result = (List<T>) Arrays.asList(restTemplate.getForObject(baseURL\n+                    + \"task/notification/list/{page}/{size}.json\", NotificationTaskTO[].class, page, size));\n         } else if (SchedTaskTO.class == reference) {\n-            result = (List<T>) Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"task/sched/list/{page}/{size}.json\",\n+            result = (List<T>) Arrays.asList(restTemplate.getForObject(baseURL + \"task/sched/list/{page}/{size}.json\",\n                     SchedTaskTO[].class, page, size));\n         } else if (SyncTaskTO.class == reference) {\n-            result = (List<T>) Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"task/sync/list/{page}/{size}.json\",\n+            result = (List<T>) Arrays.asList(restTemplate.getForObject(baseURL + \"task/sync/list/{page}/{size}.json\",\n                     SyncTaskTO[].class, page, size));\n         }\n \n@@ -152,8 +147,8 @@ public void startExecution(final Long taskId) {\n      * @param taskId task id\n      */\n     public void startExecution(final Long taskId, boolean dryRun) {\n-        restTemplate.postForObject(\n-                baseURL + \"task/execute/{taskId}?dryRun={dryRun}\", null, TaskExecTO.class, taskId, dryRun);\n+        restTemplate.postForObject(baseURL + \"task/execute/{taskId}?dryRun={dryRun}\", null, TaskExecTO.class, taskId,\n+                dryRun);\n     }\n \n     /**"},{"sha":"b403b37b2c57585de2813e060dd5ba8cfb3775f1","filename":"console/src/main/java/org/syncope/console/rest/UserRequestRestClient.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRequestRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -29,32 +29,26 @@\n public class UserRequestRestClient extends AbstractBaseRestClient {\n \n     public UserTO readProfile() {\n-        return restTemplate.getForObject(\n-                baseURL + \"user/request/read/self\", UserTO.class);\n+        return restTemplate.getForObject(baseURL + \"user/request/read/self\", UserTO.class);\n     }\n \n     public List<UserRequestTO> list() {\n-        return Arrays.asList(restTemplate.getForObject(\n-                baseURL + \"user/request/list\", UserRequestTO[].class));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"user/request/list\", UserRequestTO[].class));\n     }\n \n     public void delete(final Long requestId) {\n-        restTemplate.delete(baseURL + \"user/request/deleteRequest/{requestId}\",\n-                requestId);\n+        restTemplate.delete(baseURL + \"user/request/deleteRequest/{requestId}\", requestId);\n     }\n \n     public UserRequestTO requestCreate(final UserTO userTO) {\n-        return restTemplate.postForObject(baseURL + \"user/request/create\",\n-                userTO, UserRequestTO.class);\n+        return restTemplate.postForObject(baseURL + \"user/request/create\", userTO, UserRequestTO.class);\n     }\n \n     public UserRequestTO requestUpdate(final UserMod userMod) {\n-        return restTemplate.postForObject(baseURL + \"user/request/update\",\n-                userMod, UserRequestTO.class);\n+        return restTemplate.postForObject(baseURL + \"user/request/update\", userMod, UserRequestTO.class);\n     }\n \n     public UserRequestTO requestDelete(final Long userId) {\n-        return restTemplate.postForObject(baseURL + \"user/request/delete/\",\n-                userId, UserRequestTO.class);\n+        return restTemplate.postForObject(baseURL + \"user/request/delete/\", userId, UserRequestTO.class);\n     }\n }"},{"sha":"04cd88b2251e906de482ab27ed085b0316436c5e","filename":"console/src/main/java/org/syncope/console/rest/UserRestClient.java","status":"modified","additions":29,"deletions":55,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -35,8 +35,7 @@\n public class UserRestClient extends AbstractBaseRestClient {\n \n     public Integer count() {\n-        return restTemplate.getForObject(baseURL + \"user/count.json\",\n-                Integer.class);\n+        return restTemplate.getForObject(baseURL + \"user/count.json\", Integer.class);\n     }\n \n     /**\n@@ -47,9 +46,8 @@ public Integer count() {\n      * @return list of TaskTO objects\n      */\n     public List<UserTO> list(final int page, final int size) {\n-        return Arrays.asList(restTemplate.getForObject(\n-                baseURL + \"user/list/{page}/{size}.json\",\n-                UserTO[].class, page, size));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"user/list/{page}/{size}.json\", UserTO[].class, page,\n+                size));\n     }\n \n     /**\n@@ -58,11 +56,9 @@ public List<UserTO> list(final int page, final int size) {\n      * @param userTO instance\n      * @throws SyncopeClientCompositeErrorException\n      */\n-    public UserTO create(final UserTO userTO)\n-            throws SyncopeClientCompositeErrorException {\n+    public UserTO create(final UserTO userTO) throws SyncopeClientCompositeErrorException {\n \n-        return restTemplate.postForObject(baseURL\n-                + \"user/create\", userTO, UserTO.class);\n+        return restTemplate.postForObject(baseURL + \"user/create\", userTO, UserTO.class);\n     }\n \n     /**\n@@ -71,35 +67,28 @@ public UserTO create(final UserTO userTO)\n      * @param userTO\n      * @return true is the opertion ends succesfully, false otherwise\n      */\n-    public UserTO update(UserMod userModTO)\n-            throws SyncopeClientCompositeErrorException {\n+    public UserTO update(UserMod userModTO) throws SyncopeClientCompositeErrorException {\n \n-        return restTemplate.postForObject(baseURL + \"user/update\",\n-                userModTO, UserTO.class);\n+        return restTemplate.postForObject(baseURL + \"user/update\", userModTO, UserTO.class);\n     }\n \n-    public UserTO delete(Long id)\n-            throws SyncopeClientCompositeErrorException {\n+    public UserTO delete(Long id) throws SyncopeClientCompositeErrorException {\n \n-        return restTemplate.getForObject(\n-                baseURL + \"user/delete/{userId}\", UserTO.class, id);\n+        return restTemplate.getForObject(baseURL + \"user/delete/{userId}\", UserTO.class, id);\n     }\n \n     public UserTO read(Long id) {\n         UserTO userTO = null;\n         try {\n-            userTO = restTemplate.getForObject(\n-                    baseURL + \"user/read/{userId}.json\",\n-                    UserTO.class, id);\n+            userTO = restTemplate.getForObject(baseURL + \"user/read/{userId}.json\", UserTO.class, id);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading a user\", e);\n         }\n         return userTO;\n     }\n \n     public Integer searchCount(final NodeCond searchCond) {\n-        return restTemplate.postForObject(\n-                baseURL + \"user/search/count.json\", searchCond, Integer.class);\n+        return restTemplate.postForObject(baseURL + \"user/search/count.json\", searchCond, Integer.class);\n     }\n \n     /**\n@@ -108,69 +97,54 @@ public Integer searchCount(final NodeCond searchCond) {\n      * @param userTO\n      * @return UserTOs\n      */\n-    public List<UserTO> search(final NodeCond searchCond)\n-            throws SyncopeClientCompositeErrorException {\n+    public List<UserTO> search(final NodeCond searchCond) throws SyncopeClientCompositeErrorException {\n \n-        return Arrays.asList(restTemplate.postForObject(\n-                baseURL + \"user/search\",\n-                searchCond, UserTO[].class));\n+        return Arrays.asList(restTemplate.postForObject(baseURL + \"user/search\", searchCond, UserTO[].class));\n     }\n \n-    public List<UserTO> search(final NodeCond searchCond,\n-            final int page, final int size)\n+    public List<UserTO> search(final NodeCond searchCond, final int page, final int size)\n             throws SyncopeClientCompositeErrorException {\n \n-        return Arrays.asList(restTemplate.postForObject(\n-                baseURL + \"user/search/{page}/{size}\",\n-                searchCond, UserTO[].class, page, size));\n+        return Arrays.asList(restTemplate.postForObject(baseURL + \"user/search/{page}/{size}\", searchCond,\n+                UserTO[].class, page, size));\n     }\n \n-    public ConnObjectTO getRemoteObject(\n-            final String resourceName, final String objectId)\n+    public ConnObjectTO getRemoteObject(final String resourceName, final String objectId)\n             throws SyncopeClientCompositeErrorException {\n-        return restTemplate.getForObject(\n-                baseURL + \"/resource/{resourceName}/read/{objectId}.json\",\n-                ConnObjectTO.class, resourceName, objectId);\n+        return restTemplate.getForObject(baseURL + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class,\n+                resourceName, objectId);\n     }\n \n-    public UserTO reactivate(long userId, List<StatusBean> statuses)\n-            throws SyncopeClientCompositeErrorException {\n+    public UserTO reactivate(long userId, List<StatusBean> statuses) throws SyncopeClientCompositeErrorException {\n \n         return enable(userId, statuses, true);\n     }\n \n-    public UserTO suspend(long userId, List<StatusBean> statuses)\n-            throws SyncopeClientCompositeErrorException {\n+    public UserTO suspend(long userId, List<StatusBean> statuses) throws SyncopeClientCompositeErrorException {\n \n         return enable(userId, statuses, false);\n     }\n \n-    private UserTO enable(\n-            final long userId,\n-            final List<StatusBean> statuses,\n-            final boolean enable)\n+    private UserTO enable(final long userId, final List<StatusBean> statuses, final boolean enable)\n             throws SyncopeClientCompositeErrorException {\n \n         final StringBuilder query = new StringBuilder();\n \n-        query.append(baseURL).append(\"user/\").append(\n-                enable ? \"reactivate/\" : \"suspend/\").append(userId).\n-                append(\"?\").\n-                // perform on resource if and only if resources have been speciofied\n-                append(\"performRemotely=\").append(!statuses.isEmpty()).\n-                append(\"&\");\n+        query.append(baseURL).append(\"user/\").append(enable\n+                ? \"reactivate/\"\n+                : \"suspend/\").append(userId).append(\"?\").\n+        // perform on resource if and only if resources have been speciofied\n+                append(\"performRemotely=\").append(!statuses.isEmpty()).append(\"&\");\n \n         boolean performLoacal = false;\n \n         for (StatusBean status : statuses) {\n-            if ((enable && !status.getStatus().isActive())\n-                    || (!enable && status.getStatus().isActive())) {\n+            if ((enable && !status.getStatus().isActive()) || (!enable && status.getStatus().isActive())) {\n \n                 if (\"Syncope\".equals(status.getResourceName())) {\n                     performLoacal = true;\n                 } else {\n-                    query.append(\"resourceNames=\").\n-                            append(status.getResourceName()).append(\"&\");\n+                    query.append(\"resourceNames=\").append(status.getResourceName()).append(\"&\");\n                 }\n             }\n         }"},{"sha":"8f399867beb9c95719b75da5d6f41a7986ff94a8","filename":"console/src/main/java/org/syncope/console/rest/WorkflowRestClient.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FWorkflowRestClient.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -25,18 +25,13 @@\n @Component\n public class WorkflowRestClient extends AbstractBaseRestClient {\n \n-    public WorkflowDefinitionTO getDefinition()\n-            throws SyncopeClientCompositeErrorException {\n+    public WorkflowDefinitionTO getDefinition() throws SyncopeClientCompositeErrorException {\n \n-        return restTemplate.getForObject(baseURL\n-                + \"workflow/definition.json\",\n-                WorkflowDefinitionTO.class);\n+        return restTemplate.getForObject(baseURL + \"workflow/definition.json\", WorkflowDefinitionTO.class);\n     }\n \n-    public void updateDefinition(final WorkflowDefinitionTO workflowDef)\n-            throws SyncopeClientCompositeErrorException {\n+    public void updateDefinition(final WorkflowDefinitionTO workflowDef) throws SyncopeClientCompositeErrorException {\n \n-        restTemplate.put(baseURL\n-                + \"/workflow/definition.json\", workflowDef);\n+        restTemplate.put(baseURL + \"/workflow/definition.json\", workflowDef);\n     }\n }"},{"sha":"c0a6926b9d49bf68002393008f3f4f2c4a770aea","filename":"console/src/main/java/org/syncope/console/wicket/ajax/form/AbstractAjaxDownloadBehavior.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fform%2FAbstractAjaxDownloadBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fform%2FAbstractAjaxDownloadBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fform%2FAbstractAjaxDownloadBehavior.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -23,8 +23,7 @@\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n import org.apache.wicket.util.resource.IResourceStream;\n \n-public abstract class AbstractAjaxDownloadBehavior\n-        extends AbstractAjaxBehavior {\n+public abstract class AbstractAjaxDownloadBehavior extends AbstractAjaxBehavior {\n \n     private static final long serialVersionUID = 6833760760338614245L;\n \n@@ -40,8 +39,7 @@ public void initiate(final AjaxRequestTarget target) {\n     @Override\n     public void onRequest() {\n         getComponent().getRequestCycle().scheduleRequestHandlerAfterCurrent(\n-                new ResourceStreamRequestHandler(\n-                getResourceStream(), getFileName()));\n+                new ResourceStreamRequestHandler(getResourceStream(), getFileName()));\n     }\n \n     protected abstract String getFileName();"},{"sha":"7d1920e2df663fcc7fa4bb6a58c5bcc9b1359417","filename":"console/src/main/java/org/syncope/console/wicket/ajax/markup/html/IndicatingDeleteOnConfirmAjaxLink.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingDeleteOnConfirmAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingDeleteOnConfirmAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingDeleteOnConfirmAjaxLink.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -43,9 +43,7 @@ protected IAjaxCallDecorator getAjaxCallDecorator() {\n \n             @Override\n             public CharSequence preDecorateScript(final CharSequence script) {\n-                return \"if (confirm('\"\n-                        + getString(\"confirmDelete\") + \"'))\"\n-                        + \"{\" + script + \"}\";\n+                return \"if (confirm('\" + getString(\"confirmDelete\") + \"'))\" + \"{\" + script + \"}\";\n             }\n         };\n     }"},{"sha":"496ebed93a734811e26f382bfae571d26cfb325a","filename":"console/src/main/java/org/syncope/console/wicket/extensions/markup/html/repeater/data/table/DatePropertyColumn.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -33,23 +33,21 @@\n \n     private static final long serialVersionUID = 3527840552172947705L;\n \n-    public DatePropertyColumn(final IModel<String> displayModel,\n-            final String sortProperty, final String propertyExpression) {\n+    public DatePropertyColumn(final IModel<String> displayModel, final String sortProperty,\n+            final String propertyExpression) {\n \n         super(displayModel, sortProperty, propertyExpression);\n     }\n \n     @Override\n-    public void populateItem(final Item<ICellPopulator<T>> item,\n-            final String componentId, final IModel<T> rowModel) {\n+    public void populateItem(final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> rowModel) {\n \n         IModel date = (IModel<Date>) createLabelModel(rowModel);\n \n         String convertedDate = \"\";\n \n         if (date.getObject() != null) {\n-            convertedDate = SyncopeSession.get().\n-                    getDateFormat().format(date.getObject());\n+            convertedDate = SyncopeSession.get().getDateFormat().format(date.getObject());\n             item.add(new Label(componentId, convertedDate));\n         } else {\n             item.add(new Label(componentId, convertedDate));"},{"sha":"59c3ee69c5169dc57fd0f3728c5e7cab160b6285","filename":"console/src/main/java/org/syncope/console/wicket/extensions/markup/html/repeater/data/table/TokenColumn.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FTokenColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FTokenColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FTokenColumn.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -36,18 +36,13 @@ public TokenColumn(final String name) {\n     }\n \n     @Override\n-    public void populateItem(final Item<ICellPopulator<UserTO>> cellItem,\n-            final String componentId,\n+    public void populateItem(final Item<ICellPopulator<UserTO>> cellItem, final String componentId,\n             final IModel<UserTO> rowModel) {\n \n         if (StringUtils.hasText(rowModel.getObject().getToken())) {\n-            cellItem.add(new Label(\n-                    componentId,\n-                    new ResourceModel(\"tokenValued\", \"tokenValued\")));\n+            cellItem.add(new Label(componentId, new ResourceModel(\"tokenValued\", \"tokenValued\")));\n         } else {\n-            cellItem.add(new Label(\n-                    componentId,\n-                    new ResourceModel(\"tokenNotValued\", \"tokenNotValued\")));\n+            cellItem.add(new Label(componentId, new ResourceModel(\"tokenNotValued\", \"tokenNotValued\")));\n         }\n     }\n }\n\\ No newline at end of file"},{"sha":"77bc927ce763c0d411311fe2c4b2ad683b624ba8","filename":"console/src/main/java/org/syncope/console/wicket/extensions/markup/html/repeater/data/table/UserAttrColumn.java","status":"modified","additions":9,"deletions":20,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FUserAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FUserAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FUserAttrColumn.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -43,46 +43,37 @@ public enum SchemaType {\n \n     private final SchemaType schemaType;\n \n-    public UserAttrColumn(\n-            final String name,\n-            final SchemaType schemaType) {\n+    public UserAttrColumn(final String name, final SchemaType schemaType) {\n \n         super(new ResourceModel(name, name), name);\n         this.name = name;\n         this.schemaType = schemaType;\n     }\n \n     @Override\n-    public void populateItem(\n-            final Item<ICellPopulator<UserTO>> cellItem,\n-            final String componentId,\n+    public void populateItem(final Item<ICellPopulator<UserTO>> cellItem, final String componentId,\n             final IModel<UserTO> rowModel) {\n \n         List<String> values = null;\n \n         switch (schemaType) {\n             case schema:\n                 if (rowModel.getObject().getAttributeMap().containsKey(name)) {\n-                    values = rowModel.getObject().getAttributeMap().\n-                            get(name).getValues();\n+                    values = rowModel.getObject().getAttributeMap().get(name).getValues();\n                 }\n                 break;\n \n             case virtualSchema:\n-                if (rowModel.getObject().getVirtualAttributeMap().\n-                        containsKey(name)) {\n+                if (rowModel.getObject().getVirtualAttributeMap().containsKey(name)) {\n \n-                    values = rowModel.getObject().getVirtualAttributeMap().\n-                            get(name).getValues();\n+                    values = rowModel.getObject().getVirtualAttributeMap().get(name).getValues();\n                 }\n                 break;\n \n             case derivedSchema:\n-                if (rowModel.getObject().getDerivedAttributeMap().\n-                        containsKey(name)) {\n+                if (rowModel.getObject().getDerivedAttributeMap().containsKey(name)) {\n \n-                    values = rowModel.getObject().getDerivedAttributeMap().\n-                            get(name).getValues();\n+                    values = rowModel.getObject().getDerivedAttributeMap().get(name).getValues();\n                 }\n                 break;\n \n@@ -93,11 +84,9 @@ public void populateItem(\n             cellItem.add(new Label(componentId, \"\"));\n         } else {\n             if (values.size() == 1) {\n-                cellItem.add(\n-                        new Label(componentId, values.get(0)));\n+                cellItem.add(new Label(componentId, values.get(0)));\n             } else {\n-                cellItem.add(\n-                        new Label(componentId, values.toString()));\n+                cellItem.add(new Label(componentId, values.toString()));\n             }\n         }\n     }"},{"sha":"8d2b557e898c5f2448943377ccdd0005af0fed85","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AbstractFieldPanel.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -29,14 +29,11 @@\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            AbstractFieldPanel.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractFieldPanel.class);\n \n     private static final long serialVersionUID = 5958017546318855690L;\n \n-    public AbstractFieldPanel(\n-            final String id,\n-            final IModel<T> model) {\n+    public AbstractFieldPanel(final String id, final IModel<T> model) {\n \n         super(id, model);\n     }"},{"sha":"a4819de2e011f9896c32ccbccb47c1547b65431b","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":92,"deletions":155,"changes":247,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -56,262 +56,199 @@ public ActionLinksPanel(final String componentId, final IModel<?> model) {\n         super.add(new Fragment(\"panelExport\", \"emptyFragment\", this));\n     }\n \n-    public void add(\n-            final ActionLink link,\n-            final ActionLink.ActionType type,\n-            final String pageId,\n-            final String actionId) {\n-\n-        add(link, type,\n-                xmlRolesReader.getAllAllowedRoles(pageId, actionId), true);\n+    public void add(final ActionLink link, final ActionLink.ActionType type, final String pageId, final String actionId) {\n+\n+        add(link, type, xmlRolesReader.getAllAllowedRoles(pageId, actionId), true);\n     }\n \n-    public void add(\n-            final ActionLink link,\n-            final ActionLink.ActionType type,\n-            final String pageId,\n-            final String actionId,\n-            final boolean enabled) {\n+    public void add(final ActionLink link, final ActionLink.ActionType type, final String pageId,\n+            final String actionId, final boolean enabled) {\n \n-        add(link, type,\n-                xmlRolesReader.getAllAllowedRoles(pageId, actionId), enabled);\n+        add(link, type, xmlRolesReader.getAllAllowedRoles(pageId, actionId), enabled);\n     }\n \n-    public void add(\n-            final ActionLink link,\n-            final ActionLink.ActionType type,\n-            final String roles) {\n+    public void add(final ActionLink link, final ActionLink.ActionType type, final String roles) {\n \n         add(link, type, roles, true);\n     }\n \n-    public void add(\n-            final ActionLink link,\n-            final ActionLink.ActionType type,\n-            final String roles,\n-            final boolean enabled) {\n+    public void add(final ActionLink link, final ActionLink.ActionType type, final String roles, final boolean enabled) {\n \n         Fragment fragment = null;\n \n         switch (type) {\n             case CLAIM:\n-                fragment = new Fragment(\n-                        \"panelClaim\", \"fragmentClaim\", this);\n+                fragment = new Fragment(\"panelClaim\", \"fragmentClaim\", this);\n \n-                fragment.addOrReplace(\n-                        new IndicatingAjaxLink(\"claimLink\") {\n+                fragment.addOrReplace(new IndicatingAjaxLink(\"claimLink\") {\n \n-                            private static final long serialVersionUID =\n-                                    -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(\n-                                    final AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n \n-                                link.onClick(target);\n-                            }\n-                        });\n+                        link.onClick(target);\n+                    }\n+                });\n                 break;\n             case CREATE:\n-                fragment = new Fragment(\n-                        \"panelCreate\", \"fragmentCreate\", this);\n+                fragment = new Fragment(\"panelCreate\", \"fragmentCreate\", this);\n \n-                fragment.addOrReplace(\n-                        new IndicatingAjaxLink(\"createLink\") {\n+                fragment.addOrReplace(new IndicatingAjaxLink(\"createLink\") {\n \n-                            private static final long serialVersionUID =\n-                                    -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(\n-                                    final AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n \n-                                link.onClick(target);\n-                            }\n-                        });\n+                        link.onClick(target);\n+                    }\n+                });\n                 break;\n \n             case EDIT:\n-                fragment = new Fragment(\n-                        \"panelEdit\", \"fragmentEdit\", this);\n+                fragment = new Fragment(\"panelEdit\", \"fragmentEdit\", this);\n \n-                fragment.addOrReplace(\n-                        new IndicatingAjaxLink(\"editLink\") {\n+                fragment.addOrReplace(new IndicatingAjaxLink(\"editLink\") {\n \n-                            private static final long serialVersionUID =\n-                                    -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(\n-                                    final AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n \n-                                link.onClick(target);\n-                            }\n-                        });\n+                        link.onClick(target);\n+                    }\n+                });\n                 break;\n             case TEMPLATE:\n-                fragment = new Fragment(\n-                        \"panelTemplate\", \"fragmentTemplate\", this);\n+                fragment = new Fragment(\"panelTemplate\", \"fragmentTemplate\", this);\n \n-                fragment.addOrReplace(\n-                        new IndicatingAjaxLink(\"templateLink\") {\n+                fragment.addOrReplace(new IndicatingAjaxLink(\"templateLink\") {\n \n-                            private static final long serialVersionUID =\n-                                    -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(\n-                                    final AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n \n-                                link.onClick(target);\n-                            }\n-                        });\n+                        link.onClick(target);\n+                    }\n+                });\n                 break;\n             case SEARCH:\n-                fragment = new Fragment(\n-                        \"panelSearch\", \"fragmentSearch\", this);\n+                fragment = new Fragment(\"panelSearch\", \"fragmentSearch\", this);\n \n-                fragment.addOrReplace(\n-                        new IndicatingAjaxLink(\"searchLink\") {\n+                fragment.addOrReplace(new IndicatingAjaxLink(\"searchLink\") {\n \n-                            private static final long serialVersionUID =\n-                                    -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(\n-                                    final AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n \n-                                link.onClick(target);\n-                            }\n-                        });\n+                        link.onClick(target);\n+                    }\n+                });\n                 break;\n             case EXECUTE:\n-                fragment = new Fragment(\n-                        \"panelExecute\", \"fragmentExecute\", this);\n+                fragment = new Fragment(\"panelExecute\", \"fragmentExecute\", this);\n \n-                fragment.addOrReplace(\n-                        new IndicatingAjaxLink(\"executeLink\") {\n+                fragment.addOrReplace(new IndicatingAjaxLink(\"executeLink\") {\n \n-                            private static final long serialVersionUID =\n-                                    -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(\n-                                    final AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n \n-                                link.onClick(target);\n-                            }\n-                        });\n+                        link.onClick(target);\n+                    }\n+                });\n                 break;\n             case DRYRUN:\n-                fragment = new Fragment(\n-                        \"panelDryRun\", \"fragmentDryRun\", this);\n+                fragment = new Fragment(\"panelDryRun\", \"fragmentDryRun\", this);\n \n-                fragment.addOrReplace(\n-                        new IndicatingAjaxLink(\"dryRunLink\") {\n+                fragment.addOrReplace(new IndicatingAjaxLink(\"dryRunLink\") {\n \n-                            private static final long serialVersionUID =\n-                                    -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(\n-                                    final AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n \n-                                link.onClick(target);\n-                            }\n-                        });\n+                        link.onClick(target);\n+                    }\n+                });\n                 break;\n             case DELETE:\n-                fragment = new Fragment(\n-                        \"panelDelete\", \"fragmentDelete\", this);\n+                fragment = new Fragment(\"panelDelete\", \"fragmentDelete\", this);\n \n-                fragment.addOrReplace(\n-                        new IndicatingDeleteOnConfirmAjaxLink(\"deleteLink\") {\n+                fragment.addOrReplace(new IndicatingDeleteOnConfirmAjaxLink(\"deleteLink\") {\n \n-                            private static final long serialVersionUID =\n-                                    -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(\n-                                    final AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n \n-                                link.onClick(target);\n-                            }\n-                        });\n+                        link.onClick(target);\n+                    }\n+                });\n \n                 break;\n             case EXPORT:\n-                fragment = new Fragment(\n-                        \"panelExport\", \"fragmentExport\", this);\n+                fragment = new Fragment(\"panelExport\", \"fragmentExport\", this);\n \n-                fragment.addOrReplace(\n-                        new IndicatingAjaxLink(\"exportLink\") {\n+                fragment.addOrReplace(new IndicatingAjaxLink(\"exportLink\") {\n \n-                            private static final long serialVersionUID =\n-                                    -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(\n-                                    final AjaxRequestTarget target) {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n \n-                                link.onClick(target);\n-                            }\n-                        });\n+                        link.onClick(target);\n+                    }\n+                });\n                 break;\n             default:\n-            // do nothink\n+                // do nothink\n         }\n \n         if (fragment != null) {\n             fragment.setEnabled(enabled);\n-            MetaDataRoleAuthorizationStrategy.authorize(\n-                    fragment, ENABLE, roles);\n+            MetaDataRoleAuthorizationStrategy.authorize(fragment, ENABLE, roles);\n             super.addOrReplace(fragment);\n         }\n     }\n \n     public void remove(ActionLink.ActionType type) {\n         switch (type) {\n             case CLAIM:\n-                super.addOrReplace(\n-                        new Fragment(\"panelClaim\", \"emptyFragment\", this));\n+                super.addOrReplace(new Fragment(\"panelClaim\", \"emptyFragment\", this));\n                 break;\n \n             case CREATE:\n-                super.addOrReplace(\n-                        new Fragment(\"panelCreate\", \"emptyFragment\", this));\n+                super.addOrReplace(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n                 break;\n \n             case EDIT:\n-                super.addOrReplace(\n-                        new Fragment(\"panelEdit\", \"emptyFragment\", this));\n+                super.addOrReplace(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n                 break;\n             case TEMPLATE:\n-                super.addOrReplace(\n-                        new Fragment(\"panelTemplate\", \"emptyFragment\", this));\n+                super.addOrReplace(new Fragment(\"panelTemplate\", \"emptyFragment\", this));\n                 break;\n             case SEARCH:\n-                super.addOrReplace(\n-                        new Fragment(\"panelSearch\", \"emptyFragment\", this));\n+                super.addOrReplace(new Fragment(\"panelSearch\", \"emptyFragment\", this));\n                 break;\n             case EXECUTE:\n-                super.addOrReplace(\n-                        new Fragment(\"panelExecute\", \"emptyFragment\", this));\n+                super.addOrReplace(new Fragment(\"panelExecute\", \"emptyFragment\", this));\n                 break;\n             case DRYRUN:\n-                super.addOrReplace(\n-                        new Fragment(\"panelDryRun\", \"emptyFragment\", this));\n+                super.addOrReplace(new Fragment(\"panelDryRun\", \"emptyFragment\", this));\n                 break;\n             case DELETE:\n-                super.addOrReplace(\n-                        new Fragment(\"panelDelete\", \"emptyFragment\", this));\n+                super.addOrReplace(new Fragment(\"panelDelete\", \"emptyFragment\", this));\n                 break;\n             case EXPORT:\n-                super.addOrReplace(\n-                        new Fragment(\"panelExport\", \"emptyFragment\", this));\n+                super.addOrReplace(new Fragment(\"panelExport\", \"emptyFragment\", this));\n                 break;\n             default:\n-            // do nothink\n+                // do nothink\n         }\n     }\n }"},{"sha":"9b784425e8734a6ba9d4f664fd9ebae0470266f5","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -31,10 +31,7 @@ public class AjaxCheckBoxPanel extends FieldPanel<Boolean> {\n \n     private static final long serialVersionUID = 5664138233103884310L;\n \n-    public AjaxCheckBoxPanel(\n-            final String id,\n-            final String name,\n-            final IModel<Boolean> model) {\n+    public AjaxCheckBoxPanel(final String id, final String name, final IModel<Boolean> model) {\n \n         super(id, name, model);\n \n@@ -44,8 +41,7 @@ public AjaxCheckBoxPanel(\n         if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n@@ -76,8 +72,7 @@ public FieldPanel setNewModel(final List<Serializable> list) {\n             public Serializable getObject() {\n                 Boolean value = null;\n \n-                if (list != null && !list.isEmpty()\n-                        && StringUtils.hasText(list.get(0).toString())) {\n+                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n \n                     value = \"true\".equalsIgnoreCase(list.get(0).toString());\n                 }"},{"sha":"009b1ee68dac720b347efa467bdb31d5543c4da6","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxDecoratedCheckbox.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -50,8 +50,7 @@ protected void onEvent(final AjaxRequestTarget target) {\n \n             @Override\n             protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                return new CancelEventIfNoAjaxDecorator(\n-                        AjaxDecoratedCheckbox.this.getAjaxCallDecorator());\n+                return new CancelEventIfNoAjaxDecorator(AjaxDecoratedCheckbox.this.getAjaxCallDecorator());\n             }\n         });\n     }"},{"sha":"7003b90aa1fcd5f9db7430c88e09fb4faa7b9e36","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -32,10 +32,7 @@\n \n     private static final long serialVersionUID = -4716376580659196095L;\n \n-    public AjaxDropDownChoicePanel(\n-            final String id,\n-            final String name,\n-            final IModel<T> model) {\n+    public AjaxDropDownChoicePanel(final String id, final String name, final IModel<T> model) {\n \n         super(id, name, model);\n "},{"sha":"53b15d131b22358757fcd6864e41c61ad7ea87ac","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxNumberFieldPanel.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,11 +28,7 @@ public class AjaxNumberFieldPanel extends FieldPanel<Number> {\n \n     private static final long serialVersionUID = 238940918106696068L;\n \n-    public AjaxNumberFieldPanel(\n-            final String id,\n-            final String name,\n-            final IModel<Number> model,\n-            final Class reference) {\n+    public AjaxNumberFieldPanel(final String id, final String name, final IModel<Number> model, final Class reference) {\n \n         super(id, name, model);\n \n@@ -43,8 +39,7 @@ public AjaxNumberFieldPanel(\n         if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n                 protected void onUpdate(AjaxRequestTarget art) {"},{"sha":"c58e40ec7764d766d8035e499cdc8f199cbc5bf7","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":7,"deletions":26,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -32,29 +32,19 @@\n \n     final Palette<T> palette;\n \n-    public AjaxPalettePanel(\n-            final String id,\n-            final IModel<List<T>> model,\n-            final ListModel<T> choices) {\n+    public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices) {\n \n         this(id, model, choices, false);\n     }\n \n-    public AjaxPalettePanel(\n-            final String id,\n-            final IModel<List<T>> model,\n-            final ListModel<T> choices,\n+    public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n             final boolean allowOrder) {\n \n         this(id, model, choices, new SelectChoiceRenderer(), allowOrder);\n     }\n \n-    public AjaxPalettePanel(\n-            final String id,\n-            final IModel<List<T>> model,\n-            final ListModel<T> choices,\n-            final IChoiceRenderer<T> renderer,\n-            final boolean allowOrder) {\n+    public AjaxPalettePanel(final String id, final IModel<List<T>> model, final ListModel<T> choices,\n+            final IChoiceRenderer<T> renderer, final boolean allowOrder) {\n \n         super(id, model);\n \n@@ -63,19 +53,10 @@ public AjaxPalettePanel(\n         setOutputMarkupId(true);\n     }\n \n-    private Palette<T> createPalette(\n-            final IModel<List<T>> model,\n-            final ListModel<T> choices,\n-            final IChoiceRenderer<T> renderer,\n-            final boolean allowOrder) {\n+    private Palette<T> createPalette(final IModel<List<T>> model, final ListModel<T> choices,\n+            final IChoiceRenderer<T> renderer, final boolean allowOrder) {\n \n-        return new Palette(\n-                \"paletteField\",\n-                model,\n-                choices,\n-                renderer,\n-                8,\n-                allowOrder);\n+        return new Palette(\"paletteField\", model, choices, renderer, 8, allowOrder);\n     }\n \n     @Override"},{"sha":"96dfcc3084cfc1b9c5db4d5cbb513034bf7b22c4","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxPasswordFieldPanel.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,10 +28,7 @@ public class AjaxPasswordFieldPanel extends FieldPanel<String> {\n \n     private static final long serialVersionUID = -5490115280336667460L;\n \n-    public AjaxPasswordFieldPanel(\n-            final String id,\n-            final String name,\n-            final IModel<String> model) {\n+    public AjaxPasswordFieldPanel(final String id, final String name, final IModel<String> model) {\n \n         super(id, name, model);\n \n@@ -44,8 +41,7 @@ public AjaxPasswordFieldPanel(\n         if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget art) {"},{"sha":"8590116d07752164a7792de236cb94977d7fcf90","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -36,10 +36,7 @@ public class AjaxTextFieldPanel extends FieldPanel<String> {\n \n     private List<String> choices = Collections.EMPTY_LIST;\n \n-    public AjaxTextFieldPanel(\n-            final String id,\n-            final String name,\n-            final IModel<String> model) {\n+    public AjaxTextFieldPanel(final String id, final String name, final IModel<String> model) {\n \n         super(id, name, model);\n \n@@ -49,9 +46,7 @@ public AjaxTextFieldPanel(\n \n             @Override\n             protected Iterator<String> getChoices(String input) {\n-                final Pattern pattern = Pattern.compile(\n-                        Pattern.quote(input) + \".*\",\n-                        Pattern.CASE_INSENSITIVE);\n+                final Pattern pattern = Pattern.compile(Pattern.quote(input) + \".*\", Pattern.CASE_INSENSITIVE);\n \n                 final List<String> result = new ArrayList<String>();\n "},{"sha":"2b90c6c479eed9b87d5054acf25f0165fe9888cc","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/CheckBoxMultipleChoiceFieldPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -30,8 +30,7 @@ public class CheckBoxMultipleChoiceFieldPanel extends AbstractFieldPanel {\n \n     private final CheckBoxMultipleChoice field;\n \n-    public CheckBoxMultipleChoiceFieldPanel(final String id, final IModel<Collection> model,\n-            final IModel<List> choices) {\n+    public CheckBoxMultipleChoiceFieldPanel(final String id, final IModel<Collection> model, final IModel<List> choices) {\n \n         super(id, model);\n "},{"sha":"e0966994d11693ce19983477ddd6e9d19f6c0077","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DateTextFieldPanel.java","status":"modified","additions":13,"deletions":24,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -39,11 +39,7 @@ public class DateTextFieldPanel extends FieldPanel<Date> implements Cloneable {\n \n     private final String datePattern;\n \n-    public DateTextFieldPanel(\n-            final String id,\n-            final String name,\n-            final IModel<Date> model,\n-            final String datePattern) {\n+    public DateTextFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n \n         super(id, name, model);\n \n@@ -52,17 +48,15 @@ public DateTextFieldPanel(\n         field = DateTextField.forDatePattern(\"field\", model, datePattern);\n \n         if (!isReadOnly()) {\n-            field.add(\n-                    new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+            field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                        private static final long serialVersionUID =\n-                                -1107858522700306810L;\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n-                        @Override\n-                        protected void onUpdate(AjaxRequestTarget art) {\n-                            // nothing to do\n-                        }\n-                    });\n+                @Override\n+                protected void onUpdate(AjaxRequestTarget art) {\n+                    // nothing to do\n+                }\n+            });\n         }\n \n         field.add(getDatePicker());\n@@ -95,8 +89,7 @@ public FieldPanel setNewModel(final ListItem item) {\n \n         IModel<Date> model = new Model() {\n \n-            private static final long serialVersionUID =\n-                    6799404673615637845L;\n+            private static final long serialVersionUID = 6799404673615637845L;\n \n             @Override\n             public Serializable getObject() {\n@@ -106,8 +99,7 @@ public Serializable getObject() {\n                     if (item.getModelObject() instanceof String) {\n                         // Parse string using datePattern\n                         try {\n-                            date = formatter.parse(\n-                                    (String) item.getModelObject());\n+                            date = formatter.parse((String) item.getModelObject());\n                         } catch (ParseException e) {\n                             LOG.error(\"While parsing date\", e);\n                         }\n@@ -128,8 +120,7 @@ public void setObject(final Serializable object) {\n                 if (object != null) {\n                     if (item.getModelObject() instanceof String) {\n                         // Parse string using datePattern\n-                        item.setModelObject(\n-                                (String) formatter.format((Date) object));\n+                        item.setModelObject((String) formatter.format((Date) object));\n                     } else if (item.getModelObject() instanceof Date) {\n                         // Don't parse anything\n                         item.setModelObject((Date) object);\n@@ -153,15 +144,13 @@ public FieldPanel setNewModel(final List<Serializable> list) {\n \n             private static final long serialVersionUID = 527651414610325237L;\n \n-            private final DateFormat formatter =\n-                    new SimpleDateFormat(datePattern);\n+            private final DateFormat formatter = new SimpleDateFormat(datePattern);\n \n             @Override\n             public Serializable getObject() {\n                 Date date = null;\n \n-                if (list != null && !list.isEmpty()\n-                        && StringUtils.hasText(list.get(0).toString())) {\n+                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n                     try {\n                         // Parse string using datePattern\n                         date = formatter.parse(list.get(0).toString());"},{"sha":"330e6947f78ac2ff10a1eaa3df9325d7c6ca593a","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DateTimeFieldPanel.java","status":"modified","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -47,21 +47,15 @@ public class DateTimeFieldPanel extends FieldPanel<Date> implements Cloneable {\n \n     private Form form = null;\n \n-    protected static final ThreadLocal<SimpleDateFormat> DATE_FORMAT =\n-            new ThreadLocal<SimpleDateFormat>() {\n+    protected static final ThreadLocal<SimpleDateFormat> DATE_FORMAT = new ThreadLocal<SimpleDateFormat>() {\n \n-                @Override\n-                protected SimpleDateFormat initialValue() {\n-                    return new SimpleDateFormat(\n-                            SyncopeConstants.DEFAULT_DATE_PATTERN);\n-                }\n-            };\n+        @Override\n+        protected SimpleDateFormat initialValue() {\n+            return new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN);\n+        }\n+    };\n \n-    public DateTimeFieldPanel(\n-            final String id,\n-            final String name,\n-            final IModel<Date> model,\n-            final String datePattern) {\n+    public DateTimeFieldPanel(final String id, final String name, final IModel<Date> model, final String datePattern) {\n \n         super(id, name, model);\n \n@@ -148,7 +142,7 @@ public DateTimeFormValidator(final DateTimeField dateTimeComponent) {\n                 throw new IllegalArgumentException(\"argument dateTimeComponent cannot be null\");\n             }\n \n-            dateTimeComponents = new FormComponent[]{dateTimeComponent};\n+            dateTimeComponents = new FormComponent[] { dateTimeComponent };\n         }\n \n         @Override\n@@ -165,9 +159,7 @@ public FormComponent[] getDependentFormComponents() {\n         public void validate(final Form form) {\n             final DateTimeField dateTimeField = (DateTimeField) dateTimeComponents[0];\n \n-            if (!(dateTimeField.getDate() != null\n-                    && dateTimeField.getHours() != null\n-                    && dateTimeField.getMinutes() != null)) {\n+            if (!(dateTimeField.getDate() != null && dateTimeField.getHours() != null && dateTimeField.getMinutes() != null)) {\n \n                 ValidationError ve = new ValidationError();\n                 ve.setVariables(DateTimeFormValidator.this.variablesMap());\n@@ -290,13 +282,21 @@ public void setObject(final Serializable object) {\n \n     @Override\n     public FieldPanel setStyleShet(String classes) {\n-        field.get(\"date\").add(AttributeModifier.replace(\"class\", (classes != null ? classes : \"\") + \" date_size\"));\n+        field.get(\"date\").add(AttributeModifier.replace(\"class\", (classes != null\n+                ? classes\n+                : \"\") + \" date_size\"));\n \n-        field.get(\"hours\").add(AttributeModifier.replace(\"class\", classes != null ? classes : \"\"));\n+        field.get(\"hours\").add(AttributeModifier.replace(\"class\", classes != null\n+                ? classes\n+                : \"\"));\n \n-        field.get(\"minutes\").add(AttributeModifier.replace(\"class\", classes != null ? classes : \"\"));\n+        field.get(\"minutes\").add(AttributeModifier.replace(\"class\", classes != null\n+                ? classes\n+                : \"\"));\n \n-        field.get(\"amOrPmChoice\").add(AttributeModifier.replace(\"class\", classes != null ? classes : \"\"));\n+        field.get(\"amOrPmChoice\").add(AttributeModifier.replace(\"class\", classes != null\n+                ? classes\n+                : \"\"));\n \n         return this;\n     }"},{"sha":"dfe8bd0f6d59587b417a99765f06c42270c4b5b6","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":13,"deletions":9,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -59,13 +59,17 @@ public FormComponent getField() {\n     }\n \n     public FieldPanel setTitle(String title) {\n-        field.add(AttributeModifier.replace(\"title\", title != null ? title : \"\"));\n+        field.add(AttributeModifier.replace(\"title\", title != null\n+                ? title\n+                : \"\"));\n \n         return this;\n     }\n \n     public FieldPanel setStyleShet(final String classes) {\n-        field.add(AttributeModifier.replace(\"class\", classes != null ? classes : \"\"));\n+        field.add(AttributeModifier.replace(\"class\", classes != null\n+                ? classes\n+                : \"\"));\n \n         return this;\n     }\n@@ -138,7 +142,9 @@ public FieldPanel setNewModel(final List<Serializable> list) {\n \n             @Override\n             public Serializable getObject() {\n-                return list != null && !list.isEmpty() ? list.get(0) : null;\n+                return list != null && !list.isEmpty()\n+                        ? list.get(0)\n+                        : null;\n             }\n \n             @Override\n@@ -158,8 +164,8 @@ public void setObject(final Serializable object) {\n     public FieldPanel clone() {\n         final FieldPanel panel;\n         try {\n-            panel = this.getClass().getConstructor(new Class[]{String.class, String.class, IModel.class}).\n-                    newInstance(id, name, new Model(null));\n+            panel = this.getClass().getConstructor(new Class[] { String.class, String.class, IModel.class })\n+                    .newInstance(id, name, new Model(null));\n         } catch (Exception e) {\n             LOG.error(\"Error cloning field panel\", e);\n             return null;\n@@ -181,8 +187,7 @@ public FieldPanel addRequiredLabel() {\n             setRequired(true);\n         }\n \n-        final Fragment fragment =\n-                new Fragment(\"required\", \"requiredFragment\", this);\n+        final Fragment fragment = new Fragment(\"required\", \"requiredFragment\", this);\n \n         fragment.add(new Label(\"requiredLabel\", \"*\"));\n \n@@ -198,8 +203,7 @@ public FieldPanel removeRequiredLabel() {\n             setRequired(false);\n         }\n \n-        final Fragment fragment =\n-                new Fragment(\"required\", \"notRequiredFragment\", this);\n+        final Fragment fragment = new Fragment(\"required\", \"notRequiredFragment\", this);\n \n         replace(fragment);\n "},{"sha":"54a0c16bece71f48f5f52d496c2de2aa1e41a1af","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/MultiValueSelectorPanel.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiValueSelectorPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiValueSelectorPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiValueSelectorPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -39,18 +39,12 @@\n \n     private WebMarkupContainer container;\n \n-    public MultiValueSelectorPanel(\n-            final String id,\n-            final IModel<List<E>> model,\n-            final FieldPanel panelTemplate) {\n+    public MultiValueSelectorPanel(final String id, final IModel<List<E>> model, final FieldPanel panelTemplate) {\n \n         this(id, model, panelTemplate, false);\n     }\n \n-    public MultiValueSelectorPanel(\n-            final String id,\n-            final IModel<List<E>> model,\n-            final FieldPanel panelTemplate,\n+    public MultiValueSelectorPanel(final String id, final IModel<List<E>> model, final FieldPanel panelTemplate,\n             final boolean eventTemplate) {\n \n         super(id, model);\n@@ -77,8 +71,7 @@ protected void populateItem(final ListItem<E> item) {\n                         private static final long serialVersionUID = -1107858522700306810L;\n \n                         @Override\n-                        protected void onUpdate(\n-                                final AjaxRequestTarget target) {\n+                        protected void onUpdate(final AjaxRequestTarget target) {\n \n                             send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n                         }"},{"sha":"9c0a99daaae3d79156fd749f523fba80abf636df","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/SelectableRecorder.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -77,8 +77,7 @@ private void initIds() {\n         StringBuilder modelStringBuffer = new StringBuilder();\n         Collection<T> modelCollection = getPalette().getModelCollection();\n         if (modelCollection == null) {\n-            throw new WicketRuntimeException(\n-                    \"Expected getPalette().getModelCollection() to return a non-null value.\"\n+            throw new WicketRuntimeException(\"Expected getPalette().getModelCollection() to return a non-null value.\"\n                     + \" Please make sure you have model object assigned to the palette\");\n         }\n         Iterator<T> selection = modelCollection.iterator();\n@@ -146,7 +145,7 @@ public Iterator<T> getUnselectedChoices() {\n         Collection<? extends T> choices = getPalette().getChoices();\n \n         if (choices.size() - ids.length == 0) {\n-            return Collections.<T>emptyList().iterator();\n+            return Collections.<T> emptyList().iterator();\n         }\n \n         List<T> unselected = new ArrayList<T>(Math.max(1, choices.size() - ids.length));"},{"sha":"f0fd1dd52b1909c8170770ee4a0329ef715bd3f5","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/SingleColumnPalette.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -122,12 +122,16 @@ public void setRecordBehaviors(final List<Behavior> recordBehaviors) {\n \n     @Override\n     protected Component newAddComponent() {\n-        return addLink == null ? super.newAddComponent() : addLink;\n+        return addLink == null\n+                ? super.newAddComponent()\n+                : addLink;\n     }\n \n     @Override\n     protected Component newRemoveComponent() {\n-        return removeLink == null ? super.newRemoveComponent() : removeLink;\n+        return removeLink == null\n+                ? super.newRemoveComponent()\n+                : removeLink;\n     }\n \n     @Override"},{"sha":"775e2150307530068b1b303ceed41dcd0e57eba0","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/TreeActionLinkPanel.java","status":"modified","additions":16,"deletions":23,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeActionLinkPanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -47,8 +47,7 @@ public class TreeActionLinkPanel extends Panel {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            TreeActionLinkPanel.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(TreeActionLinkPanel.class);\n \n     private static final long serialVersionUID = -7292448006463567909L;\n \n@@ -60,14 +59,14 @@ public class TreeActionLinkPanel extends Panel {\n \n     private Fragment fragment;\n \n-    public TreeActionLinkPanel(final String id, final long idRole,\n-            final IModel inputModel, final ModalWindow window,\n+    public TreeActionLinkPanel(final String id, final long idRole, final IModel inputModel, final ModalWindow window,\n             final PageReference callerPageRef) {\n \n         super(id);\n \n-        fragment = new Fragment(\"menuPanel\",\n-                idRole == 0 ? \"fakerootFrag\" : \"roleFrag\", this);\n+        fragment = new Fragment(\"menuPanel\", idRole == 0\n+                ? \"fakerootFrag\"\n+                : \"roleFrag\", this);\n \n         AjaxLink createRoleLink = new IndicatingAjaxLink(\"createRoleLink\") {\n \n@@ -77,15 +76,13 @@ public TreeActionLinkPanel(final String id, final long idRole,\n             public void onClick(final AjaxRequestTarget target) {\n                 window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                    private static final long serialVersionUID =\n-                            -7834632442532690940L;\n+                    private static final long serialVersionUID = -7834632442532690940L;\n \n                     @Override\n                     public Page createPage() {\n                         RoleTO roleTO = new RoleTO();\n                         roleTO.setParent(idRole);\n-                        RoleModalPage form =\n-                                new RoleModalPage(callerPageRef, window, roleTO);\n+                        RoleModalPage form = new RoleModalPage(callerPageRef, window, roleTO);\n                         return form;\n                     }\n                 });\n@@ -94,8 +91,8 @@ public Page createPage() {\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createRoleLink, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Roles\", \"create\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(createRoleLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Roles\",\n+                \"create\"));\n \n         fragment.add(createRoleLink);\n \n@@ -106,15 +103,12 @@ public Page createPage() {\n                 public void onClick(final AjaxRequestTarget target) {\n                     window.setPageCreator(new ModalWindow.PageCreator() {\n \n-                        private static final long serialVersionUID =\n-                                -7834632442532690940L;\n+                        private static final long serialVersionUID = -7834632442532690940L;\n \n                         @Override\n                         public Page createPage() {\n                             RoleTO roleTO = restClient.readRole(idRole);\n-                            RoleModalPage form =\n-                                    new RoleModalPage(callerPageRef, window,\n-                                    roleTO);\n+                            RoleModalPage form = new RoleModalPage(callerPageRef, window, roleTO);\n                             return form;\n                         }\n                     });\n@@ -123,13 +117,12 @@ public Page createPage() {\n                 }\n             };\n \n-            MetaDataRoleAuthorizationStrategy.authorize(updateRoleLink, ENABLE,\n-                    xmlRolesReader.getAllAllowedRoles(\"Roles\", \"read\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(updateRoleLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                    \"Roles\", \"read\"));\n \n             fragment.add(updateRoleLink);\n \n-            AjaxLink dropRoleLink = new IndicatingDeleteOnConfirmAjaxLink(\n-                    \"dropRoleLink\") {\n+            AjaxLink dropRoleLink = new IndicatingDeleteOnConfirmAjaxLink(\"dropRoleLink\") {\n \n                 @Override\n                 public void onClick(final AjaxRequestTarget target) {\n@@ -145,8 +138,8 @@ public void onClick(final AjaxRequestTarget target) {\n                 }\n             };\n \n-            MetaDataRoleAuthorizationStrategy.authorize(dropRoleLink, ENABLE,\n-                    xmlRolesReader.getAllAllowedRoles(\"Roles\", \"delete\"));\n+            MetaDataRoleAuthorizationStrategy.authorize(dropRoleLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                    \"Roles\", \"delete\"));\n \n             fragment.add(dropRoleLink);\n         }"},{"sha":"e2b53968c78d37fde02d31742ea0eecd5ebc0608","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/TreeRolePanel.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRolePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRolePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FTreeRolePanel.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -73,21 +73,17 @@ protected IModel getNodeTextModel(final IModel model) {\n             }\n \n             @Override\n-            protected void onNodeLinkClicked(final Object node,\n-                    final BaseTree baseTree, final AjaxRequestTarget target) {\n+            protected void onNodeLinkClicked(final Object node, final BaseTree baseTree, final AjaxRequestTarget target) {\n \n                 DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) node;\n                 RoleTO unitObject = (RoleTO) treeNode.getUserObject();\n \n-                send(getPage(), Broadcast.BREADTH,\n-                        new TreeNodeClickUpdate(target, unitObject.getId()));\n+                send(getPage(), Broadcast.BREADTH, new TreeNodeClickUpdate(target, unitObject.getId()));\n \n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(\n-                tree, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Roles\", \"read\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(tree, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Roles\", \"read\"));\n \n         tree.setOutputMarkupId(true);\n         tree.getTreeState().expandAll();\n@@ -101,8 +97,7 @@ public void onEvent(final IEvent<?> event) {\n \n         if (event.getPayload() instanceof TreeNodeClickUpdate) {\n \n-            final TreeNodeClickUpdate update =\n-                    (TreeNodeClickUpdate) event.getPayload();\n+            final TreeNodeClickUpdate update = (TreeNodeClickUpdate) event.getPayload();\n \n             updateTree();\n "},{"sha":"53a6545871038746b54b9c30822c713dbaa578d6","filename":"console/src/test/java/org/syncope/console/AbstractTest.java","status":"modified","additions":6,"deletions":14,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FAbstractTest.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,28 +28,23 @@\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n-@ContextConfiguration(locations = {\n-    \"classpath:applicationContext.xml\"\n-})\n+@ContextConfiguration(locations = { \"classpath:applicationContext.xml\" })\n public abstract class AbstractTest extends SeleneseTestCase {\n \n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            AbstractTest.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractTest.class);\n \n     protected static final String ADMIN = \"admin\";\n \n     protected static final String PASSWORD = \"password\";\n \n-    protected static final String BASE_URL =\n-            \"http://localhost:9080/syncope-console/\";\n+    protected static final String BASE_URL = \"http://localhost:9080/syncope-console/\";\n \n     @Override\n     @Before\n-    public void setUp()\n-            throws Exception {\n+    public void setUp() throws Exception {\n \n         super.setUp(BASE_URL, \"*firefox\");\n \n@@ -58,15 +53,12 @@ public void setUp()\n         selenium.type(\"name=password\", PASSWORD);\n         selenium.click(\"name=:submit\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//img[@alt='Logout']\\\");\",\n-                \"60000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//img[@alt='Logout']\\\");\", \"60000\");\n     }\n \n     @Override\n     @After\n-    public void tearDown()\n-            throws Exception {\n+    public void tearDown() throws Exception {\n \n         selenium.click(\"css=img[alt=\\\"Logout\\\"]\");\n         selenium.stop();"},{"sha":"9083e8eb49653653ee1d72c00c5c6ff4eb3c9386","filename":"console/src/test/java/org/syncope/console/AccessTestITCase.java","status":"modified","additions":7,"deletions":17,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FAccessTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FAccessTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FAccessTestITCase.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,25 +26,21 @@ public class AccessTestITCase extends AbstractTest {\n     public void clickAround() {\n         selenium.click(\"css=img[alt=\\\"Schema\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='user']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='user']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='user']/ul/li[2]/a/span\");\n         selenium.click(\"//div[@id='user']/ul/li[3]/a/span\");\n \n         selenium.click(\"link=Role\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='role']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='role']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='role']/ul/li/a/span\");\n         selenium.click(\"//div[@id='role']/ul/li[2]/a/span\");\n         selenium.click(\"//div[@id='role']/ul/li[3]/a/span\");\n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='membership']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='membership']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='membership']/ul/li[2]/a/span\");\n         selenium.click(\"//div[@id='membership']/ul/li[3]/a/span\");\n@@ -67,22 +63,16 @@ public void clickAround() {\n \n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//div[@id='tabs']/ul/li[2]/a/span\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//div[@id='tabs']/ul/li[2]/a/span\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//div[@id='tabs']/ul/li[3]/a/span\\\");\",\n-                \"30000\");\n-        \n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//div[@id='tabs']/ul/li[3]/a/span\\\");\", \"30000\");\n+\n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n \n         selenium.click(\"css=img[alt=\\\"Tasks\\\"]\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//div[@id='tabs']/ul/li[2]/a/span\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//div[@id='tabs']/ul/li[2]/a/span\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");"},{"sha":"d7ca6af111f90b64ff22432ac97647adf3626263","filename":"console/src/test/java/org/syncope/console/ConfigurationTestITCase.java","status":"modified","additions":20,"deletions":51,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,39 +26,30 @@ public class ConfigurationTestITCase extends AbstractTest {\n     public void browseCreateModal() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//a[contains(text(),'Create new configuration')]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//input[@name='key:textField']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='key:textField']\\\");\", \"30000\");\n \n         selenium.type(\"name=key:textField\", \"test1\");\n         selenium.type(\"name=value:textField\", \"value1\");\n         selenium.click(\"name=apply\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isTextPresent(\\\"Operation executed successfully\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isTextPresent(\\\"Operation executed successfully\\\");\", \"30000\");\n     }\n \n     @Test\n     public void browseEditModal() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//tr/td[3]/span/span[7]/a\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//input[@name='key:textField']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='key:textField']\\\");\", \"30000\");\n \n-        assertEquals(\"connid.bundles.directory\",\n-                selenium.getAttribute(\"//input[@name='key:textField']@value\"));\n+        assertEquals(\"connid.bundles.directory\", selenium.getAttribute(\"//input[@name='key:textField']@value\"));\n \n         selenium.click(\"css=a.w_close\");\n \n@@ -68,92 +59,70 @@ public void browseEditModal() {\n     public void browsePasswordPolicy() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n         selenium.click(\"//div[3]/div[2]/span/div/a\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//input[@name='id:textField']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='id:textField']\\\");\", \"30000\");\n \n         selenium.type(\"name=description:textField\", \"new description\");\n         selenium.click(\"//div[2]/form/div[3]/input\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isTextPresent(\\\"new description\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isTextPresent(\\\"new description\\\");\", \"30000\");\n     }\n \n     @Test\n     public void browseAccountPolicy() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[3]/a\");\n         selenium.click(\"//div[3]/div[3]/span/div/a\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//input[@name='id:textField']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='id:textField']\\\");\", \"30000\");\n \n         selenium.type(\"name=description:textField\", \"new description\");\n         selenium.click(\"//div[2]/form/div[3]/input\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isTextPresent(\\\"new description\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isTextPresent(\\\"new description\\\");\", \"30000\");\n     }\n \n     @Test\n     public void browseWorkflowDef() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[6]/a/span\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//*[@id='workflowDefArea']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//*[@id='workflowDefArea']\\\");\", \"30000\");\n     }\n \n     @Test\n     public void delete() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//tr[7]/td[3]/span/span[9]/a\");\n \n-        assertTrue(selenium.getConfirmation().matches(\n-                \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n+        assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n \n-        selenium.waitForCondition(\"selenium.isTextPresent(\"\n-                + \"\\\"Operation executed successfully\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Operation executed successfully\\\");\", \"30000\");\n     }\n \n     @Test\n     public void setLogLevel() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[7]/a/span\");\n \n-        selenium.select(\n-                \"//div[3]/div[7]/div/span/table/tbody/tr/td[2]/select\",\n-                \"label=ERROR\");\n+        selenium.select(\"//div[3]/div[7]/div/span/table/tbody/tr/td[2]/select\", \"label=ERROR\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isTextPresent(\\\"Operation executed successfully\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isTextPresent(\\\"Operation executed successfully\\\");\", \"30000\");\n     }\n }"},{"sha":"9828d67eaef21e157df7152dd55392330c13e5cd","filename":"console/src/test/java/org/syncope/console/ConnInstanceTestITCase.java","status":"modified","additions":14,"deletions":31,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,23 +26,18 @@ public class ConnInstanceTestITCase extends AbstractTest {\n     public void browseCreateModal() {\n         selenium.click(\"css=img[alt=\\\"Resources\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/div[2]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//input[@name='version:textField']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@name='version:textField']\\\");\", \"30000\");\n \n-        selenium.select(\"//select[@name='bundle:dropDownChoiceField']\",\n-                \"label=org.connid.bundles.soap 1.2\");\n+        selenium.select(\"//select[@name='bundle:dropDownChoiceField']\", \"label=org.connid.bundles.soap 1.2\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n         selenium.click(\"//form/div[@id='tabs']/ul/li[1]/a/span\");\n \n-        assertTrue(selenium.isElementPresent(\n-                \"//form/div[2]/div/div/div[4]/div[2]\"));\n+        assertTrue(selenium.isElementPresent(\"//form/div[2]/div/div/div[4]/div[2]\"));\n \n         selenium.click(\"css=a.w_close\");\n     }\n@@ -51,21 +46,17 @@ public void browseCreateModal() {\n     public void browseEditModal() {\n         selenium.click(\"css=img[alt=\\\"Resources\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n         selenium.click(\"//tr[4]/td[6]/span/span[7]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//input[@name='version:textField']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@name='version:textField']\\\");\", \"30000\");\n \n-        assertEquals(\"ConnInstance103\", selenium.getAttribute(\n-                \"//input[@name='displayName:textField']/@value\"));\n+        assertEquals(\"ConnInstance103\", selenium.getAttribute(\"//input[@name='displayName:textField']/@value\"));\n \n-        assertEquals(\"org.connid.bundles.soap#1.2\", selenium.getSelectedValue(\n-                \"//select[@name='bundle:dropDownChoiceField']\"));\n+        assertEquals(\"org.connid.bundles.soap#1.2\", selenium\n+                .getSelectedValue(\"//select[@name='bundle:dropDownChoiceField']\"));\n \n         selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n         selenium.click(\"css=a.w_close\");\n@@ -75,18 +66,14 @@ public void browseEditModal() {\n     public void delete() {\n         selenium.click(\"css=img[alt=\\\"Resources\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n         selenium.click(\"//tr[4]/td[6]/span/span[9]/a\");\n \n-        assertTrue(selenium.getConfirmation().matches(\n-                \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n+        assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n \n-        selenium.waitForCondition(\n-                \"selenium.isTextPresent(\"\n-                + \"\\\"Error occurred during the requested operation\\\");\",\n+        selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Error occurred during the requested operation\\\");\",\n                 \"10000\");\n     }\n \n@@ -99,17 +86,13 @@ public void checkConnection() {\n         selenium.click(\"//div[3]/ul/li[2]/a\");\n         selenium.click(\"//tr[2]/td[6]/span/span[7]/a\");\n \n-\n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//input[@name='version:textField']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@name='version:textField']\\\");\", \"30000\");\n \n         selenium.click(\"//div[2]/form/div[2]/ul/li[2]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='version:textField']\\\");\", \"30000\");\n \n-        selenium.click(\"//div[2]/form/div[2]/\"\n-                + \"div[2]/div/span/div[2]/div[27]/a/img\");\n+        selenium.click(\"//div[2]/form/div[2]/\" + \"div[2]/div/span/div[2]/div[27]/a/img\");\n \n         selenium.waitForCondition(\n                 \"selenium.isElementPresent(\\\"//div/ul/li/span[contains(text(),'Successful connection')]\\\");\", \"30000\");"},{"sha":"f873003fd738d26abf09c09df39b2169fc15adca","filename":"console/src/test/java/org/syncope/console/EditProfileTestITCase.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -25,8 +25,7 @@ public class EditProfileTestITCase extends AbstractTest {\n \n     @Override\n     @Before\n-    public void setUp()\n-            throws Exception {\n+    public void setUp() throws Exception {\n \n         super.setUp(BASE_URL, \"*firefox\");\n     }\n@@ -39,9 +38,8 @@ public void selfRegistration() {\n \n         selenium.click(\"//div/span/span/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//span[contains(text(),'Attributes')]\\\");\",\n-                \"30000\");\n+        selenium\n+                .waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n \n         selenium.click(\"css=a.w_close\");\n \n@@ -69,9 +67,8 @@ public void editUserProfile() {\n         selenium.click(\"id=username\");\n         selenium.click(\"//span[@id='editProfile']/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//span[contains(text(),'Attributes')]\\\");\",\n-                \"30000\");\n+        selenium\n+                .waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n \n         assertTrue(selenium.isElementPresent(\"//input[@value='user1']\"));\n "},{"sha":"741b4e358591efd0a15c434dddc0b8177f1d586c","filename":"console/src/test/java/org/syncope/console/ResourceTestITCase.java","status":"modified","additions":15,"deletions":30,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,14 +26,12 @@ public class ResourceTestITCase extends AbstractTest {\n     public void browseCreateModal() {\n         selenium.click(\"css=img[alt=\\\"Resources\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/div/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\",\n-                \"30000\");\n+                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");\n \n         selenium.click(\"css=a.w_close\");\n     }\n@@ -42,25 +40,20 @@ public void browseCreateModal() {\n     public void browseEditModal() {\n         selenium.click(\"css=img[alt=\\\"Resources\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//td[4]/span/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\",\n-                \"30000\");\n+                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");\n \n         selenium.click(\"//li[2]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//tbody/tr\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//tbody/tr\\\");\", \"30000\");\n \n         selenium.click(\"//tbody/tr[2]/td/input\");\n \n-        assertTrue(selenium.getConfirmation().matches(\n-                \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n+        assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n \n         selenium.click(\"name=apply\");\n     }\n@@ -69,27 +62,23 @@ public void browseEditModal() {\n     public void delete() {\n         selenium.click(\"css=img[alt=\\\"Resources\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//tr[3]/td[4]/span/span[9]/a\");\n \n-        assertTrue(selenium.getConfirmation().matches(\n-                \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n+        assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }\n \n     @Test\n     public void checkSecurityTab() {\n         selenium.click(\"css=img[alt=\\\"Resources\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//td[4]/span/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\",\n-                \"30000\");\n+                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");\n \n         selenium.click(\"//li[4]/a\");\n \n@@ -106,21 +95,17 @@ public void checkSecurityTab() {\n     public void checkConnection() {\n         selenium.click(\"css=img[alt=\\\"Resources\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//*[@id=\\\"users-contain\\\"]//\"\n-                + \"*[span=\\\"ws-target-resource-delete\\\"]/../td[4]/span/span[7]/a\");\n+        selenium\n+                .click(\"//*[@id=\\\"users-contain\\\"]//\" + \"*[span=\\\"ws-target-resource-delete\\\"]/../td[4]/span/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\",\n-                \"30000\");\n+                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\", \"30000\");\n \n         selenium.click(\"//li[3]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//span[text()='endpoint']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//span[text()='endpoint']\\\");\", \"30000\");\n \n         selenium.click(\"//div[2]/form/div[2]/div[3]/span/span/div[2]/a/img\");\n "},{"sha":"8c80ab46dc9efe6bf4d94a1c67c65d0ed81d6246","filename":"console/src/test/java/org/syncope/console/RoleTestITCase.java","status":"modified","additions":37,"deletions":83,"changes":120,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FRoleTestITCase.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,22 +26,17 @@ public class RoleTestITCase extends AbstractTest {\n     public void createRootNodeModal() {\n         selenium.click(\"css=img[alt=\\\"Roles\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\", \"30000\");\n \n-        selenium.click(\"//div[3]/span/div/div/table\"\n-                + \"/tbody/tr/td[2]/table/tbody/tr/td[2]/a\");\n+        selenium.click(\"//div[3]/span/div/div/table\" + \"/tbody/tr/td[2]/table/tbody/tr/td[2]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//div[3]/span[2]/span/div/p/span/span/a\\\");\",\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//div[3]/span[2]/span/div/p/span/span/a\\\");\",\n                 \"30000\");\n \n         selenium.click(\"//div[3]/span[2]/span/div/p/span/span/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//span[contains(text(),'Attributes')]\\\");\",\n-                \"30000\");\n+        selenium\n+                .waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n \n         selenium.selectFrame(\"relative=up\");\n         selenium.click(\"css=a.w_close\");\n@@ -51,26 +46,20 @@ public void createRootNodeModal() {\n     public void browseCreateModal() {\n         selenium.click(\"css=img[alt=\\\"Roles\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\", \"30000\");\n \n-        selenium.click(\"//div[3]/span/div/div/table[3]/tbody/tr/td[4]/\"\n-                + \"table/tbody/tr/td[2]/a\");\n+        selenium.click(\"//div[3]/span/div/div/table[3]/tbody/tr/td[4]/\" + \"table/tbody/tr/td[2]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//div[3]/span[2]/span/span/div/p/span[2]/span/a\\\");\",\n-                \"30000\");\n+                + \"\\\"//div[3]/span[2]/span/span/div/p/span[2]/span/a\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/span[2]/span/span/div/p/span[2]/span/a\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//iframe\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//iframe\\\");\", \"30000\");\n \n         selenium.selectFrame(\"relative=up\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//div[2]/form/div[2]/ul/li[1]/a/span\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//div[2]/form/div[2]/ul/li[1]/a/span\\\");\", \"30000\");\n \n         selenium.click(\"//div[2]/form/div[2]/ul/li[1]/a/span\");\n         selenium.click(\"//div[2]/form/div[2]/ul/li[2]/a/span\");\n@@ -86,26 +75,20 @@ public void browseCreateModal() {\n     public void browseEditModal() {\n         selenium.click(\"css=img[alt=\\\"Roles\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\", \"30000\");\n \n-        selenium.click(\"//div[3]/span/div/div/table[3]/tbody/tr/td[4]/\"\n-                + \"table/tbody/tr/td[2]/a\");\n+        selenium.click(\"//div[3]/span/div/div/table[3]/tbody/tr/td[4]/\" + \"table/tbody/tr/td[2]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//div[3]/span[2]/span/span/div/p/span[2]/span/a[2]\\\");\",\n-                \"30000\");\n+                + \"\\\"//div[3]/span[2]/span/span/div/p/span[2]/span/a[2]\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/span[2]/span/span/div/p/span[2]/span/a[2]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//iframe\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//iframe\\\");\", \"30000\");\n \n         selenium.selectFrame(\"relative=up\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//div[2]/form/div[2]/ul/li[1]/a/span\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//div[2]/form/div[2]/ul/li[1]/a/span\\\");\", \"30000\");\n \n         selenium.click(\"//div[2]/form/div[2]/ul/li[1]/a/span\");\n         selenium.click(\"//div[2]/form/div[2]/ul/li[2]/a/span\");\n@@ -121,55 +104,40 @@ public void browseEditModal() {\n     public void checkSecurityTab() {\n         selenium.click(\"css=img[alt=\\\"Roles\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\", \"30000\");\n \n-        selenium.click(\"//div[3]/span/div/div/table[3]/tbody/tr/td[4]/\"\n-                + \"table/tbody/tr/td[2]/a\");\n+        selenium.click(\"//div[3]/span/div/div/table[3]/tbody/tr/td[4]/\" + \"table/tbody/tr/td[2]/a\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div/form/div[2]/ul/li[6]/a\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div/form/div[2]/ul/li[6]/a\\\");\", \"30000\");\n \n         selenium.click(\"//div/form/div[2]/ul/li[6]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/div[6]/span/div/div[2]/div/label\\\");\",\n-                \"30000\");\n+                + \"\\\"//form/div[2]/div/div[6]/span/div/div[2]/div/label\\\");\", \"30000\");\n     }\n \n     @Test\n     public void browseUserEditModal() {\n         selenium.click(\"css=img[alt=\\\"Roles\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\", \"30000\");\n \n-        selenium.click(\"//div[3]/span/div/div/table[2]/tbody/tr/td[3]/\"\n-                + \"table/tbody/tr/td[2]/a\");\n+        selenium.click(\"//div[3]/span/div/div/table[2]/tbody/tr/td[3]/\" + \"table/tbody/tr/td[2]/a\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div/form/div[2]/ul/li[7]/a\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div/form/div[2]/ul/li[7]/a\\\");\", \"30000\");\n \n         selenium.click(\"//div/form/div[2]/ul/li[7]/a\");\n \n         selenium.click(\"//input[@name=\\\"userListContainer:search\\\"]\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//table/tbody/tr/td[4]/span/span[7]/a\\\");\",\n-                \"30000\");\n+        selenium\n+                .waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//table/tbody/tr/td[4]/span/span[7]/a\\\");\", \"30000\");\n \n-        selenium.click(\n-                \"//div[3]/span[2]/span/span/div/form/div\"\n+        selenium.click(\"//div[3]/span[2]/span/span/div/form/div\"\n                 + \"[2]/div[2]/div/div/span/div/table/tbody/tr/td[4]/span/span[7]/a\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/span/div/div/div[contains(text(),'Username')]\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\"\n+                + \"\\\"//form/div[2]/div/span/div/div/div[contains(text(),'Username')]\\\");\", \"30000\");\n \n         selenium.selectFrame(\"relative=up\");\n         selenium.click(\"css=a.w_close\");\n@@ -179,50 +147,36 @@ public void browseUserEditModal() {\n     public void deleteUser() {\n         selenium.click(\"css=img[alt=\\\"Roles\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\", \"30000\");\n \n-        selenium.click(\"//div[3]/span/div/div/table[2]/tbody/tr/td[3]/\"\n-                + \"table/tbody/tr/td[2]/a\");\n+        selenium.click(\"//div[3]/span/div/div/table[2]/tbody/tr/td[3]/\" + \"table/tbody/tr/td[2]/a\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div/form/div[2]/ul/li[7]/a\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div/form/div[2]/ul/li[7]/a\\\");\", \"30000\");\n \n         selenium.click(\"//div/form/div[2]/ul/li[7]/a\");\n \n         selenium.click(\"//input[@name=\\\"userListContainer:search\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//span[9]/a\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//span[9]/a\\\");\", \"30000\");\n \n-        selenium.click(\n-                \"//div[3]/span[2]/span/span/div/form/div\"\n+        selenium.click(\"//div[3]/span[2]/span/span/div/form/div\"\n                 + \"[2]/div[2]/div/div/span/div/table/tbody/tr[2]/td[4]/span/span[9]/a\");\n \n-        assertTrue(selenium.getConfirmation().matches(\n-                \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n+        assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }\n \n     @Test\n     public void deleteRole() {\n         selenium.click(\"css=img[alt=\\\"Roles\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='navigationPane']\\\");\", \"30000\");\n \n-        selenium.click(\"//div[3]/span/div/div/table[10]/tbody/tr/td[6]/\"\n-                + \"table/tbody/tr/td[2]/a\");\n+        selenium.click(\"//div[3]/span/div/div/table[10]/tbody/tr/td[6]/\" + \"table/tbody/tr/td[2]/a\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div/p/span[2]/span/a[3]\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div/p/span[2]/span/a[3]\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/span[2]/span/span/div/p/span[2]/span/a[3]\");\n \n-        assertTrue(selenium.getConfirmation().matches(\n-                \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n+        assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }\n }\n\\ No newline at end of file"},{"sha":"efda38abc450dc295e4562cafcb5836de565dc64","filename":"console/src/test/java/org/syncope/console/SchemaTestITCase.java","status":"modified","additions":6,"deletions":14,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSchemaTestITCase.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,41 +26,33 @@ public class SchemaTestITCase extends AbstractTest {\n     public void create() {\n         selenium.click(\"css=img[alt=\\\"Schema\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n         selenium.click(\"//div[3]/div/div/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//*[@id='_wicket_window_0']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//*[@id='_wicket_window_0']\\\");\", \"30000\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//*[@name='name:textField']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//*[@name='name:textField']\\\");\", \"30000\");\n \n         selenium.select(\"name=type:dropDownChoiceField\", \"value=0\");\n         selenium.type(\"name=name:textField\", \"newschema\");\n         selenium.click(\"name=apply\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isTextPresent(\\\"newschema\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isTextPresent(\\\"newschema\\\");\", \"30000\");\n     }\n \n     @Test\n     public void delete() {\n         selenium.click(\"css=img[alt=\\\"Schema\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n         selenium.click(\"//div[@id='membership']/ul/li[3]/a/span\");\n \n         selenium.click(\"//table/tbody/tr/td[3]/span/span[9]/a\");\n \n-        assertTrue(selenium.getConfirmation().matches(\n-                \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n+        assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n     }\n }"},{"sha":"0d33f4d11a31514bd01cc11945b8f27245fd824a","filename":"console/src/test/java/org/syncope/console/TaskTestITCase.java","status":"modified","additions":7,"deletions":16,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FTaskTestITCase.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,24 +26,19 @@ public class TaskTestITCase extends AbstractTest {\n     public void execute() {\n         selenium.click(\"css=img[alt=\\\"Tasks\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[4]/a\");\n         selenium.click(\"//table/tbody/tr/td[7]/span/span[3]/a\");\n \n-        selenium.waitForCondition(\"selenium.isTextPresent(\"\n-                + \"\\\"Operation executed successfully\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Operation executed successfully\\\");\", \"30000\");\n \n         selenium.click(\"//table/tbody/tr/td[7]/span/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/div/span/div/div/div[2]/span/input\\\");\",\n-                \"30000\");\n+                + \"\\\"//form/div[2]/div/div/span/div/div/div[2]/span/input\\\");\", \"30000\");\n \n-        assertTrue(selenium.isElementPresent(\n-                \"//form/div[2]/div[2]/span/table/tbody/tr/td\"));\n+        assertTrue(selenium.isElementPresent(\"//form/div[2]/div[2]/span/table/tbody/tr/td\"));\n \n         selenium.click(\"css=a.w_close\");\n     }\n@@ -52,17 +47,13 @@ public void execute() {\n     public void delete() {\n         selenium.click(\"css=img[alt=\\\"Tasks\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n         selenium.click(\"//table/tbody/tr[4]/td[7]/span/span[9]/a\");\n \n-        assertTrue(selenium.getConfirmation().matches(\n-                \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n+        assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n \n-        selenium.waitForCondition(\n-                \"selenium.isTextPresent(\\\"Operation executed successfully\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isTextPresent(\\\"Operation executed successfully\\\");\", \"30000\");\n     }\n }"},{"sha":"238c80c1552e408403e57d910f8dc543c7c00f71","filename":"console/src/test/java/org/syncope/console/UserTestITCase.java","status":"modified","additions":16,"deletions":33,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FUserTestITCase.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -27,14 +27,12 @@ public class UserTestITCase extends AbstractTest {\n     public void browseCreateModal() {\n         selenium.click(\"css=img[alt=\\\"Users\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//a[contains(text(),'Create new user')]\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//span[contains(text(),'Attributes')]\\\");\",\n-                \"30000\");\n+        selenium\n+                .waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//span[contains(text(),'Attributes')]\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n@@ -49,20 +47,14 @@ public void browseCreateModal() {\n     public void browseEditModal() {\n         selenium.click(\"css=img[alt=\\\"Users\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         //Edit user3\n-        selenium.click(\n-                \"//*[@id=\\\"users-contain\\\"]//*[span=3]/../td[4]/span/span[7]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[span=3]/../td[4]/span/span[7]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//input[@value='testUsername']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@value='testUsername']\\\");\", \"30000\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//input[@value='Doe']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@value='Doe']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n@@ -76,46 +68,37 @@ public void browseEditModal() {\n     public void search() {\n         selenium.click(\"css=img[alt=\\\"Users\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"link=Search\");\n         selenium.select(\"//td[3]/select\", \"label=MEMBERSHIP\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//td[4]/select[option='8 otherchild']\\\");\",\n-                \"30000\");\n+        selenium\n+                .waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//td[4]/select[option='8 otherchild']\\\");\", \"30000\");\n \n         selenium.select(\"//td[4]/select\", \"label=8 otherchild\");\n         selenium.click(\"name=search\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//*[@id='users-contain']//*[span=1]\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//*[@id='users-contain']//*[span=1]\\\");\", \"30000\");\n     }\n \n     @Test\n     public void delete() {\n         selenium.click(\"css=img[alt=\\\"Users\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\n-                \"//*[@id=\\\"users-contain\\\"]//*[span=4]/../td[4]/span/span[9]/a\");\n+        selenium.click(\"//*[@id=\\\"users-contain\\\"]//*[span=4]/../td[4]/span/span[9]/a\");\n \n-        assertTrue(selenium.getConfirmation().matches(\n-                \"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n+        assertTrue(selenium.getConfirmation().matches(\"^Do you really want to delete the selected item[\\\\s\\\\S]$\"));\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//div[@id='propagation']/span\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//div[@id='propagation']/span\\\");\", \"30000\");\n \n         selenium.click(\"//span/span/div/a\");\n \n         // it depends on the execution order of tests: resources\n         // 'ws-target-resource-delete' could have been deleted from\n         // ResourceTestITCase#delete\n-        selenium.waitForCondition(\"selenium.isTextPresent(\"\n-                + \"\\\"Operation executed successfully\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Operation executed successfully\\\");\", \"30000\");\n     }\n }"},{"sha":"075430398cafbbb48a316a776d75bb816840df8e","filename":"core/src/main/java/org/syncope/core/audit/AuditManager.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Faudit%2FAuditManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Faudit%2FAuditManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Faudit%2FAuditManager.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -36,8 +36,8 @@ private String getLoggerName(final AuditElements.Category category, final Enum<?\n             final AuditElements.Result result) {\n \n         StringBuilder loggerName = new StringBuilder();\n-        loggerName.append(SyncopeLoggerType.AUDIT.getPrefix()).append('.').\n-                append(category.name()).append('.').append(subcategory.name()).append('.').append(result.name());\n+        loggerName.append(SyncopeLoggerType.AUDIT.getPrefix()).append('.').append(category.name()).append('.').append(\n+                subcategory.name()).append('.').append(result.name());\n         return loggerName.toString();\n     }\n \n@@ -51,9 +51,9 @@ public void audit(final AuditElements.Category category, final Enum<?> subcatego\n             final AuditElements.Result result, final String message, final Throwable t) {\n \n         if (category == null || subcategory == null || result == null) {\n-            LOG.error(\"Invalid request: some null items {} {} {}\", new Object[]{category, subcategory, result});\n+            LOG.error(\"Invalid request: some null items {} {} {}\", new Object[] { category, subcategory, result });\n         } else if (!AuditElements.getSubCategories(category).contains(subcategory)) {\n-            LOG.error(\"Invalid request: {} does not belong to {}\", new Object[]{subcategory, category});\n+            LOG.error(\"Invalid request: {} does not belong to {}\", new Object[] { subcategory, category });\n         } else {\n             StringBuilder auditMessage = new StringBuilder();\n "},{"sha":"e881dc4b2af48d267ce65abdf89f3ba17b068b95","filename":"core/src/main/java/org/syncope/core/audit/JNDIFallbackConnectionSource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Faudit%2FJNDIFallbackConnectionSource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Faudit%2FJNDIFallbackConnectionSource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Faudit%2FJNDIFallbackConnectionSource.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -132,8 +132,7 @@ public void stop() {\n     }\n \n     @Override\n-    public Connection getConnection()\n-            throws SQLException {\n+    public Connection getConnection() throws SQLException {\n \n         chooseDelegate();\n         return delegate.getConnection();"},{"sha":"c72ec46ce12527a7d0598c18346b1ba3e76c8f54","filename":"core/src/main/java/org/syncope/core/connid/SLF4JLogger.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fconnid%2FSLF4JLogger.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fconnid%2FSLF4JLogger.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fconnid%2FSLF4JLogger.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -34,10 +34,7 @@ public class SLF4JLogger implements LogSpi {\n     private static final Logger LOG = LoggerFactory.getLogger(SLF4JLogger.class);\n \n     @Override\n-    public final void log(final Class<?> clazz,\n-            final String method,\n-            final Level level,\n-            final String message,\n+    public final void log(final Class<?> clazz, final String method, final Level level, final String message,\n             final Throwable ex) {\n \n         final StringBuilder logMessage = new StringBuilder();\n@@ -85,8 +82,7 @@ public final void log(final Class<?> clazz,\n     }\n \n     @Override\n-    public final boolean isLoggable(final Class<?> clazz,\n-            final Level level) {\n+    public final boolean isLoggable(final Class<?> clazz, final Level level) {\n \n         boolean loggable;\n "},{"sha":"e661e480b82ddfeaf3921e63c9b69a757a19d80a","filename":"core/src/main/java/org/syncope/core/init/ActivitiWorkflowLoader.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FActivitiWorkflowLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FActivitiWorkflowLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FActivitiWorkflowLoader.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -38,26 +38,26 @@ public class ActivitiWorkflowLoader {\n     private RepositoryService repositoryService;\n \n     public void load() {\n-        List<ProcessDefinition> processes = repositoryService.createProcessDefinitionQuery().\n-                processDefinitionKey(ActivitiUserWorkflowAdapter.WF_PROCESS_ID).list();\n+        List<ProcessDefinition> processes = repositoryService.createProcessDefinitionQuery().processDefinitionKey(\n+                ActivitiUserWorkflowAdapter.WF_PROCESS_ID).list();\n         LOG.debug(ActivitiUserWorkflowAdapter.WF_PROCESS_ID + \" Activiti processes in repository: {}\", processes);\n \n         // Only loads process definition from file if not found in repository\n         if (processes.isEmpty()) {\n             InputStream wfDefinitionStream = null;\n             try {\n-                wfDefinitionStream = getClass().getResourceAsStream(\"/\"\n-                        + ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE);\n+                wfDefinitionStream = getClass().getResourceAsStream(\n+                        \"/\" + ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE);\n \n-                repositoryService.createDeployment().addInputStream(\n-                        ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, wfDefinitionStream).deploy();\n+                repositoryService.createDeployment().addInputStream(ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE,\n+                        wfDefinitionStream).deploy();\n             } finally {\n                 if (wfDefinitionStream != null) {\n                     try {\n                         wfDefinitionStream.close();\n                     } catch (IOException e) {\n-                        LOG.error(\"While closing input stream for {}\",\n-                                ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, e);\n+                        LOG.error(\"While closing input stream for {}\", ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE,\n+                                e);\n                     }\n                 }\n             }"},{"sha":"928092a92234a900c9303de95fe3ac278f28a337","filename":"core/src/main/java/org/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -71,8 +71,7 @@ private String getBeanName(final ExternalResource resource) {\n      * @return live connector bran for given resource\n      * @throws BeansException in case the connector is not registered in the context\n      */\n-    public ConnectorFacadeProxy getConnector(final ExternalResource resource)\n-            throws BeansException, NotFoundException {\n+    public ConnectorFacadeProxy getConnector(final ExternalResource resource) throws BeansException, NotFoundException {\n \n         // Try to re-create connector bean from underlying resource\n         // (useful for managing failover scenarios)\n@@ -83,8 +82,7 @@ public ConnectorFacadeProxy getConnector(final ExternalResource resource)\n         return (ConnectorFacadeProxy) getBeanFactory().getBean(getBeanName(resource));\n     }\n \n-    public ConnectorFacadeProxy createConnectorBean(final ExternalResource resource)\n-            throws NotFoundException {\n+    public ConnectorFacadeProxy createConnectorBean(final ExternalResource resource) throws NotFoundException {\n \n         final Set<ConnConfProperty> configuration = new HashSet<ConnConfProperty>();\n \n@@ -122,8 +120,7 @@ public ConnectorFacadeProxy createConnectorBean(final ExternalResource resource)\n      * @throws NotFoundException when not able to fetch all the required data.\n      */\n     public ConnectorFacadeProxy createConnectorBean(final ConnInstance connInstance,\n-            final Set<ConnConfProperty> configuration)\n-            throws NotFoundException {\n+            final Set<ConnConfProperty> configuration) throws NotFoundException {\n \n         final ConnInstance connInstanceClone = (ConnInstance) SerializationUtils.clone(connInstance);\n \n@@ -132,8 +129,7 @@ public ConnectorFacadeProxy createConnectorBean(final ConnInstance connInstance,\n         return new ConnectorFacadeProxy(connInstanceClone, connBundleManager);\n     }\n \n-    public void registerConnector(final ExternalResource resource)\n-            throws NotFoundException {\n+    public void registerConnector(final ExternalResource resource) throws NotFoundException {\n \n         final ConnectorFacadeProxy connector = createConnectorBean(resource);\n         LOG.debug(\"Connector to be registered: {}\", connector);\n@@ -164,8 +160,8 @@ public void load() {\n                 LOG.info(\"Registering resource-connector pair {}-{}\", resource, resource.getConnector());\n                 registerConnector(resource);\n             } catch (Exception e) {\n-                LOG.error(\"While registering resource-connector pair {}-{}\",\n-                        new Object[]{resource, resource.getConnector(), e});\n+                LOG.error(\"While registering resource-connector pair {}-{}\", new Object[] { resource,\n+                        resource.getConnector(), e });\n             }\n         }\n "},{"sha":"57a27919fb74f9db172a9a5279829d9cd754b390","filename":"core/src/main/java/org/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":7,"deletions":10,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -109,8 +109,7 @@ public static String getTriggerName(final String jobName) {\n         return \"Trigger_\" + jobName;\n     }\n \n-    private void registerJob(final String jobName, final Job jobInstance, final String cronExpression)\n-            throws Exception {\n+    private void registerJob(final String jobName, final Job jobInstance, final String cronExpression) throws Exception {\n \n         // 0. unregister job\n         unregisterJob(jobName);\n@@ -136,8 +135,7 @@ private void registerJob(final String jobName, final Job jobInstance, final Stri\n         }\n     }\n \n-    public void registerJob(final Task task, final String jobClassName, final String cronExpression)\n-            throws Exception {\n+    public void registerJob(final Task task, final String jobClassName, final String cronExpression) throws Exception {\n \n         Class jobClass = Class.forName(jobClassName);\n         Job jobInstance = (Job) getBeanFactory().createBean(jobClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n@@ -151,8 +149,8 @@ public void registerJob(final Task task, final String jobClassName, final String\n                 try {\n                     syncJobActionsClass = Class.forName(jobActionsClassName);\n                 } catch (Throwable t) {\n-                    LOG.error(\"Class {} not found, reverting to {}\",\n-                            new Object[]{jobActionsClassName, syncJobActionsClass.getName(), t});\n+                    LOG.error(\"Class {} not found, reverting to {}\", new Object[] { jobActionsClassName,\n+                            syncJobActionsClass.getName(), t });\n                 }\n             }\n             SyncJobActions syncJobActions = (SyncJobActions) getBeanFactory().createBean(syncJobActionsClass,\n@@ -164,11 +162,10 @@ public void registerJob(final Task task, final String jobClassName, final String\n         registerJob(getJobName(task), jobInstance, cronExpression);\n     }\n \n-    public void registerJob(final Report report)\n-            throws Exception {\n+    public void registerJob(final Report report) throws Exception {\n \n-        Job jobInstance = (Job) getBeanFactory().createBean(ReportJob.class,\n-                AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+        Job jobInstance = (Job) getBeanFactory().createBean(ReportJob.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE,\n+                false);\n         ((ReportJob) jobInstance).setReportId(report.getId());\n \n         registerJob(getJobName(report), jobInstance, report.getCronExpression());"},{"sha":"5f0dc7c87df0b5638cb6bfad1ee74251c6c03cd1","filename":"core/src/main/java/org/syncope/core/init/LoggerLoader.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FLoggerLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FLoggerLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FLoggerLoader.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -64,7 +64,8 @@ public void load() {\n                     syncopeLogger.setName(logger.getName());\n                     syncopeLogger.setLevel(SyncopeLoggerLevel.fromLevel(logger.getLevel()));\n                     syncopeLogger.setType(logger.getName().startsWith(SyncopeLoggerType.AUDIT.getPrefix())\n-                            ? SyncopeLoggerType.AUDIT : SyncopeLoggerType.LOG);\n+                            ? SyncopeLoggerType.AUDIT\n+                            : SyncopeLoggerType.LOG);\n                     loggerDAO.save(syncopeLogger);\n                 }\n             }"},{"sha":"e62c410c7723625ea744f61af24155386db786f4","filename":"core/src/main/java/org/syncope/core/init/SpringContextInitializer.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -53,13 +53,11 @@ public void setServletContext(final ServletContext servletContext) {\n     }\n \n     @Override\n-    public void setBeanFactory(final BeanFactory beanFactory)\n-            throws BeansException {\n+    public void setBeanFactory(final BeanFactory beanFactory) throws BeansException {\n     }\n \n     @Override\n-    public void afterPropertiesSet()\n-            throws Exception {\n+    public void afterPropertiesSet() throws Exception {\n \n         contentLoader.load();\n         connInstanceLoader.load();"},{"sha":"ea18a6d0799da6a9cb9886a556edb52a2727dad6","filename":"core/src/main/java/org/syncope/core/notification/NotificationManager.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -49,9 +49,7 @@\n  *\n  * @see NotificationTask\n  */\n-@Transactional(rollbackFor = {\n-    Throwable.class\n-})\n+@Transactional(rollbackFor = { Throwable.class })\n public class NotificationManager {\n \n     /**\n@@ -135,17 +133,20 @@ private NotificationTask getNotificationTask(final Notification notification, fi\n         final Map<String, Object> model = new HashMap<String, Object>();\n         for (AbstractAttr attr : user.getAttributes()) {\n             List<String> values = attr.getValuesAsStrings();\n-            model.put(attr.getSchema().getName(),\n-                    values.isEmpty() ? \"\" : (values.size() == 1 ? values.iterator().next() : values));\n+            model.put(attr.getSchema().getName(), values.isEmpty()\n+                    ? \"\"\n+                    : (values.size() == 1\n+                            ? values.iterator().next()\n+                            : values));\n         }\n \n         String htmlBody;\n         String textBody;\n         try {\n-            htmlBody = VelocityEngineUtils.mergeTemplateIntoString(velocityEngine,\n-                    \"mailTemplates/\" + notification.getTemplate() + \".html.vm\", model);\n-            textBody = VelocityEngineUtils.mergeTemplateIntoString(velocityEngine,\n-                    \"mailTemplates/\" + notification.getTemplate() + \".txt.vm\", model);\n+            htmlBody = VelocityEngineUtils.mergeTemplateIntoString(velocityEngine, \"mailTemplates/\"\n+                    + notification.getTemplate() + \".html.vm\", model);\n+            textBody = VelocityEngineUtils.mergeTemplateIntoString(velocityEngine, \"mailTemplates/\"\n+                    + notification.getTemplate() + \".txt.vm\", model);\n         } catch (VelocityException e) {\n             LOG.error(\"Could not get mail body\", e);\n \n@@ -164,8 +165,7 @@ private NotificationTask getNotificationTask(final Notification notification, fi\n      * @param wfResult workflow result\n      * @throws NotFoundException if user contained in the workflow result cannot be found\n      */\n-    public void createTasks(final WorkflowResult<Long> wfResult)\n-            throws NotFoundException {\n+    public void createTasks(final WorkflowResult<Long> wfResult) throws NotFoundException {\n \n         SyncopeUser user = userDAO.find(wfResult.getResult());\n         if (user == null) {"},{"sha":"0fe24c6fab6062befa7b1a6dec9bd140c50462f5","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttr.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -34,8 +34,7 @@ public abstract class AbstractAttr extends AbstractBaseBean {\n \n     public abstract Long getId();\n \n-    public <T extends AbstractAttrValue> T addValue(final String value,\n-            final AttributableUtil attributableUtil)\n+    public <T extends AbstractAttrValue> T addValue(final String value, final AttributableUtil attributableUtil)\n             throws InvalidAttrValueException {\n \n         T attrValue;\n@@ -72,11 +71,9 @@ public <T extends AbstractAttrValue> T addValue(final String value,\n \n     public abstract <T extends AbstractSchema> void setSchema(T schema);\n \n-    public abstract <T extends AbstractAttrValue> boolean addValue(\n-            T attrValue);\n+    public abstract <T extends AbstractAttrValue> boolean addValue(T attrValue);\n \n-    public abstract <T extends AbstractAttrValue> boolean removeValue(\n-            T attrValue);\n+    public abstract <T extends AbstractAttrValue> boolean removeValue(T attrValue);\n \n     public List<String> getValuesAsStrings() {\n         List<String> result;\n@@ -94,11 +91,9 @@ public List<String> getValuesAsStrings() {\n \n     public abstract <T extends AbstractAttrValue> List<T> getValues();\n \n-    public abstract <T extends AbstractAttrValue> void setValues(\n-            List<T> attributeValues);\n+    public abstract <T extends AbstractAttrValue> void setValues(List<T> attributeValues);\n \n     public abstract <T extends AbstractAttrValue> T getUniqueValue();\n \n-    public abstract <T extends AbstractAttrValue> void setUniqueValue(\n-            T uniqueAttributeValue);\n+    public abstract <T extends AbstractAttrValue> void setUniqueValue(T uniqueAttributeValue);\n }"},{"sha":"4d35914b915fa6e693d6f18bcdd370b6e988eab8","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttrValue.java","status":"modified","additions":24,"deletions":19,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -52,21 +52,27 @@ public abstract class AbstractAttrValue extends AbstractBaseBean {\n     public abstract Long getId();\n \n     public Boolean getBooleanValue() {\n-        return booleanValue == null ? null : isBooleanAsInteger(booleanValue);\n+        return booleanValue == null\n+                ? null\n+                : isBooleanAsInteger(booleanValue);\n     }\n \n     public void setBooleanValue(final Boolean booleanValue) {\n         this.booleanValue = booleanValue == null\n-                ? null : getBooleanAsInteger(booleanValue);\n+                ? null\n+                : getBooleanAsInteger(booleanValue);\n     }\n \n     public Date getDateValue() {\n-        return dateValue == null ? null : new Date(dateValue.getTime());\n+        return dateValue == null\n+                ? null\n+                : new Date(dateValue.getTime());\n     }\n \n     public void setDateValue(final Date dateValue) {\n         this.dateValue = dateValue == null\n-                ? null : new Date(dateValue.getTime());\n+                ? null\n+                : new Date(dateValue.getTime());\n     }\n \n     public Double getDoubleValue() {\n@@ -94,11 +100,15 @@ public void setStringValue(final String stringValue) {\n     }\n \n     public <T> T getValue() {\n-        return (T) (booleanValue != null ? getBooleanValue()\n-                : (dateValue != null ? getDateValue()\n-                : (doubleValue != null ? getDoubleValue()\n-                : (longValue != null ? getLongValue()\n-                : stringValue))));\n+        return (T) (booleanValue != null\n+                ? getBooleanValue()\n+                : (dateValue != null\n+                        ? getDateValue()\n+                        : (doubleValue != null\n+                                ? getDoubleValue()\n+                                : (longValue != null\n+                                        ? getLongValue()\n+                                        : stringValue))));\n     }\n \n     public String getValueAsString() {\n@@ -114,26 +124,23 @@ public String getValueAsString() {\n                 if (getAttribute().getSchema().getFormatter() == null) {\n                     result = getLongValue().toString();\n                 } else {\n-                    result = getAttribute().getSchema().getFormatter().\n-                            format(getLongValue());\n+                    result = getAttribute().getSchema().getFormatter().format(getLongValue());\n                 }\n                 break;\n \n             case Double:\n                 if (getAttribute().getSchema().getFormatter() == null) {\n                     result = getDoubleValue().toString();\n                 } else {\n-                    result = getAttribute().getSchema().getFormatter().\n-                            format(getDoubleValue());\n+                    result = getAttribute().getSchema().getFormatter().format(getDoubleValue());\n                 }\n                 break;\n \n             case Date:\n                 if (getAttribute().getSchema().getFormatter() == null) {\n                     result = DATE_FORMAT.get().format(getDateValue());\n                 } else {\n-                    result = getAttribute().getSchema().getFormatter().\n-                            format(getDateValue());\n+                    result = getAttribute().getSchema().getFormatter().format(getDateValue());\n                 }\n                 break;\n \n@@ -148,12 +155,10 @@ public String getValueAsString() {\n \n     public abstract <T extends AbstractAttr> T getAttribute();\n \n-    public abstract <T extends AbstractAttr> void setAttribute(\n-            T attribute);\n+    public abstract <T extends AbstractAttr> void setAttribute(T attribute);\n \n     @Override\n     public String toString() {\n-        return ReflectionToStringBuilder.toString(this,\n-                ToStringStyle.MULTI_LINE_STYLE);\n+        return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);\n     }\n }"},{"sha":"77009f0eaff7813c5d9ed8dbccadb4af8f3ee9bb","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -45,9 +45,8 @@ public <T extends AbstractDerAttr> T getDerivedAttribute(final String derivedSch\n \n         T result = null;\n         T derivedAttribute;\n-        for (Iterator<? extends AbstractDerAttr> itor =\n-                getDerivedAttributes().iterator();\n-                result == null && itor.hasNext();) {\n+        for (Iterator<? extends AbstractDerAttr> itor = getDerivedAttributes().iterator(); result == null\n+                && itor.hasNext();) {\n \n             derivedAttribute = (T) itor.next();\n             if (derivedAttribute.getDerivedSchema() != null\n@@ -64,8 +63,8 @@ public <T extends AbstractVirAttr> T getVirtualAttribute(final String virtualSch\n \n         T result = null;\n         T virtualAttribute;\n-        for (Iterator<? extends AbstractVirAttr> itor = getVirtualAttributes().iterator();\n-                result == null && itor.hasNext();) {\n+        for (Iterator<? extends AbstractVirAttr> itor = getVirtualAttributes().iterator(); result == null\n+                && itor.hasNext();) {\n \n             virtualAttribute = (T) itor.next();\n "},{"sha":"0c6038d6c2f5d81165c6d125c73a7cf4b5d42a5b","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractBaseBean.java","status":"modified","additions":21,"deletions":27,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractBaseBean.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -38,27 +38,23 @@ public abstract class AbstractBaseBean implements Serializable {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            AbstractBaseBean.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractBaseBean.class);\n \n-    protected static final ThreadLocal<SimpleDateFormat> DATE_FORMAT =\n-            new ThreadLocal<SimpleDateFormat>() {\n+    protected static final ThreadLocal<SimpleDateFormat> DATE_FORMAT = new ThreadLocal<SimpleDateFormat>() {\n \n-                @Override\n-                protected SimpleDateFormat initialValue() {\n-                    return new SimpleDateFormat(\n-                            SyncopeConstants.DEFAULT_DATE_PATTERN);\n-                }\n-            };\n+        @Override\n+        protected SimpleDateFormat initialValue() {\n+            return new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN);\n+        }\n+    };\n \n-    protected static final ThreadLocal<DecimalFormat> DECIMAL_FORMAT =\n-            new ThreadLocal<DecimalFormat>() {\n+    protected static final ThreadLocal<DecimalFormat> DECIMAL_FORMAT = new ThreadLocal<DecimalFormat>() {\n \n-                @Override\n-                protected DecimalFormat initialValue() {\n-                    return new DecimalFormat();\n-                }\n-            };\n+        @Override\n+        protected DecimalFormat initialValue() {\n+            return new DecimalFormat();\n+        }\n+    };\n \n     private static final long serialVersionUID = -9017214159540857901L;\n \n@@ -81,7 +77,9 @@ public final Boolean isBooleanAsInteger(final Integer property) {\n      * @return the integer corresponding to the property param\n      */\n     public final Integer getBooleanAsInteger(final Boolean value) {\n-        return Boolean.TRUE.equals(value) ? 1 : 0;\n+        return Boolean.TRUE.equals(value)\n+                ? 1\n+                : 0;\n     }\n \n     /**\n@@ -90,20 +88,17 @@ public final Integer getBooleanAsInteger(final Boolean value) {\n     private String[] getExcludeFields() {\n         Set<String> excludeFields = new HashSet<String>();\n \n-        PropertyDescriptor[] propertyDescriptors =\n-                BeanUtils.getPropertyDescriptors(getClass());\n+        PropertyDescriptor[] propertyDescriptors = BeanUtils.getPropertyDescriptors(getClass());\n         for (int i = 0; i < propertyDescriptors.length; i++) {\n \n-            if (propertyDescriptors[i].getPropertyType().isInstance(\n-                    Collections.EMPTY_SET)\n-                    || propertyDescriptors[i].getPropertyType().isInstance(\n-                    Collections.EMPTY_LIST)) {\n+            if (propertyDescriptors[i].getPropertyType().isInstance(Collections.EMPTY_SET)\n+                    || propertyDescriptors[i].getPropertyType().isInstance(Collections.EMPTY_LIST)) {\n \n                 excludeFields.add(propertyDescriptors[i].getName());\n             }\n         }\n \n-        return excludeFields.toArray(new String[]{});\n+        return excludeFields.toArray(new String[] {});\n     }\n \n     @Override\n@@ -123,8 +118,7 @@ public String toString() {\n             method = BeanUtils.findMethod(getClass(), \"getName\");\n         }\n \n-        StringBuffer result = new StringBuffer().append(\n-                getClass().getSimpleName()).append(\"[\");\n+        StringBuffer result = new StringBuffer().append(getClass().getSimpleName()).append(\"[\");\n         if (method != null) {\n             try {\n                 result.append(method.invoke(this));"},{"sha":"7094ff2d03af668159a118a6462bac7947f11e59","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractDerAttr.java","status":"modified","additions":19,"deletions":26,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractDerAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -47,41 +47,35 @@ public Long getId() {\n      * @param attributes the set of attributes against which evaluate this derived attribute\n      * @return the value of this derived attribute\n      */\n-    public String getValue(\n-            final Collection<? extends AbstractAttr> attributes) {\n+    public String getValue(final Collection<? extends AbstractAttr> attributes) {\n \n         final ConfigurableApplicationContext context = ApplicationContextManager.getApplicationContext();\n         final JexlUtil jexlUtil = context.getBean(JexlUtil.class);\n \n         // Prepare context using user attributes\n-        final JexlContext jexlContext = jexlUtil.addAttrsToContext(\n-                attributes, null);\n+        final JexlContext jexlContext = jexlUtil.addAttrsToContext(attributes, null);\n \n         final AbstractAttributable owner = getOwner();\n         if (owner instanceof SyncopeUser) {\n-            jexlContext.set(\"username\",\n-                    ((SyncopeUser) owner).getUsername() != null\n-                    ? ((SyncopeUser) owner).getUsername() : \"\");\n-            jexlContext.set(\"creationDate\",\n-                    ((SyncopeUser) owner).getCreationDate() != null\n-                    ? ((SyncopeUser) owner).getDateFormatter().\n-                    format(((SyncopeUser) owner).getCreationDate()) : \"\");\n-            jexlContext.set(\"lastLoginDate\",\n-                    ((SyncopeUser) owner).getLastLoginDate() != null\n-                    ? ((SyncopeUser) owner).getDateFormatter().\n-                    format(((SyncopeUser) owner).getLastLoginDate()) : \"\");\n-            jexlContext.set(\"failedLogins\",\n-                    ((SyncopeUser) owner).getFailedLogins() != null\n-                    ? ((SyncopeUser) owner).getFailedLogins() : \"\");\n-            jexlContext.set(\"changePwdDate\",\n-                    ((SyncopeUser) owner).getChangePwdDate() != null\n-                    ? ((SyncopeUser) owner).getDateFormatter().\n-                    format(((SyncopeUser) owner).getChangePwdDate()) : \"\");\n+            jexlContext.set(\"username\", ((SyncopeUser) owner).getUsername() != null\n+                    ? ((SyncopeUser) owner).getUsername()\n+                    : \"\");\n+            jexlContext.set(\"creationDate\", ((SyncopeUser) owner).getCreationDate() != null\n+                    ? ((SyncopeUser) owner).getDateFormatter().format(((SyncopeUser) owner).getCreationDate())\n+                    : \"\");\n+            jexlContext.set(\"lastLoginDate\", ((SyncopeUser) owner).getLastLoginDate() != null\n+                    ? ((SyncopeUser) owner).getDateFormatter().format(((SyncopeUser) owner).getLastLoginDate())\n+                    : \"\");\n+            jexlContext.set(\"failedLogins\", ((SyncopeUser) owner).getFailedLogins() != null\n+                    ? ((SyncopeUser) owner).getFailedLogins()\n+                    : \"\");\n+            jexlContext.set(\"changePwdDate\", ((SyncopeUser) owner).getChangePwdDate() != null\n+                    ? ((SyncopeUser) owner).getDateFormatter().format(((SyncopeUser) owner).getChangePwdDate())\n+                    : \"\");\n         }\n \n         // Evaluate expression using the context prepared before\n-        return jexlUtil.evaluate(\n-                getDerivedSchema().getExpression(), jexlContext);\n+        return jexlUtil.evaluate(getDerivedSchema().getExpression(), jexlContext);\n     }\n \n     public abstract <T extends AbstractAttributable> T getOwner();\n@@ -90,6 +84,5 @@ public String getValue(\n \n     public abstract <T extends AbstractDerSchema> T getDerivedSchema();\n \n-    public abstract <T extends AbstractDerSchema> void setDerivedSchema(\n-            T derivedSchema);\n+    public abstract <T extends AbstractDerSchema> void setDerivedSchema(T derivedSchema);\n }"},{"sha":"b158852dcb41774378e15b0e0d4727403a5136be","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractExec.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractExec.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -69,21 +69,25 @@ public void setMessage(String message) {\n \n     public Date getEndDate() {\n         return endDate == null\n-                ? null : new Date(endDate.getTime());\n+                ? null\n+                : new Date(endDate.getTime());\n     }\n \n     public void setEndDate(final Date endDate) {\n         this.endDate = endDate == null\n-                ? null : new Date(endDate.getTime());\n+                ? null\n+                : new Date(endDate.getTime());\n     }\n \n     public Date getStartDate() {\n         return startDate == null\n-                ? null : new Date(startDate.getTime());\n+                ? null\n+                : new Date(startDate.getTime());\n     }\n \n     public void setStartDate(final Date startDate) {\n         this.startDate = startDate == null\n-                ? null : new Date(startDate.getTime());\n+                ? null\n+                : new Date(startDate.getTime());\n     }\n }"},{"sha":"5f86603fc1ca2717c1625317b4c53d850c62d2bb","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractSchema.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -147,15 +147,11 @@ public AbstractValidator getValidator() {\n \n         if (getValidatorClass() != null && getValidatorClass().length() > 0) {\n             try {\n-                Constructor validatorConstructor =\n-                        Class.forName(getValidatorClass()).getConstructor(\n-                        new Class[]{getClass().getSuperclass()});\n-                validator =\n-                        (AbstractValidator) validatorConstructor.newInstance(\n-                        this);\n+                Constructor validatorConstructor = Class.forName(getValidatorClass()).getConstructor(\n+                        new Class[] { getClass().getSuperclass() });\n+                validator = (AbstractValidator) validatorConstructor.newInstance(this);\n             } catch (Exception e) {\n-                LOG.error(\"Could not instantiate validator of type \"\n-                        + getValidatorClass()\n+                LOG.error(\"Could not instantiate validator of type \" + getValidatorClass()\n                         + \", reverting to AttributeBasicValidator\", e);\n             }\n         }\n@@ -185,17 +181,15 @@ public void setEnumerationValues(final String enumerationValues) {\n \n     public String getConversionPattern() {\n         if (!getType().isConversionPatternNeeded()) {\n-            LOG.debug(\"Conversion pattern is not needed: {}'s type is {}\",\n-                    this, getType());\n+            LOG.debug(\"Conversion pattern is not needed: {}'s type is {}\", this, getType());\n         }\n \n         return conversionPattern;\n     }\n \n     public void setConversionPattern(final String conversionPattern) {\n         if (!getType().isConversionPatternNeeded()) {\n-            LOG.warn(\"Conversion pattern will be ignored: \"\n-                    + \"this attribute type is \" + getType());\n+            LOG.warn(\"Conversion pattern will be ignored: \" + \"this attribute type is \" + getType());\n         }\n \n         this.conversionPattern = conversionPattern;"},{"sha":"2e0b60a0d3453f957f83e62640cd24a564a59ec0","filename":"core/src/main/java/org/syncope/core/persistence/beans/AbstractVirSchema.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractVirSchema.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -18,7 +18,6 @@\n  */\n package org.syncope.core.persistence.beans;\n \n-\n import javax.persistence.Id;\n import javax.persistence.MappedSuperclass;\n import org.syncope.types.SchemaType;"},{"sha":"8bb14d630bcbd8459500363aa18c84cd76f78c3d","filename":"core/src/main/java/org/syncope/core/persistence/beans/AccountPolicy.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAccountPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAccountPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAccountPolicy.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -33,6 +33,8 @@ public AccountPolicy() {\n     public AccountPolicy(boolean global) {\n         super();\n \n-        this.type = global ? PolicyType.GLOBAL_ACCOUNT : PolicyType.ACCOUNT;\n+        this.type = global\n+                ? PolicyType.GLOBAL_ACCOUNT\n+                : PolicyType.ACCOUNT;\n     }\n }"},{"sha":"cfb57e98b33c1170f760de5953c8972321b4ef92","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnInstance.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -86,7 +86,7 @@ public class ConnInstance extends AbstractBaseBean {\n     /**\n      * External resources associated to the connector.\n      */\n-    @OneToMany(cascade = {CascadeType.ALL}, mappedBy = \"connector\")\n+    @OneToMany(cascade = { CascadeType.ALL }, mappedBy = \"connector\")\n     private List<ExternalResource> resources;\n \n     public ConnInstance() {\n@@ -119,18 +119,15 @@ public void setConnectorName(String connectorName) {\n     }\n \n     public Set<ConnConfProperty> getConfiguration() {\n-        Set<ConnConfProperty> result =\n-                XMLSerializer.<HashSet<ConnConfProperty>>deserialize(\n-                xmlConfiguration);\n+        Set<ConnConfProperty> result = XMLSerializer.<HashSet<ConnConfProperty>> deserialize(xmlConfiguration);\n         if (result == null) {\n             result = Collections.emptySet();\n         }\n         return result;\n     }\n \n     public void setConfiguration(final Set<ConnConfProperty> configuration) {\n-        xmlConfiguration = XMLSerializer.serialize(\n-                new HashSet<ConnConfProperty>(configuration));\n+        xmlConfiguration = XMLSerializer.serialize(new HashSet<ConnConfProperty>(configuration));\n     }\n \n     public Long getId() {"},{"sha":"8ae081473c1539ee0f13971336b54430a791fdb4","filename":"core/src/main/java/org/syncope/core/persistence/beans/ExternalResource.java","status":"modified","additions":7,"deletions":11,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FExternalResource.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -74,7 +74,7 @@ public class ExternalResource extends AbstractBaseBean {\n     /**\n      * The resource type is identified by the associated connector.\n      */\n-    @ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.MERGE})\n+    @ManyToOne(fetch = FetchType.EAGER, cascade = { CascadeType.MERGE })\n     @NotNull\n     private ConnInstance connector;\n \n@@ -83,8 +83,7 @@ public class ExternalResource extends AbstractBaseBean {\n      *\n      * List type cannot be used. Please, take a look at https://hibernate.onjira.com/browse/HHH-1718\n      */\n-    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true,\n-    fetch = FetchType.EAGER, mappedBy = \"resource\")\n+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"resource\")\n     @Valid\n     private Set<SchemaMapping> mappings;\n \n@@ -173,8 +172,7 @@ public boolean isForceMandatoryConstraint() {\n     }\n \n     public void setForceMandatoryConstraint(boolean forceMandatoryConstraint) {\n-        this.forceMandatoryConstraint =\n-                getBooleanAsInteger(forceMandatoryConstraint);\n+        this.forceMandatoryConstraint = getBooleanAsInteger(forceMandatoryConstraint);\n     }\n \n     public ConnInstance getConnector() {\n@@ -318,20 +316,18 @@ public void setSyncPolicy(SyncPolicy syncPolicy) {\n         this.syncPolicy = syncPolicy;\n     }\n \n-    public void setConnectorConfigurationProperties(\n-            final Set<ConnConfProperty> properties) {\n+    public void setConnectorConfigurationProperties(final Set<ConnConfProperty> properties) {\n \n         // create new set to make sure it's a serializable set implementation.\n-        xmlConfiguration = XMLSerializer.serialize(\n-                new HashSet<ConnConfProperty>(properties));\n+        xmlConfiguration = XMLSerializer.serialize(new HashSet<ConnConfProperty>(properties));\n     }\n \n     public Set<ConnConfProperty> getConfiguration() {\n         Set<ConnConfProperty> result = Collections.EMPTY_SET;\n \n         Set<ConnConfProperty> deserializedSet;\n         if (StringUtils.isNotBlank(xmlConfiguration)) {\n-            deserializedSet = XMLSerializer.<HashSet<ConnConfProperty>>deserialize(xmlConfiguration);\n+            deserializedSet = XMLSerializer.<HashSet<ConnConfProperty>> deserialize(xmlConfiguration);\n             if (deserializedSet != null) {\n                 result = deserializedSet;\n             }\n@@ -347,7 +343,7 @@ public String getSerializedSyncToken() {\n     public SyncToken getSyncToken() {\n         return serializedSyncToken == null\n                 ? null\n-                : XMLSerializer.<SyncToken>deserialize(serializedSyncToken);\n+                : XMLSerializer.<SyncToken> deserialize(serializedSyncToken);\n     }\n \n     public void setSerializedSyncToken(final String serializedSyncToken) {"},{"sha":"a47c754ac6707b358fa1e44d5bfd04fd6d1b58a3","filename":"core/src/main/java/org/syncope/core/persistence/beans/Notification.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -91,7 +91,7 @@ public Long getId() {\n     }\n \n     public NodeCond getAbout() {\n-        NodeCond result = XMLSerializer.<NodeCond>deserialize(xmlAbout);\n+        NodeCond result = XMLSerializer.<NodeCond> deserialize(xmlAbout);\n         if (result == null) {\n             result = new NodeCond();\n         }\n@@ -107,7 +107,7 @@ public void setAbout(NodeCond about) {\n     }\n \n     public NodeCond getRecipients() {\n-        NodeCond result = XMLSerializer.<NodeCond>deserialize(xmlRecipients);\n+        NodeCond result = XMLSerializer.<NodeCond> deserialize(xmlRecipients);\n         if (result == null) {\n             result = new NodeCond();\n         }"},{"sha":"fdaaf8d77dfa9f6c2887c125fbfc452e62f48418","filename":"core/src/main/java/org/syncope/core/persistence/beans/PasswordPolicy.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPasswordPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPasswordPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPasswordPolicy.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -34,6 +34,7 @@ public PasswordPolicy(boolean global) {\n         super();\n \n         this.type = global\n-                ? PolicyType.GLOBAL_PASSWORD : PolicyType.PASSWORD;\n+                ? PolicyType.GLOBAL_PASSWORD\n+                : PolicyType.PASSWORD;\n     }\n }"},{"sha":"56060986097dd262769e921c1c001de95f269b6f","filename":"core/src/main/java/org/syncope/core/persistence/beans/Policy.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPolicy.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -65,11 +65,10 @@ public PolicyType getType() {\n     }\n \n     public <T extends AbstractPolicySpec> T getSpecification() {\n-        return XMLSerializer.<T>deserialize(specification);\n+        return XMLSerializer.<T> deserialize(specification);\n     }\n \n-    public <T extends AbstractPolicySpec> void setSpecification(\n-            final T policy) {\n+    public <T extends AbstractPolicySpec> void setSpecification(final T policy) {\n \n         specification = XMLSerializer.serialize(policy);\n     }"},{"sha":"554a7fe6e2485127fc2000b63bee566a00fa5e0a","filename":"core/src/main/java/org/syncope/core/persistence/beans/PropagationTask.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPropagationTask.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -97,7 +97,7 @@ public void setOldAccountId(String oldAccountId) {\n     }\n \n     public Set<Attribute> getAttributes() {\n-        return XMLSerializer.<Set<Attribute>>deserialize(xmlAttributes);\n+        return XMLSerializer.<Set<Attribute>> deserialize(xmlAttributes);\n     }\n \n     public void setAttributes(final Set<Attribute> attributes) {\n@@ -116,8 +116,7 @@ public PropagationOperation getPropagationOperation() {\n         return propagationOperation;\n     }\n \n-    public void setPropagationOperation(\n-            PropagationOperation propagationOperation) {\n+    public void setPropagationOperation(PropagationOperation propagationOperation) {\n \n         this.propagationOperation = propagationOperation;\n     }"},{"sha":"32f0afb291e855f45a6a3f183d852f85747ffcc2","filename":"core/src/main/java/org/syncope/core/persistence/beans/Report.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReport.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -41,14 +41,12 @@ public class Report extends AbstractBaseBean {\n     @Column(unique = true, nullable = false)\n     private String name;\n \n-    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true,\n-    fetch = FetchType.EAGER, mappedBy = \"report\")\n+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"report\")\n     private List<ReportletConfInstance> reportletConfs;\n \n     private String cronExpression;\n \n-    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true,\n-    mappedBy = \"report\")\n+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"report\")\n     private List<ReportExec> executions;\n \n     public Report() {\n@@ -71,8 +69,7 @@ public void setName(String name) {\n     }\n \n     public boolean addExec(ReportExec exec) {\n-        return exec != null && !executions.contains(exec)\n-                && executions.add(exec);\n+        return exec != null && !executions.contains(exec) && executions.add(exec);\n     }\n \n     public boolean removeExec(ReportExec exec) {\n@@ -114,12 +111,13 @@ public boolean removeReportletConf(ReportletConf reportletConf) {\n             }\n         }\n \n-        return found == null ? false : reportletConfs.remove(found);\n+        return found == null\n+                ? false\n+                : reportletConfs.remove(found);\n     }\n \n     public List<ReportletConf> getReportletConfs() {\n-        List<ReportletConf> result =\n-                new ArrayList<ReportletConf>(reportletConfs.size());\n+        List<ReportletConf> result = new ArrayList<ReportletConf>(reportletConfs.size());\n \n         for (ReportletConfInstance instance : reportletConfs) {\n             result.add(instance.getInstance());"},{"sha":"81e4a942c008bfbcf23a70d8df9a7b0efd6b1d0a","filename":"core/src/main/java/org/syncope/core/persistence/beans/ReportletConfInstance.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReportletConfInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReportletConfInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FReportletConfInstance.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -54,7 +54,7 @@ public void setReport(final Report report) {\n     public ReportletConf getInstance() {\n         return serializedInstance == null\n                 ? null\n-                : XMLSerializer.<ReportletConf>deserialize(serializedInstance);\n+                : XMLSerializer.<ReportletConf> deserialize(serializedInstance);\n     }\n \n     public void setInstance(final ReportletConf instance) {"},{"sha":"5af772723147528e364ae8f7022dd1a9ebd9a4ef","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncPolicy.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncPolicy.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -33,6 +33,8 @@ public SyncPolicy() {\n     public SyncPolicy(boolean global) {\n         super();\n \n-        this.type = global ? PolicyType.GLOBAL_SYNC : PolicyType.SYNC;\n+        this.type = global\n+                ? PolicyType.GLOBAL_SYNC\n+                : PolicyType.SYNC;\n     }\n }"},{"sha":"aab8a6d8e47f88b38d3d6a9d88302888c92cf0ff","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -95,7 +95,7 @@ public void setResource(ExternalResource resource) {\n     public UserTO getUserTemplate() {\n         return userTemplate == null\n                 ? new UserTO()\n-                : XMLSerializer.<UserTO>deserialize(userTemplate);\n+                : XMLSerializer.<UserTO> deserialize(userTemplate);\n     }\n \n     public void setUserTemplate(final UserTO userTemplate) {"},{"sha":"7786ee798f8a1f3506b10c0958bbb820c7eadda9","filename":"core/src/main/java/org/syncope/core/persistence/beans/Task.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTask.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -40,8 +40,7 @@ public class Task extends AbstractBaseBean {\n     @Id\n     private Long id;\n \n-    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true,\n-    mappedBy = \"task\")\n+    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = \"task\")\n     private List<TaskExec> executions;\n \n     public Task() {\n@@ -55,8 +54,7 @@ public Long getId() {\n     }\n \n     public boolean addExec(TaskExec exec) {\n-        return exec != null && !executions.contains(exec)\n-                && executions.add(exec);\n+        return exec != null && !executions.contains(exec) && executions.add(exec);\n     }\n \n     public boolean removeExec(TaskExec exec) {"},{"sha":"b8928d5adf46f569580f709868304875388eec6b","filename":"core/src/main/java/org/syncope/core/persistence/beans/TaskExec.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTaskExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTaskExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FTaskExec.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -58,12 +58,7 @@ public void setTask(Task task) {\n \n     @Override\n     public String toString() {\n-        return getClass().getSimpleName() + \"{\"\n-                + \"id=\" + id + \", \"\n-                + \"startDate=\" + startDate + \", \"\n-                + \"endDate=\" + endDate + \", \"\n-                + \"task=\" + task + \", \"\n-                + \"status=\" + status + \", \"\n-                + \"message=\" + message + '}';\n+        return getClass().getSimpleName() + \"{\" + \"id=\" + id + \", \" + \"startDate=\" + startDate + \", \" + \"endDate=\"\n+                + endDate + \", \" + \"task=\" + task + \", \" + \"status=\" + status + \", \" + \"message=\" + message + '}';\n     }\n }"},{"sha":"04cf378086fc4da3db3d702d3f17b028cb73504e","filename":"core/src/main/java/org/syncope/core/persistence/beans/UserRequest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FUserRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FUserRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FUserRequest.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -59,7 +59,7 @@ public UserRequestType getType() {\n     public UserTO getUserTO() {\n         return type != UserRequestType.CREATE\n                 ? null\n-                : XMLSerializer.<UserTO>deserialize(payload);\n+                : XMLSerializer.<UserTO> deserialize(payload);\n     }\n \n     public void setUserTO(final UserTO userTO) {\n@@ -70,7 +70,7 @@ public void setUserTO(final UserTO userTO) {\n     public UserMod getUserMod() {\n         return type != UserRequestType.UPDATE\n                 ? null\n-                : XMLSerializer.<UserMod>deserialize(payload);\n+                : XMLSerializer.<UserMod> deserialize(payload);\n     }\n \n     public void setUserMod(final UserMod userMod) {"},{"sha":"8f27a2faabf0ca8ae8ae460584f9ee543cc253fe","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/MAttr.java","status":"modified","additions":7,"deletions":14,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -49,8 +49,7 @@ public class MAttr extends AbstractAttr {\n     @JoinColumn(name = \"schema_name\")\n     private MSchema schema;\n \n-    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true,\n-    mappedBy = \"attribute\")\n+    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true, mappedBy = \"attribute\")\n     @Valid\n     private List<MAttrValue> values;\n \n@@ -89,19 +88,16 @@ public <T extends AbstractSchema> void setSchema(T schema) {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> boolean addValue(\n-            final T attributeValue) {\n+    public <T extends AbstractAttrValue> boolean addValue(final T attributeValue) {\n \n         attributeValue.setAttribute(this);\n         return values.add((MAttrValue) attributeValue);\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> boolean removeValue(\n-            final T attributeValue) {\n+    public <T extends AbstractAttrValue> boolean removeValue(final T attributeValue) {\n \n-        boolean result = values.remove(\n-                (MAttrValue) attributeValue);\n+        boolean result = values.remove((MAttrValue) attributeValue);\n         attributeValue.setAttribute(null);\n         return result;\n     }\n@@ -112,16 +108,14 @@ public <T extends AbstractAttrValue> List<T> getValues() {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> void setValues(\n-            final List<T> attributeValues) {\n+    public <T extends AbstractAttrValue> void setValues(final List<T> attributeValues) {\n \n         this.values.clear();\n         if (attributeValues != null && !attributeValues.isEmpty()) {\n             for (T mav : attributeValues) {\n                 mav.setAttribute(this);\n             }\n-            this.values.addAll(\n-                    (List<MAttrValue>) attributeValues);\n+            this.values.addAll((List<MAttrValue>) attributeValues);\n         }\n     }\n \n@@ -131,8 +125,7 @@ public <T extends AbstractAttrValue> T getUniqueValue() {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> void setUniqueValue(\n-            final T uniqueAttributeValue) {\n+    public <T extends AbstractAttrValue> void setUniqueValue(final T uniqueAttributeValue) {\n \n         this.uniqueValue = (MAttrUniqueValue) uniqueAttributeValue;\n     }"},{"sha":"2015c1dc709f59d2830ebe2756d1486303edd8ab","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/MDerAttr.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMDerAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -52,8 +52,7 @@ public <T extends AbstractDerSchema> T getDerivedSchema() {\n     }\n \n     @Override\n-    public <T extends AbstractDerSchema> void setDerivedSchema(\n-            T derivedSchema) {\n+    public <T extends AbstractDerSchema> void setDerivedSchema(T derivedSchema) {\n \n         this.derivedSchema = (MDerSchema) derivedSchema;\n     }"},{"sha":"bae657d228653f3a6938fcc2c939fc62752772aa","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/MVirAttr.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMVirAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -54,8 +54,7 @@ public <T extends AbstractVirSchema> T getVirtualSchema() {\n     }\n \n     @Override\n-    public <T extends AbstractVirSchema> void setVirtualSchema(\n-            T virtualSchema) {\n+    public <T extends AbstractVirSchema> void setVirtualSchema(T virtualSchema) {\n \n         this.virtualSchema = (MVirSchema) virtualSchema;\n     }"},{"sha":"5a1bb0481154df4201004a29729a5c022f73cf9d","filename":"core/src/main/java/org/syncope/core/persistence/beans/membership/Membership.java","status":"modified","additions":11,"deletions":26,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fmembership%2FMembership.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -39,11 +39,7 @@\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n \n @Entity\n-@Table(uniqueConstraints =\n-@UniqueConstraint(columnNames = {\n-    \"syncopeUser_id\",\n-    \"syncopeRole_id\"\n-}))\n+@Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"syncopeUser_id\", \"syncopeRole_id\" }))\n public class Membership extends AbstractAttributable {\n \n     private static final long serialVersionUID = 5030106264797289469L;\n@@ -124,19 +120,15 @@ public void setAttributes(List<? extends AbstractAttr> attributes) {\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean addDerivedAttribute(\n-            T derivedAttribute) {\n+    public <T extends AbstractDerAttr> boolean addDerivedAttribute(T derivedAttribute) {\n \n-        return derivedAttributes.add(\n-                (MDerAttr) derivedAttribute);\n+        return derivedAttributes.add((MDerAttr) derivedAttribute);\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean removeDerivedAttribute(\n-            T derivedAttribute) {\n+    public <T extends AbstractDerAttr> boolean removeDerivedAttribute(T derivedAttribute) {\n \n-        return derivedAttributes.remove(\n-                (MDerAttr) derivedAttribute);\n+        return derivedAttributes.remove((MDerAttr) derivedAttribute);\n     }\n \n     @Override\n@@ -145,23 +137,19 @@ public List<? extends AbstractDerAttr> getDerivedAttributes() {\n     }\n \n     @Override\n-    public void setDerivedAttributes(\n-            List<? extends AbstractDerAttr> derivedAttributes) {\n+    public void setDerivedAttributes(List<? extends AbstractDerAttr> derivedAttributes) {\n \n-        this.derivedAttributes =\n-                (List<MDerAttr>) derivedAttributes;\n+        this.derivedAttributes = (List<MDerAttr>) derivedAttributes;\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> boolean addVirtualAttribute(\n-            T virtualAttribute) {\n+    public <T extends AbstractVirAttr> boolean addVirtualAttribute(T virtualAttribute) {\n \n         return virtualAttributes.add((MVirAttr) virtualAttribute);\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> boolean removeVirtualAttribute(\n-            T virtualAttribute) {\n+    public <T extends AbstractVirAttr> boolean removeVirtualAttribute(T virtualAttribute) {\n \n         return virtualAttributes.remove((MVirAttr) virtualAttribute);\n     }\n@@ -172,8 +160,7 @@ public List<? extends AbstractVirAttr> getVirtualAttributes() {\n     }\n \n     @Override\n-    public void setVirtualAttributes(\n-            List<? extends AbstractVirAttr> virtualAttributes) {\n+    public void setVirtualAttributes(List<? extends AbstractVirAttr> virtualAttributes) {\n \n         this.virtualAttributes = (List<MVirAttr>) virtualAttributes;\n     }\n@@ -204,8 +191,6 @@ public void setResources(final Set<ExternalResource> resources) {\n \n     @Override\n     public String toString() {\n-        return \"Membership[\" + \"id=\" + id\n-                + \", \" + syncopeUser\n-                + \", \" + syncopeRole + ']';\n+        return \"Membership[\" + \"id=\" + id + \", \" + syncopeUser + \", \" + syncopeRole + ']';\n     }\n }"},{"sha":"a1e749594ea3fad8a5ae88237e3828165d2dd28a","filename":"core/src/main/java/org/syncope/core/persistence/beans/package-info.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fpackage-info.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -17,3 +17,4 @@\n  * under the License.\n  */\n package org.syncope.core.persistence.beans;\n+"},{"sha":"43865b7a54070845ee713d5a47e9ec93aa98cfed","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/RAttr.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -49,8 +49,7 @@ public class RAttr extends AbstractAttr {\n     @JoinColumn(name = \"schema_name\")\n     private RSchema schema;\n \n-    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true,\n-    mappedBy = \"attribute\")\n+    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true, mappedBy = \"attribute\")\n     @Valid\n     private List<RAttrValue> values;\n \n@@ -89,15 +88,13 @@ public <T extends AbstractSchema> void setSchema(T schema) {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> boolean addValue(\n-            final T attributeValue) {\n+    public <T extends AbstractAttrValue> boolean addValue(final T attributeValue) {\n \n         return values.add((RAttrValue) attributeValue);\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> boolean removeValue(\n-            final T attributeValue) {\n+    public <T extends AbstractAttrValue> boolean removeValue(final T attributeValue) {\n \n         return values.remove((RAttrValue) attributeValue);\n     }\n@@ -108,8 +105,7 @@ public <T extends AbstractAttrValue> List<T> getValues() {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> void setValues(\n-            final List<T> attributeValues) {\n+    public <T extends AbstractAttrValue> void setValues(final List<T> attributeValues) {\n \n         this.values.clear();\n         if (attributeValues != null && !attributeValues.isEmpty()) {\n@@ -126,8 +122,7 @@ public <T extends AbstractAttrValue> T getUniqueValue() {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> void setUniqueValue(\n-            final T uniqueAttributeValue) {\n+    public <T extends AbstractAttrValue> void setUniqueValue(final T uniqueAttributeValue) {\n \n         this.uniqueValue = (RAttrUniqueValue) uniqueAttributeValue;\n     }"},{"sha":"0c38afda3aa0384d33643311748c64811be9f69f","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/RDerAttr.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRDerAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -52,8 +52,7 @@ public <T extends AbstractDerSchema> T getDerivedSchema() {\n     }\n \n     @Override\n-    public <T extends AbstractDerSchema> void setDerivedSchema(\n-            T derivedSchema) {\n+    public <T extends AbstractDerSchema> void setDerivedSchema(T derivedSchema) {\n \n         this.derivedSchema = (RDerSchema) derivedSchema;\n     }"},{"sha":"c44af85c9c608087e853906726b98307817a0d80","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/RVirAttr.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRVirAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -54,8 +54,7 @@ public <T extends AbstractVirSchema> T getVirtualSchema() {\n     }\n \n     @Override\n-    public <T extends AbstractVirSchema> void setVirtualSchema(\n-            T virtualSchema) {\n+    public <T extends AbstractVirSchema> void setVirtualSchema(T virtualSchema) {\n \n         this.virtualSchema = (RVirSchema) virtualSchema;\n     }"},{"sha":"31970e7a07ab54be2f51fa0c57464df46499e5c9","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/SyncopeRole.java","status":"modified","additions":25,"deletions":51,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FSyncopeRole.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -55,11 +55,7 @@\n import org.syncope.core.persistence.beans.PasswordPolicy;\n \n @Entity\n-@Table(uniqueConstraints =\n-@UniqueConstraint(columnNames = {\n-    \"name\",\n-    \"parent_id\"\n-}))\n+@Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"name\", \"parent_id\" }))\n @Cacheable\n public class SyncopeRole extends AbstractAttributable {\n \n@@ -75,10 +71,7 @@ public class SyncopeRole extends AbstractAttributable {\n     private SyncopeRole parent;\n \n     @ManyToMany(fetch = FetchType.EAGER)\n-    @JoinTable(joinColumns =\n-    @JoinColumn(name = \"role_id\"),\n-    inverseJoinColumns =\n-    @JoinColumn(name = \"entitlement_name\"))\n+    @JoinTable(joinColumns = @JoinColumn(name = \"role_id\"), inverseJoinColumns = @JoinColumn(name = \"entitlement_name\"))\n     private Set<Entitlement> entitlements;\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n@@ -128,10 +121,7 @@ public class SyncopeRole extends AbstractAttributable {\n      * Provisioning external resources.\n      */\n     @ManyToMany(fetch = FetchType.EAGER)\n-    @JoinTable(joinColumns =\n-    @JoinColumn(name = \"role_id\"),\n-    inverseJoinColumns =\n-    @JoinColumn(name = \"resource_name\"))\n+    @JoinTable(joinColumns = @JoinColumn(name = \"role_id\"), inverseJoinColumns = @JoinColumn(name = \"resource_name\"))\n     @Valid\n     private Set<ExternalResource> resources;\n \n@@ -216,18 +206,15 @@ public void setAttributes(List<? extends AbstractAttr> attributes) {\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean addDerivedAttribute(\n-            T derivedAttribute) {\n+    public <T extends AbstractDerAttr> boolean addDerivedAttribute(T derivedAttribute) {\n \n         return derivedAttributes.add((RDerAttr) derivedAttribute);\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean removeDerivedAttribute(\n-            T derivedAttribute) {\n+    public <T extends AbstractDerAttr> boolean removeDerivedAttribute(T derivedAttribute) {\n \n-        return derivedAttributes.remove(\n-                (RDerAttr) derivedAttribute);\n+        return derivedAttributes.remove((RDerAttr) derivedAttribute);\n     }\n \n     @Override\n@@ -236,22 +223,19 @@ public List<? extends AbstractDerAttr> getDerivedAttributes() {\n     }\n \n     @Override\n-    public void setDerivedAttributes(\n-            List<? extends AbstractDerAttr> derivedAttributes) {\n+    public void setDerivedAttributes(List<? extends AbstractDerAttr> derivedAttributes) {\n \n         this.derivedAttributes = (List<RDerAttr>) derivedAttributes;\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> boolean addVirtualAttribute(\n-            T virtualAttribute) {\n+    public <T extends AbstractVirAttr> boolean addVirtualAttribute(T virtualAttribute) {\n \n         return virtualAttributes.add((RVirAttr) virtualAttribute);\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> boolean removeVirtualAttribute(\n-            T virtualAttribute) {\n+    public <T extends AbstractVirAttr> boolean removeVirtualAttribute(T virtualAttribute) {\n \n         return virtualAttributes.remove((RVirAttr) virtualAttribute);\n     }\n@@ -262,8 +246,7 @@ public List<? extends AbstractVirAttr> getVirtualAttributes() {\n     }\n \n     @Override\n-    public void setVirtualAttributes(\n-            List<? extends AbstractVirAttr> virtualAttributes) {\n+    public void setVirtualAttributes(List<? extends AbstractVirAttr> virtualAttributes) {\n \n         this.virtualAttributes = (List<RVirAttr>) virtualAttributes;\n     }\n@@ -296,8 +279,7 @@ public List<RAttr> findInheritedAttributes() {\n \n             // Add attributes not specialized and not already added\n             for (RAttr attr : getParent().findInheritedAttributes()) {\n-                if (!attrMap.containsKey(attr.getSchema())\n-                        && !result.containsKey((RSchema) attr.getSchema())) {\n+                if (!attrMap.containsKey(attr.getSchema()) && !result.containsKey((RSchema) attr.getSchema())) {\n                     result.put((RSchema) attr.getSchema(), attr);\n                 }\n             }\n@@ -311,8 +293,7 @@ public boolean isInheritDerivedAttributes() {\n     }\n \n     public void setInheritDerivedAttributes(boolean inheritDerivedAttributes) {\n-        this.inheritDerivedAttributes =\n-                getBooleanAsInteger(inheritDerivedAttributes);\n+        this.inheritDerivedAttributes = getBooleanAsInteger(inheritDerivedAttributes);\n \n     }\n \n@@ -322,16 +303,13 @@ public void setInheritDerivedAttributes(boolean inheritDerivedAttributes) {\n      * @return a list of inherited and only inherited attributes.\n      */\n     public List<RDerAttr> findInheritedDerivedAttributes() {\n-        final Map<RDerSchema, RDerAttr> result =\n-                new HashMap<RDerSchema, RDerAttr>();\n+        final Map<RDerSchema, RDerAttr> result = new HashMap<RDerSchema, RDerAttr>();\n \n         if (isInheritDerivedAttributes() && getParent() != null) {\n-            final Map<AbstractDerSchema, AbstractDerAttr> attrMap =\n-                    getDerAttrMap();\n+            final Map<AbstractDerSchema, AbstractDerAttr> attrMap = getDerAttrMap();\n \n             // Add attributes not specialized\n-            for (RDerAttr attr :\n-                    (Collection<RDerAttr>) getParent().getDerivedAttributes()) {\n+            for (RDerAttr attr : (Collection<RDerAttr>) getParent().getDerivedAttributes()) {\n                 if (!attrMap.containsKey(attr.getDerivedSchema())) {\n                     result.put((RDerSchema) attr.getDerivedSchema(), attr);\n                 }\n@@ -340,8 +318,7 @@ public List<RDerAttr> findInheritedDerivedAttributes() {\n             // Add attributes not specialized and not already added\n             for (RDerAttr attr : getParent().findInheritedDerivedAttributes()) {\n                 if (!attrMap.containsKey(attr.getDerivedSchema())\n-                        && !result.containsKey(\n-                        (RDerSchema) attr.getDerivedSchema())) {\n+                        && !result.containsKey((RDerSchema) attr.getDerivedSchema())) {\n                     result.put((RDerSchema) attr.getDerivedSchema(), attr);\n                 }\n             }\n@@ -355,8 +332,7 @@ public boolean isInheritVirtualAttributes() {\n     }\n \n     public void setInheritVirtualAttributes(boolean inheritVirtualAttributes) {\n-        this.inheritVirtualAttributes =\n-                getBooleanAsInteger(inheritVirtualAttributes);\n+        this.inheritVirtualAttributes = getBooleanAsInteger(inheritVirtualAttributes);\n \n     }\n \n@@ -366,16 +342,13 @@ public void setInheritVirtualAttributes(boolean inheritVirtualAttributes) {\n      * @return a list of inherited and only inherited attributes.\n      */\n     public List<RVirAttr> findInheritedVirtualAttributes() {\n-        final Map<RVirSchema, RVirAttr> result =\n-                new HashMap<RVirSchema, RVirAttr>();\n+        final Map<RVirSchema, RVirAttr> result = new HashMap<RVirSchema, RVirAttr>();\n \n         if (isInheritVirtualAttributes() && getParent() != null) {\n-            final Map<AbstractVirSchema, AbstractVirAttr> attrMap =\n-                    getVirAttrMap();\n+            final Map<AbstractVirSchema, AbstractVirAttr> attrMap = getVirAttrMap();\n \n             // Add attributes not specialized\n-            for (RVirAttr attr :\n-                    (Collection<RVirAttr>) getParent().getVirtualAttributes()) {\n+            for (RVirAttr attr : (Collection<RVirAttr>) getParent().getVirtualAttributes()) {\n                 if (!attrMap.containsKey(attr.getVirtualSchema())) {\n                     result.put((RVirSchema) attr.getVirtualSchema(), attr);\n                 }\n@@ -384,8 +357,7 @@ public List<RVirAttr> findInheritedVirtualAttributes() {\n             // Add attributes not specialized and not already added\n             for (RVirAttr attr : getParent().findInheritedVirtualAttributes()) {\n                 if (!attrMap.containsKey(attr.getVirtualSchema())\n-                        && !result.containsKey(\n-                        (RVirSchema) attr.getVirtualSchema())) {\n+                        && !result.containsKey((RVirSchema) attr.getVirtualSchema())) {\n                     result.put((RVirSchema) attr.getVirtualSchema(), attr);\n                 }\n             }\n@@ -402,7 +374,8 @@ public List<RVirAttr> findInheritedVirtualAttributes() {\n      */\n     public PasswordPolicy getPasswordPolicy() {\n         return isInheritPasswordPolicy() && getParent() != null\n-                ? getParent().getPasswordPolicy() : passwordPolicy;\n+                ? getParent().getPasswordPolicy()\n+                : passwordPolicy;\n     }\n \n     public void setPasswordPolicy(PasswordPolicy passwordPolicy) {\n@@ -425,7 +398,8 @@ public void setInheritPasswordPolicy(boolean inheritPasswordPolicy) {\n      */\n     public AccountPolicy getAccountPolicy() {\n         return isInheritAccountPolicy() && getParent() != null\n-                ? getParent().getAccountPolicy() : accountPolicy;\n+                ? getParent().getAccountPolicy()\n+                : accountPolicy;\n     }\n \n     public void setAccountPolicy(AccountPolicy accountPolicy) {"},{"sha":"7be956cc257362a6164b3968115a04c0a9480ce2","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":39,"deletions":43,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -80,8 +80,7 @@ public class SyncopeUser extends AbstractAttributable {\n \n     static {\n         try {\n-            keySpec = new SecretKeySpec(ArrayUtils.subarray(\n-                    \"1abcdefghilmnopqrstuvz2!\".getBytes(\"UTF8\"), 0, 16), \"AES\");\n+            keySpec = new SecretKeySpec(ArrayUtils.subarray(\"1abcdefghilmnopqrstuvz2!\".getBytes(\"UTF8\"), 0, 16), \"AES\");\n         } catch (Exception e) {\n             LOG.error(\"Error during key specification\", e);\n         }\n@@ -173,10 +172,7 @@ public class SyncopeUser extends AbstractAttributable {\n      * Provisioning external resources.\n      */\n     @ManyToMany(fetch = FetchType.EAGER)\n-    @JoinTable(joinColumns =\n-    @JoinColumn(name = \"user_id\"),\n-    inverseJoinColumns =\n-    @JoinColumn(name = \"resource_name\"))\n+    @JoinTable(joinColumns = @JoinColumn(name = \"user_id\"), inverseJoinColumns = @JoinColumn(name = \"resource_name\"))\n     private Set<ExternalResource> resources;\n \n     public SyncopeUser() {\n@@ -213,12 +209,10 @@ public boolean removeMembership(final Membership membership) {\n     public Membership getMembership(final Long syncopeRoleId) {\n         Membership result = null;\n         Membership membership;\n-        for (Iterator<Membership> itor = getMemberships().iterator();\n-                result == null && itor.hasNext();) {\n+        for (Iterator<Membership> itor = getMemberships().iterator(); result == null && itor.hasNext();) {\n \n             membership = itor.next();\n-            if (membership.getSyncopeRole() != null && syncopeRoleId.equals(\n-                    membership.getSyncopeRole().getId())) {\n+            if (membership.getSyncopeRole() != null && syncopeRoleId.equals(membership.getSyncopeRole().getId())) {\n \n                 result = membership;\n             }\n@@ -284,8 +278,7 @@ public void removeClearPassword() {\n         clearPassword = null;\n     }\n \n-    public void setPassword(final String password,\n-            final CipherAlgorithm cipherAlgoritm, final int historySize) {\n+    public void setPassword(final String password, final CipherAlgorithm cipherAlgoritm, final int historySize) {\n \n         // clear password\n         clearPassword = password;\n@@ -323,15 +316,13 @@ public void setAttributes(final List<? extends AbstractAttr> attributes) {\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean addDerivedAttribute(\n-            final T derivedAttribute) {\n+    public <T extends AbstractDerAttr> boolean addDerivedAttribute(final T derivedAttribute) {\n \n         return derivedAttributes.add((UDerAttr) derivedAttribute);\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> boolean removeDerivedAttribute(\n-            T derivedAttribute) {\n+    public <T extends AbstractDerAttr> boolean removeDerivedAttribute(T derivedAttribute) {\n \n         return derivedAttributes.remove((UDerAttr) derivedAttribute);\n     }\n@@ -408,12 +399,12 @@ public String getToken() {\n \n     public Date getTokenExpireTime() {\n         return tokenExpireTime == null\n-                ? null : new Date(tokenExpireTime.getTime());\n+                ? null\n+                : new Date(tokenExpireTime.getTime());\n     }\n \n     public boolean checkToken(final String token) {\n-        return this.token == null || (this.token.equals(token)\n-                && tokenExpireTime.after(new Date()));\n+        return this.token == null || (this.token.equals(token) && tokenExpireTime.after(new Date()));\n     }\n \n     public CipherAlgorithm getCipherAlgoritm() {\n@@ -429,38 +420,49 @@ public List<String> getPasswordHistory() {\n     }\n \n     public Date getChangePwdDate() {\n-        return changePwdDate == null ? null : new Date(changePwdDate.getTime());\n+        return changePwdDate == null\n+                ? null\n+                : new Date(changePwdDate.getTime());\n     }\n \n     public void setChangePwdDate(final Date changePwdDate) {\n         this.changePwdDate = changePwdDate == null\n-                ? null : new Date(changePwdDate.getTime());\n+                ? null\n+                : new Date(changePwdDate.getTime());\n     }\n \n     public Date getCreationDate() {\n-        return creationDate == null ? null : new Date(creationDate.getTime());\n+        return creationDate == null\n+                ? null\n+                : new Date(creationDate.getTime());\n     }\n \n     public void setCreationDate(final Date creationDate) {\n         this.creationDate = creationDate == null\n-                ? null : new Date(creationDate.getTime());\n+                ? null\n+                : new Date(creationDate.getTime());\n     }\n \n     public Integer getFailedLogins() {\n-        return failedLogins != null ? failedLogins : 0;\n+        return failedLogins != null\n+                ? failedLogins\n+                : 0;\n     }\n \n     public void setFailedLogins(final Integer failedLogins) {\n         this.failedLogins = failedLogins;\n     }\n \n     public Date getLastLoginDate() {\n-        return lastLoginDate == null ? null : new Date(lastLoginDate.getTime());\n+        return lastLoginDate == null\n+                ? null\n+                : new Date(lastLoginDate.getTime());\n     }\n \n     public void setLastLoginDate(final Date lastLoginDate) {\n         this.lastLoginDate = lastLoginDate == null\n-                ? null : new Date(lastLoginDate.getTime());\n+                ? null\n+                : new Date(lastLoginDate.getTime());\n     }\n \n     public String getUsername() {\n@@ -479,31 +481,26 @@ public Boolean getSuspended() {\n         return isBooleanAsInteger(suspended);\n     }\n \n-    private String encodePassword(\n-            final String password, final CipherAlgorithm cipherAlgoritm)\n-            throws UnsupportedEncodingException, NoSuchAlgorithmException,\n-            NoSuchPaddingException, InvalidKeyException,\n+    private String encodePassword(final String password, final CipherAlgorithm cipherAlgoritm)\n+            throws UnsupportedEncodingException, NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,\n             IllegalBlockSizeException, BadPaddingException {\n \n         String encodedPassword = null;\n \n         if (password != null) {\n-            if (cipherAlgoritm == null\n-                    || cipherAlgoritm == CipherAlgorithm.AES) {\n+            if (cipherAlgoritm == null || cipherAlgoritm == CipherAlgorithm.AES) {\n \n                 final byte[] cleartext = password.getBytes(\"UTF8\");\n \n-                final Cipher cipher = Cipher.getInstance(\n-                        CipherAlgorithm.AES.getAlgorithm());\n+                final Cipher cipher = Cipher.getInstance(CipherAlgorithm.AES.getAlgorithm());\n \n                 cipher.init(Cipher.ENCRYPT_MODE, keySpec);\n \n                 byte[] encoded = cipher.doFinal(cleartext);\n \n                 encodedPassword = new String(Base64.encode(encoded));\n             } else {\n-                MessageDigest algorithm = MessageDigest.getInstance(\n-                        cipherAlgoritm.getAlgorithm());\n+                MessageDigest algorithm = MessageDigest.getInstance(cipherAlgoritm.getAlgorithm());\n \n                 algorithm.reset();\n                 algorithm.update(password.getBytes());\n@@ -526,18 +523,17 @@ private String encodePassword(\n         return encodedPassword;\n     }\n \n-    public boolean verifyPasswordHistory(final String password,\n-            final int size) {\n+    public boolean verifyPasswordHistory(final String password, final int size) {\n \n         boolean res = false;\n \n         if (size > 0) {\n             try {\n-                res = passwordHistory.subList(\n-                        size >= passwordHistory.size() ? 0\n-                        : passwordHistory.size() - size,\n-                        passwordHistory.size()).contains(cipherAlgorithm != null\n-                        ? encodePassword(password, cipherAlgorithm) : password);\n+                res = passwordHistory.subList(size >= passwordHistory.size()\n+                        ? 0\n+                        : passwordHistory.size() - size, passwordHistory.size()).contains(cipherAlgorithm != null\n+                        ? encodePassword(password, cipherAlgorithm)\n+                        : password);\n             } catch (Throwable t) {\n                 LOG.error(\"Error evaluating password history\", t);\n             }"},{"sha":"c1bd151a0b5973bc2ae8d394edb6dbed3ed9b9a4","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/UAttr.java","status":"modified","additions":5,"deletions":10,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -64,8 +64,7 @@ public class UAttr extends AbstractAttr {\n     /**\n      * Values of this attribute (if schema is not UNIQUE).\n      */\n-    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true,\n-    mappedBy = \"attribute\")\n+    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true, mappedBy = \"attribute\")\n     @Valid\n     private List<UAttrValue> values;\n \n@@ -110,15 +109,13 @@ public <T extends AbstractSchema> void setSchema(final T schema) {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> boolean addValue(\n-            final T attributeValue) {\n+    public <T extends AbstractAttrValue> boolean addValue(final T attributeValue) {\n \n         return values.add((UAttrValue) attributeValue);\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> boolean removeValue(\n-            final T attributeValue) {\n+    public <T extends AbstractAttrValue> boolean removeValue(final T attributeValue) {\n \n         return values.remove((UAttrValue) attributeValue);\n     }\n@@ -129,8 +126,7 @@ public <T extends AbstractAttrValue> List<T> getValues() {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> void setValues(\n-            final List<T> attributeValues) {\n+    public <T extends AbstractAttrValue> void setValues(final List<T> attributeValues) {\n \n         this.values.clear();\n         if (attributeValues != null && !attributeValues.isEmpty()) {\n@@ -147,8 +143,7 @@ public <T extends AbstractAttrValue> T getUniqueValue() {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> void setUniqueValue(\n-            final T uniqueAttributeValue) {\n+    public <T extends AbstractAttrValue> void setUniqueValue(final T uniqueAttributeValue) {\n \n         this.uniqueValue = (UAttrUniqueValue) uniqueAttributeValue;\n     }"},{"sha":"7f137315139915ad080aaeef878b90406c9ae9db","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/UDerAttr.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUDerAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -52,8 +52,7 @@ public <T extends AbstractDerSchema> T getDerivedSchema() {\n     }\n \n     @Override\n-    public <T extends AbstractDerSchema> void setDerivedSchema(\n-            T derivedSchema) {\n+    public <T extends AbstractDerSchema> void setDerivedSchema(T derivedSchema) {\n \n         this.derivedSchema = (UDerSchema) derivedSchema;\n     }"},{"sha":"a4f41c48bb4f79890b012be33324fd8f39a56978","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/UVirAttr.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUVirAttr.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -54,8 +54,7 @@ public <T extends AbstractVirSchema> T getVirtualSchema() {\n     }\n \n     @Override\n-    public <T extends AbstractVirSchema> void setVirtualSchema(\n-            T virtualSchema) {\n+    public <T extends AbstractVirSchema> void setVirtualSchema(T virtualSchema) {\n \n         this.virtualSchema = (UVirSchema) virtualSchema;\n     }"},{"sha":"22a8600cb6052640c42edce2d7d2d3a67ce41cf0","filename":"core/src/main/java/org/syncope/core/persistence/dao/AttrDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,8 +28,7 @@ public interface AttrDAO extends DAO {\n \n     <T extends AbstractAttr> List<T> findAll(Class<T> reference);\n \n-    <T extends AbstractAttr> T save(T attribute)\n-            throws InvalidEntityException;\n+    <T extends AbstractAttr> T save(T attribute) throws InvalidEntityException;\n \n     <T extends AbstractAttr> void delete(Long id, Class<T> reference);\n "},{"sha":"b5e1319b594db670e003b3de13e2b51cf70e1df0","filename":"core/src/main/java/org/syncope/core/persistence/dao/AttrValueDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrValueDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrValueDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrValueDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,8 +28,7 @@ public interface AttrValueDAO extends DAO {\n \n     <T extends AbstractAttrValue> List<T> findAll(Class<T> reference);\n \n-    <T extends AbstractAttrValue> T save(T attributeValue)\n-            throws InvalidEntityException;\n+    <T extends AbstractAttrValue> T save(T attributeValue) throws InvalidEntityException;\n \n     <T extends AbstractAttrValue> void delete(Long id, Class<T> reference);\n "},{"sha":"479e2f2ab82a404a37e4137f8ef45840fe2725c4","filename":"core/src/main/java/org/syncope/core/persistence/dao/ConfDAO.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -24,15 +24,13 @@\n \n public interface ConfDAO extends DAO {\n \n-    SyncopeConf find(String name)\n-            throws MissingConfKeyException;\n+    SyncopeConf find(String name) throws MissingConfKeyException;\n \n     SyncopeConf find(String name, String defaultValue);\n \n     List<SyncopeConf> findAll();\n \n-    SyncopeConf save(SyncopeConf syncopeConfiguration)\n-            throws InvalidEntityException;\n+    SyncopeConf save(SyncopeConf syncopeConfiguration) throws InvalidEntityException;\n \n     void delete(String name);\n }"},{"sha":"fc06fd4b7ce529822484607ae26bcfc65e5ae09a","filename":"core/src/main/java/org/syncope/core/persistence/dao/ConnInstanceDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConnInstanceDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,8 +28,7 @@ public interface ConnInstanceDAO extends DAO {\n \n     List<ConnInstance> findAll();\n \n-    ConnInstance save(ConnInstance connector)\n-            throws InvalidEntityException;\n+    ConnInstance save(ConnInstance connector) throws InvalidEntityException;\n \n     void delete(Long id);\n }"},{"sha":"a1a8df2ce3f8a8a789e00fec3400cf98fe1da041","filename":"core/src/main/java/org/syncope/core/persistence/dao/DAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -22,7 +22,7 @@\n \n public interface DAO {\n \n-     <T extends AbstractBaseBean> void refresh(T entity);\n+    <T extends AbstractBaseBean> void refresh(T entity);\n \n     void detach(Object object);\n "},{"sha":"83a40579d77fa131eb35ac7d8c6decb3e2f5b09e","filename":"core/src/main/java/org/syncope/core/persistence/dao/DerAttrDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerAttrDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,8 +28,7 @@ public interface DerAttrDAO extends DAO {\n \n     <T extends AbstractDerAttr> List<T> findAll(Class<T> reference);\n \n-    <T extends AbstractDerAttr> T save(T derivedAttribute)\n-            throws InvalidEntityException;\n+    <T extends AbstractDerAttr> T save(T derivedAttribute) throws InvalidEntityException;\n \n     <T extends AbstractDerAttr> void delete(Long id, Class<T> reference);\n "},{"sha":"c2823e2e45fb4beded609caed6e9f571823ab042","filename":"core/src/main/java/org/syncope/core/persistence/dao/DerSchemaDAO.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerSchemaDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -30,11 +30,9 @@ public interface DerSchemaDAO extends DAO {\n \n     <T extends AbstractDerSchema> List<T> findAll(Class<T> reference);\n \n-    <T extends AbstractDerSchema> T save(T derivedSchema)\n-            throws InvalidEntityException;\n+    <T extends AbstractDerSchema> T save(T derivedSchema) throws InvalidEntityException;\n \n-    <T extends AbstractDerAttr> List<T> getAttributes(\n-            AbstractDerSchema schema, Class<T> reference);\n+    <T extends AbstractDerAttr> List<T> getAttributes(AbstractDerSchema schema, Class<T> reference);\n \n     void delete(String name, AttributableUtil attributableUtil);\n }"},{"sha":"93525804c5b321afdb2609a27e8ddd107f30b3f0","filename":"core/src/main/java/org/syncope/core/persistence/dao/EntitlementDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -29,8 +29,7 @@ public interface EntitlementDAO extends DAO {\n \n     List<Entitlement> findAll();\n \n-    Entitlement save(Entitlement entitlement)\n-            throws InvalidEntityException;\n+    Entitlement save(Entitlement entitlement) throws InvalidEntityException;\n \n     Entitlement saveEntitlementRole(SyncopeRole role);\n "},{"sha":"77683fbf51c5060efee791a9c46f117253a9a10c","filename":"core/src/main/java/org/syncope/core/persistence/dao/LoggerDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FLoggerDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FLoggerDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FLoggerDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -29,8 +29,7 @@ public interface LoggerDAO extends DAO {\n \n     List<SyncopeLogger> findAll(SyncopeLoggerType type);\n \n-    SyncopeLogger save(SyncopeLogger logger)\n-            throws InvalidEntityException;\n+    SyncopeLogger save(SyncopeLogger logger) throws InvalidEntityException;\n \n     void delete(String name);\n "},{"sha":"a3d96bfcae6ede6627f60b186f0c7dd7170d59d1","filename":"core/src/main/java/org/syncope/core/persistence/dao/MembershipDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FMembershipDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FMembershipDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FMembershipDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -32,8 +32,7 @@ public interface MembershipDAO extends DAO {\n \n     List<Membership> findAll();\n \n-    Membership save(Membership membership)\n-            throws InvalidEntityException;\n+    Membership save(Membership membership) throws InvalidEntityException;\n \n     void delete(Long id);\n }"},{"sha":"fb8369d8cf59cf7bf0f3655b5df6711b4d6abc3b","filename":"core/src/main/java/org/syncope/core/persistence/dao/NotificationDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,8 +28,7 @@ public interface NotificationDAO extends DAO {\n \n     List<Notification> findAll();\n \n-    Notification save(Notification notification)\n-            throws InvalidEntityException;\n+    Notification save(Notification notification) throws InvalidEntityException;\n \n     void delete(Long id);\n }"},{"sha":"7a6efa0f1addea5922ed78287466329e13894d12","filename":"core/src/main/java/org/syncope/core/persistence/dao/PolicyDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FPolicyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FPolicyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FPolicyDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -39,7 +39,7 @@ public interface PolicyDAO extends DAO {\n \n     List<Policy> findAll();\n \n-     <T extends Policy> T save(T policy);\n+    <T extends Policy> T save(T policy);\n \n     void delete(Long id);\n }"},{"sha":"04e2c108fc9758ed087680700455f5c6f49503a4","filename":"core/src/main/java/org/syncope/core/persistence/dao/ReportDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FReportDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FReportDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FReportDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -32,8 +32,7 @@ public interface ReportDAO extends DAO {\n \n     int count();\n \n-    Report save(Report report)\n-            throws InvalidEntityException;\n+    Report save(Report report) throws InvalidEntityException;\n \n     void delete(Long id);\n "},{"sha":"fdaea83eb30b05737c8be3b0e1270b8e516bc1c4","filename":"core/src/main/java/org/syncope/core/persistence/dao/ReportExecDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FReportExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FReportExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FReportExecDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -33,8 +33,7 @@ public interface ReportExecDAO extends DAO {\n \n     List<ReportExec> findAll();\n \n-    ReportExec save(ReportExec execution)\n-            throws InvalidEntityException;\n+    ReportExec save(ReportExec execution) throws InvalidEntityException;\n \n     void delete(Long id);\n "},{"sha":"75a79db33fd5520cc4c6a5497162b93ecf917b1b","filename":"core/src/main/java/org/syncope/core/persistence/dao/ResourceDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -32,8 +32,7 @@ public interface ResourceDAO extends DAO {\n \n     List<ExternalResource> findAllByPriority();\n \n-    ExternalResource save(ExternalResource resource)\n-            throws InvalidEntityException;\n+    ExternalResource save(ExternalResource resource) throws InvalidEntityException;\n \n     List<SchemaMapping> findAllMappings();\n "},{"sha":"d38483fffd8dc737fd7059fbace45a4994504a8a","filename":"core/src/main/java/org/syncope/core/persistence/dao/RoleDAO.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -36,15 +36,14 @@ public interface RoleDAO extends DAO {\n     List<SyncopeRole> findByEntitlement(final Entitlement entitlement);\n \n     List<SyncopeRole> findByResource(ExternalResource resource);\n-    \n+\n     List<SyncopeRole> findChildren(Long roleId);\n \n     List<SyncopeRole> findAll();\n \n     List<Membership> findMemberships(SyncopeRole role);\n \n-    SyncopeRole save(SyncopeRole syncopeRole)\n-            throws InvalidEntityException;\n+    SyncopeRole save(SyncopeRole syncopeRole) throws InvalidEntityException;\n \n     void delete(Long id);\n }"},{"sha":"b528c27f36e7cc3bec8a4ba4b2af0b3fc39bd941","filename":"core/src/main/java/org/syncope/core/persistence/dao/SchemaDAO.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -30,11 +30,9 @@ public interface SchemaDAO extends DAO {\n \n     <T extends AbstractSchema> List<T> findAll(Class<T> reference);\n \n-    <T extends AbstractAttr> List<T> getAttributes(\n-            AbstractSchema schema, Class<T> reference);\n+    <T extends AbstractAttr> List<T> getAttributes(AbstractSchema schema, Class<T> reference);\n \n-    <T extends AbstractSchema> T save(T schema)\n-            throws InvalidEntityException;\n+    <T extends AbstractSchema> T save(T schema) throws InvalidEntityException;\n \n     void delete(String name, AttributableUtil attributableUtil);\n }"},{"sha":"75b39afe36193e23726679c7598c358c09f9c4b7","filename":"core/src/main/java/org/syncope/core/persistence/dao/TaskDAO.java","status":"modified","additions":10,"deletions":14,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -27,31 +27,27 @@\n \n public interface TaskDAO extends DAO {\n \n-     <T extends Task> T find(Long id);\n+    <T extends Task> T find(Long id);\n \n-     <T extends Task> List<T> findWithoutExecs(Class<T> reference);\n+    <T extends Task> List<T> findWithoutExecs(Class<T> reference);\n \n-     <T extends Task> List<T> findAll(ExternalResource resource,\n-            Class<T> reference);\n+    <T extends Task> List<T> findAll(ExternalResource resource, Class<T> reference);\n \n-     <T extends Task> List<T> findAll(Class<T> reference);\n+    <T extends Task> List<T> findAll(Class<T> reference);\n \n-     <T extends Task> List<T> findAll(int page, int itemsPerPage,\n-            Class<T> reference);\n+    <T extends Task> List<T> findAll(int page, int itemsPerPage, Class<T> reference);\n \n     List<PropagationTask> findAll(ExternalResource resource, SyncopeUser user);\n \n     List<PropagationTask> findAll(SyncopeUser user);\n \n-     <T extends Task> int count(Class<T> reference);\n+    <T extends Task> int count(Class<T> reference);\n \n-     <T extends Task> T save(T task)\n-            throws InvalidEntityException;\n+    <T extends Task> T save(T task) throws InvalidEntityException;\n \n-     <T extends Task> void delete(Long id);\n+    <T extends Task> void delete(Long id);\n \n-     <T extends Task> void delete(T task);\n+    <T extends Task> void delete(T task);\n \n-     <T extends Task> void deleteAll(ExternalResource resource,\n-            Class<T> reference);\n+    <T extends Task> void deleteAll(ExternalResource resource, Class<T> reference);\n }"},{"sha":"cd86f8f7d14d78d3e8a6296487349cf4cb9a5800","filename":"core/src/main/java/org/syncope/core/persistence/dao/TaskExecDAO.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskExecDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -27,14 +27,13 @@ public interface TaskExecDAO extends DAO {\n \n     TaskExec find(Long id);\n \n-     <T extends Task> TaskExec findLatestStarted(T task);\n+    <T extends Task> TaskExec findLatestStarted(T task);\n \n-     <T extends Task> TaskExec findLatestEnded(T task);\n+    <T extends Task> TaskExec findLatestEnded(T task);\n \n-     <T extends Task> List<TaskExec> findAll(Class<T> reference);\n+    <T extends Task> List<TaskExec> findAll(Class<T> reference);\n \n-    TaskExec save(TaskExec execution)\n-            throws InvalidEntityException;\n+    TaskExec save(TaskExec execution) throws InvalidEntityException;\n \n     void delete(Long id);\n "},{"sha":"5d0a7c4b7ff9aca007bc7af1b94ca02ae06ab649","filename":"core/src/main/java/org/syncope/core/persistence/dao/UserDAO.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -34,13 +34,11 @@ public interface UserDAO extends DAO {\n \n     SyncopeUser findByWorkflowId(String workflowId);\n \n-    List<SyncopeUser> findByDerAttrValue(String schemaName, String value)\n-            throws InvalidSearchConditionException;\n+    List<SyncopeUser> findByDerAttrValue(String schemaName, String value) throws InvalidSearchConditionException;\n \n     List<SyncopeUser> findByAttrValue(String schemaName, UAttrValue attrValue);\n \n-    SyncopeUser findByAttrUniqueValue(String schemaName,\n-            UAttrValue attrUniqueValue);\n+    SyncopeUser findByAttrUniqueValue(String schemaName, UAttrValue attrUniqueValue);\n \n     List<SyncopeUser> findByResource(ExternalResource resource);\n \n@@ -50,8 +48,7 @@ SyncopeUser findByAttrUniqueValue(String schemaName,\n \n     int count(Set<Long> adminRoles);\n \n-    SyncopeUser save(SyncopeUser user)\n-            throws InvalidEntityException;\n+    SyncopeUser save(SyncopeUser user) throws InvalidEntityException;\n \n     void delete(Long id);\n "},{"sha":"cd9964084477f7d6a43a933ad02a4218b9ca6392","filename":"core/src/main/java/org/syncope/core/persistence/dao/UserRequestDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserRequestDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserRequestDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserRequestDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,8 +28,7 @@ public interface UserRequestDAO extends DAO {\n \n     List<UserRequest> findAll();\n \n-    UserRequest save(UserRequest userRequest)\n-            throws InvalidEntityException;\n+    UserRequest save(UserRequest userRequest) throws InvalidEntityException;\n \n     void delete(Long id);\n }"},{"sha":"5a434fde9cebe052c874c8816e4ccba3a2739785","filename":"core/src/main/java/org/syncope/core/persistence/dao/UserSearchDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserSearchDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -52,8 +52,7 @@ public interface UserSearchDAO extends DAO {\n      * @param itemsPerPage number of results per page\n      * @return the list of users matchin the given search condition\n      */\n-    List<SyncopeUser> search(Set<Long> adminRoles,\n-            NodeCond searchCondition, int page, int itemsPerPage);\n+    List<SyncopeUser> search(Set<Long> adminRoles, NodeCond searchCondition, int page, int itemsPerPage);\n \n     /**\n      * Verify if user matched the given search condition."},{"sha":"aa9a4476b5599b8046ed2dd961fc8cf968d68ec4","filename":"core/src/main/java/org/syncope/core/persistence/dao/VirAttrDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirAttrDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,8 +28,7 @@ public interface VirAttrDAO extends DAO {\n \n     <T extends AbstractVirAttr> List<T> findAll(Class<T> reference);\n \n-    <T extends AbstractVirAttr> T save(T virtualAttribute)\n-            throws InvalidEntityException;\n+    <T extends AbstractVirAttr> T save(T virtualAttribute) throws InvalidEntityException;\n \n     <T extends AbstractVirAttr> void delete(Long id, Class<T> reference);\n "},{"sha":"417d0e9c50c4b2f82845042a539f2cf7a1c9d462","filename":"core/src/main/java/org/syncope/core/persistence/dao/VirSchemaDAO.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaDAO.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -30,11 +30,9 @@ public interface VirSchemaDAO extends DAO {\n \n     <T extends AbstractVirSchema> List<T> findAll(Class<T> reference);\n \n-    <T extends AbstractVirSchema> T save(T virtualSchema)\n-            throws InvalidEntityException;\n+    <T extends AbstractVirSchema> T save(T virtualSchema) throws InvalidEntityException;\n \n-    <T extends AbstractVirAttr> List<T> getAttributes(\n-            AbstractVirSchema virtualSchema, Class<T> reference);\n+    <T extends AbstractVirAttr> List<T> getAttributes(AbstractVirSchema virtualSchema, Class<T> reference);\n \n     void delete(String name, AttributableUtil attributableUtil);\n }"},{"sha":"d33110a42fedee4db03fc9205a80a70a9602bea7","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AbstractDAOImpl.java","status":"modified","additions":9,"deletions":14,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -36,42 +36,37 @@ public abstract class AbstractDAOImpl implements DAO {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG =\n-            LoggerFactory.getLogger(AbstractDAOImpl.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractDAOImpl.class);\n \n-    private String CACHE_STORE_MODE =\n-            \"javax.persistence.cache.storeMode\";\n+    private String CACHE_STORE_MODE = \"javax.persistence.cache.storeMode\";\n \n-    private String CACHE_RETRIEVE_MODE =\n-            \"javax.persistence.cache.retrieveMode\";\n+    private String CACHE_RETRIEVE_MODE = \"javax.persistence.cache.retrieveMode\";\n \n     @Value(\"#{entityManager}\")\n     @PersistenceContext(type = PersistenceContextType.TRANSACTION)\n     protected EntityManager entityManager;\n \n     protected CacheRetrieveMode getCacheRetrieveMode() {\n         return entityManager.getProperties().containsKey(CACHE_RETRIEVE_MODE)\n-                ? (CacheRetrieveMode) entityManager.getProperties().get(\n-                CACHE_RETRIEVE_MODE) : CacheRetrieveMode.BYPASS;\n+                ? (CacheRetrieveMode) entityManager.getProperties().get(CACHE_RETRIEVE_MODE)\n+                : CacheRetrieveMode.BYPASS;\n     }\n \n     protected void setCacheRetrieveMode(final CacheRetrieveMode retrieveMode) {\n         if (retrieveMode != null) {\n-            entityManager.getProperties().\n-                    put(CACHE_RETRIEVE_MODE, retrieveMode);\n+            entityManager.getProperties().put(CACHE_RETRIEVE_MODE, retrieveMode);\n         }\n     }\n \n     protected CacheStoreMode getCacheStoreMode() {\n         return entityManager.getProperties().containsKey(CACHE_STORE_MODE)\n-                ? (CacheStoreMode) entityManager.getProperties().get(\n-                CACHE_STORE_MODE) : CacheStoreMode.BYPASS;\n+                ? (CacheStoreMode) entityManager.getProperties().get(CACHE_STORE_MODE)\n+                : CacheStoreMode.BYPASS;\n     }\n \n     protected void setCacheStoreMode(final CacheStoreMode storeMode) {\n         if (storeMode != null) {\n-            entityManager.getProperties().\n-                    put(CACHE_STORE_MODE, storeMode);\n+            entityManager.getProperties().put(CACHE_STORE_MODE, storeMode);\n         }\n     }\n "},{"sha":"d87c5ab61728382c58d9c5c9a9204a7cae9051b0","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttrDAOImpl.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,16 +28,14 @@\n public class AttrDAOImpl extends AbstractDAOImpl implements AttrDAO {\n \n     @Override\n-    public <T extends AbstractAttr> T find(final Long id,\n-            final Class<T> reference) {\n+    public <T extends AbstractAttr> T find(final Long id, final Class<T> reference) {\n \n         return entityManager.find(reference, id);\n     }\n \n     @Override\n     public <T extends AbstractAttr> List<T> findAll(final Class<T> reference) {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n@@ -47,8 +45,7 @@ public <T extends AbstractAttr> T save(final T attribute) {\n     }\n \n     @Override\n-    public <T extends AbstractAttr> void delete(\n-            final Long id, final Class<T> reference) {\n+    public <T extends AbstractAttr> void delete(final Long id, final Class<T> reference) {\n \n         T attribute = find(id, reference);\n         if (attribute == null) {"},{"sha":"59901cc45baf60aeb4ba434559a2f8e439c75a54","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttrValueDAOImpl.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrValueDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrValueDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttrValueDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -25,22 +25,18 @@\n import org.syncope.core.persistence.dao.AttrValueDAO;\n \n @Repository\n-public class AttrValueDAOImpl extends AbstractDAOImpl\n-        implements AttrValueDAO {\n+public class AttrValueDAOImpl extends AbstractDAOImpl implements AttrValueDAO {\n \n     @Override\n-    public <T extends AbstractAttrValue> T find(\n-            final Long id, final Class<T> reference) {\n+    public <T extends AbstractAttrValue> T find(final Long id, final Class<T> reference) {\n \n         return entityManager.find(reference, id);\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> List<T> findAll(\n-            final Class<T> reference) {\n+    public <T extends AbstractAttrValue> List<T> findAll(final Class<T> reference) {\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n@@ -50,8 +46,7 @@ public <T extends AbstractAttrValue> T save(final T attributeValue) {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> void delete(final Long id,\n-            final Class<T> reference) {\n+    public <T extends AbstractAttrValue> void delete(final Long id, final Class<T> reference) {\n \n         T attributeValue = find(id, reference);\n         if (attributeValue == null) {\n@@ -62,8 +57,7 @@ public <T extends AbstractAttrValue> void delete(final Long id,\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> void delete(\n-            final T attributeValue) {\n+    public <T extends AbstractAttrValue> void delete(final T attributeValue) {\n \n         if (attributeValue.getAttribute() != null) {\n             attributeValue.getAttribute().removeValue(attributeValue);"},{"sha":"5454d688f8004530d0e5def82186b37b91fbcb8e","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ConfDAOImpl.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -29,8 +29,7 @@\n public class ConfDAOImpl extends AbstractDAOImpl implements ConfDAO {\n \n     @Override\n-    public SyncopeConf find(final String name)\n-            throws MissingConfKeyException {\n+    public SyncopeConf find(final String name) throws MissingConfKeyException {\n \n         SyncopeConf result = find(name, null);\n         if (result == null) {\n@@ -42,8 +41,7 @@ public SyncopeConf find(final String name)\n \n     @Override\n     public SyncopeConf find(final String name, final String defaultValue) {\n-        SyncopeConf syncopeConf =\n-                entityManager.find(SyncopeConf.class, name);\n+        SyncopeConf syncopeConf = entityManager.find(SyncopeConf.class, name);\n \n         if (syncopeConf == null && defaultValue != null) {\n             syncopeConf = new SyncopeConf();\n@@ -56,14 +54,12 @@ public SyncopeConf find(final String name, final String defaultValue) {\n \n     @Override\n     public List<SyncopeConf> findAll() {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM SyncopeConf e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM SyncopeConf e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    public SyncopeConf save(\n-            final SyncopeConf syncopeConfiguration) {\n+    public SyncopeConf save(final SyncopeConf syncopeConfiguration) {\n \n         return entityManager.merge(syncopeConfiguration);\n     }"},{"sha":"7535bd539c36672ebb38c43aa8e3e34a2db0b58d","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ConnInstanceDAOImpl.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConnInstanceDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -32,8 +32,7 @@\n import org.syncope.core.persistence.dao.ResourceDAO;\n \n @Repository\n-public class ConnInstanceDAOImpl extends AbstractDAOImpl\n-        implements ConnInstanceDAO {\n+public class ConnInstanceDAOImpl extends AbstractDAOImpl implements ConnInstanceDAO {\n \n     @Autowired\n     private ResourceDAO resourceDAO;\n@@ -48,8 +47,7 @@ public ConnInstance find(final Long id) {\n \n     @Override\n     public List<ConnInstance> findAll() {\n-        Query query = entityManager.createQuery(\"SELECT e \"\n-                + \"FROM \" + ConnInstance.class.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e \" + \"FROM \" + ConnInstance.class.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n@@ -75,9 +73,8 @@ public void delete(final Long id) {\n             return;\n         }\n \n-        Set<String> resourceNames =\n-                new HashSet<String>(connInstance.getResources().size());\n-        for (ExternalResource resource: connInstance.getResources()) {\n+        Set<String> resourceNames = new HashSet<String>(connInstance.getResources().size());\n+        for (ExternalResource resource : connInstance.getResources()) {\n             resourceNames.add(resource.getName());\n         }\n         for (String resourceName : resourceNames) {"},{"sha":"81de9310d6b52e5c1e290469b43bed63912ea385","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/DerAttrDAOImpl.java","status":"modified","additions":7,"deletions":14,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerAttrDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerAttrDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerAttrDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,31 +28,26 @@\n public class DerAttrDAOImpl extends AbstractDAOImpl implements DerAttrDAO {\n \n     @Override\n-    public <T extends AbstractDerAttr> T find(\n-            final Long id, final Class<T> reference) {\n+    public <T extends AbstractDerAttr> T find(final Long id, final Class<T> reference) {\n \n         return entityManager.find(reference, id);\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> List<T> findAll(\n-            final Class<T> reference) {\n+    public <T extends AbstractDerAttr> List<T> findAll(final Class<T> reference) {\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> T save(\n-            final T derivedAttribute) {\n+    public <T extends AbstractDerAttr> T save(final T derivedAttribute) {\n \n         return entityManager.merge(derivedAttribute);\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> void delete(\n-            final Long id, final Class<T> reference) {\n+    public <T extends AbstractDerAttr> void delete(final Long id, final Class<T> reference) {\n \n         T derivedAttribute = find(id, reference);\n         if (derivedAttribute == null) {\n@@ -63,12 +58,10 @@ public <T extends AbstractDerAttr> void delete(\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> void delete(\n-            final T derivedAttribute) {\n+    public <T extends AbstractDerAttr> void delete(final T derivedAttribute) {\n \n         if (derivedAttribute.getOwner() != null) {\n-            derivedAttribute.getOwner().\n-                    removeDerivedAttribute(derivedAttribute);\n+            derivedAttribute.getOwner().removeDerivedAttribute(derivedAttribute);\n         }\n \n         entityManager.remove(derivedAttribute);"},{"sha":"4897cf0592147ec41252077fd26b89094df5b994","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/DerSchemaDAOImpl.java","status":"modified","additions":13,"deletions":22,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FDerSchemaDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -41,18 +41,15 @@ public class DerSchemaDAOImpl extends AbstractDAOImpl implements DerSchemaDAO {\n     private ResourceDAO resourceDAO;\n \n     @Override\n-    public <T extends AbstractDerSchema> T find(final String name,\n-            final Class<T> reference) {\n+    public <T extends AbstractDerSchema> T find(final String name, final Class<T> reference) {\n \n         return entityManager.find(reference, name);\n     }\n \n     @Override\n-    public <T extends AbstractDerSchema> List<T> findAll(\n-            final Class<T> reference) {\n+    public <T extends AbstractDerSchema> List<T> findAll(final Class<T> reference) {\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n@@ -62,22 +59,18 @@ public <T extends AbstractDerSchema> T save(final T derivedSchema) {\n     }\n \n     @Override\n-    public void delete(final String name,\n-            final AttributableUtil attributableUtil) {\n+    public void delete(final String name, final AttributableUtil attributableUtil) {\n \n-        final AbstractDerSchema derivedSchema =\n-                find(name, attributableUtil.derivedSchemaClass());\n+        final AbstractDerSchema derivedSchema = find(name, attributableUtil.derivedSchemaClass());\n \n         if (derivedSchema == null) {\n             return;\n         }\n \n-        List<? extends AbstractDerAttr> attributes = getAttributes(\n-                derivedSchema,\n-                attributableUtil.derivedAttributeClass());\n+        List<? extends AbstractDerAttr> attributes = getAttributes(derivedSchema, attributableUtil\n+                .derivedAttributeClass());\n \n-        final Set<Long> derivedAttributeIds =\n-                new HashSet<Long>(attributes.size());\n+        final Set<Long> derivedAttributeIds = new HashSet<Long>(attributes.size());\n \n         Class attributeClass = null;\n \n@@ -90,20 +83,18 @@ public void delete(final String name,\n             derivedAttributeDAO.delete(derivedAttributeId, attributeClass);\n         }\n \n-        resourceDAO.deleteMappings(\n-                name, attributableUtil.derivedIntMappingType());\n+        resourceDAO.deleteMappings(name, attributableUtil.derivedIntMappingType());\n \n         entityManager.remove(derivedSchema);\n     }\n \n     @Override\n-    public <T extends AbstractDerAttr> List<T> getAttributes(\n-            final AbstractDerSchema derivedSchema, final Class<T> reference) {\n+    public <T extends AbstractDerAttr> List<T> getAttributes(final AbstractDerSchema derivedSchema,\n+            final Class<T> reference) {\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + reference.getSimpleName() + \" e\"\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\"\n                 + \" WHERE e.derivedSchema=:schema\");\n-        \n+\n         query.setParameter(\"schema\", derivedSchema);\n \n         return query.getResultList();"},{"sha":"5c5d68e62b0eb306ace87dcbef6367f010944996","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/EntitlementDAOImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FEntitlementDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -29,8 +29,7 @@\n import org.syncope.core.util.EntitlementUtil;\n \n @Repository\n-public class EntitlementDAOImpl extends AbstractDAOImpl\n-        implements EntitlementDAO {\n+public class EntitlementDAOImpl extends AbstractDAOImpl implements EntitlementDAO {\n \n     @Autowired\n     private RoleDAO roleDAO;\n@@ -55,8 +54,7 @@ public Entitlement save(final Entitlement entitlement) {\n     @Override\n     public Entitlement saveEntitlementRole(final SyncopeRole role) {\n         Entitlement roleEnt = new Entitlement();\n-        roleEnt.setName(EntitlementUtil.getEntitlementNameFromRoleId(\n-                role.getId()));\n+        roleEnt.setName(EntitlementUtil.getEntitlementNameFromRoleId(role.getId()));\n         roleEnt.setDescription(\"Entitlement for managing role \" + role.getId());\n \n         return save(roleEnt);"},{"sha":"a21f0b22c48f062b68dccb490f72ea644e6aba53","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/LoggerDAOImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FLoggerDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FLoggerDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FLoggerDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -36,8 +36,7 @@ public SyncopeLogger find(final String name) {\n \n     @Override\n     public List<SyncopeLogger> findAll(final SyncopeLoggerType type) {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + SyncopeLogger.class.getSimpleName() + \" e \"\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeLogger.class.getSimpleName() + \" e \"\n                 + \"WHERE e.type=:type\");\n         query.setParameter(\"type\", type);\n         return query.getResultList();"},{"sha":"889f5f3c13b931f64d3996ec28e8121e98eae3fd","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/MembershipDAOImpl.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FMembershipDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -31,8 +31,7 @@\n import org.syncope.core.persistence.dao.UserDAO;\n \n @Repository\n-public class MembershipDAOImpl extends AbstractDAOImpl\n-        implements MembershipDAO {\n+public class MembershipDAOImpl extends AbstractDAOImpl implements MembershipDAO {\n \n     @Autowired\n     private UserDAO userDAO;\n@@ -55,11 +54,9 @@ public Membership find(final SyncopeUser user, final SyncopeRole role) {\n \n         try {\n             result = (Membership) query.getSingleResult();\n-        }\n-        catch (NoResultException e) {\n+        } catch (NoResultException e) {\n             if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"No membership was found for user \"\n-                        + user + \" and role \" + role);\n+                LOG.debug(\"No membership was found for user \" + user + \" and role \" + role);\n             }\n         }\n "},{"sha":"a3cdf2a88227804eefb2923bfffaf5e0cf29162c","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/NotificationDAOImpl.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FNotificationDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FNotificationDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FNotificationDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,8 +26,7 @@\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n @Repository\n-public class NotificationDAOImpl extends AbstractDAOImpl\n-        implements NotificationDAO {\n+public class NotificationDAOImpl extends AbstractDAOImpl implements NotificationDAO {\n \n     @Override\n     public Notification find(final Long id) {\n@@ -36,14 +35,12 @@ public Notification find(final Long id) {\n \n     @Override\n     public List<Notification> findAll() {\n-        Query query = entityManager.createQuery(\"SELECT e \"\n-                + \"FROM \" + Notification.class.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e \" + \"FROM \" + Notification.class.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    public Notification save(final Notification notification)\n-            throws InvalidEntityException {\n+    public Notification save(final Notification notification) throws InvalidEntityException {\n \n         return entityManager.merge(notification);\n     }"},{"sha":"6e8e531ab2699a46354660f0f00cce102e90ed1a","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/PolicyDAOImpl.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FPolicyDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FPolicyDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FPolicyDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -29,8 +29,7 @@\n import org.syncope.types.PolicyType;\n \n @Repository\n-public class PolicyDAOImpl extends AbstractDAOImpl\n-        implements PolicyDAO {\n+public class PolicyDAOImpl extends AbstractDAOImpl implements PolicyDAO {\n \n     @Override\n     public Policy find(final Long id) {\n@@ -39,8 +38,7 @@ public Policy find(final Long id) {\n \n     @Override\n     public List<? extends Policy> find(final PolicyType type) {\n-        final Query query = entityManager.createQuery(\n-                \"SELECT e FROM Policy e WHERE e.type=:type\");\n+        final Query query = entityManager.createQuery(\"SELECT e FROM Policy e WHERE e.type=:type\");\n         query.setParameter(\"type\", type);\n \n         return query.getResultList();\n@@ -50,21 +48,24 @@ public List<? extends Policy> find(final PolicyType type) {\n     public PasswordPolicy getGlobalPasswordPolicy() {\n         List<? extends Policy> policies = find(PolicyType.GLOBAL_PASSWORD);\n         return policies == null || policies.isEmpty()\n-                ? null : (PasswordPolicy) policies.get(0);\n+                ? null\n+                : (PasswordPolicy) policies.get(0);\n     }\n \n     @Override\n     public AccountPolicy getGlobalAccountPolicy() {\n         List<? extends Policy> policies = find(PolicyType.GLOBAL_ACCOUNT);\n         return policies == null || policies.isEmpty()\n-                ? null : (AccountPolicy) policies.get(0);\n+                ? null\n+                : (AccountPolicy) policies.get(0);\n     }\n \n     @Override\n     public SyncPolicy getGlobalSyncPolicy() {\n         List<? extends Policy> policies = find(PolicyType.GLOBAL_SYNC);\n         return policies == null || policies.isEmpty()\n-                ? null : (SyncPolicy) policies.get(0);\n+                ? null\n+                : (SyncPolicy) policies.get(0);\n     }\n \n     @Override"},{"sha":"b791847155face10fc2d25e9f5767a4378d59fbe","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ReportDAOImpl.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FReportDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FReportDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FReportDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -40,10 +40,11 @@ public List<Report> findAll() {\n \n     @Override\n     public List<Report> findAll(final int page, final int itemsPerPage) {\n-        final Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + Report.class.getSimpleName() + \" e\");\n+        final Query query = entityManager.createQuery(\"SELECT e FROM \" + Report.class.getSimpleName() + \" e\");\n \n-        query.setFirstResult(itemsPerPage * (page <= 0 ? 0 : page - 1));\n+        query.setFirstResult(itemsPerPage * (page <= 0\n+                ? 0\n+                : page - 1));\n \n         if (itemsPerPage > 0) {\n             query.setMaxResults(itemsPerPage);\n@@ -54,15 +55,13 @@ public List<Report> findAll(final int page, final int itemsPerPage) {\n \n     @Override\n     public int count() {\n-        Query countQuery = entityManager.createNativeQuery(\n-                \"SELECT COUNT(id) FROM \" + Report.class.getSimpleName());\n+        Query countQuery = entityManager.createNativeQuery(\"SELECT COUNT(id) FROM \" + Report.class.getSimpleName());\n \n         return ((Number) countQuery.getSingleResult()).intValue();\n     }\n \n     @Override\n-    public Report save(final Report report)\n-            throws InvalidEntityException {\n+    public Report save(final Report report) throws InvalidEntityException {\n \n         return entityManager.merge(report);\n     }"},{"sha":"80e0a1dfbbf89e2655a6ddbc986b5735244cd6cb","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ReportExecDAOImpl.java","status":"modified","additions":8,"deletions":13,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FReportExecDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FReportExecDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FReportExecDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,27 +28,24 @@\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n @Repository\n-public class ReportExecDAOImpl extends AbstractDAOImpl\n-        implements ReportExecDAO {\n+public class ReportExecDAOImpl extends AbstractDAOImpl implements ReportExecDAO {\n \n     @Override\n     public ReportExec find(final Long id) {\n         return entityManager.find(ReportExec.class, id);\n     }\n \n-    private ReportExec findLatest(final Report report,\n-            final String field) {\n+    private ReportExec findLatest(final Report report, final String field) {\n \n-        Query query = entityManager.createQuery(\"SELECT e \"\n-                + \"FROM \" + ReportExec.class.getSimpleName() + \" e \"\n-                + \"WHERE e.report=:report \"\n-                + \"ORDER BY e.\" + field + \" DESC\");\n+        Query query = entityManager.createQuery(\"SELECT e \" + \"FROM \" + ReportExec.class.getSimpleName() + \" e \"\n+                + \"WHERE e.report=:report \" + \"ORDER BY e.\" + field + \" DESC\");\n         query.setParameter(\"report\", report);\n         query.setMaxResults(1);\n \n         List<ReportExec> result = query.getResultList();\n         return result == null || result.isEmpty()\n-                ? null : result.iterator().next();\n+                ? null\n+                : result.iterator().next();\n     }\n \n     @Override\n@@ -63,8 +60,7 @@ public ReportExec findLatestEnded(final Report report) {\n \n     @Override\n     public List<ReportExec> findAll() {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + ReportExec.class.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + ReportExec.class.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n@@ -78,8 +74,7 @@ public List<ReportExec> findAll() {\n      */\n     @Override\n     @Transactional(rollbackFor = Throwable.class)\n-    public ReportExec save(final ReportExec execution)\n-            throws InvalidEntityException {\n+    public ReportExec save(final ReportExec execution) throws InvalidEntityException {\n \n         return entityManager.merge(execution);\n     }"},{"sha":"97d8a21b9607bdbbab1d5ff9ae8ff36553f98be0","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":16,"deletions":31,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -40,8 +40,7 @@\n import org.syncope.types.IntMappingType;\n \n @Repository\n-public class ResourceDAOImpl extends AbstractDAOImpl\n-        implements ResourceDAO {\n+public class ResourceDAOImpl extends AbstractDAOImpl implements ResourceDAO {\n \n     @Autowired\n     private TaskDAO taskDAO;\n@@ -57,10 +56,8 @@ public class ResourceDAOImpl extends AbstractDAOImpl\n \n     @Override\n     public ExternalResource find(final String name) {\n-        TypedQuery<ExternalResource> query =\n-                entityManager.createQuery(\"SELECT e \"\n-                + \"FROM \" + ExternalResource.class.getSimpleName() + \" e \"\n-                + \"WHERE e.name = :name\", ExternalResource.class);\n+        TypedQuery<ExternalResource> query = entityManager.createQuery(\"SELECT e \" + \"FROM \"\n+                + ExternalResource.class.getSimpleName() + \" e \" + \"WHERE e.name = :name\", ExternalResource.class);\n         query.setParameter(\"name\", name);\n \n         ExternalResource result = null;\n@@ -74,15 +71,13 @@ public ExternalResource find(final String name) {\n \n     @Override\n     public List<ExternalResource> findAll() {\n-        Query query = entityManager.createQuery(\"SELECT e \"\n-                + \"FROM  \" + ExternalResource.class.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e \" + \"FROM  \" + ExternalResource.class.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n     @Override\n     public List<ExternalResource> findAllByPriority() {\n-        Query query = entityManager.createQuery(\"SELECT e \"\n-                + \"FROM  \" + ExternalResource.class.getSimpleName() + \" e \"\n+        Query query = entityManager.createQuery(\"SELECT e \" + \"FROM  \" + ExternalResource.class.getSimpleName() + \" e \"\n                 + \"ORDER BY e.propagationPriority\");\n         return query.getResultList();\n     }\n@@ -97,7 +92,7 @@ public List<ExternalResource> findAllByPriority() {\n      * @return the same entity, updated\n      */\n     @Override\n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n     public ExternalResource save(final ExternalResource resource) {\n         ExternalResource merged = entityManager.merge(resource);\n         try {\n@@ -110,49 +105,40 @@ public ExternalResource save(final ExternalResource resource) {\n \n     @Override\n     public List<SchemaMapping> findAllMappings() {\n-        Query query = entityManager.createQuery(\"SELECT e FROM \"\n-                + SchemaMapping.class.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + SchemaMapping.class.getSimpleName() + \" e\");\n \n         return query.getResultList();\n     }\n \n     @Override\n-    public SchemaMapping getMappingForAccountId(\n-            final String resourceName) {\n+    public SchemaMapping getMappingForAccountId(final String resourceName) {\n \n-        Query query = entityManager.createQuery(\"SELECT m FROM \"\n-                + SchemaMapping.class.getSimpleName() + \" m \"\n-                + \"WHERE m.resource.name=:resourceName \"\n-                + \"AND m.accountid = 1\");\n+        Query query = entityManager.createQuery(\"SELECT m FROM \" + SchemaMapping.class.getSimpleName() + \" m \"\n+                + \"WHERE m.resource.name=:resourceName \" + \"AND m.accountid = 1\");\n         query.setParameter(\"resourceName\", resourceName);\n \n         return (SchemaMapping) query.getSingleResult();\n     }\n \n     @Override\n-    public void deleteMappings(final String intAttrName,\n-            final IntMappingType intMappingType) {\n+    public void deleteMappings(final String intAttrName, final IntMappingType intMappingType) {\n \n-        if (intMappingType == IntMappingType.SyncopeUserId\n-                || intMappingType == IntMappingType.Password\n+        if (intMappingType == IntMappingType.SyncopeUserId || intMappingType == IntMappingType.Password\n                 || intMappingType == IntMappingType.Username) {\n \n             return;\n         }\n \n-        Query query = entityManager.createQuery(\"DELETE FROM \"\n-                + SchemaMapping.class.getSimpleName()\n-                + \" m WHERE m.intAttrName=:intAttrName \"\n-                + \"AND m.intMappingType=:intMappingType\");\n+        Query query = entityManager.createQuery(\"DELETE FROM \" + SchemaMapping.class.getSimpleName()\n+                + \" m WHERE m.intAttrName=:intAttrName \" + \"AND m.intMappingType=:intMappingType\");\n         query.setParameter(\"intAttrName\", intAttrName);\n         query.setParameter(\"intMappingType\", intMappingType);\n \n         int items = query.executeUpdate();\n         LOG.debug(\"Removed {} schema mappings\", items);\n \n         // Make empty SchemaMapping query cache\n-        entityManager.getEntityManagerFactory().getCache().\n-                evict(SchemaMapping.class);\n+        entityManager.getEntityManagerFactory().getCache().evict(SchemaMapping.class);\n     }\n \n     @Override\n@@ -172,8 +158,7 @@ public void delete(final String name) {\n             role.removeResource(resource);\n         }\n \n-        if (resource.getConnector() != null\n-                && resource.getConnector().getResources() != null\n+        if (resource.getConnector() != null && resource.getConnector().getResources() != null\n                 && !resource.getConnector().getResources().isEmpty()) {\n \n             resource.getConnector().getResources().remove(resource);"},{"sha":"4388ec684ceac4f34b62c2bef125555636b757bc","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":12,"deletions":20,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -40,8 +40,7 @@ public class RoleDAOImpl extends AbstractDAOImpl implements RoleDAO {\n \n     @Override\n     public SyncopeRole find(final Long id) {\n-        TypedQuery<SyncopeRole> query = entityManager.createQuery(\n-                \"SELECT e FROM SyncopeRole e WHERE e.id = :id\",\n+        TypedQuery<SyncopeRole> query = entityManager.createQuery(\"SELECT e FROM SyncopeRole e WHERE e.id = :id\",\n                 SyncopeRole.class);\n         query.setParameter(\"id\", id);\n \n@@ -56,8 +55,7 @@ public SyncopeRole find(final Long id) {\n \n     @Override\n     public List<SyncopeRole> find(final String name) {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM SyncopeRole e WHERE e.name = :name\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM SyncopeRole e WHERE e.name = :name\");\n         query.setParameter(\"name\", name);\n \n         return query.getResultList();\n@@ -67,25 +65,24 @@ public List<SyncopeRole> find(final String name) {\n     public SyncopeRole find(final String name, final Long parentId) {\n         Query query;\n         if (parentId != null) {\n-            query = entityManager.createQuery(\n-                    \"SELECT r FROM SyncopeRole r WHERE \"\n+            query = entityManager.createQuery(\"SELECT r FROM SyncopeRole r WHERE \"\n                     + \"r.name=:name AND r.parent.id=:parentId\");\n             query.setParameter(\"parentId\", parentId);\n         } else {\n-            query = entityManager.createQuery(\n-                    \"SELECT r FROM SyncopeRole r WHERE \"\n+            query = entityManager.createQuery(\"SELECT r FROM SyncopeRole r WHERE \"\n                     + \"r.name=:name AND r.parent IS NULL\");\n         }\n         query.setParameter(\"name\", name);\n \n         List<SyncopeRole> result = query.getResultList();\n-        return result.isEmpty() ? null : result.get(0);\n+        return result.isEmpty()\n+                ? null\n+                : result.get(0);\n     }\n \n     @Override\n     public List<SyncopeRole> findByEntitlement(final Entitlement entitlement) {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + SyncopeRole.class.getSimpleName() + \" e \"\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeRole.class.getSimpleName() + \" e \"\n                 + \"WHERE :entitlement MEMBER OF e.entitlements\");\n         query.setParameter(\"entitlement\", entitlement);\n \n@@ -94,8 +91,7 @@ public List<SyncopeRole> findByEntitlement(final Entitlement entitlement) {\n \n     @Override\n     public List<SyncopeRole> findByResource(final ExternalResource resource) {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + SyncopeRole.class.getSimpleName() + \" e \"\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeRole.class.getSimpleName() + \" e \"\n                 + \"WHERE :resource MEMBER OF e.resources\");\n         query.setParameter(\"resource\", resource);\n \n@@ -104,9 +100,7 @@ public List<SyncopeRole> findByResource(final ExternalResource resource) {\n \n     @Override\n     public List<SyncopeRole> findChildren(final Long roleId) {\n-        Query query = entityManager.createQuery(\n-                \"SELECT r FROM SyncopeRole r WHERE \"\n-                + \"r.parent.id=:roleId\");\n+        Query query = entityManager.createQuery(\"SELECT r FROM SyncopeRole r WHERE \" + \"r.parent.id=:roleId\");\n         query.setParameter(\"roleId\", roleId);\n         return query.getResultList();\n     }\n@@ -119,8 +113,7 @@ public List<SyncopeRole> findAll() {\n \n     @Override\n     public List<Membership> findMemberships(final SyncopeRole role) {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + Membership.class.getSimpleName() + \" e\"\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + Membership.class.getSimpleName() + \" e\"\n                 + \" WHERE e.syncopeRole=:role\");\n         query.setParameter(\"role\", role);\n \n@@ -152,8 +145,7 @@ public void delete(final Long id) {\n             return;\n         }\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT r FROM SyncopeRole r WHERE r.parent.id=:id\");\n+        Query query = entityManager.createQuery(\"SELECT r FROM SyncopeRole r WHERE r.parent.id=:id\");\n         query.setParameter(\"id\", id);\n         List<SyncopeRole> childrenRoles = query.getResultList();\n         for (SyncopeRole child : childrenRoles) {"},{"sha":"337f4a067d7ba4031952d7a0dc41381eb29b23f6","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/SchemaDAOImpl.java","status":"modified","additions":8,"deletions":16,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSchemaDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -32,8 +32,7 @@\n import org.syncope.core.util.AttributableUtil;\n \n @Repository\n-public class SchemaDAOImpl extends AbstractDAOImpl\n-        implements SchemaDAO {\n+public class SchemaDAOImpl extends AbstractDAOImpl implements SchemaDAO {\n \n     @Autowired\n     private AttrDAO attributeDAO;\n@@ -42,28 +41,23 @@ public class SchemaDAOImpl extends AbstractDAOImpl\n     private ResourceDAO resourceDAO;\n \n     @Override\n-    public <T extends AbstractSchema> T find(final String name,\n-            final Class<T> reference) {\n+    public <T extends AbstractSchema> T find(final String name, final Class<T> reference) {\n \n         return entityManager.find(reference, name);\n     }\n \n     @Override\n-    public <T extends AbstractSchema> List<T> findAll(\n-            final Class<T> reference) {\n+    public <T extends AbstractSchema> List<T> findAll(final Class<T> reference) {\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n \n         return query.getResultList();\n     }\n \n     @Override\n-    public <T extends AbstractAttr> List<T> getAttributes(\n-            final AbstractSchema schema, final Class<T> reference) {\n+    public <T extends AbstractAttr> List<T> getAttributes(final AbstractSchema schema, final Class<T> reference) {\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + reference.getSimpleName() + \" e\"\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\"\n                 + \" WHERE e.schema=:schema\");\n         query.setParameter(\"schema\", schema);\n \n@@ -76,16 +70,14 @@ public <T extends AbstractSchema> T save(final T schema) {\n     }\n \n     @Override\n-    public void delete(final String name,\n-            final AttributableUtil attributableUtil) {\n+    public void delete(final String name, final AttributableUtil attributableUtil) {\n \n         AbstractSchema schema = find(name, attributableUtil.schemaClass());\n         if (schema == null) {\n             return;\n         }\n \n-        List<? extends AbstractAttr> attributes = getAttributes(schema,\n-                attributableUtil.attributeClass());\n+        List<? extends AbstractAttr> attributes = getAttributes(schema, attributableUtil.attributeClass());\n \n         Set<Long> attributeIds = new HashSet<Long>(attributes.size());\n         for (AbstractAttr attribute : attributes) {"},{"sha":"19034cb76e2311490f7d48d0641838413e88500b","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/TaskDAOImpl.java","status":"modified","additions":16,"deletions":25,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -32,24 +32,20 @@\n import org.syncope.core.persistence.dao.TaskDAO;\n \n @Repository\n-public class TaskDAOImpl extends AbstractDAOImpl\n-        implements TaskDAO {\n+public class TaskDAOImpl extends AbstractDAOImpl implements TaskDAO {\n \n     @Override\n     @Transactional(readOnly = true)\n     public <T extends Task> T find(final Long id) {\n         return (T) entityManager.find(Task.class, id);\n     }\n \n-    private <T extends Task> StringBuilder buildfindAllQuery(\n-            final Class<T> reference) {\n+    private <T extends Task> StringBuilder buildfindAllQuery(final Class<T> reference) {\n \n-        StringBuilder queryString =\n-                new StringBuilder(\"SELECT e FROM \").append(reference.\n-                getSimpleName()).append(\" e \");\n+        StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").append(reference.getSimpleName()).append(\" e \");\n         if (SchedTask.class.equals(reference)) {\n-            queryString.append(\"WHERE e.id NOT IN (SELECT e.id FROM \").\n-                    append(SyncTask.class.getSimpleName()).append(\" e) \");\n+            queryString.append(\"WHERE e.id NOT IN (SELECT e.id FROM \").append(SyncTask.class.getSimpleName()).append(\n+                    \" e) \");\n         }\n \n         return queryString;\n@@ -64,8 +60,7 @@ public <T extends Task> List<T> findWithoutExecs(final Class<T> reference) {\n     }\n \n     @Override\n-    public <T extends Task> List<T> findAll(\n-            final ExternalResource resource, final Class<T> reference) {\n+    public <T extends Task> List<T> findAll(final ExternalResource resource, final Class<T> reference) {\n \n         StringBuilder queryString = buildfindAllQuery(reference);\n         if (SchedTask.class.equals(reference)) {\n@@ -87,13 +82,13 @@ public <T extends Task> List<T> findAll(final Class<T> reference) {\n     }\n \n     @Override\n-    public <T extends Task> List<T> findAll(final int page,\n-            final int itemsPerPage, final Class<T> reference) {\n+    public <T extends Task> List<T> findAll(final int page, final int itemsPerPage, final Class<T> reference) {\n \n-        final Query query = entityManager.createQuery(\n-                buildfindAllQuery(reference).toString());\n+        final Query query = entityManager.createQuery(buildfindAllQuery(reference).toString());\n \n-        query.setFirstResult(itemsPerPage * (page <= 0 ? 0 : page - 1));\n+        query.setFirstResult(itemsPerPage * (page <= 0\n+                ? 0\n+                : page - 1));\n \n         if (itemsPerPage > 0) {\n             query.setMaxResults(itemsPerPage);\n@@ -113,12 +108,10 @@ public List<PropagationTask> findAll(final SyncopeUser user) {\n     }\n \n     @Override\n-    public List<PropagationTask> findAll(final ExternalResource resource,\n-            final SyncopeUser user) {\n+    public List<PropagationTask> findAll(final ExternalResource resource, final SyncopeUser user) {\n \n         StringBuilder queryString = buildfindAllQuery(PropagationTask.class);\n-        queryString.append(\"WHERE e.syncopeUser=:user \").\n-                append(\"AND e.resource=:resource\");\n+        queryString.append(\"WHERE e.syncopeUser=:user \").append(\"AND e.resource=:resource\");\n         final Query query = entityManager.createQuery(queryString.toString());\n         query.setParameter(\"user\", user);\n         query.setParameter(\"resource\", resource);\n@@ -128,14 +121,13 @@ public List<PropagationTask> findAll(final ExternalResource resource,\n \n     @Override\n     public <T extends Task> int count(final Class<T> reference) {\n-        Query countQuery = entityManager.createNativeQuery(\n-                \"SELECT COUNT(id) FROM Task WHERE DTYPE=?1\");\n+        Query countQuery = entityManager.createNativeQuery(\"SELECT COUNT(id) FROM Task WHERE DTYPE=?1\");\n         countQuery.setParameter(1, reference.getSimpleName());\n \n         return ((Number) countQuery.getSingleResult()).intValue();\n     }\n \n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n     @Override\n     public <T extends Task> T save(final T task) {\n         return entityManager.merge(task);\n@@ -157,8 +149,7 @@ public <T extends Task> void delete(final T task) {\n     }\n \n     @Override\n-    public <T extends Task> void deleteAll(\n-            final ExternalResource resource, final Class<T> reference) {\n+    public <T extends Task> void deleteAll(final ExternalResource resource, final Class<T> reference) {\n \n         List<T> tasks = findAll(resource, reference);\n         if (tasks != null) {"},{"sha":"b544169547e96b2c51ec370783549d34769c599b","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/TaskExecDAOImpl.java","status":"modified","additions":11,"deletions":16,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskExecDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskExecDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FTaskExecDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -29,27 +29,24 @@\n import org.syncope.core.persistence.dao.TaskExecDAO;\n \n @Repository\n-public class TaskExecDAOImpl extends AbstractDAOImpl\n-        implements TaskExecDAO {\n+public class TaskExecDAOImpl extends AbstractDAOImpl implements TaskExecDAO {\n \n     @Override\n     public TaskExec find(final Long id) {\n         return entityManager.find(TaskExec.class, id);\n     }\n \n-    private <T extends Task> TaskExec findLatest(final T task,\n-            final String field) {\n+    private <T extends Task> TaskExec findLatest(final T task, final String field) {\n \n-        Query query = entityManager.createQuery(\"SELECT e \"\n-                + \"FROM \" + TaskExec.class.getSimpleName() + \" e \"\n-                + \"WHERE e.task=:task \"\n-                + \"ORDER BY e.\" + field + \" DESC\");\n+        Query query = entityManager.createQuery(\"SELECT e \" + \"FROM \" + TaskExec.class.getSimpleName() + \" e \"\n+                + \"WHERE e.task=:task \" + \"ORDER BY e.\" + field + \" DESC\");\n         query.setParameter(\"task\", task);\n         query.setMaxResults(1);\n \n         List<TaskExec> result = query.getResultList();\n         return result == null || result.isEmpty()\n-                ? null : result.iterator().next();\n+                ? null\n+                : result.iterator().next();\n     }\n \n     @Override\n@@ -64,13 +61,11 @@ public <T extends Task> TaskExec findLatestEnded(final T task) {\n \n     @Override\n     public <T extends Task> List<TaskExec> findAll(Class<T> reference) {\n-        StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").append(\n-                TaskExec.class.getSimpleName()).append(\" e WHERE e.task IN (\").\n-                append(\"SELECT t FROM \").append(reference.getSimpleName()).\n-                append(\" t\");\n+        StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").append(TaskExec.class.getSimpleName()).append(\n+                \" e WHERE e.task IN (\").append(\"SELECT t FROM \").append(reference.getSimpleName()).append(\" t\");\n         if (SchedTask.class.equals(reference)) {\n-            queryString.append(\" WHERE t.id NOT IN (SELECT t.id FROM \").\n-                    append(SyncTask.class.getSimpleName()).append(\" t) \");\n+            queryString.append(\" WHERE t.id NOT IN (SELECT t.id FROM \").append(SyncTask.class.getSimpleName()).append(\n+                    \" t) \");\n         }\n         queryString.append(')');\n \n@@ -88,7 +83,7 @@ public <T extends Task> List<TaskExec> findAll(Class<T> reference) {\n      * @return the same entity, updated\n      */\n     @Override\n-    @Transactional(rollbackFor = {Throwable.class})\n+    @Transactional(rollbackFor = { Throwable.class })\n     public TaskExec save(final TaskExec execution) {\n         return entityManager.merge(execution);\n     }"},{"sha":"d03c8d5c59c5a18c6e35567f998fe97eea0dd06b","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":57,"deletions":95,"changes":152,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -54,8 +54,7 @@\n import org.syncope.core.rest.controller.InvalidSearchConditionException;\n \n @Repository\n-public class UserDAOImpl extends AbstractDAOImpl\n-        implements UserDAO {\n+public class UserDAOImpl extends AbstractDAOImpl implements UserDAO {\n \n     @Autowired\n     private SchemaDAO schemaDAO;\n@@ -71,9 +70,8 @@ public class UserDAOImpl extends AbstractDAOImpl\n \n     @Override\n     public SyncopeUser find(final Long id) {\n-        TypedQuery<SyncopeUser> query = entityManager.createQuery(\n-                \"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n-                + \"WHERE e.id = :id\", SyncopeUser.class);\n+        TypedQuery<SyncopeUser> query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName()\n+                + \" e \" + \"WHERE e.id = :id\", SyncopeUser.class);\n         query.setParameter(\"id\", id);\n \n         SyncopeUser result = null;\n@@ -87,9 +85,8 @@ public SyncopeUser find(final Long id) {\n \n     @Override\n     public SyncopeUser find(final String username) {\n-        TypedQuery<SyncopeUser> query = entityManager.createQuery(\n-                \"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n-                + \"WHERE e.username = :username\", SyncopeUser.class);\n+        TypedQuery<SyncopeUser> query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName()\n+                + \" e \" + \"WHERE e.username = :username\", SyncopeUser.class);\n         query.setParameter(\"username\", username);\n \n         SyncopeUser result = null;\n@@ -103,9 +100,8 @@ public SyncopeUser find(final String username) {\n \n     @Override\n     public SyncopeUser findByWorkflowId(final String workflowId) {\n-        TypedQuery<SyncopeUser> query = entityManager.createQuery(\n-                \"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n-                + \"WHERE e.workflowId = :workflowId\", SyncopeUser.class);\n+        TypedQuery<SyncopeUser> query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName()\n+                + \" e \" + \"WHERE e.workflowId = :workflowId\", SyncopeUser.class);\n         query.setParameter(\"workflowId\", workflowId);\n \n         return query.getSingleResult();\n@@ -124,8 +120,7 @@ public SyncopeUser findByWorkflowId(final String workflowId) {\n      * expression.\n      */\n     @Override\n-    public List<SyncopeUser> findByDerAttrValue(\n-            final String schemaName, final String value)\n+    public List<SyncopeUser> findByDerAttrValue(final String schemaName, final String value)\n             throws InvalidSearchConditionException {\n \n         UDerSchema schema = derSchemaDAO.find(schemaName, UDerSchema.class);\n@@ -144,9 +139,8 @@ public List<SyncopeUser> findByDerAttrValue(\n                 querystring.append(\" AND a.owner_id IN ( \");\n             }\n \n-            querystring.append(\"SELECT a.owner_id \").\n-                    append(\"FROM UAttr a, UAttrValue v, USchema s \").\n-                    append(\"WHERE \").append(clause);\n+            querystring.append(\"SELECT a.owner_id \").append(\"FROM UAttr a, UAttrValue v, USchema s \").append(\"WHERE \")\n+                    .append(clause);\n \n             if (subquery) {\n                 querystring.append(')');\n@@ -155,8 +149,7 @@ public List<SyncopeUser> findByDerAttrValue(\n \n         LOG.debug(\"Execute query {}\", querystring);\n \n-        final Query query = entityManager.createNativeQuery(\n-                querystring.toString());\n+        final Query query = entityManager.createNativeQuery(querystring.toString());\n \n         final List<SyncopeUser> result = new ArrayList<SyncopeUser>();\n \n@@ -172,8 +165,7 @@ public List<SyncopeUser> findByDerAttrValue(\n     }\n \n     @Override\n-    public List<SyncopeUser> findByAttrValue(final String schemaName,\n-            final UAttrValue attrValue) {\n+    public List<SyncopeUser> findByAttrValue(final String schemaName, final UAttrValue attrValue) {\n \n         USchema schema = schemaDAO.find(schemaName, USchema.class);\n         if (schema == null) {\n@@ -182,30 +174,23 @@ public List<SyncopeUser> findByAttrValue(final String schemaName,\n         }\n \n         final String entityName = schema.isUniqueConstraint()\n-                ? UAttrUniqueValue.class.getName() : UAttrValue.class.getName();\n-\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + entityName + \" e\"\n-                + \" WHERE e.attribute.schema.name = :schemaName \"\n-                + \" AND (e.stringValue IS NOT NULL\"\n-                + \" AND e.stringValue = :stringValue)\"\n-                + \" OR (e.booleanValue IS NOT NULL\"\n-                + \" AND e.booleanValue = :booleanValue)\"\n-                + \" OR (e.dateValue IS NOT NULL\"\n-                + \" AND e.dateValue = :dateValue)\"\n-                + \" OR (e.longValue IS NOT NULL\"\n-                + \" AND e.longValue = :longValue)\"\n-                + \" OR (e.doubleValue IS NOT NULL\"\n-                + \" AND e.doubleValue = :doubleValue)\");\n+                ? UAttrUniqueValue.class.getName()\n+                : UAttrValue.class.getName();\n+\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + entityName + \" e\"\n+                + \" WHERE e.attribute.schema.name = :schemaName \" + \" AND (e.stringValue IS NOT NULL\"\n+                + \" AND e.stringValue = :stringValue)\" + \" OR (e.booleanValue IS NOT NULL\"\n+                + \" AND e.booleanValue = :booleanValue)\" + \" OR (e.dateValue IS NOT NULL\"\n+                + \" AND e.dateValue = :dateValue)\" + \" OR (e.longValue IS NOT NULL\" + \" AND e.longValue = :longValue)\"\n+                + \" OR (e.doubleValue IS NOT NULL\" + \" AND e.doubleValue = :doubleValue)\");\n \n         query.setParameter(\"schemaName\", schemaName);\n         query.setParameter(\"stringValue\", attrValue.getStringValue());\n-        query.setParameter(\"booleanValue\",\n-                attrValue.getBooleanValue() == null ? null\n+        query.setParameter(\"booleanValue\", attrValue.getBooleanValue() == null\n+                ? null\n                 : attrValue.getBooleanAsInteger(attrValue.getBooleanValue()));\n         if (attrValue.getDateValue() != null) {\n-            query.setParameter(\"dateValue\",\n-                    attrValue.getDateValue(), TemporalType.TIMESTAMP);\n+            query.setParameter(\"dateValue\", attrValue.getDateValue(), TemporalType.TIMESTAMP);\n         } else {\n             query.setParameter(\"dateValue\", null);\n         }\n@@ -214,8 +199,7 @@ public List<SyncopeUser> findByAttrValue(final String schemaName,\n \n         List<SyncopeUser> result = new ArrayList<SyncopeUser>();\n         SyncopeUser user;\n-        for (AbstractAttrValue value :\n-                (List<AbstractAttrValue>) query.getResultList()) {\n+        for (AbstractAttrValue value : (List<AbstractAttrValue>) query.getResultList()) {\n \n             user = (SyncopeUser) value.getAttribute().getOwner();\n             if (!result.contains(user)) {\n@@ -227,46 +211,42 @@ public List<SyncopeUser> findByAttrValue(final String schemaName,\n     }\n \n     @Override\n-    public SyncopeUser findByAttrUniqueValue(final String schemaName,\n-            final UAttrValue attrUniqueValue) {\n+    public SyncopeUser findByAttrUniqueValue(final String schemaName, final UAttrValue attrUniqueValue) {\n \n         USchema schema = schemaDAO.find(schemaName, USchema.class);\n         if (schema == null) {\n             LOG.error(\"Invalid schema name '{}'\", schemaName);\n             return null;\n         }\n         if (!schema.isUniqueConstraint()) {\n-            LOG.error(\"This schema has not unique constraint: '{}'\",\n-                    schemaName);\n+            LOG.error(\"This schema has not unique constraint: '{}'\", schemaName);\n             return null;\n         }\n \n         List<SyncopeUser> result = findByAttrValue(schemaName, attrUniqueValue);\n-        return result.isEmpty() ? null : result.iterator().next();\n+        return result.isEmpty()\n+                ? null\n+                : result.iterator().next();\n     }\n \n     @Override\n     public List<SyncopeUser> findByResource(final ExternalResource resource) {\n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + SyncopeUser.class.getSimpleName() + \" e \"\n                 + \"WHERE :resource MEMBER OF e.resources\");\n         query.setParameter(\"resource\", resource);\n \n         return query.getResultList();\n     }\n \n     private StringBuilder getFindAllQuery(final Set<Long> adminRoles) {\n-        final StringBuilder queryString = new StringBuilder(\n-                \"SELECT id FROM SyncopeUser WHERE id NOT IN (\");\n+        final StringBuilder queryString = new StringBuilder(\"SELECT id FROM SyncopeUser WHERE id NOT IN (\");\n \n         if (adminRoles == null || adminRoles.isEmpty()) {\n             queryString.append(\"SELECT syncopeUser_id AS id FROM Membership\");\n         } else {\n-            queryString.append(\"SELECT syncopeUser_id FROM Membership M1 \").\n-                    append(\"WHERE syncopeRole_id IN (\");\n-            queryString.append(\"SELECT syncopeRole_id FROM Membership M2 \").\n-                    append(\"WHERE M2.syncopeUser_id=M1.syncopeUser_id \").\n-                    append(\"AND syncopeRole_id NOT IN (\");\n+            queryString.append(\"SELECT syncopeUser_id FROM Membership M1 \").append(\"WHERE syncopeRole_id IN (\");\n+            queryString.append(\"SELECT syncopeRole_id FROM Membership M2 \").append(\n+                    \"WHERE M2.syncopeUser_id=M1.syncopeUser_id \").append(\"AND syncopeRole_id NOT IN (\");\n \n             queryString.append(\"SELECT id AS syncopeRole_id FROM SyncopeRole\");\n             boolean firstRole = true;\n@@ -294,13 +274,13 @@ public final List<SyncopeUser> findAll(final Set<Long> adminRoles) {\n     }\n \n     @Override\n-    public final List<SyncopeUser> findAll(final Set<Long> adminRoles,\n-            final int page, final int itemsPerPage) {\n+    public final List<SyncopeUser> findAll(final Set<Long> adminRoles, final int page, final int itemsPerPage) {\n \n-        final Query query = entityManager.createNativeQuery(\n-                getFindAllQuery(adminRoles).toString());\n+        final Query query = entityManager.createNativeQuery(getFindAllQuery(adminRoles).toString());\n \n-        query.setFirstResult(itemsPerPage * (page <= 0 ? 0 : page - 1));\n+        query.setFirstResult(itemsPerPage * (page <= 0\n+                ? 0\n+                : page - 1));\n \n         if (itemsPerPage > 0) {\n             query.setMaxResults(itemsPerPage);\n@@ -320,15 +300,13 @@ public final List<SyncopeUser> findAll(final Set<Long> adminRoles,\n             }\n         }\n \n-        List<SyncopeUser> result =\n-                new ArrayList<SyncopeUser>(userIds.size());\n+        List<SyncopeUser> result = new ArrayList<SyncopeUser>(userIds.size());\n \n         SyncopeUser user;\n         for (Object userId : userIds) {\n             user = find(((Number) userId).longValue());\n             if (user == null) {\n-                LOG.error(\"Could not find user with id {}, \"\n-                        + \"even though returned by the native query\", userId);\n+                LOG.error(\"Could not find user with id {}, \" + \"even though returned by the native query\", userId);\n             } else {\n                 result.add(user);\n             }\n@@ -343,8 +321,7 @@ public final int count(final Set<Long> adminRoles) {\n         queryString.insert(0, \"SELECT COUNT(id) FROM (\");\n         queryString.append(\") count_user_id\");\n \n-        Query countQuery =\n-                entityManager.createNativeQuery(queryString.toString());\n+        Query countQuery = entityManager.createNativeQuery(queryString.toString());\n \n         return ((Number) countQuery.getSingleResult()).intValue();\n     }\n@@ -400,8 +377,7 @@ public void delete(final SyncopeUser user) {\n      * @return where clauses to use to build the query.\n      * @throws InvalidSearchConditionException in case of errors retrieving identifiers.\n      */\n-    private Set<String> getWhereClause(\n-            final String expression, final String value)\n+    private Set<String> getWhereClause(final String expression, final String value)\n             throws InvalidSearchConditionException {\n         final Parser parser = new Parser(new StringReader(expression));\n \n@@ -413,12 +389,10 @@ private Set<String> getWhereClause(\n \n         // Get schema names and literals\n         Token token;\n-        while ((token = parser.getNextToken()) != null\n-                && StringUtils.hasText(token.toString())) {\n+        while ((token = parser.getNextToken()) != null && StringUtils.hasText(token.toString())) {\n \n             if (token.kind == ParserConstants.STRING_LITERAL) {\n-                literals.add(token.toString().\n-                        substring(1, token.toString().length() - 1));\n+                literals.add(token.toString().substring(1, token.toString().length() - 1));\n             }\n \n             if (token.kind == ParserConstants.IDENTIFIER) {\n@@ -460,8 +434,7 @@ public int compare(String t, String t1) {\n \n         if (attrValues.size() != identifiers.size()) {\n             LOG.error(\"Ambiguous jexl expression resolution.\");\n-            throw new InvalidSearchConditionException(\n-                    \"literals and values have different size\");\n+            throw new InvalidSearchConditionException(\"literals and values have different size\");\n         }\n \n         // clauses to be used with INTERSECTed queries\n@@ -483,8 +456,7 @@ public int compare(String t, String t1) {\n                 schema = schemaDAO.find(identifiers.get(i), USchema.class);\n                 if (schema == null) {\n                     LOG.error(\"Invalid schema name '{}'\", identifiers.get(i));\n-                    throw new InvalidSearchConditionException(\n-                            \"Invalid schema name \" + identifiers.get(i));\n+                    throw new InvalidSearchConditionException(\"Invalid schema name \" + identifiers.get(i));\n                 }\n \n                 // clear builder\n@@ -493,8 +465,7 @@ public int compare(String t, String t1) {\n                 bld.append(\"(\");\n \n                 // set schema name\n-                bld.append(\"s.name = '\").\n-                        append(identifiers.get(i)).append(\"'\");\n+                bld.append(\"s.name = '\").append(identifiers.get(i)).append(\"'\");\n \n                 bld.append(\" AND \");\n \n@@ -507,24 +478,19 @@ public int compare(String t, String t1) {\n                 // use a value clause different for eanch different schema type\n                 switch (schema.getType()) {\n                     case Boolean:\n-                        bld.append(\"v.booleanValue = '\").\n-                                append(attrValues.get(i)).append(\"'\");\n+                        bld.append(\"v.booleanValue = '\").append(attrValues.get(i)).append(\"'\");\n                         break;\n                     case Long:\n-                        bld.append(\"v.longValue = \").\n-                                append(attrValues.get(i));\n+                        bld.append(\"v.longValue = \").append(attrValues.get(i));\n                         break;\n                     case Double:\n-                        bld.append(\"v.doubleValue = \").\n-                                append(attrValues.get(i));\n+                        bld.append(\"v.doubleValue = \").append(attrValues.get(i));\n                         break;\n                     case Date:\n-                        bld.append(\"v.dateValue = '\").\n-                                append(attrValues.get(i)).append(\"'\");\n+                        bld.append(\"v.dateValue = '\").append(attrValues.get(i)).append(\"'\");\n                         break;\n                     default:\n-                        bld.append(\"v.stringValue = '\").\n-                                append(attrValues.get(i)).append(\"'\");\n+                        bld.append(\"v.stringValue = '\").append(attrValues.get(i)).append(\"'\");\n                 }\n \n                 bld.append(\")\");\n@@ -547,21 +513,17 @@ public int compare(String t, String t1) {\n      * @param literals literals/tokens.\n      * @return\n      */\n-    private List<String> split(\n-            final String attrValue,\n-            final List<String> literals) {\n+    private List<String> split(final String attrValue, final List<String> literals) {\n \n         final List<String> attrValues = new ArrayList<String>();\n \n         if (literals.isEmpty()) {\n             attrValues.add(attrValue);\n         } else {\n \n-            for (String token :\n-                    attrValue.split(Pattern.quote(literals.get(0)))) {\n+            for (String token : attrValue.split(Pattern.quote(literals.get(0)))) {\n \n-                attrValues.addAll(\n-                        split(token, literals.subList(1, literals.size())));\n+                attrValues.addAll(split(token, literals.subList(1, literals.size())));\n             }\n         }\n "},{"sha":"bb87984ffc48de9edea2ae26ba38a192ed37a600","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserRequestDAOImpl.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserRequestDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserRequestDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserRequestDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -27,9 +27,8 @@\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n @Repository\n-@Transactional(noRollbackFor = {Throwable.class})\n-public class UserRequestDAOImpl extends AbstractDAOImpl\n-        implements UserRequestDAO {\n+@Transactional(noRollbackFor = { Throwable.class })\n+public class UserRequestDAOImpl extends AbstractDAOImpl implements UserRequestDAO {\n \n     @Override\n     @Transactional(readOnly = true)\n@@ -40,14 +39,12 @@ public UserRequest find(Long id) {\n     @Override\n     @Transactional(readOnly = true)\n     public List<UserRequest> findAll() {\n-        Query query = entityManager.createQuery(\"SELECT e \"\n-                + \"FROM \" + UserRequest.class.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e \" + \"FROM \" + UserRequest.class.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    public UserRequest save(UserRequest userRequest)\n-            throws InvalidEntityException {\n+    public UserRequest save(UserRequest userRequest) throws InvalidEntityException {\n \n         return entityManager.merge(userRequest);\n     }"},{"sha":"08985a669cb28e817966ce7dcb78419add698aa0","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserSearchDAOImpl.java","status":"modified","additions":78,"deletions":139,"changes":217,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -46,11 +46,9 @@\n import org.syncope.types.SchemaType;\n \n @Repository\n-public class UserSearchDAOImpl extends AbstractDAOImpl\n-        implements UserSearchDAO {\n+public class UserSearchDAOImpl extends AbstractDAOImpl implements UserSearchDAO {\n \n-    static final private String EMPTY_ATTR_QUERY =\n-            \"SELECT user_id FROM user_search_attr WHERE 1=2\";\n+    static final private String EMPTY_ATTR_QUERY = \"SELECT user_id FROM user_search_attr WHERE 1=2\";\n \n     @Autowired\n     private UserDAO userDAO;\n@@ -69,18 +67,13 @@ public UserSearchDAOImpl() {\n     private String getAdminRolesFilter(final Set<Long> adminRoles) {\n         final StringBuilder adminRolesFilter = new StringBuilder();\n         if (adminRoles == null || adminRoles.isEmpty()) {\n-            adminRolesFilter.append(\"SELECT syncopeUser_id AS user_id \").\n-                    append(\"FROM Membership\");\n+            adminRolesFilter.append(\"SELECT syncopeUser_id AS user_id \").append(\"FROM Membership\");\n         } else {\n-            adminRolesFilter.append(\"SELECT syncopeUser_id AS user_id \").\n-                    append(\"FROM Membership M1 \").\n-                    append(\"WHERE syncopeRole_id IN (\");\n-            adminRolesFilter.append(\"SELECT syncopeRole_id \").\n-                    append(\"FROM Membership M2 \").\n-                    append(\"WHERE M2.syncopeUser_id=M1.syncopeUser_id \").\n-                    append(\"AND syncopeRole_id NOT IN (\");\n-            adminRolesFilter.append(\n-                    \"SELECT id AS syncopeRole_id FROM SyncopeRole\");\n+            adminRolesFilter.append(\"SELECT syncopeUser_id AS user_id \").append(\"FROM Membership M1 \").append(\n+                    \"WHERE syncopeRole_id IN (\");\n+            adminRolesFilter.append(\"SELECT syncopeRole_id \").append(\"FROM Membership M2 \").append(\n+                    \"WHERE M2.syncopeUser_id=M1.syncopeUser_id \").append(\"AND syncopeRole_id NOT IN (\");\n+            adminRolesFilter.append(\"SELECT id AS syncopeRole_id FROM SyncopeRole\");\n             boolean firstRole = true;\n             for (Long adminRoleId : adminRoles) {\n                 if (firstRole) {\n@@ -99,11 +92,9 @@ private String getAdminRolesFilter(final Set<Long> adminRoles) {\n     }\n \n     @Override\n-    public int count(final Set<Long> adminRoles,\n-            final NodeCond searchCondition) {\n+    public int count(final Set<Long> adminRoles, final NodeCond searchCondition) {\n \n-        List<Object> parameters = Collections.synchronizedList(\n-                new ArrayList<Object>());\n+        List<Object> parameters = Collections.synchronizedList(new ArrayList<Object>());\n \n         // 1. get the query string from the search condition\n         StringBuilder queryString = getQuery(searchCondition, parameters);\n@@ -117,12 +108,10 @@ public int count(final Set<Long> adminRoles,\n         queryString.insert(0, \"SELECT COUNT(user_id) FROM (\");\n         queryString.append(\") count_user_id\");\n \n-        Query countQuery =\n-                entityManager.createNativeQuery(queryString.toString());\n+        Query countQuery = entityManager.createNativeQuery(queryString.toString());\n         fillWithParameters(countQuery, parameters);\n \n-        LOG.debug(\"Native count query\\n{}\\nwith parameters\\n{}\",\n-                queryString.toString(), parameters);\n+        LOG.debug(\"Native count query\\n{}\\nwith parameters\\n{}\", queryString.toString(), parameters);\n \n         int result = ((Number) countQuery.getSingleResult()).intValue();\n         LOG.debug(\"Native count query result: {}\", result);\n@@ -136,16 +125,13 @@ public List<SyncopeUser> search(final NodeCond searchCondition) {\n     }\n \n     @Override\n-    public List<SyncopeUser> search(final Set<Long> adminRoles,\n-            final NodeCond searchCondition) {\n+    public List<SyncopeUser> search(final Set<Long> adminRoles, final NodeCond searchCondition) {\n \n         return search(adminRoles, searchCondition, -1, -1);\n     }\n \n     @Override\n-    public List<SyncopeUser> search(final Set<Long> adminRoles,\n-            final NodeCond searchCondition,\n-            final int page,\n+    public List<SyncopeUser> search(final Set<Long> adminRoles, final NodeCond searchCondition, final int page,\n             final int itemsPerPage) {\n \n         List<SyncopeUser> result = Collections.EMPTY_LIST;\n@@ -155,8 +141,7 @@ public List<SyncopeUser> search(final Set<Long> adminRoles,\n             LOG.error(\"Invalid search condition:\\n{}\", searchCondition);\n         } else {\n             try {\n-                result = doSearch(adminRoles, searchCondition, page,\n-                        itemsPerPage);\n+                result = doSearch(adminRoles, searchCondition, page, itemsPerPage);\n             } catch (Throwable t) {\n                 LOG.error(\"While searching users\", t);\n             }\n@@ -166,23 +151,20 @@ public List<SyncopeUser> search(final Set<Long> adminRoles,\n     }\n \n     @Override\n-    public boolean matches(final SyncopeUser user,\n-            final NodeCond searchCondition) {\n+    public boolean matches(final SyncopeUser user, final NodeCond searchCondition) {\n \n-        List<Object> parameters = Collections.synchronizedList(\n-                new ArrayList<Object>());\n+        List<Object> parameters = Collections.synchronizedList(new ArrayList<Object>());\n \n         // 1. get the query string from the search condition\n         StringBuilder queryString = getQuery(searchCondition, parameters);\n \n         // 2. take into account the passed user\n         queryString.insert(0, \"SELECT u.user_id FROM (\");\n-        queryString.append(\") u WHERE user_id=?\").append(\n-                setParameter(parameters, user.getId()));\n+        queryString.append(\") u WHERE user_id=?\").append(setParameter(parameters, user.getId()));\n \n         // 3. prepare the search query\n         Query query = entityManager.createNativeQuery(queryString.toString());\n-        \n+\n         // 4. populate the search query with parameter values\n         fillWithParameters(query, parameters);\n \n@@ -192,8 +174,7 @@ public boolean matches(final SyncopeUser user,\n         return !result.isEmpty();\n     }\n \n-    private int setParameter(final List<Object> parameters,\n-            final Object parameter) {\n+    private int setParameter(final List<Object> parameters, final Object parameter) {\n \n         int key;\n         synchronized (parameters) {\n@@ -204,27 +185,25 @@ private int setParameter(final List<Object> parameters,\n         return key;\n     }\n \n-    private void fillWithParameters(final Query query,\n-            final List<Object> parameters) {\n+    private void fillWithParameters(final Query query, final List<Object> parameters) {\n \n         for (int i = 0; i < parameters.size(); i++) {\n             if (parameters.get(i) instanceof Date) {\n-                query.setParameter(i + 1, (Date) parameters.get(i),\n-                        TemporalType.TIMESTAMP);\n+                query.setParameter(i + 1, (Date) parameters.get(i), TemporalType.TIMESTAMP);\n             } else if (parameters.get(i) instanceof Boolean) {\n-                query.setParameter(i + 1, ((Boolean) parameters.get(i)) ? 1 : 0);\n+                query.setParameter(i + 1, ((Boolean) parameters.get(i))\n+                        ? 1\n+                        : 0);\n             } else {\n                 query.setParameter(i + 1, parameters.get(i));\n             }\n         }\n     }\n \n-    private List<SyncopeUser> doSearch(final Set<Long> adminRoles,\n-            final NodeCond nodeCond,\n-            final int page, final int itemsPerPage) {\n+    private List<SyncopeUser> doSearch(final Set<Long> adminRoles, final NodeCond nodeCond, final int page,\n+            final int itemsPerPage) {\n \n-        List<Object> parameters = Collections.synchronizedList(\n-                new ArrayList<Object>());\n+        List<Object> parameters = Collections.synchronizedList(new ArrayList<Object>());\n \n         // 1. get the query string from the search condition\n         final StringBuilder queryString = getQuery(nodeCond, parameters);\n@@ -240,11 +219,12 @@ private List<SyncopeUser> doSearch(final Set<Long> adminRoles,\n         queryString.append(getAdminRolesFilter(adminRoles)).append(\")\");\n \n         // 3. prepare the search query\n-        final Query query =\n-                entityManager.createNativeQuery(queryString.toString());\n+        final Query query = entityManager.createNativeQuery(queryString.toString());\n \n         // page starts from 1, while setFirtResult() starts from 0\n-        query.setFirstResult(itemsPerPage * (page <= 0 ? 0 : page - 1));\n+        query.setFirstResult(itemsPerPage * (page <= 0\n+                ? 0\n+                : page - 1));\n \n         if (itemsPerPage >= 0) {\n             query.setMaxResults(itemsPerPage);\n@@ -253,8 +233,7 @@ private List<SyncopeUser> doSearch(final Set<Long> adminRoles,\n         // 4. populate the search query with parameter values\n         fillWithParameters(query, parameters);\n \n-        LOG.debug(\"Native query\\n{}\\nwith parameters\\n{}\",\n-                queryString.toString(), parameters);\n+        LOG.debug(\"Native query\\n{}\\nwith parameters\\n{}\", queryString.toString(), parameters);\n \n         // 5. Prepare the result (avoiding duplicates - set)\n         final Set<Number> userIds = new HashSet<Number>();\n@@ -271,15 +250,13 @@ private List<SyncopeUser> doSearch(final Set<Long> adminRoles,\n             }\n         }\n \n-        final List<SyncopeUser> result =\n-                new ArrayList<SyncopeUser>(userIds.size());\n+        final List<SyncopeUser> result = new ArrayList<SyncopeUser>(userIds.size());\n \n         SyncopeUser user;\n         for (Object userId : userIds) {\n             user = userDAO.find(((Number) userId).longValue());\n             if (user == null) {\n-                LOG.error(\"Could not find user with id {}, \"\n-                        + \"even though returned by the native query\", userId);\n+                LOG.error(\"Could not find user with id {}, \" + \"even though returned by the native query\", userId);\n             } else {\n                 result.add(user);\n             }\n@@ -288,8 +265,7 @@ private List<SyncopeUser> doSearch(final Set<Long> adminRoles,\n         return result;\n     }\n \n-    private StringBuilder getQuery(final NodeCond nodeCond,\n-            final List<Object> parameters) {\n+    private StringBuilder getQuery(final NodeCond nodeCond, final List<Object> parameters) {\n \n         StringBuilder query = new StringBuilder();\n \n@@ -298,44 +274,31 @@ private StringBuilder getQuery(final NodeCond nodeCond,\n             case LEAF:\n             case NOT_LEAF:\n                 if (nodeCond.getMembershipCond() != null) {\n-                    query.append(getQuery(nodeCond.getMembershipCond(),\n-                            nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n+                    query.append(getQuery(nodeCond.getMembershipCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n                             parameters));\n                 }\n                 if (nodeCond.getResourceCond() != null) {\n-                    query.append(getQuery(nodeCond.getResourceCond(),\n-                            nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n+                    query.append(getQuery(nodeCond.getResourceCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n                             parameters));\n                 }\n                 if (nodeCond.getAttributeCond() != null) {\n-                    query.append(getQuery(nodeCond.getAttributeCond(),\n-                            nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n+                    query.append(getQuery(nodeCond.getAttributeCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n                             parameters));\n                 }\n                 if (nodeCond.getSyncopeUserCond() != null) {\n-                    query.append(getQuery(nodeCond.getSyncopeUserCond(),\n-                            nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n+                    query.append(getQuery(nodeCond.getSyncopeUserCond(), nodeCond.getType() == NodeCond.Type.NOT_LEAF,\n                             parameters));\n                 }\n                 break;\n \n             case AND:\n-                query.append(getQuery(nodeCond.getLeftNodeCond(),\n-                        parameters)).\n-                        append(\" AND user_id IN ( \").\n-                        append(getQuery(nodeCond.getRightNodeCond(),\n-                        parameters).\n-                        append(\")\"));\n+                query.append(getQuery(nodeCond.getLeftNodeCond(), parameters)).append(\" AND user_id IN ( \").append(\n+                        getQuery(nodeCond.getRightNodeCond(), parameters).append(\")\"));\n                 break;\n \n             case OR:\n-                query.append(\"(\").\n-                        append(getQuery(nodeCond.getLeftNodeCond(),\n-                        parameters)).\n-                        append(\" UNION \").\n-                        append(getQuery(nodeCond.getRightNodeCond(),\n-                        parameters).\n-                        append(\")\"));\n+                query.append(\"(\").append(getQuery(nodeCond.getLeftNodeCond(), parameters)).append(\" UNION \").append(\n+                        getQuery(nodeCond.getRightNodeCond(), parameters).append(\")\"));\n                 break;\n \n             default:\n@@ -344,61 +307,50 @@ private StringBuilder getQuery(final NodeCond nodeCond,\n         return query;\n     }\n \n-    private String getQuery(final MembershipCond cond,\n-            final boolean not, final List<Object> parameters) {\n+    private String getQuery(final MembershipCond cond, final boolean not, final List<Object> parameters) {\n \n-        StringBuilder query = new StringBuilder(\n-                \"SELECT DISTINCT user_id FROM user_search WHERE \");\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT user_id FROM user_search WHERE \");\n \n         if (not) {\n             query.append(\"user_id NOT IN (\");\n         } else {\n             query.append(\"user_id IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT user_id \").\n-                append(\"FROM user_search_membership WHERE \");\n+        query.append(\"SELECT DISTINCT user_id \").append(\"FROM user_search_membership WHERE \");\n \n         if (cond.getRoleId() != null) {\n-            query.append(\"role_id=?\").append(\n-                    setParameter(parameters, cond.getRoleId()));\n+            query.append(\"role_id=?\").append(setParameter(parameters, cond.getRoleId()));\n         } else if (cond.getRoleName() != null) {\n-            query.append(\"role_name=?\").append(\n-                    setParameter(parameters, cond.getRoleName()));\n+            query.append(\"role_name=?\").append(setParameter(parameters, cond.getRoleName()));\n         }\n \n         query.append(\")\");\n \n         return query.toString();\n     }\n \n-    private String getQuery(final ResourceCond cond,\n-            final boolean not, final List<Object> parameters) {\n+    private String getQuery(final ResourceCond cond, final boolean not, final List<Object> parameters) {\n \n-        final StringBuilder query = new StringBuilder(\n-                \"SELECT DISTINCT user_id FROM user_search WHERE \");\n+        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT user_id FROM user_search WHERE \");\n \n         if (not) {\n             query.append(\"user_id NOT IN (\");\n         } else {\n             query.append(\"user_id IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT user_id \").\n-                append(\"FROM user_search_resource WHERE \");\n+        query.append(\"SELECT DISTINCT user_id \").append(\"FROM user_search_resource WHERE \");\n \n-        query.append(\"resource_name=?\").append(\n-                setParameter(parameters, cond.getResourceName()));\n+        query.append(\"resource_name=?\").append(setParameter(parameters, cond.getResourceName()));\n \n         query.append(\")\");\n \n         return query.toString();\n     }\n \n-    private void fillAttributeQuery(final StringBuilder query,\n-            final UAttrValue attrValue, final USchema schema,\n-            final AttributeCond cond, final boolean not,\n-            final List<Object> parameters) {\n+    private void fillAttributeQuery(final StringBuilder query, final UAttrValue attrValue, final USchema schema,\n+            final AttributeCond cond, final boolean not, final List<Object> parameters) {\n \n         String column = (cond instanceof SyncopeUserCond)\n                 ? cond.getSchema()\n@@ -407,16 +359,19 @@ private void fillAttributeQuery(final StringBuilder query,\n         switch (cond.getType()) {\n \n             case ISNULL:\n-                query.append(column).append(not ? \" IS NOT NULL\" : \" IS NULL\");\n+                query.append(column).append(not\n+                        ? \" IS NOT NULL\"\n+                        : \" IS NULL\");\n                 break;\n \n             case ISNOTNULL:\n-                query.append(column).append(not ? \" IS NULL\" : \" IS NOT NULL\");\n+                query.append(column).append(not\n+                        ? \" IS NULL\"\n+                        : \" IS NOT NULL\");\n                 break;\n \n             case LIKE:\n-                if (schema.getType() == SchemaType.String\n-                        || schema.getType() == SchemaType.Enum) {\n+                if (schema.getType() == SchemaType.String || schema.getType() == SchemaType.Enum) {\n \n                     query.append(column);\n                     if (not) {\n@@ -443,8 +398,7 @@ private void fillAttributeQuery(final StringBuilder query,\n                 } else {\n                     query.append(\"=\");\n                 }\n-                query.append(\"?\").append(\n-                        setParameter(parameters, attrValue.getValue()));\n+                query.append(\"?\").append(setParameter(parameters, attrValue.getValue()));\n                 break;\n \n             case GE:\n@@ -454,8 +408,7 @@ private void fillAttributeQuery(final StringBuilder query,\n                 } else {\n                     query.append(\">=\");\n                 }\n-                query.append(\"?\").append(\n-                        setParameter(parameters, attrValue.getValue()));\n+                query.append(\"?\").append(setParameter(parameters, attrValue.getValue()));\n                 break;\n \n             case GT:\n@@ -465,8 +418,7 @@ private void fillAttributeQuery(final StringBuilder query,\n                 } else {\n                     query.append(\">\");\n                 }\n-                query.append(\"?\").append(\n-                        setParameter(parameters, attrValue.getValue()));\n+                query.append(\"?\").append(setParameter(parameters, attrValue.getValue()));\n                 break;\n \n             case LE:\n@@ -476,8 +428,7 @@ private void fillAttributeQuery(final StringBuilder query,\n                 } else {\n                     query.append(\"<=\");\n                 }\n-                query.append(\"?\").append(\n-                        setParameter(parameters, attrValue.getValue()));\n+                query.append(\"?\").append(setParameter(parameters, attrValue.getValue()));\n                 break;\n \n             case LT:\n@@ -487,8 +438,7 @@ private void fillAttributeQuery(final StringBuilder query,\n                 } else {\n                     query.append(\"<\");\n                 }\n-                query.append(\"?\").append(\n-                        setParameter(parameters, attrValue.getValue()));\n+                query.append(\"?\").append(setParameter(parameters, attrValue.getValue()));\n                 break;\n \n             default:\n@@ -527,8 +477,7 @@ private String getFieldName(final SchemaType type) {\n         return result;\n     }\n \n-    private String getQuery(final AttributeCond cond,\n-            final boolean not, final List<Object> parameters) {\n+    private String getQuery(final AttributeCond cond, final boolean not, final List<Object> parameters) {\n \n         USchema schema = schemaDAO.find(cond.getSchema(), USchema.class);\n         if (schema == null) {\n@@ -538,40 +487,34 @@ private String getQuery(final AttributeCond cond,\n \n         UAttrValue attrValue = new UAttrValue();\n         try {\n-            if (cond.getType() != AttributeCond.Type.LIKE\n-                    && cond.getType() != AttributeCond.Type.ISNULL\n+            if (cond.getType() != AttributeCond.Type.LIKE && cond.getType() != AttributeCond.Type.ISNULL\n                     && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n \n                 schema.getValidator().validate(cond.getExpression(), attrValue);\n             }\n         } catch (ValidationException e) {\n-            LOG.error(\"Could not validate expression '\"\n-                    + cond.getExpression() + \"'\", e);\n+            LOG.error(\"Could not validate expression '\" + cond.getExpression() + \"'\", e);\n             return EMPTY_ATTR_QUERY;\n         }\n \n-        StringBuilder query = new StringBuilder(\n-                \"SELECT DISTINCT user_id FROM user_search_attr WHERE \").append(\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT user_id FROM user_search_attr WHERE \").append(\n                 \"schema_name='\").append(schema.getName());\n         fillAttributeQuery(query, attrValue, schema, cond, not, parameters);\n \n         return query.toString();\n     }\n \n-    private String getQuery(final SyncopeUserCond cond,\n-            final boolean not, final List<Object> parameters) {\n+    private String getQuery(final SyncopeUserCond cond, final boolean not, final List<Object> parameters) {\n \n         Field syncopeUserClassField = null;\n         // loop over SyncopeUser class and all superclasses searching for field\n-        for (Class<?> i = SyncopeUser.class;\n-                syncopeUserClassField == null && i != Object.class;) {\n+        for (Class<?> i = SyncopeUser.class; syncopeUserClassField == null && i != Object.class;) {\n \n             try {\n                 syncopeUserClassField = i.getDeclaredField(cond.getSchema());\n             } catch (Exception ignore) {\n                 // ignore exception\n-                LOG.debug(\"Field '{}' not found on class '{}'\",\n-                        new String[]{cond.getSchema(), i.getSimpleName()},\n+                LOG.debug(\"Field '{}' not found on class '{}'\", new String[] { cond.getSchema(), i.getSimpleName() },\n                         ignore);\n             } finally {\n                 i = i.getSuperclass();\n@@ -585,29 +528,25 @@ private String getQuery(final SyncopeUserCond cond,\n         USchema schema = new USchema();\n         schema.setName(syncopeUserClassField.getName());\n         for (SchemaType type : SchemaType.values()) {\n-            if (syncopeUserClassField.getType().\n-                    getName().equals(type.getClassName())) {\n+            if (syncopeUserClassField.getType().getName().equals(type.getClassName())) {\n \n                 schema.setType(type);\n             }\n         }\n \n         UAttrValue attrValue = new UAttrValue();\n         try {\n-            if (cond.getType() != AttributeCond.Type.LIKE\n-                    && cond.getType() != AttributeCond.Type.ISNULL\n+            if (cond.getType() != AttributeCond.Type.LIKE && cond.getType() != AttributeCond.Type.ISNULL\n                     && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n \n                 schema.getValidator().validate(cond.getExpression(), attrValue);\n             }\n         } catch (ValidationException e) {\n-            LOG.error(\"Could not validate expression '\"\n-                    + cond.getExpression() + \"'\", e);\n+            LOG.error(\"Could not validate expression '\" + cond.getExpression() + \"'\", e);\n             return EMPTY_ATTR_QUERY;\n         }\n \n-        final StringBuilder query = new StringBuilder(\n-                \"SELECT DISTINCT user_id FROM user_search WHERE \");\n+        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT user_id FROM user_search WHERE \");\n \n         fillAttributeQuery(query, attrValue, schema, cond, not, parameters);\n "},{"sha":"799b5719a44ee41e51b6ea8739eebc5e7dbae879","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/VirAttrDAOImpl.java","status":"modified","additions":7,"deletions":14,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirAttrDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirAttrDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirAttrDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,31 +28,26 @@\n public class VirAttrDAOImpl extends AbstractDAOImpl implements VirAttrDAO {\n \n     @Override\n-    public <T extends AbstractVirAttr> T find(\n-            final Long id, final Class<T> reference) {\n+    public <T extends AbstractVirAttr> T find(final Long id, final Class<T> reference) {\n \n         return entityManager.find(reference, id);\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> List<T> findAll(\n-            final Class<T> reference) {\n+    public <T extends AbstractVirAttr> List<T> findAll(final Class<T> reference) {\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> T save(\n-            final T virtualAttribute) {\n+    public <T extends AbstractVirAttr> T save(final T virtualAttribute) {\n \n         return entityManager.merge(virtualAttribute);\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> void delete(\n-            final Long id, final Class<T> reference) {\n+    public <T extends AbstractVirAttr> void delete(final Long id, final Class<T> reference) {\n \n         T virtualAttribute = find(id, reference);\n         if (virtualAttribute == null) {\n@@ -63,12 +58,10 @@ public <T extends AbstractVirAttr> void delete(\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> void delete(\n-            final T virtualAttribute) {\n+    public <T extends AbstractVirAttr> void delete(final T virtualAttribute) {\n \n         if (virtualAttribute.getOwner() != null) {\n-            virtualAttribute.getOwner().\n-                    removeVirtualAttribute(virtualAttribute);\n+            virtualAttribute.getOwner().removeVirtualAttribute(virtualAttribute);\n         }\n \n         entityManager.remove(virtualAttribute);"},{"sha":"6e620d29e68b81101ec9c2b8c8806f222092b610","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/VirSchemaDAOImpl.java","status":"modified","additions":12,"deletions":21,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FVirSchemaDAOImpl.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -41,18 +41,15 @@ public class VirSchemaDAOImpl extends AbstractDAOImpl implements VirSchemaDAO {\n     private ResourceDAO resourceDAO;\n \n     @Override\n-    public <T extends AbstractVirSchema> T find(final String name,\n-            final Class<T> reference) {\n+    public <T extends AbstractVirSchema> T find(final String name, final Class<T> reference) {\n \n         return entityManager.find(reference, name);\n     }\n \n     @Override\n-    public <T extends AbstractVirSchema> List<T> findAll(\n-            final Class<T> reference) {\n+    public <T extends AbstractVirSchema> List<T> findAll(final Class<T> reference) {\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\");\n         return query.getResultList();\n     }\n \n@@ -62,22 +59,18 @@ public <T extends AbstractVirSchema> T save(final T virtualSchema) {\n     }\n \n     @Override\n-    public void delete(final String name,\n-            final AttributableUtil attributableUtil) {\n+    public void delete(final String name, final AttributableUtil attributableUtil) {\n \n-        final AbstractVirSchema virtualSchema =\n-                find(name, attributableUtil.virtualSchemaClass());\n+        final AbstractVirSchema virtualSchema = find(name, attributableUtil.virtualSchemaClass());\n \n         if (virtualSchema == null) {\n             return;\n         }\n \n-        List<? extends AbstractVirAttr> attributes = getAttributes(\n-                virtualSchema,\n-                attributableUtil.virtualAttributeClass());\n+        List<? extends AbstractVirAttr> attributes = getAttributes(virtualSchema, attributableUtil\n+                .virtualAttributeClass());\n \n-        final Set<Long> virtualAttributeIds =\n-                new HashSet<Long>(attributes.size());\n+        final Set<Long> virtualAttributeIds = new HashSet<Long>(attributes.size());\n \n         Class attributeClass = null;\n \n@@ -90,18 +83,16 @@ public void delete(final String name,\n             virtualAttributeDAO.delete(virtualAttributeId, attributeClass);\n         }\n \n-        resourceDAO.deleteMappings(\n-                name, attributableUtil.virtualIntMappingType());\n+        resourceDAO.deleteMappings(name, attributableUtil.virtualIntMappingType());\n \n         entityManager.remove(virtualSchema);\n     }\n \n     @Override\n-    public <T extends AbstractVirAttr> List<T> getAttributes(\n-            final AbstractVirSchema virtualSchema, final Class<T> reference) {\n+    public <T extends AbstractVirAttr> List<T> getAttributes(final AbstractVirSchema virtualSchema,\n+            final Class<T> reference) {\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT e FROM \" + reference.getSimpleName() + \" e\"\n+        Query query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e\"\n                 + \" WHERE e.virtualSchema=:schema\");\n         query.setParameter(\"schema\", virtualSchema);\n "},{"sha":"d385529a65db749896ae85e7ce804db3df855227","filename":"core/src/main/java/org/syncope/core/persistence/validation/attrvalue/AbstractValidator.java","status":"modified","additions":11,"deletions":21,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAbstractValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAbstractValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAbstractValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -36,8 +36,7 @@ public abstract class AbstractValidator implements Validator, Serializable {\n     /*\n      * Logger\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            AbstractValidator.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractValidator.class);\n \n     protected final AbstractSchema schema;\n \n@@ -46,16 +45,14 @@ public AbstractValidator(final AbstractSchema schema) {\n     }\n \n     @Override\n-    public <T extends AbstractAttrValue> void validate(final String value,\n-            T attributeValue)\n+    public <T extends AbstractAttrValue> void validate(final String value, T attributeValue)\n             throws ParsingValidationException, InvalidAttrValueException {\n \n         parseValue(value, attributeValue);\n         doValidate(attributeValue);\n     }\n \n-    private <T extends AbstractAttrValue> void parseValue(final String value,\n-            final T attributeValue)\n+    private <T extends AbstractAttrValue> void parseValue(final String value, final T attributeValue)\n             throws ParsingValidationException {\n \n         Exception exception = null;\n@@ -76,9 +73,8 @@ private <T extends AbstractAttrValue> void parseValue(final String value,\n                     if (schema.getFormatter() == null) {\n                         attributeValue.setLongValue(Long.valueOf(value));\n                     } else {\n-                        attributeValue.setLongValue(Long.valueOf(\n-                                ((DecimalFormat) schema.getFormatter()).parse(\n-                                value).longValue()));\n+                        attributeValue.setLongValue(Long.valueOf(((DecimalFormat) schema.getFormatter()).parse(value)\n+                                .longValue()));\n                     }\n                 } catch (Exception pe) {\n                     exception = pe;\n@@ -90,8 +86,7 @@ private <T extends AbstractAttrValue> void parseValue(final String value,\n                     if (schema.getFormatter() == null) {\n                         attributeValue.setDoubleValue(Double.valueOf(value));\n                     } else {\n-                        attributeValue.setDoubleValue(Double.valueOf(\n-                                ((DecimalFormat) schema.getFormatter()).parse(\n+                        attributeValue.setDoubleValue(Double.valueOf(((DecimalFormat) schema.getFormatter()).parse(\n                                 value).doubleValue()));\n                     }\n                 } catch (Exception pe) {\n@@ -102,12 +97,10 @@ private <T extends AbstractAttrValue> void parseValue(final String value,\n             case Date:\n                 try {\n                     if (schema.getFormatter() == null) {\n-                        attributeValue.setDateValue(DateUtils.parseDate(\n-                                value, SyncopeConstants.DATE_PATTERNS));\n+                        attributeValue.setDateValue(DateUtils.parseDate(value, SyncopeConstants.DATE_PATTERNS));\n                     } else {\n-                        attributeValue.setDateValue(new Date(\n-                                ((DateFormat) schema.getFormatter()).parse(\n-                                value).getTime()));\n+                        attributeValue.setDateValue(new Date(((DateFormat) schema.getFormatter()).parse(value)\n+                                .getTime()));\n                     }\n                 } catch (Exception pe) {\n                     exception = pe;\n@@ -118,12 +111,9 @@ private <T extends AbstractAttrValue> void parseValue(final String value,\n         }\n \n         if (exception != null) {\n-            throw new ParsingValidationException(\"While trying to parse '\"\n-                    + value + \"'\", exception);\n+            throw new ParsingValidationException(\"While trying to parse '\" + value + \"'\", exception);\n         }\n     }\n \n-    protected abstract <T extends AbstractAttrValue> void doValidate(\n-            T attributeValue)\n-            throws InvalidAttrValueException;\n+    protected abstract <T extends AbstractAttrValue> void doValidate(T attributeValue) throws InvalidAttrValueException;\n }"},{"sha":"569fb3230d79ff2f53fee13d3350c8197c485358","filename":"core/src/main/java/org/syncope/core/persistence/validation/attrvalue/AlwaysTrueValidator.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAlwaysTrueValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAlwaysTrueValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FAlwaysTrueValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -29,8 +29,7 @@ public AlwaysTrueValidator(AbstractSchema schema) {\n     }\n \n     @Override\n-    protected void doValidate(AbstractAttrValue attributeValue)\n-            throws InvalidAttrValueException {\n+    protected void doValidate(AbstractAttrValue attributeValue) throws InvalidAttrValueException {\n \n         Boolean value = attributeValue.getValue();\n         if (!value) {"},{"sha":"e7f179dd8d6c7aae195caab9f6bfb42f8e85874b","filename":"core/src/main/java/org/syncope/core/persistence/validation/attrvalue/BasicValidator.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FBasicValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FBasicValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FBasicValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -31,13 +31,10 @@ public BasicValidator(final AbstractSchema schema) {\n     }\n \n     @Override\n-    protected void doValidate(AbstractAttrValue attributeValue)\n-            throws InvalidAttrValueException {\n+    protected void doValidate(AbstractAttrValue attributeValue) throws InvalidAttrValueException {\n \n         if (SchemaType.Enum.equals(schema.getType())) {\n-            final String[] enumeration =\n-                    schema.getEnumerationValues().split(\n-                    AbstractSchema.enumValuesSeparator);\n+            final String[] enumeration = schema.getEnumerationValues().split(AbstractSchema.enumValuesSeparator);\n \n             final String value = attributeValue.getValueAsString();\n "},{"sha":"0bbcaa6b3376ade9308c2b9b388a2aa7da542bf7","filename":"core/src/main/java/org/syncope/core/persistence/validation/attrvalue/EmailAddressValidator.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FEmailAddressValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FEmailAddressValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FEmailAddressValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,19 +26,16 @@\n public class EmailAddressValidator extends AbstractValidator {\n \n     private static final Pattern EMAIL_PATTERN = Pattern.compile(\n-            \"^[\\\\w\\\\-]([\\\\.\\\\w])+[\\\\w]+@([\\\\w\\\\-]+\\\\.)+[A-Z]{2,4}$\",\n-            Pattern.CASE_INSENSITIVE);\n+            \"^[\\\\w\\\\-]([\\\\.\\\\w])+[\\\\w]+@([\\\\w\\\\-]+\\\\.)+[A-Z]{2,4}$\", Pattern.CASE_INSENSITIVE);\n \n     public EmailAddressValidator(final AbstractSchema schema) {\n         super(schema);\n     }\n \n     @Override\n-    protected void doValidate(final AbstractAttrValue attributeValue)\n-            throws InvalidAttrValueException {\n+    protected void doValidate(final AbstractAttrValue attributeValue) throws InvalidAttrValueException {\n \n-        Matcher matcher = EMAIL_PATTERN.matcher(\n-                (CharSequence) attributeValue.getValue());\n+        Matcher matcher = EMAIL_PATTERN.matcher((CharSequence) attributeValue.getValue());\n         if (!matcher.matches()) {\n             throw new InvalidAttrValueException(attributeValue);\n         }"},{"sha":"e0e9f0c1eebda09a184a1e0356ad669c6508a750","filename":"core/src/main/java/org/syncope/core/persistence/validation/attrvalue/InvalidAttrValueException.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FInvalidAttrValueException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FInvalidAttrValueException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FInvalidAttrValueException.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -27,8 +27,7 @@ public InvalidAttrValueException(final AbstractAttrValue value) {\n         super(\"Could not validate \" + value);\n     }\n \n-    public InvalidAttrValueException(\n-            final AbstractAttrValue value, Throwable t) {\n+    public InvalidAttrValueException(final AbstractAttrValue value, Throwable t) {\n         super(\"Could not validate \" + value, t);\n     }\n }"},{"sha":"541e32178e1d32652eebe1e04f21107fbe90d8f8","filename":"core/src/main/java/org/syncope/core/persistence/validation/attrvalue/Validator.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fattrvalue%2FValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -22,7 +22,6 @@\n \n public interface Validator {\n \n-    <T extends AbstractAttrValue> void validate(String value,\n-            T attributeValue)\n+    <T extends AbstractAttrValue> void validate(String value, T attributeValue)\n             throws ParsingValidationException, InvalidAttrValueException;\n }"},{"sha":"8f58403d26c842088189c27267307b8eb1aa5e95","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AbstractValidator.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAbstractValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,7 +26,6 @@ public abstract class AbstractValidator {\n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(\n-            AbstractValidator.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractValidator.class);\n \n }"},{"sha":"d42571639f61fc39478da98b932d919fee0ab893","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttrCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = AttrValidator.class)\n @Documented"},{"sha":"aa496d4ec697f14a5e55344d5be3e0fc04a46251","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttrValidator.java","status":"modified","additions":9,"deletions":17,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -23,46 +23,38 @@\n import org.syncope.core.persistence.beans.AbstractAttr;\n import org.syncope.types.EntityViolationType;\n \n-public class AttrValidator extends AbstractValidator\n-        implements ConstraintValidator<AttrCheck, AbstractAttr> {\n+public class AttrValidator extends AbstractValidator implements ConstraintValidator<AttrCheck, AbstractAttr> {\n \n     @Override\n     public void initialize(final AttrCheck constraintAnnotation) {\n     }\n \n     @Override\n-    public boolean isValid(final AbstractAttr object,\n-            final ConstraintValidatorContext context) {\n+    public boolean isValid(final AbstractAttr object, final ConstraintValidatorContext context) {\n \n         boolean isValid;\n \n         if (object == null) {\n             isValid = true;\n         } else {\n             if (object.getSchema().isUniqueConstraint()) {\n-                isValid = object.getValues().isEmpty()\n-                        && object.getUniqueValue() != null;\n+                isValid = object.getValues().isEmpty() && object.getUniqueValue() != null;\n             } else {\n-                isValid = !object.getValues().isEmpty()\n-                        && object.getUniqueValue() == null;\n+                isValid = !object.getValues().isEmpty() && object.getUniqueValue() == null;\n \n                 if (!object.getSchema().isMultivalue()) {\n                     isValid &= object.getValues().size() == 1;\n                 }\n             }\n \n             if (!isValid) {\n-                LOG.error(\"Invalid values for attribute \" + object + \": \"\n-                        + \"schema=\" + object.getSchema().getName() + \", \"\n-                        + \"values={}\", object.getValuesAsStrings());\n+                LOG.error(\"Invalid values for attribute \" + object + \": \" + \"schema=\" + object.getSchema().getName()\n+                        + \", \" + \"values={}\", object.getValuesAsStrings());\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(\n-                        EntityViolationType.InvalidValueList.toString()).\n-                        addNode(object\n-                        + \"(\" + object.getSchema().getName() + \")\"\n-                        + \"{\" + object.getValuesAsStrings() + \"}\").\n-                        addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidValueList.toString()).addNode(\n+                        object + \"(\" + object.getSchema().getName() + \")\" + \"{\" + object.getValuesAsStrings() + \"}\")\n+                        .addConstraintViolation();\n             }\n         }\n "},{"sha":"b4319331841476722dc226bec5a61443b1c58a5c","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttrValueCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = AttrValueValidator.class)\n @Documented"},{"sha":"dc0541e2b41ddb03dd76775475cd4d28e4b0a1e2","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/AttrValueValidator.java","status":"modified","additions":13,"deletions":21,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FAttrValueValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -25,16 +25,15 @@\n import org.syncope.core.persistence.beans.AbstractSchema;\n import org.syncope.types.EntityViolationType;\n \n-public class AttrValueValidator extends AbstractValidator\n-        implements ConstraintValidator<AttrValueCheck, AbstractAttrValue> {\n+public class AttrValueValidator extends AbstractValidator implements\n+        ConstraintValidator<AttrValueCheck, AbstractAttrValue> {\n \n     @Override\n     public void initialize(final AttrValueCheck constraintAnnotation) {\n     }\n \n     @Override\n-    public boolean isValid(final AbstractAttrValue object,\n-            final ConstraintValidatorContext context) {\n+    public boolean isValid(final AbstractAttrValue object, final ConstraintValidatorContext context) {\n \n         boolean isValid;\n \n@@ -63,32 +62,25 @@ public boolean isValid(final AbstractAttrValue object,\n                 LOG.error(\"More than one non-null value for \" + object);\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(\n-                        EntityViolationType.MoreThanOneNonNull.toString()).\n-                        addNode(object.toString().replaceAll(\"\\\\n\", \" \")).\n-                        addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(EntityViolationType.MoreThanOneNonNull.toString())\n+                        .addNode(object.toString().replaceAll(\"\\\\n\", \" \")).addConstraintViolation();\n             } else if (object instanceof AbstractAttrUniqueValue) {\n-                AbstractSchema uniqueValueSchema =\n-                        ((AbstractAttrUniqueValue) object).getSchema();\n+                AbstractSchema uniqueValueSchema = ((AbstractAttrUniqueValue) object).getSchema();\n                 AbstractSchema attrSchema = object.getAttribute().getSchema();\n \n                 isValid = uniqueValueSchema.equals(attrSchema);\n \n                 if (!isValid) {\n-                    LOG.error(\"Unique value schema for \"\n-                            + object.getClass().getSimpleName()\n-                            + \"[\" + object.getId() + \"]\"\n-                            + \" is \" + uniqueValueSchema + \", while owning \"\n-                            + \"attribute schema is \" + attrSchema);\n+                    LOG.error(\"Unique value schema for \" + object.getClass().getSimpleName() + \"[\" + object.getId()\n+                            + \"]\" + \" is \" + uniqueValueSchema + \", while owning \" + \"attribute schema is \"\n+                            + attrSchema);\n \n                     context.disableDefaultConstraintViolation();\n                     context.buildConstraintViolationWithTemplate(\n-                            EntityViolationType.valueOf(\"Invalid\"\n-                            + attrSchema.getClass().getSimpleName()).toString()).\n-                            addNode(object.getClass().getSimpleName()\n-                            + \"[\" + object.getId() + \"].schema=\"\n-                            + uniqueValueSchema\n-                            + \" != \" + attrSchema).addConstraintViolation();\n+                            EntityViolationType.valueOf(\"Invalid\" + attrSchema.getClass().getSimpleName()).toString())\n+                            .addNode(\n+                                    object.getClass().getSimpleName() + \"[\" + object.getId() + \"].schema=\"\n+                                            + uniqueValueSchema + \" != \" + attrSchema).addConstraintViolation();\n                 }\n             }\n         }"},{"sha":"b89d955c4fffaaf3f6f2a58c30967326674d9e4d","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/EntitlementCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntitlementCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntitlementCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntitlementCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = EntitlementValidator.class)\n @Documented"},{"sha":"2e70bbe087999f1b1ca99599384182b3fed485cf","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/EntitlementValidator.java","status":"modified","additions":8,"deletions":14,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntitlementValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntitlementValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntitlementValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -25,19 +25,17 @@\n import org.syncope.core.persistence.beans.Entitlement;\n import org.syncope.types.EntityViolationType;\n \n-public class EntitlementValidator extends AbstractValidator\n-        implements ConstraintValidator<EntitlementCheck, Entitlement> {\n+public class EntitlementValidator extends AbstractValidator implements\n+        ConstraintValidator<EntitlementCheck, Entitlement> {\n \n-    private static final Pattern ROLE_ENTITLEMENT_NAME_PATTERN =\n-            Pattern.compile(\"^ROLE_([\\\\d])+\");\n+    private static final Pattern ROLE_ENTITLEMENT_NAME_PATTERN = Pattern.compile(\"^ROLE_([\\\\d])+\");\n \n     @Override\n     public void initialize(final EntitlementCheck constraintAnnotation) {\n     }\n \n     @Override\n-    public boolean isValid(final Entitlement object,\n-            final ConstraintValidatorContext context) {\n+    public boolean isValid(final Entitlement object, final ConstraintValidatorContext context) {\n \n         boolean isValid = false;\n \n@@ -47,20 +45,16 @@ public boolean isValid(final Entitlement object,\n             if (object.getName() == null) {\n                 isValid = false;\n             } else {\n-                Matcher matcher = ROLE_ENTITLEMENT_NAME_PATTERN.matcher(\n-                        object.getName());\n+                Matcher matcher = ROLE_ENTITLEMENT_NAME_PATTERN.matcher(object.getName());\n                 isValid = !matcher.matches();\n             }\n \n             if (!isValid) {\n-                LOG.error(object + \" cannot have name \"\n-                        + \"starting by ROLE_\");\n+                LOG.error(object + \" cannot have name \" + \"starting by ROLE_\");\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(\n-                        EntityViolationType.InvalidEntitlementName.toString()).\n-                        addNode(object.toString()).\n-                        addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidEntitlementName.toString())\n+                        .addNode(object.toString()).addConstraintViolation();\n             }\n         }\n "},{"sha":"04b88e8eafe7ee0826c77759112cd0755a911dd3","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/EntityValidationInterceptor.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntityValidationInterceptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntityValidationInterceptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FEntityValidationInterceptor.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -39,8 +39,7 @@ public class EntityValidationInterceptor {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            EntityValidationInterceptor.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(EntityValidationInterceptor.class);\n \n     @Autowired\n     private Validator validator;\n@@ -53,15 +52,12 @@ public class EntityValidationInterceptor {\n      * @throws Throwable if anything goes wrong\n      */\n     @Around(\"execution(* org.syncope.core.persistence.dao..*.save(..))\")\n-    public final Object save(final ProceedingJoinPoint pjp)\n-            throws Throwable {\n+    public final Object save(final ProceedingJoinPoint pjp) throws Throwable {\n \n-        Set<ConstraintViolation<Object>> violations =\n-                validator.validate(pjp.getArgs()[0]);\n+        Set<ConstraintViolation<Object>> violations = validator.validate(pjp.getArgs()[0]);\n         if (!violations.isEmpty()) {\n             LOG.error(\"Bean validation errors found: {}\", violations);\n-            throw new InvalidEntityException(\n-                    pjp.getArgs()[0].getClass().getSimpleName(), violations);\n+            throw new InvalidEntityException(pjp.getArgs()[0].getClass().getSimpleName(), violations);\n         }\n \n         return pjp.proceed();"},{"sha":"8adf3dfaac91d212f945272161932b865ad07f20","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/ExternalResourceCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = ExternalResourceValidator.class)\n @Documented"},{"sha":"0e59dfb44893d29495dfd3e2bc71eea6cf0c3bad","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/ExternalResourceValidator.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -24,16 +24,15 @@\n import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.types.EntityViolationType;\n \n-public class ExternalResourceValidator extends AbstractValidator\n-        implements ConstraintValidator<ExternalResourceCheck, ExternalResource> {\n+public class ExternalResourceValidator extends AbstractValidator implements\n+        ConstraintValidator<ExternalResourceCheck, ExternalResource> {\n \n     @Override\n     public void initialize(final ExternalResourceCheck constraintAnnotation) {\n     }\n \n     @Override\n-    public boolean isValid(final ExternalResource object,\n-            final ConstraintValidatorContext context) {\n+    public boolean isValid(final ExternalResource object, final ConstraintValidatorContext context) {\n \n         boolean isValid;\n \n@@ -49,14 +48,11 @@ public boolean isValid(final ExternalResource object,\n             isValid = accountIds == 1;\n \n             if (!isValid) {\n-                LOG.error(\"Mappings for \" + object\n-                        + \" have 0 or >1 account ids\");\n+                LOG.error(\"Mappings for \" + object + \" have 0 or >1 account ids\");\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(\n-                        EntityViolationType.InvalidAccountIdCount.toString()).\n-                        addNode(object + \".accountIds.size==\" + accountIds).\n-                        addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidAccountIdCount.toString())\n+                        .addNode(object + \".accountIds.size==\" + accountIds).addConstraintViolation();\n             }\n         }\n "},{"sha":"596b856f94d62dd21329f30215870547ed4152c7","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/InvalidEntityException.java","status":"modified","additions":7,"deletions":16,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FInvalidEntityException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FInvalidEntityException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FInvalidEntityException.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -34,8 +34,7 @@ public class InvalidEntityException extends ValidationException {\n \n     private final Map<Class, Set<EntityViolationType>> violations;\n \n-    public InvalidEntityException(final String entityClassSimpleName,\n-            final Set<ConstraintViolation<Object>> violations) {\n+    public InvalidEntityException(final String entityClassSimpleName, final Set<ConstraintViolation<Object>> violations) {\n \n         super();\n \n@@ -45,24 +44,18 @@ public InvalidEntityException(final String entityClassSimpleName,\n         EntityViolationType entityViolationType;\n         for (ConstraintViolation<Object> violation : violations) {\n             try {\n-                entityViolationType = EntityViolationType.valueOf(\n-                        violation.getMessageTemplate());\n+                entityViolationType = EntityViolationType.valueOf(violation.getMessageTemplate());\n             } catch (IllegalArgumentException e) {\n                 entityViolationType = EntityViolationType.Standard;\n-                entityViolationType.setMessageTemplate(\n-                        violation.getPropertyPath() + \": \"\n-                        + violation.getMessage());\n+                entityViolationType.setMessageTemplate(violation.getPropertyPath() + \": \" + violation.getMessage());\n             }\n \n-            if (!this.violations.containsKey(\n-                    violation.getLeafBean().getClass())) {\n+            if (!this.violations.containsKey(violation.getLeafBean().getClass())) {\n \n-                this.violations.put(violation.getLeafBean().getClass(),\n-                        EnumSet.noneOf(EntityViolationType.class));\n+                this.violations.put(violation.getLeafBean().getClass(), EnumSet.noneOf(EntityViolationType.class));\n             }\n \n-            this.violations.get(violation.getLeafBean().getClass()).\n-                    add(entityViolationType);\n+            this.violations.get(violation.getLeafBean().getClass()).add(entityViolationType);\n         }\n     }\n \n@@ -90,9 +83,7 @@ public String getMessage() {\n         StringBuilder sb = new StringBuilder();\n \n         for (Class entity : violations.keySet()) {\n-            sb.append(entity.getSimpleName()).append(\" \").\n-                    append(violations.get(entity).toString()).\n-                    append(\", \");\n+            sb.append(entity.getSimpleName()).append(\" \").append(violations.get(entity).toString()).append(\", \");\n         }\n         sb.delete(sb.lastIndexOf(\", \"), sb.length());\n "},{"sha":"aa79bb29688dab6fd462676032ac0680cc2138f1","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/NotificationCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = NotificationValidator.class)\n @Documented"},{"sha":"930b4b056a4ee2ccb6cc7400e627fe6c41258004","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/NotificationValidator.java","status":"modified","additions":8,"deletions":15,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -23,17 +23,15 @@\n import org.syncope.core.persistence.beans.Notification;\n import org.syncope.types.EntityViolationType;\n \n-public class NotificationValidator extends AbstractValidator\n-        implements ConstraintValidator<NotificationCheck, Notification> {\n+public class NotificationValidator extends AbstractValidator implements\n+        ConstraintValidator<NotificationCheck, Notification> {\n \n     @Override\n     public void initialize(final NotificationCheck constraintAnnotation) {\n     }\n \n     @Override\n-    public boolean isValid(\n-            final Notification value,\n-            final ConstraintValidatorContext context) {\n+    public boolean isValid(final Notification value, final ConstraintValidatorContext context) {\n \n         context.disableDefaultConstraintViolation();\n \n@@ -43,24 +41,19 @@ public boolean isValid(\n             isValid = false;\n \n             context.buildConstraintViolationWithTemplate(\"No events\").addNode(\n-                    EntityViolationType.InvalidNotification.toString()).\n-                    addNode(\"events\").addConstraintViolation();\n+                    EntityViolationType.InvalidNotification.toString()).addNode(\"events\").addConstraintViolation();\n         }\n         if (!value.getAbout().checkValidity()) {\n             isValid = false;\n \n-            context.buildConstraintViolationWithTemplate(\n-                    \"Invalid about search condition\").addNode(\n-                    EntityViolationType.InvalidNotification.toString()).\n-                    addNode(\"about\").addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\"Invalid about search condition\").addNode(\n+                    EntityViolationType.InvalidNotification.toString()).addNode(\"about\").addConstraintViolation();\n         }\n         if (!value.getRecipients().checkValidity()) {\n             isValid = false;\n \n-            context.buildConstraintViolationWithTemplate(\n-                    \"Invalid recipients search condition\").addNode(\n-                    EntityViolationType.InvalidNotification.toString()).\n-                    addNode(\"recipients\").addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(\"Invalid recipients search condition\").addNode(\n+                    EntityViolationType.InvalidNotification.toString()).addNode(\"recipients\").addConstraintViolation();\n         }\n \n         return isValid;"},{"sha":"64d18cbb847148620c18466abbcc87fb83ffc1f8","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/PolicyCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = PolicyValidator.class)\n @Documented"},{"sha":"8685a26e437d044693bc059291e672e007533b67","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/PolicyValidator.java","status":"modified","additions":22,"deletions":42,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPolicyValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -31,8 +31,7 @@\n import org.syncope.types.PasswordPolicySpec;\n import org.syncope.types.SyncPolicySpec;\n \n-public class PolicyValidator extends AbstractValidator\n-        implements ConstraintValidator<PolicyCheck, Policy> {\n+public class PolicyValidator extends AbstractValidator implements ConstraintValidator<PolicyCheck, Policy> {\n \n     @Autowired\n     private PolicyDAO policyDAO;\n@@ -42,43 +41,32 @@ public void initialize(final PolicyCheck constraintAnnotation) {\n     }\n \n     @Override\n-    public boolean isValid(\n-            final Policy object,\n-            final ConstraintValidatorContext context) {\n+    public boolean isValid(final Policy object, final ConstraintValidatorContext context) {\n \n         context.disableDefaultConstraintViolation();\n \n         if (object.getSpecification() != null\n-                && ((object instanceof PasswordPolicy\n-                && !(object.getSpecification() instanceof PasswordPolicySpec))\n-                || ((object instanceof AccountPolicy\n-                && !(object.getSpecification() instanceof AccountPolicySpec)))\n-                || ((object instanceof SyncPolicy\n-                && !(object.getSpecification() instanceof SyncPolicySpec))))) {\n-\n-            context.buildConstraintViolationWithTemplate(\n-                    \"Invalid policy specification\").\n-                    addNode(EntityViolationType.valueOf(\n-                    \"Invalid\" + object.getClass().getSimpleName()).name()).\n-                    addConstraintViolation();\n+                && ((object instanceof PasswordPolicy && !(object.getSpecification() instanceof PasswordPolicySpec))\n+                        || ((object instanceof AccountPolicy && !(object.getSpecification() instanceof AccountPolicySpec))) || ((object instanceof SyncPolicy && !(object\n+                        .getSpecification() instanceof SyncPolicySpec))))) {\n+\n+            context.buildConstraintViolationWithTemplate(\"Invalid policy specification\").addNode(\n+                    EntityViolationType.valueOf(\"Invalid\" + object.getClass().getSimpleName()).name())\n+                    .addConstraintViolation();\n \n             return false;\n         }\n \n         switch (object.getType()) {\n             case GLOBAL_PASSWORD:\n-                \n+\n                 // just one GLOBAL_PASSWORD policy\n-                final PasswordPolicy passwordPolicy =\n-                        policyDAO.getGlobalPasswordPolicy();\n+                final PasswordPolicy passwordPolicy = policyDAO.getGlobalPasswordPolicy();\n \n-                if (passwordPolicy != null\n-                        && !passwordPolicy.getId().equals(object.getId())) {\n+                if (passwordPolicy != null && !passwordPolicy.getId().equals(object.getId())) {\n \n-                    context.buildConstraintViolationWithTemplate(\n-                            \"Password policy already exists\").addNode(\n-                            EntityViolationType.InvalidPasswordPolicy.name()).\n-                            addConstraintViolation();\n+                    context.buildConstraintViolationWithTemplate(\"Password policy already exists\").addNode(\n+                            EntityViolationType.InvalidPasswordPolicy.name()).addConstraintViolation();\n \n                     return false;\n                 }\n@@ -90,16 +78,12 @@ public boolean isValid(\n             case GLOBAL_ACCOUNT:\n \n                 // just one GLOBAL_ACCOUNT policy\n-                final AccountPolicy accountPolicy =\n-                        policyDAO.getGlobalAccountPolicy();\n+                final AccountPolicy accountPolicy = policyDAO.getGlobalAccountPolicy();\n \n-                if (accountPolicy != null\n-                        && !accountPolicy.getId().equals(object.getId())) {\n+                if (accountPolicy != null && !accountPolicy.getId().equals(object.getId())) {\n \n-                    context.buildConstraintViolationWithTemplate(\n-                            \"Global Account policy already exists\").addNode(\n-                            EntityViolationType.InvalidAccountPolicy.name()).\n-                            addConstraintViolation();\n+                    context.buildConstraintViolationWithTemplate(\"Global Account policy already exists\").addNode(\n+                            EntityViolationType.InvalidAccountPolicy.name()).addConstraintViolation();\n \n                     return false;\n                 }\n@@ -111,16 +95,12 @@ public boolean isValid(\n             case GLOBAL_SYNC:\n \n                 // just one GLOBAL_SYNC policy\n-                final SyncPolicy syncPolicy =\n-                        policyDAO.getGlobalSyncPolicy();\n+                final SyncPolicy syncPolicy = policyDAO.getGlobalSyncPolicy();\n \n-                if (syncPolicy != null\n-                        && !syncPolicy.getId().equals(object.getId())) {\n+                if (syncPolicy != null && !syncPolicy.getId().equals(object.getId())) {\n \n-                    context.buildConstraintViolationWithTemplate(\n-                            \"Global Sync policy already exists\").addNode(\n-                            EntityViolationType.InvalidSyncPolicy.name()).\n-                            addConstraintViolation();\n+                    context.buildConstraintViolationWithTemplate(\"Global Sync policy already exists\").addNode(\n+                            EntityViolationType.InvalidSyncPolicy.name()).addConstraintViolation();\n \n                     return false;\n                 }"},{"sha":"5607f1064e0b306baad1164a41a9b8ee9392e9d3","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/PropagationTaskCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = PropagationTaskValidator.class)\n @Documented"},{"sha":"29a410f383df3ac9ff072eee200070f8b82730eb","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/PropagationTaskValidator.java","status":"modified","additions":8,"deletions":14,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FPropagationTaskValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -27,16 +27,15 @@\n import org.syncope.types.PropagationOperation;\n import org.syncope.types.PropagationTaskExecStatus;\n \n-public class PropagationTaskValidator extends AbstractValidator\n-        implements ConstraintValidator<PropagationTaskCheck, PropagationTask> {\n+public class PropagationTaskValidator extends AbstractValidator implements\n+        ConstraintValidator<PropagationTaskCheck, PropagationTask> {\n \n     @Override\n     public void initialize(final PropagationTaskCheck constraintAnnotation) {\n     }\n \n     @Override\n-    public boolean isValid(final PropagationTask object,\n-            final ConstraintValidatorContext context) {\n+    public boolean isValid(final PropagationTask object, final ConstraintValidatorContext context) {\n \n         boolean isValid;\n \n@@ -47,29 +46,24 @@ public boolean isValid(final PropagationTask object,\n                     && object.getPropagationOperation() != null\n                     && !object.getAttributes().isEmpty()\n                     && object.getResource() != null\n-                    && (PropagationOperation.DELETE == object.\n-                    getPropagationOperation()\n-                    || object.getSyncopeUser() != null);\n+                    && (PropagationOperation.DELETE == object.getPropagationOperation() || object.getSyncopeUser() != null);\n \n             if (isValid) {\n                 List<TaskExec> executions = object.getExecs();\n                 for (TaskExec execution : executions) {\n                     try {\n-                        PropagationTaskExecStatus.valueOf(\n-                                execution.getStatus());\n+                        PropagationTaskExecStatus.valueOf(execution.getStatus());\n                     } catch (IllegalArgumentException e) {\n-                        LOG.error(\"Invalid execution status '\"\n-                                + execution.getStatus() + \"'\", e);\n+                        LOG.error(\"Invalid execution status '\" + execution.getStatus() + \"'\", e);\n                         isValid = false;\n                     }\n                 }\n             }\n \n             if (!isValid) {\n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(\n-                        EntityViolationType.InvalidPropagationTask.toString()).\n-                        addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidPropagationTask.toString())\n+                        .addConstraintViolation();\n             }\n         }\n "},{"sha":"876ddd78af0523f9de6706b4c12d0643f4e95e19","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/ReportCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = ReportValidator.class)\n @Documented"},{"sha":"05832b35d1d3d61b9c87b80c675d367d2bbbe909","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/ReportValidator.java","status":"modified","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FReportValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -28,32 +28,28 @@\n import org.syncope.core.persistence.beans.Report;\n import org.syncope.types.EntityViolationType;\n \n-public class ReportValidator extends AbstractValidator\n-        implements ConstraintValidator<ReportCheck, Report> {\n+public class ReportValidator extends AbstractValidator implements ConstraintValidator<ReportCheck, Report> {\n \n     @Override\n     public void initialize(final ReportCheck constraintAnnotation) {\n     }\n \n     @Override\n     @SuppressWarnings(\"ResultOfObjectAllocationIgnored\")\n-    public boolean isValid(final Report object,\n-            final ConstraintValidatorContext context) {\n+    public boolean isValid(final Report object, final ConstraintValidatorContext context) {\n \n         boolean isValid = true;\n \n         if (object.getCronExpression() != null) {\n             try {\n                 new CronExpression(object.getCronExpression());\n             } catch (ParseException e) {\n-                LOG.error(\"Invalid cron expression '\"\n-                        + object.getCronExpression() + \"'\", e);\n+                LOG.error(\"Invalid cron expression '\" + object.getCronExpression() + \"'\", e);\n                 isValid = false;\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidReport.name()).\n-                        addNode(object + \".cronExpression==\" + object.getCronExpression()).\n-                        addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidReport.name()).addNode(\n+                        object + \".cronExpression==\" + object.getCronExpression()).addConstraintViolation();\n             }\n         }\n \n@@ -66,9 +62,8 @@ public boolean isValid(final Report object,\n             isValid = false;\n \n             context.disableDefaultConstraintViolation();\n-            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidReport.name()).\n-                    addNode(object + \".reportletConfs with duplicate names\").\n-                    addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidReport.name()).addNode(\n+                    object + \".reportletConfs with duplicate names\").addConstraintViolation();\n         }\n \n         return isValid;"},{"sha":"03d6817385ff6f09d03cae55eae2127f4fdd03f9","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SchedTaskCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SchedTaskValidator.class)\n @Documented"},{"sha":"6e7f50f138af808f8cbb9cf90446fe8064f551f7","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SchedTaskValidator.java","status":"modified","additions":7,"deletions":16,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchedTaskValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,16 +26,14 @@\n import org.syncope.core.scheduling.AbstractTaskJob;\n import org.syncope.types.EntityViolationType;\n \n-public class SchedTaskValidator extends AbstractValidator\n-        implements ConstraintValidator<SchedTaskCheck, SchedTask> {\n+public class SchedTaskValidator extends AbstractValidator implements ConstraintValidator<SchedTaskCheck, SchedTask> {\n \n     @Override\n     public void initialize(final SchedTaskCheck constraintAnnotation) {\n     }\n \n     @Override\n-    public boolean isValid(final SchedTask object,\n-            final ConstraintValidatorContext context) {\n+    public boolean isValid(final SchedTask object, final ConstraintValidatorContext context) {\n \n         boolean isValid = true;\n \n@@ -51,27 +49,20 @@ public boolean isValid(final SchedTask object,\n             isValid = false;\n \n             context.disableDefaultConstraintViolation();\n-            context.buildConstraintViolationWithTemplate(\n-                    EntityViolationType.InvalidSchedTask.toString()).\n-                    addNode(object\n-                    + \".jobClassName is not valid\").\n-                    addConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidSchedTask.toString()).addNode(\n+                    object + \".jobClassName is not valid\").addConstraintViolation();\n         }\n \n         if (isValid && object.getCronExpression() != null) {\n             try {\n                 new CronExpression(object.getCronExpression());\n             } catch (ParseException e) {\n-                LOG.error(\"Invalid cron expression '\"\n-                        + object.getCronExpression() + \"'\", e);\n+                LOG.error(\"Invalid cron expression '\" + object.getCronExpression() + \"'\", e);\n                 isValid = false;\n \n                 context.disableDefaultConstraintViolation();\n-                context.buildConstraintViolationWithTemplate(\n-                        EntityViolationType.InvalidSchedTask.toString()).\n-                        addNode(object + \".cronExpression==\"\n-                        + object.getCronExpression()).\n-                        addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(EntityViolationType.InvalidSchedTask.toString()).addNode(\n+                        object + \".cronExpression==\" + object.getCronExpression()).addConstraintViolation();\n             }\n         }\n "},{"sha":"c7d2635d8c09adb76bbc4f4988256b16f59596eb","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SchemaCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SchemaValidator.class)\n @Documented"},{"sha":"daf761657b9baa96705440d406b130c34d806aa2","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SchemaMappingCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34","patch":"@@ -26,9 +26,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target({\n-    ElementType.TYPE\n-})\n+@Target( { ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = SchemaMappingValidator.class)\n @Documented"},{"sha":"b68a1f5194be0ad6e8146adf69fa9198e41f48e5","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SchemaMappingValidator.java","status":"modified","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34"},{"sha":"1509bf95bc4214c2ed1b36a07b136917ce908261","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SchemaValidator.java","status":"modified","additions":11,"deletions":19,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34"},{"sha":"cf00df858aa0ef7f9df5c50031950d036f7fab47","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SyncTaskCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34"},{"sha":"07e6a5c6303c2de9b1499052c891a2fbb66f2074","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SyncTaskValidator.java","status":"modified","additions":8,"deletions":17,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncTaskValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34"},{"sha":"8a9c8e213ea4c38757809b45e631d17e2bdffcc7","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SyncopeUserCheck.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserCheck.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34"},{"sha":"e3099ee875c4356b196197d9344d47f248191c38","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SyncopeUserValidator.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10f7cb47aaf9449c18c8ab21d39ed77aa482bc34/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java?ref=10f7cb47aaf9449c18c8ab21d39ed77aa482bc34"}]}