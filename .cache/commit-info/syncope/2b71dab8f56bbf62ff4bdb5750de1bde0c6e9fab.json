{"sha":"2b71dab8f56bbf62ff4bdb5750de1bde0c6e9fab","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJiNzFkYWI4ZjU2YmJmNjJmZjRiZGI1NzUwZGUxYmRlMGM2ZTlmYWI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-01-10T12:07:12Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-01-10T12:07:20Z"},"message":"Reconciliation reportlet: fixing misaligned management for byte[] attributes","tree":{"sha":"e4b91ec4c836e1f83c3381d432e6ae6505097b73","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e4b91ec4c836e1f83c3381d432e6ae6505097b73"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2b71dab8f56bbf62ff4bdb5750de1bde0c6e9fab","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2b71dab8f56bbf62ff4bdb5750de1bde0c6e9fab","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2b71dab8f56bbf62ff4bdb5750de1bde0c6e9fab","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2b71dab8f56bbf62ff4bdb5750de1bde0c6e9fab/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e44e5534009b8da9f7bda899b16a11340cff8293","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e44e5534009b8da9f7bda899b16a11340cff8293","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e44e5534009b8da9f7bda899b16a11340cff8293"}],"stats":{"total":31,"additions":20,"deletions":11},"files":[{"sha":"ac5c1f1ed0310955142da88d994086dc9df3b4d2","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReconciliationReportlet.java","status":"modified","additions":20,"deletions":11,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2b71dab8f56bbf62ff4bdb5750de1bde0c6e9fab/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2b71dab8f56bbf62ff4bdb5750de1bde0c6e9fab/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java?ref=2b71dab8f56bbf62ff4bdb5750de1bde0c6e9fab","patch":"@@ -28,7 +28,6 @@\n import org.apache.commons.collections4.Closure;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IterableUtils;\n-import org.apache.commons.collections4.SetUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -60,6 +59,7 @@\n import org.apache.syncope.core.provisioning.api.ConnectorFactory;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n+import org.identityconnectors.common.Base64;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n@@ -259,6 +259,22 @@ private void doExtract(\n         handler.endElement(\"\", \"\", getAnyElementName(any.getType().getKind()));\n     }\n \n+    private Set<Object> getValues(final Attribute attr) {\n+        Set<Object> values;\n+        if (attr.getValue() == null || attr.getValue().isEmpty()) {\n+            values = Collections.emptySet();\n+        } else if (attr.getValue().get(0) instanceof byte[]) {\n+            values = new HashSet<>(attr.getValue().size());\n+            for (Object single : attr.getValue()) {\n+                values.add(Base64.encode((byte[]) single));\n+            }\n+        } else {\n+            values = new HashSet<>(attr.getValue());\n+        }\n+\n+        return values;\n+    }\n+\n     private void doExtract(final ContentHandler handler, final List<? extends Any<?>> anys)\n             throws SAXException, ReportException {\n \n@@ -300,19 +316,15 @@ private void doExtract(final ContentHandler handler, final List<? extends Any<?>\n \n                         final Map<String, Set<Object>> syncopeAttrs = new HashMap<>();\n                         for (Attribute attr : preparedAttrs.getRight()) {\n-                            syncopeAttrs.put(\n-                                    attr.getName(),\n-                                    attr.getValue() == null ? null : new HashSet<>(attr.getValue()));\n+                            syncopeAttrs.put(attr.getName(), getValues(attr));\n                         }\n \n                         final Map<String, Set<Object>> resourceAttrs = new HashMap<>();\n                         for (Attribute attr : connectorObject.getAttributes()) {\n                             if (!OperationalAttributes.PASSWORD_NAME.equals(attr.getName())\n                                     && !OperationalAttributes.ENABLE_NAME.equals(attr.getName())) {\n \n-                                resourceAttrs.put(\n-                                        attr.getName(),\n-                                        attr.getValue() == null ? null : new HashSet<>(attr.getValue()));\n+                                resourceAttrs.put(attr.getName(), getValues(attr));\n                             }\n                         }\n \n@@ -332,10 +344,7 @@ public void execute(final String name) {\n \n                         for (Map.Entry<String, Set<Object>> entry : resourceAttrs.entrySet()) {\n                             if (syncopeAttrs.containsKey(entry.getKey())) {\n-                                if (!Objects.equals(\n-                                        SetUtils.emptyIfNull(syncopeAttrs.get(entry.getKey())),\n-                                        SetUtils.emptyIfNull(entry.getValue()))) {\n-\n+                                if (!Objects.equals(syncopeAttrs.get(entry.getKey()), entry.getValue())) {\n                                     misaligned.add(new Misaligned(\n                                             resource.getKey(),\n                                             connObjectKeyValue,"}]}