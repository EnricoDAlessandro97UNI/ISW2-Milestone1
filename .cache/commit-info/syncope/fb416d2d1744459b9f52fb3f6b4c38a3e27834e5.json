{"sha":"fb416d2d1744459b9f52fb3f6b4c38a3e27834e5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZiNDE2ZDJkMTc0NDQ1OWI5ZjUyZmIzZjZiNGMzOGEzZTI3ODM0ZTU=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-01-12T16:49:59Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2016-01-12T16:50:34Z"},"message":"[SYNCOPE-755] Only unassigned AnyTypeClasses have to be available to be assigned to types","tree":{"sha":"620eba441e0370c0b3a35e21a90bf27683364d7f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/620eba441e0370c0b3a35e21a90bf27683364d7f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fb416d2d1744459b9f52fb3f6b4c38a3e27834e5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fb416d2d1744459b9f52fb3f6b4c38a3e27834e5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fb416d2d1744459b9f52fb3f6b4c38a3e27834e5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fb416d2d1744459b9f52fb3f6b4c38a3e27834e5/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"4ed984ef6c7def62159e94b939ab3bfc6c83fe1d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4ed984ef6c7def62159e94b939ab3bfc6c83fe1d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4ed984ef6c7def62159e94b939ab3bfc6c83fe1d"}],"stats":{"total":43,"additions":29,"deletions":14},"files":[{"sha":"a0794622383c03a3015be868271569d45067ffa8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb416d2d1744459b9f52fb3f6b4c38a3e27834e5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb416d2d1744459b9f52fb3f6b4c38a3e27834e5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=fb416d2d1744459b9f52fb3f6b4c38a3e27834e5","patch":"@@ -101,8 +101,8 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                         } catch (Exception e) {\n                             LOG.error(\"While creating or updating AnyTypeClassTO\", e);\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            modal.getNotificationPanel().refresh(target);\n                         }\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n                 };\n             }"},{"sha":"1226ddb9f0fd734032683982b956303dc85f4d7e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeDetailsPanel.java","status":"modified","additions":25,"deletions":10,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb416d2d1744459b9f52fb3f6b4c38a3e27834e5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb416d2d1744459b9f52fb3f6b4c38a3e27834e5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java?ref=fb416d2d1744459b9f52fb3f6b4c38a3e27834e5","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n+import org.apache.syncope.common.rest.api.service.AnyTypeService;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -42,8 +43,11 @@ public class AnyTypeDetailsPanel extends Panel {\n \n     private static final long serialVersionUID = 8131650329622035501L;\n \n+    private final AnyTypeTO anyTypeTO;\n+\n     public AnyTypeDetailsPanel(final String id, final AnyTypeTO anyTypeTO) {\n         super(id);\n+        this.anyTypeTO = anyTypeTO;\n \n         final WebMarkupContainer container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupId(true);\n@@ -53,8 +57,8 @@ public AnyTypeDetailsPanel(final String id, final AnyTypeTO anyTypeTO) {\n         form.setModel(new CompoundPropertyModel<>(anyTypeTO));\n         container.add(form);\n \n-        final AjaxTextFieldPanel key\n-                = new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(anyTypeTO, \"key\"));\n+        final AjaxTextFieldPanel key =\n+                new AjaxTextFieldPanel(\"key\", getString(\"key\"), new PropertyModel<String>(anyTypeTO, \"key\"));\n         key.addRequiredLabel();\n         key.setEnabled(key.getModelObject() == null || key.getModelObject().isEmpty());\n         form.add(key);\n@@ -71,14 +75,25 @@ public AnyTypeDetailsPanel(final String id, final AnyTypeTO anyTypeTO) {\n \n         form.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\"classes\",\n                 new PropertyModel<List<String>>(anyTypeTO, \"classes\"),\n-                new ListModel<>(CollectionUtils.collect(\n-                        SyncopeConsoleSession.get().getService(AnyTypeClassService.class).list(),\n-                        new Transformer<AnyTypeClassTO, String>() {\n+                new ListModel<>(getAvailableAnyTypeClasses())).setOutputMarkupId(true));\n+    }\n+\n+    private List<String> getAvailableAnyTypeClasses() {\n+        final List<String> availableAnyTypeClasses = CollectionUtils.collect(\n+                SyncopeConsoleSession.get().getService(AnyTypeClassService.class).list(),\n+                new Transformer<AnyTypeClassTO, String>() {\n \n-                    @Override\n-                    public String transform(final AnyTypeClassTO input) {\n-                        return input.getKey();\n-                    }\n-                }, new ArrayList<String>()))).setOutputMarkupId(true));\n+            @Override\n+            public String transform(final AnyTypeClassTO input) {\n+                return input.getKey();\n+            }\n+        }, new ArrayList<String>());\n+\n+        for (AnyTypeTO itemTO : SyncopeConsoleSession.get().getService(AnyTypeService.class).list()) {\n+            if (anyTypeTO.getKey() == null || !anyTypeTO.getKey().equals(itemTO.getKey())) {\n+                availableAnyTypeClasses.removeAll(itemTO.getClasses());\n+            }\n+        }\n+        return availableAnyTypeClasses;\n     }\n }"},{"sha":"a89e469c6352f24d5c62584cfebf6b77532b1f5e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypePanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb416d2d1744459b9f52fb3f6b4c38a3e27834e5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb416d2d1744459b9f52fb3f6b4c38a3e27834e5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java?ref=fb416d2d1744459b9f52fb3f6b4c38a3e27834e5","patch":"@@ -104,8 +104,8 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                         } catch (Exception e) {\n                             LOG.error(\"While creating or updating AnyTypeTO\", e);\n                             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n-                            modal.getNotificationPanel().refresh(target);\n                         }\n+                        modal.getNotificationPanel().refresh(target);\n                     }\n                 };\n             }\n@@ -203,8 +203,8 @@ public String getCssClass() {\n             public void populateItem(final Item<ICellPopulator<AnyTypeTO>> item, final String componentId,\n                     final IModel<AnyTypeTO> model) {\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks\n-                        = ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<Serializable> actionLinks =\n+                        ActionLinksPanel.builder(page.getPageReference());\n                 actionLinks.setDisableIndicator(true);\n                 actionLinks.addWithRoles(new ActionLink<Serializable>() {\n "}]}