{"sha":"444182f724a4fc9a9f2985244f630aa30659e4c8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ0NDE4MmY3MjRhNGZjOWE5ZjI5ODUyNDRmNjMwYWEzMDY1OWU0Yzg=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-20T10:10:08Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-20T10:10:08Z"},"message":"Added unit tests, SYNCOPE-727","tree":{"sha":"3f51357ca6c3b491cb8af1be37119ca7f21457cb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3f51357ca6c3b491cb8af1be37119ca7f21457cb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/444182f724a4fc9a9f2985244f630aa30659e4c8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/444182f724a4fc9a9f2985244f630aa30659e4c8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/444182f724a4fc9a9f2985244f630aa30659e4c8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/444182f724a4fc9a9f2985244f630aa30659e4c8/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"9b033aa1be51f0d7b37d46434803b1f12f942c72","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9b033aa1be51f0d7b37d46434803b1f12f942c72","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9b033aa1be51f0d7b37d46434803b1f12f942c72"}],"stats":{"total":155,"additions":113,"deletions":42},"files":[{"sha":"61282ce0c086e4a50c55b9ed9baca93a618c46cf","filename":"client/cli/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fpom.xml?ref=444182f724a4fc9a9f2985244f630aa30659e4c8","patch":"@@ -81,6 +81,11 @@ under the License.\n       <artifactId>jcl-over-slf4j</artifactId>\n     </dependency>\n \n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n \n   <build>"},{"sha":"9b401a649a677106894b9b105f51874ff75a798b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/CommandUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtils.java?ref=444182f724a4fc9a9f2985244f630aa30659e4c8","patch":"@@ -75,7 +75,7 @@ public static String[] fromEnumToArray(final Class<? extends Enum<?>> enumClass)\n         }\n         return types;\n     }\n-    \n+\n     public static String helpMessage(final String command, final List<String> options) {\n         final StringBuilder helpMessageBuilder = new StringBuilder(String.format(\"\\nUsage: %s [options]\\n\", command));\n         helpMessageBuilder.append(\"  Options:\\n\");"},{"sha":"6ed7a9b73c6defe387febf0b0265985829e0291f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/FileSystemUtils.java","status":"modified","additions":0,"deletions":40,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FFileSystemUtils.java?ref=444182f724a4fc9a9f2985244f630aa30659e4c8","patch":"@@ -18,30 +18,13 @@\n  */\n package org.apache.syncope.client.cli.util;\n \n-import java.io.BufferedWriter;\n import java.io.File;\n import java.io.FileNotFoundException;\n-import java.io.FileWriter;\n-import java.io.IOException;\n import java.io.PrintWriter;\n import java.io.UnsupportedEncodingException;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-import java.nio.file.attribute.PosixFilePermission;\n-import java.util.HashSet;\n-import java.util.ResourceBundle;\n-import java.util.Set;\n-import org.apache.syncope.client.cli.commands.install.InstallConfigFileTemplate;\n \n public final class FileSystemUtils {\n \n-    private static final ResourceBundle CONF = ResourceBundle.getBundle(\"configuration\");\n-\n-    public static void createNewDirectory(final String directoryToCreate) {\n-        final File directory = new File(directoryToCreate);\n-        directory.mkdirs();\n-    }\n-\n     public static void createFileWith(final String filePath, final String content)\n             throws FileNotFoundException, UnsupportedEncodingException {\n         try (PrintWriter writer = new PrintWriter(filePath, \"UTF-8\")) {\n@@ -59,29 +42,6 @@ public static boolean exists(final String path) {\n         return installationDirectory.exists();\n     }\n \n-    public static void createScriptFile() throws FileNotFoundException, UnsupportedEncodingException, IOException {\n-        final File file = new File(InstallConfigFileTemplate.scriptFilePath());\n-        file.setExecutable(true);\n-        file.setReadable(true);\n-        file.setWritable(true);\n-        file.createNewFile();\n-        final FileWriter fw = new FileWriter(file.getAbsoluteFile());\n-        final BufferedWriter bw = new BufferedWriter(fw);\n-        if (isWindows()) {\n-            bw.write(CONF.getString(\"script.file.windows\"));\n-        } else {\n-            bw.write(CONF.getString(\"script.file.linux\"));\n-            final Set<PosixFilePermission> perms = new HashSet<>();\n-            perms.add(PosixFilePermission.OWNER_READ);\n-            perms.add(PosixFilePermission.OWNER_WRITE);\n-            perms.add(PosixFilePermission.OWNER_EXECUTE);\n-            perms.add(PosixFilePermission.GROUP_READ);\n-            perms.add(PosixFilePermission.OTHERS_READ);\n-            Files.setPosixFilePermissions(Paths.get(file.getAbsolutePath()), perms);\n-        }\n-        bw.close();\n-    }\n-\n     public static boolean isWindows() {\n         return (System.getProperty(\"os.name\").toLowerCase().contains(\"win\"));\n     }"},{"sha":"fe99971b31450435b2273f0bf80fb65cfc84988e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/JasyptUtils.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtils.java?ref=444182f724a4fc9a9f2985244f630aa30659e4c8","patch":"@@ -22,6 +22,8 @@\n \n public final class JasyptUtils {\n \n+    private static final String JASYPT_KEY = \"Ka9s8yadaisj9mud87ssdaifansy\";\n+\n     private final BasicTextEncryptor textEncryptor;\n \n     private static JasyptUtils JASYPT_UTILS = null;\n@@ -35,7 +37,7 @@ public static JasyptUtils getJasyptUtils() {\n \n     private JasyptUtils() {\n         textEncryptor = new BasicTextEncryptor();\n-        textEncryptor.setPassword(\"Ka9s8yadaisj9mud87ssdaifansy\");\n+        textEncryptor.setPassword(JASYPT_KEY);\n     }\n \n     public String encrypt(final String password) {"},{"sha":"60be06f8412c2e57b2262d83a2d21dc7777ba9e2","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/util/CommandUtilsTest.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FCommandUtilsTest.java?ref=444182f724a4fc9a9f2985244f630aa30659e4c8","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.util;\n+\n+import static org.junit.Assert.fail;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+import org.junit.Test;\n+\n+public class CommandUtilsTest {\n+\n+    @Test\n+    public void fromArgs() {\n+        final String commandName = \"logger\";\n+        try {\n+            final AbstractCommand command = CommandUtils.fromArgs(commandName);\n+            assertEquals(commandName, command.getClass().getAnnotation(Command.class).name());\n+        } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException ex) {\n+            fail(ex.getMessage());\n+        }\n+\n+        final String wrongCommandName = \"wrong\";\n+        try {\n+            CommandUtils.fromArgs(wrongCommandName);\n+            fail(wrongCommandName + \" isn't a right command, why you are here?\");\n+        } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException ex) {\n+            assertEquals(IllegalArgumentException.class, ex.getClass());\n+            assertEquals(wrongCommandName + \" is not a valid command\", ex.getMessage());\n+        }\n+    }\n+\n+    @Test\n+    public void commands() {\n+        try {\n+            final List<AbstractCommand> commands = CommandUtils.commands();\n+            assertFalse(commands.isEmpty());\n+            assertEquals(21, commands.size());\n+        } catch (final IllegalAccessException | IllegalArgumentException | InstantiationException ex) {\n+            fail(ex.getMessage());\n+        }\n+    }\n+}"},{"sha":"2c4b963b684e36c398150e220653b176b5bef2f8","filename":"client/cli/src/test/java/org/apache/syncope/client/cli/util/JasyptUtilsTest.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtilsTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/444182f724a4fc9a9f2985244f630aa30659e4c8/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtilsTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FJasyptUtilsTest.java?ref=444182f724a4fc9a9f2985244f630aa30659e4c8","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.util;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.junit.Test;\n+\n+public class JasyptUtilsTest {\n+\n+    @Test\n+    public void singleton() {\n+        final JasyptUtils jasyptUtils = JasyptUtils.getJasyptUtils();\n+        final JasyptUtils jasyptUtils2 = JasyptUtils.getJasyptUtils();\n+        assertEquals(jasyptUtils, jasyptUtils2);\n+    }\n+\n+    @Test\n+    public void encryption() {\n+        final String password = \"password\";\n+        final JasyptUtils jasyptUtils = JasyptUtils.getJasyptUtils();\n+        final String encPassword = jasyptUtils.encrypt(password);\n+        final String decPassword = jasyptUtils.decrypt(encPassword);\n+        assertEquals(password, decPassword);\n+    }\n+}"}]}