{"sha":"1a133b77e359e71561901a713e7b6b4dc4d39bf7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFhMTMzYjc3ZTM1OWU3MTU2MTkwMWE3MTNlN2I2YjRkYzRkMzliZjc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-30T10:51:30Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-30T10:51:30Z"},"message":"[SYNCOPE-663] Throwing new IgnoreException from SyncActions' or PushActions's methods will make the related user / role to get ignored by the sync / push process","tree":{"sha":"a53aa55170639ab89ff0a666edf304347535e5c9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a53aa55170639ab89ff0a666edf304347535e5c9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1a133b77e359e71561901a713e7b6b4dc4d39bf7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a133b77e359e71561901a713e7b6b4dc4d39bf7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1a133b77e359e71561901a713e7b6b4dc4d39bf7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1a133b77e359e71561901a713e7b6b4dc4d39bf7/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d289e6397faa9b7d5c2ee54ef40248f81454cb67","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d289e6397faa9b7d5c2ee54ef40248f81454cb67","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d289e6397faa9b7d5c2ee54ef40248f81454cb67"},{"sha":"857f02a0cbc0d6662ac98bcf3e7934557a761212","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/857f02a0cbc0d6662ac98bcf3e7934557a761212","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/857f02a0cbc0d6662ac98bcf3e7934557a761212"}],"stats":{"total":383,"additions":241,"deletions":142},"files":[{"sha":"5bebeb9b3633997b5deb2f835c2ad6d709507e7f","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/sync/IgnoreProvisionException.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FIgnoreProvisionException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FIgnoreProvisionException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FIgnoreProvisionException.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.sync;\n+\n+/**\n+ * Raised by {@link SyncActions} or {@link PushActions} methods when the given subject is to be ignored for\n+ * synchronization / push.\n+ */\n+public class IgnoreProvisionException extends RuntimeException {\n+\n+    private static final long serialVersionUID = -8803817097998786364L;\n+\n+}"},{"sha":"3253bc35fe8ff2a7bd6e73300034566a0c9b0702","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/sync/ProvisioningResult.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FProvisioningResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FProvisioningResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FProvisioningResult.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -32,6 +32,7 @@ public class ProvisioningResult {\n     public enum Status {\n \n         SUCCESS,\n+        IGNORE,\n         FAILURE\n \n     }\n@@ -44,7 +45,7 @@ public enum Status {\n \n     private ResourceOperation operation;\n \n-    private Long id;\n+    private Long key;\n \n     private String name;\n \n@@ -64,12 +65,12 @@ public void setName(final String name) {\n         this.name = name;\n     }\n \n-    public Long getId() {\n-        return id;\n+    public Long getKey() {\n+        return key;\n     }\n \n-    public void setId(final Long id) {\n-        this.id = id;\n+    public void setKey(final Long key) {\n+        this.key = key;\n     }\n \n     public Status getStatus() {\n@@ -113,10 +114,10 @@ public String getReportString(final TraceLevel level) {\n             return null;\n         } else if (level == TraceLevel.FAILURES && status == Status.FAILURE) {\n             // only report failures\n-            return String.format(\"Failed %s (id/name): %d/%s with message: %s\", operation, id, name, message);\n+            return String.format(\"Failed %s (id/name): %d/%s with message: %s\", operation, key, name, message);\n         } else {\n             // All\n-            return String.format(\"%s %s (id/name): %d/%s %s\", operation, status, id, name,\n+            return String.format(\"%s %s (id/name): %d/%s %s\", operation, status, key, name,\n                     StringUtils.isBlank(message)\n                             ? \"\"\n                             : \"with message: \" + message);"},{"sha":"6dacc765cfe0c7a3e9930dd55ba4ad266aa326c1","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/sync/PushActions.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FPushActions.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -23,6 +23,8 @@\n \n /**\n  * Interface for actions to be performed during PushJob execution.\n+ * <br/>\n+ * All methods can throw {@link IgnoreProvisionException} to make the current subject ignored by the push process.\n  */\n public interface PushActions extends ProvisioningActions {\n "},{"sha":"b62a9a9423a5c9991fb1f8f610ac853d189c0f21","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/sync/SyncActions.java","status":"modified","additions":32,"deletions":29,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FSyncActions.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -25,6 +25,9 @@\n \n /**\n  * Interface for actions to be performed during SyncJob execution.\n+ * <br/>\n+ * All methods can throw {@link IgnoreProvisionException} to make the current subject ignored by the synchronization\n+ * process.\n  */\n public interface SyncActions extends ProvisioningActions {\n \n@@ -40,9 +43,9 @@ public interface SyncActions extends ProvisioningActions {\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractSubjectTO> SyncDelta beforeProvision(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before creating (and linking to the resource) a synchronized user / group locally.\n@@ -56,9 +59,9 @@ <T extends AbstractSubjectTO> SyncDelta beforeProvision(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractSubjectTO> SyncDelta beforeAssign(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before unlinking resource from the synchronized user / group and de-provisioning.\n@@ -72,9 +75,9 @@ <T extends AbstractSubjectTO> SyncDelta beforeAssign(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractSubjectTO> SyncDelta beforeUnassign(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before de-provisioning action only.\n@@ -88,9 +91,9 @@ <T extends AbstractSubjectTO> SyncDelta beforeUnassign(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractSubjectTO> SyncDelta beforeDeprovision(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before unlinking resource from the synchronized user / group.\n@@ -104,9 +107,9 @@ <T extends AbstractSubjectTO> SyncDelta beforeDeprovision(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractSubjectTO> SyncDelta beforeUnlink(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before linking resource to the synchronized user / group.\n@@ -120,9 +123,9 @@ <T extends AbstractSubjectTO> SyncDelta beforeUnlink(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractSubjectTO> SyncDelta beforeLink(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to update a synchronized user / group locally.\n@@ -137,10 +140,10 @@ <T extends AbstractSubjectTO> SyncDelta beforeLink(\n      * @throws JobExecutionException in case of generic failure.\n      */\n     <T extends AbstractSubjectTO, K extends AbstractSubjectMod> SyncDelta beforeUpdate(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject,\n-            final K subjectMod)\n+            ProvisioningProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject,\n+            K subjectMod)\n             throws JobExecutionException;\n \n     /**\n@@ -153,9 +156,9 @@ <T extends AbstractSubjectTO, K extends AbstractSubjectMod> SyncDelta beforeUpda\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractSubjectTO> SyncDelta beforeDelete(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed after each local user / group synchronization.\n@@ -168,8 +171,8 @@ <T extends AbstractSubjectTO> SyncDelta beforeDelete(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractSubjectTO> void after(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject,\n-            final ProvisioningResult result) throws JobExecutionException;\n+            ProvisioningProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject,\n+            ProvisioningResult result) throws JobExecutionException;\n }"},{"sha":"9ad01ff7430460df8c301fbd270dd6974bfc96b6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractProvisioningJob.java","status":"modified","additions":62,"deletions":41,"changes":103,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractProvisioningJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractProvisioningJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractProvisioningJob.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -114,13 +114,15 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n         List<ProvisioningResult> uSuccDelete = new ArrayList<>();\n         List<ProvisioningResult> uFailDelete = new ArrayList<>();\n         List<ProvisioningResult> uSuccNone = new ArrayList<>();\n-        List<ProvisioningResult> rSuccCreate = new ArrayList<>();\n-        List<ProvisioningResult> rFailCreate = new ArrayList<>();\n-        List<ProvisioningResult> rSuccUpdate = new ArrayList<>();\n-        List<ProvisioningResult> rFailUpdate = new ArrayList<>();\n-        List<ProvisioningResult> rSuccDelete = new ArrayList<>();\n-        List<ProvisioningResult> rFailDelete = new ArrayList<>();\n-        List<ProvisioningResult> rSuccNone = new ArrayList<>();\n+        List<ProvisioningResult> uIgnore = new ArrayList<>();\n+        List<ProvisioningResult> gSuccCreate = new ArrayList<>();\n+        List<ProvisioningResult> gFailCreate = new ArrayList<>();\n+        List<ProvisioningResult> gSuccUpdate = new ArrayList<>();\n+        List<ProvisioningResult> gFailUpdate = new ArrayList<>();\n+        List<ProvisioningResult> gSuccDelete = new ArrayList<>();\n+        List<ProvisioningResult> gFailDelete = new ArrayList<>();\n+        List<ProvisioningResult> gSuccNone = new ArrayList<>();\n+        List<ProvisioningResult> gIgnore = new ArrayList<>();\n \n         for (ProvisioningResult provResult : provResults) {\n             switch (provResult.getStatus()) {\n@@ -133,7 +135,7 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n                                     break;\n \n                                 case GROUP:\n-                                    rSuccCreate.add(provResult);\n+                                    gSuccCreate.add(provResult);\n                                     break;\n \n                                 default:\n@@ -147,7 +149,7 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n                                     break;\n \n                                 case GROUP:\n-                                    rSuccUpdate.add(provResult);\n+                                    gSuccUpdate.add(provResult);\n                                     break;\n \n                                 default:\n@@ -161,7 +163,7 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n                                     break;\n \n                                 case GROUP:\n-                                    rSuccDelete.add(provResult);\n+                                    gSuccDelete.add(provResult);\n                                     break;\n \n                                 default:\n@@ -175,7 +177,7 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n                                     break;\n \n                                 case GROUP:\n-                                    rSuccNone.add(provResult);\n+                                    gSuccNone.add(provResult);\n                                     break;\n \n                                 default:\n@@ -195,7 +197,7 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n                                     break;\n \n                                 case GROUP:\n-                                    rFailCreate.add(provResult);\n+                                    gFailCreate.add(provResult);\n                                     break;\n \n                                 default:\n@@ -209,7 +211,7 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n                                     break;\n \n                                 case GROUP:\n-                                    rFailUpdate.add(provResult);\n+                                    gFailUpdate.add(provResult);\n                                     break;\n \n                                 default:\n@@ -223,7 +225,7 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n                                     break;\n \n                                 case GROUP:\n-                                    rFailDelete.add(provResult);\n+                                    gFailDelete.add(provResult);\n                                     break;\n \n                                 default:\n@@ -234,6 +236,20 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n                     }\n                     break;\n \n+                case IGNORE:\n+                    switch (provResult.getSubjectType()) {\n+                        case USER:\n+                            uIgnore.add(provResult);\n+                            break;\n+\n+                        case GROUP:\n+                            gIgnore.add(provResult);\n+                            break;\n+\n+                        default:\n+                    }\n+                    break;\n+\n                 default:\n             }\n         }\n@@ -246,15 +262,16 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n                 append(' ').\n                 append(\"[deleted/failures]: \").append(uSuccDelete.size()).append('/').append(uFailDelete.size()).\n                 append(' ').\n-                append(\"[ignored]: \").append(uSuccNone.size()).append('\\n');\n+                append(\"[no operation/ignored]: \").append(uSuccNone.size()).append('/').append(uIgnore.size()).\n+                append('\\n');\n         report.append(\"Groups \").\n-                append(\"[created/failures]: \").append(rSuccCreate.size()).append('/').append(rFailCreate.size()).\n+                append(\"[created/failures]: \").append(gSuccCreate.size()).append('/').append(gFailCreate.size()).\n                 append(' ').\n-                append(\"[updated/failures]: \").append(rSuccUpdate.size()).append('/').append(rFailUpdate.size()).\n+                append(\"[updated/failures]: \").append(gSuccUpdate.size()).append('/').append(gFailUpdate.size()).\n                 append(' ').\n-                append(\"[deleted/failures]: \").append(rSuccDelete.size()).append('/').append(rFailDelete.size()).\n+                append(\"[deleted/failures]: \").append(gSuccDelete.size()).append('/').append(gFailDelete.size()).\n                 append(' ').\n-                append(\"[ignored]: \").append(rSuccNone.size());\n+                append(\"[no operation/ignored]: \").append(gSuccNone.size()).append('/').append(gIgnore.size());\n \n         // Failures\n         if (syncTraceLevel == TraceLevel.FAILURES || syncTraceLevel == TraceLevel.ALL) {\n@@ -271,38 +288,42 @@ protected String createReport(final Collection<ProvisioningResult> provResults,\n                 report.append(ProvisioningResult.produceReport(uFailDelete, syncTraceLevel));\n             }\n \n-            if (!rFailCreate.isEmpty()) {\n+            if (!gFailCreate.isEmpty()) {\n                 report.append(\"\\n\\nGroups failed to create: \");\n-                report.append(ProvisioningResult.produceReport(rFailCreate, syncTraceLevel));\n+                report.append(ProvisioningResult.produceReport(gFailCreate, syncTraceLevel));\n             }\n-            if (!rFailUpdate.isEmpty()) {\n+            if (!gFailUpdate.isEmpty()) {\n                 report.append(\"\\nGroups failed to update: \");\n-                report.append(ProvisioningResult.produceReport(rFailUpdate, syncTraceLevel));\n+                report.append(ProvisioningResult.produceReport(gFailUpdate, syncTraceLevel));\n             }\n-            if (!rFailDelete.isEmpty()) {\n+            if (!gFailDelete.isEmpty()) {\n                 report.append(\"\\nGroups failed to delete: \");\n-                report.append(ProvisioningResult.produceReport(rFailDelete, syncTraceLevel));\n+                report.append(ProvisioningResult.produceReport(gFailDelete, syncTraceLevel));\n             }\n         }\n \n         // Succeeded, only if on 'ALL' level\n         if (syncTraceLevel == TraceLevel.ALL) {\n-            report.append(\"\\n\\nUsers created:\\n\")\n-                    .append(ProvisioningResult.produceReport(uSuccCreate, syncTraceLevel))\n-                    .append(\"\\nUsers updated:\\n\")\n-                    .append(ProvisioningResult.produceReport(uSuccUpdate, syncTraceLevel))\n-                    .append(\"\\nUsers deleted:\\n\")\n-                    .append(ProvisioningResult.produceReport(uSuccDelete, syncTraceLevel))\n-                    .append(\"\\nUsers ignored:\\n\")\n-                    .append(ProvisioningResult.produceReport(uSuccNone, syncTraceLevel));\n-            report.append(\"\\n\\nGroups created:\\n\")\n-                    .append(ProvisioningResult.produceReport(rSuccCreate, syncTraceLevel))\n-                    .append(\"\\nGroups updated:\\n\")\n-                    .append(ProvisioningResult.produceReport(rSuccUpdate, syncTraceLevel))\n-                    .append(\"\\nGroups deleted:\\n\")\n-                    .append(ProvisioningResult.produceReport(rSuccDelete, syncTraceLevel))\n-                    .append(\"\\nGroups ignored:\\n\")\n-                    .append(ProvisioningResult.produceReport(rSuccNone, syncTraceLevel));\n+            report.append(\"\\n\\nUsers created:\\n\").\n+                    append(ProvisioningResult.produceReport(uSuccCreate, syncTraceLevel)).\n+                    append(\"\\nUsers updated:\\n\").\n+                    append(ProvisioningResult.produceReport(uSuccUpdate, syncTraceLevel)).\n+                    append(\"\\nUsers deleted:\\n\").\n+                    append(ProvisioningResult.produceReport(uSuccDelete, syncTraceLevel)).\n+                    append(\"\\nUsers no operation:\\n\").\n+                    append(ProvisioningResult.produceReport(uSuccNone, syncTraceLevel)).\n+                    append(\"\\nUsers ignored:\\n\").\n+                    append(ProvisioningResult.produceReport(uIgnore, syncTraceLevel));\n+            report.append(\"\\n\\nGroups created:\\n\").\n+                    append(ProvisioningResult.produceReport(gSuccCreate, syncTraceLevel)).\n+                    append(\"\\nGroups updated:\\n\").\n+                    append(ProvisioningResult.produceReport(gSuccUpdate, syncTraceLevel)).\n+                    append(\"\\nGroups deleted:\\n\").\n+                    append(ProvisioningResult.produceReport(gSuccDelete, syncTraceLevel)).\n+                    append(\"\\nGroups no operation:\\n\").\n+                    append(ProvisioningResult.produceReport(gSuccNone, syncTraceLevel)).\n+                    append(\"\\nGroups ignored:\\n\").\n+                    append(ProvisioningResult.produceReport(gSuccNone, syncTraceLevel));\n         }\n \n         return report.toString();"},{"sha":"e148ccff2bb1efa99c949fe85bf077e135c57ff9","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractPushResultHandler.java","status":"modified","additions":27,"deletions":22,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -44,6 +44,7 @@\n import org.apache.syncope.core.provisioning.api.sync.ProvisioningResult;\n import org.apache.syncope.core.provisioning.api.sync.PushActions;\n import org.apache.syncope.core.misc.MappingUtils;\n+import org.apache.syncope.core.provisioning.api.sync.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.sync.SyncopePushResultHandler;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.quartz.JobExecutionException;\n@@ -52,55 +53,60 @@\n public abstract class AbstractPushResultHandler extends AbstractSyncopeResultHandler<PushTask, PushActions>\n         implements SyncopePushResultHandler {\n \n-    protected abstract AttributableUtils getAttributableUtils();\n-\n-    protected abstract String getName(final Subject<?, ?, ?> subject);\n+    protected abstract String getName(Subject<?, ?, ?> subject);\n \n     protected abstract Mapping<?> getMapping();\n \n-    protected abstract AbstractSubjectTO getSubjectTO(final long key);\n-\n-    protected abstract Subject<?, ?, ?> getSubject(final long key);\n+    protected abstract Subject<?, ?, ?> getSubject(long key);\n \n-    protected abstract Subject<?, ?, ?> deprovision(final Subject<?, ?, ?> sbj);\n+    protected abstract Subject<?, ?, ?> deprovision(Subject<?, ?, ?> sbj);\n \n-    protected abstract Subject<?, ?, ?> provision(final Subject<?, ?, ?> sbj, final Boolean enabled);\n+    protected abstract Subject<?, ?, ?> provision(Subject<?, ?, ?> sbj, Boolean enabled);\n \n-    protected abstract Subject<?, ?, ?> link(final Subject<?, ?, ?> sbj, final Boolean unlink);\n+    protected abstract Subject<?, ?, ?> link(Subject<?, ?, ?> sbj, Boolean unlink);\n \n-    protected abstract Subject<?, ?, ?> unassign(final Subject<?, ?, ?> sbj);\n+    protected abstract Subject<?, ?, ?> unassign(Subject<?, ?, ?> sbj);\n \n-    protected abstract Subject<?, ?, ?> assign(final Subject<?, ?, ?> sbj, Boolean enabled);\n+    protected abstract Subject<?, ?, ?> assign(Subject<?, ?, ?> sbj, Boolean enabled);\n \n-    protected abstract ConnectorObject getRemoteObject(final String accountId);\n+    protected abstract ConnectorObject getRemoteObject(String accountId);\n \n     @Transactional\n     @Override\n-    public boolean handle(final long subjectId) {\n+    public boolean handle(final long subjectKey) {\n         try {\n-            doHandle(subjectId);\n+            doHandle(subjectKey);\n+            return true;\n+        } catch (IgnoreProvisionException e) {\n+            ProvisioningResult result = new ProvisioningResult();\n+            result.setOperation(ResourceOperation.NONE);\n+            result.setSubjectType(getAttributableUtils().getType());\n+            result.setStatus(ProvisioningResult.Status.IGNORE);\n+            result.setKey(subjectKey);\n+\n+            LOG.warn(\"Ignoring during push\", e);\n             return true;\n         } catch (JobExecutionException e) {\n-            LOG.error(\"Synchronization failed\", e);\n+            LOG.error(\"Push failed\", e);\n             return false;\n         }\n     }\n \n     protected final void doHandle(final long subjectId)\n             throws JobExecutionException {\n \n-        final Subject<?, ?, ?> subject = getSubject(subjectId);\n+        Subject<?, ?, ?> subject = getSubject(subjectId);\n \n-        final AttributableUtils attrUtils = attrUtilsFactory.getInstance(subject);\n+        AttributableUtils attrUtils = attrUtilsFactory.getInstance(subject);\n \n-        final ProvisioningResult result = new ProvisioningResult();\n+        ProvisioningResult result = new ProvisioningResult();\n         profile.getResults().add(result);\n \n-        result.setId(subject.getKey());\n+        result.setKey(subject.getKey());\n         result.setSubjectType(attrUtils.getType());\n         result.setName(getName(subject));\n \n-        final Boolean enabled = subject instanceof User && profile.getTask().isSyncStatus()\n+        Boolean enabled = subject instanceof User && profile.getTask().isSyncStatus()\n                 ? ((User) subject).isSuspended() ? Boolean.FALSE : Boolean.TRUE\n                 : null;\n \n@@ -113,7 +119,7 @@ protected final void doHandle(final long subjectId)\n         String operation = null;\n \n         // Try to read remote object (user / group) BEFORE any actual operation\n-        final String accountId = MappingUtils.getAccountIdValue(\n+        String accountId = MappingUtils.getAccountIdValue(\n                 subject, profile.getTask().getResource(), getMapping().getAccountIdItem());\n \n         beforeObj = getRemoteObject(accountId);\n@@ -308,7 +314,6 @@ private ResourceOperation getResourceOperation(final MatchingRule rule) {\n     }\n \n     protected Subject<?, ?, ?> update(final Subject<?, ?, ?> sbj, final Boolean enabled) {\n-\n         final Set<MembershipMod> membsToAdd = new HashSet<>();\n         final Set<String> vattrToBeRemoved = new HashSet<>();\n         final Set<String> membVattrToBeRemoved = new HashSet<>();"},{"sha":"824193714271f15da86acc8dc6e6732fe59cbda2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractSyncResultHandler.java","status":"modified","additions":32,"deletions":24,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n import org.apache.syncope.core.provisioning.api.sync.SyncActions;\n import org.apache.syncope.core.misc.security.UnauthorizedException;\n+import org.apache.syncope.core.provisioning.api.sync.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.sync.ProvisioningResult;\n import org.apache.syncope.core.provisioning.api.sync.SyncopeSyncResultHandler;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n@@ -52,31 +53,37 @@ public abstract class AbstractSyncResultHandler extends AbstractSyncopeResultHan\n     @Autowired\n     protected AttributableTransformer attrTransformer;\n \n-    protected abstract AttributableUtils getAttributableUtils();\n-\n     protected abstract String getName(AbstractSubjectTO subjectTO);\n \n-    protected abstract AbstractSubjectTO getSubjectTO(long key);\n-\n     protected abstract AbstractSubjectMod getSubjectMod(AbstractSubjectTO subjectTO, SyncDelta delta);\n \n-    protected abstract AbstractSubjectTO create(\n+    protected abstract AbstractSubjectTO doCreate(\n             AbstractSubjectTO subjectTO, SyncDelta _delta, ProvisioningResult result);\n \n-    protected abstract AbstractSubjectTO link(AbstractSubjectTO before, ProvisioningResult result, boolean unlink);\n+    protected abstract AbstractSubjectTO doLink(AbstractSubjectTO before, ProvisioningResult result, boolean unlink);\n \n-    protected abstract AbstractSubjectTO update(AbstractSubjectTO before, AbstractSubjectMod subjectMod,\n+    protected abstract AbstractSubjectTO doUpdate(AbstractSubjectTO before, AbstractSubjectMod subjectMod,\n             SyncDelta delta, ProvisioningResult result);\n \n-    protected abstract void deprovision(Long key, boolean unlink);\n+    protected abstract void doDeprovision(Long key, boolean unlink);\n \n-    protected abstract void delete(Long key);\n+    protected abstract void doDelete(Long key);\n \n     @Override\n     public boolean handle(final SyncDelta delta) {\n         try {\n             doHandle(delta);\n             return true;\n+        } catch (IgnoreProvisionException e) {\n+            ProvisioningResult result = new ProvisioningResult();\n+            result.setOperation(ResourceOperation.NONE);\n+            result.setSubjectType(getAttributableUtils().getType());\n+            result.setStatus(ProvisioningResult.Status.IGNORE);\n+            result.setKey(0L);\n+            result.setName(delta.getObject().getName().getNameValue());\n+\n+            LOG.warn(\"Ignoring during synchronization\", e);\n+            return true;\n         } catch (JobExecutionException e) {\n             LOG.error(\"Synchronization failed\", e);\n             return false;\n@@ -85,6 +92,7 @@ public boolean handle(final SyncDelta delta) {\n \n     protected List<ProvisioningResult> assign(final SyncDelta delta, final AttributableUtils attrUtils)\n             throws JobExecutionException {\n+\n         if (!profile.getTask().isPerformCreate()) {\n             LOG.debug(\"SyncTask not configured for create\");\n             return Collections.<ProvisioningResult>emptyList();\n@@ -107,7 +115,7 @@ protected List<ProvisioningResult> assign(final SyncDelta delta, final Attributa\n         result.setName(getName(transformed));\n \n         if (profile.isDryRun()) {\n-            result.setId(0L);\n+            result.setKey(0L);\n         } else {\n             SyncDelta _delta = delta;\n             for (SyncActions action : profile.getActions()) {\n@@ -120,7 +128,7 @@ protected List<ProvisioningResult> assign(final SyncDelta delta, final Attributa\n         return Collections.singletonList(result);\n     }\n \n-    protected List<ProvisioningResult> create(final SyncDelta delta, final AttributableUtils attrUtils)\n+    protected List<ProvisioningResult> provision(final SyncDelta delta, final AttributableUtils attrUtils)\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformCreate()) {\n@@ -143,7 +151,7 @@ protected List<ProvisioningResult> create(final SyncDelta delta, final Attributa\n         result.setName(getName(transformed));\n \n         if (profile.isDryRun()) {\n-            result.setId(0L);\n+            result.setKey(0L);\n         } else {\n             SyncDelta _delta = delta;\n             for (SyncActions action : profile.getActions()) {\n@@ -168,7 +176,7 @@ private void create(\n         Result resultStatus;\n \n         try {\n-            AbstractSubjectTO actual = create(subjectTO, delta, result);\n+            AbstractSubjectTO actual = doCreate(subjectTO, delta, result);\n             result.setName(getName(actual));\n             output = actual;\n             resultStatus = Result.SUCCESS;\n@@ -213,7 +221,7 @@ protected List<ProvisioningResult> update(SyncDelta delta, final List<Long> subj\n             result.setOperation(ResourceOperation.UPDATE);\n             result.setSubjectType(attrUtils.getType());\n             result.setStatus(ProvisioningResult.Status.SUCCESS);\n-            result.setId(key);\n+            result.setKey(key);\n \n             AbstractSubjectTO before = getSubjectTO(key);\n             if (before == null) {\n@@ -241,7 +249,7 @@ protected List<ProvisioningResult> update(SyncDelta delta, final List<Long> subj\n                             delta = action.beforeUpdate(this.getProfile(), delta, before, attributableMod);\n                         }\n \n-                        final AbstractSubjectTO updated = update(before, attributableMod, delta, result);\n+                        final AbstractSubjectTO updated = doUpdate(before, attributableMod, delta, result);\n \n                         for (SyncActions action : profile.getActions()) {\n                             action.after(this.getProfile(), delta, updated, result);\n@@ -298,7 +306,7 @@ protected List<ProvisioningResult> deprovision(\n             result.setOperation(ResourceOperation.DELETE);\n             result.setSubjectType(attrUtils.getType());\n             result.setStatus(ProvisioningResult.Status.SUCCESS);\n-            result.setId(id);\n+            result.setKey(id);\n \n             final AbstractSubjectTO before = getSubjectTO(id);\n \n@@ -325,7 +333,7 @@ protected List<ProvisioningResult> deprovision(\n                             }\n                         }\n \n-                        deprovision(id, unlink);\n+                        doDeprovision(id, unlink);\n                         output = getSubjectTO(id);\n \n                         for (SyncActions action : profile.getActions()) {\n@@ -384,7 +392,7 @@ protected List<ProvisioningResult> link(\n             result.setOperation(ResourceOperation.NONE);\n             result.setSubjectType(attrUtils.getType());\n             result.setStatus(ProvisioningResult.Status.SUCCESS);\n-            result.setId(id);\n+            result.setKey(id);\n \n             final AbstractSubjectTO before = getSubjectTO(id);\n \n@@ -411,7 +419,7 @@ protected List<ProvisioningResult> link(\n                             }\n                         }\n \n-                        output = link(before, result, unlink);\n+                        output = doLink(before, result, unlink);\n \n                         for (SyncActions action : profile.getActions()) {\n                             action.after(this.getProfile(), delta, AbstractSubjectTO.class.cast(output), result);\n@@ -465,7 +473,7 @@ protected List<ProvisioningResult> delete(\n             try {\n                 before = getSubjectTO(id);\n \n-                result.setId(id);\n+                result.setKey(id);\n                 result.setName(getName(before));\n                 result.setOperation(ResourceOperation.DELETE);\n                 result.setSubjectType(attrUtils.getType());\n@@ -477,7 +485,7 @@ protected List<ProvisioningResult> delete(\n                     }\n \n                     try {\n-                        delete(id);\n+                        doDelete(id);\n                         output = null;\n                         resultStatus = Result.SUCCESS;\n                     } catch (Exception e) {\n@@ -516,7 +524,7 @@ private List<ProvisioningResult> ignore(SyncDelta delta, final AttributableUtils\n         final List<ProvisioningResult> ignoreResults = new ArrayList<>();\n         final ProvisioningResult result = new ProvisioningResult();\n \n-        result.setId(null);\n+        result.setKey(null);\n         result.setName(delta.getObject().getUid().getUidValue());\n         result.setOperation(ResourceOperation.NONE);\n         result.setSubjectType(attrUtils.getType());\n@@ -538,7 +546,7 @@ private List<ProvisioningResult> ignore(SyncDelta delta, final AttributableUtils\n      * @param delta returned by the underlying profile.getConnector()\n      * @throws JobExecutionException in case of synchronization failure.\n      */\n-    protected final void doHandle(final SyncDelta delta)\n+    protected void doHandle(final SyncDelta delta)\n             throws JobExecutionException {\n \n         final AttributableUtils attrUtils = getAttributableUtils();\n@@ -579,7 +587,7 @@ protected final void doHandle(final SyncDelta delta)\n                             profile.getResults().addAll(assign(delta, attrUtils));\n                             break;\n                         case PROVISION:\n-                            profile.getResults().addAll(create(delta, attrUtils));\n+                            profile.getResults().addAll(provision(delta, attrUtils));\n                             break;\n                         case IGNORE:\n                             profile.getResults().addAll(ignore(delta, attrUtils, false));"},{"sha":"28c38854f9d2a8f239a43df627768b8f24ede358","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractSyncopeResultHandler.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncopeResultHandler.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.provisioning.java.sync;\n \n+import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.AttributableUtilsFactory;\n@@ -33,6 +34,7 @@\n import org.apache.syncope.core.provisioning.api.sync.SyncopeResultHandler;\n import org.apache.syncope.core.misc.AuditManager;\n import org.apache.syncope.core.misc.ConnObjectUtils;\n+import org.apache.syncope.core.persistence.api.entity.AttributableUtils;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n@@ -116,6 +118,10 @@\n      */\n     protected ProvisioningProfile<T, A> profile;\n \n+    protected abstract AttributableUtils getAttributableUtils();\n+\n+    protected abstract AbstractSubjectTO getSubjectTO(long key);\n+\n     @Override\n     public void setProfile(final ProvisioningProfile<T, A> profile) {\n         this.profile = profile;"},{"sha":"b9fa5cac6ee557632dade40ef6a63f7139f58202","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/GroupSyncResultHandlerImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupSyncResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupSyncResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupSyncResultHandlerImpl.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -77,7 +77,7 @@ protected AbstractSubjectMod getSubjectMod(\n     }\n \n     @Override\n-    protected AbstractSubjectTO create(\n+    protected AbstractSubjectTO doCreate(\n             final AbstractSubjectTO subjectTO, final SyncDelta _delta, final ProvisioningResult result) {\n \n         GroupTO groupTO = GroupTO.class.cast(subjectTO);\n@@ -87,14 +87,14 @@ protected AbstractSubjectTO create(\n \n         groupTO = groupDataBinder.getGroupTO(created.getKey());\n \n-        result.setId(created.getKey());\n+        result.setKey(created.getKey());\n         result.setName(getName(subjectTO));\n \n         return groupTO;\n     }\n \n     @Override\n-    protected AbstractSubjectTO link(\n+    protected AbstractSubjectTO doLink(\n             final AbstractSubjectTO before,\n             final ProvisioningResult result,\n             final boolean unlink) {\n@@ -112,7 +112,7 @@ protected AbstractSubjectTO link(\n     }\n \n     @Override\n-    protected AbstractSubjectTO update(\n+    protected AbstractSubjectTO doUpdate(\n             final AbstractSubjectTO before,\n             final AbstractSubjectMod subjectMod,\n             final SyncDelta delta,\n@@ -141,7 +141,7 @@ protected AbstractSubjectTO update(\n     }\n \n     @Override\n-    protected void deprovision(final Long id, final boolean unlink) {\n+    protected void doDeprovision(final Long id, final boolean unlink) {\n         taskExecutor.execute(\n                 propagationManager.getGroupDeleteTasks(id, profile.getTask().getResource().getKey()));\n \n@@ -153,7 +153,7 @@ protected void deprovision(final Long id, final boolean unlink) {\n     }\n \n     @Override\n-    protected void delete(final Long id) {\n+    protected void doDelete(final Long id) {\n         try {\n             taskExecutor.execute(\n                     propagationManager.getGroupDeleteTasks(id, profile.getTask().getResource().getKey()));"},{"sha":"d32a8555344abf1fa60b5e651c63158ae03e1c7c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/UserSyncResultHandlerImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserSyncResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserSyncResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FUserSyncResultHandlerImpl.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -66,7 +66,7 @@ protected AbstractSubjectMod getSubjectMod(\n     }\n \n     @Override\n-    protected AbstractSubjectTO create(\n+    protected AbstractSubjectTO doCreate(\n             final AbstractSubjectTO subjectTO, final SyncDelta delta, final ProvisioningResult result) {\n \n         UserTO userTO = UserTO.class.cast(subjectTO);\n@@ -75,13 +75,13 @@ protected AbstractSubjectTO create(\n         Map.Entry<Long, List<PropagationStatus>> created = userProvisioningManager.create(userTO, true, true, enabled,\n                 Collections.singleton(profile.getTask().getResource().getKey()));\n \n-        result.setId(created.getKey());\n+        result.setKey(created.getKey());\n \n         return userDataBinder.getUserTO(created.getKey());\n     }\n \n     @Override\n-    protected AbstractSubjectTO link(\n+    protected AbstractSubjectTO doLink(\n             final AbstractSubjectTO before,\n             final ProvisioningResult result,\n             final boolean unlink) {\n@@ -99,7 +99,7 @@ protected AbstractSubjectTO link(\n     }\n \n     @Override\n-    protected AbstractSubjectTO update(\n+    protected AbstractSubjectTO doUpdate(\n             final AbstractSubjectTO before,\n             final AbstractSubjectMod subjectMod,\n             final SyncDelta delta,\n@@ -115,7 +115,7 @@ protected AbstractSubjectTO update(\n     }\n \n     @Override\n-    protected void deprovision(\n+    protected void doDeprovision(\n             final Long key,\n             final boolean unlink) {\n \n@@ -131,7 +131,7 @@ protected void deprovision(\n     }\n \n     @Override\n-    protected void delete(final Long key) {\n+    protected void doDelete(final Long key) {\n         try {\n             userProvisioningManager.\n                     delete(key, Collections.<String>singleton(profile.getTask().getResource().getKey()));"},{"sha":"89a84473a5f21a254db8973ea76f796647c09da9","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestSyncActions.java","status":"modified","additions":16,"deletions":3,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSyncActions.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -23,6 +23,8 @@\n import org.apache.syncope.common.lib.mod.AttrMod;\n import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.core.provisioning.api.sync.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.sync.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.java.sync.DefaultSyncActions;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n@@ -37,9 +39,8 @@ public class TestSyncActions extends DefaultSyncActions {\n \n     @Override\n     public <T extends AbstractSubjectTO> SyncDelta beforeProvision(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException {\n+            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final T subject)\n+            throws JobExecutionException {\n \n         AttrTO attrTO = null;\n         for (int i = 0; i < subject.getPlainAttrs().size(); i++) {\n@@ -59,6 +60,18 @@ public <T extends AbstractSubjectTO> SyncDelta beforeProvision(\n         return delta;\n     }\n \n+    @Override\n+    public <T extends AbstractSubjectTO> SyncDelta beforeAssign(\n+            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final T subject)\n+            throws JobExecutionException {\n+\n+        if (subject instanceof UserTO && \"test2\".equals(UserTO.class.cast(subject).getUsername())) {\n+            throw new IgnoreProvisionException();\n+        }\n+\n+        return delta;\n+    }\n+\n     @Override\n     public <T extends AbstractSubjectTO, K extends AbstractSubjectMod> SyncDelta beforeUpdate(\n             final ProvisioningProfile<?, ?> profile,"},{"sha":"1a014bd2e9b89bcc72a9fd02c3d56903ebb13e56","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ResourceITCase.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -296,8 +296,9 @@ public void updateWithException() {\n         try {\n             ResourceTO resourceTO = new ResourceTO();\n             resourceTO.setKey(\"resourcenotfound\");\n-\n             resourceService.update(resourceTO.getKey(), resourceTO);\n+\n+            fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n@@ -354,6 +355,7 @@ public void update() {\n     public void deleteWithException() {\n         try {\n             resourceService.delete(\"resourcenotfound\");\n+            fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n@@ -387,6 +389,7 @@ public void delete() {\n \n         try {\n             resourceService.read(resourceName);\n+            fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }"},{"sha":"27353f067e0ee35bca886140d802a9fceca37fc8","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SyncTaskITCase.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1a133b77e359e71561901a713e7b6b4dc4d39bf7/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1a133b77e359e71561901a713e7b6b4dc4d39bf7/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java?ref=1a133b77e359e71561901a713e7b6b4dc4d39bf7","patch":"@@ -32,6 +32,7 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.mod.StatusMod;\n import org.apache.syncope.common.lib.mod.UserMod;\n@@ -186,8 +187,7 @@ public void sync() throws Exception {\n             assertEquals(1, userTO.getMemberships().size());\n             assertTrue(userTO.getMemberships().get(0).getPlainAttrMap().containsKey(\"subscriptionDate\"));\n \n-            // Unmatching --> Assign (link)\n-            // SYNCOPE-658\n+            // Unmatching --> Assign (link) - SYNCOPE-658\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_CSV));\n             assertEquals(1, CollectionUtils.countMatches(userTO.getDerAttrs(), new Predicate<AttrTO>() {\n \n@@ -201,12 +201,20 @@ public boolean evaluate(final AttrTO attributeTO) {\n             assertNotNull(userTO);\n             assertEquals(\"TYPE_8\", userTO.getPlainAttrMap().get(\"type\").getValues().get(0));\n \n+            // Check for ignored user - SYNCOPE-663\n+            try {\n+                readUser(\"test2\");\n+                fail();\n+            } catch (SyncopeClientException e) {\n+                assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n+            }\n+\n             // check for sync results\n             int usersPost = userService.list(\n                     SyncopeClient.getSubjectListQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n                     page(1).size(1).build()).getTotalCount();\n             assertNotNull(usersPost);\n-            assertEquals(usersPre + 9, usersPost);\n+            assertEquals(usersPre + 8, usersPost);\n \n             // Check for issue 215:\n             // * expected disabled user test1"}]}