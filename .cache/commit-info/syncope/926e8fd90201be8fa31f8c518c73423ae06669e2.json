{"sha":"926e8fd90201be8fa31f8c518c73423ae06669e2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkyNmU4ZmQ5MDIwMWJlOGZhMzFmOGM1MThjNzM0MjNhZTA2NjY5ZTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-27T13:45:13Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-27T13:45:13Z"},"message":"Finally fixing WADL offline generation and live browsing","tree":{"sha":"e706936e99e95f8c13bf658c7a48f1f72fdb9727","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e706936e99e95f8c13bf658c7a48f1f72fdb9727"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/926e8fd90201be8fa31f8c518c73423ae06669e2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/926e8fd90201be8fa31f8c518c73423ae06669e2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/926e8fd90201be8fa31f8c518c73423ae06669e2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/926e8fd90201be8fa31f8c518c73423ae06669e2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"64c5fbd70e7b8b335358d2ae67f8f3397dfef008","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/64c5fbd70e7b8b335358d2ae67f8f3397dfef008","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/64c5fbd70e7b8b335358d2ae67f8f3397dfef008"}],"stats":{"total":567,"additions":238,"deletions":329},"files":[{"sha":"bb266284420f14e9379efee2e6b8a8afc27b1374","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/package-info.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2Fpackage-info.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+@XmlSchema(namespace = SyncopeConstants.NAMESPACE)\n+package org.apache.syncope.common.lib.policy;\n+\n+import javax.xml.bind.annotation.XmlSchema;\n+import org.apache.syncope.common.lib.SyncopeConstants;"},{"sha":"7a0183407cbb10fca23e24f9aac9d402eae09ef1","filename":"common/rest-api/pom.xml","status":"modified","additions":26,"deletions":17,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fpom.xml?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -47,18 +47,6 @@ under the License.\n       <groupId>javax.ws.rs</groupId>\n       <artifactId>javax.ws.rs-api</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.cxf</groupId>\n-      <artifactId>cxf-rt-frontend-jaxrs</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.cxf</groupId>\n-      <artifactId>cxf-rt-rs-extension-search</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.cxf</groupId>\n-      <artifactId>cxf-rt-rs-service-description</artifactId>\n-    </dependency>\n     \n     <dependency>\n       <groupId>org.apache.syncope.common</groupId>\n@@ -69,17 +57,38 @@ under the License.\n   \n   <build>\n     <plugins>\n-      <!-- Generating javadoc JAR artifact for usage with CXF's WADL generator (for core) -->\n       <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-javadoc-plugin</artifactId>\n+        <groupId>org.apache.cxf</groupId>\n+        <artifactId>cxf-java2wadl-plugin</artifactId>\n         <inherited>true</inherited>\n         <executions>\n           <execution>\n-            <id>attach-javadocs</id>\n+            <id>parsejavadoc</id>\n+            <phase>process-classes</phase>\n+            <goals>\n+              <goal>parsejavadoc</goal>\n+            </goals>\n+          </execution>\n+          <execution>\n+            <id>process-classes</id>\n+            <phase>process-classes</phase>\n             <goals>\n-              <goal>jar</goal>\n+              <goal>java2wadl</goal>\n             </goals>\n+            <configuration>\n+              <applicationTitle>Apache Syncope ${project.version}</applicationTitle>\n+              <namespacePrefix>syncope</namespacePrefix>\n+              <linkAnyMediaTypeToXmlSchema>true</linkAnyMediaTypeToXmlSchema>\n+              <useJaxbContextForQnames>true</useJaxbContextForQnames>\n+              <ignoreMessageWriters>true</ignoreMessageWriters>\n+              <addResourceAndMethodIds>true</addResourceAndMethodIds>\n+              <usePathParamsToCompareOperations>false</usePathParamsToCompareOperations>\n+              <singleResourceMultipleMethods>true</singleResourceMultipleMethods>\n+              <classResourceNames />\n+              <basePackages>org.apache.syncope.common.rest.api.service</basePackages>\n+              <docProvider>org.apache.cxf.maven_plugin.javatowadl.ResourceMapJavaDocProvider</docProvider>\n+              <attachWadl>true</attachWadl>\n+            </configuration>\n           </execution>\n         </executions>\n       </plugin>"},{"sha":"71aa4b6fd6c091dabfc93e64a42698748e9b4742","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":5,"deletions":33,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.mod.AnyMod;\n import org.apache.syncope.common.lib.mod.ResourceAssociationMod;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -84,14 +81,8 @@\n      *\n      * @param anyTO any object to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created any object as well as the any\n-     * object itself enriched with propagation status information - {@link AnyTO} as <tt>Entity</tt>\n+     * object itself enriched with propagation status information - <tt>AnyTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created any object as well as the \"\n-                + \"any object itself enriched with propagation status information - \"\n-                + \"<tt>AnyTO</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -102,13 +93,8 @@\n      *\n      * @param anyMod modification to be applied to any object matching the provided key\n      * @return <tt>Response</tt> object featuring the updated any object enriched with propagation status information\n-     * - {@link AnyTO} as <tt>Entity</tt>\n+     * - <tt>AnyTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the updated any object enriched with propagation status information - \"\n-                + \"<tt>AnyTO</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -120,13 +106,8 @@\n      *\n      * @param key key of any object to be deleted\n      * @return <tt>Response</tt> object featuring the deleted any object enriched with propagation status information\n-     * - {@link AnyTO} as <tt>Entity</tt>\n+     * - <tt>AnyTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the deleted any object enriched with propagation status information - \"\n-                + \"<tt>AnyTO</tt> as <tt>Entity</tt>\")\n-    })\n     @DELETE\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -139,13 +120,8 @@\n      * @param key any object id.\n      * @param type resource association action type\n      * @param resourceNames external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring\n-     * {@link BulkActionResult} as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}/deassociate/{type}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -161,12 +137,8 @@ Response deassociate(\n      * @param key any object id.\n      * @param type resource association action type\n      * @param associationMod external resources to be used for propagation-related operations\n-     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}/associate/{type}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"454652e05d3cd90c4adee92c34eb9cd2f6e4d31a","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeClassService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface AnyTypeClassService extends JAXRSService {\n      * @param anyTypeClassTO anyTypeClass to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created anyTypeClass\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created anyTypeClass\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull AnyTypeClassTO anyTypeClassTO);"},{"sha":"8f01fc1ae44008686bf1e64319943b31d0d030c1","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface AnyTypeService extends JAXRSService {\n      * @param anyTypeTO anyType to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created anyType\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created anyType\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull AnyTypeTO anyTypeTO);"},{"sha":"b5237580945770249927bdd97038e41a9831deaf","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -32,9 +32,6 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n@@ -148,10 +145,6 @@ ConnInstanceTO readByResource(\n      * @param connInstanceTO connector instance to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created connector instance\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created connector instance\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull ConnInstanceTO connInstanceTO);"},{"sha":"a37c6430618ce5e2167e272df2644ebbc92cc201","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DomainService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.DomainTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface DomainService extends JAXRSService {\n      * @param domainTO domain to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created domain\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created domain\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull DomainTO domainTO);"},{"sha":"569c0b65303e19fc796da42f46685a3a15c67d4d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -23,9 +23,6 @@\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.mod.GroupMod;\n import org.apache.syncope.common.lib.to.GroupTO;\n \n@@ -36,16 +33,11 @@\n public interface GroupService extends AnyService<GroupTO, GroupMod> {\n \n     /**\n-     * This method is similar to {@link #read(Long)}, but uses different authentication handling to ensure that a user\n+     * This method is similar to <tt>read()</tt>, but uses different authentication handling to ensure that a user\n      * can read his own groups.\n      *\n      * @return own groups\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.METHOD,\n-                value = \"This method is similar to <tt>read()</tt>, but uses different authentication handling to \"\n-                + \"ensure that a user can read his own groups.\")\n-    })\n     @GET\n     @Path(\"own\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"c380d310a128a2d4cbb992c0fbbe47ff1833ef51","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.NotificationTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface NotificationService extends JAXRSService {\n      * @param notificationTO Creates a new notification.\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created notification\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created notification\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull NotificationTO notificationTO);"},{"sha":"e35ef7c018c8ddb7143970a9b9f83d579dc95d02","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/PolicyService.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -31,9 +31,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n \n@@ -73,9 +70,6 @@ public interface PolicyService extends JAXRSService {\n      * @param <T> response type (extending PolicyTO)\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created policy\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE, value = \"Featuring <tt>Location</tt> header of created policy\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractPolicyTO> Response create(@NotNull T policyTO);"},{"sha":"81111e08899fd4c7632a46092d5b691103ce92bb","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RealmService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.RealmTO;\n \n /**\n@@ -68,10 +65,6 @@ public interface RealmService extends JAXRSService {\n      * @param realmTO new realm.\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created realm\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created realm\")\n-    })\n     @POST\n     @Path(\"{parentPath:.*}\")\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"30a7a15e453cba481032b75aa86b01fe8245a9e9","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RelationshipTypeService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface RelationshipTypeService extends JAXRSService {\n      * @param relationshipTypeTO relationshipType to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created relationshipType\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created relationshipType\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull RelationshipTypeTO relationshipTypeTO);"},{"sha":"6d01b2ae6b98ad2311cac3338f9c6c1616083860","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -33,9 +33,6 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n@@ -88,9 +85,6 @@ public interface ReportService extends JAXRSService {\n      * @param reportTO report to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created report\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE, value = \"Featuring <tt>Location</tt> header of created report\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull ReportTO reportTO);"},{"sha":"f15bcd57b72d291e3d599a27c97fda4420a69acf","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":1,"deletions":12,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n@@ -87,10 +84,6 @@ ConnObjectTO readConnObject(@NotNull @PathParam(\"key\") String key,\n      * @param resourceTO Resource to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created resource\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created resource\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull ResourceTO resourceTO);\n@@ -134,12 +127,8 @@ ConnObjectTO readConnObject(@NotNull @PathParam(\"key\") String key,\n      * @param anyTypeKey any object kind\n      * @param type resource de-association action type\n      * @param keys any object keys against which the bulk action will be performed\n-     * @return <tt>Response</tt> object featuring {@link BulkActionResult} as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>BulkActionResult</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}/bulkDeassociation/{anyTypeKey}/{type}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"36f18e7654cca8483226614ae6d7f413dda461d4","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.RoleTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface RoleService extends JAXRSService {\n      * @param roleTO role to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created role\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created role\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull RoleTO roleTO);"},{"sha":"e59d7d06f188be4cbf864f41c0505861e5215658","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n \n@@ -75,9 +72,6 @@ <T extends AbstractSchemaTO> T read(\n      * @param schemaTO schema to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created schema\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE, value = \"Featuring <tt>Location</tt> header of created schema\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractSchemaTO> Response create(@NotNull @PathParam(\"type\") SchemaType type, @NotNull T schemaTO);"},{"sha":"d0a63f7fabad52547c753cec36433588c63f6d47","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SecurityQuestionService.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -30,9 +30,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n \n /**\n@@ -67,10 +64,6 @@ public interface SecurityQuestionService extends JAXRSService {\n      * @param securityQuestionTO security question to be created\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created security question\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created security question\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response create(@NotNull SecurityQuestionTO securityQuestionTO);"},{"sha":"bb5a1a8b3557d6326ad1c7108f82e7cb2f86748c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SyncopeService.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSyncopeService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -27,6 +27,11 @@\n @Path(\"\")\n public interface SyncopeService extends JAXRSService {\n \n+    /**\n+     * Provides information summary about this Apache Syncope deployment's configuration.\n+     *\n+     * @return information summary about this Apache Syncope deployment's configuration\n+     */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     SyncopeTO info();"},{"sha":"2665c51cb92a75402e85260ffa826c25b05e7438","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -34,9 +34,6 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -99,9 +96,6 @@ <T extends AbstractTaskTO> PagedResult<T> list(\n      * @param <T> type of taskTO\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created task\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE, value = \"Featuring <tt>Location</tt> header of created task\")\n-    })\n     @POST\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends SchedTaskTO> Response create(@NotNull T taskTO);"},{"sha":"2203a11b5ceab4c3091046ba82295a96a85f943d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":3,"deletions":19,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -29,9 +29,6 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.common.lib.to.UserTO;\n \n@@ -57,13 +54,8 @@ public interface UserSelfService extends JAXRSService {\n      * @param userTO user to be created\n      * @param storePassword whether password shall be stored internally\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of self-registered user as well as the user\n-     * itself - {@link UserTO} as <tt>Entity</tt>\n+     * itself - <tt>UserTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of self-registered user as well \"\n-                + \"as the user itself - {@link UserTO} as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -74,12 +66,8 @@ Response create(@NotNull UserTO userTO,\n      * Self-updates user.\n      *\n      * @param userMod modification to be applied to user matching the provided key\n-     * @return <tt>Response</tt> object featuring the updated user - {@link UserTO} as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring the updated user - <tt>UserTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the updated user - <tt>UserTO</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -89,12 +77,8 @@ Response create(@NotNull UserTO userTO,\n     /**\n      * Self-deletes user.\n      *\n-     * @return <tt>Response</tt> object featuring the deleted user - {@link UserTO} as <tt>Entity</tt>\n+     * @return <tt>Response</tt> object featuring the deleted user - <tt>UserTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the deleted user - <tt>UserTO</tt> as <tt>Entity</tt>\")\n-    })\n     @DELETE\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     Response delete();"},{"sha":"fd0faac084a29dc12f475d973d89598b088df615","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":2,"deletions":23,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -29,9 +29,6 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.mod.StatusMod;\n import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -48,10 +45,6 @@ public interface UserService extends AnyService<UserTO, UserMod> {\n      * @param key user key\n      * @return <tt>Response</tt> object featuring HTTP header with username matching the given key\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring HTTP header with username matching the given key\")\n-    })\n     @OPTIONS\n     @Path(\"{key}/username\")\n     Response getUsername(@NotNull @PathParam(\"key\") Long key);\n@@ -62,10 +55,6 @@ public interface UserService extends AnyService<UserTO, UserMod> {\n      * @param username username\n      * @return <tt>Response</tt> object featuring HTTP header with key matching the given username\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring HTTP header with key matching the given username\")\n-    })\n     @OPTIONS\n     @Path(\"{username}/key\")\n     Response getUserKey(@NotNull @PathParam(\"username\") String username);\n@@ -76,13 +65,8 @@ public interface UserService extends AnyService<UserTO, UserMod> {\n      * @param userTO user to be created\n      * @param storePassword whether password shall be stored internally\n      * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created user as well as the user itself\n-     * enriched with propagation status information - {@link UserTO} as <tt>Entity</tt>\n+     * enriched with propagation status information - <tt>UserTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring <tt>Location</tt> header of created user as well as the \"\n-                + \"user itself enriched with propagation status information - <tt>UserTO</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n@@ -95,13 +79,8 @@ Response create(\n      *\n      * @param statusMod status update details\n      * @return <tt>Response</tt> object featuring the updated user enriched with propagation status information\n-     * - {@link UserTO} as <tt>Entity</tt>\n+     * - <tt>UserTO</tt> as <tt>Entity</tt>\n      */\n-    @Descriptions({\n-        @Description(target = DocTarget.RESPONSE,\n-                value = \"Featuring the updated user enriched with propagation status information - \"\n-                + \"<tt>UserTO</tt> as <tt>Entity</tt>\")\n-    })\n     @POST\n     @Path(\"{key}/status\")\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"89c0de4626b95a604a87b8eb7fb7a403bf6861cc","filename":"core/rest-cxf/pom.xml","status":"modified","additions":128,"deletions":7,"changes":135,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/core%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/core%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fpom.xml?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -104,12 +104,6 @@ under the License.\n       <artifactId>cxf-rt-rs-client</artifactId>\n     </dependency>  \n     \n-    <dependency>\n-      <groupId>org.apache.syncope.common</groupId>\n-      <artifactId>syncope-common-rest-api</artifactId>\n-      <version>${project.version}</version>\n-      <classifier>javadoc</classifier>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>\n       <artifactId>syncope-core-logic</artifactId>\n@@ -120,7 +114,7 @@ under the License.\n       <artifactId>syncope-common-rest-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n-\n+            \n     <dependency>\n       <groupId>org.webjars</groupId>\n       <artifactId>jquery</artifactId>\n@@ -129,6 +123,10 @@ under the License.\n       <groupId>org.webjars</groupId>\n       <artifactId>jquery-ui</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.webjars</groupId>\n+      <artifactId>jquery-ui-themes</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.webjars</groupId>\n       <artifactId>highlightjs</artifactId>\n@@ -137,6 +135,129 @@ under the License.\n \n   <build>\n     <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-dependency-plugin</artifactId>\n+        <inherited>false</inherited>\n+        <configuration>\n+          <outputDirectory>${project.build.directory}</outputDirectory>\n+          <artifactItems>\n+            <artifactItem>\n+              <groupId>org.apache.syncope.common</groupId>\n+              <artifactId>syncope-common-rest-api</artifactId>\n+              <version>${project.version}</version>\n+              <type>wadl</type>\n+            </artifactItem>\n+          </artifactItems>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <phase>process-resources</phase>\n+            <goals>\n+              <goal>copy</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+              \n+      <plugin>\n+        <groupId>org.codehaus.mojo</groupId>\n+        <artifactId>xml-maven-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <executions>\n+          <execution>\n+            <phase>prepare-package</phase>\n+            <goals>\n+              <goal>transform</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+        <configuration>\n+          <transformationSets>\n+            <transformationSet>\n+              <dir>${project.build.directory}</dir>\n+              <includes>\n+                <include>syncope-common-rest-api-${project.version}.wadl</include>\n+              </includes>\n+              <outputDir>${project.build.directory}/classes/META-INF/resources/doc</outputDir>\n+              <stylesheet>${project.build.directory}/classes/wadl2html/identity.xsl</stylesheet>\n+              <outputProperties>\n+                <outputProperty>\n+                  <name>indent</name>\n+                  <value>yes</value>\n+                </outputProperty>\n+              </outputProperties>\n+              <fileMappers>\n+                <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                  <pattern>^.*$</pattern>\n+                  <replacement>syncope.wadl</replacement>\n+                </fileMapper>\n+              </fileMappers>\n+            </transformationSet>\n+            <transformationSet>\n+              <dir>${project.build.directory}</dir>\n+              <includes>\n+                <include>syncope-common-rest-api-${project.version}.wadl</include>\n+              </includes>\n+              <outputDir>${project.build.directory}/classes/META-INF/resources/doc</outputDir>\n+              <stylesheet>${project.build.directory}/classes/wadl2html/index.xsl</stylesheet>\n+              <parameters>\n+                <parameter>\n+                  <name>contextPath</name>\n+                  <value>..</value>\n+                </parameter>\n+              </parameters>\n+              <outputProperties>\n+                <outputProperty>\n+                  <name>indent</name>\n+                  <value>yes</value>\n+                </outputProperty>\n+              </outputProperties>\n+              <fileMappers>\n+                <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                  <pattern>^.*$</pattern>\n+                  <replacement>index.html</replacement>\n+                </fileMapper>\n+              </fileMappers>\n+            </transformationSet>\n+            <transformationSet>\n+              <dir>${project.build.directory}</dir>\n+              <includes>\n+                <include>syncope-common-rest-api-${project.version}.wadl</include>\n+              </includes>\n+              <outputDir>${project.build.directory}/classes/META-INF/resources/doc</outputDir>\n+              <stylesheet>${project.build.directory}/classes/wadl2html/schema.xsl</stylesheet>\n+              <parameters>\n+                <parameter>\n+                  <name>contextPath</name>\n+                  <value>..</value>\n+                </parameter>\n+                <parameter>\n+                  <name>schema-position</name>\n+                  <value>1</value>\n+                </parameter>\n+                <parameter>\n+                  <name>schema-prefix</name>\n+                  <value>syncope1</value>\n+                </parameter>\n+              </parameters>\n+              <outputProperties>\n+                <outputProperty>\n+                  <name>indent</name>\n+                  <value>yes</value>\n+                </outputProperty>\n+              </outputProperties>\n+              <fileMappers>\n+                <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                  <pattern>^.*$</pattern>\n+                  <replacement>schema_1_syncope1.html</replacement>\n+                </fileMapper>\n+              </fileMappers>\n+            </transformationSet>\n+          </transformationSets>\n+        </configuration>\n+      </plugin>\n+            \n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>"},{"sha":"e5d5c749d1b70f139665b84722ebf09401d428f5","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/WADLServlet.java","status":"removed","additions":0,"deletions":96,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64c5fbd70e7b8b335358d2ae67f8f3397dfef008/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64c5fbd70e7b8b335358d2ae67f8f3397dfef008/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java?ref=64c5fbd70e7b8b335358d2ae67f8f3397dfef008","patch":"@@ -1,96 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.rest.cxf;\n-\n-import java.io.IOException;\n-import java.net.URL;\n-import java.rmi.ServerException;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import org.apache.cocoon.pipeline.CachingPipeline;\n-import org.apache.cocoon.pipeline.Pipeline;\n-import org.apache.cocoon.sax.SAXPipelineComponent;\n-import org.apache.cocoon.sax.component.XMLGenerator;\n-import org.apache.cocoon.sax.component.XMLSerializer;\n-import org.apache.cocoon.sax.component.XSLTTransformer;\n-\n-public class WADLServlet extends HttpServlet {\n-\n-    private static final long serialVersionUID = -6737005675471095560L;\n-\n-    private static final Pattern SCHEMA_PATTERN = Pattern.compile(\"/schema_(.*)_(.*)\\\\.html\");\n-\n-    /**\n-     * Handles the HTTP <code>GET</code> method.\n-     *\n-     * @param request servlet request\n-     * @param response servlet response\n-     * @throws ServletException if a servlet-specific error occurs\n-     * @throws IOException if an I/O error occurs\n-     */\n-    @Override\n-    protected void doGet(final HttpServletRequest request, final HttpServletResponse response)\n-            throws ServletException, IOException {\n-\n-        String requestURI = request.getRequestURI().substring(\n-                request.getRequestURI().indexOf(request.getServletPath()) + request.getServletPath().length());\n-        Matcher schemaMatcher = SCHEMA_PATTERN.matcher(requestURI);\n-\n-        Pipeline<SAXPipelineComponent> pipeline = new CachingPipeline<SAXPipelineComponent>();\n-        final String wadlURL = request.getRequestURL().\n-                substring(0, request.getRequestURL().indexOf(\"/doc\")) + \"/?_wadl\";\n-        pipeline.addComponent(new XMLGenerator(new URL(wadlURL)));\n-        if (\"/\".equals(requestURI)) {\n-            XSLTTransformer xslt = new XSLTTransformer(getClass().getResource(\"/wadl2html/index.xsl\"));\n-\n-            Map<String, Object> parameters = new HashMap<>();\n-            parameters.put(\"contextPath\", request.getContextPath());\n-            xslt.setParameters(parameters);\n-\n-            pipeline.addComponent(xslt);\n-        } else if (schemaMatcher.matches()) {\n-            XSLTTransformer xslt = new XSLTTransformer(getClass().getResource(\"/wadl2html/schema.xsl\"));\n-\n-            Map<String, Object> parameters = new HashMap<>();\n-            parameters.put(\"contextPath\", request.getContextPath());\n-            parameters.put(\"schema-position\", schemaMatcher.group(1));\n-            parameters.put(\"schema-prefix\", schemaMatcher.group(2));\n-            xslt.setParameters(parameters);\n-\n-            pipeline.addComponent(xslt);\n-        } else {\n-            throw new ServerException(\"URL not supported: \" + request.getRequestURI());\n-        }\n-\n-        pipeline.addComponent(XMLSerializer.createHTML4Serializer());\n-        pipeline.setup(response.getOutputStream());\n-        try {\n-            pipeline.execute();\n-        } catch (Exception e) {\n-            throw new ServletException(e);\n-        }\n-    }\n-\n-}"},{"sha":"e9ded9d5885b48efa014ea9142ff4e16f766e555","filename":"core/rest-cxf/src/main/resources/META-INF/web-fragment.xml","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -46,15 +46,6 @@ under the License.\n     <servlet-name>CXFServlet</servlet-name>\n     <url-pattern>/rest/*</url-pattern>\n   </servlet-mapping>\n-  <servlet>\n-    <servlet-name>WADLServlet</servlet-name>\n-    <servlet-class>org.apache.syncope.core.rest.cxf.WADLServlet</servlet-class>\n-    <load-on-startup>2</load-on-startup> \n-  </servlet>\n-  <servlet-mapping>\n-    <servlet-name>WADLServlet</servlet-name>\n-    <url-pattern>/rest/doc/*</url-pattern>\n-  </servlet-mapping>\n \n   <filter>\n     <filter-name>encodingFilter</filter-name>"},{"sha":"b8f894861c7f1b68ca324aaeb571b7bbc2bce7b5","filename":"core/rest-cxf/src/main/resources/restCXFContext.xml","status":"modified","additions":2,"deletions":13,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -78,23 +78,13 @@ under the License.\n   \n   <bean id=\"searchContextProvider\" class=\"org.apache.cxf.jaxrs.ext.search.SearchContextProvider\"/>\n   \n-  <bean id=\"wadlGenerator\" class=\"org.apache.cxf.jaxrs.model.wadl.WadlGenerator\">\n-    <property name=\"applicationTitle\" value=\"Apache Syncope ${syncope.version}\"/>\n-    <property name=\"namespacePrefix\" value=\"syncope\"/>\n-    <property name=\"linkJsonToXmlSchema\" value=\"true\"/>\n-    <property name=\"useJaxbContextForQnames\" value=\"true\"/>\n-    <property name=\"ignoreMessageWriters\" value=\"true\"/>\n-    <property name=\"addResourceAndMethodIds\" value=\"true\"/>\n-    <property name=\"usePathParamsToCompareOperations\" value=\"false\"/>\n-    <property name=\"javaDocPath\" value=\"/WEB-INF/lib/syncope-common-rest-api-${syncope.version}-javadoc.jar\"/>\n-  </bean>\n-  \n   <bean id=\"addDomainFilter\" class=\"org.apache.syncope.core.rest.cxf.AddDomainFilter\"/>\n   <bean id=\"addETagFilter\" class=\"org.apache.syncope.core.rest.cxf.AddETagFilter\"/>\n   \n   <jaxrs:server id=\"restContainer\" address=\"/\"\n                 basePackages=\"org.apache.syncope.common.rest.api.service, org.apache.syncope.core.rest.cxf.service\" \n-                staticSubresourceResolution=\"true\">\n+                staticSubresourceResolution=\"true\"\n+                docLocation=\"classpath:/META-INF/resources/doc/syncope.wadl\">\n     <jaxrs:properties> \n       <entry key=\"search.lax.property.match\" value=\"true\"/> \n     </jaxrs:properties> \n@@ -109,7 +99,6 @@ under the License.\n       <ref bean=\"jsonProvider\"/>\n       <ref bean=\"exceptionMapper\"/>\n       <ref bean=\"searchContextProvider\"/>\n-      <ref bean=\"wadlGenerator\"/>\n       <ref bean=\"addDomainFilter\"/>\n       <ref bean=\"addETagFilter\"/>\n     </jaxrs:providers>"},{"sha":"3678f8075cd7b430b635e70ea94715697ba7ad30","filename":"core/rest-cxf/src/main/resources/wadl2html/identity.xsl","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fidentity.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fidentity.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Fidentity.xsl?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one\n+  or more contributor license agreements.  See the NOTICE file\n+  distributed with this work for additional information\n+  regarding copyright ownership.  The ASF licenses this file\n+  to you under the Apache License, Version 2.0 (the\n+  \"License\"); you may not use this file except in compliance\n+  with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing,\n+  software distributed under the License is distributed on an\n+  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  KIND, either express or implied.  See the License for the\n+  specific language governing permissions and limitations\n+  under the License.\n+-->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                version=\"1.0\">\n+\n+    <xsl:template match=\"node()|@*\">\n+        <xsl:copy>\n+            <xsl:apply-templates select=\"@*|node()\"/>\n+        </xsl:copy>\n+    </xsl:template>\n+</xsl:stylesheet>"},{"sha":"9e37e245448098b2ed9a00fe2bf4f8d310406148","filename":"core/rest-cxf/src/main/resources/wadl2html/index.xsl","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2Fwadl2html%2Findex.xsl?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -46,7 +46,7 @@\n           <xsl:value-of select=\"wadl:doc/@title\"/>\n         </title>\n \n-        <link rel=\"stylesheet\" href=\"{$contextPath}/webjars/jquery-ui/${jquery-ui.version}/jquery-ui.min.css\"/>\n+        <link rel=\"stylesheet\" href=\"{$contextPath}/webjars/jquery-ui-themes/${jquery-ui.version}/smoothness/jquery-ui.min.css\"/>\n         <style>\n           body {\n           font-family: \"Verdana,Arial,sans-serif\";\n@@ -142,6 +142,7 @@\n             <th>Prefix</th>\n             <th>URI</th>\n             <th>XSD</th>\n+            <th>WADL</th>\n           </tr>\n           <xsl:apply-templates select=\"wadl:grammars/xs:schema\"/>\n         </table>\n@@ -212,6 +213,10 @@\n            onClick=\"window.open('', 'schema', '', true).focus();\" target=\"schema\">\n           <xsl:value-of select=\"$prefix\"/>.xsd</a>\n       </td>\n+      <td>\n+        <a href=\"syncope.wadl\"\n+           onClick=\"window.open('', 'wadl', '', true).focus();\" target=\"wadl\">syncope.wadl</a>\n+      </td>\n     </tr>\n   </xsl:template>\n     "},{"sha":"68e2997935c2b179128c4d25ae07f98b8fa4ea7c","filename":"pom.xml","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/926e8fd90201be8fa31f8c518c73423ae06669e2/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/926e8fd90201be8fa31f8c518c73423ae06669e2/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=926e8fd90201be8fa31f8c518c73423ae06669e2","patch":"@@ -326,7 +326,7 @@ under the License.\n     <connid.ldap.version>1.4.0</connid.ldap.version>\n     <connid.ad.version>1.2.3</connid.ad.version>\n \n-    <cxf.version>3.1.2</cxf.version>\n+    <cxf.version>3.1.3-SNAPSHOT</cxf.version>\n \n     <camel.version>2.15.3</camel.version>\t\n \n@@ -371,7 +371,7 @@ under the License.\n     <log.directory>${project.build.directory}/log</log.directory>\n     <activiti-modeler.directory>${project.build.directory}/activiti-modeler</activiti-modeler.directory>\n     \n-    <jquery.version>2.1.3</jquery.version>\n+    <jquery.version>2.1.4</jquery.version>\n     <jquery-ui.version>1.11.4</jquery-ui.version>\n     <jquery-cookie.version>1.4.1-1</jquery-cookie.version>\n     <bootstrap.version>3.3.5</bootstrap.version>\n@@ -929,6 +929,11 @@ under the License.\n         <artifactId>jquery-ui</artifactId>\n         <version>${jquery-ui.version}</version>\n       </dependency>\n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>jquery-ui-themes</artifactId>\n+        <version>${jquery-ui.version}</version>\n+      </dependency>\n       <dependency>\n         <groupId>org.webjars</groupId>\n         <artifactId>bootstrap</artifactId>\n@@ -1081,7 +1086,7 @@ under the License.\n           <configuration>\n             <source>${targetJdk}</source>\n             <target>${targetJdk}</target>\n-\t    <useIncrementalCompilation>false</useIncrementalCompilation>\n+            <useIncrementalCompilation>false</useIncrementalCompilation>\n             <showWarnings>true</showWarnings>\n             <showDeprecation>true</showDeprecation>\n             <!--<compilerArgument>-Xlint:unchecked</compilerArgument>-->"}]}