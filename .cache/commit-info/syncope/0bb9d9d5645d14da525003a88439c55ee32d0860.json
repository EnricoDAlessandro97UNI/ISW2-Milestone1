{"sha":"0bb9d9d5645d14da525003a88439c55ee32d0860","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBiYjlkOWQ1NjQ1ZDE0ZGE1MjUwMDNhODg0MzljNTVlZTMyZDA4NjA=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2018-07-25T14:51:57Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2018-07-25T15:38:35Z"},"message":"[SYNCOPE-1343] added support to update plain attributes with empty and/or null values while pulling from resource","tree":{"sha":"e0d68fd02802bce6024803a4066ded9818f77e9a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e0d68fd02802bce6024803a4066ded9818f77e9a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0bb9d9d5645d14da525003a88439c55ee32d0860","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0bb9d9d5645d14da525003a88439c55ee32d0860","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0bb9d9d5645d14da525003a88439c55ee32d0860","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0bb9d9d5645d14da525003a88439c55ee32d0860/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"65fe5336441000fb608783e6348da0acff52de64","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/65fe5336441000fb608783e6348da0acff52de64","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/65fe5336441000fb608783e6348da0acff52de64"}],"stats":{"total":49,"additions":46,"deletions":3},"files":[{"sha":"c8e7eb698615fb10730d751c9254bcfdc06c97d7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":23,"deletions":2,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0bb9d9d5645d14da525003a88439c55ee32d0860/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0bb9d9d5645d14da525003a88439c55ee32d0860/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=0bb9d9d5645d14da525003a88439c55ee32d0860","patch":"@@ -122,7 +122,7 @@ private static void diff(\n         }\n \n         updatedAttrs.values().forEach(attrTO -> {\n-            if (attrTO.getValues().isEmpty()) {\n+            if (isEmpty(attrTO)) {\n                 if (!incremental) {\n                     result.getPlainAttrs().add(new AttrPatch.Builder().\n                             operation(PatchOperation.DELETE).\n@@ -237,7 +237,7 @@ private static void diff(\n \n         // 1. plain attributes\n         result.getPlainAttrs().addAll(updated.getPlainAttrs().stream().\n-                filter(attrTO -> !attrTO.getValues().isEmpty() && !NULL_SINGLETON.equals(attrTO.getValues())).\n+                filter(attrTO -> !isEmpty(attrTO)).\n                 collect(Collectors.toSet()));\n \n         // 2. virtual attributes\n@@ -618,4 +618,25 @@ public static UserTO patch(final UserTO userTO, final UserPatch userPatch) {\n \n         return result;\n     }\n+\n+    /**\n+     * Add PLAIN attribute DELETE patch for those attributes of the input AnyTO without values or containing null value\n+     *\n+     * @param anyTO\n+     * @param result\n+     */\n+    public static void cleanEmptyAttrs(final AnyTO anyTO, final AnyPatch result) {\n+        anyTO.getPlainAttrs().stream()\n+                .filter(plainAttrTO -> isEmpty(plainAttrTO))\n+                .forEach(plainAttrTO -> {\n+                    result.getPlainAttrs().add(new AttrPatch.Builder().\n+                            operation(PatchOperation.DELETE).\n+                            attrTO(new AttrTO.Builder().schema(plainAttrTO.getSchema()).build()).\n+                            build());\n+                });\n+    }\n+\n+    private static boolean isEmpty(final AttrTO attrTO) {\n+        return attrTO.getValues().isEmpty() || NULL_SINGLETON.equals(attrTO.getValues());\n+    }\n }"},{"sha":"f5905fd8e7b2738978fe5e4377e2ab9cde9555d3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/ConnObjectUtils.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0bb9d9d5645d14da525003a88439c55ee32d0860/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0bb9d9d5645d14da525003a88439c55ee32d0860/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java?ref=0bb9d9d5645d14da525003a88439c55ee32d0860","patch":"@@ -296,7 +296,10 @@ public <T extends AnyPatch> T getAnyPatch(\n                 default:\n             }\n         }\n-\n+        // SYNCOPE-1343, remove null or empty values from the patch plain attributes\n+        if (anyPatch != null) {\n+            AnyOperations.cleanEmptyAttrs(updated, anyPatch);\n+        }\n         return anyPatch;\n     }\n "},{"sha":"a0a6f9d6950b6a607df7b6b5cb75e8324a15a64d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0bb9d9d5645d14da525003a88439c55ee32d0860/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0bb9d9d5645d14da525003a88439c55ee32d0860/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=0bb9d9d5645d14da525003a88439c55ee32d0860","patch":"@@ -396,13 +396,24 @@ public void reconcileFromLDAP() {\n         assertNotNull(matchingUsers.getResult().get(0).getPlainAttr(\"obscure\"));\n         // Check for SYNCOPE-123\n         assertNotNull(matchingUsers.getResult().get(0).getPlainAttr(\"photo\"));\n+        // Check for SYNCOPE-1343\n+        assertEquals(\"odd\", matchingUsers.getResult().get(0).getPlainAttr(\"title\").get().getValues().get(0));\n \n         GroupTO groupTO = matchingGroups.getResult().iterator().next();\n         assertNotNull(groupTO);\n         assertEquals(\"testLDAPGroup\", groupTO.getName());\n         assertEquals(\"true\", groupTO.getPlainAttr(\"show\").get().getValues().get(0));\n         assertEquals(matchingUsers.getResult().iterator().next().getKey(), groupTO.getUserOwner());\n         assertNull(groupTO.getGroupOwner());\n+        // SYNCOPE-1343, set value title to null on LDAP\n+        ConnObjectTO connObject =\n+                resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(),\n+                        matchingUsers.getResult().get(0).getKey());\n+        assertNotNull(connObject);\n+        assertEquals(\"odd\", connObject.getAttr(\"title\").get().getValues().get(0));\n+        AttrTO userDn = connObject.getAttr(Name.NAME).get();\n+        updateLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD,\n+                userDn.getValues().get(0), Collections.singletonMap(\"title\", (String) null));\n \n         // SYNCOPE-317\n         execProvisioningTask(taskService, TaskType.PULL, \"1e419ca4-ea81-4493-a14f-28b90113686d\", 50, false);\n@@ -428,6 +439,14 @@ public void reconcileFromLDAP() {\n             fail(\"Timeout while checking for memberships of \" + groupTO.getName());\n         }\n         assertEquals(1, members.getResult().size());\n+\n+        // SYNCOPE-1343, verify that the title attribte has been reset\n+        matchingUsers = userService.search(\n+                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                        fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"pullFromLDAP\").\n+                                query()).\n+                        build());\n+        assertNull(matchingUsers.getResult().get(0).getPlainAttr(\"title\").orElse(null));\n     }\n \n     @Test"}]}