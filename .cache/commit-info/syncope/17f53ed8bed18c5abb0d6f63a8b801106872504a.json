{"sha":"17f53ed8bed18c5abb0d6f63a8b801106872504a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE3ZjUzZWQ4YmVkMThjNWFiYjBkNmY2M2E4YjgwMTEwNjg3MjUwNGE=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-01-26T14:57:11Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-01-26T14:57:11Z"},"message":"[SYNCOPE-743] providing propagation tasks management","tree":{"sha":"ff9c1e920ade9ce15105b1b874702ba8cd066018","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ff9c1e920ade9ce15105b1b874702ba8cd066018"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/17f53ed8bed18c5abb0d6f63a8b801106872504a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/17f53ed8bed18c5abb0d6f63a8b801106872504a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/17f53ed8bed18c5abb0d6f63a8b801106872504a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/17f53ed8bed18c5abb0d6f63a8b801106872504a/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"a2e5e74ab2d592e2015df2c2680be0100e26987b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a2e5e74ab2d592e2015df2c2680be0100e26987b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a2e5e74ab2d592e2015df2c2680be0100e26987b"}],"stats":{"total":1680,"additions":1348,"deletions":332},"files":[{"sha":"3a1e72fb5434d3c1dcde791352ac373797c95cc6","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -98,6 +98,8 @@ public final class Constants {\n \n     public static final String PREF_PROPAGATION_TASKS_PAGINATOR_ROWS = \"proagationtasks.paginator.rows\";\n \n+    public static final String PREF_TASK_EXECS_PAGINATOR_ROWS = \"task.execs.paginator.rows\";\n+\n     public static final String PREF_NOTIFICATION_TASKS_PAGINATOR_ROWS = \"notificationtasks.paginator.rows\";\n \n     public static final String PREF_SCHED_TASKS_PAGINATOR_ROWS = \"schedtasks.paginator.rows\";"},{"sha":"4d803349fbd98b89a4655ed135dcfc22be6a9fef","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":35,"deletions":2,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -74,7 +74,7 @@\n      */\n     protected final boolean filtered;\n \n-    private final boolean checkBoxEnabled;\n+    private boolean checkBoxEnabled;\n \n     /**\n      * Result table.\n@@ -91,8 +91,35 @@\n      */\n     protected final BasePage page;\n \n+    /**\n+     * Create simple unfiltered search result panel.\n+     * Use the available builder for powerfull configuration options.\n+     *\n+     * @param id panel id.\n+     * @param pageRef page reference.\n+     */\n+    public AbstractSearchResultPanel(final String id, final PageReference pageRef) {\n+        this(id, pageRef, true);\n+    }\n+\n+    public AbstractSearchResultPanel(final String id, final PageReference pageRef, final boolean wizardInModal) {\n+        this(id, new Builder<T, W, E>(null, pageRef) {\n+\n+            private static final long serialVersionUID = -8424727765826509309L;\n+\n+            @Override\n+            protected WizardMgtPanel<W> newInstance(final String id) {\n+                throw new UnsupportedOperationException(\"Not supported yet.\");\n+            }\n+        }.setFiltered(false), wizardInModal);\n+    }\n+\n     protected AbstractSearchResultPanel(final String id, final Builder<T, W, E> builder) {\n-        super(id, true);\n+        this(id, builder, true);\n+    }\n+\n+    protected AbstractSearchResultPanel(final String id, final Builder<T, W, E> builder, final boolean wizardInModal) {\n+        super(id, wizardInModal);\n \n         setOutputMarkupId(true);\n \n@@ -168,6 +195,7 @@ private void updateResultTable(final boolean create, final int rows) {\n         final int currentPage = resultTable != null\n                 ? (create ? (int) resultTable.getPageCount() - 1 : (int) resultTable.getCurrentPage()) : 0;\n \n+        // reworking on bulkactions please, take care of restClient handle: maybe not useful to keep into\n         AjaxDataTablePanel.Builder<T, String> resultTableBuilder = new AjaxDataTablePanel.Builder<>(\n                 dataProvider, page.getPageReference()).\n                 setColumns(getColumns()).\n@@ -186,6 +214,11 @@ private void updateResultTable(final boolean create, final int rows) {\n         container.addOrReplace(resultTable);\n     }\n \n+    public AbstractSearchResultPanel<T, W, DP, E> disableCheckBoxes() {\n+        this.checkBoxEnabled = false;\n+        return this;\n+    }\n+\n     @Override\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof EventDataWrapper) {"},{"sha":"9d6ff2636ecd6f2486c717a563acd282a49c1784","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractTypesPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractTypesPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -22,14 +22,15 @@\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.wicket.PageReference;\n \n public abstract class AbstractTypesPanel<T extends AbstractBaseBean, DP extends SearchableDataProvider<T>>\n         extends AbstractSearchResultPanel<T, T, DP, BaseRestClient> {\n \n     private static final long serialVersionUID = 7890071604330629259L;\n \n-    public AbstractTypesPanel(final String id, final Builder<T, T, BaseRestClient> builder) {\n-        super(id, builder);\n+    public AbstractTypesPanel(final String id, final PageReference pageRef) {\n+        super(id, pageRef);\n         setFooterVisibility(true);\n         modal.addSumbitButton();\n         modal.size(Modal.Size.Large);"},{"sha":"c47b9c6b0adda1b543c789363d597a3cb57d5a37","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectSearchResultPanel.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectSearchResultPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.AnyDisplayAttributesModalPage;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n@@ -196,13 +195,8 @@ public static class Builder extends AnySearchResultPanel.Builder<AnyObjectTO> {\n \n         private static final long serialVersionUID = -6828423611982275641L;\n \n-        public Builder(\n-                final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final AbstractAnyRestClient<AnyObjectTO> restClient,\n-                final String type,\n-                final PageReference pageRef) {\n-\n-            super(anyTypeClassTOs, restClient, type, pageRef);\n+        public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, final PageReference pageRef) {\n+            super(anyTypeClassTOs, new AnyObjectRestClient(), type, pageRef);\n             setShowResultPage(true);\n         }\n "},{"sha":"aec4cce843348c1d6afa8f36b93577a777a0f380","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":2,"deletions":25,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -32,13 +32,11 @@\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n-import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n@@ -60,21 +58,9 @@ public class AnyTypeClassesPanel extends AbstractTypesPanel<AnyTypeClassTO, AnyT\n \n     private static final long serialVersionUID = -2356760296223908382L;\n \n-    public AnyTypeClassesPanel(final String id,\n-            final AbstractSearchResultPanel.Builder<AnyTypeClassTO, AnyTypeClassTO, BaseRestClient> builder) {\n-        super(id, builder);\n-    }\n-\n     public AnyTypeClassesPanel(final String id, final PageReference pageRef) {\n-        super(id, new AbstractSearchResultPanel.Builder<AnyTypeClassTO, AnyTypeClassTO, BaseRestClient>(null, pageRef) {\n-\n-            private static final long serialVersionUID = 8769126634538601689L;\n-\n-            @Override\n-            protected WizardMgtPanel<AnyTypeClassTO> newInstance(final String id) {\n-                return new AnyTypeClassesPanel(id, this);\n-            }\n-        }.disableCheckBoxes());\n+        super(id, pageRef);\n+        disableCheckBoxes();\n \n         this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AnyTypeClassTO>(\n                 BaseModal.CONTENT_ID, new AnyTypeClassTO(), pageRef) {\n@@ -106,15 +92,6 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     }\n                 };\n             }\n-\n-            @Override\n-            protected void onCancelInternal(final AnyTypeClassTO modelObject) {\n-            }\n-\n-            @Override\n-            protected Serializable onApplyInternal(final AnyTypeClassTO modelObject) {\n-                return null;\n-            }\n         }, true);\n \n         initResultTable();"},{"sha":"5d1b29fe3fd6822f243238bc41996e3550d969a8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypePanel.java","status":"modified","additions":4,"deletions":27,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -33,13 +33,11 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AnyTypePanel.AnyTypeProvider;\n-import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n-import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.AnyTypeService;\n@@ -61,20 +59,9 @@ public class AnyTypePanel extends AbstractTypesPanel<AnyTypeTO, AnyTypeProvider>\n \n     private static final long serialVersionUID = 3905038169553185171L;\n \n-    public AnyTypePanel(final String id, final Builder<AnyTypeTO, AnyTypeTO, BaseRestClient> builder) {\n-        super(id, builder);\n-    }\n-\n     public AnyTypePanel(final String id, final PageReference pageRef) {\n-        super(id, new Builder<AnyTypeTO, AnyTypeTO, BaseRestClient>(null, pageRef) {\n-\n-            private static final long serialVersionUID = 8769126634538601689L;\n-\n-            @Override\n-            protected WizardMgtPanel<AnyTypeTO> newInstance(final String id) {\n-                return new AnyTypePanel(id, this);\n-            }\n-        }.disableCheckBoxes());\n+        super(id, pageRef);\n+        disableCheckBoxes();\n \n         this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AnyTypeTO>(\n                 BaseModal.CONTENT_ID, new AnyTypeTO(), pageRef) {\n@@ -106,16 +93,6 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     }\n                 };\n             }\n-\n-            @Override\n-            protected void onCancelInternal(final AnyTypeTO modelObject) {\n-            }\n-\n-            @Override\n-            protected Serializable onApplyInternal(final AnyTypeTO modelObject) {\n-                // do nothing\n-                return null;\n-            }\n         }, true);\n \n         initResultTable();\n@@ -200,8 +177,8 @@ public String getCssClass() {\n             public void populateItem(final Item<ICellPopulator<AnyTypeTO>> item, final String componentId,\n                     final IModel<AnyTypeTO> model) {\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks =\n-                        ActionLinksPanel.builder(page.getPageReference());\n+                final ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.\n+                        getPageReference());\n                 actionLinks.setDisableIndicator(true);\n                 actionLinks.addWithRoles(new ActionLink<Serializable>() {\n "},{"sha":"2349c12dcc0f02d216ba1f39bc485fb232f37d50","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupSearchResultPanel.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupSearchResultPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -28,7 +28,6 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.pages.GroupDisplayAttributesModalPage;\n-import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n@@ -193,13 +192,8 @@ public static class Builder extends AnySearchResultPanel.Builder<GroupTO>\n \n         private static final long serialVersionUID = 1L;\n \n-        public Builder(\n-                final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final AbstractAnyRestClient<GroupTO> restClient,\n-                final String type,\n-                final PageReference pageRef) {\n-\n-            super(anyTypeClassTOs, restClient, type, pageRef);\n+        public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, final PageReference pageRef) {\n+            super(anyTypeClassTOs, new GroupRestClient(), type, pageRef);\n             setShowResultPage(true);\n         }\n "},{"sha":"da90ab678f3e4174d6e6afc189eeb12e78f39171","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/MultilevelPanel.java","status":"added","additions":126,"deletions":0,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.syncope.client.console.commons.status.StatusBean;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.markup.html.IHeaderContributor;\n+import org.apache.wicket.markup.html.TransparentWebMarkupContainer;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class MultilevelPanel extends Panel implements IHeaderContributor {\n+\n+    private static final long serialVersionUID = -4064294905566247729L;\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(MultilevelPanel.class);\n+\n+    private boolean isFirstLevel = true;\n+\n+    public static final String FIRST_LEVEL_ID = \"first\";\n+\n+    public static final String SECOND_LEVEL_ID = \"second\";\n+\n+    private final WebMarkupContainer firstLevelContainer;\n+\n+    private final WebMarkupContainer secondLevelContainer;\n+\n+    public MultilevelPanel(final String id) {\n+        super(id);\n+\n+        firstLevelContainer = new TransparentWebMarkupContainer(\"firstLevelContainer\");\n+        firstLevelContainer.setOutputMarkupPlaceholderTag(true);\n+        firstLevelContainer.setVisible(true);\n+        add(firstLevelContainer);\n+\n+        secondLevelContainer = new WebMarkupContainer(\"secondLevelContainer\");\n+        secondLevelContainer.setOutputMarkupPlaceholderTag(true);\n+        secondLevelContainer.setVisible(false);\n+        add(secondLevelContainer);\n+\n+        secondLevelContainer.add(new AjaxLink<StatusBean>(\"back\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                prev(target);\n+            }\n+        });\n+    }\n+\n+    public final void next(final String title, final SecondLevel secondLevel, final AjaxRequestTarget target) {\n+        if (isFirstLevel) {\n+            secondLevelContainer.addOrReplace(new Label(\"title\", new ResourceModel(title, title)));\n+            secondLevelContainer.addOrReplace(secondLevel);\n+            secondLevelContainer.setVisible(true);\n+            target.add(secondLevelContainer);\n+\n+            firstLevelContainer.setVisible(false);\n+            target.add(firstLevelContainer);\n+\n+            isFirstLevel = false;\n+        } else {\n+            LOG.warn(\"No further level available\");\n+        }\n+    }\n+\n+    private void prev(final AjaxRequestTarget target) {\n+        if (isFirstLevel) {\n+            LOG.warn(\"No further level available\");\n+        } else {\n+            firstLevelContainer.setVisible(true);\n+            target.add(firstLevelContainer);\n+\n+            secondLevelContainer.setVisible(false);\n+            target.add(secondLevelContainer);\n+\n+            isFirstLevel = true;\n+        }\n+    }\n+\n+    /**\n+     * Ad panel with id <tt>first</tt>\n+     *\n+     * @param panel panel to be used into the first level.\n+     * @return the current MultilevelPanel instance.\n+     */\n+    public MultilevelPanel setFirstLevel(final Panel panel) {\n+        firstLevelContainer.add(panel);\n+        return this;\n+    }\n+\n+    public static class SecondLevel extends Panel {\n+\n+        private static final long serialVersionUID = 5685291231060035528L;\n+\n+        public SecondLevel() {\n+            super(SECOND_LEVEL_ID);\n+        }\n+\n+    }\n+}"},{"sha":"12c61186192a58647f2cfca759214170e5a4027f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -23,11 +23,8 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.rest.GroupRestClient;\n-import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -66,12 +63,6 @@ public abstract class Realm extends Panel {\n \n     private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n \n-    private final UserRestClient userRestClient = new UserRestClient();\n-\n-    private final GroupRestClient groupRestClient = new GroupRestClient();\n-\n-    private final AnyObjectRestClient anyObjectRestClient = new AnyObjectRestClient();\n-\n     private final PageReference pageRef;\n \n     @SuppressWarnings({ \"unchecked\", \"unchecked\" })\n@@ -159,7 +150,6 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 userTO.setRealm(realmTO.getFullPath());\n                 panel = new UserSearchResultPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n-                        userRestClient,\n                         anyTypeTO.getKey(),\n                         pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new UserWizardBuilder(\n@@ -173,7 +163,6 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 groupTO.setRealm(realmTO.getFullPath());\n                 panel = new GroupSearchResultPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n-                        groupRestClient,\n                         anyTypeTO.getKey(),\n                         pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new GroupWizardBuilder(\n@@ -188,7 +177,6 @@ private Panel getAnyPanel(final String id, final PageReference pageReference, fi\n                 anyObjectTO.setType(anyTypeTO.getKey());\n                 panel = new AnyObjectSearchResultPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n-                        anyObjectRestClient,\n                         anyTypeTO.getKey(),\n                         pageReference).setRealm(realmTO.getFullPath()).\n                         addNewItemPanelBuilder(new AnyObjectWizardBuilder("},{"sha":"e90b0ccfb0a2418d4b9b40cafeaec0e823184d2f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypePanel.java","status":"modified","additions":2,"deletions":26,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -32,13 +32,11 @@\n import org.apache.syncope.client.console.commons.SearchableDataProvider;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.panels.RelationshipTypePanel.RelationshipTypeProvider;\n-import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n-import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n@@ -60,21 +58,9 @@ public class RelationshipTypePanel extends AbstractTypesPanel<RelationshipTypeTO\n \n     private static final long serialVersionUID = -3731778000138547357L;\n \n-    public RelationshipTypePanel(\n-            final String id, final Builder<RelationshipTypeTO, RelationshipTypeTO, BaseRestClient> builder) {\n-        super(id, builder);\n-    }\n-\n     public RelationshipTypePanel(final String id, final PageReference pageRef) {\n-        super(id, new Builder<RelationshipTypeTO, RelationshipTypeTO, BaseRestClient>(null, pageRef) {\n-\n-            private static final long serialVersionUID = 8769126634538601689L;\n-\n-            @Override\n-            protected WizardMgtPanel<RelationshipTypeTO> newInstance(final String id) {\n-                return new RelationshipTypePanel(id, this);\n-            }\n-        }.disableCheckBoxes());\n+        super(id, pageRef);\n+        disableCheckBoxes();\n \n         this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<RelationshipTypeTO>(\n                 BaseModal.CONTENT_ID, new RelationshipTypeTO(), pageRef) {\n@@ -109,16 +95,6 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     }\n                 };\n             }\n-\n-            @Override\n-            protected void onCancelInternal(final RelationshipTypeTO modelObject) {\n-            }\n-\n-            @Override\n-            protected Serializable onApplyInternal(final RelationshipTypeTO modelObject) {\n-                // do nothing\n-                return null;\n-            }\n         }, true);\n \n         initResultTable();"},{"sha":"12c9d157f824a2ff8cd79ee75b62d5c357cd9eb4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":2,"deletions":28,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -35,14 +35,12 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.SchemaTypePanel.SchemaProvider;\n-import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n-import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.common.lib.to.AbstractSchemaTO;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -87,24 +85,9 @@ public class SchemaTypePanel extends AbstractTypesPanel<AbstractSchemaTO, Schema\n \n     private final SchemaType schemaType;\n \n-    public SchemaTypePanel(final String id, final SchemaType schemaType,\n-            final AbstractSearchResultPanel.Builder<AbstractSchemaTO, AbstractSchemaTO, BaseRestClient> builder) {\n-        super(id, builder);\n-\n-        this.schemaType = schemaType;\n-    }\n-\n     public SchemaTypePanel(final String id, final SchemaType schemaType, final PageReference pageRef) {\n-        super(id, new AbstractSearchResultPanel.Builder<AbstractSchemaTO, AbstractSchemaTO, BaseRestClient>(null,\n-                pageRef) {\n-\n-            private static final long serialVersionUID = 8769126634538601689L;\n-\n-            @Override\n-            protected WizardMgtPanel<AbstractSchemaTO> newInstance(final String id) {\n-                return new SchemaTypePanel(id, schemaType, this).setPageRef(pageRef);\n-            }\n-        }.disableCheckBoxes());\n+        super(id, pageRef);\n+        disableCheckBoxes();\n \n         this.schemaType = schemaType;\n \n@@ -141,15 +124,6 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                         }\n                     };\n                 }\n-\n-                @Override\n-                protected void onCancelInternal(final AbstractSchemaTO modelObject) {\n-                }\n-\n-                @Override\n-                protected Serializable onApplyInternal(final AbstractSchemaTO modelObject) {\n-                    return null;\n-                }\n             }, true);\n \n             initResultTable();"},{"sha":"e82ace069ad4acb995abe941b2107cbe0b656f6a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":2,"deletions":12,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -83,16 +83,6 @@ public ModalPanel<SecurityQuestionTO> build(final int index, final boolean edit)\n                 final SecurityQuestionTO modelObject = newModelObject();\n                 return new SecurityQuestionsModalPanel(modal, modelObject, pageRef);\n             }\n-\n-            @Override\n-            protected void onCancelInternal(final SecurityQuestionTO modelObject) {\n-            }\n-\n-            @Override\n-            protected Serializable onApplyInternal(final SecurityQuestionTO modelObject) {\n-                // do nothing\n-                return null;\n-            }\n         }, true);\n \n         setFooterVisibility(true);\n@@ -243,8 +233,8 @@ private SecurityQuestionsProvider(final int paginatorRows) {\n \n         @Override\n         public Iterator<SecurityQuestionTO> iterator(final long first, final long count) {\n-            final List<SecurityQuestionTO> list = SyncopeConsoleSession.get().getService(SecurityQuestionService.class).\n-                    list();\n+            final List<SecurityQuestionTO> list\n+                    = SyncopeConsoleSession.get().getService(SecurityQuestionService.class).list();\n             Collections.sort(list, comparator);\n             return list.subList((int) first, (int) first + (int) count).iterator();\n         }"},{"sha":"a99c9575c95076610d217988de82a9e0acf22116","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserSearchResultPanel.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserSearchResultPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -29,7 +29,6 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.pages.StatusModal;\n import org.apache.syncope.client.console.pages.UserDisplayAttributesModalPage;\n-import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n@@ -121,8 +120,8 @@ public ActionLinksPanel<UserTO> getActions(final String componentId, final IMode\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final IModel<AnyHandler<UserTO>> formModel =\n-                                new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                        final IModel<AnyHandler<UserTO>> formModel = new CompoundPropertyModel<>(new AnyHandler<>(model.\n+                                getObject()));\n                         modal.setFormModel(formModel);\n \n                         target.add(modal.setContent(new StatusModal<>(\n@@ -139,8 +138,8 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final IModel<AnyHandler<UserTO>> formModel =\n-                                new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                        final IModel<AnyHandler<UserTO>> formModel = new CompoundPropertyModel<>(new AnyHandler<>(model.\n+                                getObject()));\n                         modal.setFormModel(formModel);\n \n                         target.add(modal.setContent(new StatusModal<>(\n@@ -233,13 +232,8 @@ public static class Builder extends AnySearchResultPanel.Builder<UserTO> {\n \n         private static final long serialVersionUID = 1L;\n \n-        public Builder(\n-                final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final AbstractAnyRestClient<UserTO> restClient,\n-                final String type,\n-                final PageReference pageRef) {\n-\n-            super(anyTypeClassTOs, restClient, type, pageRef);\n+        public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, final PageReference pageRef) {\n+            super(anyTypeClassTOs, new UserRestClient(), type, pageRef);\n             setShowResultPage(true);\n         }\n "},{"sha":"e9312e2c51d31ab95fc390242f583f9a839f5776","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSelectionSearchResultPanel.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSelectionSearchResultPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -20,7 +20,7 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n@@ -33,8 +33,7 @@ public final class AnyObjectSelectionSearchResultPanel extends AnySelectionSearc\n \n     public static final String[] USER_DEFAULT_SELECTION = { \"key\" };\n \n-    private AnyObjectSelectionSearchResultPanel(final String id,\n-            final AnyObjectSelectionSearchResultPanel.Builder builder) {\n+    private AnyObjectSelectionSearchResultPanel(final String id, final Builder builder) {\n         super(id, builder);\n     }\n \n@@ -67,13 +66,8 @@ public static final class Builder extends AnySelectionSearchResultPanel.Builder<\n \n         private static final long serialVersionUID = 1L;\n \n-        public Builder(\n-                final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final AbstractAnyRestClient<AnyObjectTO> restClient,\n-                final String type,\n-                final PageReference pageRef) {\n-\n-            super(anyTypeClassTOs, restClient, type, pageRef);\n+        public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, final PageReference pageRef) {\n+            super(anyTypeClassTOs, new AnyObjectRestClient(), type, pageRef);\n             this.filtered = true;\n             this.checkBoxEnabled = false;\n         }"},{"sha":"77ecf4b14596c30cf1ecd616c8847d41025488b5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSelectionSearchResultPanel.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSelectionSearchResultPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -20,7 +20,7 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -66,13 +66,8 @@ public static final class Builder extends AnySelectionSearchResultPanel.Builder<\n \n         private static final long serialVersionUID = 1L;\n \n-        public Builder(\n-                final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final AbstractAnyRestClient<GroupTO> restClient,\n-                final String type,\n-                final PageReference pageRef) {\n-\n-            super(anyTypeClassTOs, restClient, type, pageRef);\n+        public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, final PageReference pageRef) {\n+            super(anyTypeClassTOs, new GroupRestClient(), type, pageRef);\n             this.filtered = true;\n             this.checkBoxEnabled = false;\n         }"},{"sha":"52fbeb265bf7effa9d6e1a3a3903b0f5a3e0c54c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSelectionSearchResultPanel.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSelectionSearchResultPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -20,7 +20,7 @@\n \n import java.util.List;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n+import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n@@ -33,7 +33,7 @@ public final class UserSelectionSearchResultPanel extends AnySelectionSearchResu\n \n     public static final String[] USER_DEFAULT_SELECTION = { \"key\", \"username\", \"status\" };\n \n-    private UserSelectionSearchResultPanel(final String id, final UserSelectionSearchResultPanel.Builder builder) {\n+    private UserSelectionSearchResultPanel(final String id, final Builder builder) {\n         super(id, builder);\n     }\n \n@@ -66,13 +66,8 @@ public static final class Builder extends AnySelectionSearchResultPanel.Builder<\n \n         private static final long serialVersionUID = 1L;\n \n-        public Builder(\n-                final List<AnyTypeClassTO> anyTypeClassTOs,\n-                final AbstractAnyRestClient<UserTO> restClient,\n-                final String type,\n-                final PageReference pageRef) {\n-\n-            super(anyTypeClassTOs, restClient, type, pageRef);\n+        public Builder(final List<AnyTypeClassTO> anyTypeClassTOs, final String type, final PageReference pageRef) {\n+            super(anyTypeClassTOs, new UserRestClient(), type, pageRef);\n             this.filtered = true;\n             this.checkBoxEnabled = false;\n         }"},{"sha":"bf7a8948550981d0cf61b9511da7af0b93737a56","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":25,"deletions":3,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -30,8 +30,10 @@\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n+import org.apache.syncope.common.rest.api.beans.TaskExecQuery;\n import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n@@ -61,10 +63,25 @@ public Set<String> getPushActionsClasses() {\n      * @param kind of task (propagation, sched, sync).\n      * @return number of stored tasks.\n      */\n-    public int count(final String kind) {\n+    public int count(final TaskType kind) {\n         return getService(TaskService.class).\n-                list(new TaskQuery.Builder().type(TaskType.valueOf(kind)).page(1).size(1).build()).\n-                getTotalCount();\n+                list(new TaskQuery.Builder().type(kind).page(1).size(1).build()).getTotalCount();\n+    }\n+\n+    public int countExecutions(final Long taskId) {\n+        return getService(TaskService.class).\n+                listExecutions(new TaskExecQuery.Builder().key(taskId).page(1).size(1).build()).getTotalCount();\n+    }\n+\n+    public List<PropagationTaskTO> listPropagationTasks(\n+            final String resource, final int page, final int size, final SortParam<String> sort) {\n+\n+        return getService(TaskService.class).\n+                <PropagationTaskTO>list(new TaskQuery.Builder().type(TaskType.PROPAGATION).\n+                        resource(resource).\n+                        page(page).size(size).\n+                        orderBy(toOrderBy(sort)).build()).\n+                getResult();\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -77,6 +94,11 @@ public <T extends AbstractTaskTO> List<T> list(\n                 getResult();\n     }\n \n+    public List<TaskExecTO> listExecutions(final Long taskId, final int page, final int size) {\n+        return getService(TaskService.class).\n+                listExecutions(new TaskExecQuery.Builder().key(taskId).page(page).size(size).build()).getResult();\n+    }\n+\n     private TaskType getTaskType(final Class<?> reference) {\n         TaskType result = null;\n         if (PropagationTaskTO.class.equals(reference)) {"},{"sha":"50a8fa8b5a1dada0e7debaebc509030fd101c4ca","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ExecMessage.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecMessage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecMessage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecMessage.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.model.Model;\n+\n+public class ExecMessage extends MultilevelPanel.SecondLevel {\n+\n+    private static final long serialVersionUID = 3163146190501510888L;\n+\n+    public ExecMessage(final String message) {\n+        super();\n+        final Label dialogContent = new Label(\"message\", new Model<String>(message));\n+        add(dialogContent.setOutputMarkupId(true));\n+    }\n+}"},{"sha":"dac1e7d919aac3e1eea73592bbc25f2400980715","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskDetails.java","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.PropagationTaskTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+\n+/**\n+ * Modal window with Task form (to stop and start execution).\n+ */\n+public class PropagationTaskDetails extends TaskDetails<PropagationTaskTO> {\n+\n+    private static final long serialVersionUID = -4110576026663173545L;\n+\n+    public PropagationTaskDetails(final PropagationTaskTO taskTO, final PageReference pageRef) {\n+        super(taskTO, pageRef);\n+    }\n+\n+    @Override\n+    protected List<ITab> buildTabList(final PropagationTaskTO taskTO, final PageReference pageRef) {\n+        final List<ITab> res = new ArrayList<>();\n+        res.add(new AbstractTab(new Model<>(\"profile\")) {\n+\n+            private static final long serialVersionUID = -5861786415855103559L;\n+\n+            @Override\n+            public WebMarkupContainer getPanel(final String panelId) {\n+                return new Profile(panelId, taskTO);\n+            }\n+        });\n+        return res;\n+    }\n+\n+    public class Profile extends Panel {\n+\n+        private static final long serialVersionUID = -1518744792346267268L;\n+\n+        public Profile(final String id, final PropagationTaskTO taskTO) {\n+            super(id);\n+            add(new AjaxTextFieldPanel(\n+                    \"key\", getString(\"key\"), new PropertyModel<String>(taskTO, \"key\")).\n+                    setEnabled(false));\n+\n+            add(new AjaxTextFieldPanel(\n+                    \"anyKey\", getString(\"anyKey\"), new PropertyModel<String>(taskTO, \"anyKey\")).\n+                    setEnabled(false));\n+\n+            add(new AjaxTextFieldPanel(\n+                    \"resource\", getString(\"resource\"), new PropertyModel<String>(taskTO, \"resource\")).\n+                    setEnabled(false));\n+        }\n+    }\n+}"},{"sha":"794d9429cf810b858b7d0469d2dd26cc00b6afe5","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskSearchResultPanel.java","status":"added","additions":287,"deletions":0,"changes":287,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,287 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.rest.TaskRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.PropagationTaskTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.client.console.tasks.PropagationTaskSearchResultPanel.TasksProvider;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+/**\n+ * Tasks page.\n+ */\n+public abstract class PropagationTaskSearchResultPanel extends AbstractSearchResultPanel<\n+        PropagationTaskTO, PropagationTaskTO, TasksProvider<PropagationTaskTO>, TaskRestClient>\n+        implements ModalPanel<PropagationTaskTO> {\n+\n+    private static final long serialVersionUID = 4984337552918213290L;\n+\n+    private final TaskRestClient taskRestClient = new TaskRestClient();\n+\n+    private final String resource;\n+\n+    protected PropagationTaskSearchResultPanel(\n+            final String id,\n+            final PageReference pageRef,\n+            final String resource) {\n+\n+        super(id, pageRef, false);\n+        this.resource = resource;\n+        setShowResultPage(true);\n+        modal.size(Modal.Size.Large);\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected List<IColumn<PropagationTaskTO, String>> getColumns() {\n+        final List<IColumn<PropagationTaskTO, String>> columns = new ArrayList<IColumn<PropagationTaskTO, String>>();\n+\n+        columns.add(new PropertyColumn<PropagationTaskTO, String>(\n+                new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n+\n+        columns.add(new PropertyColumn<PropagationTaskTO, String>(new StringResourceModel(\n+                \"operation\", this, null), \"operation\", \"operation\"));\n+\n+        columns.add(new PropertyColumn<PropagationTaskTO, String>(\n+                new StringResourceModel(\"anyTypeKind\", this, null), \"anyTypeKind\", \"anyTypeKind\"));\n+\n+        columns.add(new PropertyColumn<PropagationTaskTO, String>(\n+                new StringResourceModel(\"anyKey\", this, null), \"anyKey\", \"anyKey\"));\n+\n+        columns.add(new PropertyColumn<PropagationTaskTO, String>(\n+                new StringResourceModel(\"resource\", this, null), \"resource\", \"resource\"));\n+\n+        columns.add(new PropertyColumn<PropagationTaskTO, String>(\n+                new StringResourceModel(\"connObjectKey\", this, null), \"connObjectKey\", \"connObjectKey\"));\n+\n+        columns.add(new DatePropertyColumn<PropagationTaskTO>(\n+                new StringResourceModel(\"start\", this, null), \"start\", \"start\"));\n+\n+        columns.add(new DatePropertyColumn<PropagationTaskTO>(\n+                new StringResourceModel(\"end\", this, null), \"end\", \"end\"));\n+\n+        columns.add(new PropertyColumn<PropagationTaskTO, String>(\n+                new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n+\n+        columns.add(new ActionColumn<PropagationTaskTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = 2054811145491901166L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<PropagationTaskTO> getActions(\n+                    final String componentId, final IModel<PropagationTaskTO> model) {\n+\n+                final PropagationTaskTO taskTO = model.getObject();\n+\n+                final ActionLinksPanel<PropagationTaskTO> panel = ActionLinksPanel.<PropagationTaskTO>builder(pageRef).\n+                        add(new ActionLink<PropagationTaskTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n+                                viewTask(taskTO, target);\n+                            }\n+                        }, ActionLink.ActionType.EDIT, StandardEntitlement.TASK_READ).\n+                        add(new ActionLink<PropagationTaskTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n+                                try {\n+                                    taskRestClient.startExecution(taskTO.getKey(), new Date());\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (SyncopeClientException e) {\n+                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    LOG.error(\"While running propagation task {}\", taskTO.getKey(), e);\n+                                }\n+                                ((BasePage) getPage()).getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.EXECUTE, StandardEntitlement.TASK_EXECUTE).\n+                        add(new ActionLink<PropagationTaskTO>() {\n+\n+                            private static final long serialVersionUID = -3722207913631435501L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target, final PropagationTaskTO modelObject) {\n+                                try {\n+                                    taskRestClient.delete(taskTO.getKey(), PropagationTaskTO.class);\n+                                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    target.add(container);\n+                                } catch (SyncopeClientException e) {\n+                                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                                    LOG.error(\"While deleting propagation task {}\", taskTO.getKey(), e);\n+                                }\n+                                ((BasePage) getPage()).getNotificationPanel().refresh(target);\n+                            }\n+                        }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE).build(componentId);\n+\n+                return panel;\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<PropagationTaskTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<PropagationTaskTO> panel\n+                        = ActionLinksPanel.builder(page.getPageReference());\n+\n+                return panel.add(new ActionLink<PropagationTaskTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final PropagationTaskTO ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected Collection<ActionType> getBulkActions() {\n+        final List<ActionType> bulkActions = new ArrayList<>();\n+        bulkActions.add(ActionType.DELETE);\n+        return bulkActions;\n+    }\n+\n+    @Override\n+    protected TasksProvider<PropagationTaskTO> dataProvider() {\n+        return new PropagationTasksProvider(rows, this.resource);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public PropagationTaskTO getItem() {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    public class PropagationTasksProvider extends TasksProvider<PropagationTaskTO> {\n+\n+        private static final long serialVersionUID = 4725679400450513556L;\n+\n+        private final String resource;\n+\n+        public PropagationTasksProvider(final int paginatorRows, final String resource) {\n+            super(paginatorRows, TaskType.PROPAGATION);\n+            this.resource = resource;\n+        }\n+\n+        @Override\n+        public Iterator<PropagationTaskTO> iterator(final long first, final long count) {\n+            final int page = ((int) first / paginatorRows);\n+\n+            final List<PropagationTaskTO> tasks = taskRestClient.listPropagationTasks(\n+                    resource, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n+\n+            Collections.sort(tasks, getComparator());\n+            return tasks.iterator();\n+        }\n+    }\n+\n+    public abstract class TasksProvider<T extends AbstractTaskTO> extends SearchableDataProvider<T> {\n+\n+        private static final long serialVersionUID = -20112718133295756L;\n+\n+        private final SortableDataProviderComparator<T> comparator;\n+\n+        private final TaskType id;\n+\n+        public TasksProvider(final int paginatorRows, final TaskType id) {\n+\n+            super(paginatorRows);\n+\n+            //Default sorting\n+            setSort(\"key\", SortOrder.DESCENDING);\n+            comparator = new SortableDataProviderComparator<T>(this);\n+            this.id = id;\n+        }\n+\n+        public SortableDataProviderComparator<T> getComparator() {\n+            return comparator;\n+        }\n+\n+        @Override\n+        public long size() {\n+            return taskRestClient.count(id);\n+        }\n+\n+        @Override\n+        public IModel<T> model(final T object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+\n+    protected abstract void viewTask(final PropagationTaskTO taskTO, final AjaxRequestTarget target);\n+}"},{"sha":"542ae3d42fbd5dd1a425243b817705b031aa805e","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTasks.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import static org.apache.syncope.client.console.panels.MultilevelPanel.FIRST_LEVEL_ID;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.panels.ModalPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.PropagationTaskTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+\n+public class PropagationTasks extends Panel implements ModalPanel<Serializable> {\n+\n+    private static final long serialVersionUID = -4013796607157549641L;\n+\n+    public <T extends AnyTO> PropagationTasks(final PageReference pageReference, final String resource) {\n+        super(BaseModal.CONTENT_ID);\n+\n+        final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n+        add(mlp);\n+\n+        mlp.setFirstLevel(new PropagationTaskSearchResultPanel(FIRST_LEVEL_ID, pageReference, resource) {\n+\n+            private static final long serialVersionUID = -2195387360323687302L;\n+\n+            @Override\n+            protected void viewTask(final PropagationTaskTO taskTO, final AjaxRequestTarget target) {\n+                mlp.next(\"task.view\", new PropagationTaskDetails(taskTO, pageReference), target);\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+\n+    @Override\n+    public Serializable getItem() {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n+    }\n+}"},{"sha":"c34c15266e99c9dfea68be93d479a8125b16b6db","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskDetails.java","status":"added","additions":267,"deletions":0,"changes":267,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,267 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.panels.AbstractSearchResultPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel.SecondLevel;\n+import org.apache.syncope.client.console.rest.TaskRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.TaskExecTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+\n+/**\n+ * Modal window with Task form (to stop and start execution).\n+ *\n+ * @param <T> task type.\n+ */\n+public abstract class TaskDetails<T extends AbstractTaskTO> extends MultilevelPanel.SecondLevel {\n+\n+    private static final long serialVersionUID = -4110576026663173545L;\n+\n+    public TaskDetails(final T taskTO, final PageReference pageReference) {\n+        super();\n+\n+        final List<ITab> tabs = buildTabList(taskTO, pageReference);\n+        tabs.add(new AbstractTab(new Model<>(\"executions\")) {\n+\n+            private static final long serialVersionUID = -5861786415855103549L;\n+\n+            @Override\n+            public WebMarkupContainer getPanel(final String panelId) {\n+                final MultilevelPanel mlp = new MultilevelPanel(panelId);\n+                mlp.setFirstLevel(new Executions(MultilevelPanel.FIRST_LEVEL_ID, taskTO, pageReference) {\n+\n+                    private static final long serialVersionUID = 5691719817252887541L;\n+\n+                    @Override\n+                    protected void next(\n+                            final String title, final SecondLevel secondLevel, final AjaxRequestTarget target) {\n+                        mlp.next(title, secondLevel, target);\n+                    }\n+\n+                });\n+                return mlp;\n+            }\n+        });\n+\n+        add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", tabs));\n+    }\n+\n+    protected abstract List<ITab> buildTabList(final T taskTO, final PageReference pageReference);\n+\n+    public abstract class Executions\n+            extends AbstractSearchResultPanel<TaskExecTO, TaskExecTO, TaskExecProvider, TaskRestClient> {\n+\n+        private static final long serialVersionUID = 2039393934721149162L;\n+\n+        private final AbstractTaskTO taskTO;\n+\n+        public Executions(final String id, final AbstractTaskTO taskTO, final PageReference pageRef) {\n+            super(id, pageRef, false);\n+            setOutputMarkupId(true);\n+            this.taskTO = taskTO;\n+            initResultTable();\n+        }\n+\n+        protected abstract void next(final String title, final SecondLevel secondLevel, final AjaxRequestTarget target);\n+\n+        @Override\n+        protected List<IColumn<TaskExecTO, String>> getColumns() {\n+            final List<IColumn<TaskExecTO, String>> columns = new ArrayList<IColumn<TaskExecTO, String>>();\n+\n+            final int paginatorRows = 10;\n+\n+            columns.add(new PropertyColumn<TaskExecTO, String>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+\n+            columns.add(new DatePropertyColumn<TaskExecTO>(new ResourceModel(\"start\"), \"start\", \"start\"));\n+\n+            columns.add(new DatePropertyColumn<TaskExecTO>(new ResourceModel(\"end\"), \"end\", \"end\"));\n+\n+            columns.add(new PropertyColumn<TaskExecTO, String>(new ResourceModel(\"status\"), \"status\", \"status\"));\n+\n+            columns.add(new ActionColumn<TaskExecTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+                private static final long serialVersionUID = -3503023501954863131L;\n+\n+                @Override\n+                public ActionLinksPanel<TaskExecTO> getActions(\n+                        final String componentId, final IModel<TaskExecTO> model) {\n+\n+                    final TaskExecTO taskExecutionTO = model.getObject();\n+\n+                    final ActionLinksPanel.Builder<TaskExecTO> panel = ActionLinksPanel.builder(pageRef);\n+\n+                    panel.\n+                            add(new ActionLink<TaskExecTO>() {\n+\n+                                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                                @Override\n+                                public void onClick(final AjaxRequestTarget target, final TaskExecTO ignore) {\n+                                    next(\"execution.view\",\n+                                            new ExecMessage(model.getObject().getMessage()), target);\n+                                }\n+                            }, ActionLink.ActionType.EDIT, StandardEntitlement.TASK_READ).\n+                            add(new ActionLink<TaskExecTO>() {\n+\n+                                private static final long serialVersionUID = -3722207913631435501L;\n+\n+                                @Override\n+                                public void onClick(final AjaxRequestTarget target, final TaskExecTO ignore) {\n+                                    try {\n+                                        restClient.deleteExecution(taskExecutionTO.getKey());\n+                                        taskTO.getExecutions().remove(taskExecutionTO);\n+                                        info(getString(Constants.OPERATION_SUCCEEDED));\n+                                    } catch (SyncopeClientException scce) {\n+                                        error(scce.getMessage());\n+                                    }\n+\n+                                    BasePage.class.cast(pageRef.getPage()).getNotificationPanel().refresh(target);\n+                                    target.add(Executions.this);\n+                                }\n+                            }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE);\n+\n+                    return panel.build(componentId, model.getObject());\n+                }\n+\n+                @Override\n+                public ActionLinksPanel<Serializable> getHeader(final String componentId) {\n+                    final ActionLinksPanel.Builder<Serializable> panel = ActionLinksPanel.builder(pageRef);\n+\n+                    return panel.add(new ActionLink<Serializable>() {\n+\n+                        private static final long serialVersionUID = -7978723352517770644L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                            if (target != null) {\n+                                final AjaxFallbackDefaultDataTable<TaskExecTO, String> currentTable\n+                                        = new AjaxFallbackDefaultDataTable<TaskExecTO, String>(\n+                                                \"executionsTable\",\n+                                                columns,\n+                                                new TaskExecProvider(taskTO.getKey(), paginatorRows),\n+                                                paginatorRows);\n+                                currentTable.setOutputMarkupId(true);\n+                                target.add(currentTable);\n+                                addOrReplace(currentTable);\n+                            }\n+                        }\n+                    }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);\n+                }\n+            });\n+\n+            return columns;\n+        }\n+\n+        @Override\n+        protected TaskExecProvider dataProvider() {\n+            return new TaskExecProvider(taskTO.getKey(), rows);\n+        }\n+\n+        @Override\n+        protected String paginatorRowsKey() {\n+            return Constants.PREF_TASK_EXECS_PAGINATOR_ROWS;\n+        }\n+\n+        @Override\n+        protected Collection<ActionLink.ActionType> getBulkActions() {\n+            final List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n+            bulkActions.add(ActionLink.ActionType.DELETE);\n+            return bulkActions;\n+        }\n+\n+    }\n+\n+    protected class TaskExecProvider extends SearchableDataProvider<TaskExecTO> {\n+\n+        private static final long serialVersionUID = 8943636537120648961L;\n+\n+        protected TaskRestClient taskRestClient = new TaskRestClient();\n+\n+        private final SortableDataProviderComparator<TaskExecTO> comparator;\n+\n+        private final Long taskId;\n+\n+        public TaskExecProvider(final Long taskId, final int paginatorRows) {\n+            super(paginatorRows);\n+            this.taskId = taskId;\n+            comparator = new SortableDataProviderComparator<TaskExecTO>(this);\n+        }\n+\n+        public SortableDataProviderComparator<TaskExecTO> getComparator() {\n+            return comparator;\n+        }\n+\n+        @Override\n+        public Iterator<TaskExecTO> iterator(final long first, final long count) {\n+            final int page = ((int) first / paginatorRows);\n+            List<TaskExecTO> list = taskRestClient.listExecutions(taskId, (page < 0 ? 0 : page) + 1, paginatorRows);\n+            Collections.sort(list, comparator);\n+            return list.iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return taskRestClient.countExecutions(taskId);\n+        }\n+\n+        @Override\n+        public IModel<TaskExecTO> model(final TaskExecTO taskExecution) {\n+\n+            return new AbstractReadOnlyModel<TaskExecTO>() {\n+\n+                private static final long serialVersionUID = 7485475149862342421L;\n+\n+                @Override\n+                public TaskExecTO getObject() {\n+                    return taskExecution;\n+                }\n+            };\n+        }\n+    }\n+}"},{"sha":"b83fae29529cfc32f4e284ab151215e2df8daa7d","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyNodePanel.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -38,16 +38,14 @@ protected enum Status {\n \n     }\n \n-    private Status status = Status.INACTIVE;\n-\n     public TopologyNodePanel(\n             final String id,\n             final TopologyNode node) {\n \n         super(id);\n \n         final String resourceName = node.getDisplayName().length() > 14\n-                ? node.getDisplayName().subSequence(0, 12) + \"...\"\n+                ? node.getDisplayName().subSequence(0, 10) + \"...\"\n                 : node.getDisplayName();\n \n         add(new Label(\"label\", resourceName));\n@@ -103,8 +101,4 @@ public final Component setMarkupId(final String markupId) {\n     public String getAjaxIndicatorMarkupId() {\n         return \"veil\";\n     }\n-\n-    public void setStatus(final Status status) {\n-        this.status = status;\n-    }\n }"},{"sha":"7c7215ebc7fc510d638f79ed3c7cf2358d5be5f5","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.client.console.panels.TogglePanel;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.syncope.client.console.tasks.PropagationTasks;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.confirmation.ConfirmationModalBehavior;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n@@ -295,8 +296,9 @@ public void onClick(final AjaxRequestTarget target) {\n             private static final long serialVersionUID = 3776750333491622263L;\n \n             @Override\n+            @SuppressWarnings(\"unchecked\")\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(modal);\n+                target.add(modal.setContent(new PropagationTasks(pageRef, node.getKey().toString())));\n                 modal.header(new ResourceModel(\"task.propagation.list\", \"Propagation tasks\"));\n                 modal.show(true);\n             }"},{"sha":"992cfcfb9f25e10623f74641de4c70937ea23be1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/DatePropertyColumn.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import java.util.Date;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+\n+/**\n+ * Format column's value as date string.\n+ */\n+public class DatePropertyColumn<T> extends PropertyColumn<T, String> {\n+\n+    private static final long serialVersionUID = 3527840552172947705L;\n+\n+    public DatePropertyColumn(final IModel<String> displayModel, final String sortProperty,\n+            final String propertyExpression) {\n+\n+        super(displayModel, sortProperty, propertyExpression);\n+    }\n+\n+    @Override\n+    public void populateItem(final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> rowModel) {\n+\n+        IModel<?> date = getDataModel(rowModel);\n+\n+        String convertedDate = \"\";\n+        if (date.getObject() instanceof Date) {\n+            convertedDate = SyncopeConsoleSession.get().getDateFormat().format(date.getObject());\n+        }\n+        item.add(new Label(componentId, convertedDate));\n+    }\n+}"},{"sha":"a9926cc110b3e42876950c87da8892422b73504d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/AbstractModalPanelBuilder.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAbstractModalPanelBuilder.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -47,9 +47,13 @@ public AbstractModalPanelBuilder(final String id, final T defaultItem, final Pag\n \n     public abstract ModalPanel<T> build(final int index, final boolean edit);\n \n-    protected abstract void onCancelInternal(T modelObject);\n+    protected void onCancelInternal(final T modelObject) {\n+    }\n \n-    protected abstract Serializable onApplyInternal(T modelObject);\n+    protected Serializable onApplyInternal(final T modelObject) {\n+        // do nothing\n+        return null;\n+    }\n \n     protected T getOriginalItem() {\n         return item;"},{"sha":"c5026706bdeef4f0bf05d983ab2aee6de4df1f96","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -103,12 +103,7 @@ protected WizardModel buildModelSteps(final AnyHandler<T> modelObject, final Wiz\n         wizardModel.add(new Resources(modelObject.getInnerObject()));\n         return wizardModel;\n     }\n-\n-    @Override\n-    protected void onCancelInternal(final AnyHandler<T> modelObject) {\n-        // do nothing\n-    }\n-\n+    \n     protected AnyWizardBuilder<T> addOptionalDetailsPanel(\n             final AnyHandler<T> modelObject, final WizardModel wizardModel) {\n         if (modelObject.getInnerObject().getKey() != null && modelObject.getInnerObject().getKey() > 0) {"},{"sha":"98574b453085371790e10e557464590736cb778a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":26,"deletions":27,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -70,6 +70,7 @@ public class Ownership extends WizardStep {\n     private final WebMarkupContainer ownerContainer;\n \n     private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n+\n     private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n \n     private final GroupSearchPanel groupSearchPanel;\n@@ -162,7 +163,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         groupSearchResultPanel = GroupSelectionSearchResultPanel.class.cast(new GroupSelectionSearchResultPanel.Builder(\n                 anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n-                groupRestClient,\n                 anyTypeTO.getKey(),\n                 pageRef).build(\"searchResult\"));\n \n@@ -177,7 +177,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         userSearchResultPanel = UserSelectionSearchResultPanel.class.cast(new UserSelectionSearchResultPanel.Builder(\n                 anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n-                userRestClient,\n                 anyTypeTO.getKey(),\n                 pageRef).build(\"searchResult\"));\n \n@@ -239,36 +238,36 @@ public void onClick(final AjaxRequestTarget target) {\n         userSearchFragment.add(userOwnerReset);\n \n         final AjaxTextFieldPanel groupOwner = new AjaxTextFieldPanel(\"groupOwner\", \"groupOwner\",\n-                        new PropertyModel<String>(groupHandler.getInnerObject(), \"groupOwner\") {\n+                new PropertyModel<String>(groupHandler.getInnerObject(), \"groupOwner\") {\n \n-                    private static final long serialVersionUID = -3743432456095828573L;\n+            private static final long serialVersionUID = -3743432456095828573L;\n \n-                    @Override\n-                    public String getObject() {\n-                        if (groupHandler.getInnerObject().getGroupOwner() == null) {\n-                            return StringUtils.EMPTY;\n-                        } else {\n-                            GroupTO groupTO = groupRestClient.read(groupHandler.getInnerObject().getGroupOwner());\n-                            if (groupTO == null) {\n-                                return StringUtils.EMPTY;\n-                            } else {\n-                                return String.format(\"[%d] %s\", groupTO.getKey(), groupTO.getName());\n-                            }\n-                        }\n+            @Override\n+            public String getObject() {\n+                if (groupHandler.getInnerObject().getGroupOwner() == null) {\n+                    return StringUtils.EMPTY;\n+                } else {\n+                    GroupTO groupTO = groupRestClient.read(groupHandler.getInnerObject().getGroupOwner());\n+                    if (groupTO == null) {\n+                        return StringUtils.EMPTY;\n+                    } else {\n+                        return String.format(\"[%d] %s\", groupTO.getKey(), groupTO.getName());\n                     }\n+                }\n+            }\n \n-                    @Override\n-                    public void setObject(final String object) {\n-                        if (StringUtils.isBlank(object)) {\n-                            groupHandler.getInnerObject().setGroupOwner(null);\n-                        } else {\n-                            final Matcher matcher = owner.matcher(object);\n-                            if (matcher.matches()) {\n-                                groupHandler.getInnerObject().setGroupOwner(Long.parseLong(matcher.group(1)));\n-                            }\n-                        }\n+            @Override\n+            public void setObject(final String object) {\n+                if (StringUtils.isBlank(object)) {\n+                    groupHandler.getInnerObject().setGroupOwner(null);\n+                } else {\n+                    final Matcher matcher = owner.matcher(object);\n+                    if (matcher.matches()) {\n+                        groupHandler.getInnerObject().setGroupOwner(Long.parseLong(matcher.group(1)));\n                     }\n-                }, false);\n+                }\n+            }\n+        }, false);\n         groupOwner.setPlaceholder(\"groupOwner\");\n         groupOwner.hideLabel();\n         groupOwner.setReadOnly(true).setOutputMarkupId(true);"},{"sha":"0f435fe590b65336a6b67c6a0a074c4d48026ba0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":11,"deletions":13,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -40,7 +40,6 @@\n import org.apache.syncope.client.console.panels.search.SearchClause;\n import org.apache.syncope.client.console.panels.search.SearchClausePanel;\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n-import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -237,14 +236,14 @@ public Specification() {\n             type.setChoices(availableRels);\n             add(type.setRenderBodyOnly(true));\n \n-            final List<AnyTypeTO> availableTypes =\n-                    ListUtils.select(anyTypeRestClient.list(), new Predicate<AnyTypeTO>() {\n+            final List<AnyTypeTO> availableTypes = ListUtils.select(anyTypeRestClient.list(),\n+                    new Predicate<AnyTypeTO>() {\n \n-                        @Override\n-                        public boolean evaluate(final AnyTypeTO object) {\n-                            return object.getKind() != AnyTypeKind.GROUP && object.getKind() != AnyTypeKind.USER;\n-                        }\n-                    });\n+                @Override\n+                public boolean evaluate(final AnyTypeTO object) {\n+                    return object.getKind() != AnyTypeKind.GROUP && object.getKind() != AnyTypeKind.USER;\n+                }\n+            });\n \n             final AjaxDropDownChoicePanel<AnyTypeTO> rightType = new AjaxDropDownChoicePanel<>(\n                     \"rightType\", \"rightType\", new PropertyModel<AnyTypeTO>(rel, \"rightType\") {\n@@ -338,7 +337,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                         anyObjectSearchResultPanel = new AnyObjectSelectionSearchResultPanel.Builder(\n                                 anyTypeClassRestClient.list(anyType.getClasses()),\n-                                new AnyObjectRestClient(),\n                                 anyType.getKey(),\n                                 pageRef).setFiltered(true).\n                                 setFiql(SyncopeClient.getAnyObjectSearchConditionBuilder(anyType.getKey()).\n@@ -354,14 +352,14 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         @Override\n         public void onEvent(final IEvent<?> event) {\n             if (event.getPayload() instanceof SearchClausePanel.SearchEvent) {\n-                final AjaxRequestTarget target =\n-                        SearchClausePanel.SearchEvent.class.cast(event.getPayload()).getTarget();\n+                final AjaxRequestTarget target = SearchClausePanel.SearchEvent.class.cast(event.getPayload()).\n+                        getTarget();\n                 final String fiql = SearchUtils.buildFIQL(anyObjectSearchPanel.getModel().getObject(),\n                         SyncopeClient.getAnyObjectSearchConditionBuilder(anyObjectSearchPanel.getBackObjectType()));\n                 AnyObjectSearchResultPanel.class.cast(anyObjectSearchResultPanel).search(fiql, target);\n             } else if (event.getPayload() instanceof AnySelectionSearchResultPanel.ItemSelection) {\n-                final AjaxRequestTarget target =\n-                        AnySelectionSearchResultPanel.ItemSelection.class.cast(event.getPayload()).getTarget();\n+                final AjaxRequestTarget target = AnySelectionSearchResultPanel.ItemSelection.class.cast(event.\n+                        getPayload()).getTarget();\n \n                 AnyTO right = AnySelectionSearchResultPanel.ItemSelection.class.cast(event.getPayload()).getSelection();\n                 rel.setRightKey(right.getKey());"},{"sha":"1763ddabd9ef8855e3d6263ee88dcd0b1c9ffb2e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":25,"deletions":47,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -32,6 +32,8 @@\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n import org.apache.syncope.client.console.panels.ListViewPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.panels.MultilevelPanel.SecondLevel;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n@@ -43,26 +45,21 @@\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.html.IHeaderContributor;\n-import org.apache.wicket.markup.html.TransparentWebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class StatusPanel extends Panel implements IHeaderContributor {\n+public class StatusPanel extends Panel {\n+\n+    private static final long serialVersionUID = -4013796607157549641L;\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(StatusPanel.class);\n-\n-    private static final long serialVersionUID = -4064294905566247728L;\n+    protected static final Logger LOG = LoggerFactory.getLogger(StatusPanel.class);\n \n     private final UserRestClient userRestClient = new UserRestClient();\n \n@@ -74,10 +71,6 @@ public class StatusPanel extends Panel implements IHeaderContributor {\n \n     private ListViewPanel<?> listViewPanel;\n \n-    private TransparentWebMarkupContainer container;\n-\n-    private Fragment resourceListFragment;\n-\n     public <T extends AnyTO> StatusPanel(\n             final String id,\n             final T any,\n@@ -116,13 +109,6 @@ private void init(\n             final List<Pair<ConnObjectTO, ConnObjectWrapper>> connObjects,\n             final PageReference pageRef) {\n \n-        container = new TransparentWebMarkupContainer(\"container\");\n-        container.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true);\n-        add(container);\n-\n-        resourceListFragment = new Fragment(\"content\", \"resources\", this);\n-        container.addOrReplace(resourceListFragment.setRenderBodyOnly(true));\n-\n         final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size() + 1);\n         initialStatusBeanMap = new LinkedHashMap<>(connObjects.size() + 1);\n \n@@ -159,6 +145,9 @@ private void init(\n             statusBeans.add(statusBean);\n         }\n \n+        final MultilevelPanel mlp = new MultilevelPanel(\"resources\");\n+        add(mlp);\n+\n         ListViewPanel.Builder<StatusBean> builder = new ListViewPanel.Builder<StatusBean>(StatusBean.class, pageRef) {\n \n             private static final long serialVersionUID = -6809736686861678498L;\n@@ -216,42 +205,20 @@ protected void onComponentTag(final ComponentTag tag) {\n \n             @Override\n             protected boolean statusCondition(final StatusBean bean) {\n-                final Pair<ConnObjectTO, ConnObjectTO> pair =\n-                        getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n+                final Pair<ConnObjectTO, ConnObjectTO> pair\n+                        = getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n \n                 return pair != null && pair.getRight() != null;\n             }\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n-                final Fragment remoteObjectFragment = new Fragment(\"content\", \"remoteObject\", StatusPanel.this);\n-                container.addOrReplace(remoteObjectFragment.setRenderBodyOnly(true));\n-\n-                remoteObjectFragment.add(new AjaxLink<StatusBean>(\"back\") {\n-\n-                    private static final long serialVersionUID = 1L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        container.addOrReplace(resourceListFragment.setRenderBodyOnly(true));\n-                        target.add(container);\n-                    }\n-                });\n-\n-                remoteObjectFragment.add(\n-                        new Label(\"resource\", new ResourceModel(bean.getResourceName(), bean.getResourceName())));\n-\n-                final Pair<ConnObjectTO, ConnObjectTO> res =\n-                        getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n-\n-                remoteObjectFragment.add(new ConnObjectPanel(\"remoteObject\", res == null ? null : res));\n-\n-                target.add(container);\n+                mlp.next(bean.getResourceName(), new RemoteObjectPanel(bean, connObjects), target);\n             }\n         }, ActionLink.ActionType.SEARCH, StandardEntitlement.RESOURCE_GET_CONNOBJECT);\n \n-        listViewPanel = ListViewPanel.class.cast(builder.build(\"resources\"));\n-        resourceListFragment.add(listViewPanel);\n+        listViewPanel = ListViewPanel.class.cast(builder.build(MultilevelPanel.FIRST_LEVEL_ID));\n+        mlp.setFirstLevel(listViewPanel);\n     }\n \n     public void setCheckAvailability(final ListViewPanel.CheckAvailability check) {\n@@ -275,4 +242,15 @@ private Pair<ConnObjectTO, ConnObjectTO> getConnObjectTO(\n \n         return null;\n     }\n+\n+    public class RemoteObjectPanel extends SecondLevel {\n+\n+        private static final long serialVersionUID = 4303365227411467563L;\n+\n+        public RemoteObjectPanel(final StatusBean bean, final List<Pair<ConnObjectTO, ConnObjectWrapper>> connObjects) {\n+            final Pair<ConnObjectTO, ConnObjectTO> res\n+                    = getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n+            add(new ConnObjectPanel(\"remoteObject\", res == null ? null : res));\n+        }\n+    }\n }"},{"sha":"0df8a7c0bdd58b31ad24d4fe784bcea89c19f293","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -237,14 +237,9 @@ protected WizardModel buildModelSteps(final ProvisionTO modelObject, final Wizar\n         return wizardModel;\n     }\n \n-    @Override\n-    protected void onCancelInternal(final ProvisionTO modelObject) {\n-        // do nothing\n-    }\n-\n     @Override\n     protected Serializable onApplyInternal(final ProvisionTO modelObject) {\n         this.resourceTO.getProvisions().add(modelObject);\n-        return null;\n+        return modelObject;\n     }\n }"},{"sha":"2ea9ca101a45fdf16e674ad780fed350eadb287e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/role/RoleWizardBuilder.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Frole%2FRoleWizardBuilder.java?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -94,11 +94,6 @@ protected WizardModel buildModelSteps(final RoleHandler modelObject, final Wizar\n         return wizardModel;\n     }\n \n-    @Override\n-    protected void onCancelInternal(final RoleHandler modelObject) {\n-        // nothing to do\n-    }\n-\n     public static class Details extends WizardStep {\n \n         private static final long serialVersionUID = 5514523040031722255L;"},{"sha":"ba2a8043ad1fb6aab15dce69d8ebc9662f04189e","filename":"client/console/src/main/resources/META-INF/resources/css/topology.css","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2Ftopology.css?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -126,9 +126,15 @@ div#drawing {\n }\n \n div#zoom {\n-  padding : 10px;\n   text-align: right;\n   width: 100%;\n+  border: none;\n+  background: none;\n+  padding-top: 5px;\n+}\n+\n+div#zoom .btn {\n+  padding : 0px;\n }\n \n div#zoom .fa{"},{"sha":"6c75dfbf8cee8ac7a213584d79c100fa53587eac","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/MultilevelPanel.html","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FMultilevelPanel.html?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,42 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <wicket:panel>\n+    <div wicket:id=\"firstLevelContainer\">\n+      <span wicket:id=\"first\">[FIRST]</span>\n+    </div>\n+\n+    <div wicket:id=\"secondLevelContainer\">\n+      <div class=\"col-xs-12\">\n+        <div class=\"box\">\n+          <div class=\"box-header\">\n+            <a wicket:id=\"back\" href=\"#\" alt=\"Back icon\" title=\"Back\"><i class=\"glyphicon glyphicon-arrow-left\"></i></a>\n+            <h3 class=\"box-title\">\n+              <span wicket:id=\"title\">[TITLE]</span>\n+            </h3>\n+          </div>\n+          <div class=\"box-body\">\n+            <span wicket:id=\"second\">[SECOND]</span>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"eb79456963a759554825fafe6661bf07e6425e4c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/ExecMessage.html","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecMessage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecMessage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecMessage.html?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,30 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div id=\"dialog\">\n+        <pre wicket:id=\"message\">\n+            [Task execution's message to show]\n+        </pre>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"fdc632841b8162535dab806a1a11440b1a573440","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDetails$Profile.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.html?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\"><span wicket:id=\"key\">[id]</span></div>\n+      <div class=\"form-group\"><span wicket:id=\"anyKey\">[anyKey]</span></div>\n+      <div class=\"form-group\"><span wicket:id=\"resource\">[resource]</span></div>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"4a36305c24ec1cb80372517da9c1e3fcfc5222d2","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDetails$Profile.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDetails%24Profile.properties?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+anyKey=Object key\n+resource=Resource"},{"sha":"768cea5cf7a66431449ae8b3f2bcd839707a76ba","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskSearchResultPanel.properties","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskSearchResultPanel.properties?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,32 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+profile=Profile\n+executions=Executions\n+title=Task\n+connObjectKey=Remote Object id\n+anyKey=Local Object id\n+resource=Resource\n+start=Start date\n+end=End date\n+status=Status\n+message=Message\n+taskExecutions=Task executions\n+delete=Delete\n+showMessage=Show\n+anyTypeKind=Involved object\n+operation=Operation\n+latestExecStatus=Latest exec status"},{"sha":"ac755e8ce7eefff83a728d3c3fd083c9792c9738","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTasks.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.html?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,24 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <wicket:panel>\n+    <span wicket:id=\"tasks\">[TASKS]</span>\n+  </wicket:panel>\n+</html>"},{"sha":"36947f150dfac59b26386507db5b502913a71f9f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskDetails.html","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.html?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,27 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <body>\n+    <wicket:panel>\n+      <div wicket:id=\"tabbedPanel\"></div>\n+      <wicket:child />\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"e19ad94cfdf33de8e81409ad35f92d387593adb0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskDetails.properties","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDetails.properties?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,26 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+profile=Profile\n+executions=Executions\n+title=Task\n+start=Start date\n+end=End date\n+status=Status\n+message=Message\n+taskExecutions=Task executions\n+delete=Delete\n+showMessage=Show"},{"sha":"3297c344ef0a30a992ca0f2a87d5cf93ed153153","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -129,13 +129,13 @@\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentExecute\">\n-      <a href=\"#\" wicket:id=\"executeLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/execute.png\" alt=\"execute icon\" title=\"Execute\"/></a>\n+      <a href=\"#\" wicket:id=\"executeLink\" class=\"btn\"><i class=\"fa fa-gear\" alt=\"execute icon\" title=\"Execute\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentSelect\">\n       <a href=\"#\" wicket:id=\"selectLink\" class=\"btn\"><i class=\"glyphicon glyphicon-ok\"></i></a>\n     </wicket:fragment>\n-    \n+\n     <wicket:fragment wicket:id=\"fragmentClose\">\n       <a href=\"#\" wicket:id=\"closeLink\" class=\"btn\"><i class=\"fa fa-sign-out\"></i></a>\n     </wicket:fragment>"},{"sha":"d0e51673d0c53f4080a5e856410f7cbdd3bbfc95","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/StatusPanel$RemoteObjectPanel.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel%24RemoteObjectPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel%24RemoteObjectPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel%24RemoteObjectPanel.html?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -0,0 +1,24 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head><title></title></head>\n+  <wicket:panel>\n+    <span wicket:id=\"remoteObject\">[REMOTE OBJCET]</span>\n+  </wicket:panel>\n+</html>"},{"sha":"a411f3f52409105c121ebbaec2ca41892ad67401","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/StatusPanel.html","status":"modified","additions":1,"deletions":23,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/17f53ed8bed18c5abb0d6f63a8b801106872504a/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.html?ref=17f53ed8bed18c5abb0d6f63a8b801106872504a","patch":"@@ -19,28 +19,6 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <head><title></title></head>\n   <wicket:panel>\n-    <div wicket:id=\"container\">\n-      <wicket:container wicket:id=\"content\" />\n-    </div>\n-\n-    <wicket:fragment wicket:id=\"resources\">\n-      <span wicket:id=\"resources\">[RESOURCES]</span>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"remoteObject\">\n-      <div class=\"col-xs-12\">\n-        <div class=\"box\">\n-          <div class=\"box-header\">\n-            <a wicket:id=\"back\" href=\"#\" alt=\"Back icon\" title=\"Back\"><i class=\"glyphicon glyphicon-arrow-left\"></i></a>\n-            <h3 class=\"box-title\">\n-              <span wicket:id=\"resource\">[RESOURCE]</span>\n-            </h3>\n-          </div>\n-          <div class=\"box-body\">\n-            <span wicket:id=\"remoteObject\">[REMTE_OBJECT]</span>\n-          </div>\n-        </div>\n-      </div>\n-    </wicket:fragment>\n+    <span wicket:id=\"resources\">[RESOURCES]</span>\n   </wicket:panel>\n </html>"}]}