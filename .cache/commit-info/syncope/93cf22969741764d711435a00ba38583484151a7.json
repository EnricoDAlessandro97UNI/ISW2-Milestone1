{"sha":"93cf22969741764d711435a00ba38583484151a7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkzY2YyMjk2OTc0MTc2NGQ3MTE0MzVhMDBiYTM4NTgzNDg0MTUxYTc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-07T14:57:34Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-07T14:57:34Z"},"message":"[SYNCOPE-788] Feature provided","tree":{"sha":"2a54dc2cbc75573befa258003f1e9efb2a4c8d1b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2a54dc2cbc75573befa258003f1e9efb2a4c8d1b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/93cf22969741764d711435a00ba38583484151a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93cf22969741764d711435a00ba38583484151a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/93cf22969741764d711435a00ba38583484151a7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93cf22969741764d711435a00ba38583484151a7/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"62aa8f7833fdec66e5f40b1e35deb60c52cefac4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/62aa8f7833fdec66e5f40b1e35deb60c52cefac4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/62aa8f7833fdec66e5f40b1e35deb60c52cefac4"}],"stats":{"total":1038,"additions":583,"deletions":455},"files":[{"sha":"9f6db8928d4b3b8a5e29e9ade596eb807d6cbbf7","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/TaskDataProvider.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTaskDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTaskDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FTaskDataProvider.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -31,18 +31,18 @@\n \n     private final SortableDataProviderComparator<T> comparator;\n \n-    protected final TaskType id;\n+    protected final TaskType taskType;\n \n     private final TaskRestClient taskRestClient;\n \n-    public TaskDataProvider(final int paginatorRows, final TaskType id, final TaskRestClient taskRestClient) {\n+    public TaskDataProvider(final int paginatorRows, final TaskType taskType, final TaskRestClient taskRestClient) {\n         super(paginatorRows);\n         this.taskRestClient = taskRestClient;\n \n         //Default sorting\n         setSort(\"key\", SortOrder.DESCENDING);\n-        comparator = new SortableDataProviderComparator<T>(this);\n-        this.id = id;\n+        comparator = new SortableDataProviderComparator<>(this);\n+        this.taskType = taskType;\n     }\n \n     public SortableDataProviderComparator<T> getComparator() {\n@@ -51,7 +51,7 @@ public SortableDataProviderComparator<T> getComparator() {\n \n     @Override\n     public long size() {\n-        return taskRestClient.count(id);\n+        return taskRestClient.count(taskType);\n     }\n \n     @Override"},{"sha":"017659be2e639dfd06739ee65f502c5bb088551a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -215,7 +215,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     target.add(bulkModal.setContent(new BulkActionModal<>(\n                             bulkModal,\n                             builder.pageRef,\n-                            new ArrayList<T>(group.getModelObject()),\n+                            new ArrayList<>(group.getModelObject()),\n                             // serialization problem with sublist only\n                             new ArrayList<>(builder.columns.subList(1, builder.columns.size() - 1)),\n                             builder.bulkActions,\n@@ -224,14 +224,17 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                     bulkModal.show(true);\n                 } else {\n-                    builder.multiLevelPanel.next(\"bulk.action\", new BulkContent<>(\n-                            builder.baseModal,\n-                            new ArrayList<T>(group.getModelObject()),\n-                            // serialization problem with sublist only\n-                            new ArrayList<>(builder.columns.subList(1, builder.columns.size() - 1)),\n-                            builder.bulkActions,\n-                            builder.bulkActionExecutor,\n-                            builder.itemKeyField), target);\n+                    builder.multiLevelPanel.next(\n+                            getString(\"bulk.action\"),\n+                            new BulkContent<>(\n+                                    builder.baseModal,\n+                                    new ArrayList<>(group.getModelObject()),\n+                                    // serialization problem with sublist only\n+                                    new ArrayList<>(builder.columns.subList(1, builder.columns.size() - 1)),\n+                                    builder.bulkActions,\n+                                    builder.bulkActionExecutor,\n+                                    builder.itemKeyField),\n+                            target);\n                 }\n                 group.setModelObject(Collections.<T>emptyList());\n                 target.add(group);"},{"sha":"7c67ab01ab394cf2dc6f12325e710c38fa5b878b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":59,"deletions":46,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -30,9 +30,11 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.AnyObjectRestClient;\n import org.apache.syncope.client.console.status.StatusModal;\n+import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n@@ -41,6 +43,7 @@\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n@@ -52,6 +55,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n public class AnyObjectDirectoryPanel extends AnyDirectoryPanel<AnyObjectTO> {\n@@ -138,50 +142,59 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n \n                         altDefaultModal.show(true);\n                     }\n-                }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).\n-                        add(new ActionLink<AnyObjectTO>() {\n-\n-                            private static final long serialVersionUID = -7978723352517770644L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                                send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(\n-                                                new AnyHandler<>(new AnyObjectRestClient().read(model.getObject().\n-                                                        getKey())),\n-                                                target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, String.format(\"%s_%s\", type, AnyEntitlement.READ)).\n-                        add(new ActionLink<AnyObjectTO>() {\n-\n-                            private static final long serialVersionUID = -7978723352517770645L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                                final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n-                                clone.setKey(0L);\n-                                send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.NewItemActionEvent<>(new AnyHandler<>(clone), target));\n-                            }\n-                        }, ActionLink.ActionType.CLONE, StandardEntitlement.USER_CREATE).\n-                        add(new ActionLink<AnyObjectTO>() {\n-\n-                            private static final long serialVersionUID = -7978723352517770646L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n-                                try {\n-                                    restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n-                                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                                    error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, String.format(\"%s_%s\", type, AnyEntitlement.DELETE));\n+                }, ActionType.MANAGE_RESOURCES, AnyEntitlement.READ.getFor(type)).add(new ActionLink<AnyObjectTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                        send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<>(\n+                                        new AnyHandler<>(new AnyObjectRestClient().read(model.getObject().\n+                                                getKey())),\n+                                        target));\n+                    }\n+                }, ActionType.EDIT, AnyEntitlement.READ.getFor(type)).add(new ActionLink<AnyObjectTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770645L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                        final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n+                        clone.setKey(0L);\n+                        send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.NewItemActionEvent<>(new AnyHandler<>(clone), target));\n+                    }\n+                }, ActionType.CLONE, AnyEntitlement.CREATE.getFor(type)).add(new ActionLink<AnyObjectTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                        target.add(utilityModal.setContent(new AnyPropagationTasks(\n+                                utilityModal, AnyTypeKind.ANY_OBJECT, model.getObject().getKey(), pageRef)));\n+\n+                        utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n+                        utilityModal.show(true);\n+                    }\n+                }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<AnyObjectTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770646L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n+                        try {\n+                            restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (SyncopeClientException e) {\n+                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                            error(StringUtils.isBlank(e.getMessage())\n+                                    ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                    }\n+                }, ActionType.DELETE, AnyEntitlement.DELETE.getFor(type));\n \n                 return panel.build(componentId, model.getObject());\n             }\n@@ -202,7 +215,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                         displayAttributeModal.show(true);\n                     }\n-                }, ActionLink.ActionType.CHANGE_VIEW, String.format(\"%s_%s\", type, AnyEntitlement.READ)).add(\n+                }, ActionType.CHANGE_VIEW, AnyEntitlement.READ.getFor(type)).add(\n                         new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n@@ -213,7 +226,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, String.format(\"%s_%s\", type, AnyEntitlement.SEARCH));\n+                }, ActionType.RELOAD, AnyEntitlement.SEARCH.getFor(type));\n \n                 return panel.build(componentId);\n             }"},{"sha":"3ff36bde0a4929a353d534f6d029819b171904ca","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -178,8 +178,8 @@ private AbstractSearchPanel getSearchPanel(final String id) {\n             case ANY_OBJECT:\n                 panel = new AnyObjectSearchPanel.Builder(anyTypeTO.getKey(),\n                         new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(id);\n-                MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,\n-                        String.format(\"%s_%s\", anyTypeTO.getKey(), AnyEntitlement.LIST));\n+                MetaDataRoleAuthorizationStrategy.authorize(\n+                        panel, WebPage.RENDER, AnyEntitlement.LIST.getFor(anyTypeTO.getKey()));\n                 break;\n             default:\n                 panel = null;\n@@ -227,8 +227,8 @@ private Panel getDirectoryPanel(final String id) {\n                         pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n                         setFiql(fiql).addNewItemPanelBuilder(new AnyObjectWizardBuilder(\n                         BaseModal.CONTENT_ID, anyObjectTO, anyTypeTO.getClasses(), pageRef)).build(id);\n-                MetaDataRoleAuthorizationStrategy.authorize(panel, WebPage.RENDER,\n-                        String.format(\"%s_%s\", anyObjectTO.getType(), AnyEntitlement.LIST));\n+                MetaDataRoleAuthorizationStrategy.authorize(\n+                        panel, WebPage.RENDER, AnyEntitlement.LIST.getFor(anyTypeTO.getKey()));\n                 break;\n             default:\n                 panel = new LabelPanel(id, null);"},{"sha":"b2b3b7fca91aaad4bd56a06e79b55b9a93e5d47b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -146,9 +146,11 @@ protected DirectoryPanel(final String id, final Builder<T, W, E> builder, final\n         setWindowClosedReloadCallback(modal);\n         setWindowClosedReloadCallback(altDefaultModal);\n         setWindowClosedReloadCallback(displayAttributeModal);\n+        setWindowClosedReloadCallback(utilityModal);\n \n         altDefaultModal.size(Modal.Size.Medium);\n         displayAttributeModal.size(Modal.Size.Medium);\n+        utilityModal.size(Modal.Size.Large);\n     }\n \n     protected abstract DP dataProvider();\n@@ -234,7 +236,6 @@ private void updateResultTable(final boolean create, final int rows) {\n      * @param resultTableBuilder result table builder.\n      */\n     protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<T, String> resultTableBuilder) {\n-\n     }\n \n     public DirectoryPanel<T, W, DP, E> disableCheckBoxes() {"},{"sha":"0d1b48916774b8a2311831946fa2952f7dfdbc58","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":76,"deletions":64,"changes":140,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -30,10 +30,12 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.status.StatusModal;\n+import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n@@ -42,6 +44,7 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n@@ -53,6 +56,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n public class GroupDirectoryPanel extends AnyDirectoryPanel<GroupTO> {\n@@ -114,68 +118,76 @@ protected List<IColumn<GroupTO, String>> getColumns() {\n             public ActionLinksPanel<GroupTO> getActions(final String componentId, final IModel<GroupTO> model) {\n                 final ActionLinksPanel.Builder<GroupTO> panel = ActionLinksPanel.builder();\n \n-                panel.\n-                        add(new ActionLink<GroupTO>() {\n-\n-                            private static final long serialVersionUID = -7978723352517770645L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                                final IModel<AnyHandler<GroupTO>> formModel =\n-                                        new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n-                                altDefaultModal.setFormModel(formModel);\n-\n-                                target.add(altDefaultModal.setContent(new StatusModal<>(\n-                                        altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n-\n-                                altDefaultModal.header(new Model<>(\n-                                        getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n-\n-                                altDefaultModal.show(true);\n-                            }\n-                        }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).\n-                        add(new ActionLink<GroupTO>() {\n-\n-                            private static final long serialVersionUID = -7978723352517770644L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                                send(GroupDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(\n-                                                new GroupHandler(new GroupRestClient().read(model.getObject().\n-                                                        getKey())), target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.GROUP_READ).\n-                        add(new ActionLink<GroupTO>() {\n-\n-                            private static final long serialVersionUID = -7978723352517770644L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                                final GroupTO clone = SerializationUtils.clone(model.getObject());\n-                                clone.setKey(0L);\n-                                send(GroupDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.NewItemActionEvent<>(new GroupHandler(clone), target));\n-                            }\n-                        }, ActionLink.ActionType.CLONE, StandardEntitlement.GROUP_CREATE).\n-                        add(new ActionLink<GroupTO>() {\n-\n-                            private static final long serialVersionUID = -7978723352517770644L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n-                                try {\n-                                    restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n-                                    info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    target.add(container);\n-                                } catch (SyncopeClientException e) {\n-                                    LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n-                                    error(StringUtils.isBlank(e.getMessage())\n-                                            ? e.getClass().getName() : e.getMessage());\n-                                }\n-                                SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n-                            }\n-                        }, ActionLink.ActionType.DELETE, StandardEntitlement.GROUP_DELETE);\n+                panel.add(new ActionLink<GroupTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770645L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                        final IModel<AnyHandler<GroupTO>> formModel =\n+                                new CompoundPropertyModel<>(new AnyHandler<>(model.getObject()));\n+                        altDefaultModal.setFormModel(formModel);\n+\n+                        target.add(altDefaultModal.setContent(new StatusModal<>(\n+                                altDefaultModal, pageRef, formModel.getObject().getInnerObject(), false)));\n+\n+                        altDefaultModal.header(new Model<>(\n+                                getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n+\n+                        altDefaultModal.show(true);\n+                    }\n+                }, ActionType.MANAGE_RESOURCES, StandardEntitlement.GROUP_READ).add(new ActionLink<GroupTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                        send(GroupDirectoryPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<>(\n+                                        new GroupHandler(new GroupRestClient().read(model.getObject().\n+                                                getKey())), target));\n+                    }\n+                }, ActionType.EDIT, StandardEntitlement.GROUP_READ).add(new ActionLink<GroupTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                        final GroupTO clone = SerializationUtils.clone(model.getObject());\n+                        clone.setKey(0L);\n+                        send(GroupDirectoryPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.NewItemActionEvent<>(new GroupHandler(clone), target));\n+                    }\n+                }, ActionType.CLONE, StandardEntitlement.GROUP_CREATE).add(new ActionLink<GroupTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                        target.add(utilityModal.setContent(new AnyPropagationTasks(\n+                                utilityModal, AnyTypeKind.GROUP, model.getObject().getKey(), pageRef)));\n+\n+                        utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n+                        utilityModal.show(true);\n+                    }\n+                }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<GroupTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n+                        try {\n+                            restClient.delete(model.getObject().getETagValue(), model.getObject().getKey());\n+                            info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (SyncopeClientException e) {\n+                            LOG.error(\"While deleting object {}\", model.getObject().getKey(), e);\n+                            error(StringUtils.isBlank(e.getMessage())\n+                                    ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n+                    }\n+                }, ActionType.DELETE, StandardEntitlement.GROUP_DELETE);\n \n                 return panel.build(componentId);\n             }\n@@ -196,7 +208,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         displayAttributeModal.header(new ResourceModel(\"any.attr.display\"));\n                         displayAttributeModal.show(true);\n                     }\n-                }, ActionLink.ActionType.CHANGE_VIEW, StandardEntitlement.GROUP_READ).add(\n+                }, ActionType.CHANGE_VIEW, StandardEntitlement.GROUP_READ).add(\n                         new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n@@ -207,7 +219,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.GROUP_SEARCH).build(componentId);\n+                }, ActionType.RELOAD, StandardEntitlement.GROUP_SEARCH).build(componentId);\n             }\n         });\n "},{"sha":"e8527640db586a9782fb51f8c8623a327578749e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":57,"deletions":40,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -31,19 +31,22 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.status.StatusModal;\n+import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n@@ -55,6 +58,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n import org.springframework.util.ReflectionUtils;\n \n public class UserDirectoryPanel extends AnyDirectoryPanel<UserTO> {\n@@ -71,13 +75,13 @@ protected String paginatorRowsKey() {\n     }\n \n     @Override\n-    protected Collection<ActionLink.ActionType> getBulkActions() {\n-        final List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n+    protected Collection<ActionType> getBulkActions() {\n+        List<ActionType> bulkActions = new ArrayList<>();\n \n-        bulkActions.add(ActionLink.ActionType.MUSTCHANGEPASSWORD);\n-        bulkActions.add(ActionLink.ActionType.DELETE);\n-        bulkActions.add(ActionLink.ActionType.SUSPEND);\n-        bulkActions.add(ActionLink.ActionType.REACTIVATE);\n+        bulkActions.add(ActionType.MUSTCHANGEPASSWORD);\n+        bulkActions.add(ActionType.DELETE);\n+        bulkActions.add(ActionType.SUSPEND);\n+        bulkActions.add(ActionType.REACTIVATE);\n \n         return bulkActions;\n     }\n@@ -141,8 +145,10 @@ public ActionLinksPanel<UserTO> getActions(final String componentId, final IMode\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         try {\n-                            UserRestClient.class.cast(restClient).\n-                                    mustChangePassword(model.getObject().getETagValue(), model.getObject().getKey());\n+                            UserRestClient.class.cast(restClient).mustChangePassword(\n+                                    model.getObject().getETagValue(),\n+                                    !model.getObject().isMustChangePassword(),\n+                                    model.getObject().getKey());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                             target.add(container);\n                         } catch (SyncopeClientException e) {\n@@ -151,8 +157,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.MUSTCHANGEPASSWORD, StandardEntitlement.USER_UPDATE).add(\n-                        new ActionLink<UserTO>() {\n+                }, ActionType.MUSTCHANGEPASSWORD, StandardEntitlement.USER_UPDATE).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -171,49 +176,61 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n                         altDefaultModal.show(true);\n                     }\n-                }, ActionLink.ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).add(\n-                                new ActionLink<UserTO>() {\n+                }, ActionType.MANAGE_RESOURCES, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n \n-                            private static final long serialVersionUID = -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                                final IModel<AnyHandler<UserTO>> formModel = new CompoundPropertyModel<>(\n-                                        new AnyHandler<>(model.\n-                                                getObject()));\n-                                altDefaultModal.setFormModel(formModel);\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                        final IModel<AnyHandler<UserTO>> formModel = new CompoundPropertyModel<>(\n+                                new AnyHandler<>(model.\n+                                        getObject()));\n+                        altDefaultModal.setFormModel(formModel);\n \n-                                target.add(altDefaultModal.setContent(new StatusModal<>(\n-                                        altDefaultModal, pageRef, formModel.getObject().getInnerObject(), true)));\n+                        target.add(altDefaultModal.setContent(new StatusModal<>(\n+                                altDefaultModal, pageRef, formModel.getObject().getInnerObject(), true)));\n \n-                                altDefaultModal.header(new Model<>(\n-                                        getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n+                        altDefaultModal.header(new Model<>(\n+                                getString(\"any.edit\", new Model<>(new AnyHandler<>(model.getObject())))));\n \n-                                altDefaultModal.show(true);\n-                            }\n-                        }, ActionLink.ActionType.ENABLE, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n+                        altDefaultModal.show(true);\n+                    }\n+                }, ActionType.ENABLE, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n \n-                            private static final long serialVersionUID = -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                                send(UserDirectoryPanel.this, Broadcast.EXACT,\n-                                        new AjaxWizard.EditItemActionEvent<>(\n-                                                new AnyHandler<>(new UserRestClient().read(model.getObject().getKey())),\n-                                                target));\n-                            }\n-                        }, ActionLink.ActionType.EDIT, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                        send(UserDirectoryPanel.this, Broadcast.EXACT,\n+                                new AjaxWizard.EditItemActionEvent<>(\n+                                        new AnyHandler<>(new UserRestClient().read(model.getObject().getKey())),\n+                                        target));\n+                    }\n+                }, ActionType.EDIT, StandardEntitlement.USER_READ).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n-                        final UserTO clone = SerializationUtils.clone(model.getObject());\n+                        UserTO clone = SerializationUtils.clone(model.getObject());\n                         clone.setKey(0L);\n+                        clone.setUsername(model.getObject().getUsername() + \"_clone\");\n                         send(UserDirectoryPanel.this, Broadcast.EXACT,\n                                 new AjaxWizard.NewItemActionEvent<>(new AnyHandler<>(clone), target));\n                     }\n-                }, ActionLink.ActionType.CLONE, StandardEntitlement.USER_CREATE).add(new ActionLink<UserTO>() {\n+                }, ActionType.CLONE, StandardEntitlement.USER_CREATE).add(new ActionLink<UserTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n+                        target.add(utilityModal.setContent(new AnyPropagationTasks(\n+                                utilityModal, AnyTypeKind.USER, model.getObject().getKey(), pageRef)));\n+\n+                        utilityModal.header(new StringResourceModel(\"any.propagation.tasks\", model));\n+                        utilityModal.show(true);\n+                    }\n+                }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST).add(new ActionLink<UserTO>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -229,7 +246,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         }\n                         SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n                     }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.USER_DELETE);\n+                }, ActionType.DELETE, StandardEntitlement.USER_DELETE);\n \n                 return panel.build(componentId, model.getObject());\n             }\n@@ -251,7 +268,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         displayAttributeModal.addSumbitButton();\n                         displayAttributeModal.show(true);\n                     }\n-                }, ActionLink.ActionType.CHANGE_VIEW, StandardEntitlement.USER_READ).add(\n+                }, ActionType.CHANGE_VIEW, StandardEntitlement.USER_READ).add(\n                         new ActionLink<Serializable>() {\n \n                     private static final long serialVersionUID = -7978723352517770644L;\n@@ -262,7 +279,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             target.add(container);\n                         }\n                     }\n-                }, ActionLink.ActionType.RELOAD, StandardEntitlement.USER_SEARCH).build(componentId);\n+                }, ActionType.RELOAD, StandardEntitlement.USER_SEARCH).build(componentId);\n             }\n         });\n "},{"sha":"7e1db8929ef589a549e6e6c1916cc88f9f0cc50b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnySelectionDirectoryPanel.java","status":"modified","additions":29,"deletions":30,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n@@ -122,7 +123,7 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n                         send(AnySelectionDirectoryPanel.this,\n                                 Broadcast.BUBBLE, new ItemSelection<>(target, model.getObject()));\n                     }\n-                }, ActionLink.ActionType.SELECT, String.format(\"%s_%s\", type, AnyEntitlement.READ));\n+                }, ActionType.SELECT, AnyEntitlement.READ.getFor(type));\n \n                 return panel.build(componentId, model.getObject());\n             }\n@@ -131,33 +132,31 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n             public ActionLinksPanel<T> getHeader(final String componentId) {\n                 final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.builder();\n \n-                return panel.\n-                        add(new ActionLink<T>() {\n-\n-                            private static final long serialVersionUID = -7978723352517770644L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                                // still missing content\n-                                target.add(altDefaultModal.setContent(new AnyObjectDisplayAttributesModalPanel<>(\n-                                        altDefaultModal, page.getPageReference(), pSchemaNames, dSchemaNames, type)));\n-\n-                                altDefaultModal.addSumbitButton();\n-                                altDefaultModal.header(new ResourceModel(\"any.attr.display\"));\n-                                altDefaultModal.show(true);\n-                            }\n-                        }, ActionLink.ActionType.CHANGE_VIEW, String.format(\"%s_%s\", type, AnyEntitlement.READ)).\n-                        add(new ActionLink<T>() {\n-\n-                            private static final long serialVersionUID = -7978723352517770644L;\n-\n-                            @Override\n-                            public void onClick(final AjaxRequestTarget target, final T ignore) {\n-                                if (target != null) {\n-                                    target.add(container);\n-                                }\n-                            }\n-                        }, ActionLink.ActionType.RELOAD, String.format(\"%s_%s\", type, AnyEntitlement.SEARCH)).\n+                return panel.add(new ActionLink<T>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                        // still missing content\n+                        target.add(altDefaultModal.setContent(new AnyObjectDisplayAttributesModalPanel<>(\n+                                altDefaultModal, page.getPageReference(), pSchemaNames, dSchemaNames, type)));\n+\n+                        altDefaultModal.addSumbitButton();\n+                        altDefaultModal.header(new ResourceModel(\"any.attr.display\"));\n+                        altDefaultModal.show(true);\n+                    }\n+                }, ActionType.CHANGE_VIEW, AnyEntitlement.READ.getFor(type)).add(new ActionLink<T>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final T ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionType.RELOAD, AnyEntitlement.SEARCH.getFor(type)).\n                         build(componentId);\n             }\n         });\n@@ -166,8 +165,8 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n     }\n \n     @Override\n-    protected Collection<ActionLink.ActionType> getBulkActions() {\n-        return Collections.<ActionLink.ActionType>emptyList();\n+    protected Collection<ActionType> getBulkActions() {\n+        return Collections.<ActionType>emptyList();\n     }\n \n     protected abstract String[] getDisplayAttributes();"},{"sha":"9c2b86b71e20f75492acbb217d4ed62bd93db38a","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -21,7 +21,6 @@\n import java.util.Date;\n import java.util.List;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n@@ -69,7 +68,7 @@ public void deleteExecution(final long reportExecKey) {\n \n     @Override\n     public List<ExecTO> listRecentExecutions(final int max) {\n-        return SyncopeConsoleSession.get().getService(ReportService.class).listRecentExecutions(max);\n+        return getService(ReportService.class).listRecentExecutions(max);\n     }\n \n     public Response exportExecutionResult(final long executionId, final ReportExecExportFormat fmt) {"},{"sha":"e21b63b671284c5323c5b60b2c07ff72b94f8f0a","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":27,"deletions":14,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -20,7 +20,6 @@\n \n import java.util.Date;\n import java.util.List;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -30,6 +29,7 @@\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.beans.ExecuteQuery;\n import org.apache.syncope.common.rest.api.beans.TaskExecQuery;\n@@ -44,25 +44,26 @@ public class TaskRestClient extends BaseRestClient implements ExecutionRestClien\n \n     private static final long serialVersionUID = 6284485820911028843L;\n \n-    /**\n-     * Return the number of tasks.\n-     *\n-     * @param kind of task (propagation, sched, sync).\n-     * @return number of stored tasks.\n-     */\n     public int count(final TaskType kind) {\n-        return getService(TaskService.class).\n-                list(new TaskQuery.Builder().type(kind).page(1).size(1).build()).getTotalCount();\n+        return getService(TaskService.class).list(\n+                new TaskQuery.Builder().type(kind).page(1).size(1).build()).getTotalCount();\n     }\n \n     public int count(final String resource, final TaskType kind) {\n-        return getService(TaskService.class).\n-                list(new TaskQuery.Builder().resource(resource).type(kind).page(1).size(1).build()).getTotalCount();\n+        return getService(TaskService.class).list(\n+                new TaskQuery.Builder().resource(resource).type(kind).page(1).size(1).\n+                build()).getTotalCount();\n+    }\n+\n+    public int count(final AnyTypeKind anyTypeKind, final Long anyTypeKey, final TaskType kind) {\n+        return getService(TaskService.class).list(\n+                new TaskQuery.Builder().anyTypeKind(anyTypeKind).anyTypeKey(anyTypeKey).type(kind).page(1).size(1).\n+                build()).getTotalCount();\n     }\n \n-    public int countExecutions(final Long taskId) {\n+    public int countExecutions(final Long taskKey) {\n         return getService(TaskService.class).\n-                listExecutions(new TaskExecQuery.Builder().key(taskId).page(1).size(1).build()).getTotalCount();\n+                listExecutions(new TaskExecQuery.Builder().key(taskKey).page(1).size(1).build()).getTotalCount();\n     }\n \n     public List<PropagationTaskTO> listPropagationTasks(\n@@ -76,6 +77,18 @@ public List<PropagationTaskTO> listPropagationTasks(\n                 getResult();\n     }\n \n+    public List<PropagationTaskTO> listPropagationTasks(\n+            final AnyTypeKind anyTypeKind, final Long anyTypeKey,\n+            final int page, final int size, final SortParam<String> sort) {\n+\n+        return getService(TaskService.class).\n+                <PropagationTaskTO>list(new TaskQuery.Builder().type(TaskType.PROPAGATION).\n+                        anyTypeKind(anyTypeKind).anyTypeKey(anyTypeKey).\n+                        page(page).size(size).\n+                        orderBy(toOrderBy(sort)).build()).\n+                getResult();\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     public <T extends AbstractTaskTO> List<T> list(\n             final Class<T> reference, final int page, final int size, final SortParam<String> sort) {\n@@ -154,7 +167,7 @@ public void deleteExecution(final long taskExecId) {\n \n     @Override\n     public List<ExecTO> listRecentExecutions(final int max) {\n-        return SyncopeConsoleSession.get().getService(TaskService.class).listRecentExecutions(max);\n+        return getService(TaskService.class).listRecentExecutions(max);\n     }\n \n     public void create(final SchedTaskTO taskTO) {"},{"sha":"95069a2623923dc9e17bd724825d5d5a4506514c","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -116,10 +116,10 @@ public ConnObjectTO readConnObject(final String resourceName, final Long id) {\n         return getService(ResourceService.class).readConnObject(resourceName, AnyTypeKind.USER.name(), id);\n     }\n \n-    public ProvisioningResult<UserTO> mustChangePassword(final String etag, final Long key) {\n+    public ProvisioningResult<UserTO> mustChangePassword(final String etag, final boolean value, final Long key) {\n         final UserPatch userPatch = new UserPatch();\n         userPatch.setKey(key);\n-        userPatch.setMustChangePassword(new BooleanReplacePatchItem.Builder().value(true).build());\n+        userPatch.setMustChangePassword(new BooleanReplacePatchItem.Builder().value(value).build());\n         return update(etag, userPatch);\n     }\n "},{"sha":"e59c8f2aa97c12fab7fa76cea62570e4c19707c5","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/AbstractPropagationTasks.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAbstractPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAbstractPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAbstractPropagationTasks.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+public abstract class AbstractPropagationTasks extends AbstractTasks {\n+\n+    private static final long serialVersionUID = -2138947447603621523L;\n+\n+    public AbstractPropagationTasks(final String id) {\n+        super(id);\n+    }\n+\n+}"},{"sha":"c8ea264bca7c18ef829be0b1695fbc70f1610f5c","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/AnyPropagationTaskDirectoryPanel.java","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.PropagationTaskTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.PageReference;\n+\n+public abstract class AnyPropagationTaskDirectoryPanel extends PropagationTaskDirectoryPanel {\n+\n+    private static final long serialVersionUID = -6784307338127527803L;\n+\n+    private final AnyTypeKind anyTypeKind;\n+\n+    private final Long anyTypeKey;\n+\n+    protected AnyPropagationTaskDirectoryPanel(\n+            final BaseModal<?> baseModal,\n+            final MultilevelPanel multiLevelPanelRef,\n+            final AnyTypeKind anyTypeKind,\n+            final Long anyTypeKey,\n+            final PageReference pageRef) {\n+\n+        super(baseModal, multiLevelPanelRef, null, pageRef);\n+        this.anyTypeKind = anyTypeKind;\n+        this.anyTypeKey = anyTypeKey;\n+    }\n+\n+    @Override\n+    protected PropagationTasksProvider dataProvider() {\n+        return new AnyPropagationTasksProvider(rows);\n+    }\n+\n+    protected class AnyPropagationTasksProvider extends PropagationTasksProvider {\n+\n+        private static final long serialVersionUID = 8975514657807398110L;\n+\n+        public AnyPropagationTasksProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+        }\n+\n+        @Override\n+        public long size() {\n+            return restClient.count(anyTypeKind, anyTypeKey, taskType);\n+        }\n+\n+        @Override\n+        public Iterator<PropagationTaskTO> iterator(final long first, final long count) {\n+            final int page = ((int) first / paginatorRows);\n+\n+            final List<PropagationTaskTO> tasks = restClient.listPropagationTasks(\n+                    anyTypeKind, anyTypeKey, (page < 0 ? 0 : page) + 1, paginatorRows, getSort());\n+\n+            Collections.sort(tasks, getComparator());\n+            return tasks.iterator();\n+        }\n+    }\n+}"},{"sha":"d59ee81d5113b58a8fbc4d3743fbb7a4d8b606e8","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/AnyPropagationTasks.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.tasks;\n+\n+import org.apache.syncope.client.console.panels.MultilevelPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.PropagationTaskTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class AnyPropagationTasks extends AbstractPropagationTasks {\n+\n+    private static final long serialVersionUID = -4013796607157549641L;\n+\n+    public <T extends AnyTO> AnyPropagationTasks(\n+            final BaseModal<?> baseModal,\n+            final AnyTypeKind anyTypeKind,\n+            final Long anyTypeKey,\n+            final PageReference pageReference) {\n+\n+        super(BaseModal.CONTENT_ID);\n+\n+        final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n+        mlp.setFirstLevel(new AnyPropagationTaskDirectoryPanel(baseModal, mlp, anyTypeKind, anyTypeKey, pageReference) {\n+\n+            private static final long serialVersionUID = -2195387360323687302L;\n+\n+            @Override\n+            protected void viewTask(final PropagationTaskTO taskTO, final AjaxRequestTarget target) {\n+                mlp.next(\n+                        new StringResourceModel(\"task.view\", this, new Model<>(taskTO)).getObject(),\n+                        new TaskExecutionDetails<>(baseModal, taskTO, pageReference),\n+                        target);\n+            }\n+        });\n+        add(mlp);\n+    }\n+}"},{"sha":"eff862091fa8f4c595911e0fd753d2ea19fb591a","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -192,23 +192,20 @@ protected Collection<ActionType> getBulkActions() {\n \n     @Override\n     protected PropagationTasksProvider dataProvider() {\n-        return new PropagationTasksProvider(rows, this.resource);\n+        return new PropagationTasksProvider(rows);\n     }\n \n     @Override\n     protected String paginatorRowsKey() {\n         return Constants.PREF_PROPAGATION_TASKS_PAGINATOR_ROWS;\n     }\n \n-    public class PropagationTasksProvider extends TaskDataProvider<PropagationTaskTO> {\n+    protected class PropagationTasksProvider extends TaskDataProvider<PropagationTaskTO> {\n \n         private static final long serialVersionUID = 4725679400450513556L;\n \n-        private final String resource;\n-\n-        public PropagationTasksProvider(final int paginatorRows, final String resource) {\n+        public PropagationTasksProvider(final int paginatorRows) {\n             super(paginatorRows, TaskType.PROPAGATION, restClient);\n-            this.resource = resource;\n         }\n \n         @Override"},{"sha":"25e67412e391d88ca91589c45109b75f4d3637f4","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTasks.java","status":"modified","additions":12,"deletions":5,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTasks.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -24,26 +24,33 @@\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.StringResourceModel;\n \n-public class PropagationTasks extends AbstractTasks {\n+public class PropagationTasks extends AbstractPropagationTasks {\n \n     private static final long serialVersionUID = -4013796607157549641L;\n \n     public <T extends AnyTO> PropagationTasks(\n-            final BaseModal<?> baseModal, final PageReference pageReference, final String resource) {\n+            final BaseModal<?> baseModal,\n+            final String resource,\n+            final PageReference pageReference) {\n+\n         super(BaseModal.CONTENT_ID);\n \n         final MultilevelPanel mlp = new MultilevelPanel(\"tasks\");\n-        add(mlp);\n-\n         mlp.setFirstLevel(new PropagationTaskDirectoryPanel(baseModal, mlp, resource, pageReference) {\n \n             private static final long serialVersionUID = -2195387360323687302L;\n \n             @Override\n             protected void viewTask(final PropagationTaskTO taskTO, final AjaxRequestTarget target) {\n-                mlp.next(\"task.view\", new TaskExecutionDetails<>(baseModal, taskTO, pageReference), target);\n+                mlp.next(\n+                        new StringResourceModel(\"task.view\", this, new Model<>(taskTO)).getObject(),\n+                        new TaskExecutionDetails<>(baseModal, taskTO, pageReference),\n+                        target);\n             }\n         });\n+        add(mlp);\n     }\n }"},{"sha":"0d8538fa38f5d10132e0b400ff2171a68472198d","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -98,7 +98,7 @@ protected List<IColumn<T, String>> getFieldColumns() {\n         return columns;\n     }\n \n-    public class ProvisioningTasksProvider<T extends AbstractProvisioningTaskTO> extends SchedTasksProvider<T> {\n+    protected class ProvisioningTasksProvider<T extends AbstractProvisioningTaskTO> extends SchedTasksProvider<T> {\n \n         private static final long serialVersionUID = 4725679400450513556L;\n \n@@ -111,7 +111,7 @@ public ProvisioningTasksProvider(final Class<T> reference, final TaskType id, fi\n \n         @Override\n         public long size() {\n-            return restClient.count(resource, id);\n+            return restClient.count(resource, taskType);\n         }\n \n         @Override"},{"sha":"92c384b65226b8215d16091b5c1cd95541284257","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -302,7 +302,7 @@ public void onClick(final AjaxRequestTarget target) {\n             @Override\n             @SuppressWarnings(\"unchecked\")\n             public void onClick(final AjaxRequestTarget target) {\n-                target.add(taskModal.setContent(new PropagationTasks(taskModal, pageRef, node.getKey().toString())));\n+                target.add(taskModal.setContent(new PropagationTasks(taskModal, node.getKey().toString(), pageRef)));\n                 taskModal.header(new ResourceModel(\"task.propagation.list\", \"Propagation tasks\"));\n                 taskModal.show(true);\n             }"},{"sha":"8243d22489abf9300137f311375c259490c94275","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -46,8 +46,6 @@ public enum ActionType {\n         CLONE(\"create\"),\n         CREATE(\"create\"),\n         EDIT(\"read\"),\n-        USER_TEMPLATE(\"read\"),\n-        GROUP_TEMPLATE(\"read\"),\n         RESET(\"update\"),\n         ENABLE(\"update\"),\n         NOT_FOND(\"read\"),\n@@ -73,6 +71,7 @@ public enum ActionType {\n         MANAGE_RESOURCES(\"update\"),\n         MANAGE_USERS(\"update\"),\n         MANAGE_GROUPS(\"update\"),\n+        PROPAGATION_TASKS(\"read\"),\n         ZOOM_IN(\"zoomin\"),\n         ZOOM_OUT(\"zoomout\");\n "},{"sha":"5474291c7ba244859df7afab9a4a47680f5a5745","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":24,"deletions":45,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -62,8 +62,6 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelCreate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelReset\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelUserTemplate\", \"emptyFragment\", this));\n-        super.add(new Fragment(\"panelGroupTemplate\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelEnable\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelNotFound\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelView\", \"emptyFragment\", this));\n@@ -84,6 +82,7 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelAssign\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelDeprovision\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelProvision\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelPropagationTasks\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelZoomIn\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelZoomOut\", \"emptyFragment\", this));\n     }\n@@ -307,44 +306,6 @@ public String getAjaxIndicatorMarkupId() {\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n-            case USER_TEMPLATE:\n-                fragment = new Fragment(\"panelUserTemplate\", \"fragmentUserTemplate\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"userTemplateLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n-            case GROUP_TEMPLATE:\n-                fragment = new Fragment(\"panelGroupTemplate\", \"fragmentGroupTemplate\", this);\n-\n-                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"groupTemplateLink\") {\n-\n-                    private static final long serialVersionUID = -7978723352517770644L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n-\n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n-                break;\n-\n             case ENABLE:\n                 fragment = new Fragment(\"panelEnable\", \"fragmentEnable\", this);\n \n@@ -699,7 +660,26 @@ public String getAjaxIndicatorMarkupId() {\n \n                 fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"provisionLink\") {\n \n-                    private static final long serialVersionUID = -6957616042924610305L;\n+                    private static final long serialVersionUID = -1876519166660008562L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        link.onClick(target, model.getObject());\n+                    }\n+\n+                    @Override\n+                    public String getAjaxIndicatorMarkupId() {\n+                        return disableIndicator ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                    }\n+                }.setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n+            case PROPAGATION_TASKS:\n+                fragment = new Fragment(\"panelPropagationTasks\", \"fragmentPropagationTasks\", this);\n+\n+                fragment.addOrReplace(new IndicatingAjaxLink<Void>(\"propagationTasksLink\") {\n+\n+                    private static final long serialVersionUID = -1876519166660008562L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -808,10 +788,6 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelEdit\", \"emptyFragment\", this));\n                 break;\n \n-            case USER_TEMPLATE:\n-                super.addOrReplace(new Fragment(\"panelUserTemplate\", \"emptyFragment\", this));\n-                break;\n-\n             case VIEW:\n                 super.addOrReplace(new Fragment(\"panelView\", \"emptyFragment\", this));\n                 break;\n@@ -883,12 +859,15 @@ public void remove(final ActionLink.ActionType type) {\n             case PROVISION:\n                 super.addOrReplace(new Fragment(\"panelProvision\", \"emptyFragment\", this));\n                 break;\n+\n             case ZOOM_IN:\n                 super.addOrReplace(new Fragment(\"panelZoomIn\", \"emptyFragment\", this));\n                 break;\n+\n             case ZOOM_OUT:\n                 super.addOrReplace(new Fragment(\"panelZoomOut\", \"emptyFragment\", this));\n                 break;\n+\n             default:\n             // do nothing\n         }"},{"sha":"e8bc981c6c6242447fd685dd60a2bb7db953b35c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -44,7 +44,7 @@\n \n public abstract class WizardMgtPanel<T extends Serializable> extends Panel implements IEventSource {\n \n-    private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = -4152438633429194882L;\n \n     private final WebMarkupContainer container;\n \n@@ -64,12 +64,9 @@\n \n     protected boolean showResultPage = false;\n \n-    /**\n-     * Modal window.\n-     */\n     protected final BaseModal<T> modal = new BaseModal<T>(\"modal\") {\n \n-        private static final long serialVersionUID = 1L;\n+        private static final long serialVersionUID = 389935548143327858L;\n \n         @Override\n         protected void onConfigure() {\n@@ -79,13 +76,12 @@ protected void onConfigure() {\n \n     };\n \n-    /**\n-     * Modal window.\n-     */\n     protected final BaseModal<T> altDefaultModal = new BaseModal<>(\"alternativeDefaultModal\");\n \n     protected final BaseModal<T> displayAttributeModal = new BaseModal<>(\"displayAttributeModal\");\n \n+    protected final BaseModal<Serializable> utilityModal = new BaseModal<>(\"utilityModal\");\n+\n     protected WizardMgtPanel(final String id) {\n         this(id, false);\n     }\n@@ -99,6 +95,7 @@ protected WizardMgtPanel(final String id, final boolean wizardInModal) {\n         super.add(modal);\n         super.add(altDefaultModal);\n         super.add(displayAttributeModal);\n+        super.add(utilityModal);\n \n         container = new WebMarkupContainer(\"container\");\n         container.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true);"},{"sha":"e6c9c8913ae1345b272b240f69e12db7a5f7ba81","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -45,6 +45,7 @@\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n@@ -134,8 +135,7 @@ public void onClick(\n                                                 removeRelationships(relationships, modelObject);\n                                                 send(Relationships.this, Broadcast.DEPTH, new ListViewReload(target));\n                                             }\n-                                        }, ActionLink.ActionType.DELETE,\n-                                                String.format(\"%s_%s\", anyTO.getType(), AnyEntitlement.UPDATE)).\n+                                        }, ActionType.DELETE, AnyEntitlement.UPDATE.getFor(anyTO.getType())).\n                                         build(panelId);\n                             }\n                         };\n@@ -165,7 +165,7 @@ public void onClick(final AjaxRequestTarget target, final RelationshipTO ignore)\n                 addFragment.add(new Specification().setRenderBodyOnly(true));\n                 target.add(Relationships.this);\n             }\n-        }, ActionLink.ActionType.CREATE, String.format(\"%s_%s\", anyTO.getType(), AnyEntitlement.UPDATE)).\n+        }, ActionType.CREATE, AnyEntitlement.UPDATE.getFor(anyTO.getType())).\n                 build(\"actions\"));\n \n         return viewFragment;"},{"sha":"cc1a8ea382ef2cd3625c0e996fa4c1c17466d518","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -297,7 +297,7 @@ span.overridable div.checkbox label div div.toggle-group label {\n   padding-left: 7px;\n }\n \n-div#outer.modal-lg {\n+div#outer.modal-lg, div#utilityModal.modal-lg {\n   width: 1200px;\n }\n "},{"sha":"44780b6f4ca3058837cc4502d1f8d67012d641b8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/bulk/BulkActionModal.properties","status":"removed","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62aa8f7833fdec66e5f40b1e35deb60c52cefac4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62aa8f7833fdec66e5f40b1e35deb60c52cefac4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal.properties?ref=62aa8f7833fdec66e5f40b1e35deb60c52cefac4","patch":"@@ -1,18 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-bulk.action=Bulk action\n-close=Close"},{"sha":"55f9a341f60a86fd51421399d489926a46f933e9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/bulk/BulkActionModal_it.properties","status":"removed","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62aa8f7833fdec66e5f40b1e35deb60c52cefac4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62aa8f7833fdec66e5f40b1e35deb60c52cefac4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_it.properties?ref=62aa8f7833fdec66e5f40b1e35deb60c52cefac4","patch":"@@ -1,18 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-bulk.action=Operazioni di gruppo\n-close=Chiudi"},{"sha":"353e95c971ff74301494de336f7fb93efa188374","filename":"client/console/src/main/resources/org/apache/syncope/client/console/bulk/BulkActionModal_pt_BR.properties","status":"removed","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62aa8f7833fdec66e5f40b1e35deb60c52cefac4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62aa8f7833fdec66e5f40b1e35deb60c52cefac4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkActionModal_pt_BR.properties?ref=62aa8f7833fdec66e5f40b1e35deb60c52cefac4","patch":"@@ -1,18 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-bulk.action=A\\u00e7\\u00e3o Composta\n-close=Fechar"},{"sha":"7362fcc753e0c24006d8eff14262d58876d9ba1a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DirectoryPanel.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.properties?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -35,3 +35,5 @@ any.new=New ${anyTO.type}\n any.finish=Submit ${anyTO.type}\n any.cancel=Cancel ${anyTO.type}\n any.attr.display=Attributes to be displayed\n+bulk.action=Bulk action\n+any.propagation.tasks=Propagation tasks for ${type} ${key}"},{"sha":"58a3558cca7ba158d98e880e5ccd3853ec9d9a83","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DirectoryPanel_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_it.properties?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -35,3 +35,5 @@ any.new=Nuovo ${anyTO.type}\n any.attr.display=Attributi da mostrare\n any.finish=Invia ${anyTO.type}\n any.cancel=Annulla ${anyTO.type}\n+bulk.action=Operazioni di gruppo\n+any.propagation.tasks=Task di propagazione per ${type} ${key}"},{"sha":"8b5cc5981d9a1a007fa3342cb73b5972826d087e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DirectoryPanel_pt_BR.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_pt_BR.properties?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -35,3 +35,5 @@ any.new=Novo ${anyTO.type}\n any.attr.display=Atributos a ser exibido\n any.finish=Apresentar ${anyTO.type}\n any.cancel=Cancelar ${anyTO.type}\n+bulk.action=A\\u00e7\\u00e3o Composta\n+any.propagation.tasks=Propagation tasks for ${type} ${key}"},{"sha":"ef1cdf0a7317877fc1978a227d2b68eaf7afabaa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/status/StatusModal.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.properties?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -17,4 +17,3 @@\n resourceName=Resource\n connObjectLink=Remote ID\n status=Status\n-bulk.action=Bulk action"},{"sha":"948b49dc5ea790d411a484109d049ab1afe5549b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/status/StatusModal_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_it.properties?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -17,4 +17,3 @@\n resourceName=Risorsa\n connObjectLink=ID Remoto\n status=Stato\n-bulk.action=Azione di massa"},{"sha":"ef1cdf0a7317877fc1978a227d2b68eaf7afabaa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/status/StatusModal_pt_BR.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal_pt_BR.properties?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -17,4 +17,3 @@\n resourceName=Resource\n connObjectLink=Remote ID\n status=Status\n-bulk.action=Bulk action"},{"sha":"a1c2b96b63923849a9477d94fe7bad4dd5ab11da","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.properties?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -15,8 +15,8 @@\n # specific language governing permissions and limitations\n # under the License.\n operation=Operation\n-anyTypeKind=Involved object\n-anyKey=Local id\n-connObjectKey=Remote Id\n+anyTypeKind=Object Type\n+anyKey=Local Key\n+connObjectKey=Remote Key\n start=Start\n end=End"},{"sha":"60c13cf911defdb982afb0170aec13ab068ebbed","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel_it.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_it.properties?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -15,8 +15,8 @@\n # specific language governing permissions and limitations\n # under the License.\n operation=Operazione\n-anyTypeKind=Oggetto coinvolto\n-anyKey=Id locale\n-connObjectKey=Id remoto\n+anyTypeKind=Tipo Oggetto\n+anyKey=Key Locale\n+connObjectKey=Key Remota\n start=Inizio\n end=Fine"},{"sha":"a1c2b96b63923849a9477d94fe7bad4dd5ab11da","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel_pt_BR.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel_pt_BR.properties?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -15,8 +15,8 @@\n # specific language governing permissions and limitations\n # under the License.\n operation=Operation\n-anyTypeKind=Involved object\n-anyKey=Local id\n-connObjectKey=Remote Id\n+anyTypeKind=Object Type\n+anyKey=Local Key\n+connObjectKey=Remote Key\n start=Start\n end=End"},{"sha":"eeb94e44906c5d5917448f9933fb4b11746fbe13","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -41,11 +41,10 @@\n     <span wicket:id=\"panelResetTime\">[plus]</span>\n     <span wicket:id=\"panelClone\">[plus]</span>\n     <span wicket:id=\"panelCreate\">[plus]</span>\n-    <span wicket:id=\"panelUserTemplate\">[plus]</span>\n-    <span wicket:id=\"panelGroupTemplate\">[plus]</span>\n     <span wicket:id=\"panelReset\">[plus]</span>\n     <span wicket:id=\"panelEdit\">[plus]</span>\n     <span wicket:id=\"panelExport\">[plus]</span>\n+    <span wicket:id=\"panelPropagationTasks\">[plus]</span>\n     <span wicket:id=\"panelDelete\">[plus]</span>\n     <span wicket:id=\"panelSelect\">[select]</span>\n     <span wicket:id=\"panelClose\">[close]</span>\n@@ -63,7 +62,7 @@\n     <span wicket:id=\"panelZoomOut\">[plus]</span>\n \n     <wicket:fragment wicket:id=\"fragmentMustChangePassword\">\n-      <a href=\"#\" wicket:id=\"MustChangePasswordLink\" class=\"btn\"><i class=\"fa fa-lock\" alt=\"must change password icon\" title=\"Force change password\"></i></a>\n+      <a href=\"#\" wicket:id=\"MustChangePasswordLink\" class=\"btn\"><i class=\"fa fa-lock\" alt=\"must change password icon\" title=\"Toggle must change password\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentClaim\">\n@@ -122,12 +121,8 @@\n       <a href=\"#\" wicket:id=\"resetLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/reset.png\" alt=\"reset icon\" title=\"Reset sync token\"/></a>\n     </wicket:fragment>\n \n-    <wicket:fragment wicket:id=\"fragmentUserTemplate\">\n-      <a href=\"#\" wicket:id=\"userTemplateLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/user_template.png\" alt=\"user template icon\" title=\"Specify user template\"/></a>\n-    </wicket:fragment>\n-\n-    <wicket:fragment wicket:id=\"fragmentGroupTemplate\">\n-      <a href=\"#\" wicket:id=\"groupTemplateLink\" class=\"btn\"><img id=\"actionLink\" src=\"img/actions/groups-icon.png\" alt=\"group template icon\"  title=\"Specify group template\"/></a>\n+    <wicket:fragment wicket:id=\"fragmentPropagationTasks\">\n+      <a href=\"#\" wicket:id=\"propagationTasksLink\" class=\"btn\"><i class=\"fa fa-arrow-right\" alt=\"PropagationTasks icon\" title=\"PropagationTasks\"></i></a>\n     </wicket:fragment>\n \n     <wicket:fragment wicket:id=\"fragmentDelete\">"},{"sha":"cdbfa80235dbf9f649e606ffd3905dfefdb57056","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/WizardMgtPanel.html","status":"modified","additions":22,"deletions":26,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -17,35 +17,31 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head>\n-    <title></title>\n-  </head>\n-  <body>\n-    <wicket:panel>\n-      <span wicket:id=\"container\">\n-        <wicket:container wicket:id=\"content\" />\n-      </span>\n+  <wicket:panel>\n+    <span wicket:id=\"container\">\n+      <wicket:container wicket:id=\"content\"/>\n+    </span>\n \n-      <wicket:fragment wicket:id=\"wizard\">\n-        <span wicket:id=\"wizard\"/>\n-      </wicket:fragment>\n+    <wicket:fragment wicket:id=\"wizard\">\n+      <span wicket:id=\"wizard\"/>\n+    </wicket:fragment>\n \n-      <wicket:fragment wicket:id=\"default\">\n+    <wicket:fragment wicket:id=\"default\">\n \n-        <wicket:child />\n+      <wicket:child/>\n \n-        <wicket:enclosure child=\"add\">\n-          <div class=\"modal-footer\" style=\"text-align: right\">\n-            <a haref=\"#\"  class=\"btn btn-primary btn-circle btn-lg\" wicket:id=\"add\">\n-              <i class=\"glyphicon glyphicon-plus\"></i>\n-            </a>\n-          </div>\n-        </wicket:enclosure>\n-      </wicket:fragment>\n+      <wicket:enclosure child=\"add\">\n+        <div class=\"modal-footer\" style=\"text-align: right\">\n+          <a haref=\"#\"  class=\"btn btn-primary btn-circle btn-lg\" wicket:id=\"add\">\n+            <i class=\"glyphicon glyphicon-plus\"></i>\n+          </a>\n+        </div>\n+      </wicket:enclosure>\n+    </wicket:fragment>\n \n-      <div wicket:id=\"modal\" />\n-      <div wicket:id=\"alternativeDefaultModal\" />\n-      <div wicket:id=\"displayAttributeModal\" />\n-    </wicket:panel>\n-  </body>\n+    <div wicket:id=\"modal\"/>\n+    <div wicket:id=\"alternativeDefaultModal\"/>\n+    <div wicket:id=\"displayAttributeModal\"/>\n+    <div wicket:id=\"utilityModal\"/>\n+  </wicket:panel>\n </html>"},{"sha":"1320efecdfda3f87a0b349df35b5d4688da718d5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AnyEntitlement.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAnyEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAnyEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAnyEntitlement.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -26,4 +26,7 @@ public enum AnyEntitlement {\n     UPDATE,\n     DELETE;\n \n+    public String getFor(final String anyTypeKey) {\n+        return anyTypeKey + \"_\" + name();\n+    }\n }"},{"sha":"188cf0d2f9663176d8850e9863e1f6f348337931","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":29,"deletions":41,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -38,7 +38,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.PatchOperation;\n-import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n@@ -101,8 +100,7 @@ public int searchCount(final SearchCond searchCond, final String realm) {\n         }\n \n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(searchCond.hasAnyTypeCond(), AnyEntitlement.SEARCH)),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(searchCond.hasAnyTypeCond())),\n                 realm);\n \n         return searchDAO.count(effectiveRealms, searchCond, AnyTypeKind.ANY_OBJECT);\n@@ -118,8 +116,7 @@ public List<AnyObjectTO> search(final SearchCond searchCond, final int page, fin\n         }\n \n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(searchCond.hasAnyTypeCond(), AnyEntitlement.SEARCH)),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(searchCond.hasAnyTypeCond())),\n                 realm);\n \n         List<AnyObject> matchingAnyObjects = searchDAO.search(\n@@ -145,8 +142,7 @@ public ProvisioningResult<AnyObjectTO> create(final AnyObjectTO anyObjectTO, fin\n         }\n \n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(before.getLeft().getType(), AnyEntitlement.CREATE)),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(before.getLeft().getType())),\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), null);\n \n@@ -167,8 +163,7 @@ public ProvisioningResult<AnyObjectTO> update(\n                 ? before.getLeft().getRealm().getValue()\n                 : anyObjectTO.getRealm();\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObjectTO.getType(), AnyEntitlement.UPDATE)),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n                 realm);\n         securityChecks(effectiveRealms, realm, before.getLeft().getKey());\n \n@@ -183,8 +178,7 @@ public ProvisioningResult<AnyObjectTO> delete(final Long key, final boolean null\n         Pair<AnyObjectTO, List<LogicActions>> before = beforeDelete(anyObject);\n \n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(before.getLeft().getType(), AnyEntitlement.DELETE)),\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(before.getLeft().getType())),\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), before.getLeft().getKey());\n \n@@ -199,12 +193,11 @@ public ProvisioningResult<AnyObjectTO> delete(final Long key, final boolean null\n     @Override\n     public AnyObjectTO unlink(final Long key, final Collection<String> resources) {\n         // security checks\n-        AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n+        AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n-                anyObject.getRealm());\n-        securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                anyObjectTO.getRealm());\n+        securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n         AnyObjectPatch patch = new AnyObjectPatch();\n         patch.setKey(key);\n@@ -222,12 +215,11 @@ public StringPatchItem transform(final String resource) {\n     @Override\n     public AnyObjectTO link(final Long key, final Collection<String> resources) {\n         // security checks\n-        AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n+        AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n-                anyObject.getRealm());\n-        securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                anyObjectTO.getRealm());\n+        securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n         AnyObjectPatch patch = new AnyObjectPatch();\n         patch.setKey(key);\n@@ -247,12 +239,11 @@ public ProvisioningResult<AnyObjectTO> unassign(\n             final Long key, final Collection<String> resources, final boolean nullPriorityAsync) {\n \n         // security checks\n-        AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n+        AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n-                anyObject.getRealm());\n-        securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                anyObjectTO.getRealm());\n+        securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n         AnyObjectPatch patch = new AnyObjectPatch();\n         patch.setKey(key);\n@@ -276,12 +267,11 @@ public ProvisioningResult<AnyObjectTO> assign(\n             final boolean nullPriorityAsync) {\n \n         // security checks\n-        AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n+        AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n-                anyObject.getRealm());\n-        securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                anyObjectTO.getRealm());\n+        securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n         AnyObjectPatch patch = new AnyObjectPatch();\n         patch.setKey(key);\n@@ -301,12 +291,11 @@ public ProvisioningResult<AnyObjectTO> deprovision(\n             final Long key, final Collection<String> resources, final boolean nullPriorityAsync) {\n \n         // security checks\n-        AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n+        AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n-                anyObject.getRealm());\n-        securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                anyObjectTO.getRealm());\n+        securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n         List<PropagationStatus> statuses = provisioningManager.deprovision(key, resources, nullPriorityAsync);\n \n@@ -325,12 +314,11 @@ public ProvisioningResult<AnyObjectTO> provision(\n             final boolean nullPriorityAsync) {\n \n         // security checks\n-        AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n+        AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n-                AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                        getFor(anyObject.getType(), AnyEntitlement.UPDATE)),\n-                anyObject.getRealm());\n-        securityChecks(effectiveRealms, anyObject.getRealm(), anyObject.getKey());\n+                AuthContextUtils.getAuthorizations().get(AnyEntitlement.SEARCH.getFor(anyObjectTO.getType())),\n+                anyObjectTO.getRealm());\n+        securityChecks(effectiveRealms, anyObjectTO.getRealm(), anyObjectTO.getKey());\n \n         List<PropagationStatus> statuses = provisioningManager.provision(key, resources, nullPriorityAsync);\n "},{"sha":"da1f497adee550752a1b190b524f171b148a9b43","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/TaskDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -36,10 +36,10 @@ public interface TaskDAO extends DAO<Task, Long> {\n     <T extends Task> List<T> findAll(TaskType type);\n \n     <T extends Task> List<T> findAll(\n-            TaskType type, ExternalResource resource, AnyTypeKind anyTypeKind, Long anyTypeKey,\n+            TaskType type, ExternalResource resource, AnyTypeKind anyTypeKind, Long anyKey,\n             int page, int itemsPerPage, List<OrderByClause> orderByClauses);\n \n-    int count(TaskType type, ExternalResource resource, AnyTypeKind anyTypeKind, Long anyTypeKey);\n+    int count(TaskType type, ExternalResource resource, AnyTypeKind anyTypeKind, Long anyKey);\n \n     <T extends Task> T save(T task);\n "},{"sha":"a000511b02a8eaa6bd67d86ccee0c5a513909962","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyObjectDAO.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -35,7 +35,6 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n@@ -106,8 +105,8 @@ protected AnyUtils init() {\n \n     @Override\n     protected void securityChecks(final AnyObject anyObject) {\n-        Set<String> authRealms = AuthContextUtils.getAuthorizations().get(EntitlementsHolder.getInstance().\n-                getFor(anyObject.getType().getKey(), AnyEntitlement.READ));\n+        Set<String> authRealms = AuthContextUtils.getAuthorizations().get(\n+                AnyEntitlement.READ.getFor(anyObject.getType().getKey()));\n         boolean authorized = IterableUtils.matchesAny(authRealms, new Predicate<String>() {\n \n             @Override"},{"sha":"9eedb701519dd4c5d6f5d3d3943992a5a9730737","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -122,15 +122,15 @@ private StringBuilder buildFindAllQuery(\n             final TaskType type,\n             final ExternalResource resource,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey) {\n+            final Long anyKey) {\n \n         if (resource != null\n                 && type != TaskType.PROPAGATION && type != TaskType.PUSH && type != TaskType.PULL) {\n \n             throw new IllegalArgumentException(type + \" is not related to \" + ExternalResource.class.getSimpleName());\n         }\n \n-        if ((anyTypeKind != null || anyTypeKey != null) && type != TaskType.PROPAGATION) {\n+        if ((anyTypeKind != null || anyKey != null) && type != TaskType.PROPAGATION) {\n             throw new IllegalArgumentException(type + \" is not related to users, groups or any objects\");\n         }\n \n@@ -139,8 +139,8 @@ private StringBuilder buildFindAllQuery(\n         if (resource != null) {\n             queryString.append(\"AND t.resource=:resource \");\n         }\n-        if (anyTypeKind != null && anyTypeKey != null) {\n-            queryString.append(\"AND t.anyTypeKind=:anyTypeKind AND t.anyTypeKey=:anyTypeKey \");\n+        if (anyTypeKind != null && anyKey != null) {\n+            queryString.append(\"AND t.anyTypeKind=:anyTypeKind AND t.anyKey=:anyKey \");\n         }\n \n         return queryString;\n@@ -172,21 +172,21 @@ public <T extends Task> List<T> findAll(\n             final TaskType type,\n             final ExternalResource resource,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey,\n+            final Long anyKey,\n             final int page,\n             final int itemsPerPage,\n             final List<OrderByClause> orderByClauses) {\n \n-        StringBuilder queryString = buildFindAllQuery(type, resource, anyTypeKind, anyTypeKey).\n+        StringBuilder queryString = buildFindAllQuery(type, resource, anyTypeKind, anyKey).\n                 append(toOrderByStatement(getEntityReference(type), orderByClauses));\n \n         Query query = entityManager().createQuery(queryString.toString());\n         if (resource != null) {\n             query.setParameter(\"resource\", resource);\n         }\n-        if (anyTypeKind != null && anyTypeKey != null) {\n+        if (anyTypeKind != null && anyKey != null) {\n             query.setParameter(\"anyTypeKind\", anyTypeKind);\n-            query.setParameter(\"anyTypeKey\", anyTypeKey);\n+            query.setParameter(\"anyKey\", anyKey);\n         }\n \n         query.setFirstResult(itemsPerPage * (page <= 0\n@@ -205,18 +205,18 @@ public int count(\n             final TaskType type,\n             final ExternalResource resource,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey) {\n+            final Long anyKey) {\n \n-        StringBuilder queryString = buildFindAllQuery(type, resource, anyTypeKind, anyTypeKey);\n+        StringBuilder queryString = buildFindAllQuery(type, resource, anyTypeKind, anyKey);\n \n         Query query = entityManager().createQuery(StringUtils.replaceOnce(\n                 queryString.toString(), \"SELECT t\", \"SELECT COUNT(t)\"));\n         if (resource != null) {\n             query.setParameter(\"resource\", resource);\n         }\n-        if (anyTypeKind != null && anyTypeKey != null) {\n+        if (anyTypeKind != null && anyKey != null) {\n             query.setParameter(\"anyTypeKind\", anyTypeKind);\n-            query.setParameter(\"anyTypeKey\", anyTypeKey);\n+            query.setParameter(\"anyKey\", anyKey);\n         }\n \n         return ((Number) query.getSingleResult()).intValue();"},{"sha":"53a86f5fd7f2af7ed4eac3fc350dd16c22e11d90","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/EntitlementsHolder.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cf22969741764d711435a00ba38583484151a7/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FEntitlementsHolder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cf22969741764d711435a00ba38583484151a7/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FEntitlementsHolder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FEntitlementsHolder.java?ref=93cf22969741764d711435a00ba38583484151a7","patch":"@@ -50,19 +50,15 @@ public void init(final Collection<String> values) {\n         this.values.addAll(values);\n     }\n \n-    public String getFor(final String anyTypeKey, final AnyEntitlement operation) {\n-        return anyTypeKey + \"_\" + operation.name();\n-    }\n-\n     public void addFor(final String anyType) {\n         for (AnyEntitlement operation : AnyEntitlement.values()) {\n-            this.values.add(getFor(anyType, operation));\n+            this.values.add(operation.getFor(anyType));\n         }\n     }\n \n     public void removeFor(final String anyType) {\n         for (AnyEntitlement operation : AnyEntitlement.values()) {\n-            this.values.remove(getFor(anyType, operation));\n+            this.values.remove(operation.getFor(anyType));\n         }\n     }\n "}]}