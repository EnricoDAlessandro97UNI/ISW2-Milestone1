{"sha":"7126dd25b1bb769b55cc48fc6613eeec531bec04","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjcxMjZkZDI1YjFiYjc2OWI1NWNjNDhmYzY2MTNlZWVjNTMxYmVjMDQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-02T15:18:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-01-02T15:18:01Z"},"message":"[SYNCOPE-460] Applying provided patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1554828 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d8275bd978d6d71d3476a1f314ca8a8d892fd930","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d8275bd978d6d71d3476a1f314ca8a8d892fd930"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7126dd25b1bb769b55cc48fc6613eeec531bec04","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7126dd25b1bb769b55cc48fc6613eeec531bec04","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7126dd25b1bb769b55cc48fc6613eeec531bec04","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7126dd25b1bb769b55cc48fc6613eeec531bec04/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1fa6b93cbc6049ece43674f2b7e824b31f78f493","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1fa6b93cbc6049ece43674f2b7e824b31f78f493","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1fa6b93cbc6049ece43674f2b7e824b31f78f493"}],"stats":{"total":129,"additions":95,"deletions":34},"files":[{"sha":"54cd28f140c52731db7e7f8c7dc58dbe6d8593f9","filename":"core/pom.xml","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -249,6 +249,11 @@ under the License.\n       <groupId>org.apache.openjpa</groupId>\n       <artifactId>openjpa-persistence-jdbc</artifactId>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>commons-dbcp</groupId> \n+      <artifactId>commons-dbcp</artifactId>\n+    </dependency>\n \n     <dependency>\n       <groupId>javax.validation</groupId>\n@@ -984,14 +989,14 @@ under the License.\n     <profile>\n       <id>postgres-it</id>\n       <properties>\n-        <jdbcdriver.groupId>postgresql</jdbcdriver.groupId>\n+        <jdbcdriver.groupId>org.postgresql</jdbcdriver.groupId>\n         <jdbcdriver.artifactId>postgresql</jdbcdriver.artifactId>\n       </properties>\n       <dependencies>\n         <dependency>\n-          <groupId>postgresql</groupId>\n+          <groupId>org.postgresql</groupId>\n           <artifactId>postgresql</artifactId>\n-          <version>9.1-901-1.jdbc4</version>\n+          <version>9.3-1100-jdbc41</version>\n           <scope>test</scope>\n         </dependency>\n       </dependencies>"},{"sha":"966f5cc245f1e273760b4fcaa89eba0f9b69b65e","filename":"core/src/main/java/org/apache/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.Task;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n+import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.ReportDAO;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.quartz.TaskJob;\n@@ -183,6 +184,18 @@ public void registerJob(final Task task, final String jobClassName, final String\n         registerJob(getJobName(task), jobInstance, cronExpression);\n     }\n \n+    @Transactional(readOnly = true)\n+    public void registerTaskJob(final Long taskId)\n+            throws ClassNotFoundException, SchedulerException, ParseException {\n+\n+        SchedTask task = taskDAO.find(taskId);\n+        if (task == null) {\n+            throw new NotFoundException(\"Task \" + taskId);\n+        } else {\n+            registerJob(task, task.getJobClassName(), task.getCronExpression());\n+        }\n+    }\n+\n     public void registerJob(final Report report) throws SchedulerException, ParseException {\n         Job jobInstance = (Job) ApplicationContextProvider.getBeanFactory().\n                 createBean(ReportJob.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n@@ -191,6 +204,16 @@ public void registerJob(final Report report) throws SchedulerException, ParseExc\n         registerJob(getJobName(report), jobInstance, report.getCronExpression());\n     }\n \n+    @Transactional(readOnly = true)\n+    public void registerReportJob(final Long reportId) throws SchedulerException, ParseException {\n+        Report report = reportDAO.find(reportId);\n+        if (report == null) {\n+            throw new NotFoundException(\"Report \" + reportId);\n+        } else {\n+            registerJob(report);\n+        }\n+    }\n+\n     private void unregisterJob(final String jobName) {\n         try {\n             scheduler.getScheduler().unscheduleJob(new TriggerKey(jobName, Scheduler.DEFAULT_GROUP));"},{"sha":"ac20d35d43a788ad02416fde0ab435b0fbc2f0db","filename":"core/src/main/java/org/apache/syncope/core/quartz/AbstractTaskJob.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FAbstractTaskJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FAbstractTaskJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FAbstractTaskJob.java?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -40,7 +40,7 @@\n /**\n  * Abstract job implementation that delegates to concrete implementation the actual job execution and provides some\n  * base features.\n- * <strong>Extending ttis class will not provide support transaction management.</strong><br/>\n+ * <strong>Extending this class will not provide support transaction management.</strong><br/>\n  * Extend <tt>AbstractTransactionalTaskJob</tt> for this purpose.\n  *\n  * @see AbstractTransactionalTaskJob"},{"sha":"9fe4b850d649e0f3c05f900fe98d364b7252cf5f","filename":"core/src/main/java/org/apache/syncope/core/quartz/SpringBeanJobFactory.java","status":"modified","additions":3,"deletions":16,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -19,10 +19,6 @@\n package org.apache.syncope.core.quartz;\n \n import org.apache.syncope.core.init.JobInstanceLoader;\n-import org.apache.syncope.core.persistence.beans.Report;\n-import org.apache.syncope.core.persistence.beans.SchedTask;\n-import org.apache.syncope.core.persistence.dao.ReportDAO;\n-import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.quartz.SchedulerContext;\n import org.quartz.spi.TriggerFiredBundle;\n import org.springframework.beans.BeanWrapper;\n@@ -58,28 +54,20 @@ public void setSchedulerContext(final SchedulerContext schedulerContext) {\n      */\n     @Override\n     protected Object createJobInstance(final TriggerFiredBundle bundle) throws Exception {\n-\n         final ApplicationContext ctx = ((ConfigurableApplicationContext) schedulerContext.get(\"applicationContext\"));\n \n-        // Try to re-create job bean from underlying task (useful for managing\n-        // failover scenarios)\n+        // Try to re-create job bean from underlying task (useful for managing failover scenarios)\n         if (!ctx.containsBean(bundle.getJobDetail().getKey().getName())) {\n             Long taskId = JobInstanceLoader.getTaskIdFromJobName(bundle.getJobDetail().getKey().getName());\n             if (taskId != null) {\n-                TaskDAO taskDAO = ctx.getBean(TaskDAO.class);\n-                SchedTask task = taskDAO.find(taskId);\n-\n                 JobInstanceLoader jobInstanceLoader = ctx.getBean(JobInstanceLoader.class);\n-                jobInstanceLoader.registerJob(task, task.getJobClassName(), task.getCronExpression());\n+                jobInstanceLoader.registerTaskJob(taskId);\n             }\n \n             Long reportId = JobInstanceLoader.getReportIdFromJobName(bundle.getJobDetail().getKey().getName());\n             if (reportId != null) {\n-                ReportDAO reportDAO = ctx.getBean(ReportDAO.class);\n-                Report report = reportDAO.find(reportId);\n-\n                 JobInstanceLoader jobInstanceLoader = ctx.getBean(JobInstanceLoader.class);\n-                jobInstanceLoader.registerJob(report);\n+                jobInstanceLoader.registerReportJob(reportId);\n             }\n         }\n \n@@ -97,7 +85,6 @@ protected Object createJobInstance(final TriggerFiredBundle bundle) throws Excep\n             } else {\n                 for (String propName : this.ignoredUnknownProperties) {\n                     if (pvs.contains(propName) && !wrapper.isWritableProperty(propName)) {\n-\n                         pvs.removePropertyValue(propName);\n                     }\n                 }"},{"sha":"7a9f0dcfd57243cc1300a5fcf54a0e56d8123a65","filename":"core/src/main/resources/persistence.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -19,6 +19,8 @@ jpa.url=jdbc:postgresql://localhost:5432/syncope\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.PostgresDictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n quartz.sql=tables_postgres.sql\n logback.sql=postgresql.sql"},{"sha":"f91444d8a98ae6a81843c39e91110167dee5a934","filename":"core/src/main/resources/persistenceContext.xml","status":"modified","additions":29,"deletions":10,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -22,14 +22,17 @@ under the License.\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xmlns:tx=\"http://www.springframework.org/schema/tx\"\n        xmlns:aop=\"http://www.springframework.org/schema/aop\"\n+       xmlns:util=\"http://www.springframework.org/schema/util\"\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n                            http://www.springframework.org/schema/context\n                            http://www.springframework.org/schema/context/spring-context.xsd\n                            http://www.springframework.org/schema/tx\n                            http://www.springframework.org/schema/tx/spring-tx.xsd\n                            http://www.springframework.org/schema/aop\n-                           http://www.springframework.org/schema/aop/spring-aop.xsd\">\n+                           http://www.springframework.org/schema/aop/spring-aop.xsd\n+                           http://www.springframework.org/schema/util\n+                           http://www.springframework.org/schema/util/spring-util.xsd\">\n \n   <import resource=\"persistenceContextEMFactory.xml\"/>\n \n@@ -50,16 +53,32 @@ under the License.\n     <property name=\"defaultObject\" ref=\"localDataSource\"/>\n   </bean>\n \n-  <bean id=\"localDataSource\" class=\"org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter\">\n-    <property name=\"targetDataSource\">\n-      <bean class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n-        <property name=\"driverClassName\" value=\"${jpa.driverClassName}\"/>\n-        <property name=\"url\" value=\"${jpa.url}\"/>\n-        <property name=\"username\" value=\"${jpa.username}\"/>\n-        <property name=\"password\" value=\"${jpa.password}\"/>\n-      </bean>\n+  <bean id=\"localDataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\n+    <property name=\"driverClassName\" value=\"${jpa.driverClassName}\"/>\n+    <property name=\"url\" value=\"${jpa.url}\"/>\n+    <property name=\"username\" value=\"${jpa.username}\"/>\n+    <property name=\"password\" value=\"${jpa.password}\"/>\n+    <!-- connection pool configuration - transaction isolation, default READ_COMMITTED (see SYNCOPE-202) -->\n+    <property name=\"defaultTransactionIsolation\">\n+      <util:constant static-field=\"${jpa.pool.defaultTransactionIsolation:java.sql.Connection.TRANSACTION_READ_COMMITTED}\"/>\n     </property>\n-    <property name=\"isolationLevelName\" value=\"ISOLATION_READ_COMMITTED\"/>\n+    <!-- connection pool configuration - default values taken from BasicDataSource default values -->\n+    <property name=\"initialSize\" value=\"${jpa.pool.initialSize:0}\"/>\n+    <property name=\"maxActive\" value=\"${jpa.pool.maxActive:8}\"/>\n+    <property name=\"maxIdle\" value=\"${jpa.pool.maxIdle:8}\"/>\n+    <property name=\"minIdle\" value=\"${jpa.pool.minIdle:0}\"/>\n+    <property name=\"maxWait\" value=\"${jpa.pool.maxWait:-1}\"/>\n+    <property name=\"validationQuery\" value=\"${jpa.pool.validationQuery}\"/>\n+    <property name=\"validationQueryTimeout\" value=\"${jpa.pool.validationQueryTimeout:-1}\"/>\n+    <property name=\"testOnBorrow\" value=\"${jpa.pool.testOnBorrow:true}\"/>\n+    <property name=\"testOnReturn\" value=\"${jpa.pool.testOnReturn:false}\"/>\n+    <property name=\"testWhileIdle\" value=\"${jpa.pool.testWhileIdle:false}\"/>\n+    <property name=\"timeBetweenEvictionRunsMillis\" value=\"${jpa.pool.timeBetweenEvictionRunsMillis:-1}\"/>\n+    <property name=\"numTestsPerEvictionRun\" value=\"${jpa.pool.numTestsPerEvictionRun:3}\"/>\n+    <property name=\"minEvictableIdleTimeMillis\" value=\"${jpa.pool.minEvictableIdleTimeMillis:1800000}\"/>\n+    <property name=\"removeAbandoned\" value=\"${jpa.pool.removeAbandoned:false}\"/>\n+    <property name=\"removeAbandonedTimeout\" value=\"${jpa.pool.removeAbandonedTimeout:300}\"/>\n+    <property name=\"logAbandoned\" value=\"${jpa.pool.logAbandoned:false}\"/>\n   </bean>\n \n   <bean id=\"entityManager\" class=\"org.springframework.orm.jpa.support.SharedEntityManagerBean\">"},{"sha":"295f8f4742a90cc1a87cb134f929f6789e6d24ff","filename":"core/src/main/resources/schedulingContext.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fresources%2FschedulingContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Fmain%2Fresources%2FschedulingContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FschedulingContext.xml?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -35,6 +35,8 @@ under the License.\n     </property>\n     <property name=\"quartzProperties\">\n       <props>\n+        <prop key=\"org.quartz.scheduler.idleWaitTime\">${quartz.scheduler.idleWaitTime:30000}</prop>\n+        \n         <prop key=\"org.quartz.jobStore.misfireThreshold\">6000000</prop>\n         <prop key=\"org.quartz.jobStore.driverDelegateClass\">${quartz.jobstore}</prop>\n "},{"sha":"c5e2fc97795c141357f365004df21e06ec725a66","filename":"core/src/test/java/org/apache/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -45,7 +45,7 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class ReportTestITCase extends AbstractTest {\n \n-    public ReportTO createReport(final ReportTO report) {\n+    private ReportTO createReport(final ReportTO report) {\n         Response response = reportService.create(report);\n         assertCreated(response);\n         return getObject(response, ReportTO.class, reportService);\n@@ -186,7 +186,8 @@ public void executeAndExport() throws IOException {\n             assertNotNull(reportTO.getExecutions());\n \n             i++;\n-        } while (!ReportExecStatus.SUCCESS.name().equals(reportTO.getExecutions().get(0).getStatus()) && i < maxit);\n+        } while (reportTO.getExecutions().isEmpty()\n+                || (!ReportExecStatus.SUCCESS.name().equals(reportTO.getExecutions().get(0).getStatus()) && i < maxit));\n         assertEquals(ReportExecStatus.SUCCESS.name(), reportTO.getExecutions().get(0).getStatus());\n \n         long execId = reportTO.getExecutions().get(0).getId();"},{"sha":"ced8fa848b78c1ba429913b3cb0d4aba9b3fa26b","filename":"core/src/test/resources/mysql/persistence.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fmysql%2Fpersistence.properties?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -19,6 +19,9 @@ jpa.url=jdbc:mysql://localhost:3306/syncope?characterEncoding=UTF-8\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.MySQLDictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_mysql.sql\n logback.sql=mysql.sql"},{"sha":"009312b64640c033dd0e80e724d3b3ded145b1d4","filename":"core/src/test/resources/oracle/persistence.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Foracle%2Fpersistence.properties?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -19,7 +19,10 @@ jpa.url=jdbc:oracle:thin:@pioppo:1521:orcl\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.OracleDictionary\n+jpa.pool.validationQuery=SELECT 1 FROM DUAL\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.oracle.OracleDelegate\n+quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_oracle.sql\n logback.sql=oracle.sql\n database.schema=SYNCOPE"},{"sha":"fcf8688bb3245258ec7ed559f89da1160c5a3bdf","filename":"core/src/test/resources/persistence.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fpersistence.properties?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -19,6 +19,9 @@ jpa.url=jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\n jpa.username=sa\n jpa.password=\n jpa.dialect=org.apache.openjpa.jdbc.sql.H2Dictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n+quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_h2.sql\n logback.sql=h2.sql"},{"sha":"0ece7273208a0df34169b436bb039d2e9fe94acb","filename":"core/src/test/resources/postgres/persistence.properties","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fpostgres%2Fpersistence.properties?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -19,6 +19,9 @@ jpa.url=jdbc:postgresql://localhost:5432/syncope\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.PostgresDictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n+quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_postgres.sql\n-logback.sql=postgresql.sql\n\\ No newline at end of file\n+logback.sql=postgresql.sql"},{"sha":"f3d03a98e6233b174e52758f9a18f551fce394e0","filename":"core/src/test/resources/sqlserver/persistence.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fsqlserver%2Fpersistence.properties?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -20,6 +20,9 @@ jpa.url=jdbc:sqlserver://acacia:1433;database=syncope;selectMethod=cursor;sendSt\n jpa.username=syncope\n jpa.password=syncope\n jpa.dialect=org.apache.openjpa.jdbc.sql.SQLServerDictionary\n+jpa.pool.validationQuery=SELECT 1\n+#note: other connection pool settings can also be configured here, see persistenceContext.xml\n quartz.jobstore=org.quartz.impl.jdbcjobstore.MSSQLDelegate\n+quartz.scheduler.idleWaitTime=5000\n quartz.sql=tables_sqlServer.sql\n logback.sql=sqlserver.sql"},{"sha":"636f7471333fb2a5ce28afa8018323999b13e262","filename":"pom.xml","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7126dd25b1bb769b55cc48fc6613eeec531bec04/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7126dd25b1bb769b55cc48fc6613eeec531bec04/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=7126dd25b1bb769b55cc48fc6613eeec531bec04","patch":"@@ -321,7 +321,8 @@ under the License.\n \n     <openjpa.version>2.2.2</openjpa.version>\n     <bval.version>0.5</bval.version>\n-        \n+    <commons-dbcp.version>1.4</commons-dbcp.version>\n+\n     <cocoon.version>3.0.0-alpha-3</cocoon.version>\n \n     <wicket.version>6.12.0</wicket.version>\n@@ -490,6 +491,12 @@ under the License.\n         <artifactId>openjpa-persistence-jdbc</artifactId>\n         <version>${openjpa.version}</version>\n       </dependency>\n+\n+      <dependency>\n+        <groupId>commons-dbcp</groupId>\n+        <artifactId>commons-dbcp</artifactId>\n+        <version>${commons-dbcp.version}</version>\n+      </dependency>\n       \n       <dependency>\n         <groupId>javax.validation</groupId>"}]}