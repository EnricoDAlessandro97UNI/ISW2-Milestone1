{"sha":"5b2ce7178634958a889ae27eb2cef371c1f14d5d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjViMmNlNzE3ODYzNDk1OGE4ODlhZTI3ZWIyY2VmMzcxYzFmMTRkNWQ=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2017-05-24T14:54:51Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2017-05-24T14:55:52Z"},"message":"[SYNCOPE-1094] fixed through pdfbox best practices","tree":{"sha":"8c0940069e5c32ffdd9204878624848b8d31ea43","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8c0940069e5c32ffdd9204878624848b8d31ea43"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5b2ce7178634958a889ae27eb2cef371c1f14d5d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5b2ce7178634958a889ae27eb2cef371c1f14d5d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5b2ce7178634958a889ae27eb2cef371c1f14d5d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5b2ce7178634958a889ae27eb2cef371c1f14d5d/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"73c7704002f96a8732a34e664049d24e704e88b7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/73c7704002f96a8732a34e664049d24e704e88b7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/73c7704002f96a8732a34e664049d24e704e88b7"}],"stats":{"total":17,"additions":14,"deletions":3},"files":[{"sha":"da00856b918e2ea2fadf8b6cd06bf99278eb6a7c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/preview/BinaryPDFPreviewer.java","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5b2ce7178634958a889ae27eb2cef371c1f14d5d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5b2ce7178634958a889ae27eb2cef371c1f14d5d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2Fpreview%2FBinaryPDFPreviewer.java?ref=5b2ce7178634958a889ae27eb2cef371c1f14d5d","patch":"@@ -24,7 +24,11 @@\n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n import java.io.Serializable;\n+import org.apache.pdfbox.cos.COSObject;\n+import org.apache.pdfbox.io.MemoryUsageSetting;\n+import org.apache.pdfbox.pdmodel.DefaultResourceCache;\n import org.apache.pdfbox.pdmodel.PDDocument;\n+import org.apache.pdfbox.pdmodel.graphics.PDXObject;\n import org.apache.pdfbox.rendering.ImageType;\n import org.apache.pdfbox.rendering.PDFRenderer;\n import org.apache.syncope.client.console.annotations.BinaryPreview;\n@@ -44,7 +48,7 @@ public class BinaryPDFPreviewer extends AbstractBinaryPreviewer {\n \n     private static final int IMG_SIZE = 300;\n \n-    private static final float RESOLUTION = 96;\n+    private static final float DPI = 100;\n \n     private static final ImageType IMAGE_TYPE = ImageType.RGB;\n \n@@ -60,11 +64,18 @@ public Component preview(final byte[] uploadedBytes) {\n \n         PDDocument document = null;\n         try {\n-            document = PDDocument.load(new ByteArrayInputStream(uploadedBytes));\n+            document = PDDocument.load(new ByteArrayInputStream(uploadedBytes), MemoryUsageSetting.setupTempFileOnly());\n+            document.setResourceCache(new DefaultResourceCache() {\n+\n+                @Override\n+                public void put(final COSObject indirect, final PDXObject xobject) throws IOException {\n+                }\n+\n+            });\n             if (document.isEncrypted()) {\n                 LOG.info(\"Document is encrypted, no preview is possible\");\n             } else {\n-                firstPage = new PDFRenderer(document).renderImage(0, RESOLUTION, IMAGE_TYPE);\n+                firstPage = new PDFRenderer(document).renderImageWithDPI(0, DPI, IMAGE_TYPE);\n             }\n         } catch (IOException e) {\n             LOG.error(\"While generating thumbnail from first page\", e);"}]}