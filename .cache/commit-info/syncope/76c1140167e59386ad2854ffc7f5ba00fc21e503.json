{"sha":"76c1140167e59386ad2854ffc7f5ba00fc21e503","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc2YzExNDAxNjdlNTkzODZhZDI4NTRmZmM3ZjViYTAwZmMyMWU1MDM=","commit":{"author":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2017-12-14T15:29:59Z"},"committer":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2017-12-14T15:41:05Z"},"message":"[SYNCOPE-1246] Replaced 'property' dropdown field with an autocomplete textfield in search components","tree":{"sha":"0b89840fb23b0e9e93f930406c84f7b1afe49e2e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0b89840fb23b0e9e93f930406c84f7b1afe49e2e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/76c1140167e59386ad2854ffc7f5ba00fc21e503","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/76c1140167e59386ad2854ffc7f5ba00fc21e503","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/76c1140167e59386ad2854ffc7f5ba00fc21e503","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/76c1140167e59386ad2854ffc7f5ba00fc21e503/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"265b2a7d7b72634716c58be8d9890a0244888367","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/265b2a7d7b72634716c58be8d9890a0244888367","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/265b2a7d7b72634716c58be8d9890a0244888367"}],"stats":{"total":223,"additions":172,"deletions":51},"files":[{"sha":"933defcb37315ef8531d3dc4df1316ac775ca9e8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=76c1140167e59386ad2854ffc7f5ba00fc21e503","patch":"@@ -23,7 +23,9 @@\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n@@ -33,6 +35,7 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.wicket.event.IEventSink;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n@@ -77,6 +80,8 @@ public abstract class AbstractSearchPanel extends Panel {\n \n     protected final boolean enableSearch;\n \n+    protected final GroupRestClient groupRestClient = new GroupRestClient();\n+\n     public abstract static class Builder<T extends AbstractSearchPanel> implements Serializable {\n \n         private static final long serialVersionUID = 6308997285778809578L;\n@@ -120,6 +125,12 @@ protected AbstractSearchPanel(\n \n         super(id);\n         populate();\n+        Pair<IModel<Map<String, String>>, Integer> groupInfo =\n+                Pair.of(groupNames, groupRestClient.search(\"/\",\n+                        null,\n+                        1,\n+                        1,\n+                        new SortParam<>(\"name\", true)).getTotalCount());\n \n         this.model = builder.model;\n         this.typeKind = kind;\n@@ -136,7 +147,7 @@ protected AbstractSearchPanel(\n         final SearchClausePanel searchClausePanel = new SearchClausePanel(\"panel\", \"panel\",\n                 Model.of(new SearchClause()),\n                 required,\n-                types, anames, dnames, groupNames, roleNames, resourceNames);\n+                types, anames, dnames, groupInfo, roleNames, resourceNames);\n \n         if (enableSearch) {\n             searchClausePanel.enableSearch(builder.resultContainer);"},{"sha":"0a94110976065bc49d3612583e36797be1d68bed","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSearchPanel.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java?ref=76c1140167e59386ad2854ffc7f5ba00fc21e503","patch":"@@ -22,7 +22,6 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n@@ -33,7 +32,7 @@ public class AnyObjectSearchPanel extends AbstractSearchPanel {\n \n     private static final long serialVersionUID = -1769527800450203738L;\n \n-    private final GroupRestClient groupRestClient = new GroupRestClient();\n+    public static final int MAX_GROUP_LIST_CARDINALITY = 30;\n \n     public static class Builder extends AbstractSearchPanel.Builder<AnyObjectSearchPanel> {\n \n@@ -80,10 +79,15 @@ protected List<SearchClause.Type> load() {\n \n             @Override\n             protected Map<String, String> load() {\n-                List<GroupTO> groupTOs = groupRestClient.search(\"/\", null, -1, -1, new SortParam<>(\"name\", true), null);\n-\n-                final Map<String, String> result = new HashMap<>(groupTOs.size());\n-                for (GroupTO group : groupTOs) {\n+                List<GroupTO> res = groupRestClient.search(\"/\",\n+                        null,\n+                        1,\n+                        MAX_GROUP_LIST_CARDINALITY,\n+                        new SortParam<>(\"name\", true),\n+                        null);\n+\n+                final Map<String, String> result = new HashMap<>(res.size());\n+                for (GroupTO group : res) {\n                     result.put(group.getKey(), group.getName());\n                 }\n "},{"sha":"6b92e120399056ac208a2a97380d61ce8ecb24f0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":123,"deletions":40,"changes":163,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=76c1140167e59386ad2854ffc7f5ba00fc21e503","patch":"@@ -23,21 +23,28 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.search.SearchClause.Comparator;\n import org.apache.syncope.client.console.panels.search.SearchClause.Operator;\n import org.apache.syncope.client.console.panels.search.SearchClause.Type;\n+import org.apache.syncope.client.console.rest.GroupRestClient;\n import org.apache.syncope.client.console.rest.RelationshipTypeRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxEventBehavior;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.wicket.AttributeModifier;\n@@ -50,6 +57,7 @@\n import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEventSink;\n+import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.CheckBox;\n import org.apache.wicket.markup.html.form.Form;\n@@ -74,7 +82,7 @@ public class SearchClausePanel extends FieldPanel<SearchClause> {\n \n     private final IModel<List<String>> dnames;\n \n-    private final IModel<Map<String, String>> groupNames;\n+    private final Pair<IModel<Map<String, String>>, Integer> groupInfo;\n \n     private final IModel<List<String>> roleNames;\n \n@@ -94,6 +102,8 @@ public class SearchClausePanel extends FieldPanel<SearchClause> {\n \n     private IEventSink resultContainer;\n \n+    private final GroupRestClient groupRestClient = new GroupRestClient();\n+\n     public SearchClausePanel(\n             final String id,\n             final String name,\n@@ -102,7 +112,7 @@ public SearchClausePanel(\n             final IModel<List<SearchClause.Type>> types,\n             final IModel<Map<String, PlainSchemaTO>> anames,\n             final IModel<List<String>> dnames,\n-            final IModel<Map<String, String>> groupNames,\n+            final Pair<IModel<Map<String, String>>, Integer> groupInfo,\n             final IModel<List<String>> roleNames,\n             final IModel<List<String>> resourceNames) {\n \n@@ -114,7 +124,7 @@ public SearchClausePanel(\n         this.types = types;\n         this.anames = anames;\n         this.dnames = dnames;\n-        this.groupNames = groupNames;\n+        this.groupInfo = groupInfo;\n         this.roleNames = roleNames;\n         this.resourceNames = resourceNames;\n \n@@ -133,7 +143,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         };\n \n         searchButtonFragment = new Fragment(\"operator\", \"searchButtonFragment\", this);\n-        searchButtonFragment.add(searchButton.setEnabled(false));\n+        searchButtonFragment.add(searchButton.setEnabled(false).setVisible(false));\n \n         operatorFragment = new Fragment(\"operator\", \"operatorFragment\", this);\n \n@@ -199,7 +209,7 @@ protected List<String> load() {\n                         return names;\n \n                     case GROUP_MEMBERSHIP:\n-                        final List<String> groups = groupNames.getObject().keySet().\n+                        final List<String> groups = groupInfo.getLeft().getObject().values().\n                                 stream().collect(Collectors.toList());\n                         Collections.sort(groups);\n                         return groups;\n@@ -229,6 +239,7 @@ protected List<String> load() {\n     public void enableSearch(final IEventSink resultContainer) {\n         this.resultContainer = resultContainer;\n         this.searchButton.setEnabled(true);\n+        this.searchButton.setVisible(true);\n \n         field.add(AttributeModifier.replace(\n                 \"onkeydown\",\n@@ -354,19 +365,88 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             operatorContainer.add(searchButtonFragment);\n         }\n \n-        final AjaxDropDownChoicePanel<String> property = new AjaxDropDownChoicePanel<>(\n-                \"property\", \"property\", new PropertyModel<>(searchClause, \"property\"));\n-        property.hideLabel().setRequired(required).setOutputMarkupId(true);\n-        property.setChoices(properties);\n-        property.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+        final AjaxTextFieldPanel property = new AjaxTextFieldPanel(\n+                \"property\",\n+                \"property\",\n+                new PropertyModel<String>(searchClause, \"property\"),\n+                false);\n+        property.hideLabel().setOutputMarkupId(true).setEnabled(true);\n+        property.setChoices(properties.getObject());\n+        field.add(property);\n \n-            private static final long serialVersionUID = -1107858522700306810L;\n+        property.getField().add(AttributeModifier.replace(\n+                \"onkeydown\",\n+                Model.of(\"if(event.keyCode == 13) { event.preventDefault(); }\")));\n+\n+        property.getField().add(new IndicatorAjaxEventBehavior(\"onkeyup\") {\n+\n+            private static final long serialVersionUID = -7866120562087857309L;\n \n             @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                if (field.getModel().getObject() == null || field.getModel().getObject().getType() == null) {\n+                    return;\n+                }\n+\n+                if (field.getModel().getObject().getType() == Type.GROUP_MEMBERSHIP) {\n+                    target.focusComponent(null);\n+                    property.getField().inputChanged();\n+                    property.getField().validate();\n+                    if (property.getField().isValid()) {\n+                        property.getField().valid();\n+                        property.getField().updateModel();\n+                        String[] inputAsArray = property.getField().getInputAsArray();\n+\n+                        if (StringUtils.isBlank(property.getField().getInput())\n+                                || inputAsArray.length == 0) {\n+                            property.setChoices(properties.getObject());\n+                        } else {\n+                            String inputValue = (inputAsArray.length > 1 && inputAsArray[1] != null)\n+                                    ? inputAsArray[1]\n+                                    : property.getField().getInput();\n+                            inputValue = (inputValue.startsWith(\"*\") && !inputValue.endsWith(\"*\"))\n+                                    ? inputValue + \"*\"\n+                                    : (!inputValue.startsWith(\"*\") && inputValue.endsWith(\"*\"))\n+                                    ? \"*\" + inputValue\n+                                    : (inputValue.startsWith(\"*\") && inputValue.endsWith(\"*\")\n+                                    ? inputValue : \"*\" + inputValue + \"*\");\n+\n+                            if (groupInfo.getRight() > AnyObjectSearchPanel.MAX_GROUP_LIST_CARDINALITY) {\n+                                List<GroupTO> filteredGroups =\n+                                        groupRestClient.search(\"/\",\n+                                                SyncopeClient.getGroupSearchConditionBuilder().\n+                                                        is(\"name\").equalToIgnoreCase(inputValue).\n+                                                        query(),\n+                                                1,\n+                                                AnyObjectSearchPanel.MAX_GROUP_LIST_CARDINALITY,\n+                                                new SortParam<>(\"name\", true),\n+                                                null);\n+                                Collection<String> newList =\n+                                        CollectionUtils.collect(filteredGroups,\n+                                                new Transformer<GroupTO, String>() {\n+\n+                                            @Override\n+                                            public String transform(final GroupTO input) {\n+                                                return input.getName();\n+                                            }\n+                                        });\n+\n+                                final List<String> names = new ArrayList<>(newList);\n+                                Collections.sort(names);\n+                                property.setChoices(names);\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+\n+            @Override\n+            protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n+                super.updateAjaxAttributes(attributes);\n+\n+                attributes.getAjaxCallListeners().clear();\n             }\n         });\n-        field.add(property);\n \n         final AjaxDropDownChoicePanel<SearchClause.Comparator> comparator = new AjaxDropDownChoicePanel<>(\n                 \"comparator\", \"comparator\", new PropertyModel<>(searchClause, \"comparator\"));\n@@ -459,12 +539,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n \n                 if (type.getModelObject() == SearchClause.Type.RELATIONSHIP) {\n-                    if (comparator.getModelObject() == SearchClause.Comparator.EQUALS\n-                            || comparator.getModelObject() == SearchClause.Comparator.NOT_EQUALS) {\n-                        property.setEnabled(false);\n-                    } else {\n-                        property.setEnabled(true);\n-                    }\n+                    property.setEnabled(true);\n \n                     final SearchClause searchClause = new SearchClause();\n                     searchClause.setType(Type.valueOf(type.getDefaultModelObjectAsString()));\n@@ -483,7 +558,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n     private void setFieldAccess(\n             final Type type,\n-            final AjaxDropDownChoicePanel<String> property,\n+            final AjaxTextFieldPanel property,\n             final FieldPanel<Comparator> comparator,\n             final FieldPanel<String> value) {\n \n@@ -504,19 +579,28 @@ private void setFieldAccess(\n                         value.setEnabled(false);\n                         value.setModelObject(StringUtils.EMPTY);\n                     }\n-                    property.setChoiceRenderer(new DefaultChoiceRender());\n+\n+                    // reload properties list\n+                    properties.detach();\n+                    property.setChoices(properties.getObject());\n                     break;\n \n                 case ROLE_MEMBERSHIP:\n-                    property.setChoiceRenderer(new DefaultChoiceRender());\n                     value.setEnabled(false);\n                     value.setModelObject(StringUtils.EMPTY);\n+\n+                    // reload properties list\n+                    properties.detach();\n+                    property.setChoices(properties.getObject());\n                     break;\n \n                 case GROUP_MEMBERSHIP:\n-                    property.setChoiceRenderer(new GroupChoiceRender());\n                     value.setEnabled(false);\n                     value.setModelObject(StringUtils.EMPTY);\n+\n+                    // reload properties list\n+                    properties.detach();\n+                    property.setChoices(properties.getObject());\n                     break;\n \n                 case GROUP_MEMBER:\n@@ -526,23 +610,22 @@ private void setFieldAccess(\n                     break;\n \n                 case RESOURCE:\n-                    property.setChoiceRenderer(new DefaultChoiceRender());\n                     value.setEnabled(false);\n                     value.setModelObject(StringUtils.EMPTY);\n+\n+                    // reload properties list\n+                    properties.detach();\n+                    property.setChoices(properties.getObject());\n                     break;\n \n                 case RELATIONSHIP:\n-                    property.setChoiceRenderer(new DefaultChoiceRender());\n-                    if (comparator.getModelObject() == SearchClause.Comparator.IS_NULL\n-                            || comparator.getModelObject() == SearchClause.Comparator.IS_NOT_NULL) {\n-                        value.setEnabled(false);\n-                        value.setModelObject(StringUtils.EMPTY);\n-                        property.setEnabled(true);\n-                    } else {\n-                        value.setEnabled(true);\n-                        property.setEnabled(false);\n-                        property.setModelObject(null);\n-                    }\n+                    value.setEnabled(true);\n+                    value.setModelObject(StringUtils.EMPTY);\n+                    property.setEnabled(true);\n+\n+                    // reload properties list\n+                    properties.detach();\n+                    property.setChoices(properties.getObject());\n                     break;\n \n                 default:\n@@ -625,7 +708,7 @@ public Object getDisplayValue(final SearchClause.Comparator object) {\n                                 break;\n \n                             case NOT_EQUALS:\n-                                display = \"NOT WITH\";\n+                                display = \"WITHOUT\";\n                                 break;\n \n                             default:\n@@ -662,7 +745,7 @@ public Object getDisplayValue(final SearchClause.Comparator object) {\n                                 break;\n \n                             case NOT_EQUALS:\n-                                display = \"NOT WITH\";\n+                                display = \"WITHOUT\";\n                                 break;\n \n                             default:\n@@ -697,7 +780,7 @@ public SearchClause.Comparator getObject(\n                         break;\n                     case \"HAS NOT\":\n                     case \"NOT IN\":\n-                    case \"NOT WITH\":\n+                    case \"WITHOUT\":\n                         res = SearchClause.Comparator.NOT_EQUALS;\n                         break;\n                     case \"NULL\":\n@@ -739,7 +822,7 @@ public SearchClause.Comparator getObject(\n     @Override\n     public FieldPanel<SearchClause> clone() {\n         final SearchClausePanel panel = new SearchClausePanel(\n-                getId(), name, null, required, types, anames, dnames, groupNames, roleNames, resourceNames);\n+                getId(), name, null, required, types, anames, dnames, groupInfo, roleNames, resourceNames);\n         panel.setReadOnly(this.isReadOnly());\n         panel.setRequired(this.isRequired());\n         if (searchButton.isEnabled()) {\n@@ -784,7 +867,7 @@ public String getObject(final String id, final IModel<? extends List<? extends S\n \n         @Override\n         public Object getDisplayValue(final String object) {\n-            return groupNames.getObject().get(object);\n+            return groupInfo.getLeft().getObject().get(object);\n         }\n     }\n "},{"sha":"60ec367216ce5e6b98386f7d1c319892a5c4dbf2","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=76c1140167e59386ad2854ffc7f5ba00fc21e503","patch":"@@ -69,6 +69,23 @@ public List<GroupTO> search(\n         return result;\n     }\n \n+    public PagedResult<GroupTO> search(\n+            final String realm,\n+            final String fiql,\n+            final int page,\n+            final int size,\n+            final SortParam<String> sort) {\n+\n+        PagedResult<GroupTO> res;\n+        do {\n+            res = getService(GroupService.class).\n+                    search(new AnyQuery.Builder().realm(realm).fiql(fiql).page(page).size(size).\n+                            orderBy(toOrderBy(sort)).details(false).build());\n+        } while (page == -1 && size == -1 && res.getNext() != null);\n+\n+        return res;\n+    }\n+\n     public void bulkMembersAction(final String key, final BulkMembersActionType actionType) {\n         getService(GroupService.class).bulkMembersAction(key, actionType);\n     }"},{"sha":"16b7db5a42e28b2985f51b258c8a7bd5fc08be27","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=76c1140167e59386ad2854ffc7f5ba00fc21e503","patch":"@@ -59,6 +59,7 @@ public AjaxTextFieldPanel(\n         final AutoCompleteSettings settings = new AutoCompleteSettings();\n         settings.setShowCompleteListOnFocusGain(true);\n         settings.setShowListOnEmptyInput(true);\n+        settings.setCssClassName(\"custom-autocomplete-box\");\n \n         field = new AutoCompleteTextField<String>(\"textField\", model, settings) {\n "},{"sha":"294c9787c71ed8833cbc93a9e098bd7d7288c4a9","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/76c1140167e59386ad2854ffc7f5ba00fc21e503/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=76c1140167e59386ad2854ffc7f5ba00fc21e503","patch":"@@ -805,19 +805,19 @@ START - Search - AjaxDateTimePicker\n }\n \n .clause .type{\n-  width: 120px !important;\n+  width: 170px !important;\n }\n \n .clause .type button{\n-  width: 120px !important;\n+  width: 170px !important;\n }\n \n .clause .property{\n-  width: 190px;\n+  width: 300px;\n }\n \n .clause .property button{\n-  width: 190px;\n+  width: 300px;\n }\n \n .clause .comparator{\n@@ -857,6 +857,11 @@ START - Search - AjaxDateTimePicker\n .searchBox .input-group{\n   margin-top: 1px;\n }\n+\n+.custom-autocomplete-box li.selected {\n+  background-color: #eee;\n+}\n+\n /**\n END - Search - AjaxDateTimePicker\n */"}]}