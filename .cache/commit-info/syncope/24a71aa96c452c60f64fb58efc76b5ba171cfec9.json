{"sha":"24a71aa96c452c60f64fb58efc76b5ba171cfec9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI0YTcxYWE5NmM0NTJjNjBmNjRmYjU4ZWZjNzZiNWJhMTcxY2ZlYzk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-14T11:37:02Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-14T11:37:14Z"},"message":"[SYNCOPE-1008] Trimming all the way","tree":{"sha":"11a6159d7d0480c34762f545189b6c58ca6a92b6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/11a6159d7d0480c34762f545189b6c58ca6a92b6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/24a71aa96c452c60f64fb58efc76b5ba171cfec9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/24a71aa96c452c60f64fb58efc76b5ba171cfec9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/24a71aa96c452c60f64fb58efc76b5ba171cfec9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/24a71aa96c452c60f64fb58efc76b5ba171cfec9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"af37b2ba93809d61fd0b65ef6f106c4e5f281ecf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/af37b2ba93809d61fd0b65ef6f106c4e5f281ecf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/af37b2ba93809d61fd0b65ef6f106c4e5f281ecf"}],"stats":{"total":61,"additions":30,"deletions":31},"files":[{"sha":"ab1667ef32fbae775fd25d0c3f4d7799cfe3bcaa","filename":"installer/src/main/java/org/apache/syncope/installer/validators/AbstractValidator.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a71aa96c452c60f64fb58efc76b5ba171cfec9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FAbstractValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a71aa96c452c60f64fb58efc76b5ba171cfec9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FAbstractValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FAbstractValidator.java?ref=24a71aa96c452c60f64fb58efc76b5ba171cfec9","patch":"@@ -21,8 +21,4 @@\n import com.izforge.izpack.api.installer.DataValidator;\n \n public abstract class AbstractValidator implements DataValidator {\n-\n-    protected boolean isEmpty(final String string) {\n-        return !(string != null && string.length() != 0);\n-    }\n }"},{"sha":"7f4c0c486917e213a6f01556e1c333b3b7c2d748","filename":"installer/src/main/java/org/apache/syncope/installer/validators/ArchetypeValidator.java","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a71aa96c452c60f64fb58efc76b5ba171cfec9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FArchetypeValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a71aa96c452c60f64fb58efc76b5ba171cfec9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FArchetypeValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FArchetypeValidator.java?ref=24a71aa96c452c60f64fb58efc76b5ba171cfec9","patch":"@@ -20,51 +20,52 @@\n \n import com.izforge.izpack.api.data.InstallData;\n import java.io.File;\n+import org.apache.commons.lang3.StringUtils;\n \n public class ArchetypeValidator extends AbstractValidator {\n \n     private StringBuilder error;\n \n     @Override\n     public Status validateData(final InstallData installData) {\n-        final String mavenDir = installData.getVariable(\"mvn.directory\");\n-        final String mavenGroupId = installData.getVariable(\"mvn.groupid\");\n-        final String mavenArtifactId = installData.getVariable(\"mvn.artifactid\");\n-        final String mavenSecretKey = installData.getVariable(\"mvn.secretkey\");\n-        final String mavenAnonymousKey = installData.getVariable(\"mvn.anonymous.key\");\n-        final String mavenLogDirectory = installData.getVariable(\"mvn.log.directory\");\n-        final String mavenBundleDirectory = installData.getVariable(\"mvn.bundle.directory\");\n+        final String mavenDir = StringUtils.trim(installData.getVariable(\"mvn.directory\"));\n+        final String mavenGroupId = StringUtils.trim(installData.getVariable(\"mvn.groupid\"));\n+        final String mavenArtifactId = StringUtils.trim(installData.getVariable(\"mvn.artifactid\"));\n+        final String mavenSecretKey = StringUtils.trim(installData.getVariable(\"mvn.secretkey\"));\n+        final String mavenAnonymousKey = StringUtils.trim(installData.getVariable(\"mvn.anonymous.key\"));\n+        final String mavenLogDirectory = StringUtils.trim(installData.getVariable(\"mvn.log.directory\"));\n+        final String mavenBundleDirectory = StringUtils.trim(installData.getVariable(\"mvn.bundle.directory\"));\n \n         boolean verified = true;\n         error = new StringBuilder(\"Required fields:\\n\");\n-        if (isEmpty(mavenDir)) {\n+        if (StringUtils.isBlank(mavenDir)) {\n             error.append(\"Maven home directory\\n\");\n             verified = false;\n         } else if (!new File(mavenDir + \"/bin/mvn\").exists()) {\n             error.append(\"Maven home directory not valid, check it please...\\n\");\n             verified = false;\n         }\n-        if (isEmpty(mavenGroupId)) {\n+        if (StringUtils.isBlank(mavenGroupId)) {\n             error.append(\"GroupID\\n\");\n             verified = false;\n         }\n-        if (isEmpty(mavenArtifactId)) {\n+        if (StringUtils.isBlank(mavenArtifactId)) {\n             error.append(\"ArtifactID\\n\");\n             verified = false;\n         }\n-        if (isEmpty(mavenSecretKey)) {\n+        if (StringUtils.isBlank(mavenSecretKey)) {\n             error.append(\"SecretKey\\n\");\n             verified = false;\n         }\n-        if (isEmpty(mavenAnonymousKey)) {\n+        if (StringUtils.isBlank(mavenAnonymousKey)) {\n             error.append(\"AnonymousKey\\n\");\n             verified = false;\n         }\n-        if (isEmpty(mavenLogDirectory)) {\n+        if (StringUtils.isBlank(mavenLogDirectory)) {\n             error.append(\"Logs directory\\n\");\n             verified = false;\n         }\n-        if (isEmpty(mavenBundleDirectory)) {\n+        if (StringUtils.isBlank(mavenBundleDirectory)) {\n             error.append(\"Bundles directory\\n\");\n             verified = false;\n         }"},{"sha":"adc7fa54138a1af2ca7966100e95a81dc461c691","filename":"installer/src/main/java/org/apache/syncope/installer/validators/ContainerValidator.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a71aa96c452c60f64fb58efc76b5ba171cfec9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FContainerValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a71aa96c452c60f64fb58efc76b5ba171cfec9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FContainerValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FContainerValidator.java?ref=24a71aa96c452c60f64fb58efc76b5ba171cfec9","patch":"@@ -20,6 +20,7 @@\n \n import com.izforge.izpack.api.data.InstallData;\n import java.io.File;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.installer.enums.Containers;\n import org.apache.syncope.installer.utilities.HttpUtils;\n \n@@ -50,19 +51,19 @@ public Status validateData(final InstallData installData) {\n \n                 boolean verified = true;\n                 error = new StringBuilder(\"Required fields:\\n\");\n-                if (isEmpty(tomcatHost)) {\n+                if (StringUtils.isBlank(tomcatHost)) {\n                     error.append(\"Tomcat host\\n\");\n                     verified = false;\n                 }\n-                if (isEmpty(tomcatPort)) {\n+                if (StringUtils.isBlank(tomcatPort)) {\n                     error.append(\"Tomcat port\\n\");\n                     verified = false;\n                 }\n-                if (isEmpty(tomcatUser)) {\n+                if (StringUtils.isBlank(tomcatUser)) {\n                     error.append(\"Tomcat user\\n\");\n                     verified = false;\n                 }\n-                if (isEmpty(tomcatPassword)) {\n+                if (StringUtils.isBlank(tomcatPassword)) {\n                     error.append(\"Tomcat password\\n\");\n                     verified = false;\n                 }\n@@ -82,23 +83,23 @@ public Status validateData(final InstallData installData) {\n             case JBOSS:\n                 boolean virified = true;\n                 error = new StringBuilder(\"Required fields:\\n\");\n-                if (isEmpty(jbossHost)) {\n+                if (StringUtils.isBlank(jbossHost)) {\n                     error.append(\"JBoss Host\\n\");\n                     virified = false;\n                 }\n-                if (isEmpty(jbossPort)) {\n+                if (StringUtils.isBlank(jbossPort)) {\n                     error.append(\"JBoss Port\\n\");\n                     virified = false;\n                 }\n-                if (isEmpty(jbossJdbcModule)) {\n+                if (StringUtils.isBlank(jbossJdbcModule)) {\n                     error.append(\"JBoss JDBC module name\\n\");\n                     virified = false;\n                 }\n-                if (isEmpty(jbossAdminUsername)) {\n+                if (StringUtils.isBlank(jbossAdminUsername)) {\n                     error.append(\"JBoss admin username\\n\");\n                     virified = false;\n                 }\n-                if (isEmpty(jbossAdminPassword)) {\n+                if (StringUtils.isBlank(jbossAdminPassword)) {\n                     error.append(\"JBoss admin password\\n\");\n                     virified = false;\n                 }\n@@ -117,7 +118,7 @@ public Status validateData(final InstallData installData) {\n                 }\n             case GLASSFISH:\n                 error = new StringBuilder(\"Required fields:\\n\");\n-                if (isEmpty(glassfishDir)) {\n+                if (StringUtils.isBlank(glassfishDir)) {\n                     error.append(\"Glassfish directory\\n\");\n                     return Status.ERROR;\n                 }"},{"sha":"b167c30e4696a8e292a89241e248e7f2e3e75a6e","filename":"installer/src/main/java/org/apache/syncope/installer/validators/PersistenceValidator.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/24a71aa96c452c60f64fb58efc76b5ba171cfec9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FPersistenceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/24a71aa96c452c60f64fb58efc76b5ba171cfec9/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FPersistenceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FPersistenceValidator.java?ref=24a71aa96c452c60f64fb58efc76b5ba171cfec9","patch":"@@ -21,6 +21,7 @@\n import com.izforge.izpack.api.data.InstallData;\n import java.sql.Driver;\n import java.util.Properties;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.installer.enums.DBs;\n import org.apache.syncope.installer.utilities.DriverLoader;\n \n@@ -63,15 +64,15 @@ public Status validateData(final InstallData installData) {\n \n         boolean verified = true;\n         error = new StringBuilder(\"Required fields:\\n\");\n-        if (isEmpty(persistenceUrl)) {\n+        if (StringUtils.isBlank(persistenceUrl)) {\n             error.append(\"Persistence URL\\n\");\n             verified = false;\n         }\n-        if (isEmpty(persistenceDbuser)) {\n+        if (StringUtils.isBlank(persistenceDbuser)) {\n             error.append(\"Persistence user\\n\");\n             verified = false;\n         }\n-        if (isEmpty(persistenceDbPassword)) {\n+        if (StringUtils.isBlank(persistenceDbPassword)) {\n             error.append(\"Persistence password\\n\");\n             verified = false;\n         }"}]}