{"sha":"63108c8f89ba92c5517133545df2350971c703b5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjYzMTA4YzhmODliYTkyYzU1MTcxMzM1NDVkZjIzNTA5NzFjNzAzYjU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-27T09:41:00Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-27T09:41:00Z"},"message":"[SYNCOPE-666] Final JPA tests","tree":{"sha":"80fe8a4f6ba865a83db627c7200621fcab6c54d7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/80fe8a4f6ba865a83db627c7200621fcab6c54d7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/63108c8f89ba92c5517133545df2350971c703b5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/63108c8f89ba92c5517133545df2350971c703b5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/63108c8f89ba92c5517133545df2350971c703b5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/63108c8f89ba92c5517133545df2350971c703b5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"419fccfeba9ebd63112e98e00350e5be90706ce8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/419fccfeba9ebd63112e98e00350e5be90706ce8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/419fccfeba9ebd63112e98e00350e5be90706ce8"}],"stats":{"total":746,"additions":522,"deletions":224},"files":[{"sha":"4f4a3ecf8cce51de2c2b9e9fd820e7c32686736d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractAttr.java","status":"added","additions":130,"deletions":0,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractAttr.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.entity;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.persistence.Transient;\n+import org.apache.syncope.core.persistence.api.entity.Any;\n+import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n+import org.apache.syncope.core.persistence.api.entity.Attr;\n+import org.apache.syncope.core.persistence.api.entity.DerSchema;\n+import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n+import org.apache.syncope.core.persistence.api.entity.Schema;\n+import org.apache.syncope.core.persistence.api.entity.VirSchema;\n+import org.apache.syncope.core.persistence.api.entity.anyobject.AMembership;\n+import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n+import org.apache.syncope.core.persistence.api.entity.group.TypeExtension;\n+import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+\n+public abstract class AbstractAttr<S extends Schema, O extends Any<?, ?, ?>>\n+        extends AbstractEntity<Long> implements Attr<S, O> {\n+\n+    private static final long serialVersionUID = -7722134717360731874L;\n+\n+    @Transient\n+    private Set<PlainSchema> allowedPlainSchemas;\n+\n+    @Transient\n+    private Set<DerSchema> allowedDerSchemas;\n+\n+    @Transient\n+    private Set<VirSchema> allowedVirSchemas;\n+\n+    private void populateClasses(final Collection<? extends AnyTypeClass> anyTypeClasses) {\n+        synchronized (this) {\n+            if (getSchema() instanceof PlainSchema) {\n+                if (allowedPlainSchemas == null) {\n+                    allowedPlainSchemas = new HashSet<>();\n+                }\n+                for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n+                    allowedPlainSchemas.addAll(anyTypeClass.getPlainSchemas());\n+                }\n+            } else if (getSchema() instanceof DerSchema) {\n+                if (allowedDerSchemas == null) {\n+                    allowedDerSchemas = new HashSet<>();\n+                }\n+                for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n+                    allowedDerSchemas.addAll(anyTypeClass.getDerSchemas());\n+                }\n+            } else if (getSchema() instanceof VirSchema) {\n+                if (allowedVirSchemas == null) {\n+                    allowedVirSchemas = new HashSet<>();\n+                }\n+                for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n+                    allowedVirSchemas.addAll(anyTypeClass.getVirSchemas());\n+                }\n+            }\n+        }\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private Set<S> getAllowedSchemas() {\n+        Set<S> result = Collections.emptySet();\n+\n+        if (getSchema() instanceof PlainSchema) {\n+            if (allowedPlainSchemas == null) {\n+                allowedPlainSchemas = new HashSet<>();\n+            }\n+            result = (Set<S>) allowedPlainSchemas;\n+        } else if (getSchema() instanceof DerSchema) {\n+            if (allowedDerSchemas == null) {\n+                allowedDerSchemas = new HashSet<>();\n+            }\n+            result = (Set<S>) allowedDerSchemas;\n+        } else if (getSchema() instanceof VirSchema) {\n+            if (allowedVirSchemas == null) {\n+                allowedVirSchemas = new HashSet<>();\n+            }\n+            result = (Set<S>) allowedVirSchemas;\n+        }\n+\n+        return result;\n+    }\n+\n+    protected void checkSchema(final S schema) {\n+        if (schema == null || getOwner() == null) {\n+            throw new IllegalStateException(\"First set owner then schema and finally add values\");\n+        }\n+\n+        populateClasses(getOwner().getType().getClasses());\n+        populateClasses(getOwner().getAuxClasses());\n+        if (getOwner() instanceof User) {\n+            for (UMembership memb : ((User) getOwner()).getMemberships()) {\n+                for (TypeExtension typeExtension : memb.getRightEnd().getTypeExtensions()) {\n+                    populateClasses(typeExtension.getAuxClasses());\n+                }\n+            }\n+        }\n+        if (getOwner() instanceof AnyObject) {\n+            for (AMembership memb : ((AnyObject) getOwner()).getMemberships()) {\n+                for (TypeExtension typeExtension : memb.getRightEnd().getTypeExtensions()) {\n+                    populateClasses(typeExtension.getAuxClasses());\n+                }\n+            }\n+        }\n+\n+        if (!getAllowedSchemas().contains(schema)) {\n+            throw new IllegalArgumentException(schema + \" not allowed for this instance\");\n+        }\n+    }\n+}"},{"sha":"fba234d59a42948ab6b75dbbb6fb9ca713e90843","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractDerAttr.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractDerAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractDerAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractDerAttr.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -33,7 +33,8 @@\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n \n @MappedSuperclass\n-public abstract class AbstractDerAttr<O extends Any<?, ?, ?>> extends AbstractEntity<Long> implements DerAttr<O> {\n+public abstract class AbstractDerAttr<O extends Any<?, ?, ?>>\n+        extends AbstractAttr<DerSchema, O> implements DerAttr<O> {\n \n     private static final long serialVersionUID = 4740924251090424771L;\n \n@@ -56,9 +57,10 @@ public DerSchema getSchema() {\n     }\n \n     @Override\n-    public void setSchema(final DerSchema derSchema) {\n-        checkType(derSchema, JPADerSchema.class);\n-        this.schema = (JPADerSchema) derSchema;\n+    public void setSchema(final DerSchema schema) {\n+        checkType(schema, JPADerSchema.class);\n+        this.schema = (JPADerSchema) schema;\n+        checkSchema(this.schema);\n     }\n \n     /**"},{"sha":"1b8ab54a382ae31c49e715a9bed478f19e5c7c52","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractEntity.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractEntity.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -34,9 +34,6 @@\n \n     private static final long serialVersionUID = -9017214159540857901L;\n \n-    /**\n-     * Logger.\n-     */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractEntity.class);\n \n     protected void checkType(final Object object, final Class<?> clazz) {"},{"sha":"4bab427113cb526c1a7d762890cd220025980f3a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractPlainAttr.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -37,13 +37,14 @@\n \n @MappedSuperclass\n @PlainAttrCheck\n-public abstract class AbstractPlainAttr<O extends Any<?, ?, ?>> extends AbstractEntity<Long> implements PlainAttr<O> {\n+public abstract class AbstractPlainAttr<O extends Any<?, ?, ?>>\n+        extends AbstractAttr<PlainSchema, O> implements PlainAttr<O> {\n \n     private static final long serialVersionUID = -9115431608821806124L;\n \n     @ManyToOne(fetch = FetchType.EAGER)\n     @Column(name = \"schema_name\")\n-    private JPAPlainSchema schema;\n+    protected JPAPlainSchema schema;\n \n     @Override\n     public PlainSchema getSchema() {\n@@ -54,6 +55,7 @@ public PlainSchema getSchema() {\n     public void setSchema(final PlainSchema schema) {\n         checkType(schema, JPAPlainSchema.class);\n         this.schema = (JPAPlainSchema) schema;\n+        checkSchema(this.schema);\n     }\n \n     protected abstract boolean addForMultiValue(PlainAttrValue attrValue);"},{"sha":"946b09b1bf84290d21db1a6c6e5ab85044258769","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractVirAttr.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractVirAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractVirAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractVirAttr.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -33,7 +33,8 @@\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n \n @MappedSuperclass\n-public abstract class AbstractVirAttr<O extends Any<?, ?, ?>> extends AbstractEntity<Long> implements VirAttr<O> {\n+public abstract class AbstractVirAttr<O extends Any<?, ?, ?>>\n+        extends AbstractAttr<VirSchema, O> implements VirAttr<O> {\n \n     private static final long serialVersionUID = 5023204776925954907L;\n \n@@ -74,8 +75,9 @@ public VirSchema getSchema() {\n     }\n \n     @Override\n-    public void setSchema(final VirSchema virSchema) {\n-        checkType(virSchema, JPAVirSchema.class);\n-        this.schema = (JPAVirSchema) virSchema;\n+    public void setSchema(final VirSchema schema) {\n+        checkType(schema, JPAVirSchema.class);\n+        this.schema = (JPAVirSchema) schema;\n+        checkSchema(this.schema);\n     }\n }"},{"sha":"6fba644eaca4ea13b53e910e8117d1bf61bead1e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAnyTypeClass.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyTypeClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyTypeClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAnyTypeClass.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -63,15 +63,15 @@ public void setKey(final String name) {\n     }\n \n     @Override\n-    public boolean add(final PlainSchema facet) {\n-        checkType(facet, JPAPlainSchema.class);\n-        return this.plainSchemas.add((JPAPlainSchema) facet);\n+    public boolean add(final PlainSchema schema) {\n+        checkType(schema, JPAPlainSchema.class);\n+        return this.plainSchemas.add((JPAPlainSchema) schema);\n     }\n \n     @Override\n-    public boolean remove(final PlainSchema facet) {\n-        checkType(facet, JPAPlainSchema.class);\n-        return this.plainSchemas.remove((JPAPlainSchema) facet);\n+    public boolean remove(final PlainSchema schema) {\n+        checkType(schema, JPAPlainSchema.class);\n+        return this.plainSchemas.remove((JPAPlainSchema) schema);\n     }\n \n     @Override\n@@ -80,15 +80,15 @@ public List<? extends PlainSchema> getPlainSchemas() {\n     }\n \n     @Override\n-    public boolean add(final DerSchema facet) {\n-        checkType(facet, JPADerSchema.class);\n-        return this.derSchemas.add((JPADerSchema) facet);\n+    public boolean add(final DerSchema schema) {\n+        checkType(schema, JPADerSchema.class);\n+        return this.derSchemas.add((JPADerSchema) schema);\n     }\n \n     @Override\n-    public boolean remove(final DerSchema facet) {\n-        checkType(facet, JPADerSchema.class);\n-        return this.derSchemas.remove((JPADerSchema) facet);\n+    public boolean remove(final DerSchema schema) {\n+        checkType(schema, JPADerSchema.class);\n+        return this.derSchemas.remove((JPADerSchema) schema);\n     }\n \n     @Override\n@@ -97,15 +97,15 @@ public List<? extends DerSchema> getDerSchemas() {\n     }\n \n     @Override\n-    public boolean add(final VirSchema facet) {\n-        checkType(facet, JPAVirSchema.class);\n-        return this.virSchemas.add((JPAVirSchema) facet);\n+    public boolean add(final VirSchema schema) {\n+        checkType(schema, JPAVirSchema.class);\n+        return this.virSchemas.add((JPAVirSchema) schema);\n     }\n \n     @Override\n-    public boolean remove(final VirSchema facet) {\n-        checkType(facet, JPAVirSchema.class);\n-        return this.virSchemas.remove((JPAVirSchema) facet);\n+    public boolean remove(final VirSchema schema) {\n+        checkType(schema, JPAVirSchema.class);\n+        return this.virSchemas.remove((JPAVirSchema) schema);\n     }\n \n     @Override"},{"sha":"b6b683b0a5bc752657e6bf565dbbcf95745607d1","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPACPlainAttr.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttr.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -31,11 +31,13 @@\n import javax.validation.Valid;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n+import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrUniqueValue;\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractPlainAttr;\n+import org.apache.syncope.core.persistence.jpa.entity.JPAPlainSchema;\n \n /**\n  * Configuration attribute.\n@@ -90,6 +92,18 @@ public void setOwner(final Conf owner) {\n         this.owner = (JPAConf) owner;\n     }\n \n+    /**\n+     * Explicitly overrides default schema check (used for users, groups and any objects) since Conf does not own any\n+     * type reference.\n+     *\n+     * @param schema schema for this attribute\n+     */\n+    @Override\n+    public void setSchema(final PlainSchema schema) {\n+        checkType(schema, JPAPlainSchema.class);\n+        this.schema = (JPAPlainSchema) schema;\n+    }\n+\n     @Override\n     protected boolean addForMultiValue(final PlainAttrValue attrValue) {\n         checkType(attrValue, JPACPlainAttrValue.class);"},{"sha":"3253f6610fe1604244ebf7b23e307f6ced5e092d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPAConf.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPAConf.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -54,13 +54,7 @@ public class JPAConf extends AbstractAnnotatedEntity<Long> implements Conf {\n \n     @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n     @Valid\n-    private List<JPACPlainAttr> plainAttrs;\n-\n-    public JPAConf() {\n-        super();\n-\n-        plainAttrs = new ArrayList<>();\n-    }\n+    private List<JPACPlainAttr> plainAttrs = new ArrayList<>();\n \n     @Override\n     public Long getKey() {"},{"sha":"c592c31e7dd7a3e77ee8b0ac077a7cb52f1071cf","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm-oracle.xml","status":"modified","additions":114,"deletions":64,"changes":178,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-oracle.xml?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -36,8 +36,8 @@ under the License.\n   \n   <table-generator name=\"SEQ_UPlainAttrValue\" pk-column-value=\"SEQ_UPlainAttrValue\" initial-value=\"100\"/>\n   <table-generator name=\"SEQ_GPlainAttrValue\" pk-column-value=\"SEQ_GPlainAttrValue\" initial-value=\"100\"/>\n-  <table-generator name=\"SEQ_MAttrPlainValue\" pk-column-value=\"SEQ_MAttrPlainValue\" initial-value=\"100\"/>\n-  <table-generator name=\"SEQ_CAttrPlainValue\" pk-column-value=\"SEQ_CAttrPlainValue\" initial-value=\"100\"/>\n+  <table-generator name=\"SEQ_APlainAttrValue\" pk-column-value=\"SEQ_APlainAttrValue\" initial-value=\"100\"/>\n+  <table-generator name=\"SEQ_CPlainAttrValue\" pk-column-value=\"SEQ_CPlainAttrValue\" initial-value=\"100\"/>\n \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPARealm\">\n     <attributes>\n@@ -48,6 +48,33 @@ under the License.\n     </attributes>\n   </entity>\n   \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAnyObject\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_AnyObject\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyObject\" pk-column-value=\"SEQ_AnyObject\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAARelationship\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_ARelationship\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_ARelationship\" pk-column-value=\"SEQ_ARelationship\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAMembership\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_AMembership\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AMembership\" pk-column-value=\"SEQ_AMembership\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPARole\">\n     <attributes>\n       <id name=\"id\">\n@@ -56,8 +83,8 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n-\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPADynRoleMembership\">\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPADynRoleMembership\">\n     <attributes>\n       <id name=\"id\">\n         <generated-value generator=\"SEQ_DynRoleMembership\" strategy=\"TABLE\"/>\n@@ -74,63 +101,74 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n-\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGroup\">\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAURelationship\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_Group\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_Group\" pk-column-value=\"SEQ_Group\" initial-value=\"100\"/>\n+        <generated-value generator=\"SEQ_URelationship\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_URelationship\" pk-column-value=\"SEQ_URelationship\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n-\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPADynGroupMembership\">\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUMembership\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_DynGroupMembership\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_DynGroupMembership\" pk-column-value=\"SEQ_DynGroupMembership\" initial-value=\"100\"/>\n+        <generated-value generator=\"SEQ_UMembership\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_UMembership\" pk-column-value=\"SEQ_UMembership\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n   \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.membership.JPAMembership\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGroup\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_Membership\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_Membership\" pk-column-value=\"SEQ_Membership\" initial-value=\"100\"/>\n+        <generated-value generator=\"SEQ_Group\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_Group\" pk-column-value=\"SEQ_Group\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUMapping\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAADynGroupMembership\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_ADynGroupMembership\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_ADynGroupMembership\" pk-column-value=\"SEQ_ADynGroupMembership\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUDynGroupMembership\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_UMapping\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_UMapping\" pk-column-value=\"SEQ_UMapping\" initial-value=\"100\"/>\n+        <generated-value generator=\"SEQ_UDynGroupMembership\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_UDynGroupMembership\" pk-column-value=\"SEQ_UDynGroupMembership\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGMapping\">\n+\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.resource.JPAProvision\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_GMapping\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_GMapping\" pk-column-value=\"SEQ_GMapping\" initial-value=\"100\"/>\n+        <generated-value generator=\"SEQ_Provision\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_Provision\" pk-column-value=\"SEQ_Provision\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUMappingItem\">\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.resource.JPAMapping\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_UMappingItem\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_UMappingItem\" pk-column-value=\"SEQ_UMappingItem\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_Mapping\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_Mapping\" pk-column-value=\"SEQ_Mapping\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGMappingItem\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.resource.JPAMappingItem\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_GMappingItem\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_GMappingItem\" pk-column-value=\"SEQ_GMappingItem\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_MappingItem\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_MappingItem\" pk-column-value=\"SEQ_MappingItem\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>\n@@ -144,6 +182,14 @@ under the License.\n     </attributes>\n   </entity>\n \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttr\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_APlainAttr\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_APlainAttr\" pk-column-value=\"SEQ_APlainAttr\" initial-value=\"1000\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUPlainAttr\">\n     <attributes>\n       <id name=\"id\">\n@@ -160,39 +206,39 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGPlainAttrTemplate\">\n-    <attributes>\n-      <id name=\"id\">\n-        <generated-value generator=\"SEQ_GPlainAttrTemplate\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_GPlainAttrTemplate\" pk-column-value=\"SEQ_GPlainAttrTemplate\" initial-value=\"1000\"/>\n-      </id>\n-    </attributes>\n-  </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.membership.JPAMPlainAttr\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttr\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_MPlainAttr\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_MPlainAttr\" pk-column-value=\"SEQ_MPlainAttr\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_CAttrPlain\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_CAttrPlain\" pk-column-value=\"SEQ_CAttrPlain\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.membership.JPAMPlainAttrTemplate\">\n+\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttrValue\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_MPlainAttrTemplate\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_MPlainAttrTemplate\" pk-column-value=\"SEQ_MPlainAttrTemplate\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_APlainAttrValue\" strategy=\"TABLE\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttr\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttrUniqueValue\">\n+    <table>\n+      <unique-constraint>\n+        <column-name>booleanValue</column-name>\n+        <column-name>dateValue</column-name>\n+        <column-name>stringValue</column-name>\n+        <column-name>doubleValue</column-name>\n+        <column-name>longValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+    </table>\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_CAttrPlain\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_CAttrPlain\" pk-column-value=\"SEQ_CAttrPlain\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_APlainAttrValue\" strategy=\"TABLE\"/>\n       </id>\n     </attributes>\n-  </entity>\n-    \n+  </entity>    \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUPlainAttrValue\">\n     <attributes>\n       <id name=\"id\">\n@@ -241,14 +287,14 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.membership.JPAMPlainAttrValue\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrValue\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_MAttrPlainValue\" strategy=\"TABLE\"/>\n+        <generated-value generator=\"SEQ_CPlainAttrValue\" strategy=\"TABLE\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.membership.JPAMPlainAttrUniqueValue\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue\">\n     <table>\n       <unique-constraint>\n         <column-name>booleanValue</column-name>\n@@ -261,31 +307,25 @@ under the License.\n     </table>\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_MAttrPlainValue\" strategy=\"TABLE\"/>\n+        <generated-value generator=\"SEQ_CPlainAttrValue\" strategy=\"TABLE\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrValue\">\n+\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplate\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_CAttrPlainValue\" strategy=\"TABLE\"/>\n+        <generated-value generator=\"SEQ_AnyTemplate\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyTemplate\" pk-column-value=\"SEQ_AnyTemplate\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue\">\n-    <table>\n-      <unique-constraint>\n-        <column-name>booleanValue</column-name>\n-        <column-name>dateValue</column-name>\n-        <column-name>stringValue</column-name>\n-        <column-name>doubleValue</column-name>\n-        <column-name>longValue</column-name>\n-        <column-name>schema_name</column-name>\n-      </unique-constraint>\n-    </table>\n+\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyFilter\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_CAttrPlainValue\" strategy=\"TABLE\"/>\n+        <generated-value generator=\"SEQ_AnyFilter\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyFilter\" pk-column-value=\"SEQ_AnyFilter\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>\n@@ -340,6 +380,15 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPAAnyAbout\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_AnyAbout\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyAbout\" pk-column-value=\"SEQ_AnyAbout\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPANotification\">\n     <attributes>\n       <id name=\"id\">\n@@ -348,6 +397,7 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPASecurityQuestion\">\n     <attributes>\n       <id name=\"id\">"},{"sha":"c592c31e7dd7a3e77ee8b0ac077a7cb52f1071cf","filename":"core/persistence-jpa/src/main/resources/META-INF/spring-orm-sqlserver.xml","status":"modified","additions":114,"deletions":64,"changes":178,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring-orm-sqlserver.xml?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -36,8 +36,8 @@ under the License.\n   \n   <table-generator name=\"SEQ_UPlainAttrValue\" pk-column-value=\"SEQ_UPlainAttrValue\" initial-value=\"100\"/>\n   <table-generator name=\"SEQ_GPlainAttrValue\" pk-column-value=\"SEQ_GPlainAttrValue\" initial-value=\"100\"/>\n-  <table-generator name=\"SEQ_MAttrPlainValue\" pk-column-value=\"SEQ_MAttrPlainValue\" initial-value=\"100\"/>\n-  <table-generator name=\"SEQ_CAttrPlainValue\" pk-column-value=\"SEQ_CAttrPlainValue\" initial-value=\"100\"/>\n+  <table-generator name=\"SEQ_APlainAttrValue\" pk-column-value=\"SEQ_APlainAttrValue\" initial-value=\"100\"/>\n+  <table-generator name=\"SEQ_CPlainAttrValue\" pk-column-value=\"SEQ_CPlainAttrValue\" initial-value=\"100\"/>\n \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPARealm\">\n     <attributes>\n@@ -48,6 +48,33 @@ under the License.\n     </attributes>\n   </entity>\n   \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAnyObject\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_AnyObject\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyObject\" pk-column-value=\"SEQ_AnyObject\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAARelationship\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_ARelationship\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_ARelationship\" pk-column-value=\"SEQ_ARelationship\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAMembership\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_AMembership\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AMembership\" pk-column-value=\"SEQ_AMembership\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPARole\">\n     <attributes>\n       <id name=\"id\">\n@@ -57,15 +84,15 @@ under the License.\n     </attributes>\n   </entity>\n   \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPADynRoleMembership\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPADynRoleMembership\">\n     <attributes>\n       <id name=\"id\">\n         <generated-value generator=\"SEQ_DynRoleMembership\" strategy=\"TABLE\"/>\n         <table-generator name=\"SEQ_DynRoleMembership\" pk-column-value=\"SEQ_DynRoleMembership\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n-  \n+\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUser\">\n     <attributes>\n       <id name=\"id\">\n@@ -74,63 +101,74 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n-\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGroup\">\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAURelationship\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_Group\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_Group\" pk-column-value=\"SEQ_Group\" initial-value=\"100\"/>\n+        <generated-value generator=\"SEQ_URelationship\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_URelationship\" pk-column-value=\"SEQ_URelationship\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n-\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPADynGroupMembership\">\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUMembership\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_DynGroupMembership\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_DynGroupMembership\" pk-column-value=\"SEQ_DynGroupMembership\" initial-value=\"100\"/>\n+        <generated-value generator=\"SEQ_UMembership\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_UMembership\" pk-column-value=\"SEQ_UMembership\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n   \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.membership.JPAMembership\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGroup\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_Membership\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_Membership\" pk-column-value=\"SEQ_Membership\" initial-value=\"100\"/>\n+        <generated-value generator=\"SEQ_Group\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_Group\" pk-column-value=\"SEQ_Group\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n \n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUMapping\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAADynGroupMembership\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_ADynGroupMembership\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_ADynGroupMembership\" pk-column-value=\"SEQ_ADynGroupMembership\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUDynGroupMembership\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_UMapping\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_UMapping\" pk-column-value=\"SEQ_UMapping\" initial-value=\"100\"/>\n+        <generated-value generator=\"SEQ_UDynGroupMembership\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_UDynGroupMembership\" pk-column-value=\"SEQ_UDynGroupMembership\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGMapping\">\n+\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.resource.JPAProvision\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_GMapping\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_GMapping\" pk-column-value=\"SEQ_GMapping\" initial-value=\"100\"/>\n+        <generated-value generator=\"SEQ_Provision\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_Provision\" pk-column-value=\"SEQ_Provision\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUMappingItem\">\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.resource.JPAMapping\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_UMappingItem\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_UMappingItem\" pk-column-value=\"SEQ_UMappingItem\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_Mapping\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_Mapping\" pk-column-value=\"SEQ_Mapping\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGMappingItem\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.resource.JPAMappingItem\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_GMappingItem\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_GMappingItem\" pk-column-value=\"SEQ_GMappingItem\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_MappingItem\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_MappingItem\" pk-column-value=\"SEQ_MappingItem\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>\n@@ -144,6 +182,14 @@ under the License.\n     </attributes>\n   </entity>\n \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttr\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_APlainAttr\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_APlainAttr\" pk-column-value=\"SEQ_APlainAttr\" initial-value=\"1000\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUPlainAttr\">\n     <attributes>\n       <id name=\"id\">\n@@ -160,39 +206,39 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.group.JPAGPlainAttrTemplate\">\n-    <attributes>\n-      <id name=\"id\">\n-        <generated-value generator=\"SEQ_GPlainAttrTemplate\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_GPlainAttrTemplate\" pk-column-value=\"SEQ_GPlainAttrTemplate\" initial-value=\"1000\"/>\n-      </id>\n-    </attributes>\n-  </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.membership.JPAMPlainAttr\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttr\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_MPlainAttr\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_MPlainAttr\" pk-column-value=\"SEQ_MPlainAttr\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_CAttrPlain\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_CAttrPlain\" pk-column-value=\"SEQ_CAttrPlain\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.membership.JPAMPlainAttrTemplate\">\n+\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttrValue\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_MPlainAttrTemplate\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_MPlainAttrTemplate\" pk-column-value=\"SEQ_MPlainAttrTemplate\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_APlainAttrValue\" strategy=\"TABLE\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttr\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.anyobject.JPAAPlainAttrUniqueValue\">\n+    <table>\n+      <unique-constraint>\n+        <column-name>booleanValue</column-name>\n+        <column-name>dateValue</column-name>\n+        <column-name>stringValue</column-name>\n+        <column-name>doubleValue</column-name>\n+        <column-name>longValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+    </table>\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_CAttrPlain\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_CAttrPlain\" pk-column-value=\"SEQ_CAttrPlain\" initial-value=\"1000\"/>\n+        <generated-value generator=\"SEQ_APlainAttrValue\" strategy=\"TABLE\"/>\n       </id>\n     </attributes>\n-  </entity>\n-    \n+  </entity>    \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.user.JPAUPlainAttrValue\">\n     <attributes>\n       <id name=\"id\">\n@@ -241,14 +287,14 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.membership.JPAMPlainAttrValue\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrValue\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_MAttrPlainValue\" strategy=\"TABLE\"/>\n+        <generated-value generator=\"SEQ_CPlainAttrValue\" strategy=\"TABLE\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.membership.JPAMPlainAttrUniqueValue\">\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue\">\n     <table>\n       <unique-constraint>\n         <column-name>booleanValue</column-name>\n@@ -261,31 +307,25 @@ under the License.\n     </table>\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_MAttrPlainValue\" strategy=\"TABLE\"/>\n+        <generated-value generator=\"SEQ_CPlainAttrValue\" strategy=\"TABLE\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrValue\">\n+\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyTemplate\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_CAttrPlainValue\" strategy=\"TABLE\"/>\n+        <generated-value generator=\"SEQ_AnyTemplate\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyTemplate\" pk-column-value=\"SEQ_AnyTemplate\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>\n-  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.conf.JPACPlainAttrUniqueValue\">\n-    <table>\n-      <unique-constraint>\n-        <column-name>booleanValue</column-name>\n-        <column-name>dateValue</column-name>\n-        <column-name>stringValue</column-name>\n-        <column-name>doubleValue</column-name>\n-        <column-name>longValue</column-name>\n-        <column-name>schema_name</column-name>\n-      </unique-constraint>\n-    </table>\n+\n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.task.JPAAnyFilter\">\n     <attributes>\n       <id name=\"id\">\n-        <generated-value generator=\"SEQ_CAttrPlainValue\" strategy=\"TABLE\"/>\n+        <generated-value generator=\"SEQ_AnyFilter\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyFilter\" pk-column-value=\"SEQ_AnyFilter\" initial-value=\"1000\"/>\n       </id>\n     </attributes>\n   </entity>\n@@ -340,6 +380,15 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  \n+  <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPAAnyAbout\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_AnyAbout\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_AnyAbout\" pk-column-value=\"SEQ_AnyAbout\" initial-value=\"100\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPANotification\">\n     <attributes>\n       <id name=\"id\">\n@@ -348,6 +397,7 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  \n   <entity class=\"org.apache.syncope.core.persistence.jpa.entity.JPASecurityQuestion\">\n     <attributes>\n       <id name=\"id\">"},{"sha":"f64e3145fd89f4910c6daeb29c1834347bffe371","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/DerAttrTest.java","status":"modified","additions":29,"deletions":6,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FDerAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FDerAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FDerAttrTest.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -25,10 +25,12 @@\n import static org.junit.Assert.assertTrue;\n \n import java.util.List;\n+import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n import org.apache.syncope.core.persistence.api.dao.DerAttrDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.group.GDerAttr;\n import org.apache.syncope.core.persistence.api.entity.group.GPlainAttrValue;\n@@ -56,6 +58,9 @@ public class DerAttrTest extends AbstractTest {\n     @Autowired\n     private DerSchemaDAO derSchemaDAO;\n \n+    @Autowired\n+    private AnyTypeClassDAO anyTypeClassDAO;\n+\n     @Test\n     public void findAll() {\n         List<UDerAttr> list = derAttrDAO.findAll(UDerAttr.class);\n@@ -132,19 +137,28 @@ public void delete() {\n \n     @Test\n     public void issueSYNCOPE134User() {\n+        AnyTypeClass other = anyTypeClassDAO.find(\"other\");\n+\n         DerSchema sderived = entityFactory.newEntity(DerSchema.class);\n         sderived.setKey(\"sderived\");\n         sderived.setExpression(\"status + ' - ' + username + ' - ' + creationDate + '[' + failedLogins + ']'\");\n \n         sderived = derSchemaDAO.save(sderived);\n+\n         derSchemaDAO.flush();\n \n-        DerSchema actual = derSchemaDAO.find(\"sderived\");\n-        assertNotNull(\"expected save to work\", actual);\n-        assertEquals(sderived, actual);\n+        other.add(sderived);\n+        sderived.setAnyTypeClass(other);\n+\n+        derSchemaDAO.flush();\n+\n+        sderived = derSchemaDAO.find(\"sderived\");\n+        assertNotNull(\"expected save to work\", sderived);\n+        assertEquals(other, sderived.getAnyTypeClass());\n \n         User owner = userDAO.find(3L);\n         assertNotNull(\"did not get expected user\", owner);\n+        owner.add(other);\n \n         UDerAttr derAttr = entityFactory.newEntity(UDerAttr.class);\n         derAttr.setOwner(owner);\n@@ -165,19 +179,28 @@ public void issueSYNCOPE134User() {\n \n     @Test\n     public void issueSYNCOPE134Group() {\n+        AnyTypeClass genericMembership = anyTypeClassDAO.find(\"generic membership\");\n+\n         DerSchema sderived = entityFactory.newEntity(DerSchema.class);\n         sderived.setKey(\"sderived\");\n         sderived.setExpression(\"name\");\n \n         sderived = derSchemaDAO.save(sderived);\n+\n         derSchemaDAO.flush();\n \n-        DerSchema actual = derSchemaDAO.find(\"sderived\");\n-        assertNotNull(\"expected save to work\", actual);\n-        assertEquals(sderived, actual);\n+        genericMembership.add(sderived);\n+        sderived.setAnyTypeClass(genericMembership);\n+\n+        derSchemaDAO.flush();\n+\n+        sderived = derSchemaDAO.find(\"sderived\");\n+        assertNotNull(\"expected save to work\", sderived);\n+        assertEquals(genericMembership, sderived.getAnyTypeClass());\n \n         Group owner = groupDAO.find(7L);\n         assertNotNull(\"did not get expected group\", owner);\n+        owner.add(genericMembership);\n \n         GDerAttr derAttr = entityFactory.newEntity(GDerAttr.class);\n         derAttr.setOwner(owner);"},{"sha":"014ee64722bf9fb4e2505e03dba79cc4ecde2d3d","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/PlainAttrTest.java","status":"renamed","additions":24,"deletions":23,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FPlainAttrTest.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -47,7 +47,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional\n-public class AttrTest extends AbstractTest {\n+public class PlainAttrTest extends AbstractTest {\n \n     @Autowired\n     private UserDAO userDAO;\n@@ -81,21 +81,21 @@ public void save() throws ClassNotFoundException {\n         PlainSchema emailSchema = plainSchemaDAO.find(\"email\");\n         assertNotNull(emailSchema);\n \n-        UPlainAttr attribute = entityFactory.newEntity(UPlainAttr.class);\n-        attribute.setSchema(emailSchema);\n-        attribute.setOwner(user);\n+        UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n+        attr.setOwner(user);\n+        attr.setSchema(emailSchema);\n \n         Exception thrown = null;\n         try {\n-            attribute.add(\"john.doe@gmail.com\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n-            attribute.add(\"mario.rossi@gmail.com\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n+            attr.add(\"john.doe@gmail.com\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n+            attr.add(\"mario.rossi@gmail.com\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n         } catch (ValidationException e) {\n             thrown = e;\n         }\n         assertNull(\"no validation exception expected here \", thrown);\n \n         try {\n-            attribute.add(\"http://www.apache.org\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n+            attr.add(\"http://www.apache.org\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n         } catch (ValidationException e) {\n             thrown = e;\n         }\n@@ -113,8 +113,8 @@ public void saveWithEnum() throws ClassNotFoundException {\n         assertNotNull(gender.getEnumerationValues());\n \n         UPlainAttr attribute = entityFactory.newEntity(UPlainAttr.class);\n-        attribute.setSchema(gender);\n         attribute.setOwner(user);\n+        attribute.setSchema(gender);\n         user.add(attribute);\n \n         Exception thrown = null;\n@@ -147,17 +147,18 @@ public void validateAndSave() {\n         PlainSchema fullnameSchema = plainSchemaDAO.find(\"fullname\");\n         assertNotNull(fullnameSchema);\n \n-        UPlainAttr attribute = entityFactory.newEntity(UPlainAttr.class);\n-        attribute.setSchema(emailSchema);\n+        UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n+        attr.setOwner(user);\n+        attr.setSchema(emailSchema);\n \n         UPlainAttrUniqueValue uauv = entityFactory.newEntity(UPlainAttrUniqueValue.class);\n-        uauv.setAttr(attribute);\n+        uauv.setAttr(attr);\n         uauv.setSchema(fullnameSchema);\n         uauv.setStringValue(\"a value\");\n \n-        attribute.setUniqueValue(uauv);\n+        attr.setUniqueValue(uauv);\n \n-        user.add(attribute);\n+        user.add(attr);\n \n         InvalidEntityException iee = null;\n         try {\n@@ -182,11 +183,11 @@ public void saveWithEncrypted() throws Exception {\n         assertNotNull(obscureSchema.getSecretKey());\n         assertNotNull(obscureSchema.getCipherAlgorithm());\n \n-        UPlainAttr attribute = entityFactory.newEntity(UPlainAttr.class);\n-        attribute.setSchema(obscureSchema);\n-        attribute.add(\"testvalue\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n-        attribute.setOwner(user);\n-        user.add(attribute);\n+        UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n+        attr.setOwner(user);\n+        attr.setSchema(obscureSchema);\n+        attr.add(\"testvalue\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n+        user.add(attr);\n \n         userDAO.save(user);\n \n@@ -209,11 +210,11 @@ public void saveWithBinary() throws UnsupportedEncodingException {\n         new Random().nextBytes(bytes);\n         final String photoB64Value = new String(Base64.encode(bytes), SyncopeConstants.DEFAULT_ENCODING);\n \n-        UPlainAttr attribute = entityFactory.newEntity(UPlainAttr.class);\n-        attribute.setSchema(photoSchema);\n-        attribute.add(photoB64Value, anyUtilsFactory.getInstance(AnyTypeKind.USER));\n-        attribute.setOwner(user);\n-        user.add(attribute);\n+        UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n+        attr.setOwner(user);\n+        attr.setSchema(photoSchema);\n+        attr.add(photoB64Value, anyUtilsFactory.getInstance(AnyTypeKind.USER));\n+        user.add(attr);\n \n         userDAO.save(user);\n ","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/entity/AttrTest.java"},{"sha":"b32e970ddab7008ad5e90d12cff26c6169c04294","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/GroupTest.java","status":"modified","additions":15,"deletions":10,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FGroupTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FGroupTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FGroupTest.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n+import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainAttrDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainAttrValueDAO;\n@@ -88,6 +89,9 @@ public class GroupTest extends AbstractTest {\n     @Autowired\n     private PlainAttrValueDAO plainAttrValueDAO;\n \n+    @Autowired\n+    private AnyTypeClassDAO anyTypeClassDAO;\n+\n     @Test(expected = InvalidEntityException.class)\n     public void saveWithTwoOwners() {\n         Group root = groupDAO.find(\"root\");\n@@ -154,12 +158,13 @@ public void udynMembership() {\n         User user = entityFactory.newEntity(User.class);\n         user.setUsername(\"username\");\n         user.setRealm(realmDAO.find(\"/even/two\"));\n+        user.add(anyTypeClassDAO.find(\"minimal other\"));\n \n-        UPlainAttr attribute = entityFactory.newEntity(UPlainAttr.class);\n-        attribute.setSchema(plainSchemaDAO.find(\"cool\"));\n-        attribute.setOwner(user);\n-        attribute.add(\"true\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n-        user.add(attribute);\n+        UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n+        attr.setOwner(user);\n+        attr.setSchema(plainSchemaDAO.find(\"cool\"));\n+        attr.add(\"true\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n+        user.add(attr);\n \n         user = userDAO.save(user);\n         Long newUserKey = user.getKey();\n@@ -248,11 +253,11 @@ public void adynMembership() {\n         anyObject.setType(anyTypeDAO.find(\"OTHER\"));\n         anyObject.setRealm(realmDAO.find(\"/even/two\"));\n \n-        APlainAttr attribute = entityFactory.newEntity(APlainAttr.class);\n-        attribute.setSchema(plainSchemaDAO.find(\"cool\"));\n-        attribute.setOwner(anyObject);\n-        attribute.add(\"true\", anyUtilsFactory.getInstance(AnyTypeKind.ANY_OBJECT));\n-        anyObject.add(attribute);\n+        APlainAttr attr = entityFactory.newEntity(APlainAttr.class);\n+        attr.setOwner(anyObject);\n+        attr.setSchema(plainSchemaDAO.find(\"cool\"));\n+        attr.add(\"true\", anyUtilsFactory.getInstance(AnyTypeKind.ANY_OBJECT));\n+        anyObject.add(attr);\n \n         anyObject = anyObjectDAO.save(anyObject);\n         Long newAnyObjectKey = anyObject.getKey();"},{"sha":"ae4220c417970ce600794c9ed284d258a038c54e","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/PlainAttrTest.java","status":"renamed","additions":37,"deletions":14,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FPlainAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FPlainAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FPlainAttrTest.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -28,12 +28,14 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n import org.apache.syncope.core.persistence.api.dao.DerAttrDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainAttrDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainAttrValueDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.user.UDerAttr;\n@@ -46,7 +48,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional\n-public class AttrTest extends AbstractTest {\n+public class PlainAttrTest extends AbstractTest {\n \n     @Autowired\n     private PlainAttrDAO plainAttrDAO;\n@@ -66,6 +68,9 @@ public class AttrTest extends AbstractTest {\n     @Autowired\n     private UserDAO userDAO;\n \n+    @Autowired\n+    private AnyTypeClassDAO anyTypeClassDAO;\n+\n     @Test\n     public void deleteAttribute() {\n         plainAttrDAO.delete(117L, UPlainAttr.class);\n@@ -97,17 +102,27 @@ public void checkForEnumType() {\n         user.setPassword(\"password123\", CipherAlgorithm.SHA);\n         assertNotNull(user);\n \n-        PlainSchema schema = entityFactory.newEntity(PlainSchema.class);\n-        schema.setType(AttrSchemaType.Enum);\n-        schema.setKey(\"color\");\n-        schema.setEnumerationValues(\"red\" + SyncopeConstants.ENUM_VALUES_SEPARATOR + \"yellow\");\n+        AnyTypeClass other = anyTypeClassDAO.find(\"other\");\n+\n+        PlainSchema color = entityFactory.newEntity(PlainSchema.class);\n+        color.setType(AttrSchemaType.Enum);\n+        color.setKey(\"color\");\n+        color.setEnumerationValues(\"red\" + SyncopeConstants.ENUM_VALUES_SEPARATOR + \"yellow\");\n+\n+        color = plainSchemaDAO.save(color);\n+\n+        other.add(color);\n+        color.setAnyTypeClass(other);\n+\n+        plainSchemaDAO.flush();\n \n-        PlainSchema actualSchema = plainSchemaDAO.save(schema);\n-        assertNotNull(actualSchema);\n+        color = plainSchemaDAO.find(\"color\");\n+        assertNotNull(\"expected save to work\", color);\n+        assertEquals(other, color.getAnyTypeClass());\n \n         UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n-        attr.setSchema(actualSchema);\n         attr.setOwner(user);\n+        attr.setSchema(color);\n         attr.add(\"yellow\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n         user.add(attr);\n \n@@ -116,23 +131,31 @@ public void checkForEnumType() {\n \n         user = userDAO.find(1L);\n         assertNotNull(user);\n-        assertNotNull(user.getPlainAttr(schema.getKey()));\n-        assertNotNull(user.getPlainAttr(schema.getKey()).getValues());\n-        assertEquals(user.getPlainAttr(schema.getKey()).getValues().size(), 1);\n+        assertNotNull(user.getPlainAttr(color.getKey()));\n+        assertNotNull(user.getPlainAttr(color.getKey()).getValues());\n+        assertEquals(user.getPlainAttr(color.getKey()).getValues().size(), 1);\n     }\n \n     @Test\n     public void derAttrFromSpecialAttrs() {\n+        AnyTypeClass other = anyTypeClassDAO.find(\"other\");\n+\n         DerSchema sderived = entityFactory.newEntity(DerSchema.class);\n         sderived.setKey(\"sderived\");\n         sderived.setExpression(\"username + ' - ' + creationDate + '[' + failedLogins + ']'\");\n \n         sderived = derSchemaDAO.save(sderived);\n+\n+        derSchemaDAO.flush();\n+\n+        other.add(sderived);\n+        sderived.setAnyTypeClass(other);\n+\n         derSchemaDAO.flush();\n \n-        DerSchema actual = derSchemaDAO.find(\"sderived\");\n-        assertNotNull(\"expected save to work\", actual);\n-        assertEquals(sderived, actual);\n+        sderived = derSchemaDAO.find(\"sderived\");\n+        assertNotNull(\"expected save to work\", sderived);\n+        assertEquals(other, sderived.getAnyTypeClass());\n \n         User owner = userDAO.find(3L);\n         assertNotNull(\"did not get expected user\", owner);","previous_filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/AttrTest.java"},{"sha":"71fa878146f4c30ff71a1d00d90f5fe7d33f6c97","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/relationship/RoleTest.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/63108c8f89ba92c5517133545df2350971c703b5/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Frelationship%2FRoleTest.java?ref=63108c8f89ba92c5517133545df2350971c703b5","patch":"@@ -32,6 +32,7 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.Entitlement;\n+import org.apache.syncope.core.persistence.api.dao.AnyTypeClassDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n@@ -64,6 +65,9 @@ public class RoleTest extends AbstractTest {\n     @Autowired\n     private UserDAO userDAO;\n \n+    @Autowired\n+    private AnyTypeClassDAO anyTypeClassDAO;\n+\n     /**\n      * Static copy of {@link org.apache.syncope.core.persistence.jpa.dao.JPAUserDAO} method with same signature:\n      * required for avoiding creating new transaction - good for general use case but bad for the way how\n@@ -84,12 +88,13 @@ public void dynMembership() {\n         User user = entityFactory.newEntity(User.class);\n         user.setUsername(\"username\");\n         user.setRealm(realmDAO.find(\"/even/two\"));\n+        user.add(anyTypeClassDAO.find(\"minimal other\"));\n \n-        UPlainAttr attribute = entityFactory.newEntity(UPlainAttr.class);\n-        attribute.setSchema(plainSchemaDAO.find(\"cool\"));\n-        attribute.setOwner(user);\n-        attribute.add(\"true\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n-        user.add(attribute);\n+        UPlainAttr attr = entityFactory.newEntity(UPlainAttr.class);\n+        attr.setOwner(user);\n+        attr.setSchema(plainSchemaDAO.find(\"cool\"));\n+        attr.add(\"true\", anyUtilsFactory.getInstance(AnyTypeKind.USER));\n+        user.add(attr);\n \n         user = userDAO.save(user);\n         Long newUserKey = user.getKey();"}]}