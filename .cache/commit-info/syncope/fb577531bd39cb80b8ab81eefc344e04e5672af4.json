{"sha":"fb577531bd39cb80b8ab81eefc344e04e5672af4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmZiNTc3NTMxYmQzOWNiODBiOGFiODFlZWZjMzQ0ZTA0ZTU2NzJhZjQ=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-10-19T14:23:08Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2015-10-19T14:23:08Z"},"message":"[SYNCOPE-712] Searching roles by parent","tree":{"sha":"0e19a6bef1c5018583836f3f26061a387daf6368","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0e19a6bef1c5018583836f3f26061a387daf6368"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/fb577531bd39cb80b8ab81eefc344e04e5672af4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fb577531bd39cb80b8ab81eefc344e04e5672af4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fb577531bd39cb80b8ab81eefc344e04e5672af4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fb577531bd39cb80b8ab81eefc344e04e5672af4/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"03c9bc2fe57b825a1cdfa4e8eb0fa0ce66ec40b0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03c9bc2fe57b825a1cdfa4e8eb0fa0ce66ec40b0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03c9bc2fe57b825a1cdfa4e8eb0fa0ce66ec40b0"}],"stats":{"total":31,"additions":25,"deletions":6},"files":[{"sha":"ebac233c1035b10e05dc107c3b9fb39cfb8ada81","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/SubjectSearchDAOImpl.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb577531bd39cb80b8ab81eefc344e04e5672af4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSubjectSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb577531bd39cb80b8ab81eefc344e04e5672af4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSubjectSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSubjectSearchDAOImpl.java?ref=fb577531bd39cb80b8ab81eefc344e04e5672af4","patch":"@@ -31,6 +31,7 @@\n import javax.validation.ValidationException;\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n+import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.types.SubjectType;\n@@ -59,6 +60,8 @@ public class SubjectSearchDAOImpl extends AbstractDAOImpl implements SubjectSear\n \n     private static final String EMPTY_ATTR_QUERY = \"SELECT subject_id FROM user_search_attr WHERE 1=2\";\n \n+    private static final String[] SUBJECT_FIELDS = new String[] { \"parent\", \"userOwner\", \"roleOwner\" };\n+\n     @Autowired\n     private UserDAO userDAO;\n \n@@ -645,7 +648,10 @@ private String getQuery(final SubjectCond cond, final boolean not, final List<Ob\n \n         final AttributableUtil attrUtil = AttributableUtil.getInstance(type.asAttributableType());\n \n-        Field subjectField = ReflectionUtils.findField(attrUtil.attributableClass(), cond.getSchema());\n+        int subjFieldIdx = ArrayUtils.indexOf(SUBJECT_FIELDS, StringUtils.substringBeforeLast(cond.getSchema(), \"_\"));\n+        Field subjectField = ReflectionUtils.findField(\n+                attrUtil.attributableClass(),\n+                subjFieldIdx == -1 ? cond.getSchema() : SUBJECT_FIELDS[subjFieldIdx]);\n         if (subjectField == null) {\n             LOG.warn(\"Ignoring invalid schema '{}'\", cond.getSchema());\n             return EMPTY_ATTR_QUERY;\n@@ -682,8 +688,7 @@ private String getQuery(final SubjectCond cond, final boolean not, final List<Ob\n             if (BeanUtils.findDeclaredMethodWithMinimalParameters(subjectField.getType(), \"getId\") != null) {\n                 cond.setSchema(cond.getSchema() + \"_id\");\n                 schema.setType(AttributeSchemaType.Long);\n-            }\n-            if (BeanUtils.findDeclaredMethodWithMinimalParameters(subjectField.getType(), \"getName\") != null) {\n+            } else if (BeanUtils.findDeclaredMethodWithMinimalParameters(subjectField.getType(), \"getName\") != null) {\n                 cond.setSchema(cond.getSchema() + \"_name\");\n                 schema.setType(AttributeSchemaType.String);\n             }"},{"sha":"639ab2ed24acd6175c6021cace80c357506ae6f4","filename":"core/src/main/java/org/apache/syncope/core/services/RoleServiceImpl.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb577531bd39cb80b8ab81eefc344e04e5672af4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb577531bd39cb80b8ab81eefc344e04e5672af4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java?ref=fb577531bd39cb80b8ab81eefc344e04e5672af4","patch":"@@ -33,7 +33,6 @@\n import org.apache.syncope.common.types.ResourceDeassociationActionType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n-import org.apache.syncope.core.persistence.dao.search.SearchCond;\n import org.apache.syncope.core.rest.controller.RoleController;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n@@ -117,10 +116,16 @@ public PagedResult<RoleTO> search(final String fiql, final Integer page, final I\n     public PagedResult<RoleTO> search(\n             final String fiql, final Integer page, final Integer size, final String orderBy, final boolean details) {\n \n-        SearchCond cond = getSearchCond(fiql);\n         List<OrderByClause> orderByClauses = getOrderByClauses(orderBy);\n         return buildPagedResult(\n-                controller.search(cond, page, size, orderByClauses, details), page, size, controller.searchCount(cond));\n+                controller.search(getSearchCond(fiql),\n+                        page,\n+                        size,\n+                        orderByClauses,\n+                        details),\n+                page,\n+                size,\n+                controller.searchCount(getSearchCond(fiql)));\n     }\n \n     @Override"},{"sha":"406d9b662b1c738ca783af07c97cd2952403b51c","filename":"core/src/test/java/org/apache/syncope/core/rest/SearchTestITCase.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fb577531bd39cb80b8ab81eefc344e04e5672af4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fb577531bd39cb80b8ab81eefc344e04e5672af4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java?ref=fb577531bd39cb80b8ab81eefc344e04e5672af4","patch":"@@ -178,4 +178,13 @@ public void orderBy() {\n             assertNotNull(user);\n         }\n     }\n+\n+    @Test\n+    public void issueSYNCOPE712() {\n+        final PagedResult<RoleTO> matchingRoles = roleService.search(\n+                SyncopeClient.getRoleSearchConditionBuilder().is(\"parent\").equalTo(1L).query());\n+\n+        assertNotNull(matchingRoles);\n+        assertFalse(matchingRoles.getResult().isEmpty());\n+    }\n }"}]}